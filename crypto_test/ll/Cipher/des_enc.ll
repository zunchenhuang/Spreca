; ModuleID = 'bc/Cipher/des_enc.bc'
source_filename = "Cipher/des_enc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.DES_ks = type { [16 x %union.anon] }
%union.anon = type { [2 x i32] }

@DES_SPtrans = dso_local constant [8 x [64 x i32]] [[64 x i32] [i32 34080768, i32 524288, i32 33554434, i32 34080770, i32 33554432, i32 526338, i32 524290, i32 33554434, i32 526338, i32 34080768, i32 34078720, i32 2050, i32 33556482, i32 33554432, i32 0, i32 524290, i32 524288, i32 2, i32 33556480, i32 526336, i32 34080770, i32 34078720, i32 2050, i32 33556480, i32 2, i32 2048, i32 526336, i32 34078722, i32 2048, i32 33556482, i32 34078722, i32 0, i32 0, i32 34080770, i32 33556480, i32 524290, i32 34080768, i32 524288, i32 2050, i32 33556480, i32 34078722, i32 2048, i32 526336, i32 33554434, i32 526338, i32 2, i32 33554434, i32 34078720, i32 34080770, i32 526336, i32 34078720, i32 33556482, i32 33554432, i32 2050, i32 524290, i32 0, i32 524288, i32 33554432, i32 33556482, i32 34080768, i32 2, i32 34078722, i32 2048, i32 526338], [64 x i32] [i32 1074823184, i32 0, i32 1081344, i32 1074790400, i32 1073741840, i32 32784, i32 1073774592, i32 1081344, i32 32768, i32 1074790416, i32 16, i32 1073774592, i32 1048592, i32 1074823168, i32 1074790400, i32 16, i32 1048576, i32 1073774608, i32 1074790416, i32 32768, i32 1081360, i32 1073741824, i32 0, i32 1048592, i32 1073774608, i32 1081360, i32 1074823168, i32 1073741840, i32 1073741824, i32 1048576, i32 32784, i32 1074823184, i32 1048592, i32 1074823168, i32 1073774592, i32 1081360, i32 1074823184, i32 1048592, i32 1073741840, i32 0, i32 1073741824, i32 32784, i32 1048576, i32 1074790416, i32 32768, i32 1073741824, i32 1081360, i32 1073774608, i32 1074823168, i32 32768, i32 0, i32 1073741840, i32 16, i32 1074823184, i32 1081344, i32 1074790400, i32 1074790416, i32 1048576, i32 32784, i32 1073774592, i32 1073774608, i32 16, i32 1074790400, i32 1081344], [64 x i32] [i32 67108865, i32 67371264, i32 256, i32 67109121, i32 262145, i32 67108864, i32 67109121, i32 262400, i32 67109120, i32 262144, i32 67371008, i32 1, i32 67371265, i32 257, i32 1, i32 67371009, i32 0, i32 262145, i32 67371264, i32 256, i32 257, i32 67371265, i32 262144, i32 67108865, i32 67371009, i32 67109120, i32 262401, i32 67371008, i32 262400, i32 0, i32 67108864, i32 262401, i32 67371264, i32 256, i32 1, i32 262144, i32 257, i32 262145, i32 67371008, i32 67109121, i32 0, i32 67371264, i32 262400, i32 67371009, i32 262145, i32 67108864, i32 67371265, i32 1, i32 262401, i32 67108865, i32 67108864, i32 67371265, i32 262144, i32 67109120, i32 67109121, i32 262400, i32 67109120, i32 0, i32 67371009, i32 257, i32 67108865, i32 262401, i32 256, i32 67371008], [64 x i32] [i32 4198408, i32 268439552, i32 8, i32 272633864, i32 0, i32 272629760, i32 268439560, i32 4194312, i32 272633856, i32 268435464, i32 268435456, i32 4104, i32 268435464, i32 4198408, i32 4194304, i32 268435456, i32 272629768, i32 4198400, i32 4096, i32 8, i32 4198400, i32 268439560, i32 272629760, i32 4096, i32 4104, i32 0, i32 4194312, i32 272633856, i32 268439552, i32 272629768, i32 272633864, i32 4194304, i32 272629768, i32 4104, i32 4194304, i32 268435464, i32 4198400, i32 268439552, i32 8, i32 272629760, i32 268439560, i32 0, i32 4096, i32 4194312, i32 0, i32 272629768, i32 272633856, i32 4096, i32 268435456, i32 272633864, i32 4198408, i32 4194304, i32 272633864, i32 8, i32 268439552, i32 4198408, i32 4194312, i32 4198400, i32 272629760, i32 268439560, i32 4104, i32 268435456, i32 268435464, i32 272633856], [64 x i32] [i32 134217728, i32 65536, i32 1024, i32 134284320, i32 134283296, i32 134218752, i32 66592, i32 134283264, i32 65536, i32 32, i32 134217760, i32 66560, i32 134218784, i32 134283296, i32 134284288, i32 0, i32 66560, i32 134217728, i32 65568, i32 1056, i32 134218752, i32 66592, i32 0, i32 134217760, i32 32, i32 134218784, i32 134284320, i32 65568, i32 134283264, i32 1024, i32 1056, i32 134284288, i32 134284288, i32 134218784, i32 65568, i32 134283264, i32 65536, i32 32, i32 134217760, i32 134218752, i32 134217728, i32 66560, i32 134284320, i32 0, i32 66592, i32 134217728, i32 1024, i32 65568, i32 134218784, i32 1024, i32 0, i32 134284320, i32 134283296, i32 134284288, i32 1056, i32 65536, i32 66560, i32 134283296, i32 134218752, i32 1056, i32 32, i32 66592, i32 134283264, i32 134217760], [64 x i32] [i32 -2147483584, i32 2097216, i32 0, i32 -2145378304, i32 2097216, i32 8192, i32 -2147475392, i32 2097152, i32 8256, i32 -2145378240, i32 2105344, i32 -2147483648, i32 -2147475456, i32 -2147483584, i32 -2145386496, i32 2105408, i32 2097152, i32 -2147475392, i32 -2145386432, i32 0, i32 8192, i32 64, i32 -2145378304, i32 -2145386432, i32 -2145378240, i32 -2145386496, i32 -2147483648, i32 8256, i32 64, i32 2105344, i32 2105408, i32 -2147475456, i32 8256, i32 -2147483648, i32 -2147475456, i32 2105408, i32 -2145378304, i32 2097216, i32 0, i32 -2147475456, i32 -2147483648, i32 8192, i32 -2145386432, i32 2097152, i32 2097216, i32 -2145378240, i32 2105344, i32 64, i32 -2145378240, i32 2105344, i32 2097152, i32 -2147475392, i32 -2147483584, i32 -2145386496, i32 2105408, i32 0, i32 8192, i32 -2147483584, i32 -2147475392, i32 -2145378304, i32 -2145386496, i32 8256, i32 64, i32 -2145386432], [64 x i32] [i32 16384, i32 512, i32 16777728, i32 16777220, i32 16794116, i32 16388, i32 16896, i32 0, i32 16777216, i32 16777732, i32 516, i32 16793600, i32 4, i32 16794112, i32 16793600, i32 516, i32 16777732, i32 16384, i32 16388, i32 16794116, i32 0, i32 16777728, i32 16777220, i32 16896, i32 16793604, i32 16900, i32 16794112, i32 4, i32 16900, i32 16793604, i32 512, i32 16777216, i32 16900, i32 16793600, i32 16793604, i32 516, i32 16384, i32 512, i32 16777216, i32 16793604, i32 16777732, i32 16900, i32 16896, i32 0, i32 512, i32 16777220, i32 4, i32 16777728, i32 0, i32 16777732, i32 16777728, i32 16896, i32 516, i32 16384, i32 16794116, i32 16777216, i32 16794112, i32 4, i32 16388, i32 16794116, i32 16777220, i32 16794112, i32 16793600, i32 16388], [64 x i32] [i32 545259648, i32 545390592, i32 131200, i32 0, i32 537001984, i32 8388736, i32 545259520, i32 545390720, i32 128, i32 536870912, i32 8519680, i32 131200, i32 8519808, i32 537002112, i32 536871040, i32 545259520, i32 131072, i32 8519808, i32 8388736, i32 537001984, i32 545390720, i32 536871040, i32 0, i32 8519680, i32 536870912, i32 8388608, i32 537002112, i32 545259648, i32 8388608, i32 131072, i32 545390592, i32 128, i32 8388608, i32 131072, i32 536871040, i32 545390720, i32 131200, i32 536870912, i32 0, i32 8519680, i32 545259648, i32 537002112, i32 537001984, i32 8388736, i32 545390592, i32 128, i32 8388736, i32 537001984, i32 545390720, i32 8388608, i32 545259520, i32 536871040, i32 8519680, i32 131200, i32 537002112, i32 545259520, i32 128, i32 545390592, i32 8519808, i32 0, i32 536870912, i32 545259648, i32 131072, i32 8519808]], align 16, !dbg !0
@.str = private unnamed_addr constant [5 x i8] c"mark\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [17 x i8] c"Cipher/des_enc.c\00", section "llvm.metadata"
@__const.main.buf = private unnamed_addr constant [8 x i8] c"01234567", align 1
@__const.main.key = private unnamed_addr constant [8 x i8] c"0E329232", align 1
@__const.main.charset = private unnamed_addr constant [94 x i8] c"!#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\00", align 16

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @DES_encrypt1(i32* %data, %struct.DES_ks* %ks, i32 %enc) #0 !dbg !22 {
entry:
  %data.addr = alloca i32*, align 8
  %ks.addr = alloca %struct.DES_ks*, align 8
  %enc.addr = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %t = alloca i32, align 4
  %u = alloca i32, align 4
  %s = alloca i32*, align 8
  %tt = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ret42 = alloca i32, align 4
  %tmp43 = alloca i32, align 4
  %ret53 = alloca i32, align 4
  %tmp54 = alloca i32, align 4
  %ret98 = alloca i32, align 4
  %tmp99 = alloca i32, align 4
  %ret144 = alloca i32, align 4
  %tmp145 = alloca i32, align 4
  %ret190 = alloca i32, align 4
  %tmp191 = alloca i32, align 4
  %ret236 = alloca i32, align 4
  %tmp237 = alloca i32, align 4
  %ret282 = alloca i32, align 4
  %tmp283 = alloca i32, align 4
  %ret328 = alloca i32, align 4
  %tmp329 = alloca i32, align 4
  %ret374 = alloca i32, align 4
  %tmp375 = alloca i32, align 4
  %ret420 = alloca i32, align 4
  %tmp421 = alloca i32, align 4
  %ret466 = alloca i32, align 4
  %tmp467 = alloca i32, align 4
  %ret512 = alloca i32, align 4
  %tmp513 = alloca i32, align 4
  %ret558 = alloca i32, align 4
  %tmp559 = alloca i32, align 4
  %ret604 = alloca i32, align 4
  %tmp605 = alloca i32, align 4
  %ret650 = alloca i32, align 4
  %tmp651 = alloca i32, align 4
  %ret696 = alloca i32, align 4
  %tmp697 = alloca i32, align 4
  %ret742 = alloca i32, align 4
  %tmp743 = alloca i32, align 4
  %ret788 = alloca i32, align 4
  %tmp789 = alloca i32, align 4
  %ret834 = alloca i32, align 4
  %tmp835 = alloca i32, align 4
  %ret880 = alloca i32, align 4
  %tmp881 = alloca i32, align 4
  %ret926 = alloca i32, align 4
  %tmp927 = alloca i32, align 4
  %ret972 = alloca i32, align 4
  %tmp973 = alloca i32, align 4
  %ret1018 = alloca i32, align 4
  %tmp1019 = alloca i32, align 4
  %ret1064 = alloca i32, align 4
  %tmp1065 = alloca i32, align 4
  %ret1110 = alloca i32, align 4
  %tmp1111 = alloca i32, align 4
  %ret1156 = alloca i32, align 4
  %tmp1157 = alloca i32, align 4
  %ret1202 = alloca i32, align 4
  %tmp1203 = alloca i32, align 4
  %ret1248 = alloca i32, align 4
  %tmp1249 = alloca i32, align 4
  %ret1294 = alloca i32, align 4
  %tmp1295 = alloca i32, align 4
  %ret1340 = alloca i32, align 4
  %tmp1341 = alloca i32, align 4
  %ret1386 = alloca i32, align 4
  %tmp1387 = alloca i32, align 4
  %ret1432 = alloca i32, align 4
  %tmp1433 = alloca i32, align 4
  %ret1478 = alloca i32, align 4
  %tmp1479 = alloca i32, align 4
  %ret1520 = alloca i32, align 4
  %tmp1521 = alloca i32, align 4
  %ret1525 = alloca i32, align 4
  %tmp1526 = alloca i32, align 4
  %tt1530 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !44, metadata !DIExpression()), !dbg !45
  store %struct.DES_ks* %ks, %struct.DES_ks** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr, metadata !46, metadata !DIExpression()), !dbg !47
  %ks.addr1 = bitcast %struct.DES_ks** %ks.addr to i8*
  call void @llvm.var.annotation(i8* %ks.addr1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 14)
  store i32 %enc, i32* %enc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr, metadata !48, metadata !DIExpression()), !dbg !49
  call void @llvm.dbg.declare(metadata i32* %l, metadata !50, metadata !DIExpression()), !dbg !51
  call void @llvm.dbg.declare(metadata i32* %r, metadata !52, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.declare(metadata i32* %t, metadata !54, metadata !DIExpression()), !dbg !55
  call void @llvm.dbg.declare(metadata i32* %u, metadata !56, metadata !DIExpression()), !dbg !57
  call void @llvm.dbg.declare(metadata i32** %s, metadata !58, metadata !DIExpression()), !dbg !59
  %s2 = bitcast i32** %s to i8*, !dbg !60
  call void @llvm.var.annotation(i8* %s2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 17), !dbg !60
  %0 = load i32*, i32** %data.addr, align 8, !dbg !61
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !61
  %1 = load i32, i32* %arrayidx, align 4, !dbg !61
  store i32 %1, i32* %r, align 4, !dbg !62
  %2 = load i32*, i32** %data.addr, align 8, !dbg !63
  %arrayidx3 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !63
  %3 = load i32, i32* %arrayidx3, align 4, !dbg !63
  store i32 %3, i32* %l, align 4, !dbg !64
  call void @llvm.dbg.declare(metadata i32* %tt, metadata !65, metadata !DIExpression()), !dbg !67
  %4 = load i32, i32* %l, align 4, !dbg !67
  %shr = lshr i32 %4, 4, !dbg !67
  %5 = load i32, i32* %r, align 4, !dbg !67
  %xor = xor i32 %shr, %5, !dbg !67
  %conv = zext i32 %xor to i64, !dbg !67
  %and = and i64 %conv, 252645135, !dbg !67
  %conv4 = trunc i64 %and to i32, !dbg !67
  store i32 %conv4, i32* %tt, align 4, !dbg !67
  %6 = load i32, i32* %tt, align 4, !dbg !67
  %7 = load i32, i32* %r, align 4, !dbg !67
  %xor5 = xor i32 %7, %6, !dbg !67
  store i32 %xor5, i32* %r, align 4, !dbg !67
  %8 = load i32, i32* %tt, align 4, !dbg !67
  %shl = shl i32 %8, 4, !dbg !67
  %9 = load i32, i32* %l, align 4, !dbg !67
  %xor6 = xor i32 %9, %shl, !dbg !67
  store i32 %xor6, i32* %l, align 4, !dbg !67
  %10 = load i32, i32* %r, align 4, !dbg !67
  %shr7 = lshr i32 %10, 16, !dbg !67
  %11 = load i32, i32* %l, align 4, !dbg !67
  %xor8 = xor i32 %shr7, %11, !dbg !67
  %conv9 = zext i32 %xor8 to i64, !dbg !67
  %and10 = and i64 %conv9, 65535, !dbg !67
  %conv11 = trunc i64 %and10 to i32, !dbg !67
  store i32 %conv11, i32* %tt, align 4, !dbg !67
  %12 = load i32, i32* %tt, align 4, !dbg !67
  %13 = load i32, i32* %l, align 4, !dbg !67
  %xor12 = xor i32 %13, %12, !dbg !67
  store i32 %xor12, i32* %l, align 4, !dbg !67
  %14 = load i32, i32* %tt, align 4, !dbg !67
  %shl13 = shl i32 %14, 16, !dbg !67
  %15 = load i32, i32* %r, align 4, !dbg !67
  %xor14 = xor i32 %15, %shl13, !dbg !67
  store i32 %xor14, i32* %r, align 4, !dbg !67
  %16 = load i32, i32* %l, align 4, !dbg !67
  %shr15 = lshr i32 %16, 2, !dbg !67
  %17 = load i32, i32* %r, align 4, !dbg !67
  %xor16 = xor i32 %shr15, %17, !dbg !67
  %conv17 = zext i32 %xor16 to i64, !dbg !67
  %and18 = and i64 %conv17, 858993459, !dbg !67
  %conv19 = trunc i64 %and18 to i32, !dbg !67
  store i32 %conv19, i32* %tt, align 4, !dbg !67
  %18 = load i32, i32* %tt, align 4, !dbg !67
  %19 = load i32, i32* %r, align 4, !dbg !67
  %xor20 = xor i32 %19, %18, !dbg !67
  store i32 %xor20, i32* %r, align 4, !dbg !67
  %20 = load i32, i32* %tt, align 4, !dbg !67
  %shl21 = shl i32 %20, 2, !dbg !67
  %21 = load i32, i32* %l, align 4, !dbg !67
  %xor22 = xor i32 %21, %shl21, !dbg !67
  store i32 %xor22, i32* %l, align 4, !dbg !67
  %22 = load i32, i32* %r, align 4, !dbg !67
  %shr23 = lshr i32 %22, 8, !dbg !67
  %23 = load i32, i32* %l, align 4, !dbg !67
  %xor24 = xor i32 %shr23, %23, !dbg !67
  %conv25 = zext i32 %xor24 to i64, !dbg !67
  %and26 = and i64 %conv25, 16711935, !dbg !67
  %conv27 = trunc i64 %and26 to i32, !dbg !67
  store i32 %conv27, i32* %tt, align 4, !dbg !67
  %24 = load i32, i32* %tt, align 4, !dbg !67
  %25 = load i32, i32* %l, align 4, !dbg !67
  %xor28 = xor i32 %25, %24, !dbg !67
  store i32 %xor28, i32* %l, align 4, !dbg !67
  %26 = load i32, i32* %tt, align 4, !dbg !67
  %shl29 = shl i32 %26, 8, !dbg !67
  %27 = load i32, i32* %r, align 4, !dbg !67
  %xor30 = xor i32 %27, %shl29, !dbg !67
  store i32 %xor30, i32* %r, align 4, !dbg !67
  %28 = load i32, i32* %l, align 4, !dbg !67
  %shr31 = lshr i32 %28, 1, !dbg !67
  %29 = load i32, i32* %r, align 4, !dbg !67
  %xor32 = xor i32 %shr31, %29, !dbg !67
  %conv33 = zext i32 %xor32 to i64, !dbg !67
  %and34 = and i64 %conv33, 1431655765, !dbg !67
  %conv35 = trunc i64 %and34 to i32, !dbg !67
  store i32 %conv35, i32* %tt, align 4, !dbg !67
  %30 = load i32, i32* %tt, align 4, !dbg !67
  %31 = load i32, i32* %r, align 4, !dbg !67
  %xor36 = xor i32 %31, %30, !dbg !67
  store i32 %xor36, i32* %r, align 4, !dbg !67
  %32 = load i32, i32* %tt, align 4, !dbg !67
  %shl37 = shl i32 %32, 1, !dbg !67
  %33 = load i32, i32* %l, align 4, !dbg !67
  %xor38 = xor i32 %33, %shl37, !dbg !67
  store i32 %xor38, i32* %l, align 4, !dbg !67
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !68, metadata !DIExpression()), !dbg !70
  %34 = load i32, i32* %r, align 4, !dbg !70
  %35 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %34) #7, !dbg !70, !srcloc !71
  store i32 %35, i32* %ret, align 4, !dbg !70
  %36 = load i32, i32* %ret, align 4, !dbg !70
  store i32 %36, i32* %tmp, align 4, !dbg !70
  %37 = load i32, i32* %tmp, align 4, !dbg !70
  %conv39 = zext i32 %37 to i64, !dbg !72
  %and40 = and i64 %conv39, 4294967295, !dbg !73
  %conv41 = trunc i64 %and40 to i32, !dbg !72
  store i32 %conv41, i32* %r, align 4, !dbg !74
  call void @llvm.dbg.declare(metadata i32* %ret42, metadata !75, metadata !DIExpression()), !dbg !77
  %38 = load i32, i32* %l, align 4, !dbg !77
  %39 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %38) #7, !dbg !77, !srcloc !78
  store i32 %39, i32* %ret42, align 4, !dbg !77
  %40 = load i32, i32* %ret42, align 4, !dbg !77
  store i32 %40, i32* %tmp43, align 4, !dbg !77
  %41 = load i32, i32* %tmp43, align 4, !dbg !77
  %conv44 = zext i32 %41 to i64, !dbg !79
  %and45 = and i64 %conv44, 4294967295, !dbg !80
  %conv46 = trunc i64 %and45 to i32, !dbg !79
  store i32 %conv46, i32* %l, align 4, !dbg !81
  %42 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr, align 8, !dbg !82
  %ks47 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %42, i32 0, i32 0, !dbg !83
  %arraydecay = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks47, i64 0, i64 0, !dbg !84
  %deslong = bitcast %union.anon* %arraydecay to [2 x i32]*, !dbg !84
  %arraydecay48 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong, i64 0, i64 0, !dbg !82
  store i32* %arraydecay48, i32** %s, align 8, !dbg !85
  %43 = load i32, i32* %enc.addr, align 4, !dbg !86
  %tobool = icmp ne i32 %43, 0, !dbg !86
  br i1 %tobool, label %if.then, label %if.else, !dbg !88

if.then:                                          ; preds = %entry
  %44 = load i32, i32* %r, align 4, !dbg !89
  %45 = load i32*, i32** %s, align 8, !dbg !89
  %arrayidx49 = getelementptr inbounds i32, i32* %45, i64 0, !dbg !89
  %46 = load i32, i32* %arrayidx49, align 4, !dbg !89
  %xor50 = xor i32 %44, %46, !dbg !89
  store i32 %xor50, i32* %u, align 4, !dbg !89
  %47 = load i32, i32* %r, align 4, !dbg !89
  %48 = load i32*, i32** %s, align 8, !dbg !89
  %arrayidx51 = getelementptr inbounds i32, i32* %48, i64 1, !dbg !89
  %49 = load i32, i32* %arrayidx51, align 4, !dbg !89
  %xor52 = xor i32 %47, %49, !dbg !89
  store i32 %xor52, i32* %t, align 4, !dbg !89
  call void @llvm.dbg.declare(metadata i32* %ret53, metadata !92, metadata !DIExpression()), !dbg !94
  %50 = load i32, i32* %t, align 4, !dbg !94
  %51 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %50) #7, !dbg !94, !srcloc !95
  store i32 %51, i32* %ret53, align 4, !dbg !94
  %52 = load i32, i32* %ret53, align 4, !dbg !94
  store i32 %52, i32* %tmp54, align 4, !dbg !94
  %53 = load i32, i32* %tmp54, align 4, !dbg !94
  store i32 %53, i32* %t, align 4, !dbg !89
  %54 = load i32, i32* %u, align 4, !dbg !89
  %shr55 = lshr i32 %54, 2, !dbg !89
  %and56 = and i32 %shr55, 63, !dbg !89
  %idxprom = zext i32 %and56 to i64, !dbg !89
  %arrayidx57 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom, !dbg !89
  %55 = load i32, i32* %arrayidx57, align 4, !dbg !89
  %56 = load i32, i32* %u, align 4, !dbg !89
  %shr58 = lshr i32 %56, 10, !dbg !89
  %and59 = and i32 %shr58, 63, !dbg !89
  %idxprom60 = zext i32 %and59 to i64, !dbg !89
  %arrayidx61 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom60, !dbg !89
  %57 = load i32, i32* %arrayidx61, align 4, !dbg !89
  %xor62 = xor i32 %55, %57, !dbg !89
  %58 = load i32, i32* %u, align 4, !dbg !89
  %shr63 = lshr i32 %58, 18, !dbg !89
  %and64 = and i32 %shr63, 63, !dbg !89
  %idxprom65 = zext i32 %and64 to i64, !dbg !89
  %arrayidx66 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom65, !dbg !89
  %59 = load i32, i32* %arrayidx66, align 4, !dbg !89
  %xor67 = xor i32 %xor62, %59, !dbg !89
  %60 = load i32, i32* %u, align 4, !dbg !89
  %shr68 = lshr i32 %60, 26, !dbg !89
  %and69 = and i32 %shr68, 63, !dbg !89
  %idxprom70 = zext i32 %and69 to i64, !dbg !89
  %arrayidx71 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom70, !dbg !89
  %61 = load i32, i32* %arrayidx71, align 4, !dbg !89
  %xor72 = xor i32 %xor67, %61, !dbg !89
  %62 = load i32, i32* %t, align 4, !dbg !89
  %shr73 = lshr i32 %62, 2, !dbg !89
  %and74 = and i32 %shr73, 63, !dbg !89
  %idxprom75 = zext i32 %and74 to i64, !dbg !89
  %arrayidx76 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom75, !dbg !89
  %63 = load i32, i32* %arrayidx76, align 4, !dbg !89
  %xor77 = xor i32 %xor72, %63, !dbg !89
  %64 = load i32, i32* %t, align 4, !dbg !89
  %shr78 = lshr i32 %64, 10, !dbg !89
  %and79 = and i32 %shr78, 63, !dbg !89
  %idxprom80 = zext i32 %and79 to i64, !dbg !89
  %arrayidx81 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom80, !dbg !89
  %65 = load i32, i32* %arrayidx81, align 4, !dbg !89
  %xor82 = xor i32 %xor77, %65, !dbg !89
  %66 = load i32, i32* %t, align 4, !dbg !89
  %shr83 = lshr i32 %66, 18, !dbg !89
  %and84 = and i32 %shr83, 63, !dbg !89
  %idxprom85 = zext i32 %and84 to i64, !dbg !89
  %arrayidx86 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom85, !dbg !89
  %67 = load i32, i32* %arrayidx86, align 4, !dbg !89
  %xor87 = xor i32 %xor82, %67, !dbg !89
  %68 = load i32, i32* %t, align 4, !dbg !89
  %shr88 = lshr i32 %68, 26, !dbg !89
  %and89 = and i32 %shr88, 63, !dbg !89
  %idxprom90 = zext i32 %and89 to i64, !dbg !89
  %arrayidx91 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom90, !dbg !89
  %69 = load i32, i32* %arrayidx91, align 4, !dbg !89
  %xor92 = xor i32 %xor87, %69, !dbg !89
  %70 = load i32, i32* %l, align 4, !dbg !89
  %xor93 = xor i32 %70, %xor92, !dbg !89
  store i32 %xor93, i32* %l, align 4, !dbg !89
  %71 = load i32, i32* %l, align 4, !dbg !96
  %72 = load i32*, i32** %s, align 8, !dbg !96
  %arrayidx94 = getelementptr inbounds i32, i32* %72, i64 2, !dbg !96
  %73 = load i32, i32* %arrayidx94, align 4, !dbg !96
  %xor95 = xor i32 %71, %73, !dbg !96
  store i32 %xor95, i32* %u, align 4, !dbg !96
  %74 = load i32, i32* %l, align 4, !dbg !96
  %75 = load i32*, i32** %s, align 8, !dbg !96
  %arrayidx96 = getelementptr inbounds i32, i32* %75, i64 3, !dbg !96
  %76 = load i32, i32* %arrayidx96, align 4, !dbg !96
  %xor97 = xor i32 %74, %76, !dbg !96
  store i32 %xor97, i32* %t, align 4, !dbg !96
  call void @llvm.dbg.declare(metadata i32* %ret98, metadata !98, metadata !DIExpression()), !dbg !100
  %77 = load i32, i32* %t, align 4, !dbg !100
  %78 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %77) #7, !dbg !100, !srcloc !101
  store i32 %78, i32* %ret98, align 4, !dbg !100
  %79 = load i32, i32* %ret98, align 4, !dbg !100
  store i32 %79, i32* %tmp99, align 4, !dbg !100
  %80 = load i32, i32* %tmp99, align 4, !dbg !100
  store i32 %80, i32* %t, align 4, !dbg !96
  %81 = load i32, i32* %u, align 4, !dbg !96
  %shr100 = lshr i32 %81, 2, !dbg !96
  %and101 = and i32 %shr100, 63, !dbg !96
  %idxprom102 = zext i32 %and101 to i64, !dbg !96
  %arrayidx103 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom102, !dbg !96
  %82 = load i32, i32* %arrayidx103, align 4, !dbg !96
  %83 = load i32, i32* %u, align 4, !dbg !96
  %shr104 = lshr i32 %83, 10, !dbg !96
  %and105 = and i32 %shr104, 63, !dbg !96
  %idxprom106 = zext i32 %and105 to i64, !dbg !96
  %arrayidx107 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom106, !dbg !96
  %84 = load i32, i32* %arrayidx107, align 4, !dbg !96
  %xor108 = xor i32 %82, %84, !dbg !96
  %85 = load i32, i32* %u, align 4, !dbg !96
  %shr109 = lshr i32 %85, 18, !dbg !96
  %and110 = and i32 %shr109, 63, !dbg !96
  %idxprom111 = zext i32 %and110 to i64, !dbg !96
  %arrayidx112 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom111, !dbg !96
  %86 = load i32, i32* %arrayidx112, align 4, !dbg !96
  %xor113 = xor i32 %xor108, %86, !dbg !96
  %87 = load i32, i32* %u, align 4, !dbg !96
  %shr114 = lshr i32 %87, 26, !dbg !96
  %and115 = and i32 %shr114, 63, !dbg !96
  %idxprom116 = zext i32 %and115 to i64, !dbg !96
  %arrayidx117 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom116, !dbg !96
  %88 = load i32, i32* %arrayidx117, align 4, !dbg !96
  %xor118 = xor i32 %xor113, %88, !dbg !96
  %89 = load i32, i32* %t, align 4, !dbg !96
  %shr119 = lshr i32 %89, 2, !dbg !96
  %and120 = and i32 %shr119, 63, !dbg !96
  %idxprom121 = zext i32 %and120 to i64, !dbg !96
  %arrayidx122 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom121, !dbg !96
  %90 = load i32, i32* %arrayidx122, align 4, !dbg !96
  %xor123 = xor i32 %xor118, %90, !dbg !96
  %91 = load i32, i32* %t, align 4, !dbg !96
  %shr124 = lshr i32 %91, 10, !dbg !96
  %and125 = and i32 %shr124, 63, !dbg !96
  %idxprom126 = zext i32 %and125 to i64, !dbg !96
  %arrayidx127 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom126, !dbg !96
  %92 = load i32, i32* %arrayidx127, align 4, !dbg !96
  %xor128 = xor i32 %xor123, %92, !dbg !96
  %93 = load i32, i32* %t, align 4, !dbg !96
  %shr129 = lshr i32 %93, 18, !dbg !96
  %and130 = and i32 %shr129, 63, !dbg !96
  %idxprom131 = zext i32 %and130 to i64, !dbg !96
  %arrayidx132 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom131, !dbg !96
  %94 = load i32, i32* %arrayidx132, align 4, !dbg !96
  %xor133 = xor i32 %xor128, %94, !dbg !96
  %95 = load i32, i32* %t, align 4, !dbg !96
  %shr134 = lshr i32 %95, 26, !dbg !96
  %and135 = and i32 %shr134, 63, !dbg !96
  %idxprom136 = zext i32 %and135 to i64, !dbg !96
  %arrayidx137 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom136, !dbg !96
  %96 = load i32, i32* %arrayidx137, align 4, !dbg !96
  %xor138 = xor i32 %xor133, %96, !dbg !96
  %97 = load i32, i32* %r, align 4, !dbg !96
  %xor139 = xor i32 %97, %xor138, !dbg !96
  store i32 %xor139, i32* %r, align 4, !dbg !96
  %98 = load i32, i32* %r, align 4, !dbg !102
  %99 = load i32*, i32** %s, align 8, !dbg !102
  %arrayidx140 = getelementptr inbounds i32, i32* %99, i64 4, !dbg !102
  %100 = load i32, i32* %arrayidx140, align 4, !dbg !102
  %xor141 = xor i32 %98, %100, !dbg !102
  store i32 %xor141, i32* %u, align 4, !dbg !102
  %101 = load i32, i32* %r, align 4, !dbg !102
  %102 = load i32*, i32** %s, align 8, !dbg !102
  %arrayidx142 = getelementptr inbounds i32, i32* %102, i64 5, !dbg !102
  %103 = load i32, i32* %arrayidx142, align 4, !dbg !102
  %xor143 = xor i32 %101, %103, !dbg !102
  store i32 %xor143, i32* %t, align 4, !dbg !102
  call void @llvm.dbg.declare(metadata i32* %ret144, metadata !104, metadata !DIExpression()), !dbg !106
  %104 = load i32, i32* %t, align 4, !dbg !106
  %105 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %104) #7, !dbg !106, !srcloc !107
  store i32 %105, i32* %ret144, align 4, !dbg !106
  %106 = load i32, i32* %ret144, align 4, !dbg !106
  store i32 %106, i32* %tmp145, align 4, !dbg !106
  %107 = load i32, i32* %tmp145, align 4, !dbg !106
  store i32 %107, i32* %t, align 4, !dbg !102
  %108 = load i32, i32* %u, align 4, !dbg !102
  %shr146 = lshr i32 %108, 2, !dbg !102
  %and147 = and i32 %shr146, 63, !dbg !102
  %idxprom148 = zext i32 %and147 to i64, !dbg !102
  %arrayidx149 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom148, !dbg !102
  %109 = load i32, i32* %arrayidx149, align 4, !dbg !102
  %110 = load i32, i32* %u, align 4, !dbg !102
  %shr150 = lshr i32 %110, 10, !dbg !102
  %and151 = and i32 %shr150, 63, !dbg !102
  %idxprom152 = zext i32 %and151 to i64, !dbg !102
  %arrayidx153 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom152, !dbg !102
  %111 = load i32, i32* %arrayidx153, align 4, !dbg !102
  %xor154 = xor i32 %109, %111, !dbg !102
  %112 = load i32, i32* %u, align 4, !dbg !102
  %shr155 = lshr i32 %112, 18, !dbg !102
  %and156 = and i32 %shr155, 63, !dbg !102
  %idxprom157 = zext i32 %and156 to i64, !dbg !102
  %arrayidx158 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom157, !dbg !102
  %113 = load i32, i32* %arrayidx158, align 4, !dbg !102
  %xor159 = xor i32 %xor154, %113, !dbg !102
  %114 = load i32, i32* %u, align 4, !dbg !102
  %shr160 = lshr i32 %114, 26, !dbg !102
  %and161 = and i32 %shr160, 63, !dbg !102
  %idxprom162 = zext i32 %and161 to i64, !dbg !102
  %arrayidx163 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom162, !dbg !102
  %115 = load i32, i32* %arrayidx163, align 4, !dbg !102
  %xor164 = xor i32 %xor159, %115, !dbg !102
  %116 = load i32, i32* %t, align 4, !dbg !102
  %shr165 = lshr i32 %116, 2, !dbg !102
  %and166 = and i32 %shr165, 63, !dbg !102
  %idxprom167 = zext i32 %and166 to i64, !dbg !102
  %arrayidx168 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom167, !dbg !102
  %117 = load i32, i32* %arrayidx168, align 4, !dbg !102
  %xor169 = xor i32 %xor164, %117, !dbg !102
  %118 = load i32, i32* %t, align 4, !dbg !102
  %shr170 = lshr i32 %118, 10, !dbg !102
  %and171 = and i32 %shr170, 63, !dbg !102
  %idxprom172 = zext i32 %and171 to i64, !dbg !102
  %arrayidx173 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom172, !dbg !102
  %119 = load i32, i32* %arrayidx173, align 4, !dbg !102
  %xor174 = xor i32 %xor169, %119, !dbg !102
  %120 = load i32, i32* %t, align 4, !dbg !102
  %shr175 = lshr i32 %120, 18, !dbg !102
  %and176 = and i32 %shr175, 63, !dbg !102
  %idxprom177 = zext i32 %and176 to i64, !dbg !102
  %arrayidx178 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom177, !dbg !102
  %121 = load i32, i32* %arrayidx178, align 4, !dbg !102
  %xor179 = xor i32 %xor174, %121, !dbg !102
  %122 = load i32, i32* %t, align 4, !dbg !102
  %shr180 = lshr i32 %122, 26, !dbg !102
  %and181 = and i32 %shr180, 63, !dbg !102
  %idxprom182 = zext i32 %and181 to i64, !dbg !102
  %arrayidx183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom182, !dbg !102
  %123 = load i32, i32* %arrayidx183, align 4, !dbg !102
  %xor184 = xor i32 %xor179, %123, !dbg !102
  %124 = load i32, i32* %l, align 4, !dbg !102
  %xor185 = xor i32 %124, %xor184, !dbg !102
  store i32 %xor185, i32* %l, align 4, !dbg !102
  %125 = load i32, i32* %l, align 4, !dbg !108
  %126 = load i32*, i32** %s, align 8, !dbg !108
  %arrayidx186 = getelementptr inbounds i32, i32* %126, i64 6, !dbg !108
  %127 = load i32, i32* %arrayidx186, align 4, !dbg !108
  %xor187 = xor i32 %125, %127, !dbg !108
  store i32 %xor187, i32* %u, align 4, !dbg !108
  %128 = load i32, i32* %l, align 4, !dbg !108
  %129 = load i32*, i32** %s, align 8, !dbg !108
  %arrayidx188 = getelementptr inbounds i32, i32* %129, i64 7, !dbg !108
  %130 = load i32, i32* %arrayidx188, align 4, !dbg !108
  %xor189 = xor i32 %128, %130, !dbg !108
  store i32 %xor189, i32* %t, align 4, !dbg !108
  call void @llvm.dbg.declare(metadata i32* %ret190, metadata !110, metadata !DIExpression()), !dbg !112
  %131 = load i32, i32* %t, align 4, !dbg !112
  %132 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %131) #7, !dbg !112, !srcloc !113
  store i32 %132, i32* %ret190, align 4, !dbg !112
  %133 = load i32, i32* %ret190, align 4, !dbg !112
  store i32 %133, i32* %tmp191, align 4, !dbg !112
  %134 = load i32, i32* %tmp191, align 4, !dbg !112
  store i32 %134, i32* %t, align 4, !dbg !108
  %135 = load i32, i32* %u, align 4, !dbg !108
  %shr192 = lshr i32 %135, 2, !dbg !108
  %and193 = and i32 %shr192, 63, !dbg !108
  %idxprom194 = zext i32 %and193 to i64, !dbg !108
  %arrayidx195 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom194, !dbg !108
  %136 = load i32, i32* %arrayidx195, align 4, !dbg !108
  %137 = load i32, i32* %u, align 4, !dbg !108
  %shr196 = lshr i32 %137, 10, !dbg !108
  %and197 = and i32 %shr196, 63, !dbg !108
  %idxprom198 = zext i32 %and197 to i64, !dbg !108
  %arrayidx199 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom198, !dbg !108
  %138 = load i32, i32* %arrayidx199, align 4, !dbg !108
  %xor200 = xor i32 %136, %138, !dbg !108
  %139 = load i32, i32* %u, align 4, !dbg !108
  %shr201 = lshr i32 %139, 18, !dbg !108
  %and202 = and i32 %shr201, 63, !dbg !108
  %idxprom203 = zext i32 %and202 to i64, !dbg !108
  %arrayidx204 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom203, !dbg !108
  %140 = load i32, i32* %arrayidx204, align 4, !dbg !108
  %xor205 = xor i32 %xor200, %140, !dbg !108
  %141 = load i32, i32* %u, align 4, !dbg !108
  %shr206 = lshr i32 %141, 26, !dbg !108
  %and207 = and i32 %shr206, 63, !dbg !108
  %idxprom208 = zext i32 %and207 to i64, !dbg !108
  %arrayidx209 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom208, !dbg !108
  %142 = load i32, i32* %arrayidx209, align 4, !dbg !108
  %xor210 = xor i32 %xor205, %142, !dbg !108
  %143 = load i32, i32* %t, align 4, !dbg !108
  %shr211 = lshr i32 %143, 2, !dbg !108
  %and212 = and i32 %shr211, 63, !dbg !108
  %idxprom213 = zext i32 %and212 to i64, !dbg !108
  %arrayidx214 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom213, !dbg !108
  %144 = load i32, i32* %arrayidx214, align 4, !dbg !108
  %xor215 = xor i32 %xor210, %144, !dbg !108
  %145 = load i32, i32* %t, align 4, !dbg !108
  %shr216 = lshr i32 %145, 10, !dbg !108
  %and217 = and i32 %shr216, 63, !dbg !108
  %idxprom218 = zext i32 %and217 to i64, !dbg !108
  %arrayidx219 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom218, !dbg !108
  %146 = load i32, i32* %arrayidx219, align 4, !dbg !108
  %xor220 = xor i32 %xor215, %146, !dbg !108
  %147 = load i32, i32* %t, align 4, !dbg !108
  %shr221 = lshr i32 %147, 18, !dbg !108
  %and222 = and i32 %shr221, 63, !dbg !108
  %idxprom223 = zext i32 %and222 to i64, !dbg !108
  %arrayidx224 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom223, !dbg !108
  %148 = load i32, i32* %arrayidx224, align 4, !dbg !108
  %xor225 = xor i32 %xor220, %148, !dbg !108
  %149 = load i32, i32* %t, align 4, !dbg !108
  %shr226 = lshr i32 %149, 26, !dbg !108
  %and227 = and i32 %shr226, 63, !dbg !108
  %idxprom228 = zext i32 %and227 to i64, !dbg !108
  %arrayidx229 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom228, !dbg !108
  %150 = load i32, i32* %arrayidx229, align 4, !dbg !108
  %xor230 = xor i32 %xor225, %150, !dbg !108
  %151 = load i32, i32* %r, align 4, !dbg !108
  %xor231 = xor i32 %151, %xor230, !dbg !108
  store i32 %xor231, i32* %r, align 4, !dbg !108
  %152 = load i32, i32* %r, align 4, !dbg !114
  %153 = load i32*, i32** %s, align 8, !dbg !114
  %arrayidx232 = getelementptr inbounds i32, i32* %153, i64 8, !dbg !114
  %154 = load i32, i32* %arrayidx232, align 4, !dbg !114
  %xor233 = xor i32 %152, %154, !dbg !114
  store i32 %xor233, i32* %u, align 4, !dbg !114
  %155 = load i32, i32* %r, align 4, !dbg !114
  %156 = load i32*, i32** %s, align 8, !dbg !114
  %arrayidx234 = getelementptr inbounds i32, i32* %156, i64 9, !dbg !114
  %157 = load i32, i32* %arrayidx234, align 4, !dbg !114
  %xor235 = xor i32 %155, %157, !dbg !114
  store i32 %xor235, i32* %t, align 4, !dbg !114
  call void @llvm.dbg.declare(metadata i32* %ret236, metadata !116, metadata !DIExpression()), !dbg !118
  %158 = load i32, i32* %t, align 4, !dbg !118
  %159 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %158) #7, !dbg !118, !srcloc !119
  store i32 %159, i32* %ret236, align 4, !dbg !118
  %160 = load i32, i32* %ret236, align 4, !dbg !118
  store i32 %160, i32* %tmp237, align 4, !dbg !118
  %161 = load i32, i32* %tmp237, align 4, !dbg !118
  store i32 %161, i32* %t, align 4, !dbg !114
  %162 = load i32, i32* %u, align 4, !dbg !114
  %shr238 = lshr i32 %162, 2, !dbg !114
  %and239 = and i32 %shr238, 63, !dbg !114
  %idxprom240 = zext i32 %and239 to i64, !dbg !114
  %arrayidx241 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom240, !dbg !114
  %163 = load i32, i32* %arrayidx241, align 4, !dbg !114
  %164 = load i32, i32* %u, align 4, !dbg !114
  %shr242 = lshr i32 %164, 10, !dbg !114
  %and243 = and i32 %shr242, 63, !dbg !114
  %idxprom244 = zext i32 %and243 to i64, !dbg !114
  %arrayidx245 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom244, !dbg !114
  %165 = load i32, i32* %arrayidx245, align 4, !dbg !114
  %xor246 = xor i32 %163, %165, !dbg !114
  %166 = load i32, i32* %u, align 4, !dbg !114
  %shr247 = lshr i32 %166, 18, !dbg !114
  %and248 = and i32 %shr247, 63, !dbg !114
  %idxprom249 = zext i32 %and248 to i64, !dbg !114
  %arrayidx250 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom249, !dbg !114
  %167 = load i32, i32* %arrayidx250, align 4, !dbg !114
  %xor251 = xor i32 %xor246, %167, !dbg !114
  %168 = load i32, i32* %u, align 4, !dbg !114
  %shr252 = lshr i32 %168, 26, !dbg !114
  %and253 = and i32 %shr252, 63, !dbg !114
  %idxprom254 = zext i32 %and253 to i64, !dbg !114
  %arrayidx255 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom254, !dbg !114
  %169 = load i32, i32* %arrayidx255, align 4, !dbg !114
  %xor256 = xor i32 %xor251, %169, !dbg !114
  %170 = load i32, i32* %t, align 4, !dbg !114
  %shr257 = lshr i32 %170, 2, !dbg !114
  %and258 = and i32 %shr257, 63, !dbg !114
  %idxprom259 = zext i32 %and258 to i64, !dbg !114
  %arrayidx260 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom259, !dbg !114
  %171 = load i32, i32* %arrayidx260, align 4, !dbg !114
  %xor261 = xor i32 %xor256, %171, !dbg !114
  %172 = load i32, i32* %t, align 4, !dbg !114
  %shr262 = lshr i32 %172, 10, !dbg !114
  %and263 = and i32 %shr262, 63, !dbg !114
  %idxprom264 = zext i32 %and263 to i64, !dbg !114
  %arrayidx265 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom264, !dbg !114
  %173 = load i32, i32* %arrayidx265, align 4, !dbg !114
  %xor266 = xor i32 %xor261, %173, !dbg !114
  %174 = load i32, i32* %t, align 4, !dbg !114
  %shr267 = lshr i32 %174, 18, !dbg !114
  %and268 = and i32 %shr267, 63, !dbg !114
  %idxprom269 = zext i32 %and268 to i64, !dbg !114
  %arrayidx270 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom269, !dbg !114
  %175 = load i32, i32* %arrayidx270, align 4, !dbg !114
  %xor271 = xor i32 %xor266, %175, !dbg !114
  %176 = load i32, i32* %t, align 4, !dbg !114
  %shr272 = lshr i32 %176, 26, !dbg !114
  %and273 = and i32 %shr272, 63, !dbg !114
  %idxprom274 = zext i32 %and273 to i64, !dbg !114
  %arrayidx275 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom274, !dbg !114
  %177 = load i32, i32* %arrayidx275, align 4, !dbg !114
  %xor276 = xor i32 %xor271, %177, !dbg !114
  %178 = load i32, i32* %l, align 4, !dbg !114
  %xor277 = xor i32 %178, %xor276, !dbg !114
  store i32 %xor277, i32* %l, align 4, !dbg !114
  %179 = load i32, i32* %l, align 4, !dbg !120
  %180 = load i32*, i32** %s, align 8, !dbg !120
  %arrayidx278 = getelementptr inbounds i32, i32* %180, i64 10, !dbg !120
  %181 = load i32, i32* %arrayidx278, align 4, !dbg !120
  %xor279 = xor i32 %179, %181, !dbg !120
  store i32 %xor279, i32* %u, align 4, !dbg !120
  %182 = load i32, i32* %l, align 4, !dbg !120
  %183 = load i32*, i32** %s, align 8, !dbg !120
  %arrayidx280 = getelementptr inbounds i32, i32* %183, i64 11, !dbg !120
  %184 = load i32, i32* %arrayidx280, align 4, !dbg !120
  %xor281 = xor i32 %182, %184, !dbg !120
  store i32 %xor281, i32* %t, align 4, !dbg !120
  call void @llvm.dbg.declare(metadata i32* %ret282, metadata !122, metadata !DIExpression()), !dbg !124
  %185 = load i32, i32* %t, align 4, !dbg !124
  %186 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %185) #7, !dbg !124, !srcloc !125
  store i32 %186, i32* %ret282, align 4, !dbg !124
  %187 = load i32, i32* %ret282, align 4, !dbg !124
  store i32 %187, i32* %tmp283, align 4, !dbg !124
  %188 = load i32, i32* %tmp283, align 4, !dbg !124
  store i32 %188, i32* %t, align 4, !dbg !120
  %189 = load i32, i32* %u, align 4, !dbg !120
  %shr284 = lshr i32 %189, 2, !dbg !120
  %and285 = and i32 %shr284, 63, !dbg !120
  %idxprom286 = zext i32 %and285 to i64, !dbg !120
  %arrayidx287 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom286, !dbg !120
  %190 = load i32, i32* %arrayidx287, align 4, !dbg !120
  %191 = load i32, i32* %u, align 4, !dbg !120
  %shr288 = lshr i32 %191, 10, !dbg !120
  %and289 = and i32 %shr288, 63, !dbg !120
  %idxprom290 = zext i32 %and289 to i64, !dbg !120
  %arrayidx291 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom290, !dbg !120
  %192 = load i32, i32* %arrayidx291, align 4, !dbg !120
  %xor292 = xor i32 %190, %192, !dbg !120
  %193 = load i32, i32* %u, align 4, !dbg !120
  %shr293 = lshr i32 %193, 18, !dbg !120
  %and294 = and i32 %shr293, 63, !dbg !120
  %idxprom295 = zext i32 %and294 to i64, !dbg !120
  %arrayidx296 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom295, !dbg !120
  %194 = load i32, i32* %arrayidx296, align 4, !dbg !120
  %xor297 = xor i32 %xor292, %194, !dbg !120
  %195 = load i32, i32* %u, align 4, !dbg !120
  %shr298 = lshr i32 %195, 26, !dbg !120
  %and299 = and i32 %shr298, 63, !dbg !120
  %idxprom300 = zext i32 %and299 to i64, !dbg !120
  %arrayidx301 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom300, !dbg !120
  %196 = load i32, i32* %arrayidx301, align 4, !dbg !120
  %xor302 = xor i32 %xor297, %196, !dbg !120
  %197 = load i32, i32* %t, align 4, !dbg !120
  %shr303 = lshr i32 %197, 2, !dbg !120
  %and304 = and i32 %shr303, 63, !dbg !120
  %idxprom305 = zext i32 %and304 to i64, !dbg !120
  %arrayidx306 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom305, !dbg !120
  %198 = load i32, i32* %arrayidx306, align 4, !dbg !120
  %xor307 = xor i32 %xor302, %198, !dbg !120
  %199 = load i32, i32* %t, align 4, !dbg !120
  %shr308 = lshr i32 %199, 10, !dbg !120
  %and309 = and i32 %shr308, 63, !dbg !120
  %idxprom310 = zext i32 %and309 to i64, !dbg !120
  %arrayidx311 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom310, !dbg !120
  %200 = load i32, i32* %arrayidx311, align 4, !dbg !120
  %xor312 = xor i32 %xor307, %200, !dbg !120
  %201 = load i32, i32* %t, align 4, !dbg !120
  %shr313 = lshr i32 %201, 18, !dbg !120
  %and314 = and i32 %shr313, 63, !dbg !120
  %idxprom315 = zext i32 %and314 to i64, !dbg !120
  %arrayidx316 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom315, !dbg !120
  %202 = load i32, i32* %arrayidx316, align 4, !dbg !120
  %xor317 = xor i32 %xor312, %202, !dbg !120
  %203 = load i32, i32* %t, align 4, !dbg !120
  %shr318 = lshr i32 %203, 26, !dbg !120
  %and319 = and i32 %shr318, 63, !dbg !120
  %idxprom320 = zext i32 %and319 to i64, !dbg !120
  %arrayidx321 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom320, !dbg !120
  %204 = load i32, i32* %arrayidx321, align 4, !dbg !120
  %xor322 = xor i32 %xor317, %204, !dbg !120
  %205 = load i32, i32* %r, align 4, !dbg !120
  %xor323 = xor i32 %205, %xor322, !dbg !120
  store i32 %xor323, i32* %r, align 4, !dbg !120
  %206 = load i32, i32* %r, align 4, !dbg !126
  %207 = load i32*, i32** %s, align 8, !dbg !126
  %arrayidx324 = getelementptr inbounds i32, i32* %207, i64 12, !dbg !126
  %208 = load i32, i32* %arrayidx324, align 4, !dbg !126
  %xor325 = xor i32 %206, %208, !dbg !126
  store i32 %xor325, i32* %u, align 4, !dbg !126
  %209 = load i32, i32* %r, align 4, !dbg !126
  %210 = load i32*, i32** %s, align 8, !dbg !126
  %arrayidx326 = getelementptr inbounds i32, i32* %210, i64 13, !dbg !126
  %211 = load i32, i32* %arrayidx326, align 4, !dbg !126
  %xor327 = xor i32 %209, %211, !dbg !126
  store i32 %xor327, i32* %t, align 4, !dbg !126
  call void @llvm.dbg.declare(metadata i32* %ret328, metadata !128, metadata !DIExpression()), !dbg !130
  %212 = load i32, i32* %t, align 4, !dbg !130
  %213 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %212) #7, !dbg !130, !srcloc !131
  store i32 %213, i32* %ret328, align 4, !dbg !130
  %214 = load i32, i32* %ret328, align 4, !dbg !130
  store i32 %214, i32* %tmp329, align 4, !dbg !130
  %215 = load i32, i32* %tmp329, align 4, !dbg !130
  store i32 %215, i32* %t, align 4, !dbg !126
  %216 = load i32, i32* %u, align 4, !dbg !126
  %shr330 = lshr i32 %216, 2, !dbg !126
  %and331 = and i32 %shr330, 63, !dbg !126
  %idxprom332 = zext i32 %and331 to i64, !dbg !126
  %arrayidx333 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom332, !dbg !126
  %217 = load i32, i32* %arrayidx333, align 4, !dbg !126
  %218 = load i32, i32* %u, align 4, !dbg !126
  %shr334 = lshr i32 %218, 10, !dbg !126
  %and335 = and i32 %shr334, 63, !dbg !126
  %idxprom336 = zext i32 %and335 to i64, !dbg !126
  %arrayidx337 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom336, !dbg !126
  %219 = load i32, i32* %arrayidx337, align 4, !dbg !126
  %xor338 = xor i32 %217, %219, !dbg !126
  %220 = load i32, i32* %u, align 4, !dbg !126
  %shr339 = lshr i32 %220, 18, !dbg !126
  %and340 = and i32 %shr339, 63, !dbg !126
  %idxprom341 = zext i32 %and340 to i64, !dbg !126
  %arrayidx342 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom341, !dbg !126
  %221 = load i32, i32* %arrayidx342, align 4, !dbg !126
  %xor343 = xor i32 %xor338, %221, !dbg !126
  %222 = load i32, i32* %u, align 4, !dbg !126
  %shr344 = lshr i32 %222, 26, !dbg !126
  %and345 = and i32 %shr344, 63, !dbg !126
  %idxprom346 = zext i32 %and345 to i64, !dbg !126
  %arrayidx347 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom346, !dbg !126
  %223 = load i32, i32* %arrayidx347, align 4, !dbg !126
  %xor348 = xor i32 %xor343, %223, !dbg !126
  %224 = load i32, i32* %t, align 4, !dbg !126
  %shr349 = lshr i32 %224, 2, !dbg !126
  %and350 = and i32 %shr349, 63, !dbg !126
  %idxprom351 = zext i32 %and350 to i64, !dbg !126
  %arrayidx352 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom351, !dbg !126
  %225 = load i32, i32* %arrayidx352, align 4, !dbg !126
  %xor353 = xor i32 %xor348, %225, !dbg !126
  %226 = load i32, i32* %t, align 4, !dbg !126
  %shr354 = lshr i32 %226, 10, !dbg !126
  %and355 = and i32 %shr354, 63, !dbg !126
  %idxprom356 = zext i32 %and355 to i64, !dbg !126
  %arrayidx357 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom356, !dbg !126
  %227 = load i32, i32* %arrayidx357, align 4, !dbg !126
  %xor358 = xor i32 %xor353, %227, !dbg !126
  %228 = load i32, i32* %t, align 4, !dbg !126
  %shr359 = lshr i32 %228, 18, !dbg !126
  %and360 = and i32 %shr359, 63, !dbg !126
  %idxprom361 = zext i32 %and360 to i64, !dbg !126
  %arrayidx362 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom361, !dbg !126
  %229 = load i32, i32* %arrayidx362, align 4, !dbg !126
  %xor363 = xor i32 %xor358, %229, !dbg !126
  %230 = load i32, i32* %t, align 4, !dbg !126
  %shr364 = lshr i32 %230, 26, !dbg !126
  %and365 = and i32 %shr364, 63, !dbg !126
  %idxprom366 = zext i32 %and365 to i64, !dbg !126
  %arrayidx367 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom366, !dbg !126
  %231 = load i32, i32* %arrayidx367, align 4, !dbg !126
  %xor368 = xor i32 %xor363, %231, !dbg !126
  %232 = load i32, i32* %l, align 4, !dbg !126
  %xor369 = xor i32 %232, %xor368, !dbg !126
  store i32 %xor369, i32* %l, align 4, !dbg !126
  %233 = load i32, i32* %l, align 4, !dbg !132
  %234 = load i32*, i32** %s, align 8, !dbg !132
  %arrayidx370 = getelementptr inbounds i32, i32* %234, i64 14, !dbg !132
  %235 = load i32, i32* %arrayidx370, align 4, !dbg !132
  %xor371 = xor i32 %233, %235, !dbg !132
  store i32 %xor371, i32* %u, align 4, !dbg !132
  %236 = load i32, i32* %l, align 4, !dbg !132
  %237 = load i32*, i32** %s, align 8, !dbg !132
  %arrayidx372 = getelementptr inbounds i32, i32* %237, i64 15, !dbg !132
  %238 = load i32, i32* %arrayidx372, align 4, !dbg !132
  %xor373 = xor i32 %236, %238, !dbg !132
  store i32 %xor373, i32* %t, align 4, !dbg !132
  call void @llvm.dbg.declare(metadata i32* %ret374, metadata !134, metadata !DIExpression()), !dbg !136
  %239 = load i32, i32* %t, align 4, !dbg !136
  %240 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %239) #7, !dbg !136, !srcloc !137
  store i32 %240, i32* %ret374, align 4, !dbg !136
  %241 = load i32, i32* %ret374, align 4, !dbg !136
  store i32 %241, i32* %tmp375, align 4, !dbg !136
  %242 = load i32, i32* %tmp375, align 4, !dbg !136
  store i32 %242, i32* %t, align 4, !dbg !132
  %243 = load i32, i32* %u, align 4, !dbg !132
  %shr376 = lshr i32 %243, 2, !dbg !132
  %and377 = and i32 %shr376, 63, !dbg !132
  %idxprom378 = zext i32 %and377 to i64, !dbg !132
  %arrayidx379 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom378, !dbg !132
  %244 = load i32, i32* %arrayidx379, align 4, !dbg !132
  %245 = load i32, i32* %u, align 4, !dbg !132
  %shr380 = lshr i32 %245, 10, !dbg !132
  %and381 = and i32 %shr380, 63, !dbg !132
  %idxprom382 = zext i32 %and381 to i64, !dbg !132
  %arrayidx383 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom382, !dbg !132
  %246 = load i32, i32* %arrayidx383, align 4, !dbg !132
  %xor384 = xor i32 %244, %246, !dbg !132
  %247 = load i32, i32* %u, align 4, !dbg !132
  %shr385 = lshr i32 %247, 18, !dbg !132
  %and386 = and i32 %shr385, 63, !dbg !132
  %idxprom387 = zext i32 %and386 to i64, !dbg !132
  %arrayidx388 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom387, !dbg !132
  %248 = load i32, i32* %arrayidx388, align 4, !dbg !132
  %xor389 = xor i32 %xor384, %248, !dbg !132
  %249 = load i32, i32* %u, align 4, !dbg !132
  %shr390 = lshr i32 %249, 26, !dbg !132
  %and391 = and i32 %shr390, 63, !dbg !132
  %idxprom392 = zext i32 %and391 to i64, !dbg !132
  %arrayidx393 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom392, !dbg !132
  %250 = load i32, i32* %arrayidx393, align 4, !dbg !132
  %xor394 = xor i32 %xor389, %250, !dbg !132
  %251 = load i32, i32* %t, align 4, !dbg !132
  %shr395 = lshr i32 %251, 2, !dbg !132
  %and396 = and i32 %shr395, 63, !dbg !132
  %idxprom397 = zext i32 %and396 to i64, !dbg !132
  %arrayidx398 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom397, !dbg !132
  %252 = load i32, i32* %arrayidx398, align 4, !dbg !132
  %xor399 = xor i32 %xor394, %252, !dbg !132
  %253 = load i32, i32* %t, align 4, !dbg !132
  %shr400 = lshr i32 %253, 10, !dbg !132
  %and401 = and i32 %shr400, 63, !dbg !132
  %idxprom402 = zext i32 %and401 to i64, !dbg !132
  %arrayidx403 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom402, !dbg !132
  %254 = load i32, i32* %arrayidx403, align 4, !dbg !132
  %xor404 = xor i32 %xor399, %254, !dbg !132
  %255 = load i32, i32* %t, align 4, !dbg !132
  %shr405 = lshr i32 %255, 18, !dbg !132
  %and406 = and i32 %shr405, 63, !dbg !132
  %idxprom407 = zext i32 %and406 to i64, !dbg !132
  %arrayidx408 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom407, !dbg !132
  %256 = load i32, i32* %arrayidx408, align 4, !dbg !132
  %xor409 = xor i32 %xor404, %256, !dbg !132
  %257 = load i32, i32* %t, align 4, !dbg !132
  %shr410 = lshr i32 %257, 26, !dbg !132
  %and411 = and i32 %shr410, 63, !dbg !132
  %idxprom412 = zext i32 %and411 to i64, !dbg !132
  %arrayidx413 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom412, !dbg !132
  %258 = load i32, i32* %arrayidx413, align 4, !dbg !132
  %xor414 = xor i32 %xor409, %258, !dbg !132
  %259 = load i32, i32* %r, align 4, !dbg !132
  %xor415 = xor i32 %259, %xor414, !dbg !132
  store i32 %xor415, i32* %r, align 4, !dbg !132
  %260 = load i32, i32* %r, align 4, !dbg !138
  %261 = load i32*, i32** %s, align 8, !dbg !138
  %arrayidx416 = getelementptr inbounds i32, i32* %261, i64 16, !dbg !138
  %262 = load i32, i32* %arrayidx416, align 4, !dbg !138
  %xor417 = xor i32 %260, %262, !dbg !138
  store i32 %xor417, i32* %u, align 4, !dbg !138
  %263 = load i32, i32* %r, align 4, !dbg !138
  %264 = load i32*, i32** %s, align 8, !dbg !138
  %arrayidx418 = getelementptr inbounds i32, i32* %264, i64 17, !dbg !138
  %265 = load i32, i32* %arrayidx418, align 4, !dbg !138
  %xor419 = xor i32 %263, %265, !dbg !138
  store i32 %xor419, i32* %t, align 4, !dbg !138
  call void @llvm.dbg.declare(metadata i32* %ret420, metadata !140, metadata !DIExpression()), !dbg !142
  %266 = load i32, i32* %t, align 4, !dbg !142
  %267 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %266) #7, !dbg !142, !srcloc !143
  store i32 %267, i32* %ret420, align 4, !dbg !142
  %268 = load i32, i32* %ret420, align 4, !dbg !142
  store i32 %268, i32* %tmp421, align 4, !dbg !142
  %269 = load i32, i32* %tmp421, align 4, !dbg !142
  store i32 %269, i32* %t, align 4, !dbg !138
  %270 = load i32, i32* %u, align 4, !dbg !138
  %shr422 = lshr i32 %270, 2, !dbg !138
  %and423 = and i32 %shr422, 63, !dbg !138
  %idxprom424 = zext i32 %and423 to i64, !dbg !138
  %arrayidx425 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom424, !dbg !138
  %271 = load i32, i32* %arrayidx425, align 4, !dbg !138
  %272 = load i32, i32* %u, align 4, !dbg !138
  %shr426 = lshr i32 %272, 10, !dbg !138
  %and427 = and i32 %shr426, 63, !dbg !138
  %idxprom428 = zext i32 %and427 to i64, !dbg !138
  %arrayidx429 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom428, !dbg !138
  %273 = load i32, i32* %arrayidx429, align 4, !dbg !138
  %xor430 = xor i32 %271, %273, !dbg !138
  %274 = load i32, i32* %u, align 4, !dbg !138
  %shr431 = lshr i32 %274, 18, !dbg !138
  %and432 = and i32 %shr431, 63, !dbg !138
  %idxprom433 = zext i32 %and432 to i64, !dbg !138
  %arrayidx434 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom433, !dbg !138
  %275 = load i32, i32* %arrayidx434, align 4, !dbg !138
  %xor435 = xor i32 %xor430, %275, !dbg !138
  %276 = load i32, i32* %u, align 4, !dbg !138
  %shr436 = lshr i32 %276, 26, !dbg !138
  %and437 = and i32 %shr436, 63, !dbg !138
  %idxprom438 = zext i32 %and437 to i64, !dbg !138
  %arrayidx439 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom438, !dbg !138
  %277 = load i32, i32* %arrayidx439, align 4, !dbg !138
  %xor440 = xor i32 %xor435, %277, !dbg !138
  %278 = load i32, i32* %t, align 4, !dbg !138
  %shr441 = lshr i32 %278, 2, !dbg !138
  %and442 = and i32 %shr441, 63, !dbg !138
  %idxprom443 = zext i32 %and442 to i64, !dbg !138
  %arrayidx444 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom443, !dbg !138
  %279 = load i32, i32* %arrayidx444, align 4, !dbg !138
  %xor445 = xor i32 %xor440, %279, !dbg !138
  %280 = load i32, i32* %t, align 4, !dbg !138
  %shr446 = lshr i32 %280, 10, !dbg !138
  %and447 = and i32 %shr446, 63, !dbg !138
  %idxprom448 = zext i32 %and447 to i64, !dbg !138
  %arrayidx449 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom448, !dbg !138
  %281 = load i32, i32* %arrayidx449, align 4, !dbg !138
  %xor450 = xor i32 %xor445, %281, !dbg !138
  %282 = load i32, i32* %t, align 4, !dbg !138
  %shr451 = lshr i32 %282, 18, !dbg !138
  %and452 = and i32 %shr451, 63, !dbg !138
  %idxprom453 = zext i32 %and452 to i64, !dbg !138
  %arrayidx454 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom453, !dbg !138
  %283 = load i32, i32* %arrayidx454, align 4, !dbg !138
  %xor455 = xor i32 %xor450, %283, !dbg !138
  %284 = load i32, i32* %t, align 4, !dbg !138
  %shr456 = lshr i32 %284, 26, !dbg !138
  %and457 = and i32 %shr456, 63, !dbg !138
  %idxprom458 = zext i32 %and457 to i64, !dbg !138
  %arrayidx459 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom458, !dbg !138
  %285 = load i32, i32* %arrayidx459, align 4, !dbg !138
  %xor460 = xor i32 %xor455, %285, !dbg !138
  %286 = load i32, i32* %l, align 4, !dbg !138
  %xor461 = xor i32 %286, %xor460, !dbg !138
  store i32 %xor461, i32* %l, align 4, !dbg !138
  %287 = load i32, i32* %l, align 4, !dbg !144
  %288 = load i32*, i32** %s, align 8, !dbg !144
  %arrayidx462 = getelementptr inbounds i32, i32* %288, i64 18, !dbg !144
  %289 = load i32, i32* %arrayidx462, align 4, !dbg !144
  %xor463 = xor i32 %287, %289, !dbg !144
  store i32 %xor463, i32* %u, align 4, !dbg !144
  %290 = load i32, i32* %l, align 4, !dbg !144
  %291 = load i32*, i32** %s, align 8, !dbg !144
  %arrayidx464 = getelementptr inbounds i32, i32* %291, i64 19, !dbg !144
  %292 = load i32, i32* %arrayidx464, align 4, !dbg !144
  %xor465 = xor i32 %290, %292, !dbg !144
  store i32 %xor465, i32* %t, align 4, !dbg !144
  call void @llvm.dbg.declare(metadata i32* %ret466, metadata !146, metadata !DIExpression()), !dbg !148
  %293 = load i32, i32* %t, align 4, !dbg !148
  %294 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %293) #7, !dbg !148, !srcloc !149
  store i32 %294, i32* %ret466, align 4, !dbg !148
  %295 = load i32, i32* %ret466, align 4, !dbg !148
  store i32 %295, i32* %tmp467, align 4, !dbg !148
  %296 = load i32, i32* %tmp467, align 4, !dbg !148
  store i32 %296, i32* %t, align 4, !dbg !144
  %297 = load i32, i32* %u, align 4, !dbg !144
  %shr468 = lshr i32 %297, 2, !dbg !144
  %and469 = and i32 %shr468, 63, !dbg !144
  %idxprom470 = zext i32 %and469 to i64, !dbg !144
  %arrayidx471 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom470, !dbg !144
  %298 = load i32, i32* %arrayidx471, align 4, !dbg !144
  %299 = load i32, i32* %u, align 4, !dbg !144
  %shr472 = lshr i32 %299, 10, !dbg !144
  %and473 = and i32 %shr472, 63, !dbg !144
  %idxprom474 = zext i32 %and473 to i64, !dbg !144
  %arrayidx475 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom474, !dbg !144
  %300 = load i32, i32* %arrayidx475, align 4, !dbg !144
  %xor476 = xor i32 %298, %300, !dbg !144
  %301 = load i32, i32* %u, align 4, !dbg !144
  %shr477 = lshr i32 %301, 18, !dbg !144
  %and478 = and i32 %shr477, 63, !dbg !144
  %idxprom479 = zext i32 %and478 to i64, !dbg !144
  %arrayidx480 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom479, !dbg !144
  %302 = load i32, i32* %arrayidx480, align 4, !dbg !144
  %xor481 = xor i32 %xor476, %302, !dbg !144
  %303 = load i32, i32* %u, align 4, !dbg !144
  %shr482 = lshr i32 %303, 26, !dbg !144
  %and483 = and i32 %shr482, 63, !dbg !144
  %idxprom484 = zext i32 %and483 to i64, !dbg !144
  %arrayidx485 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom484, !dbg !144
  %304 = load i32, i32* %arrayidx485, align 4, !dbg !144
  %xor486 = xor i32 %xor481, %304, !dbg !144
  %305 = load i32, i32* %t, align 4, !dbg !144
  %shr487 = lshr i32 %305, 2, !dbg !144
  %and488 = and i32 %shr487, 63, !dbg !144
  %idxprom489 = zext i32 %and488 to i64, !dbg !144
  %arrayidx490 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom489, !dbg !144
  %306 = load i32, i32* %arrayidx490, align 4, !dbg !144
  %xor491 = xor i32 %xor486, %306, !dbg !144
  %307 = load i32, i32* %t, align 4, !dbg !144
  %shr492 = lshr i32 %307, 10, !dbg !144
  %and493 = and i32 %shr492, 63, !dbg !144
  %idxprom494 = zext i32 %and493 to i64, !dbg !144
  %arrayidx495 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom494, !dbg !144
  %308 = load i32, i32* %arrayidx495, align 4, !dbg !144
  %xor496 = xor i32 %xor491, %308, !dbg !144
  %309 = load i32, i32* %t, align 4, !dbg !144
  %shr497 = lshr i32 %309, 18, !dbg !144
  %and498 = and i32 %shr497, 63, !dbg !144
  %idxprom499 = zext i32 %and498 to i64, !dbg !144
  %arrayidx500 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom499, !dbg !144
  %310 = load i32, i32* %arrayidx500, align 4, !dbg !144
  %xor501 = xor i32 %xor496, %310, !dbg !144
  %311 = load i32, i32* %t, align 4, !dbg !144
  %shr502 = lshr i32 %311, 26, !dbg !144
  %and503 = and i32 %shr502, 63, !dbg !144
  %idxprom504 = zext i32 %and503 to i64, !dbg !144
  %arrayidx505 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom504, !dbg !144
  %312 = load i32, i32* %arrayidx505, align 4, !dbg !144
  %xor506 = xor i32 %xor501, %312, !dbg !144
  %313 = load i32, i32* %r, align 4, !dbg !144
  %xor507 = xor i32 %313, %xor506, !dbg !144
  store i32 %xor507, i32* %r, align 4, !dbg !144
  %314 = load i32, i32* %r, align 4, !dbg !150
  %315 = load i32*, i32** %s, align 8, !dbg !150
  %arrayidx508 = getelementptr inbounds i32, i32* %315, i64 20, !dbg !150
  %316 = load i32, i32* %arrayidx508, align 4, !dbg !150
  %xor509 = xor i32 %314, %316, !dbg !150
  store i32 %xor509, i32* %u, align 4, !dbg !150
  %317 = load i32, i32* %r, align 4, !dbg !150
  %318 = load i32*, i32** %s, align 8, !dbg !150
  %arrayidx510 = getelementptr inbounds i32, i32* %318, i64 21, !dbg !150
  %319 = load i32, i32* %arrayidx510, align 4, !dbg !150
  %xor511 = xor i32 %317, %319, !dbg !150
  store i32 %xor511, i32* %t, align 4, !dbg !150
  call void @llvm.dbg.declare(metadata i32* %ret512, metadata !152, metadata !DIExpression()), !dbg !154
  %320 = load i32, i32* %t, align 4, !dbg !154
  %321 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %320) #7, !dbg !154, !srcloc !155
  store i32 %321, i32* %ret512, align 4, !dbg !154
  %322 = load i32, i32* %ret512, align 4, !dbg !154
  store i32 %322, i32* %tmp513, align 4, !dbg !154
  %323 = load i32, i32* %tmp513, align 4, !dbg !154
  store i32 %323, i32* %t, align 4, !dbg !150
  %324 = load i32, i32* %u, align 4, !dbg !150
  %shr514 = lshr i32 %324, 2, !dbg !150
  %and515 = and i32 %shr514, 63, !dbg !150
  %idxprom516 = zext i32 %and515 to i64, !dbg !150
  %arrayidx517 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom516, !dbg !150
  %325 = load i32, i32* %arrayidx517, align 4, !dbg !150
  %326 = load i32, i32* %u, align 4, !dbg !150
  %shr518 = lshr i32 %326, 10, !dbg !150
  %and519 = and i32 %shr518, 63, !dbg !150
  %idxprom520 = zext i32 %and519 to i64, !dbg !150
  %arrayidx521 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom520, !dbg !150
  %327 = load i32, i32* %arrayidx521, align 4, !dbg !150
  %xor522 = xor i32 %325, %327, !dbg !150
  %328 = load i32, i32* %u, align 4, !dbg !150
  %shr523 = lshr i32 %328, 18, !dbg !150
  %and524 = and i32 %shr523, 63, !dbg !150
  %idxprom525 = zext i32 %and524 to i64, !dbg !150
  %arrayidx526 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom525, !dbg !150
  %329 = load i32, i32* %arrayidx526, align 4, !dbg !150
  %xor527 = xor i32 %xor522, %329, !dbg !150
  %330 = load i32, i32* %u, align 4, !dbg !150
  %shr528 = lshr i32 %330, 26, !dbg !150
  %and529 = and i32 %shr528, 63, !dbg !150
  %idxprom530 = zext i32 %and529 to i64, !dbg !150
  %arrayidx531 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom530, !dbg !150
  %331 = load i32, i32* %arrayidx531, align 4, !dbg !150
  %xor532 = xor i32 %xor527, %331, !dbg !150
  %332 = load i32, i32* %t, align 4, !dbg !150
  %shr533 = lshr i32 %332, 2, !dbg !150
  %and534 = and i32 %shr533, 63, !dbg !150
  %idxprom535 = zext i32 %and534 to i64, !dbg !150
  %arrayidx536 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom535, !dbg !150
  %333 = load i32, i32* %arrayidx536, align 4, !dbg !150
  %xor537 = xor i32 %xor532, %333, !dbg !150
  %334 = load i32, i32* %t, align 4, !dbg !150
  %shr538 = lshr i32 %334, 10, !dbg !150
  %and539 = and i32 %shr538, 63, !dbg !150
  %idxprom540 = zext i32 %and539 to i64, !dbg !150
  %arrayidx541 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom540, !dbg !150
  %335 = load i32, i32* %arrayidx541, align 4, !dbg !150
  %xor542 = xor i32 %xor537, %335, !dbg !150
  %336 = load i32, i32* %t, align 4, !dbg !150
  %shr543 = lshr i32 %336, 18, !dbg !150
  %and544 = and i32 %shr543, 63, !dbg !150
  %idxprom545 = zext i32 %and544 to i64, !dbg !150
  %arrayidx546 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom545, !dbg !150
  %337 = load i32, i32* %arrayidx546, align 4, !dbg !150
  %xor547 = xor i32 %xor542, %337, !dbg !150
  %338 = load i32, i32* %t, align 4, !dbg !150
  %shr548 = lshr i32 %338, 26, !dbg !150
  %and549 = and i32 %shr548, 63, !dbg !150
  %idxprom550 = zext i32 %and549 to i64, !dbg !150
  %arrayidx551 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom550, !dbg !150
  %339 = load i32, i32* %arrayidx551, align 4, !dbg !150
  %xor552 = xor i32 %xor547, %339, !dbg !150
  %340 = load i32, i32* %l, align 4, !dbg !150
  %xor553 = xor i32 %340, %xor552, !dbg !150
  store i32 %xor553, i32* %l, align 4, !dbg !150
  %341 = load i32, i32* %l, align 4, !dbg !156
  %342 = load i32*, i32** %s, align 8, !dbg !156
  %arrayidx554 = getelementptr inbounds i32, i32* %342, i64 22, !dbg !156
  %343 = load i32, i32* %arrayidx554, align 4, !dbg !156
  %xor555 = xor i32 %341, %343, !dbg !156
  store i32 %xor555, i32* %u, align 4, !dbg !156
  %344 = load i32, i32* %l, align 4, !dbg !156
  %345 = load i32*, i32** %s, align 8, !dbg !156
  %arrayidx556 = getelementptr inbounds i32, i32* %345, i64 23, !dbg !156
  %346 = load i32, i32* %arrayidx556, align 4, !dbg !156
  %xor557 = xor i32 %344, %346, !dbg !156
  store i32 %xor557, i32* %t, align 4, !dbg !156
  call void @llvm.dbg.declare(metadata i32* %ret558, metadata !158, metadata !DIExpression()), !dbg !160
  %347 = load i32, i32* %t, align 4, !dbg !160
  %348 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %347) #7, !dbg !160, !srcloc !161
  store i32 %348, i32* %ret558, align 4, !dbg !160
  %349 = load i32, i32* %ret558, align 4, !dbg !160
  store i32 %349, i32* %tmp559, align 4, !dbg !160
  %350 = load i32, i32* %tmp559, align 4, !dbg !160
  store i32 %350, i32* %t, align 4, !dbg !156
  %351 = load i32, i32* %u, align 4, !dbg !156
  %shr560 = lshr i32 %351, 2, !dbg !156
  %and561 = and i32 %shr560, 63, !dbg !156
  %idxprom562 = zext i32 %and561 to i64, !dbg !156
  %arrayidx563 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom562, !dbg !156
  %352 = load i32, i32* %arrayidx563, align 4, !dbg !156
  %353 = load i32, i32* %u, align 4, !dbg !156
  %shr564 = lshr i32 %353, 10, !dbg !156
  %and565 = and i32 %shr564, 63, !dbg !156
  %idxprom566 = zext i32 %and565 to i64, !dbg !156
  %arrayidx567 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom566, !dbg !156
  %354 = load i32, i32* %arrayidx567, align 4, !dbg !156
  %xor568 = xor i32 %352, %354, !dbg !156
  %355 = load i32, i32* %u, align 4, !dbg !156
  %shr569 = lshr i32 %355, 18, !dbg !156
  %and570 = and i32 %shr569, 63, !dbg !156
  %idxprom571 = zext i32 %and570 to i64, !dbg !156
  %arrayidx572 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom571, !dbg !156
  %356 = load i32, i32* %arrayidx572, align 4, !dbg !156
  %xor573 = xor i32 %xor568, %356, !dbg !156
  %357 = load i32, i32* %u, align 4, !dbg !156
  %shr574 = lshr i32 %357, 26, !dbg !156
  %and575 = and i32 %shr574, 63, !dbg !156
  %idxprom576 = zext i32 %and575 to i64, !dbg !156
  %arrayidx577 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom576, !dbg !156
  %358 = load i32, i32* %arrayidx577, align 4, !dbg !156
  %xor578 = xor i32 %xor573, %358, !dbg !156
  %359 = load i32, i32* %t, align 4, !dbg !156
  %shr579 = lshr i32 %359, 2, !dbg !156
  %and580 = and i32 %shr579, 63, !dbg !156
  %idxprom581 = zext i32 %and580 to i64, !dbg !156
  %arrayidx582 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom581, !dbg !156
  %360 = load i32, i32* %arrayidx582, align 4, !dbg !156
  %xor583 = xor i32 %xor578, %360, !dbg !156
  %361 = load i32, i32* %t, align 4, !dbg !156
  %shr584 = lshr i32 %361, 10, !dbg !156
  %and585 = and i32 %shr584, 63, !dbg !156
  %idxprom586 = zext i32 %and585 to i64, !dbg !156
  %arrayidx587 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom586, !dbg !156
  %362 = load i32, i32* %arrayidx587, align 4, !dbg !156
  %xor588 = xor i32 %xor583, %362, !dbg !156
  %363 = load i32, i32* %t, align 4, !dbg !156
  %shr589 = lshr i32 %363, 18, !dbg !156
  %and590 = and i32 %shr589, 63, !dbg !156
  %idxprom591 = zext i32 %and590 to i64, !dbg !156
  %arrayidx592 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom591, !dbg !156
  %364 = load i32, i32* %arrayidx592, align 4, !dbg !156
  %xor593 = xor i32 %xor588, %364, !dbg !156
  %365 = load i32, i32* %t, align 4, !dbg !156
  %shr594 = lshr i32 %365, 26, !dbg !156
  %and595 = and i32 %shr594, 63, !dbg !156
  %idxprom596 = zext i32 %and595 to i64, !dbg !156
  %arrayidx597 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom596, !dbg !156
  %366 = load i32, i32* %arrayidx597, align 4, !dbg !156
  %xor598 = xor i32 %xor593, %366, !dbg !156
  %367 = load i32, i32* %r, align 4, !dbg !156
  %xor599 = xor i32 %367, %xor598, !dbg !156
  store i32 %xor599, i32* %r, align 4, !dbg !156
  %368 = load i32, i32* %r, align 4, !dbg !162
  %369 = load i32*, i32** %s, align 8, !dbg !162
  %arrayidx600 = getelementptr inbounds i32, i32* %369, i64 24, !dbg !162
  %370 = load i32, i32* %arrayidx600, align 4, !dbg !162
  %xor601 = xor i32 %368, %370, !dbg !162
  store i32 %xor601, i32* %u, align 4, !dbg !162
  %371 = load i32, i32* %r, align 4, !dbg !162
  %372 = load i32*, i32** %s, align 8, !dbg !162
  %arrayidx602 = getelementptr inbounds i32, i32* %372, i64 25, !dbg !162
  %373 = load i32, i32* %arrayidx602, align 4, !dbg !162
  %xor603 = xor i32 %371, %373, !dbg !162
  store i32 %xor603, i32* %t, align 4, !dbg !162
  call void @llvm.dbg.declare(metadata i32* %ret604, metadata !164, metadata !DIExpression()), !dbg !166
  %374 = load i32, i32* %t, align 4, !dbg !166
  %375 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %374) #7, !dbg !166, !srcloc !167
  store i32 %375, i32* %ret604, align 4, !dbg !166
  %376 = load i32, i32* %ret604, align 4, !dbg !166
  store i32 %376, i32* %tmp605, align 4, !dbg !166
  %377 = load i32, i32* %tmp605, align 4, !dbg !166
  store i32 %377, i32* %t, align 4, !dbg !162
  %378 = load i32, i32* %u, align 4, !dbg !162
  %shr606 = lshr i32 %378, 2, !dbg !162
  %and607 = and i32 %shr606, 63, !dbg !162
  %idxprom608 = zext i32 %and607 to i64, !dbg !162
  %arrayidx609 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom608, !dbg !162
  %379 = load i32, i32* %arrayidx609, align 4, !dbg !162
  %380 = load i32, i32* %u, align 4, !dbg !162
  %shr610 = lshr i32 %380, 10, !dbg !162
  %and611 = and i32 %shr610, 63, !dbg !162
  %idxprom612 = zext i32 %and611 to i64, !dbg !162
  %arrayidx613 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom612, !dbg !162
  %381 = load i32, i32* %arrayidx613, align 4, !dbg !162
  %xor614 = xor i32 %379, %381, !dbg !162
  %382 = load i32, i32* %u, align 4, !dbg !162
  %shr615 = lshr i32 %382, 18, !dbg !162
  %and616 = and i32 %shr615, 63, !dbg !162
  %idxprom617 = zext i32 %and616 to i64, !dbg !162
  %arrayidx618 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom617, !dbg !162
  %383 = load i32, i32* %arrayidx618, align 4, !dbg !162
  %xor619 = xor i32 %xor614, %383, !dbg !162
  %384 = load i32, i32* %u, align 4, !dbg !162
  %shr620 = lshr i32 %384, 26, !dbg !162
  %and621 = and i32 %shr620, 63, !dbg !162
  %idxprom622 = zext i32 %and621 to i64, !dbg !162
  %arrayidx623 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom622, !dbg !162
  %385 = load i32, i32* %arrayidx623, align 4, !dbg !162
  %xor624 = xor i32 %xor619, %385, !dbg !162
  %386 = load i32, i32* %t, align 4, !dbg !162
  %shr625 = lshr i32 %386, 2, !dbg !162
  %and626 = and i32 %shr625, 63, !dbg !162
  %idxprom627 = zext i32 %and626 to i64, !dbg !162
  %arrayidx628 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom627, !dbg !162
  %387 = load i32, i32* %arrayidx628, align 4, !dbg !162
  %xor629 = xor i32 %xor624, %387, !dbg !162
  %388 = load i32, i32* %t, align 4, !dbg !162
  %shr630 = lshr i32 %388, 10, !dbg !162
  %and631 = and i32 %shr630, 63, !dbg !162
  %idxprom632 = zext i32 %and631 to i64, !dbg !162
  %arrayidx633 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom632, !dbg !162
  %389 = load i32, i32* %arrayidx633, align 4, !dbg !162
  %xor634 = xor i32 %xor629, %389, !dbg !162
  %390 = load i32, i32* %t, align 4, !dbg !162
  %shr635 = lshr i32 %390, 18, !dbg !162
  %and636 = and i32 %shr635, 63, !dbg !162
  %idxprom637 = zext i32 %and636 to i64, !dbg !162
  %arrayidx638 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom637, !dbg !162
  %391 = load i32, i32* %arrayidx638, align 4, !dbg !162
  %xor639 = xor i32 %xor634, %391, !dbg !162
  %392 = load i32, i32* %t, align 4, !dbg !162
  %shr640 = lshr i32 %392, 26, !dbg !162
  %and641 = and i32 %shr640, 63, !dbg !162
  %idxprom642 = zext i32 %and641 to i64, !dbg !162
  %arrayidx643 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom642, !dbg !162
  %393 = load i32, i32* %arrayidx643, align 4, !dbg !162
  %xor644 = xor i32 %xor639, %393, !dbg !162
  %394 = load i32, i32* %l, align 4, !dbg !162
  %xor645 = xor i32 %394, %xor644, !dbg !162
  store i32 %xor645, i32* %l, align 4, !dbg !162
  %395 = load i32, i32* %l, align 4, !dbg !168
  %396 = load i32*, i32** %s, align 8, !dbg !168
  %arrayidx646 = getelementptr inbounds i32, i32* %396, i64 26, !dbg !168
  %397 = load i32, i32* %arrayidx646, align 4, !dbg !168
  %xor647 = xor i32 %395, %397, !dbg !168
  store i32 %xor647, i32* %u, align 4, !dbg !168
  %398 = load i32, i32* %l, align 4, !dbg !168
  %399 = load i32*, i32** %s, align 8, !dbg !168
  %arrayidx648 = getelementptr inbounds i32, i32* %399, i64 27, !dbg !168
  %400 = load i32, i32* %arrayidx648, align 4, !dbg !168
  %xor649 = xor i32 %398, %400, !dbg !168
  store i32 %xor649, i32* %t, align 4, !dbg !168
  call void @llvm.dbg.declare(metadata i32* %ret650, metadata !170, metadata !DIExpression()), !dbg !172
  %401 = load i32, i32* %t, align 4, !dbg !172
  %402 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %401) #7, !dbg !172, !srcloc !173
  store i32 %402, i32* %ret650, align 4, !dbg !172
  %403 = load i32, i32* %ret650, align 4, !dbg !172
  store i32 %403, i32* %tmp651, align 4, !dbg !172
  %404 = load i32, i32* %tmp651, align 4, !dbg !172
  store i32 %404, i32* %t, align 4, !dbg !168
  %405 = load i32, i32* %u, align 4, !dbg !168
  %shr652 = lshr i32 %405, 2, !dbg !168
  %and653 = and i32 %shr652, 63, !dbg !168
  %idxprom654 = zext i32 %and653 to i64, !dbg !168
  %arrayidx655 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom654, !dbg !168
  %406 = load i32, i32* %arrayidx655, align 4, !dbg !168
  %407 = load i32, i32* %u, align 4, !dbg !168
  %shr656 = lshr i32 %407, 10, !dbg !168
  %and657 = and i32 %shr656, 63, !dbg !168
  %idxprom658 = zext i32 %and657 to i64, !dbg !168
  %arrayidx659 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom658, !dbg !168
  %408 = load i32, i32* %arrayidx659, align 4, !dbg !168
  %xor660 = xor i32 %406, %408, !dbg !168
  %409 = load i32, i32* %u, align 4, !dbg !168
  %shr661 = lshr i32 %409, 18, !dbg !168
  %and662 = and i32 %shr661, 63, !dbg !168
  %idxprom663 = zext i32 %and662 to i64, !dbg !168
  %arrayidx664 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom663, !dbg !168
  %410 = load i32, i32* %arrayidx664, align 4, !dbg !168
  %xor665 = xor i32 %xor660, %410, !dbg !168
  %411 = load i32, i32* %u, align 4, !dbg !168
  %shr666 = lshr i32 %411, 26, !dbg !168
  %and667 = and i32 %shr666, 63, !dbg !168
  %idxprom668 = zext i32 %and667 to i64, !dbg !168
  %arrayidx669 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom668, !dbg !168
  %412 = load i32, i32* %arrayidx669, align 4, !dbg !168
  %xor670 = xor i32 %xor665, %412, !dbg !168
  %413 = load i32, i32* %t, align 4, !dbg !168
  %shr671 = lshr i32 %413, 2, !dbg !168
  %and672 = and i32 %shr671, 63, !dbg !168
  %idxprom673 = zext i32 %and672 to i64, !dbg !168
  %arrayidx674 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom673, !dbg !168
  %414 = load i32, i32* %arrayidx674, align 4, !dbg !168
  %xor675 = xor i32 %xor670, %414, !dbg !168
  %415 = load i32, i32* %t, align 4, !dbg !168
  %shr676 = lshr i32 %415, 10, !dbg !168
  %and677 = and i32 %shr676, 63, !dbg !168
  %idxprom678 = zext i32 %and677 to i64, !dbg !168
  %arrayidx679 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom678, !dbg !168
  %416 = load i32, i32* %arrayidx679, align 4, !dbg !168
  %xor680 = xor i32 %xor675, %416, !dbg !168
  %417 = load i32, i32* %t, align 4, !dbg !168
  %shr681 = lshr i32 %417, 18, !dbg !168
  %and682 = and i32 %shr681, 63, !dbg !168
  %idxprom683 = zext i32 %and682 to i64, !dbg !168
  %arrayidx684 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom683, !dbg !168
  %418 = load i32, i32* %arrayidx684, align 4, !dbg !168
  %xor685 = xor i32 %xor680, %418, !dbg !168
  %419 = load i32, i32* %t, align 4, !dbg !168
  %shr686 = lshr i32 %419, 26, !dbg !168
  %and687 = and i32 %shr686, 63, !dbg !168
  %idxprom688 = zext i32 %and687 to i64, !dbg !168
  %arrayidx689 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom688, !dbg !168
  %420 = load i32, i32* %arrayidx689, align 4, !dbg !168
  %xor690 = xor i32 %xor685, %420, !dbg !168
  %421 = load i32, i32* %r, align 4, !dbg !168
  %xor691 = xor i32 %421, %xor690, !dbg !168
  store i32 %xor691, i32* %r, align 4, !dbg !168
  %422 = load i32, i32* %r, align 4, !dbg !174
  %423 = load i32*, i32** %s, align 8, !dbg !174
  %arrayidx692 = getelementptr inbounds i32, i32* %423, i64 28, !dbg !174
  %424 = load i32, i32* %arrayidx692, align 4, !dbg !174
  %xor693 = xor i32 %422, %424, !dbg !174
  store i32 %xor693, i32* %u, align 4, !dbg !174
  %425 = load i32, i32* %r, align 4, !dbg !174
  %426 = load i32*, i32** %s, align 8, !dbg !174
  %arrayidx694 = getelementptr inbounds i32, i32* %426, i64 29, !dbg !174
  %427 = load i32, i32* %arrayidx694, align 4, !dbg !174
  %xor695 = xor i32 %425, %427, !dbg !174
  store i32 %xor695, i32* %t, align 4, !dbg !174
  call void @llvm.dbg.declare(metadata i32* %ret696, metadata !176, metadata !DIExpression()), !dbg !178
  %428 = load i32, i32* %t, align 4, !dbg !178
  %429 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %428) #7, !dbg !178, !srcloc !179
  store i32 %429, i32* %ret696, align 4, !dbg !178
  %430 = load i32, i32* %ret696, align 4, !dbg !178
  store i32 %430, i32* %tmp697, align 4, !dbg !178
  %431 = load i32, i32* %tmp697, align 4, !dbg !178
  store i32 %431, i32* %t, align 4, !dbg !174
  %432 = load i32, i32* %u, align 4, !dbg !174
  %shr698 = lshr i32 %432, 2, !dbg !174
  %and699 = and i32 %shr698, 63, !dbg !174
  %idxprom700 = zext i32 %and699 to i64, !dbg !174
  %arrayidx701 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom700, !dbg !174
  %433 = load i32, i32* %arrayidx701, align 4, !dbg !174
  %434 = load i32, i32* %u, align 4, !dbg !174
  %shr702 = lshr i32 %434, 10, !dbg !174
  %and703 = and i32 %shr702, 63, !dbg !174
  %idxprom704 = zext i32 %and703 to i64, !dbg !174
  %arrayidx705 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom704, !dbg !174
  %435 = load i32, i32* %arrayidx705, align 4, !dbg !174
  %xor706 = xor i32 %433, %435, !dbg !174
  %436 = load i32, i32* %u, align 4, !dbg !174
  %shr707 = lshr i32 %436, 18, !dbg !174
  %and708 = and i32 %shr707, 63, !dbg !174
  %idxprom709 = zext i32 %and708 to i64, !dbg !174
  %arrayidx710 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom709, !dbg !174
  %437 = load i32, i32* %arrayidx710, align 4, !dbg !174
  %xor711 = xor i32 %xor706, %437, !dbg !174
  %438 = load i32, i32* %u, align 4, !dbg !174
  %shr712 = lshr i32 %438, 26, !dbg !174
  %and713 = and i32 %shr712, 63, !dbg !174
  %idxprom714 = zext i32 %and713 to i64, !dbg !174
  %arrayidx715 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom714, !dbg !174
  %439 = load i32, i32* %arrayidx715, align 4, !dbg !174
  %xor716 = xor i32 %xor711, %439, !dbg !174
  %440 = load i32, i32* %t, align 4, !dbg !174
  %shr717 = lshr i32 %440, 2, !dbg !174
  %and718 = and i32 %shr717, 63, !dbg !174
  %idxprom719 = zext i32 %and718 to i64, !dbg !174
  %arrayidx720 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom719, !dbg !174
  %441 = load i32, i32* %arrayidx720, align 4, !dbg !174
  %xor721 = xor i32 %xor716, %441, !dbg !174
  %442 = load i32, i32* %t, align 4, !dbg !174
  %shr722 = lshr i32 %442, 10, !dbg !174
  %and723 = and i32 %shr722, 63, !dbg !174
  %idxprom724 = zext i32 %and723 to i64, !dbg !174
  %arrayidx725 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom724, !dbg !174
  %443 = load i32, i32* %arrayidx725, align 4, !dbg !174
  %xor726 = xor i32 %xor721, %443, !dbg !174
  %444 = load i32, i32* %t, align 4, !dbg !174
  %shr727 = lshr i32 %444, 18, !dbg !174
  %and728 = and i32 %shr727, 63, !dbg !174
  %idxprom729 = zext i32 %and728 to i64, !dbg !174
  %arrayidx730 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom729, !dbg !174
  %445 = load i32, i32* %arrayidx730, align 4, !dbg !174
  %xor731 = xor i32 %xor726, %445, !dbg !174
  %446 = load i32, i32* %t, align 4, !dbg !174
  %shr732 = lshr i32 %446, 26, !dbg !174
  %and733 = and i32 %shr732, 63, !dbg !174
  %idxprom734 = zext i32 %and733 to i64, !dbg !174
  %arrayidx735 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom734, !dbg !174
  %447 = load i32, i32* %arrayidx735, align 4, !dbg !174
  %xor736 = xor i32 %xor731, %447, !dbg !174
  %448 = load i32, i32* %l, align 4, !dbg !174
  %xor737 = xor i32 %448, %xor736, !dbg !174
  store i32 %xor737, i32* %l, align 4, !dbg !174
  %449 = load i32, i32* %l, align 4, !dbg !180
  %450 = load i32*, i32** %s, align 8, !dbg !180
  %arrayidx738 = getelementptr inbounds i32, i32* %450, i64 30, !dbg !180
  %451 = load i32, i32* %arrayidx738, align 4, !dbg !180
  %xor739 = xor i32 %449, %451, !dbg !180
  store i32 %xor739, i32* %u, align 4, !dbg !180
  %452 = load i32, i32* %l, align 4, !dbg !180
  %453 = load i32*, i32** %s, align 8, !dbg !180
  %arrayidx740 = getelementptr inbounds i32, i32* %453, i64 31, !dbg !180
  %454 = load i32, i32* %arrayidx740, align 4, !dbg !180
  %xor741 = xor i32 %452, %454, !dbg !180
  store i32 %xor741, i32* %t, align 4, !dbg !180
  call void @llvm.dbg.declare(metadata i32* %ret742, metadata !182, metadata !DIExpression()), !dbg !184
  %455 = load i32, i32* %t, align 4, !dbg !184
  %456 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %455) #7, !dbg !184, !srcloc !185
  store i32 %456, i32* %ret742, align 4, !dbg !184
  %457 = load i32, i32* %ret742, align 4, !dbg !184
  store i32 %457, i32* %tmp743, align 4, !dbg !184
  %458 = load i32, i32* %tmp743, align 4, !dbg !184
  store i32 %458, i32* %t, align 4, !dbg !180
  %459 = load i32, i32* %u, align 4, !dbg !180
  %shr744 = lshr i32 %459, 2, !dbg !180
  %and745 = and i32 %shr744, 63, !dbg !180
  %idxprom746 = zext i32 %and745 to i64, !dbg !180
  %arrayidx747 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom746, !dbg !180
  %460 = load i32, i32* %arrayidx747, align 4, !dbg !180
  %461 = load i32, i32* %u, align 4, !dbg !180
  %shr748 = lshr i32 %461, 10, !dbg !180
  %and749 = and i32 %shr748, 63, !dbg !180
  %idxprom750 = zext i32 %and749 to i64, !dbg !180
  %arrayidx751 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom750, !dbg !180
  %462 = load i32, i32* %arrayidx751, align 4, !dbg !180
  %xor752 = xor i32 %460, %462, !dbg !180
  %463 = load i32, i32* %u, align 4, !dbg !180
  %shr753 = lshr i32 %463, 18, !dbg !180
  %and754 = and i32 %shr753, 63, !dbg !180
  %idxprom755 = zext i32 %and754 to i64, !dbg !180
  %arrayidx756 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom755, !dbg !180
  %464 = load i32, i32* %arrayidx756, align 4, !dbg !180
  %xor757 = xor i32 %xor752, %464, !dbg !180
  %465 = load i32, i32* %u, align 4, !dbg !180
  %shr758 = lshr i32 %465, 26, !dbg !180
  %and759 = and i32 %shr758, 63, !dbg !180
  %idxprom760 = zext i32 %and759 to i64, !dbg !180
  %arrayidx761 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom760, !dbg !180
  %466 = load i32, i32* %arrayidx761, align 4, !dbg !180
  %xor762 = xor i32 %xor757, %466, !dbg !180
  %467 = load i32, i32* %t, align 4, !dbg !180
  %shr763 = lshr i32 %467, 2, !dbg !180
  %and764 = and i32 %shr763, 63, !dbg !180
  %idxprom765 = zext i32 %and764 to i64, !dbg !180
  %arrayidx766 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom765, !dbg !180
  %468 = load i32, i32* %arrayidx766, align 4, !dbg !180
  %xor767 = xor i32 %xor762, %468, !dbg !180
  %469 = load i32, i32* %t, align 4, !dbg !180
  %shr768 = lshr i32 %469, 10, !dbg !180
  %and769 = and i32 %shr768, 63, !dbg !180
  %idxprom770 = zext i32 %and769 to i64, !dbg !180
  %arrayidx771 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom770, !dbg !180
  %470 = load i32, i32* %arrayidx771, align 4, !dbg !180
  %xor772 = xor i32 %xor767, %470, !dbg !180
  %471 = load i32, i32* %t, align 4, !dbg !180
  %shr773 = lshr i32 %471, 18, !dbg !180
  %and774 = and i32 %shr773, 63, !dbg !180
  %idxprom775 = zext i32 %and774 to i64, !dbg !180
  %arrayidx776 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom775, !dbg !180
  %472 = load i32, i32* %arrayidx776, align 4, !dbg !180
  %xor777 = xor i32 %xor772, %472, !dbg !180
  %473 = load i32, i32* %t, align 4, !dbg !180
  %shr778 = lshr i32 %473, 26, !dbg !180
  %and779 = and i32 %shr778, 63, !dbg !180
  %idxprom780 = zext i32 %and779 to i64, !dbg !180
  %arrayidx781 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom780, !dbg !180
  %474 = load i32, i32* %arrayidx781, align 4, !dbg !180
  %xor782 = xor i32 %xor777, %474, !dbg !180
  %475 = load i32, i32* %r, align 4, !dbg !180
  %xor783 = xor i32 %475, %xor782, !dbg !180
  store i32 %xor783, i32* %r, align 4, !dbg !180
  br label %if.end, !dbg !186

if.else:                                          ; preds = %entry
  %476 = load i32, i32* %r, align 4, !dbg !187
  %477 = load i32*, i32** %s, align 8, !dbg !187
  %arrayidx784 = getelementptr inbounds i32, i32* %477, i64 30, !dbg !187
  %478 = load i32, i32* %arrayidx784, align 4, !dbg !187
  %xor785 = xor i32 %476, %478, !dbg !187
  store i32 %xor785, i32* %u, align 4, !dbg !187
  %479 = load i32, i32* %r, align 4, !dbg !187
  %480 = load i32*, i32** %s, align 8, !dbg !187
  %arrayidx786 = getelementptr inbounds i32, i32* %480, i64 31, !dbg !187
  %481 = load i32, i32* %arrayidx786, align 4, !dbg !187
  %xor787 = xor i32 %479, %481, !dbg !187
  store i32 %xor787, i32* %t, align 4, !dbg !187
  call void @llvm.dbg.declare(metadata i32* %ret788, metadata !190, metadata !DIExpression()), !dbg !192
  %482 = load i32, i32* %t, align 4, !dbg !192
  %483 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %482) #7, !dbg !192, !srcloc !193
  store i32 %483, i32* %ret788, align 4, !dbg !192
  %484 = load i32, i32* %ret788, align 4, !dbg !192
  store i32 %484, i32* %tmp789, align 4, !dbg !192
  %485 = load i32, i32* %tmp789, align 4, !dbg !192
  store i32 %485, i32* %t, align 4, !dbg !187
  %486 = load i32, i32* %u, align 4, !dbg !187
  %shr790 = lshr i32 %486, 2, !dbg !187
  %and791 = and i32 %shr790, 63, !dbg !187
  %idxprom792 = zext i32 %and791 to i64, !dbg !187
  %arrayidx793 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom792, !dbg !187
  %487 = load i32, i32* %arrayidx793, align 4, !dbg !187
  %488 = load i32, i32* %u, align 4, !dbg !187
  %shr794 = lshr i32 %488, 10, !dbg !187
  %and795 = and i32 %shr794, 63, !dbg !187
  %idxprom796 = zext i32 %and795 to i64, !dbg !187
  %arrayidx797 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom796, !dbg !187
  %489 = load i32, i32* %arrayidx797, align 4, !dbg !187
  %xor798 = xor i32 %487, %489, !dbg !187
  %490 = load i32, i32* %u, align 4, !dbg !187
  %shr799 = lshr i32 %490, 18, !dbg !187
  %and800 = and i32 %shr799, 63, !dbg !187
  %idxprom801 = zext i32 %and800 to i64, !dbg !187
  %arrayidx802 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom801, !dbg !187
  %491 = load i32, i32* %arrayidx802, align 4, !dbg !187
  %xor803 = xor i32 %xor798, %491, !dbg !187
  %492 = load i32, i32* %u, align 4, !dbg !187
  %shr804 = lshr i32 %492, 26, !dbg !187
  %and805 = and i32 %shr804, 63, !dbg !187
  %idxprom806 = zext i32 %and805 to i64, !dbg !187
  %arrayidx807 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom806, !dbg !187
  %493 = load i32, i32* %arrayidx807, align 4, !dbg !187
  %xor808 = xor i32 %xor803, %493, !dbg !187
  %494 = load i32, i32* %t, align 4, !dbg !187
  %shr809 = lshr i32 %494, 2, !dbg !187
  %and810 = and i32 %shr809, 63, !dbg !187
  %idxprom811 = zext i32 %and810 to i64, !dbg !187
  %arrayidx812 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom811, !dbg !187
  %495 = load i32, i32* %arrayidx812, align 4, !dbg !187
  %xor813 = xor i32 %xor808, %495, !dbg !187
  %496 = load i32, i32* %t, align 4, !dbg !187
  %shr814 = lshr i32 %496, 10, !dbg !187
  %and815 = and i32 %shr814, 63, !dbg !187
  %idxprom816 = zext i32 %and815 to i64, !dbg !187
  %arrayidx817 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom816, !dbg !187
  %497 = load i32, i32* %arrayidx817, align 4, !dbg !187
  %xor818 = xor i32 %xor813, %497, !dbg !187
  %498 = load i32, i32* %t, align 4, !dbg !187
  %shr819 = lshr i32 %498, 18, !dbg !187
  %and820 = and i32 %shr819, 63, !dbg !187
  %idxprom821 = zext i32 %and820 to i64, !dbg !187
  %arrayidx822 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom821, !dbg !187
  %499 = load i32, i32* %arrayidx822, align 4, !dbg !187
  %xor823 = xor i32 %xor818, %499, !dbg !187
  %500 = load i32, i32* %t, align 4, !dbg !187
  %shr824 = lshr i32 %500, 26, !dbg !187
  %and825 = and i32 %shr824, 63, !dbg !187
  %idxprom826 = zext i32 %and825 to i64, !dbg !187
  %arrayidx827 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom826, !dbg !187
  %501 = load i32, i32* %arrayidx827, align 4, !dbg !187
  %xor828 = xor i32 %xor823, %501, !dbg !187
  %502 = load i32, i32* %l, align 4, !dbg !187
  %xor829 = xor i32 %502, %xor828, !dbg !187
  store i32 %xor829, i32* %l, align 4, !dbg !187
  %503 = load i32, i32* %l, align 4, !dbg !194
  %504 = load i32*, i32** %s, align 8, !dbg !194
  %arrayidx830 = getelementptr inbounds i32, i32* %504, i64 28, !dbg !194
  %505 = load i32, i32* %arrayidx830, align 4, !dbg !194
  %xor831 = xor i32 %503, %505, !dbg !194
  store i32 %xor831, i32* %u, align 4, !dbg !194
  %506 = load i32, i32* %l, align 4, !dbg !194
  %507 = load i32*, i32** %s, align 8, !dbg !194
  %arrayidx832 = getelementptr inbounds i32, i32* %507, i64 29, !dbg !194
  %508 = load i32, i32* %arrayidx832, align 4, !dbg !194
  %xor833 = xor i32 %506, %508, !dbg !194
  store i32 %xor833, i32* %t, align 4, !dbg !194
  call void @llvm.dbg.declare(metadata i32* %ret834, metadata !196, metadata !DIExpression()), !dbg !198
  %509 = load i32, i32* %t, align 4, !dbg !198
  %510 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %509) #7, !dbg !198, !srcloc !199
  store i32 %510, i32* %ret834, align 4, !dbg !198
  %511 = load i32, i32* %ret834, align 4, !dbg !198
  store i32 %511, i32* %tmp835, align 4, !dbg !198
  %512 = load i32, i32* %tmp835, align 4, !dbg !198
  store i32 %512, i32* %t, align 4, !dbg !194
  %513 = load i32, i32* %u, align 4, !dbg !194
  %shr836 = lshr i32 %513, 2, !dbg !194
  %and837 = and i32 %shr836, 63, !dbg !194
  %idxprom838 = zext i32 %and837 to i64, !dbg !194
  %arrayidx839 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom838, !dbg !194
  %514 = load i32, i32* %arrayidx839, align 4, !dbg !194
  %515 = load i32, i32* %u, align 4, !dbg !194
  %shr840 = lshr i32 %515, 10, !dbg !194
  %and841 = and i32 %shr840, 63, !dbg !194
  %idxprom842 = zext i32 %and841 to i64, !dbg !194
  %arrayidx843 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom842, !dbg !194
  %516 = load i32, i32* %arrayidx843, align 4, !dbg !194
  %xor844 = xor i32 %514, %516, !dbg !194
  %517 = load i32, i32* %u, align 4, !dbg !194
  %shr845 = lshr i32 %517, 18, !dbg !194
  %and846 = and i32 %shr845, 63, !dbg !194
  %idxprom847 = zext i32 %and846 to i64, !dbg !194
  %arrayidx848 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom847, !dbg !194
  %518 = load i32, i32* %arrayidx848, align 4, !dbg !194
  %xor849 = xor i32 %xor844, %518, !dbg !194
  %519 = load i32, i32* %u, align 4, !dbg !194
  %shr850 = lshr i32 %519, 26, !dbg !194
  %and851 = and i32 %shr850, 63, !dbg !194
  %idxprom852 = zext i32 %and851 to i64, !dbg !194
  %arrayidx853 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom852, !dbg !194
  %520 = load i32, i32* %arrayidx853, align 4, !dbg !194
  %xor854 = xor i32 %xor849, %520, !dbg !194
  %521 = load i32, i32* %t, align 4, !dbg !194
  %shr855 = lshr i32 %521, 2, !dbg !194
  %and856 = and i32 %shr855, 63, !dbg !194
  %idxprom857 = zext i32 %and856 to i64, !dbg !194
  %arrayidx858 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom857, !dbg !194
  %522 = load i32, i32* %arrayidx858, align 4, !dbg !194
  %xor859 = xor i32 %xor854, %522, !dbg !194
  %523 = load i32, i32* %t, align 4, !dbg !194
  %shr860 = lshr i32 %523, 10, !dbg !194
  %and861 = and i32 %shr860, 63, !dbg !194
  %idxprom862 = zext i32 %and861 to i64, !dbg !194
  %arrayidx863 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom862, !dbg !194
  %524 = load i32, i32* %arrayidx863, align 4, !dbg !194
  %xor864 = xor i32 %xor859, %524, !dbg !194
  %525 = load i32, i32* %t, align 4, !dbg !194
  %shr865 = lshr i32 %525, 18, !dbg !194
  %and866 = and i32 %shr865, 63, !dbg !194
  %idxprom867 = zext i32 %and866 to i64, !dbg !194
  %arrayidx868 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom867, !dbg !194
  %526 = load i32, i32* %arrayidx868, align 4, !dbg !194
  %xor869 = xor i32 %xor864, %526, !dbg !194
  %527 = load i32, i32* %t, align 4, !dbg !194
  %shr870 = lshr i32 %527, 26, !dbg !194
  %and871 = and i32 %shr870, 63, !dbg !194
  %idxprom872 = zext i32 %and871 to i64, !dbg !194
  %arrayidx873 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom872, !dbg !194
  %528 = load i32, i32* %arrayidx873, align 4, !dbg !194
  %xor874 = xor i32 %xor869, %528, !dbg !194
  %529 = load i32, i32* %r, align 4, !dbg !194
  %xor875 = xor i32 %529, %xor874, !dbg !194
  store i32 %xor875, i32* %r, align 4, !dbg !194
  %530 = load i32, i32* %r, align 4, !dbg !200
  %531 = load i32*, i32** %s, align 8, !dbg !200
  %arrayidx876 = getelementptr inbounds i32, i32* %531, i64 26, !dbg !200
  %532 = load i32, i32* %arrayidx876, align 4, !dbg !200
  %xor877 = xor i32 %530, %532, !dbg !200
  store i32 %xor877, i32* %u, align 4, !dbg !200
  %533 = load i32, i32* %r, align 4, !dbg !200
  %534 = load i32*, i32** %s, align 8, !dbg !200
  %arrayidx878 = getelementptr inbounds i32, i32* %534, i64 27, !dbg !200
  %535 = load i32, i32* %arrayidx878, align 4, !dbg !200
  %xor879 = xor i32 %533, %535, !dbg !200
  store i32 %xor879, i32* %t, align 4, !dbg !200
  call void @llvm.dbg.declare(metadata i32* %ret880, metadata !202, metadata !DIExpression()), !dbg !204
  %536 = load i32, i32* %t, align 4, !dbg !204
  %537 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %536) #7, !dbg !204, !srcloc !205
  store i32 %537, i32* %ret880, align 4, !dbg !204
  %538 = load i32, i32* %ret880, align 4, !dbg !204
  store i32 %538, i32* %tmp881, align 4, !dbg !204
  %539 = load i32, i32* %tmp881, align 4, !dbg !204
  store i32 %539, i32* %t, align 4, !dbg !200
  %540 = load i32, i32* %u, align 4, !dbg !200
  %shr882 = lshr i32 %540, 2, !dbg !200
  %and883 = and i32 %shr882, 63, !dbg !200
  %idxprom884 = zext i32 %and883 to i64, !dbg !200
  %arrayidx885 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom884, !dbg !200
  %541 = load i32, i32* %arrayidx885, align 4, !dbg !200
  %542 = load i32, i32* %u, align 4, !dbg !200
  %shr886 = lshr i32 %542, 10, !dbg !200
  %and887 = and i32 %shr886, 63, !dbg !200
  %idxprom888 = zext i32 %and887 to i64, !dbg !200
  %arrayidx889 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom888, !dbg !200
  %543 = load i32, i32* %arrayidx889, align 4, !dbg !200
  %xor890 = xor i32 %541, %543, !dbg !200
  %544 = load i32, i32* %u, align 4, !dbg !200
  %shr891 = lshr i32 %544, 18, !dbg !200
  %and892 = and i32 %shr891, 63, !dbg !200
  %idxprom893 = zext i32 %and892 to i64, !dbg !200
  %arrayidx894 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom893, !dbg !200
  %545 = load i32, i32* %arrayidx894, align 4, !dbg !200
  %xor895 = xor i32 %xor890, %545, !dbg !200
  %546 = load i32, i32* %u, align 4, !dbg !200
  %shr896 = lshr i32 %546, 26, !dbg !200
  %and897 = and i32 %shr896, 63, !dbg !200
  %idxprom898 = zext i32 %and897 to i64, !dbg !200
  %arrayidx899 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom898, !dbg !200
  %547 = load i32, i32* %arrayidx899, align 4, !dbg !200
  %xor900 = xor i32 %xor895, %547, !dbg !200
  %548 = load i32, i32* %t, align 4, !dbg !200
  %shr901 = lshr i32 %548, 2, !dbg !200
  %and902 = and i32 %shr901, 63, !dbg !200
  %idxprom903 = zext i32 %and902 to i64, !dbg !200
  %arrayidx904 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom903, !dbg !200
  %549 = load i32, i32* %arrayidx904, align 4, !dbg !200
  %xor905 = xor i32 %xor900, %549, !dbg !200
  %550 = load i32, i32* %t, align 4, !dbg !200
  %shr906 = lshr i32 %550, 10, !dbg !200
  %and907 = and i32 %shr906, 63, !dbg !200
  %idxprom908 = zext i32 %and907 to i64, !dbg !200
  %arrayidx909 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom908, !dbg !200
  %551 = load i32, i32* %arrayidx909, align 4, !dbg !200
  %xor910 = xor i32 %xor905, %551, !dbg !200
  %552 = load i32, i32* %t, align 4, !dbg !200
  %shr911 = lshr i32 %552, 18, !dbg !200
  %and912 = and i32 %shr911, 63, !dbg !200
  %idxprom913 = zext i32 %and912 to i64, !dbg !200
  %arrayidx914 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom913, !dbg !200
  %553 = load i32, i32* %arrayidx914, align 4, !dbg !200
  %xor915 = xor i32 %xor910, %553, !dbg !200
  %554 = load i32, i32* %t, align 4, !dbg !200
  %shr916 = lshr i32 %554, 26, !dbg !200
  %and917 = and i32 %shr916, 63, !dbg !200
  %idxprom918 = zext i32 %and917 to i64, !dbg !200
  %arrayidx919 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom918, !dbg !200
  %555 = load i32, i32* %arrayidx919, align 4, !dbg !200
  %xor920 = xor i32 %xor915, %555, !dbg !200
  %556 = load i32, i32* %l, align 4, !dbg !200
  %xor921 = xor i32 %556, %xor920, !dbg !200
  store i32 %xor921, i32* %l, align 4, !dbg !200
  %557 = load i32, i32* %l, align 4, !dbg !206
  %558 = load i32*, i32** %s, align 8, !dbg !206
  %arrayidx922 = getelementptr inbounds i32, i32* %558, i64 24, !dbg !206
  %559 = load i32, i32* %arrayidx922, align 4, !dbg !206
  %xor923 = xor i32 %557, %559, !dbg !206
  store i32 %xor923, i32* %u, align 4, !dbg !206
  %560 = load i32, i32* %l, align 4, !dbg !206
  %561 = load i32*, i32** %s, align 8, !dbg !206
  %arrayidx924 = getelementptr inbounds i32, i32* %561, i64 25, !dbg !206
  %562 = load i32, i32* %arrayidx924, align 4, !dbg !206
  %xor925 = xor i32 %560, %562, !dbg !206
  store i32 %xor925, i32* %t, align 4, !dbg !206
  call void @llvm.dbg.declare(metadata i32* %ret926, metadata !208, metadata !DIExpression()), !dbg !210
  %563 = load i32, i32* %t, align 4, !dbg !210
  %564 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %563) #7, !dbg !210, !srcloc !211
  store i32 %564, i32* %ret926, align 4, !dbg !210
  %565 = load i32, i32* %ret926, align 4, !dbg !210
  store i32 %565, i32* %tmp927, align 4, !dbg !210
  %566 = load i32, i32* %tmp927, align 4, !dbg !210
  store i32 %566, i32* %t, align 4, !dbg !206
  %567 = load i32, i32* %u, align 4, !dbg !206
  %shr928 = lshr i32 %567, 2, !dbg !206
  %and929 = and i32 %shr928, 63, !dbg !206
  %idxprom930 = zext i32 %and929 to i64, !dbg !206
  %arrayidx931 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom930, !dbg !206
  %568 = load i32, i32* %arrayidx931, align 4, !dbg !206
  %569 = load i32, i32* %u, align 4, !dbg !206
  %shr932 = lshr i32 %569, 10, !dbg !206
  %and933 = and i32 %shr932, 63, !dbg !206
  %idxprom934 = zext i32 %and933 to i64, !dbg !206
  %arrayidx935 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom934, !dbg !206
  %570 = load i32, i32* %arrayidx935, align 4, !dbg !206
  %xor936 = xor i32 %568, %570, !dbg !206
  %571 = load i32, i32* %u, align 4, !dbg !206
  %shr937 = lshr i32 %571, 18, !dbg !206
  %and938 = and i32 %shr937, 63, !dbg !206
  %idxprom939 = zext i32 %and938 to i64, !dbg !206
  %arrayidx940 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom939, !dbg !206
  %572 = load i32, i32* %arrayidx940, align 4, !dbg !206
  %xor941 = xor i32 %xor936, %572, !dbg !206
  %573 = load i32, i32* %u, align 4, !dbg !206
  %shr942 = lshr i32 %573, 26, !dbg !206
  %and943 = and i32 %shr942, 63, !dbg !206
  %idxprom944 = zext i32 %and943 to i64, !dbg !206
  %arrayidx945 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom944, !dbg !206
  %574 = load i32, i32* %arrayidx945, align 4, !dbg !206
  %xor946 = xor i32 %xor941, %574, !dbg !206
  %575 = load i32, i32* %t, align 4, !dbg !206
  %shr947 = lshr i32 %575, 2, !dbg !206
  %and948 = and i32 %shr947, 63, !dbg !206
  %idxprom949 = zext i32 %and948 to i64, !dbg !206
  %arrayidx950 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom949, !dbg !206
  %576 = load i32, i32* %arrayidx950, align 4, !dbg !206
  %xor951 = xor i32 %xor946, %576, !dbg !206
  %577 = load i32, i32* %t, align 4, !dbg !206
  %shr952 = lshr i32 %577, 10, !dbg !206
  %and953 = and i32 %shr952, 63, !dbg !206
  %idxprom954 = zext i32 %and953 to i64, !dbg !206
  %arrayidx955 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom954, !dbg !206
  %578 = load i32, i32* %arrayidx955, align 4, !dbg !206
  %xor956 = xor i32 %xor951, %578, !dbg !206
  %579 = load i32, i32* %t, align 4, !dbg !206
  %shr957 = lshr i32 %579, 18, !dbg !206
  %and958 = and i32 %shr957, 63, !dbg !206
  %idxprom959 = zext i32 %and958 to i64, !dbg !206
  %arrayidx960 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom959, !dbg !206
  %580 = load i32, i32* %arrayidx960, align 4, !dbg !206
  %xor961 = xor i32 %xor956, %580, !dbg !206
  %581 = load i32, i32* %t, align 4, !dbg !206
  %shr962 = lshr i32 %581, 26, !dbg !206
  %and963 = and i32 %shr962, 63, !dbg !206
  %idxprom964 = zext i32 %and963 to i64, !dbg !206
  %arrayidx965 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom964, !dbg !206
  %582 = load i32, i32* %arrayidx965, align 4, !dbg !206
  %xor966 = xor i32 %xor961, %582, !dbg !206
  %583 = load i32, i32* %r, align 4, !dbg !206
  %xor967 = xor i32 %583, %xor966, !dbg !206
  store i32 %xor967, i32* %r, align 4, !dbg !206
  %584 = load i32, i32* %r, align 4, !dbg !212
  %585 = load i32*, i32** %s, align 8, !dbg !212
  %arrayidx968 = getelementptr inbounds i32, i32* %585, i64 22, !dbg !212
  %586 = load i32, i32* %arrayidx968, align 4, !dbg !212
  %xor969 = xor i32 %584, %586, !dbg !212
  store i32 %xor969, i32* %u, align 4, !dbg !212
  %587 = load i32, i32* %r, align 4, !dbg !212
  %588 = load i32*, i32** %s, align 8, !dbg !212
  %arrayidx970 = getelementptr inbounds i32, i32* %588, i64 23, !dbg !212
  %589 = load i32, i32* %arrayidx970, align 4, !dbg !212
  %xor971 = xor i32 %587, %589, !dbg !212
  store i32 %xor971, i32* %t, align 4, !dbg !212
  call void @llvm.dbg.declare(metadata i32* %ret972, metadata !214, metadata !DIExpression()), !dbg !216
  %590 = load i32, i32* %t, align 4, !dbg !216
  %591 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %590) #7, !dbg !216, !srcloc !217
  store i32 %591, i32* %ret972, align 4, !dbg !216
  %592 = load i32, i32* %ret972, align 4, !dbg !216
  store i32 %592, i32* %tmp973, align 4, !dbg !216
  %593 = load i32, i32* %tmp973, align 4, !dbg !216
  store i32 %593, i32* %t, align 4, !dbg !212
  %594 = load i32, i32* %u, align 4, !dbg !212
  %shr974 = lshr i32 %594, 2, !dbg !212
  %and975 = and i32 %shr974, 63, !dbg !212
  %idxprom976 = zext i32 %and975 to i64, !dbg !212
  %arrayidx977 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom976, !dbg !212
  %595 = load i32, i32* %arrayidx977, align 4, !dbg !212
  %596 = load i32, i32* %u, align 4, !dbg !212
  %shr978 = lshr i32 %596, 10, !dbg !212
  %and979 = and i32 %shr978, 63, !dbg !212
  %idxprom980 = zext i32 %and979 to i64, !dbg !212
  %arrayidx981 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom980, !dbg !212
  %597 = load i32, i32* %arrayidx981, align 4, !dbg !212
  %xor982 = xor i32 %595, %597, !dbg !212
  %598 = load i32, i32* %u, align 4, !dbg !212
  %shr983 = lshr i32 %598, 18, !dbg !212
  %and984 = and i32 %shr983, 63, !dbg !212
  %idxprom985 = zext i32 %and984 to i64, !dbg !212
  %arrayidx986 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom985, !dbg !212
  %599 = load i32, i32* %arrayidx986, align 4, !dbg !212
  %xor987 = xor i32 %xor982, %599, !dbg !212
  %600 = load i32, i32* %u, align 4, !dbg !212
  %shr988 = lshr i32 %600, 26, !dbg !212
  %and989 = and i32 %shr988, 63, !dbg !212
  %idxprom990 = zext i32 %and989 to i64, !dbg !212
  %arrayidx991 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom990, !dbg !212
  %601 = load i32, i32* %arrayidx991, align 4, !dbg !212
  %xor992 = xor i32 %xor987, %601, !dbg !212
  %602 = load i32, i32* %t, align 4, !dbg !212
  %shr993 = lshr i32 %602, 2, !dbg !212
  %and994 = and i32 %shr993, 63, !dbg !212
  %idxprom995 = zext i32 %and994 to i64, !dbg !212
  %arrayidx996 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom995, !dbg !212
  %603 = load i32, i32* %arrayidx996, align 4, !dbg !212
  %xor997 = xor i32 %xor992, %603, !dbg !212
  %604 = load i32, i32* %t, align 4, !dbg !212
  %shr998 = lshr i32 %604, 10, !dbg !212
  %and999 = and i32 %shr998, 63, !dbg !212
  %idxprom1000 = zext i32 %and999 to i64, !dbg !212
  %arrayidx1001 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1000, !dbg !212
  %605 = load i32, i32* %arrayidx1001, align 4, !dbg !212
  %xor1002 = xor i32 %xor997, %605, !dbg !212
  %606 = load i32, i32* %t, align 4, !dbg !212
  %shr1003 = lshr i32 %606, 18, !dbg !212
  %and1004 = and i32 %shr1003, 63, !dbg !212
  %idxprom1005 = zext i32 %and1004 to i64, !dbg !212
  %arrayidx1006 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1005, !dbg !212
  %607 = load i32, i32* %arrayidx1006, align 4, !dbg !212
  %xor1007 = xor i32 %xor1002, %607, !dbg !212
  %608 = load i32, i32* %t, align 4, !dbg !212
  %shr1008 = lshr i32 %608, 26, !dbg !212
  %and1009 = and i32 %shr1008, 63, !dbg !212
  %idxprom1010 = zext i32 %and1009 to i64, !dbg !212
  %arrayidx1011 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1010, !dbg !212
  %609 = load i32, i32* %arrayidx1011, align 4, !dbg !212
  %xor1012 = xor i32 %xor1007, %609, !dbg !212
  %610 = load i32, i32* %l, align 4, !dbg !212
  %xor1013 = xor i32 %610, %xor1012, !dbg !212
  store i32 %xor1013, i32* %l, align 4, !dbg !212
  %611 = load i32, i32* %l, align 4, !dbg !218
  %612 = load i32*, i32** %s, align 8, !dbg !218
  %arrayidx1014 = getelementptr inbounds i32, i32* %612, i64 20, !dbg !218
  %613 = load i32, i32* %arrayidx1014, align 4, !dbg !218
  %xor1015 = xor i32 %611, %613, !dbg !218
  store i32 %xor1015, i32* %u, align 4, !dbg !218
  %614 = load i32, i32* %l, align 4, !dbg !218
  %615 = load i32*, i32** %s, align 8, !dbg !218
  %arrayidx1016 = getelementptr inbounds i32, i32* %615, i64 21, !dbg !218
  %616 = load i32, i32* %arrayidx1016, align 4, !dbg !218
  %xor1017 = xor i32 %614, %616, !dbg !218
  store i32 %xor1017, i32* %t, align 4, !dbg !218
  call void @llvm.dbg.declare(metadata i32* %ret1018, metadata !220, metadata !DIExpression()), !dbg !222
  %617 = load i32, i32* %t, align 4, !dbg !222
  %618 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %617) #7, !dbg !222, !srcloc !223
  store i32 %618, i32* %ret1018, align 4, !dbg !222
  %619 = load i32, i32* %ret1018, align 4, !dbg !222
  store i32 %619, i32* %tmp1019, align 4, !dbg !222
  %620 = load i32, i32* %tmp1019, align 4, !dbg !222
  store i32 %620, i32* %t, align 4, !dbg !218
  %621 = load i32, i32* %u, align 4, !dbg !218
  %shr1020 = lshr i32 %621, 2, !dbg !218
  %and1021 = and i32 %shr1020, 63, !dbg !218
  %idxprom1022 = zext i32 %and1021 to i64, !dbg !218
  %arrayidx1023 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1022, !dbg !218
  %622 = load i32, i32* %arrayidx1023, align 4, !dbg !218
  %623 = load i32, i32* %u, align 4, !dbg !218
  %shr1024 = lshr i32 %623, 10, !dbg !218
  %and1025 = and i32 %shr1024, 63, !dbg !218
  %idxprom1026 = zext i32 %and1025 to i64, !dbg !218
  %arrayidx1027 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1026, !dbg !218
  %624 = load i32, i32* %arrayidx1027, align 4, !dbg !218
  %xor1028 = xor i32 %622, %624, !dbg !218
  %625 = load i32, i32* %u, align 4, !dbg !218
  %shr1029 = lshr i32 %625, 18, !dbg !218
  %and1030 = and i32 %shr1029, 63, !dbg !218
  %idxprom1031 = zext i32 %and1030 to i64, !dbg !218
  %arrayidx1032 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1031, !dbg !218
  %626 = load i32, i32* %arrayidx1032, align 4, !dbg !218
  %xor1033 = xor i32 %xor1028, %626, !dbg !218
  %627 = load i32, i32* %u, align 4, !dbg !218
  %shr1034 = lshr i32 %627, 26, !dbg !218
  %and1035 = and i32 %shr1034, 63, !dbg !218
  %idxprom1036 = zext i32 %and1035 to i64, !dbg !218
  %arrayidx1037 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1036, !dbg !218
  %628 = load i32, i32* %arrayidx1037, align 4, !dbg !218
  %xor1038 = xor i32 %xor1033, %628, !dbg !218
  %629 = load i32, i32* %t, align 4, !dbg !218
  %shr1039 = lshr i32 %629, 2, !dbg !218
  %and1040 = and i32 %shr1039, 63, !dbg !218
  %idxprom1041 = zext i32 %and1040 to i64, !dbg !218
  %arrayidx1042 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1041, !dbg !218
  %630 = load i32, i32* %arrayidx1042, align 4, !dbg !218
  %xor1043 = xor i32 %xor1038, %630, !dbg !218
  %631 = load i32, i32* %t, align 4, !dbg !218
  %shr1044 = lshr i32 %631, 10, !dbg !218
  %and1045 = and i32 %shr1044, 63, !dbg !218
  %idxprom1046 = zext i32 %and1045 to i64, !dbg !218
  %arrayidx1047 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1046, !dbg !218
  %632 = load i32, i32* %arrayidx1047, align 4, !dbg !218
  %xor1048 = xor i32 %xor1043, %632, !dbg !218
  %633 = load i32, i32* %t, align 4, !dbg !218
  %shr1049 = lshr i32 %633, 18, !dbg !218
  %and1050 = and i32 %shr1049, 63, !dbg !218
  %idxprom1051 = zext i32 %and1050 to i64, !dbg !218
  %arrayidx1052 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1051, !dbg !218
  %634 = load i32, i32* %arrayidx1052, align 4, !dbg !218
  %xor1053 = xor i32 %xor1048, %634, !dbg !218
  %635 = load i32, i32* %t, align 4, !dbg !218
  %shr1054 = lshr i32 %635, 26, !dbg !218
  %and1055 = and i32 %shr1054, 63, !dbg !218
  %idxprom1056 = zext i32 %and1055 to i64, !dbg !218
  %arrayidx1057 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1056, !dbg !218
  %636 = load i32, i32* %arrayidx1057, align 4, !dbg !218
  %xor1058 = xor i32 %xor1053, %636, !dbg !218
  %637 = load i32, i32* %r, align 4, !dbg !218
  %xor1059 = xor i32 %637, %xor1058, !dbg !218
  store i32 %xor1059, i32* %r, align 4, !dbg !218
  %638 = load i32, i32* %r, align 4, !dbg !224
  %639 = load i32*, i32** %s, align 8, !dbg !224
  %arrayidx1060 = getelementptr inbounds i32, i32* %639, i64 18, !dbg !224
  %640 = load i32, i32* %arrayidx1060, align 4, !dbg !224
  %xor1061 = xor i32 %638, %640, !dbg !224
  store i32 %xor1061, i32* %u, align 4, !dbg !224
  %641 = load i32, i32* %r, align 4, !dbg !224
  %642 = load i32*, i32** %s, align 8, !dbg !224
  %arrayidx1062 = getelementptr inbounds i32, i32* %642, i64 19, !dbg !224
  %643 = load i32, i32* %arrayidx1062, align 4, !dbg !224
  %xor1063 = xor i32 %641, %643, !dbg !224
  store i32 %xor1063, i32* %t, align 4, !dbg !224
  call void @llvm.dbg.declare(metadata i32* %ret1064, metadata !226, metadata !DIExpression()), !dbg !228
  %644 = load i32, i32* %t, align 4, !dbg !228
  %645 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %644) #7, !dbg !228, !srcloc !229
  store i32 %645, i32* %ret1064, align 4, !dbg !228
  %646 = load i32, i32* %ret1064, align 4, !dbg !228
  store i32 %646, i32* %tmp1065, align 4, !dbg !228
  %647 = load i32, i32* %tmp1065, align 4, !dbg !228
  store i32 %647, i32* %t, align 4, !dbg !224
  %648 = load i32, i32* %u, align 4, !dbg !224
  %shr1066 = lshr i32 %648, 2, !dbg !224
  %and1067 = and i32 %shr1066, 63, !dbg !224
  %idxprom1068 = zext i32 %and1067 to i64, !dbg !224
  %arrayidx1069 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1068, !dbg !224
  %649 = load i32, i32* %arrayidx1069, align 4, !dbg !224
  %650 = load i32, i32* %u, align 4, !dbg !224
  %shr1070 = lshr i32 %650, 10, !dbg !224
  %and1071 = and i32 %shr1070, 63, !dbg !224
  %idxprom1072 = zext i32 %and1071 to i64, !dbg !224
  %arrayidx1073 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1072, !dbg !224
  %651 = load i32, i32* %arrayidx1073, align 4, !dbg !224
  %xor1074 = xor i32 %649, %651, !dbg !224
  %652 = load i32, i32* %u, align 4, !dbg !224
  %shr1075 = lshr i32 %652, 18, !dbg !224
  %and1076 = and i32 %shr1075, 63, !dbg !224
  %idxprom1077 = zext i32 %and1076 to i64, !dbg !224
  %arrayidx1078 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1077, !dbg !224
  %653 = load i32, i32* %arrayidx1078, align 4, !dbg !224
  %xor1079 = xor i32 %xor1074, %653, !dbg !224
  %654 = load i32, i32* %u, align 4, !dbg !224
  %shr1080 = lshr i32 %654, 26, !dbg !224
  %and1081 = and i32 %shr1080, 63, !dbg !224
  %idxprom1082 = zext i32 %and1081 to i64, !dbg !224
  %arrayidx1083 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1082, !dbg !224
  %655 = load i32, i32* %arrayidx1083, align 4, !dbg !224
  %xor1084 = xor i32 %xor1079, %655, !dbg !224
  %656 = load i32, i32* %t, align 4, !dbg !224
  %shr1085 = lshr i32 %656, 2, !dbg !224
  %and1086 = and i32 %shr1085, 63, !dbg !224
  %idxprom1087 = zext i32 %and1086 to i64, !dbg !224
  %arrayidx1088 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1087, !dbg !224
  %657 = load i32, i32* %arrayidx1088, align 4, !dbg !224
  %xor1089 = xor i32 %xor1084, %657, !dbg !224
  %658 = load i32, i32* %t, align 4, !dbg !224
  %shr1090 = lshr i32 %658, 10, !dbg !224
  %and1091 = and i32 %shr1090, 63, !dbg !224
  %idxprom1092 = zext i32 %and1091 to i64, !dbg !224
  %arrayidx1093 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1092, !dbg !224
  %659 = load i32, i32* %arrayidx1093, align 4, !dbg !224
  %xor1094 = xor i32 %xor1089, %659, !dbg !224
  %660 = load i32, i32* %t, align 4, !dbg !224
  %shr1095 = lshr i32 %660, 18, !dbg !224
  %and1096 = and i32 %shr1095, 63, !dbg !224
  %idxprom1097 = zext i32 %and1096 to i64, !dbg !224
  %arrayidx1098 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1097, !dbg !224
  %661 = load i32, i32* %arrayidx1098, align 4, !dbg !224
  %xor1099 = xor i32 %xor1094, %661, !dbg !224
  %662 = load i32, i32* %t, align 4, !dbg !224
  %shr1100 = lshr i32 %662, 26, !dbg !224
  %and1101 = and i32 %shr1100, 63, !dbg !224
  %idxprom1102 = zext i32 %and1101 to i64, !dbg !224
  %arrayidx1103 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1102, !dbg !224
  %663 = load i32, i32* %arrayidx1103, align 4, !dbg !224
  %xor1104 = xor i32 %xor1099, %663, !dbg !224
  %664 = load i32, i32* %l, align 4, !dbg !224
  %xor1105 = xor i32 %664, %xor1104, !dbg !224
  store i32 %xor1105, i32* %l, align 4, !dbg !224
  %665 = load i32, i32* %l, align 4, !dbg !230
  %666 = load i32*, i32** %s, align 8, !dbg !230
  %arrayidx1106 = getelementptr inbounds i32, i32* %666, i64 16, !dbg !230
  %667 = load i32, i32* %arrayidx1106, align 4, !dbg !230
  %xor1107 = xor i32 %665, %667, !dbg !230
  store i32 %xor1107, i32* %u, align 4, !dbg !230
  %668 = load i32, i32* %l, align 4, !dbg !230
  %669 = load i32*, i32** %s, align 8, !dbg !230
  %arrayidx1108 = getelementptr inbounds i32, i32* %669, i64 17, !dbg !230
  %670 = load i32, i32* %arrayidx1108, align 4, !dbg !230
  %xor1109 = xor i32 %668, %670, !dbg !230
  store i32 %xor1109, i32* %t, align 4, !dbg !230
  call void @llvm.dbg.declare(metadata i32* %ret1110, metadata !232, metadata !DIExpression()), !dbg !234
  %671 = load i32, i32* %t, align 4, !dbg !234
  %672 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %671) #7, !dbg !234, !srcloc !235
  store i32 %672, i32* %ret1110, align 4, !dbg !234
  %673 = load i32, i32* %ret1110, align 4, !dbg !234
  store i32 %673, i32* %tmp1111, align 4, !dbg !234
  %674 = load i32, i32* %tmp1111, align 4, !dbg !234
  store i32 %674, i32* %t, align 4, !dbg !230
  %675 = load i32, i32* %u, align 4, !dbg !230
  %shr1112 = lshr i32 %675, 2, !dbg !230
  %and1113 = and i32 %shr1112, 63, !dbg !230
  %idxprom1114 = zext i32 %and1113 to i64, !dbg !230
  %arrayidx1115 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1114, !dbg !230
  %676 = load i32, i32* %arrayidx1115, align 4, !dbg !230
  %677 = load i32, i32* %u, align 4, !dbg !230
  %shr1116 = lshr i32 %677, 10, !dbg !230
  %and1117 = and i32 %shr1116, 63, !dbg !230
  %idxprom1118 = zext i32 %and1117 to i64, !dbg !230
  %arrayidx1119 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1118, !dbg !230
  %678 = load i32, i32* %arrayidx1119, align 4, !dbg !230
  %xor1120 = xor i32 %676, %678, !dbg !230
  %679 = load i32, i32* %u, align 4, !dbg !230
  %shr1121 = lshr i32 %679, 18, !dbg !230
  %and1122 = and i32 %shr1121, 63, !dbg !230
  %idxprom1123 = zext i32 %and1122 to i64, !dbg !230
  %arrayidx1124 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1123, !dbg !230
  %680 = load i32, i32* %arrayidx1124, align 4, !dbg !230
  %xor1125 = xor i32 %xor1120, %680, !dbg !230
  %681 = load i32, i32* %u, align 4, !dbg !230
  %shr1126 = lshr i32 %681, 26, !dbg !230
  %and1127 = and i32 %shr1126, 63, !dbg !230
  %idxprom1128 = zext i32 %and1127 to i64, !dbg !230
  %arrayidx1129 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1128, !dbg !230
  %682 = load i32, i32* %arrayidx1129, align 4, !dbg !230
  %xor1130 = xor i32 %xor1125, %682, !dbg !230
  %683 = load i32, i32* %t, align 4, !dbg !230
  %shr1131 = lshr i32 %683, 2, !dbg !230
  %and1132 = and i32 %shr1131, 63, !dbg !230
  %idxprom1133 = zext i32 %and1132 to i64, !dbg !230
  %arrayidx1134 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1133, !dbg !230
  %684 = load i32, i32* %arrayidx1134, align 4, !dbg !230
  %xor1135 = xor i32 %xor1130, %684, !dbg !230
  %685 = load i32, i32* %t, align 4, !dbg !230
  %shr1136 = lshr i32 %685, 10, !dbg !230
  %and1137 = and i32 %shr1136, 63, !dbg !230
  %idxprom1138 = zext i32 %and1137 to i64, !dbg !230
  %arrayidx1139 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1138, !dbg !230
  %686 = load i32, i32* %arrayidx1139, align 4, !dbg !230
  %xor1140 = xor i32 %xor1135, %686, !dbg !230
  %687 = load i32, i32* %t, align 4, !dbg !230
  %shr1141 = lshr i32 %687, 18, !dbg !230
  %and1142 = and i32 %shr1141, 63, !dbg !230
  %idxprom1143 = zext i32 %and1142 to i64, !dbg !230
  %arrayidx1144 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1143, !dbg !230
  %688 = load i32, i32* %arrayidx1144, align 4, !dbg !230
  %xor1145 = xor i32 %xor1140, %688, !dbg !230
  %689 = load i32, i32* %t, align 4, !dbg !230
  %shr1146 = lshr i32 %689, 26, !dbg !230
  %and1147 = and i32 %shr1146, 63, !dbg !230
  %idxprom1148 = zext i32 %and1147 to i64, !dbg !230
  %arrayidx1149 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1148, !dbg !230
  %690 = load i32, i32* %arrayidx1149, align 4, !dbg !230
  %xor1150 = xor i32 %xor1145, %690, !dbg !230
  %691 = load i32, i32* %r, align 4, !dbg !230
  %xor1151 = xor i32 %691, %xor1150, !dbg !230
  store i32 %xor1151, i32* %r, align 4, !dbg !230
  %692 = load i32, i32* %r, align 4, !dbg !236
  %693 = load i32*, i32** %s, align 8, !dbg !236
  %arrayidx1152 = getelementptr inbounds i32, i32* %693, i64 14, !dbg !236
  %694 = load i32, i32* %arrayidx1152, align 4, !dbg !236
  %xor1153 = xor i32 %692, %694, !dbg !236
  store i32 %xor1153, i32* %u, align 4, !dbg !236
  %695 = load i32, i32* %r, align 4, !dbg !236
  %696 = load i32*, i32** %s, align 8, !dbg !236
  %arrayidx1154 = getelementptr inbounds i32, i32* %696, i64 15, !dbg !236
  %697 = load i32, i32* %arrayidx1154, align 4, !dbg !236
  %xor1155 = xor i32 %695, %697, !dbg !236
  store i32 %xor1155, i32* %t, align 4, !dbg !236
  call void @llvm.dbg.declare(metadata i32* %ret1156, metadata !238, metadata !DIExpression()), !dbg !240
  %698 = load i32, i32* %t, align 4, !dbg !240
  %699 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %698) #7, !dbg !240, !srcloc !241
  store i32 %699, i32* %ret1156, align 4, !dbg !240
  %700 = load i32, i32* %ret1156, align 4, !dbg !240
  store i32 %700, i32* %tmp1157, align 4, !dbg !240
  %701 = load i32, i32* %tmp1157, align 4, !dbg !240
  store i32 %701, i32* %t, align 4, !dbg !236
  %702 = load i32, i32* %u, align 4, !dbg !236
  %shr1158 = lshr i32 %702, 2, !dbg !236
  %and1159 = and i32 %shr1158, 63, !dbg !236
  %idxprom1160 = zext i32 %and1159 to i64, !dbg !236
  %arrayidx1161 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1160, !dbg !236
  %703 = load i32, i32* %arrayidx1161, align 4, !dbg !236
  %704 = load i32, i32* %u, align 4, !dbg !236
  %shr1162 = lshr i32 %704, 10, !dbg !236
  %and1163 = and i32 %shr1162, 63, !dbg !236
  %idxprom1164 = zext i32 %and1163 to i64, !dbg !236
  %arrayidx1165 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1164, !dbg !236
  %705 = load i32, i32* %arrayidx1165, align 4, !dbg !236
  %xor1166 = xor i32 %703, %705, !dbg !236
  %706 = load i32, i32* %u, align 4, !dbg !236
  %shr1167 = lshr i32 %706, 18, !dbg !236
  %and1168 = and i32 %shr1167, 63, !dbg !236
  %idxprom1169 = zext i32 %and1168 to i64, !dbg !236
  %arrayidx1170 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1169, !dbg !236
  %707 = load i32, i32* %arrayidx1170, align 4, !dbg !236
  %xor1171 = xor i32 %xor1166, %707, !dbg !236
  %708 = load i32, i32* %u, align 4, !dbg !236
  %shr1172 = lshr i32 %708, 26, !dbg !236
  %and1173 = and i32 %shr1172, 63, !dbg !236
  %idxprom1174 = zext i32 %and1173 to i64, !dbg !236
  %arrayidx1175 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1174, !dbg !236
  %709 = load i32, i32* %arrayidx1175, align 4, !dbg !236
  %xor1176 = xor i32 %xor1171, %709, !dbg !236
  %710 = load i32, i32* %t, align 4, !dbg !236
  %shr1177 = lshr i32 %710, 2, !dbg !236
  %and1178 = and i32 %shr1177, 63, !dbg !236
  %idxprom1179 = zext i32 %and1178 to i64, !dbg !236
  %arrayidx1180 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1179, !dbg !236
  %711 = load i32, i32* %arrayidx1180, align 4, !dbg !236
  %xor1181 = xor i32 %xor1176, %711, !dbg !236
  %712 = load i32, i32* %t, align 4, !dbg !236
  %shr1182 = lshr i32 %712, 10, !dbg !236
  %and1183 = and i32 %shr1182, 63, !dbg !236
  %idxprom1184 = zext i32 %and1183 to i64, !dbg !236
  %arrayidx1185 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1184, !dbg !236
  %713 = load i32, i32* %arrayidx1185, align 4, !dbg !236
  %xor1186 = xor i32 %xor1181, %713, !dbg !236
  %714 = load i32, i32* %t, align 4, !dbg !236
  %shr1187 = lshr i32 %714, 18, !dbg !236
  %and1188 = and i32 %shr1187, 63, !dbg !236
  %idxprom1189 = zext i32 %and1188 to i64, !dbg !236
  %arrayidx1190 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1189, !dbg !236
  %715 = load i32, i32* %arrayidx1190, align 4, !dbg !236
  %xor1191 = xor i32 %xor1186, %715, !dbg !236
  %716 = load i32, i32* %t, align 4, !dbg !236
  %shr1192 = lshr i32 %716, 26, !dbg !236
  %and1193 = and i32 %shr1192, 63, !dbg !236
  %idxprom1194 = zext i32 %and1193 to i64, !dbg !236
  %arrayidx1195 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1194, !dbg !236
  %717 = load i32, i32* %arrayidx1195, align 4, !dbg !236
  %xor1196 = xor i32 %xor1191, %717, !dbg !236
  %718 = load i32, i32* %l, align 4, !dbg !236
  %xor1197 = xor i32 %718, %xor1196, !dbg !236
  store i32 %xor1197, i32* %l, align 4, !dbg !236
  %719 = load i32, i32* %l, align 4, !dbg !242
  %720 = load i32*, i32** %s, align 8, !dbg !242
  %arrayidx1198 = getelementptr inbounds i32, i32* %720, i64 12, !dbg !242
  %721 = load i32, i32* %arrayidx1198, align 4, !dbg !242
  %xor1199 = xor i32 %719, %721, !dbg !242
  store i32 %xor1199, i32* %u, align 4, !dbg !242
  %722 = load i32, i32* %l, align 4, !dbg !242
  %723 = load i32*, i32** %s, align 8, !dbg !242
  %arrayidx1200 = getelementptr inbounds i32, i32* %723, i64 13, !dbg !242
  %724 = load i32, i32* %arrayidx1200, align 4, !dbg !242
  %xor1201 = xor i32 %722, %724, !dbg !242
  store i32 %xor1201, i32* %t, align 4, !dbg !242
  call void @llvm.dbg.declare(metadata i32* %ret1202, metadata !244, metadata !DIExpression()), !dbg !246
  %725 = load i32, i32* %t, align 4, !dbg !246
  %726 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %725) #7, !dbg !246, !srcloc !247
  store i32 %726, i32* %ret1202, align 4, !dbg !246
  %727 = load i32, i32* %ret1202, align 4, !dbg !246
  store i32 %727, i32* %tmp1203, align 4, !dbg !246
  %728 = load i32, i32* %tmp1203, align 4, !dbg !246
  store i32 %728, i32* %t, align 4, !dbg !242
  %729 = load i32, i32* %u, align 4, !dbg !242
  %shr1204 = lshr i32 %729, 2, !dbg !242
  %and1205 = and i32 %shr1204, 63, !dbg !242
  %idxprom1206 = zext i32 %and1205 to i64, !dbg !242
  %arrayidx1207 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1206, !dbg !242
  %730 = load i32, i32* %arrayidx1207, align 4, !dbg !242
  %731 = load i32, i32* %u, align 4, !dbg !242
  %shr1208 = lshr i32 %731, 10, !dbg !242
  %and1209 = and i32 %shr1208, 63, !dbg !242
  %idxprom1210 = zext i32 %and1209 to i64, !dbg !242
  %arrayidx1211 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1210, !dbg !242
  %732 = load i32, i32* %arrayidx1211, align 4, !dbg !242
  %xor1212 = xor i32 %730, %732, !dbg !242
  %733 = load i32, i32* %u, align 4, !dbg !242
  %shr1213 = lshr i32 %733, 18, !dbg !242
  %and1214 = and i32 %shr1213, 63, !dbg !242
  %idxprom1215 = zext i32 %and1214 to i64, !dbg !242
  %arrayidx1216 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1215, !dbg !242
  %734 = load i32, i32* %arrayidx1216, align 4, !dbg !242
  %xor1217 = xor i32 %xor1212, %734, !dbg !242
  %735 = load i32, i32* %u, align 4, !dbg !242
  %shr1218 = lshr i32 %735, 26, !dbg !242
  %and1219 = and i32 %shr1218, 63, !dbg !242
  %idxprom1220 = zext i32 %and1219 to i64, !dbg !242
  %arrayidx1221 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1220, !dbg !242
  %736 = load i32, i32* %arrayidx1221, align 4, !dbg !242
  %xor1222 = xor i32 %xor1217, %736, !dbg !242
  %737 = load i32, i32* %t, align 4, !dbg !242
  %shr1223 = lshr i32 %737, 2, !dbg !242
  %and1224 = and i32 %shr1223, 63, !dbg !242
  %idxprom1225 = zext i32 %and1224 to i64, !dbg !242
  %arrayidx1226 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1225, !dbg !242
  %738 = load i32, i32* %arrayidx1226, align 4, !dbg !242
  %xor1227 = xor i32 %xor1222, %738, !dbg !242
  %739 = load i32, i32* %t, align 4, !dbg !242
  %shr1228 = lshr i32 %739, 10, !dbg !242
  %and1229 = and i32 %shr1228, 63, !dbg !242
  %idxprom1230 = zext i32 %and1229 to i64, !dbg !242
  %arrayidx1231 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1230, !dbg !242
  %740 = load i32, i32* %arrayidx1231, align 4, !dbg !242
  %xor1232 = xor i32 %xor1227, %740, !dbg !242
  %741 = load i32, i32* %t, align 4, !dbg !242
  %shr1233 = lshr i32 %741, 18, !dbg !242
  %and1234 = and i32 %shr1233, 63, !dbg !242
  %idxprom1235 = zext i32 %and1234 to i64, !dbg !242
  %arrayidx1236 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1235, !dbg !242
  %742 = load i32, i32* %arrayidx1236, align 4, !dbg !242
  %xor1237 = xor i32 %xor1232, %742, !dbg !242
  %743 = load i32, i32* %t, align 4, !dbg !242
  %shr1238 = lshr i32 %743, 26, !dbg !242
  %and1239 = and i32 %shr1238, 63, !dbg !242
  %idxprom1240 = zext i32 %and1239 to i64, !dbg !242
  %arrayidx1241 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1240, !dbg !242
  %744 = load i32, i32* %arrayidx1241, align 4, !dbg !242
  %xor1242 = xor i32 %xor1237, %744, !dbg !242
  %745 = load i32, i32* %r, align 4, !dbg !242
  %xor1243 = xor i32 %745, %xor1242, !dbg !242
  store i32 %xor1243, i32* %r, align 4, !dbg !242
  %746 = load i32, i32* %r, align 4, !dbg !248
  %747 = load i32*, i32** %s, align 8, !dbg !248
  %arrayidx1244 = getelementptr inbounds i32, i32* %747, i64 10, !dbg !248
  %748 = load i32, i32* %arrayidx1244, align 4, !dbg !248
  %xor1245 = xor i32 %746, %748, !dbg !248
  store i32 %xor1245, i32* %u, align 4, !dbg !248
  %749 = load i32, i32* %r, align 4, !dbg !248
  %750 = load i32*, i32** %s, align 8, !dbg !248
  %arrayidx1246 = getelementptr inbounds i32, i32* %750, i64 11, !dbg !248
  %751 = load i32, i32* %arrayidx1246, align 4, !dbg !248
  %xor1247 = xor i32 %749, %751, !dbg !248
  store i32 %xor1247, i32* %t, align 4, !dbg !248
  call void @llvm.dbg.declare(metadata i32* %ret1248, metadata !250, metadata !DIExpression()), !dbg !252
  %752 = load i32, i32* %t, align 4, !dbg !252
  %753 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %752) #7, !dbg !252, !srcloc !253
  store i32 %753, i32* %ret1248, align 4, !dbg !252
  %754 = load i32, i32* %ret1248, align 4, !dbg !252
  store i32 %754, i32* %tmp1249, align 4, !dbg !252
  %755 = load i32, i32* %tmp1249, align 4, !dbg !252
  store i32 %755, i32* %t, align 4, !dbg !248
  %756 = load i32, i32* %u, align 4, !dbg !248
  %shr1250 = lshr i32 %756, 2, !dbg !248
  %and1251 = and i32 %shr1250, 63, !dbg !248
  %idxprom1252 = zext i32 %and1251 to i64, !dbg !248
  %arrayidx1253 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1252, !dbg !248
  %757 = load i32, i32* %arrayidx1253, align 4, !dbg !248
  %758 = load i32, i32* %u, align 4, !dbg !248
  %shr1254 = lshr i32 %758, 10, !dbg !248
  %and1255 = and i32 %shr1254, 63, !dbg !248
  %idxprom1256 = zext i32 %and1255 to i64, !dbg !248
  %arrayidx1257 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1256, !dbg !248
  %759 = load i32, i32* %arrayidx1257, align 4, !dbg !248
  %xor1258 = xor i32 %757, %759, !dbg !248
  %760 = load i32, i32* %u, align 4, !dbg !248
  %shr1259 = lshr i32 %760, 18, !dbg !248
  %and1260 = and i32 %shr1259, 63, !dbg !248
  %idxprom1261 = zext i32 %and1260 to i64, !dbg !248
  %arrayidx1262 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1261, !dbg !248
  %761 = load i32, i32* %arrayidx1262, align 4, !dbg !248
  %xor1263 = xor i32 %xor1258, %761, !dbg !248
  %762 = load i32, i32* %u, align 4, !dbg !248
  %shr1264 = lshr i32 %762, 26, !dbg !248
  %and1265 = and i32 %shr1264, 63, !dbg !248
  %idxprom1266 = zext i32 %and1265 to i64, !dbg !248
  %arrayidx1267 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1266, !dbg !248
  %763 = load i32, i32* %arrayidx1267, align 4, !dbg !248
  %xor1268 = xor i32 %xor1263, %763, !dbg !248
  %764 = load i32, i32* %t, align 4, !dbg !248
  %shr1269 = lshr i32 %764, 2, !dbg !248
  %and1270 = and i32 %shr1269, 63, !dbg !248
  %idxprom1271 = zext i32 %and1270 to i64, !dbg !248
  %arrayidx1272 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1271, !dbg !248
  %765 = load i32, i32* %arrayidx1272, align 4, !dbg !248
  %xor1273 = xor i32 %xor1268, %765, !dbg !248
  %766 = load i32, i32* %t, align 4, !dbg !248
  %shr1274 = lshr i32 %766, 10, !dbg !248
  %and1275 = and i32 %shr1274, 63, !dbg !248
  %idxprom1276 = zext i32 %and1275 to i64, !dbg !248
  %arrayidx1277 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1276, !dbg !248
  %767 = load i32, i32* %arrayidx1277, align 4, !dbg !248
  %xor1278 = xor i32 %xor1273, %767, !dbg !248
  %768 = load i32, i32* %t, align 4, !dbg !248
  %shr1279 = lshr i32 %768, 18, !dbg !248
  %and1280 = and i32 %shr1279, 63, !dbg !248
  %idxprom1281 = zext i32 %and1280 to i64, !dbg !248
  %arrayidx1282 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1281, !dbg !248
  %769 = load i32, i32* %arrayidx1282, align 4, !dbg !248
  %xor1283 = xor i32 %xor1278, %769, !dbg !248
  %770 = load i32, i32* %t, align 4, !dbg !248
  %shr1284 = lshr i32 %770, 26, !dbg !248
  %and1285 = and i32 %shr1284, 63, !dbg !248
  %idxprom1286 = zext i32 %and1285 to i64, !dbg !248
  %arrayidx1287 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1286, !dbg !248
  %771 = load i32, i32* %arrayidx1287, align 4, !dbg !248
  %xor1288 = xor i32 %xor1283, %771, !dbg !248
  %772 = load i32, i32* %l, align 4, !dbg !248
  %xor1289 = xor i32 %772, %xor1288, !dbg !248
  store i32 %xor1289, i32* %l, align 4, !dbg !248
  %773 = load i32, i32* %l, align 4, !dbg !254
  %774 = load i32*, i32** %s, align 8, !dbg !254
  %arrayidx1290 = getelementptr inbounds i32, i32* %774, i64 8, !dbg !254
  %775 = load i32, i32* %arrayidx1290, align 4, !dbg !254
  %xor1291 = xor i32 %773, %775, !dbg !254
  store i32 %xor1291, i32* %u, align 4, !dbg !254
  %776 = load i32, i32* %l, align 4, !dbg !254
  %777 = load i32*, i32** %s, align 8, !dbg !254
  %arrayidx1292 = getelementptr inbounds i32, i32* %777, i64 9, !dbg !254
  %778 = load i32, i32* %arrayidx1292, align 4, !dbg !254
  %xor1293 = xor i32 %776, %778, !dbg !254
  store i32 %xor1293, i32* %t, align 4, !dbg !254
  call void @llvm.dbg.declare(metadata i32* %ret1294, metadata !256, metadata !DIExpression()), !dbg !258
  %779 = load i32, i32* %t, align 4, !dbg !258
  %780 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %779) #7, !dbg !258, !srcloc !259
  store i32 %780, i32* %ret1294, align 4, !dbg !258
  %781 = load i32, i32* %ret1294, align 4, !dbg !258
  store i32 %781, i32* %tmp1295, align 4, !dbg !258
  %782 = load i32, i32* %tmp1295, align 4, !dbg !258
  store i32 %782, i32* %t, align 4, !dbg !254
  %783 = load i32, i32* %u, align 4, !dbg !254
  %shr1296 = lshr i32 %783, 2, !dbg !254
  %and1297 = and i32 %shr1296, 63, !dbg !254
  %idxprom1298 = zext i32 %and1297 to i64, !dbg !254
  %arrayidx1299 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1298, !dbg !254
  %784 = load i32, i32* %arrayidx1299, align 4, !dbg !254
  %785 = load i32, i32* %u, align 4, !dbg !254
  %shr1300 = lshr i32 %785, 10, !dbg !254
  %and1301 = and i32 %shr1300, 63, !dbg !254
  %idxprom1302 = zext i32 %and1301 to i64, !dbg !254
  %arrayidx1303 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1302, !dbg !254
  %786 = load i32, i32* %arrayidx1303, align 4, !dbg !254
  %xor1304 = xor i32 %784, %786, !dbg !254
  %787 = load i32, i32* %u, align 4, !dbg !254
  %shr1305 = lshr i32 %787, 18, !dbg !254
  %and1306 = and i32 %shr1305, 63, !dbg !254
  %idxprom1307 = zext i32 %and1306 to i64, !dbg !254
  %arrayidx1308 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1307, !dbg !254
  %788 = load i32, i32* %arrayidx1308, align 4, !dbg !254
  %xor1309 = xor i32 %xor1304, %788, !dbg !254
  %789 = load i32, i32* %u, align 4, !dbg !254
  %shr1310 = lshr i32 %789, 26, !dbg !254
  %and1311 = and i32 %shr1310, 63, !dbg !254
  %idxprom1312 = zext i32 %and1311 to i64, !dbg !254
  %arrayidx1313 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1312, !dbg !254
  %790 = load i32, i32* %arrayidx1313, align 4, !dbg !254
  %xor1314 = xor i32 %xor1309, %790, !dbg !254
  %791 = load i32, i32* %t, align 4, !dbg !254
  %shr1315 = lshr i32 %791, 2, !dbg !254
  %and1316 = and i32 %shr1315, 63, !dbg !254
  %idxprom1317 = zext i32 %and1316 to i64, !dbg !254
  %arrayidx1318 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1317, !dbg !254
  %792 = load i32, i32* %arrayidx1318, align 4, !dbg !254
  %xor1319 = xor i32 %xor1314, %792, !dbg !254
  %793 = load i32, i32* %t, align 4, !dbg !254
  %shr1320 = lshr i32 %793, 10, !dbg !254
  %and1321 = and i32 %shr1320, 63, !dbg !254
  %idxprom1322 = zext i32 %and1321 to i64, !dbg !254
  %arrayidx1323 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1322, !dbg !254
  %794 = load i32, i32* %arrayidx1323, align 4, !dbg !254
  %xor1324 = xor i32 %xor1319, %794, !dbg !254
  %795 = load i32, i32* %t, align 4, !dbg !254
  %shr1325 = lshr i32 %795, 18, !dbg !254
  %and1326 = and i32 %shr1325, 63, !dbg !254
  %idxprom1327 = zext i32 %and1326 to i64, !dbg !254
  %arrayidx1328 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1327, !dbg !254
  %796 = load i32, i32* %arrayidx1328, align 4, !dbg !254
  %xor1329 = xor i32 %xor1324, %796, !dbg !254
  %797 = load i32, i32* %t, align 4, !dbg !254
  %shr1330 = lshr i32 %797, 26, !dbg !254
  %and1331 = and i32 %shr1330, 63, !dbg !254
  %idxprom1332 = zext i32 %and1331 to i64, !dbg !254
  %arrayidx1333 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1332, !dbg !254
  %798 = load i32, i32* %arrayidx1333, align 4, !dbg !254
  %xor1334 = xor i32 %xor1329, %798, !dbg !254
  %799 = load i32, i32* %r, align 4, !dbg !254
  %xor1335 = xor i32 %799, %xor1334, !dbg !254
  store i32 %xor1335, i32* %r, align 4, !dbg !254
  %800 = load i32, i32* %r, align 4, !dbg !260
  %801 = load i32*, i32** %s, align 8, !dbg !260
  %arrayidx1336 = getelementptr inbounds i32, i32* %801, i64 6, !dbg !260
  %802 = load i32, i32* %arrayidx1336, align 4, !dbg !260
  %xor1337 = xor i32 %800, %802, !dbg !260
  store i32 %xor1337, i32* %u, align 4, !dbg !260
  %803 = load i32, i32* %r, align 4, !dbg !260
  %804 = load i32*, i32** %s, align 8, !dbg !260
  %arrayidx1338 = getelementptr inbounds i32, i32* %804, i64 7, !dbg !260
  %805 = load i32, i32* %arrayidx1338, align 4, !dbg !260
  %xor1339 = xor i32 %803, %805, !dbg !260
  store i32 %xor1339, i32* %t, align 4, !dbg !260
  call void @llvm.dbg.declare(metadata i32* %ret1340, metadata !262, metadata !DIExpression()), !dbg !264
  %806 = load i32, i32* %t, align 4, !dbg !264
  %807 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %806) #7, !dbg !264, !srcloc !265
  store i32 %807, i32* %ret1340, align 4, !dbg !264
  %808 = load i32, i32* %ret1340, align 4, !dbg !264
  store i32 %808, i32* %tmp1341, align 4, !dbg !264
  %809 = load i32, i32* %tmp1341, align 4, !dbg !264
  store i32 %809, i32* %t, align 4, !dbg !260
  %810 = load i32, i32* %u, align 4, !dbg !260
  %shr1342 = lshr i32 %810, 2, !dbg !260
  %and1343 = and i32 %shr1342, 63, !dbg !260
  %idxprom1344 = zext i32 %and1343 to i64, !dbg !260
  %arrayidx1345 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1344, !dbg !260
  %811 = load i32, i32* %arrayidx1345, align 4, !dbg !260
  %812 = load i32, i32* %u, align 4, !dbg !260
  %shr1346 = lshr i32 %812, 10, !dbg !260
  %and1347 = and i32 %shr1346, 63, !dbg !260
  %idxprom1348 = zext i32 %and1347 to i64, !dbg !260
  %arrayidx1349 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1348, !dbg !260
  %813 = load i32, i32* %arrayidx1349, align 4, !dbg !260
  %xor1350 = xor i32 %811, %813, !dbg !260
  %814 = load i32, i32* %u, align 4, !dbg !260
  %shr1351 = lshr i32 %814, 18, !dbg !260
  %and1352 = and i32 %shr1351, 63, !dbg !260
  %idxprom1353 = zext i32 %and1352 to i64, !dbg !260
  %arrayidx1354 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1353, !dbg !260
  %815 = load i32, i32* %arrayidx1354, align 4, !dbg !260
  %xor1355 = xor i32 %xor1350, %815, !dbg !260
  %816 = load i32, i32* %u, align 4, !dbg !260
  %shr1356 = lshr i32 %816, 26, !dbg !260
  %and1357 = and i32 %shr1356, 63, !dbg !260
  %idxprom1358 = zext i32 %and1357 to i64, !dbg !260
  %arrayidx1359 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1358, !dbg !260
  %817 = load i32, i32* %arrayidx1359, align 4, !dbg !260
  %xor1360 = xor i32 %xor1355, %817, !dbg !260
  %818 = load i32, i32* %t, align 4, !dbg !260
  %shr1361 = lshr i32 %818, 2, !dbg !260
  %and1362 = and i32 %shr1361, 63, !dbg !260
  %idxprom1363 = zext i32 %and1362 to i64, !dbg !260
  %arrayidx1364 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1363, !dbg !260
  %819 = load i32, i32* %arrayidx1364, align 4, !dbg !260
  %xor1365 = xor i32 %xor1360, %819, !dbg !260
  %820 = load i32, i32* %t, align 4, !dbg !260
  %shr1366 = lshr i32 %820, 10, !dbg !260
  %and1367 = and i32 %shr1366, 63, !dbg !260
  %idxprom1368 = zext i32 %and1367 to i64, !dbg !260
  %arrayidx1369 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1368, !dbg !260
  %821 = load i32, i32* %arrayidx1369, align 4, !dbg !260
  %xor1370 = xor i32 %xor1365, %821, !dbg !260
  %822 = load i32, i32* %t, align 4, !dbg !260
  %shr1371 = lshr i32 %822, 18, !dbg !260
  %and1372 = and i32 %shr1371, 63, !dbg !260
  %idxprom1373 = zext i32 %and1372 to i64, !dbg !260
  %arrayidx1374 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1373, !dbg !260
  %823 = load i32, i32* %arrayidx1374, align 4, !dbg !260
  %xor1375 = xor i32 %xor1370, %823, !dbg !260
  %824 = load i32, i32* %t, align 4, !dbg !260
  %shr1376 = lshr i32 %824, 26, !dbg !260
  %and1377 = and i32 %shr1376, 63, !dbg !260
  %idxprom1378 = zext i32 %and1377 to i64, !dbg !260
  %arrayidx1379 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1378, !dbg !260
  %825 = load i32, i32* %arrayidx1379, align 4, !dbg !260
  %xor1380 = xor i32 %xor1375, %825, !dbg !260
  %826 = load i32, i32* %l, align 4, !dbg !260
  %xor1381 = xor i32 %826, %xor1380, !dbg !260
  store i32 %xor1381, i32* %l, align 4, !dbg !260
  %827 = load i32, i32* %l, align 4, !dbg !266
  %828 = load i32*, i32** %s, align 8, !dbg !266
  %arrayidx1382 = getelementptr inbounds i32, i32* %828, i64 4, !dbg !266
  %829 = load i32, i32* %arrayidx1382, align 4, !dbg !266
  %xor1383 = xor i32 %827, %829, !dbg !266
  store i32 %xor1383, i32* %u, align 4, !dbg !266
  %830 = load i32, i32* %l, align 4, !dbg !266
  %831 = load i32*, i32** %s, align 8, !dbg !266
  %arrayidx1384 = getelementptr inbounds i32, i32* %831, i64 5, !dbg !266
  %832 = load i32, i32* %arrayidx1384, align 4, !dbg !266
  %xor1385 = xor i32 %830, %832, !dbg !266
  store i32 %xor1385, i32* %t, align 4, !dbg !266
  call void @llvm.dbg.declare(metadata i32* %ret1386, metadata !268, metadata !DIExpression()), !dbg !270
  %833 = load i32, i32* %t, align 4, !dbg !270
  %834 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %833) #7, !dbg !270, !srcloc !271
  store i32 %834, i32* %ret1386, align 4, !dbg !270
  %835 = load i32, i32* %ret1386, align 4, !dbg !270
  store i32 %835, i32* %tmp1387, align 4, !dbg !270
  %836 = load i32, i32* %tmp1387, align 4, !dbg !270
  store i32 %836, i32* %t, align 4, !dbg !266
  %837 = load i32, i32* %u, align 4, !dbg !266
  %shr1388 = lshr i32 %837, 2, !dbg !266
  %and1389 = and i32 %shr1388, 63, !dbg !266
  %idxprom1390 = zext i32 %and1389 to i64, !dbg !266
  %arrayidx1391 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1390, !dbg !266
  %838 = load i32, i32* %arrayidx1391, align 4, !dbg !266
  %839 = load i32, i32* %u, align 4, !dbg !266
  %shr1392 = lshr i32 %839, 10, !dbg !266
  %and1393 = and i32 %shr1392, 63, !dbg !266
  %idxprom1394 = zext i32 %and1393 to i64, !dbg !266
  %arrayidx1395 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1394, !dbg !266
  %840 = load i32, i32* %arrayidx1395, align 4, !dbg !266
  %xor1396 = xor i32 %838, %840, !dbg !266
  %841 = load i32, i32* %u, align 4, !dbg !266
  %shr1397 = lshr i32 %841, 18, !dbg !266
  %and1398 = and i32 %shr1397, 63, !dbg !266
  %idxprom1399 = zext i32 %and1398 to i64, !dbg !266
  %arrayidx1400 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1399, !dbg !266
  %842 = load i32, i32* %arrayidx1400, align 4, !dbg !266
  %xor1401 = xor i32 %xor1396, %842, !dbg !266
  %843 = load i32, i32* %u, align 4, !dbg !266
  %shr1402 = lshr i32 %843, 26, !dbg !266
  %and1403 = and i32 %shr1402, 63, !dbg !266
  %idxprom1404 = zext i32 %and1403 to i64, !dbg !266
  %arrayidx1405 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1404, !dbg !266
  %844 = load i32, i32* %arrayidx1405, align 4, !dbg !266
  %xor1406 = xor i32 %xor1401, %844, !dbg !266
  %845 = load i32, i32* %t, align 4, !dbg !266
  %shr1407 = lshr i32 %845, 2, !dbg !266
  %and1408 = and i32 %shr1407, 63, !dbg !266
  %idxprom1409 = zext i32 %and1408 to i64, !dbg !266
  %arrayidx1410 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1409, !dbg !266
  %846 = load i32, i32* %arrayidx1410, align 4, !dbg !266
  %xor1411 = xor i32 %xor1406, %846, !dbg !266
  %847 = load i32, i32* %t, align 4, !dbg !266
  %shr1412 = lshr i32 %847, 10, !dbg !266
  %and1413 = and i32 %shr1412, 63, !dbg !266
  %idxprom1414 = zext i32 %and1413 to i64, !dbg !266
  %arrayidx1415 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1414, !dbg !266
  %848 = load i32, i32* %arrayidx1415, align 4, !dbg !266
  %xor1416 = xor i32 %xor1411, %848, !dbg !266
  %849 = load i32, i32* %t, align 4, !dbg !266
  %shr1417 = lshr i32 %849, 18, !dbg !266
  %and1418 = and i32 %shr1417, 63, !dbg !266
  %idxprom1419 = zext i32 %and1418 to i64, !dbg !266
  %arrayidx1420 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1419, !dbg !266
  %850 = load i32, i32* %arrayidx1420, align 4, !dbg !266
  %xor1421 = xor i32 %xor1416, %850, !dbg !266
  %851 = load i32, i32* %t, align 4, !dbg !266
  %shr1422 = lshr i32 %851, 26, !dbg !266
  %and1423 = and i32 %shr1422, 63, !dbg !266
  %idxprom1424 = zext i32 %and1423 to i64, !dbg !266
  %arrayidx1425 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1424, !dbg !266
  %852 = load i32, i32* %arrayidx1425, align 4, !dbg !266
  %xor1426 = xor i32 %xor1421, %852, !dbg !266
  %853 = load i32, i32* %r, align 4, !dbg !266
  %xor1427 = xor i32 %853, %xor1426, !dbg !266
  store i32 %xor1427, i32* %r, align 4, !dbg !266
  %854 = load i32, i32* %r, align 4, !dbg !272
  %855 = load i32*, i32** %s, align 8, !dbg !272
  %arrayidx1428 = getelementptr inbounds i32, i32* %855, i64 2, !dbg !272
  %856 = load i32, i32* %arrayidx1428, align 4, !dbg !272
  %xor1429 = xor i32 %854, %856, !dbg !272
  store i32 %xor1429, i32* %u, align 4, !dbg !272
  %857 = load i32, i32* %r, align 4, !dbg !272
  %858 = load i32*, i32** %s, align 8, !dbg !272
  %arrayidx1430 = getelementptr inbounds i32, i32* %858, i64 3, !dbg !272
  %859 = load i32, i32* %arrayidx1430, align 4, !dbg !272
  %xor1431 = xor i32 %857, %859, !dbg !272
  store i32 %xor1431, i32* %t, align 4, !dbg !272
  call void @llvm.dbg.declare(metadata i32* %ret1432, metadata !274, metadata !DIExpression()), !dbg !276
  %860 = load i32, i32* %t, align 4, !dbg !276
  %861 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %860) #7, !dbg !276, !srcloc !277
  store i32 %861, i32* %ret1432, align 4, !dbg !276
  %862 = load i32, i32* %ret1432, align 4, !dbg !276
  store i32 %862, i32* %tmp1433, align 4, !dbg !276
  %863 = load i32, i32* %tmp1433, align 4, !dbg !276
  store i32 %863, i32* %t, align 4, !dbg !272
  %864 = load i32, i32* %u, align 4, !dbg !272
  %shr1434 = lshr i32 %864, 2, !dbg !272
  %and1435 = and i32 %shr1434, 63, !dbg !272
  %idxprom1436 = zext i32 %and1435 to i64, !dbg !272
  %arrayidx1437 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1436, !dbg !272
  %865 = load i32, i32* %arrayidx1437, align 4, !dbg !272
  %866 = load i32, i32* %u, align 4, !dbg !272
  %shr1438 = lshr i32 %866, 10, !dbg !272
  %and1439 = and i32 %shr1438, 63, !dbg !272
  %idxprom1440 = zext i32 %and1439 to i64, !dbg !272
  %arrayidx1441 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1440, !dbg !272
  %867 = load i32, i32* %arrayidx1441, align 4, !dbg !272
  %xor1442 = xor i32 %865, %867, !dbg !272
  %868 = load i32, i32* %u, align 4, !dbg !272
  %shr1443 = lshr i32 %868, 18, !dbg !272
  %and1444 = and i32 %shr1443, 63, !dbg !272
  %idxprom1445 = zext i32 %and1444 to i64, !dbg !272
  %arrayidx1446 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1445, !dbg !272
  %869 = load i32, i32* %arrayidx1446, align 4, !dbg !272
  %xor1447 = xor i32 %xor1442, %869, !dbg !272
  %870 = load i32, i32* %u, align 4, !dbg !272
  %shr1448 = lshr i32 %870, 26, !dbg !272
  %and1449 = and i32 %shr1448, 63, !dbg !272
  %idxprom1450 = zext i32 %and1449 to i64, !dbg !272
  %arrayidx1451 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1450, !dbg !272
  %871 = load i32, i32* %arrayidx1451, align 4, !dbg !272
  %xor1452 = xor i32 %xor1447, %871, !dbg !272
  %872 = load i32, i32* %t, align 4, !dbg !272
  %shr1453 = lshr i32 %872, 2, !dbg !272
  %and1454 = and i32 %shr1453, 63, !dbg !272
  %idxprom1455 = zext i32 %and1454 to i64, !dbg !272
  %arrayidx1456 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1455, !dbg !272
  %873 = load i32, i32* %arrayidx1456, align 4, !dbg !272
  %xor1457 = xor i32 %xor1452, %873, !dbg !272
  %874 = load i32, i32* %t, align 4, !dbg !272
  %shr1458 = lshr i32 %874, 10, !dbg !272
  %and1459 = and i32 %shr1458, 63, !dbg !272
  %idxprom1460 = zext i32 %and1459 to i64, !dbg !272
  %arrayidx1461 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1460, !dbg !272
  %875 = load i32, i32* %arrayidx1461, align 4, !dbg !272
  %xor1462 = xor i32 %xor1457, %875, !dbg !272
  %876 = load i32, i32* %t, align 4, !dbg !272
  %shr1463 = lshr i32 %876, 18, !dbg !272
  %and1464 = and i32 %shr1463, 63, !dbg !272
  %idxprom1465 = zext i32 %and1464 to i64, !dbg !272
  %arrayidx1466 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1465, !dbg !272
  %877 = load i32, i32* %arrayidx1466, align 4, !dbg !272
  %xor1467 = xor i32 %xor1462, %877, !dbg !272
  %878 = load i32, i32* %t, align 4, !dbg !272
  %shr1468 = lshr i32 %878, 26, !dbg !272
  %and1469 = and i32 %shr1468, 63, !dbg !272
  %idxprom1470 = zext i32 %and1469 to i64, !dbg !272
  %arrayidx1471 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1470, !dbg !272
  %879 = load i32, i32* %arrayidx1471, align 4, !dbg !272
  %xor1472 = xor i32 %xor1467, %879, !dbg !272
  %880 = load i32, i32* %l, align 4, !dbg !272
  %xor1473 = xor i32 %880, %xor1472, !dbg !272
  store i32 %xor1473, i32* %l, align 4, !dbg !272
  %881 = load i32, i32* %l, align 4, !dbg !278
  %882 = load i32*, i32** %s, align 8, !dbg !278
  %arrayidx1474 = getelementptr inbounds i32, i32* %882, i64 0, !dbg !278
  %883 = load i32, i32* %arrayidx1474, align 4, !dbg !278
  %xor1475 = xor i32 %881, %883, !dbg !278
  store i32 %xor1475, i32* %u, align 4, !dbg !278
  %884 = load i32, i32* %l, align 4, !dbg !278
  %885 = load i32*, i32** %s, align 8, !dbg !278
  %arrayidx1476 = getelementptr inbounds i32, i32* %885, i64 1, !dbg !278
  %886 = load i32, i32* %arrayidx1476, align 4, !dbg !278
  %xor1477 = xor i32 %884, %886, !dbg !278
  store i32 %xor1477, i32* %t, align 4, !dbg !278
  call void @llvm.dbg.declare(metadata i32* %ret1478, metadata !280, metadata !DIExpression()), !dbg !282
  %887 = load i32, i32* %t, align 4, !dbg !282
  %888 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %887) #7, !dbg !282, !srcloc !283
  store i32 %888, i32* %ret1478, align 4, !dbg !282
  %889 = load i32, i32* %ret1478, align 4, !dbg !282
  store i32 %889, i32* %tmp1479, align 4, !dbg !282
  %890 = load i32, i32* %tmp1479, align 4, !dbg !282
  store i32 %890, i32* %t, align 4, !dbg !278
  %891 = load i32, i32* %u, align 4, !dbg !278
  %shr1480 = lshr i32 %891, 2, !dbg !278
  %and1481 = and i32 %shr1480, 63, !dbg !278
  %idxprom1482 = zext i32 %and1481 to i64, !dbg !278
  %arrayidx1483 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1482, !dbg !278
  %892 = load i32, i32* %arrayidx1483, align 4, !dbg !278
  %893 = load i32, i32* %u, align 4, !dbg !278
  %shr1484 = lshr i32 %893, 10, !dbg !278
  %and1485 = and i32 %shr1484, 63, !dbg !278
  %idxprom1486 = zext i32 %and1485 to i64, !dbg !278
  %arrayidx1487 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1486, !dbg !278
  %894 = load i32, i32* %arrayidx1487, align 4, !dbg !278
  %xor1488 = xor i32 %892, %894, !dbg !278
  %895 = load i32, i32* %u, align 4, !dbg !278
  %shr1489 = lshr i32 %895, 18, !dbg !278
  %and1490 = and i32 %shr1489, 63, !dbg !278
  %idxprom1491 = zext i32 %and1490 to i64, !dbg !278
  %arrayidx1492 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1491, !dbg !278
  %896 = load i32, i32* %arrayidx1492, align 4, !dbg !278
  %xor1493 = xor i32 %xor1488, %896, !dbg !278
  %897 = load i32, i32* %u, align 4, !dbg !278
  %shr1494 = lshr i32 %897, 26, !dbg !278
  %and1495 = and i32 %shr1494, 63, !dbg !278
  %idxprom1496 = zext i32 %and1495 to i64, !dbg !278
  %arrayidx1497 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1496, !dbg !278
  %898 = load i32, i32* %arrayidx1497, align 4, !dbg !278
  %xor1498 = xor i32 %xor1493, %898, !dbg !278
  %899 = load i32, i32* %t, align 4, !dbg !278
  %shr1499 = lshr i32 %899, 2, !dbg !278
  %and1500 = and i32 %shr1499, 63, !dbg !278
  %idxprom1501 = zext i32 %and1500 to i64, !dbg !278
  %arrayidx1502 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1501, !dbg !278
  %900 = load i32, i32* %arrayidx1502, align 4, !dbg !278
  %xor1503 = xor i32 %xor1498, %900, !dbg !278
  %901 = load i32, i32* %t, align 4, !dbg !278
  %shr1504 = lshr i32 %901, 10, !dbg !278
  %and1505 = and i32 %shr1504, 63, !dbg !278
  %idxprom1506 = zext i32 %and1505 to i64, !dbg !278
  %arrayidx1507 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1506, !dbg !278
  %902 = load i32, i32* %arrayidx1507, align 4, !dbg !278
  %xor1508 = xor i32 %xor1503, %902, !dbg !278
  %903 = load i32, i32* %t, align 4, !dbg !278
  %shr1509 = lshr i32 %903, 18, !dbg !278
  %and1510 = and i32 %shr1509, 63, !dbg !278
  %idxprom1511 = zext i32 %and1510 to i64, !dbg !278
  %arrayidx1512 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1511, !dbg !278
  %904 = load i32, i32* %arrayidx1512, align 4, !dbg !278
  %xor1513 = xor i32 %xor1508, %904, !dbg !278
  %905 = load i32, i32* %t, align 4, !dbg !278
  %shr1514 = lshr i32 %905, 26, !dbg !278
  %and1515 = and i32 %shr1514, 63, !dbg !278
  %idxprom1516 = zext i32 %and1515 to i64, !dbg !278
  %arrayidx1517 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1516, !dbg !278
  %906 = load i32, i32* %arrayidx1517, align 4, !dbg !278
  %xor1518 = xor i32 %xor1513, %906, !dbg !278
  %907 = load i32, i32* %r, align 4, !dbg !278
  %xor1519 = xor i32 %907, %xor1518, !dbg !278
  store i32 %xor1519, i32* %r, align 4, !dbg !278
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.declare(metadata i32* %ret1520, metadata !284, metadata !DIExpression()), !dbg !286
  %908 = load i32, i32* %l, align 4, !dbg !286
  %909 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %908) #7, !dbg !286, !srcloc !287
  store i32 %909, i32* %ret1520, align 4, !dbg !286
  %910 = load i32, i32* %ret1520, align 4, !dbg !286
  store i32 %910, i32* %tmp1521, align 4, !dbg !286
  %911 = load i32, i32* %tmp1521, align 4, !dbg !286
  %conv1522 = zext i32 %911 to i64, !dbg !288
  %and1523 = and i64 %conv1522, 4294967295, !dbg !289
  %conv1524 = trunc i64 %and1523 to i32, !dbg !288
  store i32 %conv1524, i32* %l, align 4, !dbg !290
  call void @llvm.dbg.declare(metadata i32* %ret1525, metadata !291, metadata !DIExpression()), !dbg !293
  %912 = load i32, i32* %r, align 4, !dbg !293
  %913 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %912) #7, !dbg !293, !srcloc !294
  store i32 %913, i32* %ret1525, align 4, !dbg !293
  %914 = load i32, i32* %ret1525, align 4, !dbg !293
  store i32 %914, i32* %tmp1526, align 4, !dbg !293
  %915 = load i32, i32* %tmp1526, align 4, !dbg !293
  %conv1527 = zext i32 %915 to i64, !dbg !295
  %and1528 = and i64 %conv1527, 4294967295, !dbg !296
  %conv1529 = trunc i64 %and1528 to i32, !dbg !295
  store i32 %conv1529, i32* %r, align 4, !dbg !297
  call void @llvm.dbg.declare(metadata i32* %tt1530, metadata !298, metadata !DIExpression()), !dbg !300
  %916 = load i32, i32* %r, align 4, !dbg !300
  %shr1531 = lshr i32 %916, 1, !dbg !300
  %917 = load i32, i32* %l, align 4, !dbg !300
  %xor1532 = xor i32 %shr1531, %917, !dbg !300
  %conv1533 = zext i32 %xor1532 to i64, !dbg !300
  %and1534 = and i64 %conv1533, 1431655765, !dbg !300
  %conv1535 = trunc i64 %and1534 to i32, !dbg !300
  store i32 %conv1535, i32* %tt1530, align 4, !dbg !300
  %918 = load i32, i32* %tt1530, align 4, !dbg !300
  %919 = load i32, i32* %l, align 4, !dbg !300
  %xor1536 = xor i32 %919, %918, !dbg !300
  store i32 %xor1536, i32* %l, align 4, !dbg !300
  %920 = load i32, i32* %tt1530, align 4, !dbg !300
  %shl1537 = shl i32 %920, 1, !dbg !300
  %921 = load i32, i32* %r, align 4, !dbg !300
  %xor1538 = xor i32 %921, %shl1537, !dbg !300
  store i32 %xor1538, i32* %r, align 4, !dbg !300
  %922 = load i32, i32* %l, align 4, !dbg !300
  %shr1539 = lshr i32 %922, 8, !dbg !300
  %923 = load i32, i32* %r, align 4, !dbg !300
  %xor1540 = xor i32 %shr1539, %923, !dbg !300
  %conv1541 = zext i32 %xor1540 to i64, !dbg !300
  %and1542 = and i64 %conv1541, 16711935, !dbg !300
  %conv1543 = trunc i64 %and1542 to i32, !dbg !300
  store i32 %conv1543, i32* %tt1530, align 4, !dbg !300
  %924 = load i32, i32* %tt1530, align 4, !dbg !300
  %925 = load i32, i32* %r, align 4, !dbg !300
  %xor1544 = xor i32 %925, %924, !dbg !300
  store i32 %xor1544, i32* %r, align 4, !dbg !300
  %926 = load i32, i32* %tt1530, align 4, !dbg !300
  %shl1545 = shl i32 %926, 8, !dbg !300
  %927 = load i32, i32* %l, align 4, !dbg !300
  %xor1546 = xor i32 %927, %shl1545, !dbg !300
  store i32 %xor1546, i32* %l, align 4, !dbg !300
  %928 = load i32, i32* %r, align 4, !dbg !300
  %shr1547 = lshr i32 %928, 2, !dbg !300
  %929 = load i32, i32* %l, align 4, !dbg !300
  %xor1548 = xor i32 %shr1547, %929, !dbg !300
  %conv1549 = zext i32 %xor1548 to i64, !dbg !300
  %and1550 = and i64 %conv1549, 858993459, !dbg !300
  %conv1551 = trunc i64 %and1550 to i32, !dbg !300
  store i32 %conv1551, i32* %tt1530, align 4, !dbg !300
  %930 = load i32, i32* %tt1530, align 4, !dbg !300
  %931 = load i32, i32* %l, align 4, !dbg !300
  %xor1552 = xor i32 %931, %930, !dbg !300
  store i32 %xor1552, i32* %l, align 4, !dbg !300
  %932 = load i32, i32* %tt1530, align 4, !dbg !300
  %shl1553 = shl i32 %932, 2, !dbg !300
  %933 = load i32, i32* %r, align 4, !dbg !300
  %xor1554 = xor i32 %933, %shl1553, !dbg !300
  store i32 %xor1554, i32* %r, align 4, !dbg !300
  %934 = load i32, i32* %l, align 4, !dbg !300
  %shr1555 = lshr i32 %934, 16, !dbg !300
  %935 = load i32, i32* %r, align 4, !dbg !300
  %xor1556 = xor i32 %shr1555, %935, !dbg !300
  %conv1557 = zext i32 %xor1556 to i64, !dbg !300
  %and1558 = and i64 %conv1557, 65535, !dbg !300
  %conv1559 = trunc i64 %and1558 to i32, !dbg !300
  store i32 %conv1559, i32* %tt1530, align 4, !dbg !300
  %936 = load i32, i32* %tt1530, align 4, !dbg !300
  %937 = load i32, i32* %r, align 4, !dbg !300
  %xor1560 = xor i32 %937, %936, !dbg !300
  store i32 %xor1560, i32* %r, align 4, !dbg !300
  %938 = load i32, i32* %tt1530, align 4, !dbg !300
  %shl1561 = shl i32 %938, 16, !dbg !300
  %939 = load i32, i32* %l, align 4, !dbg !300
  %xor1562 = xor i32 %939, %shl1561, !dbg !300
  store i32 %xor1562, i32* %l, align 4, !dbg !300
  %940 = load i32, i32* %r, align 4, !dbg !300
  %shr1563 = lshr i32 %940, 4, !dbg !300
  %941 = load i32, i32* %l, align 4, !dbg !300
  %xor1564 = xor i32 %shr1563, %941, !dbg !300
  %conv1565 = zext i32 %xor1564 to i64, !dbg !300
  %and1566 = and i64 %conv1565, 252645135, !dbg !300
  %conv1567 = trunc i64 %and1566 to i32, !dbg !300
  store i32 %conv1567, i32* %tt1530, align 4, !dbg !300
  %942 = load i32, i32* %tt1530, align 4, !dbg !300
  %943 = load i32, i32* %l, align 4, !dbg !300
  %xor1568 = xor i32 %943, %942, !dbg !300
  store i32 %xor1568, i32* %l, align 4, !dbg !300
  %944 = load i32, i32* %tt1530, align 4, !dbg !300
  %shl1569 = shl i32 %944, 4, !dbg !300
  %945 = load i32, i32* %r, align 4, !dbg !300
  %xor1570 = xor i32 %945, %shl1569, !dbg !300
  store i32 %xor1570, i32* %r, align 4, !dbg !300
  %946 = load i32, i32* %l, align 4, !dbg !301
  %947 = load i32*, i32** %data.addr, align 8, !dbg !302
  %arrayidx1571 = getelementptr inbounds i32, i32* %947, i64 0, !dbg !302
  store i32 %946, i32* %arrayidx1571, align 4, !dbg !303
  %948 = load i32, i32* %r, align 4, !dbg !304
  %949 = load i32*, i32** %data.addr, align 8, !dbg !305
  %arrayidx1572 = getelementptr inbounds i32, i32* %949, i64 1, !dbg !305
  store i32 %948, i32* %arrayidx1572, align 4, !dbg !306
  store i32 0, i32* %u, align 4, !dbg !307
  store i32 0, i32* %t, align 4, !dbg !308
  store i32 0, i32* %r, align 4, !dbg !309
  store i32 0, i32* %l, align 4, !dbg !310
  ret void, !dbg !311
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind willreturn
declare void @llvm.var.annotation(i8*, i8*, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_encrypt2(i32* %data, %struct.DES_ks* %ks, i32 %enc) #3 !dbg !312 {
entry:
  %data.addr = alloca i32*, align 8
  %ks.addr = alloca %struct.DES_ks*, align 8
  %enc.addr = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %t = alloca i32, align 4
  %u = alloca i32, align 4
  %s = alloca i32*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ret5 = alloca i32, align 4
  %tmp6 = alloca i32, align 4
  %ret15 = alloca i32, align 4
  %tmp16 = alloca i32, align 4
  %ret59 = alloca i32, align 4
  %tmp60 = alloca i32, align 4
  %ret105 = alloca i32, align 4
  %tmp106 = alloca i32, align 4
  %ret151 = alloca i32, align 4
  %tmp152 = alloca i32, align 4
  %ret197 = alloca i32, align 4
  %tmp198 = alloca i32, align 4
  %ret243 = alloca i32, align 4
  %tmp244 = alloca i32, align 4
  %ret289 = alloca i32, align 4
  %tmp290 = alloca i32, align 4
  %ret335 = alloca i32, align 4
  %tmp336 = alloca i32, align 4
  %ret381 = alloca i32, align 4
  %tmp382 = alloca i32, align 4
  %ret427 = alloca i32, align 4
  %tmp428 = alloca i32, align 4
  %ret473 = alloca i32, align 4
  %tmp474 = alloca i32, align 4
  %ret519 = alloca i32, align 4
  %tmp520 = alloca i32, align 4
  %ret565 = alloca i32, align 4
  %tmp566 = alloca i32, align 4
  %ret611 = alloca i32, align 4
  %tmp612 = alloca i32, align 4
  %ret657 = alloca i32, align 4
  %tmp658 = alloca i32, align 4
  %ret703 = alloca i32, align 4
  %tmp704 = alloca i32, align 4
  %ret749 = alloca i32, align 4
  %tmp750 = alloca i32, align 4
  %ret795 = alloca i32, align 4
  %tmp796 = alloca i32, align 4
  %ret841 = alloca i32, align 4
  %tmp842 = alloca i32, align 4
  %ret887 = alloca i32, align 4
  %tmp888 = alloca i32, align 4
  %ret933 = alloca i32, align 4
  %tmp934 = alloca i32, align 4
  %ret979 = alloca i32, align 4
  %tmp980 = alloca i32, align 4
  %ret1025 = alloca i32, align 4
  %tmp1026 = alloca i32, align 4
  %ret1071 = alloca i32, align 4
  %tmp1072 = alloca i32, align 4
  %ret1117 = alloca i32, align 4
  %tmp1118 = alloca i32, align 4
  %ret1163 = alloca i32, align 4
  %tmp1164 = alloca i32, align 4
  %ret1209 = alloca i32, align 4
  %tmp1210 = alloca i32, align 4
  %ret1255 = alloca i32, align 4
  %tmp1256 = alloca i32, align 4
  %ret1301 = alloca i32, align 4
  %tmp1302 = alloca i32, align 4
  %ret1347 = alloca i32, align 4
  %tmp1348 = alloca i32, align 4
  %ret1393 = alloca i32, align 4
  %tmp1394 = alloca i32, align 4
  %ret1439 = alloca i32, align 4
  %tmp1440 = alloca i32, align 4
  %ret1481 = alloca i32, align 4
  %tmp1482 = alloca i32, align 4
  %ret1487 = alloca i32, align 4
  %tmp1488 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !313, metadata !DIExpression()), !dbg !314
  store %struct.DES_ks* %ks, %struct.DES_ks** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr, metadata !315, metadata !DIExpression()), !dbg !316
  %ks.addr1 = bitcast %struct.DES_ks** %ks.addr to i8*
  call void @llvm.var.annotation(i8* %ks.addr1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 85)
  store i32 %enc, i32* %enc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr, metadata !317, metadata !DIExpression()), !dbg !318
  call void @llvm.dbg.declare(metadata i32* %l, metadata !319, metadata !DIExpression()), !dbg !320
  call void @llvm.dbg.declare(metadata i32* %r, metadata !321, metadata !DIExpression()), !dbg !322
  call void @llvm.dbg.declare(metadata i32* %t, metadata !323, metadata !DIExpression()), !dbg !324
  call void @llvm.dbg.declare(metadata i32* %u, metadata !325, metadata !DIExpression()), !dbg !326
  call void @llvm.dbg.declare(metadata i32** %s, metadata !327, metadata !DIExpression()), !dbg !328
  %s2 = bitcast i32** %s to i8*, !dbg !329
  call void @llvm.var.annotation(i8* %s2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 88), !dbg !329
  %0 = load i32*, i32** %data.addr, align 8, !dbg !330
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !330
  %1 = load i32, i32* %arrayidx, align 4, !dbg !330
  store i32 %1, i32* %r, align 4, !dbg !331
  %2 = load i32*, i32** %data.addr, align 8, !dbg !332
  %arrayidx3 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !332
  %3 = load i32, i32* %arrayidx3, align 4, !dbg !332
  store i32 %3, i32* %l, align 4, !dbg !333
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !334, metadata !DIExpression()), !dbg !336
  %4 = load i32, i32* %r, align 4, !dbg !336
  %5 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %4) #7, !dbg !336, !srcloc !337
  store i32 %5, i32* %ret, align 4, !dbg !336
  %6 = load i32, i32* %ret, align 4, !dbg !336
  store i32 %6, i32* %tmp, align 4, !dbg !336
  %7 = load i32, i32* %tmp, align 4, !dbg !336
  %conv = zext i32 %7 to i64, !dbg !338
  %and = and i64 %conv, 4294967295, !dbg !339
  %conv4 = trunc i64 %and to i32, !dbg !338
  store i32 %conv4, i32* %r, align 4, !dbg !340
  call void @llvm.dbg.declare(metadata i32* %ret5, metadata !341, metadata !DIExpression()), !dbg !343
  %8 = load i32, i32* %l, align 4, !dbg !343
  %9 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %8) #7, !dbg !343, !srcloc !344
  store i32 %9, i32* %ret5, align 4, !dbg !343
  %10 = load i32, i32* %ret5, align 4, !dbg !343
  store i32 %10, i32* %tmp6, align 4, !dbg !343
  %11 = load i32, i32* %tmp6, align 4, !dbg !343
  %conv7 = zext i32 %11 to i64, !dbg !345
  %and8 = and i64 %conv7, 4294967295, !dbg !346
  %conv9 = trunc i64 %and8 to i32, !dbg !345
  store i32 %conv9, i32* %l, align 4, !dbg !347
  %12 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr, align 8, !dbg !348
  %ks10 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %12, i32 0, i32 0, !dbg !349
  %arraydecay = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks10, i64 0, i64 0, !dbg !350
  %deslong = bitcast %union.anon* %arraydecay to [2 x i32]*, !dbg !350
  %arraydecay11 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong, i64 0, i64 0, !dbg !348
  store i32* %arraydecay11, i32** %s, align 8, !dbg !351
  %13 = load i32, i32* %enc.addr, align 4, !dbg !352
  %tobool = icmp ne i32 %13, 0, !dbg !352
  br i1 %tobool, label %if.then, label %if.else, !dbg !354

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %r, align 4, !dbg !355
  %15 = load i32*, i32** %s, align 8, !dbg !355
  %arrayidx12 = getelementptr inbounds i32, i32* %15, i64 0, !dbg !355
  %16 = load i32, i32* %arrayidx12, align 4, !dbg !355
  %xor = xor i32 %14, %16, !dbg !355
  store i32 %xor, i32* %u, align 4, !dbg !355
  %17 = load i32, i32* %r, align 4, !dbg !355
  %18 = load i32*, i32** %s, align 8, !dbg !355
  %arrayidx13 = getelementptr inbounds i32, i32* %18, i64 1, !dbg !355
  %19 = load i32, i32* %arrayidx13, align 4, !dbg !355
  %xor14 = xor i32 %17, %19, !dbg !355
  store i32 %xor14, i32* %t, align 4, !dbg !355
  call void @llvm.dbg.declare(metadata i32* %ret15, metadata !358, metadata !DIExpression()), !dbg !360
  %20 = load i32, i32* %t, align 4, !dbg !360
  %21 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %20) #7, !dbg !360, !srcloc !361
  store i32 %21, i32* %ret15, align 4, !dbg !360
  %22 = load i32, i32* %ret15, align 4, !dbg !360
  store i32 %22, i32* %tmp16, align 4, !dbg !360
  %23 = load i32, i32* %tmp16, align 4, !dbg !360
  store i32 %23, i32* %t, align 4, !dbg !355
  %24 = load i32, i32* %u, align 4, !dbg !355
  %shr = lshr i32 %24, 2, !dbg !355
  %and17 = and i32 %shr, 63, !dbg !355
  %idxprom = zext i32 %and17 to i64, !dbg !355
  %arrayidx18 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom, !dbg !355
  %25 = load i32, i32* %arrayidx18, align 4, !dbg !355
  %26 = load i32, i32* %u, align 4, !dbg !355
  %shr19 = lshr i32 %26, 10, !dbg !355
  %and20 = and i32 %shr19, 63, !dbg !355
  %idxprom21 = zext i32 %and20 to i64, !dbg !355
  %arrayidx22 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom21, !dbg !355
  %27 = load i32, i32* %arrayidx22, align 4, !dbg !355
  %xor23 = xor i32 %25, %27, !dbg !355
  %28 = load i32, i32* %u, align 4, !dbg !355
  %shr24 = lshr i32 %28, 18, !dbg !355
  %and25 = and i32 %shr24, 63, !dbg !355
  %idxprom26 = zext i32 %and25 to i64, !dbg !355
  %arrayidx27 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom26, !dbg !355
  %29 = load i32, i32* %arrayidx27, align 4, !dbg !355
  %xor28 = xor i32 %xor23, %29, !dbg !355
  %30 = load i32, i32* %u, align 4, !dbg !355
  %shr29 = lshr i32 %30, 26, !dbg !355
  %and30 = and i32 %shr29, 63, !dbg !355
  %idxprom31 = zext i32 %and30 to i64, !dbg !355
  %arrayidx32 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom31, !dbg !355
  %31 = load i32, i32* %arrayidx32, align 4, !dbg !355
  %xor33 = xor i32 %xor28, %31, !dbg !355
  %32 = load i32, i32* %t, align 4, !dbg !355
  %shr34 = lshr i32 %32, 2, !dbg !355
  %and35 = and i32 %shr34, 63, !dbg !355
  %idxprom36 = zext i32 %and35 to i64, !dbg !355
  %arrayidx37 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom36, !dbg !355
  %33 = load i32, i32* %arrayidx37, align 4, !dbg !355
  %xor38 = xor i32 %xor33, %33, !dbg !355
  %34 = load i32, i32* %t, align 4, !dbg !355
  %shr39 = lshr i32 %34, 10, !dbg !355
  %and40 = and i32 %shr39, 63, !dbg !355
  %idxprom41 = zext i32 %and40 to i64, !dbg !355
  %arrayidx42 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom41, !dbg !355
  %35 = load i32, i32* %arrayidx42, align 4, !dbg !355
  %xor43 = xor i32 %xor38, %35, !dbg !355
  %36 = load i32, i32* %t, align 4, !dbg !355
  %shr44 = lshr i32 %36, 18, !dbg !355
  %and45 = and i32 %shr44, 63, !dbg !355
  %idxprom46 = zext i32 %and45 to i64, !dbg !355
  %arrayidx47 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom46, !dbg !355
  %37 = load i32, i32* %arrayidx47, align 4, !dbg !355
  %xor48 = xor i32 %xor43, %37, !dbg !355
  %38 = load i32, i32* %t, align 4, !dbg !355
  %shr49 = lshr i32 %38, 26, !dbg !355
  %and50 = and i32 %shr49, 63, !dbg !355
  %idxprom51 = zext i32 %and50 to i64, !dbg !355
  %arrayidx52 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom51, !dbg !355
  %39 = load i32, i32* %arrayidx52, align 4, !dbg !355
  %xor53 = xor i32 %xor48, %39, !dbg !355
  %40 = load i32, i32* %l, align 4, !dbg !355
  %xor54 = xor i32 %40, %xor53, !dbg !355
  store i32 %xor54, i32* %l, align 4, !dbg !355
  %41 = load i32, i32* %l, align 4, !dbg !362
  %42 = load i32*, i32** %s, align 8, !dbg !362
  %arrayidx55 = getelementptr inbounds i32, i32* %42, i64 2, !dbg !362
  %43 = load i32, i32* %arrayidx55, align 4, !dbg !362
  %xor56 = xor i32 %41, %43, !dbg !362
  store i32 %xor56, i32* %u, align 4, !dbg !362
  %44 = load i32, i32* %l, align 4, !dbg !362
  %45 = load i32*, i32** %s, align 8, !dbg !362
  %arrayidx57 = getelementptr inbounds i32, i32* %45, i64 3, !dbg !362
  %46 = load i32, i32* %arrayidx57, align 4, !dbg !362
  %xor58 = xor i32 %44, %46, !dbg !362
  store i32 %xor58, i32* %t, align 4, !dbg !362
  call void @llvm.dbg.declare(metadata i32* %ret59, metadata !364, metadata !DIExpression()), !dbg !366
  %47 = load i32, i32* %t, align 4, !dbg !366
  %48 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %47) #7, !dbg !366, !srcloc !367
  store i32 %48, i32* %ret59, align 4, !dbg !366
  %49 = load i32, i32* %ret59, align 4, !dbg !366
  store i32 %49, i32* %tmp60, align 4, !dbg !366
  %50 = load i32, i32* %tmp60, align 4, !dbg !366
  store i32 %50, i32* %t, align 4, !dbg !362
  %51 = load i32, i32* %u, align 4, !dbg !362
  %shr61 = lshr i32 %51, 2, !dbg !362
  %and62 = and i32 %shr61, 63, !dbg !362
  %idxprom63 = zext i32 %and62 to i64, !dbg !362
  %arrayidx64 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom63, !dbg !362
  %52 = load i32, i32* %arrayidx64, align 4, !dbg !362
  %53 = load i32, i32* %u, align 4, !dbg !362
  %shr65 = lshr i32 %53, 10, !dbg !362
  %and66 = and i32 %shr65, 63, !dbg !362
  %idxprom67 = zext i32 %and66 to i64, !dbg !362
  %arrayidx68 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom67, !dbg !362
  %54 = load i32, i32* %arrayidx68, align 4, !dbg !362
  %xor69 = xor i32 %52, %54, !dbg !362
  %55 = load i32, i32* %u, align 4, !dbg !362
  %shr70 = lshr i32 %55, 18, !dbg !362
  %and71 = and i32 %shr70, 63, !dbg !362
  %idxprom72 = zext i32 %and71 to i64, !dbg !362
  %arrayidx73 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom72, !dbg !362
  %56 = load i32, i32* %arrayidx73, align 4, !dbg !362
  %xor74 = xor i32 %xor69, %56, !dbg !362
  %57 = load i32, i32* %u, align 4, !dbg !362
  %shr75 = lshr i32 %57, 26, !dbg !362
  %and76 = and i32 %shr75, 63, !dbg !362
  %idxprom77 = zext i32 %and76 to i64, !dbg !362
  %arrayidx78 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom77, !dbg !362
  %58 = load i32, i32* %arrayidx78, align 4, !dbg !362
  %xor79 = xor i32 %xor74, %58, !dbg !362
  %59 = load i32, i32* %t, align 4, !dbg !362
  %shr80 = lshr i32 %59, 2, !dbg !362
  %and81 = and i32 %shr80, 63, !dbg !362
  %idxprom82 = zext i32 %and81 to i64, !dbg !362
  %arrayidx83 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom82, !dbg !362
  %60 = load i32, i32* %arrayidx83, align 4, !dbg !362
  %xor84 = xor i32 %xor79, %60, !dbg !362
  %61 = load i32, i32* %t, align 4, !dbg !362
  %shr85 = lshr i32 %61, 10, !dbg !362
  %and86 = and i32 %shr85, 63, !dbg !362
  %idxprom87 = zext i32 %and86 to i64, !dbg !362
  %arrayidx88 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom87, !dbg !362
  %62 = load i32, i32* %arrayidx88, align 4, !dbg !362
  %xor89 = xor i32 %xor84, %62, !dbg !362
  %63 = load i32, i32* %t, align 4, !dbg !362
  %shr90 = lshr i32 %63, 18, !dbg !362
  %and91 = and i32 %shr90, 63, !dbg !362
  %idxprom92 = zext i32 %and91 to i64, !dbg !362
  %arrayidx93 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom92, !dbg !362
  %64 = load i32, i32* %arrayidx93, align 4, !dbg !362
  %xor94 = xor i32 %xor89, %64, !dbg !362
  %65 = load i32, i32* %t, align 4, !dbg !362
  %shr95 = lshr i32 %65, 26, !dbg !362
  %and96 = and i32 %shr95, 63, !dbg !362
  %idxprom97 = zext i32 %and96 to i64, !dbg !362
  %arrayidx98 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom97, !dbg !362
  %66 = load i32, i32* %arrayidx98, align 4, !dbg !362
  %xor99 = xor i32 %xor94, %66, !dbg !362
  %67 = load i32, i32* %r, align 4, !dbg !362
  %xor100 = xor i32 %67, %xor99, !dbg !362
  store i32 %xor100, i32* %r, align 4, !dbg !362
  %68 = load i32, i32* %r, align 4, !dbg !368
  %69 = load i32*, i32** %s, align 8, !dbg !368
  %arrayidx101 = getelementptr inbounds i32, i32* %69, i64 4, !dbg !368
  %70 = load i32, i32* %arrayidx101, align 4, !dbg !368
  %xor102 = xor i32 %68, %70, !dbg !368
  store i32 %xor102, i32* %u, align 4, !dbg !368
  %71 = load i32, i32* %r, align 4, !dbg !368
  %72 = load i32*, i32** %s, align 8, !dbg !368
  %arrayidx103 = getelementptr inbounds i32, i32* %72, i64 5, !dbg !368
  %73 = load i32, i32* %arrayidx103, align 4, !dbg !368
  %xor104 = xor i32 %71, %73, !dbg !368
  store i32 %xor104, i32* %t, align 4, !dbg !368
  call void @llvm.dbg.declare(metadata i32* %ret105, metadata !370, metadata !DIExpression()), !dbg !372
  %74 = load i32, i32* %t, align 4, !dbg !372
  %75 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %74) #7, !dbg !372, !srcloc !373
  store i32 %75, i32* %ret105, align 4, !dbg !372
  %76 = load i32, i32* %ret105, align 4, !dbg !372
  store i32 %76, i32* %tmp106, align 4, !dbg !372
  %77 = load i32, i32* %tmp106, align 4, !dbg !372
  store i32 %77, i32* %t, align 4, !dbg !368
  %78 = load i32, i32* %u, align 4, !dbg !368
  %shr107 = lshr i32 %78, 2, !dbg !368
  %and108 = and i32 %shr107, 63, !dbg !368
  %idxprom109 = zext i32 %and108 to i64, !dbg !368
  %arrayidx110 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom109, !dbg !368
  %79 = load i32, i32* %arrayidx110, align 4, !dbg !368
  %80 = load i32, i32* %u, align 4, !dbg !368
  %shr111 = lshr i32 %80, 10, !dbg !368
  %and112 = and i32 %shr111, 63, !dbg !368
  %idxprom113 = zext i32 %and112 to i64, !dbg !368
  %arrayidx114 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom113, !dbg !368
  %81 = load i32, i32* %arrayidx114, align 4, !dbg !368
  %xor115 = xor i32 %79, %81, !dbg !368
  %82 = load i32, i32* %u, align 4, !dbg !368
  %shr116 = lshr i32 %82, 18, !dbg !368
  %and117 = and i32 %shr116, 63, !dbg !368
  %idxprom118 = zext i32 %and117 to i64, !dbg !368
  %arrayidx119 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom118, !dbg !368
  %83 = load i32, i32* %arrayidx119, align 4, !dbg !368
  %xor120 = xor i32 %xor115, %83, !dbg !368
  %84 = load i32, i32* %u, align 4, !dbg !368
  %shr121 = lshr i32 %84, 26, !dbg !368
  %and122 = and i32 %shr121, 63, !dbg !368
  %idxprom123 = zext i32 %and122 to i64, !dbg !368
  %arrayidx124 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom123, !dbg !368
  %85 = load i32, i32* %arrayidx124, align 4, !dbg !368
  %xor125 = xor i32 %xor120, %85, !dbg !368
  %86 = load i32, i32* %t, align 4, !dbg !368
  %shr126 = lshr i32 %86, 2, !dbg !368
  %and127 = and i32 %shr126, 63, !dbg !368
  %idxprom128 = zext i32 %and127 to i64, !dbg !368
  %arrayidx129 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom128, !dbg !368
  %87 = load i32, i32* %arrayidx129, align 4, !dbg !368
  %xor130 = xor i32 %xor125, %87, !dbg !368
  %88 = load i32, i32* %t, align 4, !dbg !368
  %shr131 = lshr i32 %88, 10, !dbg !368
  %and132 = and i32 %shr131, 63, !dbg !368
  %idxprom133 = zext i32 %and132 to i64, !dbg !368
  %arrayidx134 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom133, !dbg !368
  %89 = load i32, i32* %arrayidx134, align 4, !dbg !368
  %xor135 = xor i32 %xor130, %89, !dbg !368
  %90 = load i32, i32* %t, align 4, !dbg !368
  %shr136 = lshr i32 %90, 18, !dbg !368
  %and137 = and i32 %shr136, 63, !dbg !368
  %idxprom138 = zext i32 %and137 to i64, !dbg !368
  %arrayidx139 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom138, !dbg !368
  %91 = load i32, i32* %arrayidx139, align 4, !dbg !368
  %xor140 = xor i32 %xor135, %91, !dbg !368
  %92 = load i32, i32* %t, align 4, !dbg !368
  %shr141 = lshr i32 %92, 26, !dbg !368
  %and142 = and i32 %shr141, 63, !dbg !368
  %idxprom143 = zext i32 %and142 to i64, !dbg !368
  %arrayidx144 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom143, !dbg !368
  %93 = load i32, i32* %arrayidx144, align 4, !dbg !368
  %xor145 = xor i32 %xor140, %93, !dbg !368
  %94 = load i32, i32* %l, align 4, !dbg !368
  %xor146 = xor i32 %94, %xor145, !dbg !368
  store i32 %xor146, i32* %l, align 4, !dbg !368
  %95 = load i32, i32* %l, align 4, !dbg !374
  %96 = load i32*, i32** %s, align 8, !dbg !374
  %arrayidx147 = getelementptr inbounds i32, i32* %96, i64 6, !dbg !374
  %97 = load i32, i32* %arrayidx147, align 4, !dbg !374
  %xor148 = xor i32 %95, %97, !dbg !374
  store i32 %xor148, i32* %u, align 4, !dbg !374
  %98 = load i32, i32* %l, align 4, !dbg !374
  %99 = load i32*, i32** %s, align 8, !dbg !374
  %arrayidx149 = getelementptr inbounds i32, i32* %99, i64 7, !dbg !374
  %100 = load i32, i32* %arrayidx149, align 4, !dbg !374
  %xor150 = xor i32 %98, %100, !dbg !374
  store i32 %xor150, i32* %t, align 4, !dbg !374
  call void @llvm.dbg.declare(metadata i32* %ret151, metadata !376, metadata !DIExpression()), !dbg !378
  %101 = load i32, i32* %t, align 4, !dbg !378
  %102 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %101) #7, !dbg !378, !srcloc !379
  store i32 %102, i32* %ret151, align 4, !dbg !378
  %103 = load i32, i32* %ret151, align 4, !dbg !378
  store i32 %103, i32* %tmp152, align 4, !dbg !378
  %104 = load i32, i32* %tmp152, align 4, !dbg !378
  store i32 %104, i32* %t, align 4, !dbg !374
  %105 = load i32, i32* %u, align 4, !dbg !374
  %shr153 = lshr i32 %105, 2, !dbg !374
  %and154 = and i32 %shr153, 63, !dbg !374
  %idxprom155 = zext i32 %and154 to i64, !dbg !374
  %arrayidx156 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom155, !dbg !374
  %106 = load i32, i32* %arrayidx156, align 4, !dbg !374
  %107 = load i32, i32* %u, align 4, !dbg !374
  %shr157 = lshr i32 %107, 10, !dbg !374
  %and158 = and i32 %shr157, 63, !dbg !374
  %idxprom159 = zext i32 %and158 to i64, !dbg !374
  %arrayidx160 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom159, !dbg !374
  %108 = load i32, i32* %arrayidx160, align 4, !dbg !374
  %xor161 = xor i32 %106, %108, !dbg !374
  %109 = load i32, i32* %u, align 4, !dbg !374
  %shr162 = lshr i32 %109, 18, !dbg !374
  %and163 = and i32 %shr162, 63, !dbg !374
  %idxprom164 = zext i32 %and163 to i64, !dbg !374
  %arrayidx165 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom164, !dbg !374
  %110 = load i32, i32* %arrayidx165, align 4, !dbg !374
  %xor166 = xor i32 %xor161, %110, !dbg !374
  %111 = load i32, i32* %u, align 4, !dbg !374
  %shr167 = lshr i32 %111, 26, !dbg !374
  %and168 = and i32 %shr167, 63, !dbg !374
  %idxprom169 = zext i32 %and168 to i64, !dbg !374
  %arrayidx170 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom169, !dbg !374
  %112 = load i32, i32* %arrayidx170, align 4, !dbg !374
  %xor171 = xor i32 %xor166, %112, !dbg !374
  %113 = load i32, i32* %t, align 4, !dbg !374
  %shr172 = lshr i32 %113, 2, !dbg !374
  %and173 = and i32 %shr172, 63, !dbg !374
  %idxprom174 = zext i32 %and173 to i64, !dbg !374
  %arrayidx175 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom174, !dbg !374
  %114 = load i32, i32* %arrayidx175, align 4, !dbg !374
  %xor176 = xor i32 %xor171, %114, !dbg !374
  %115 = load i32, i32* %t, align 4, !dbg !374
  %shr177 = lshr i32 %115, 10, !dbg !374
  %and178 = and i32 %shr177, 63, !dbg !374
  %idxprom179 = zext i32 %and178 to i64, !dbg !374
  %arrayidx180 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom179, !dbg !374
  %116 = load i32, i32* %arrayidx180, align 4, !dbg !374
  %xor181 = xor i32 %xor176, %116, !dbg !374
  %117 = load i32, i32* %t, align 4, !dbg !374
  %shr182 = lshr i32 %117, 18, !dbg !374
  %and183 = and i32 %shr182, 63, !dbg !374
  %idxprom184 = zext i32 %and183 to i64, !dbg !374
  %arrayidx185 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom184, !dbg !374
  %118 = load i32, i32* %arrayidx185, align 4, !dbg !374
  %xor186 = xor i32 %xor181, %118, !dbg !374
  %119 = load i32, i32* %t, align 4, !dbg !374
  %shr187 = lshr i32 %119, 26, !dbg !374
  %and188 = and i32 %shr187, 63, !dbg !374
  %idxprom189 = zext i32 %and188 to i64, !dbg !374
  %arrayidx190 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom189, !dbg !374
  %120 = load i32, i32* %arrayidx190, align 4, !dbg !374
  %xor191 = xor i32 %xor186, %120, !dbg !374
  %121 = load i32, i32* %r, align 4, !dbg !374
  %xor192 = xor i32 %121, %xor191, !dbg !374
  store i32 %xor192, i32* %r, align 4, !dbg !374
  %122 = load i32, i32* %r, align 4, !dbg !380
  %123 = load i32*, i32** %s, align 8, !dbg !380
  %arrayidx193 = getelementptr inbounds i32, i32* %123, i64 8, !dbg !380
  %124 = load i32, i32* %arrayidx193, align 4, !dbg !380
  %xor194 = xor i32 %122, %124, !dbg !380
  store i32 %xor194, i32* %u, align 4, !dbg !380
  %125 = load i32, i32* %r, align 4, !dbg !380
  %126 = load i32*, i32** %s, align 8, !dbg !380
  %arrayidx195 = getelementptr inbounds i32, i32* %126, i64 9, !dbg !380
  %127 = load i32, i32* %arrayidx195, align 4, !dbg !380
  %xor196 = xor i32 %125, %127, !dbg !380
  store i32 %xor196, i32* %t, align 4, !dbg !380
  call void @llvm.dbg.declare(metadata i32* %ret197, metadata !382, metadata !DIExpression()), !dbg !384
  %128 = load i32, i32* %t, align 4, !dbg !384
  %129 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %128) #7, !dbg !384, !srcloc !385
  store i32 %129, i32* %ret197, align 4, !dbg !384
  %130 = load i32, i32* %ret197, align 4, !dbg !384
  store i32 %130, i32* %tmp198, align 4, !dbg !384
  %131 = load i32, i32* %tmp198, align 4, !dbg !384
  store i32 %131, i32* %t, align 4, !dbg !380
  %132 = load i32, i32* %u, align 4, !dbg !380
  %shr199 = lshr i32 %132, 2, !dbg !380
  %and200 = and i32 %shr199, 63, !dbg !380
  %idxprom201 = zext i32 %and200 to i64, !dbg !380
  %arrayidx202 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom201, !dbg !380
  %133 = load i32, i32* %arrayidx202, align 4, !dbg !380
  %134 = load i32, i32* %u, align 4, !dbg !380
  %shr203 = lshr i32 %134, 10, !dbg !380
  %and204 = and i32 %shr203, 63, !dbg !380
  %idxprom205 = zext i32 %and204 to i64, !dbg !380
  %arrayidx206 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom205, !dbg !380
  %135 = load i32, i32* %arrayidx206, align 4, !dbg !380
  %xor207 = xor i32 %133, %135, !dbg !380
  %136 = load i32, i32* %u, align 4, !dbg !380
  %shr208 = lshr i32 %136, 18, !dbg !380
  %and209 = and i32 %shr208, 63, !dbg !380
  %idxprom210 = zext i32 %and209 to i64, !dbg !380
  %arrayidx211 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom210, !dbg !380
  %137 = load i32, i32* %arrayidx211, align 4, !dbg !380
  %xor212 = xor i32 %xor207, %137, !dbg !380
  %138 = load i32, i32* %u, align 4, !dbg !380
  %shr213 = lshr i32 %138, 26, !dbg !380
  %and214 = and i32 %shr213, 63, !dbg !380
  %idxprom215 = zext i32 %and214 to i64, !dbg !380
  %arrayidx216 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom215, !dbg !380
  %139 = load i32, i32* %arrayidx216, align 4, !dbg !380
  %xor217 = xor i32 %xor212, %139, !dbg !380
  %140 = load i32, i32* %t, align 4, !dbg !380
  %shr218 = lshr i32 %140, 2, !dbg !380
  %and219 = and i32 %shr218, 63, !dbg !380
  %idxprom220 = zext i32 %and219 to i64, !dbg !380
  %arrayidx221 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom220, !dbg !380
  %141 = load i32, i32* %arrayidx221, align 4, !dbg !380
  %xor222 = xor i32 %xor217, %141, !dbg !380
  %142 = load i32, i32* %t, align 4, !dbg !380
  %shr223 = lshr i32 %142, 10, !dbg !380
  %and224 = and i32 %shr223, 63, !dbg !380
  %idxprom225 = zext i32 %and224 to i64, !dbg !380
  %arrayidx226 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom225, !dbg !380
  %143 = load i32, i32* %arrayidx226, align 4, !dbg !380
  %xor227 = xor i32 %xor222, %143, !dbg !380
  %144 = load i32, i32* %t, align 4, !dbg !380
  %shr228 = lshr i32 %144, 18, !dbg !380
  %and229 = and i32 %shr228, 63, !dbg !380
  %idxprom230 = zext i32 %and229 to i64, !dbg !380
  %arrayidx231 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom230, !dbg !380
  %145 = load i32, i32* %arrayidx231, align 4, !dbg !380
  %xor232 = xor i32 %xor227, %145, !dbg !380
  %146 = load i32, i32* %t, align 4, !dbg !380
  %shr233 = lshr i32 %146, 26, !dbg !380
  %and234 = and i32 %shr233, 63, !dbg !380
  %idxprom235 = zext i32 %and234 to i64, !dbg !380
  %arrayidx236 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom235, !dbg !380
  %147 = load i32, i32* %arrayidx236, align 4, !dbg !380
  %xor237 = xor i32 %xor232, %147, !dbg !380
  %148 = load i32, i32* %l, align 4, !dbg !380
  %xor238 = xor i32 %148, %xor237, !dbg !380
  store i32 %xor238, i32* %l, align 4, !dbg !380
  %149 = load i32, i32* %l, align 4, !dbg !386
  %150 = load i32*, i32** %s, align 8, !dbg !386
  %arrayidx239 = getelementptr inbounds i32, i32* %150, i64 10, !dbg !386
  %151 = load i32, i32* %arrayidx239, align 4, !dbg !386
  %xor240 = xor i32 %149, %151, !dbg !386
  store i32 %xor240, i32* %u, align 4, !dbg !386
  %152 = load i32, i32* %l, align 4, !dbg !386
  %153 = load i32*, i32** %s, align 8, !dbg !386
  %arrayidx241 = getelementptr inbounds i32, i32* %153, i64 11, !dbg !386
  %154 = load i32, i32* %arrayidx241, align 4, !dbg !386
  %xor242 = xor i32 %152, %154, !dbg !386
  store i32 %xor242, i32* %t, align 4, !dbg !386
  call void @llvm.dbg.declare(metadata i32* %ret243, metadata !388, metadata !DIExpression()), !dbg !390
  %155 = load i32, i32* %t, align 4, !dbg !390
  %156 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %155) #7, !dbg !390, !srcloc !391
  store i32 %156, i32* %ret243, align 4, !dbg !390
  %157 = load i32, i32* %ret243, align 4, !dbg !390
  store i32 %157, i32* %tmp244, align 4, !dbg !390
  %158 = load i32, i32* %tmp244, align 4, !dbg !390
  store i32 %158, i32* %t, align 4, !dbg !386
  %159 = load i32, i32* %u, align 4, !dbg !386
  %shr245 = lshr i32 %159, 2, !dbg !386
  %and246 = and i32 %shr245, 63, !dbg !386
  %idxprom247 = zext i32 %and246 to i64, !dbg !386
  %arrayidx248 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom247, !dbg !386
  %160 = load i32, i32* %arrayidx248, align 4, !dbg !386
  %161 = load i32, i32* %u, align 4, !dbg !386
  %shr249 = lshr i32 %161, 10, !dbg !386
  %and250 = and i32 %shr249, 63, !dbg !386
  %idxprom251 = zext i32 %and250 to i64, !dbg !386
  %arrayidx252 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom251, !dbg !386
  %162 = load i32, i32* %arrayidx252, align 4, !dbg !386
  %xor253 = xor i32 %160, %162, !dbg !386
  %163 = load i32, i32* %u, align 4, !dbg !386
  %shr254 = lshr i32 %163, 18, !dbg !386
  %and255 = and i32 %shr254, 63, !dbg !386
  %idxprom256 = zext i32 %and255 to i64, !dbg !386
  %arrayidx257 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom256, !dbg !386
  %164 = load i32, i32* %arrayidx257, align 4, !dbg !386
  %xor258 = xor i32 %xor253, %164, !dbg !386
  %165 = load i32, i32* %u, align 4, !dbg !386
  %shr259 = lshr i32 %165, 26, !dbg !386
  %and260 = and i32 %shr259, 63, !dbg !386
  %idxprom261 = zext i32 %and260 to i64, !dbg !386
  %arrayidx262 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom261, !dbg !386
  %166 = load i32, i32* %arrayidx262, align 4, !dbg !386
  %xor263 = xor i32 %xor258, %166, !dbg !386
  %167 = load i32, i32* %t, align 4, !dbg !386
  %shr264 = lshr i32 %167, 2, !dbg !386
  %and265 = and i32 %shr264, 63, !dbg !386
  %idxprom266 = zext i32 %and265 to i64, !dbg !386
  %arrayidx267 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom266, !dbg !386
  %168 = load i32, i32* %arrayidx267, align 4, !dbg !386
  %xor268 = xor i32 %xor263, %168, !dbg !386
  %169 = load i32, i32* %t, align 4, !dbg !386
  %shr269 = lshr i32 %169, 10, !dbg !386
  %and270 = and i32 %shr269, 63, !dbg !386
  %idxprom271 = zext i32 %and270 to i64, !dbg !386
  %arrayidx272 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom271, !dbg !386
  %170 = load i32, i32* %arrayidx272, align 4, !dbg !386
  %xor273 = xor i32 %xor268, %170, !dbg !386
  %171 = load i32, i32* %t, align 4, !dbg !386
  %shr274 = lshr i32 %171, 18, !dbg !386
  %and275 = and i32 %shr274, 63, !dbg !386
  %idxprom276 = zext i32 %and275 to i64, !dbg !386
  %arrayidx277 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom276, !dbg !386
  %172 = load i32, i32* %arrayidx277, align 4, !dbg !386
  %xor278 = xor i32 %xor273, %172, !dbg !386
  %173 = load i32, i32* %t, align 4, !dbg !386
  %shr279 = lshr i32 %173, 26, !dbg !386
  %and280 = and i32 %shr279, 63, !dbg !386
  %idxprom281 = zext i32 %and280 to i64, !dbg !386
  %arrayidx282 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom281, !dbg !386
  %174 = load i32, i32* %arrayidx282, align 4, !dbg !386
  %xor283 = xor i32 %xor278, %174, !dbg !386
  %175 = load i32, i32* %r, align 4, !dbg !386
  %xor284 = xor i32 %175, %xor283, !dbg !386
  store i32 %xor284, i32* %r, align 4, !dbg !386
  %176 = load i32, i32* %r, align 4, !dbg !392
  %177 = load i32*, i32** %s, align 8, !dbg !392
  %arrayidx285 = getelementptr inbounds i32, i32* %177, i64 12, !dbg !392
  %178 = load i32, i32* %arrayidx285, align 4, !dbg !392
  %xor286 = xor i32 %176, %178, !dbg !392
  store i32 %xor286, i32* %u, align 4, !dbg !392
  %179 = load i32, i32* %r, align 4, !dbg !392
  %180 = load i32*, i32** %s, align 8, !dbg !392
  %arrayidx287 = getelementptr inbounds i32, i32* %180, i64 13, !dbg !392
  %181 = load i32, i32* %arrayidx287, align 4, !dbg !392
  %xor288 = xor i32 %179, %181, !dbg !392
  store i32 %xor288, i32* %t, align 4, !dbg !392
  call void @llvm.dbg.declare(metadata i32* %ret289, metadata !394, metadata !DIExpression()), !dbg !396
  %182 = load i32, i32* %t, align 4, !dbg !396
  %183 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %182) #7, !dbg !396, !srcloc !397
  store i32 %183, i32* %ret289, align 4, !dbg !396
  %184 = load i32, i32* %ret289, align 4, !dbg !396
  store i32 %184, i32* %tmp290, align 4, !dbg !396
  %185 = load i32, i32* %tmp290, align 4, !dbg !396
  store i32 %185, i32* %t, align 4, !dbg !392
  %186 = load i32, i32* %u, align 4, !dbg !392
  %shr291 = lshr i32 %186, 2, !dbg !392
  %and292 = and i32 %shr291, 63, !dbg !392
  %idxprom293 = zext i32 %and292 to i64, !dbg !392
  %arrayidx294 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom293, !dbg !392
  %187 = load i32, i32* %arrayidx294, align 4, !dbg !392
  %188 = load i32, i32* %u, align 4, !dbg !392
  %shr295 = lshr i32 %188, 10, !dbg !392
  %and296 = and i32 %shr295, 63, !dbg !392
  %idxprom297 = zext i32 %and296 to i64, !dbg !392
  %arrayidx298 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom297, !dbg !392
  %189 = load i32, i32* %arrayidx298, align 4, !dbg !392
  %xor299 = xor i32 %187, %189, !dbg !392
  %190 = load i32, i32* %u, align 4, !dbg !392
  %shr300 = lshr i32 %190, 18, !dbg !392
  %and301 = and i32 %shr300, 63, !dbg !392
  %idxprom302 = zext i32 %and301 to i64, !dbg !392
  %arrayidx303 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom302, !dbg !392
  %191 = load i32, i32* %arrayidx303, align 4, !dbg !392
  %xor304 = xor i32 %xor299, %191, !dbg !392
  %192 = load i32, i32* %u, align 4, !dbg !392
  %shr305 = lshr i32 %192, 26, !dbg !392
  %and306 = and i32 %shr305, 63, !dbg !392
  %idxprom307 = zext i32 %and306 to i64, !dbg !392
  %arrayidx308 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom307, !dbg !392
  %193 = load i32, i32* %arrayidx308, align 4, !dbg !392
  %xor309 = xor i32 %xor304, %193, !dbg !392
  %194 = load i32, i32* %t, align 4, !dbg !392
  %shr310 = lshr i32 %194, 2, !dbg !392
  %and311 = and i32 %shr310, 63, !dbg !392
  %idxprom312 = zext i32 %and311 to i64, !dbg !392
  %arrayidx313 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom312, !dbg !392
  %195 = load i32, i32* %arrayidx313, align 4, !dbg !392
  %xor314 = xor i32 %xor309, %195, !dbg !392
  %196 = load i32, i32* %t, align 4, !dbg !392
  %shr315 = lshr i32 %196, 10, !dbg !392
  %and316 = and i32 %shr315, 63, !dbg !392
  %idxprom317 = zext i32 %and316 to i64, !dbg !392
  %arrayidx318 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom317, !dbg !392
  %197 = load i32, i32* %arrayidx318, align 4, !dbg !392
  %xor319 = xor i32 %xor314, %197, !dbg !392
  %198 = load i32, i32* %t, align 4, !dbg !392
  %shr320 = lshr i32 %198, 18, !dbg !392
  %and321 = and i32 %shr320, 63, !dbg !392
  %idxprom322 = zext i32 %and321 to i64, !dbg !392
  %arrayidx323 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom322, !dbg !392
  %199 = load i32, i32* %arrayidx323, align 4, !dbg !392
  %xor324 = xor i32 %xor319, %199, !dbg !392
  %200 = load i32, i32* %t, align 4, !dbg !392
  %shr325 = lshr i32 %200, 26, !dbg !392
  %and326 = and i32 %shr325, 63, !dbg !392
  %idxprom327 = zext i32 %and326 to i64, !dbg !392
  %arrayidx328 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom327, !dbg !392
  %201 = load i32, i32* %arrayidx328, align 4, !dbg !392
  %xor329 = xor i32 %xor324, %201, !dbg !392
  %202 = load i32, i32* %l, align 4, !dbg !392
  %xor330 = xor i32 %202, %xor329, !dbg !392
  store i32 %xor330, i32* %l, align 4, !dbg !392
  %203 = load i32, i32* %l, align 4, !dbg !398
  %204 = load i32*, i32** %s, align 8, !dbg !398
  %arrayidx331 = getelementptr inbounds i32, i32* %204, i64 14, !dbg !398
  %205 = load i32, i32* %arrayidx331, align 4, !dbg !398
  %xor332 = xor i32 %203, %205, !dbg !398
  store i32 %xor332, i32* %u, align 4, !dbg !398
  %206 = load i32, i32* %l, align 4, !dbg !398
  %207 = load i32*, i32** %s, align 8, !dbg !398
  %arrayidx333 = getelementptr inbounds i32, i32* %207, i64 15, !dbg !398
  %208 = load i32, i32* %arrayidx333, align 4, !dbg !398
  %xor334 = xor i32 %206, %208, !dbg !398
  store i32 %xor334, i32* %t, align 4, !dbg !398
  call void @llvm.dbg.declare(metadata i32* %ret335, metadata !400, metadata !DIExpression()), !dbg !402
  %209 = load i32, i32* %t, align 4, !dbg !402
  %210 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %209) #7, !dbg !402, !srcloc !403
  store i32 %210, i32* %ret335, align 4, !dbg !402
  %211 = load i32, i32* %ret335, align 4, !dbg !402
  store i32 %211, i32* %tmp336, align 4, !dbg !402
  %212 = load i32, i32* %tmp336, align 4, !dbg !402
  store i32 %212, i32* %t, align 4, !dbg !398
  %213 = load i32, i32* %u, align 4, !dbg !398
  %shr337 = lshr i32 %213, 2, !dbg !398
  %and338 = and i32 %shr337, 63, !dbg !398
  %idxprom339 = zext i32 %and338 to i64, !dbg !398
  %arrayidx340 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom339, !dbg !398
  %214 = load i32, i32* %arrayidx340, align 4, !dbg !398
  %215 = load i32, i32* %u, align 4, !dbg !398
  %shr341 = lshr i32 %215, 10, !dbg !398
  %and342 = and i32 %shr341, 63, !dbg !398
  %idxprom343 = zext i32 %and342 to i64, !dbg !398
  %arrayidx344 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom343, !dbg !398
  %216 = load i32, i32* %arrayidx344, align 4, !dbg !398
  %xor345 = xor i32 %214, %216, !dbg !398
  %217 = load i32, i32* %u, align 4, !dbg !398
  %shr346 = lshr i32 %217, 18, !dbg !398
  %and347 = and i32 %shr346, 63, !dbg !398
  %idxprom348 = zext i32 %and347 to i64, !dbg !398
  %arrayidx349 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom348, !dbg !398
  %218 = load i32, i32* %arrayidx349, align 4, !dbg !398
  %xor350 = xor i32 %xor345, %218, !dbg !398
  %219 = load i32, i32* %u, align 4, !dbg !398
  %shr351 = lshr i32 %219, 26, !dbg !398
  %and352 = and i32 %shr351, 63, !dbg !398
  %idxprom353 = zext i32 %and352 to i64, !dbg !398
  %arrayidx354 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom353, !dbg !398
  %220 = load i32, i32* %arrayidx354, align 4, !dbg !398
  %xor355 = xor i32 %xor350, %220, !dbg !398
  %221 = load i32, i32* %t, align 4, !dbg !398
  %shr356 = lshr i32 %221, 2, !dbg !398
  %and357 = and i32 %shr356, 63, !dbg !398
  %idxprom358 = zext i32 %and357 to i64, !dbg !398
  %arrayidx359 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom358, !dbg !398
  %222 = load i32, i32* %arrayidx359, align 4, !dbg !398
  %xor360 = xor i32 %xor355, %222, !dbg !398
  %223 = load i32, i32* %t, align 4, !dbg !398
  %shr361 = lshr i32 %223, 10, !dbg !398
  %and362 = and i32 %shr361, 63, !dbg !398
  %idxprom363 = zext i32 %and362 to i64, !dbg !398
  %arrayidx364 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom363, !dbg !398
  %224 = load i32, i32* %arrayidx364, align 4, !dbg !398
  %xor365 = xor i32 %xor360, %224, !dbg !398
  %225 = load i32, i32* %t, align 4, !dbg !398
  %shr366 = lshr i32 %225, 18, !dbg !398
  %and367 = and i32 %shr366, 63, !dbg !398
  %idxprom368 = zext i32 %and367 to i64, !dbg !398
  %arrayidx369 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom368, !dbg !398
  %226 = load i32, i32* %arrayidx369, align 4, !dbg !398
  %xor370 = xor i32 %xor365, %226, !dbg !398
  %227 = load i32, i32* %t, align 4, !dbg !398
  %shr371 = lshr i32 %227, 26, !dbg !398
  %and372 = and i32 %shr371, 63, !dbg !398
  %idxprom373 = zext i32 %and372 to i64, !dbg !398
  %arrayidx374 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom373, !dbg !398
  %228 = load i32, i32* %arrayidx374, align 4, !dbg !398
  %xor375 = xor i32 %xor370, %228, !dbg !398
  %229 = load i32, i32* %r, align 4, !dbg !398
  %xor376 = xor i32 %229, %xor375, !dbg !398
  store i32 %xor376, i32* %r, align 4, !dbg !398
  %230 = load i32, i32* %r, align 4, !dbg !404
  %231 = load i32*, i32** %s, align 8, !dbg !404
  %arrayidx377 = getelementptr inbounds i32, i32* %231, i64 16, !dbg !404
  %232 = load i32, i32* %arrayidx377, align 4, !dbg !404
  %xor378 = xor i32 %230, %232, !dbg !404
  store i32 %xor378, i32* %u, align 4, !dbg !404
  %233 = load i32, i32* %r, align 4, !dbg !404
  %234 = load i32*, i32** %s, align 8, !dbg !404
  %arrayidx379 = getelementptr inbounds i32, i32* %234, i64 17, !dbg !404
  %235 = load i32, i32* %arrayidx379, align 4, !dbg !404
  %xor380 = xor i32 %233, %235, !dbg !404
  store i32 %xor380, i32* %t, align 4, !dbg !404
  call void @llvm.dbg.declare(metadata i32* %ret381, metadata !406, metadata !DIExpression()), !dbg !408
  %236 = load i32, i32* %t, align 4, !dbg !408
  %237 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %236) #7, !dbg !408, !srcloc !409
  store i32 %237, i32* %ret381, align 4, !dbg !408
  %238 = load i32, i32* %ret381, align 4, !dbg !408
  store i32 %238, i32* %tmp382, align 4, !dbg !408
  %239 = load i32, i32* %tmp382, align 4, !dbg !408
  store i32 %239, i32* %t, align 4, !dbg !404
  %240 = load i32, i32* %u, align 4, !dbg !404
  %shr383 = lshr i32 %240, 2, !dbg !404
  %and384 = and i32 %shr383, 63, !dbg !404
  %idxprom385 = zext i32 %and384 to i64, !dbg !404
  %arrayidx386 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom385, !dbg !404
  %241 = load i32, i32* %arrayidx386, align 4, !dbg !404
  %242 = load i32, i32* %u, align 4, !dbg !404
  %shr387 = lshr i32 %242, 10, !dbg !404
  %and388 = and i32 %shr387, 63, !dbg !404
  %idxprom389 = zext i32 %and388 to i64, !dbg !404
  %arrayidx390 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom389, !dbg !404
  %243 = load i32, i32* %arrayidx390, align 4, !dbg !404
  %xor391 = xor i32 %241, %243, !dbg !404
  %244 = load i32, i32* %u, align 4, !dbg !404
  %shr392 = lshr i32 %244, 18, !dbg !404
  %and393 = and i32 %shr392, 63, !dbg !404
  %idxprom394 = zext i32 %and393 to i64, !dbg !404
  %arrayidx395 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom394, !dbg !404
  %245 = load i32, i32* %arrayidx395, align 4, !dbg !404
  %xor396 = xor i32 %xor391, %245, !dbg !404
  %246 = load i32, i32* %u, align 4, !dbg !404
  %shr397 = lshr i32 %246, 26, !dbg !404
  %and398 = and i32 %shr397, 63, !dbg !404
  %idxprom399 = zext i32 %and398 to i64, !dbg !404
  %arrayidx400 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom399, !dbg !404
  %247 = load i32, i32* %arrayidx400, align 4, !dbg !404
  %xor401 = xor i32 %xor396, %247, !dbg !404
  %248 = load i32, i32* %t, align 4, !dbg !404
  %shr402 = lshr i32 %248, 2, !dbg !404
  %and403 = and i32 %shr402, 63, !dbg !404
  %idxprom404 = zext i32 %and403 to i64, !dbg !404
  %arrayidx405 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom404, !dbg !404
  %249 = load i32, i32* %arrayidx405, align 4, !dbg !404
  %xor406 = xor i32 %xor401, %249, !dbg !404
  %250 = load i32, i32* %t, align 4, !dbg !404
  %shr407 = lshr i32 %250, 10, !dbg !404
  %and408 = and i32 %shr407, 63, !dbg !404
  %idxprom409 = zext i32 %and408 to i64, !dbg !404
  %arrayidx410 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom409, !dbg !404
  %251 = load i32, i32* %arrayidx410, align 4, !dbg !404
  %xor411 = xor i32 %xor406, %251, !dbg !404
  %252 = load i32, i32* %t, align 4, !dbg !404
  %shr412 = lshr i32 %252, 18, !dbg !404
  %and413 = and i32 %shr412, 63, !dbg !404
  %idxprom414 = zext i32 %and413 to i64, !dbg !404
  %arrayidx415 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom414, !dbg !404
  %253 = load i32, i32* %arrayidx415, align 4, !dbg !404
  %xor416 = xor i32 %xor411, %253, !dbg !404
  %254 = load i32, i32* %t, align 4, !dbg !404
  %shr417 = lshr i32 %254, 26, !dbg !404
  %and418 = and i32 %shr417, 63, !dbg !404
  %idxprom419 = zext i32 %and418 to i64, !dbg !404
  %arrayidx420 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom419, !dbg !404
  %255 = load i32, i32* %arrayidx420, align 4, !dbg !404
  %xor421 = xor i32 %xor416, %255, !dbg !404
  %256 = load i32, i32* %l, align 4, !dbg !404
  %xor422 = xor i32 %256, %xor421, !dbg !404
  store i32 %xor422, i32* %l, align 4, !dbg !404
  %257 = load i32, i32* %l, align 4, !dbg !410
  %258 = load i32*, i32** %s, align 8, !dbg !410
  %arrayidx423 = getelementptr inbounds i32, i32* %258, i64 18, !dbg !410
  %259 = load i32, i32* %arrayidx423, align 4, !dbg !410
  %xor424 = xor i32 %257, %259, !dbg !410
  store i32 %xor424, i32* %u, align 4, !dbg !410
  %260 = load i32, i32* %l, align 4, !dbg !410
  %261 = load i32*, i32** %s, align 8, !dbg !410
  %arrayidx425 = getelementptr inbounds i32, i32* %261, i64 19, !dbg !410
  %262 = load i32, i32* %arrayidx425, align 4, !dbg !410
  %xor426 = xor i32 %260, %262, !dbg !410
  store i32 %xor426, i32* %t, align 4, !dbg !410
  call void @llvm.dbg.declare(metadata i32* %ret427, metadata !412, metadata !DIExpression()), !dbg !414
  %263 = load i32, i32* %t, align 4, !dbg !414
  %264 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %263) #7, !dbg !414, !srcloc !415
  store i32 %264, i32* %ret427, align 4, !dbg !414
  %265 = load i32, i32* %ret427, align 4, !dbg !414
  store i32 %265, i32* %tmp428, align 4, !dbg !414
  %266 = load i32, i32* %tmp428, align 4, !dbg !414
  store i32 %266, i32* %t, align 4, !dbg !410
  %267 = load i32, i32* %u, align 4, !dbg !410
  %shr429 = lshr i32 %267, 2, !dbg !410
  %and430 = and i32 %shr429, 63, !dbg !410
  %idxprom431 = zext i32 %and430 to i64, !dbg !410
  %arrayidx432 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom431, !dbg !410
  %268 = load i32, i32* %arrayidx432, align 4, !dbg !410
  %269 = load i32, i32* %u, align 4, !dbg !410
  %shr433 = lshr i32 %269, 10, !dbg !410
  %and434 = and i32 %shr433, 63, !dbg !410
  %idxprom435 = zext i32 %and434 to i64, !dbg !410
  %arrayidx436 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom435, !dbg !410
  %270 = load i32, i32* %arrayidx436, align 4, !dbg !410
  %xor437 = xor i32 %268, %270, !dbg !410
  %271 = load i32, i32* %u, align 4, !dbg !410
  %shr438 = lshr i32 %271, 18, !dbg !410
  %and439 = and i32 %shr438, 63, !dbg !410
  %idxprom440 = zext i32 %and439 to i64, !dbg !410
  %arrayidx441 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom440, !dbg !410
  %272 = load i32, i32* %arrayidx441, align 4, !dbg !410
  %xor442 = xor i32 %xor437, %272, !dbg !410
  %273 = load i32, i32* %u, align 4, !dbg !410
  %shr443 = lshr i32 %273, 26, !dbg !410
  %and444 = and i32 %shr443, 63, !dbg !410
  %idxprom445 = zext i32 %and444 to i64, !dbg !410
  %arrayidx446 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom445, !dbg !410
  %274 = load i32, i32* %arrayidx446, align 4, !dbg !410
  %xor447 = xor i32 %xor442, %274, !dbg !410
  %275 = load i32, i32* %t, align 4, !dbg !410
  %shr448 = lshr i32 %275, 2, !dbg !410
  %and449 = and i32 %shr448, 63, !dbg !410
  %idxprom450 = zext i32 %and449 to i64, !dbg !410
  %arrayidx451 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom450, !dbg !410
  %276 = load i32, i32* %arrayidx451, align 4, !dbg !410
  %xor452 = xor i32 %xor447, %276, !dbg !410
  %277 = load i32, i32* %t, align 4, !dbg !410
  %shr453 = lshr i32 %277, 10, !dbg !410
  %and454 = and i32 %shr453, 63, !dbg !410
  %idxprom455 = zext i32 %and454 to i64, !dbg !410
  %arrayidx456 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom455, !dbg !410
  %278 = load i32, i32* %arrayidx456, align 4, !dbg !410
  %xor457 = xor i32 %xor452, %278, !dbg !410
  %279 = load i32, i32* %t, align 4, !dbg !410
  %shr458 = lshr i32 %279, 18, !dbg !410
  %and459 = and i32 %shr458, 63, !dbg !410
  %idxprom460 = zext i32 %and459 to i64, !dbg !410
  %arrayidx461 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom460, !dbg !410
  %280 = load i32, i32* %arrayidx461, align 4, !dbg !410
  %xor462 = xor i32 %xor457, %280, !dbg !410
  %281 = load i32, i32* %t, align 4, !dbg !410
  %shr463 = lshr i32 %281, 26, !dbg !410
  %and464 = and i32 %shr463, 63, !dbg !410
  %idxprom465 = zext i32 %and464 to i64, !dbg !410
  %arrayidx466 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom465, !dbg !410
  %282 = load i32, i32* %arrayidx466, align 4, !dbg !410
  %xor467 = xor i32 %xor462, %282, !dbg !410
  %283 = load i32, i32* %r, align 4, !dbg !410
  %xor468 = xor i32 %283, %xor467, !dbg !410
  store i32 %xor468, i32* %r, align 4, !dbg !410
  %284 = load i32, i32* %r, align 4, !dbg !416
  %285 = load i32*, i32** %s, align 8, !dbg !416
  %arrayidx469 = getelementptr inbounds i32, i32* %285, i64 20, !dbg !416
  %286 = load i32, i32* %arrayidx469, align 4, !dbg !416
  %xor470 = xor i32 %284, %286, !dbg !416
  store i32 %xor470, i32* %u, align 4, !dbg !416
  %287 = load i32, i32* %r, align 4, !dbg !416
  %288 = load i32*, i32** %s, align 8, !dbg !416
  %arrayidx471 = getelementptr inbounds i32, i32* %288, i64 21, !dbg !416
  %289 = load i32, i32* %arrayidx471, align 4, !dbg !416
  %xor472 = xor i32 %287, %289, !dbg !416
  store i32 %xor472, i32* %t, align 4, !dbg !416
  call void @llvm.dbg.declare(metadata i32* %ret473, metadata !418, metadata !DIExpression()), !dbg !420
  %290 = load i32, i32* %t, align 4, !dbg !420
  %291 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %290) #7, !dbg !420, !srcloc !421
  store i32 %291, i32* %ret473, align 4, !dbg !420
  %292 = load i32, i32* %ret473, align 4, !dbg !420
  store i32 %292, i32* %tmp474, align 4, !dbg !420
  %293 = load i32, i32* %tmp474, align 4, !dbg !420
  store i32 %293, i32* %t, align 4, !dbg !416
  %294 = load i32, i32* %u, align 4, !dbg !416
  %shr475 = lshr i32 %294, 2, !dbg !416
  %and476 = and i32 %shr475, 63, !dbg !416
  %idxprom477 = zext i32 %and476 to i64, !dbg !416
  %arrayidx478 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom477, !dbg !416
  %295 = load i32, i32* %arrayidx478, align 4, !dbg !416
  %296 = load i32, i32* %u, align 4, !dbg !416
  %shr479 = lshr i32 %296, 10, !dbg !416
  %and480 = and i32 %shr479, 63, !dbg !416
  %idxprom481 = zext i32 %and480 to i64, !dbg !416
  %arrayidx482 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom481, !dbg !416
  %297 = load i32, i32* %arrayidx482, align 4, !dbg !416
  %xor483 = xor i32 %295, %297, !dbg !416
  %298 = load i32, i32* %u, align 4, !dbg !416
  %shr484 = lshr i32 %298, 18, !dbg !416
  %and485 = and i32 %shr484, 63, !dbg !416
  %idxprom486 = zext i32 %and485 to i64, !dbg !416
  %arrayidx487 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom486, !dbg !416
  %299 = load i32, i32* %arrayidx487, align 4, !dbg !416
  %xor488 = xor i32 %xor483, %299, !dbg !416
  %300 = load i32, i32* %u, align 4, !dbg !416
  %shr489 = lshr i32 %300, 26, !dbg !416
  %and490 = and i32 %shr489, 63, !dbg !416
  %idxprom491 = zext i32 %and490 to i64, !dbg !416
  %arrayidx492 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom491, !dbg !416
  %301 = load i32, i32* %arrayidx492, align 4, !dbg !416
  %xor493 = xor i32 %xor488, %301, !dbg !416
  %302 = load i32, i32* %t, align 4, !dbg !416
  %shr494 = lshr i32 %302, 2, !dbg !416
  %and495 = and i32 %shr494, 63, !dbg !416
  %idxprom496 = zext i32 %and495 to i64, !dbg !416
  %arrayidx497 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom496, !dbg !416
  %303 = load i32, i32* %arrayidx497, align 4, !dbg !416
  %xor498 = xor i32 %xor493, %303, !dbg !416
  %304 = load i32, i32* %t, align 4, !dbg !416
  %shr499 = lshr i32 %304, 10, !dbg !416
  %and500 = and i32 %shr499, 63, !dbg !416
  %idxprom501 = zext i32 %and500 to i64, !dbg !416
  %arrayidx502 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom501, !dbg !416
  %305 = load i32, i32* %arrayidx502, align 4, !dbg !416
  %xor503 = xor i32 %xor498, %305, !dbg !416
  %306 = load i32, i32* %t, align 4, !dbg !416
  %shr504 = lshr i32 %306, 18, !dbg !416
  %and505 = and i32 %shr504, 63, !dbg !416
  %idxprom506 = zext i32 %and505 to i64, !dbg !416
  %arrayidx507 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom506, !dbg !416
  %307 = load i32, i32* %arrayidx507, align 4, !dbg !416
  %xor508 = xor i32 %xor503, %307, !dbg !416
  %308 = load i32, i32* %t, align 4, !dbg !416
  %shr509 = lshr i32 %308, 26, !dbg !416
  %and510 = and i32 %shr509, 63, !dbg !416
  %idxprom511 = zext i32 %and510 to i64, !dbg !416
  %arrayidx512 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom511, !dbg !416
  %309 = load i32, i32* %arrayidx512, align 4, !dbg !416
  %xor513 = xor i32 %xor508, %309, !dbg !416
  %310 = load i32, i32* %l, align 4, !dbg !416
  %xor514 = xor i32 %310, %xor513, !dbg !416
  store i32 %xor514, i32* %l, align 4, !dbg !416
  %311 = load i32, i32* %l, align 4, !dbg !422
  %312 = load i32*, i32** %s, align 8, !dbg !422
  %arrayidx515 = getelementptr inbounds i32, i32* %312, i64 22, !dbg !422
  %313 = load i32, i32* %arrayidx515, align 4, !dbg !422
  %xor516 = xor i32 %311, %313, !dbg !422
  store i32 %xor516, i32* %u, align 4, !dbg !422
  %314 = load i32, i32* %l, align 4, !dbg !422
  %315 = load i32*, i32** %s, align 8, !dbg !422
  %arrayidx517 = getelementptr inbounds i32, i32* %315, i64 23, !dbg !422
  %316 = load i32, i32* %arrayidx517, align 4, !dbg !422
  %xor518 = xor i32 %314, %316, !dbg !422
  store i32 %xor518, i32* %t, align 4, !dbg !422
  call void @llvm.dbg.declare(metadata i32* %ret519, metadata !424, metadata !DIExpression()), !dbg !426
  %317 = load i32, i32* %t, align 4, !dbg !426
  %318 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %317) #7, !dbg !426, !srcloc !427
  store i32 %318, i32* %ret519, align 4, !dbg !426
  %319 = load i32, i32* %ret519, align 4, !dbg !426
  store i32 %319, i32* %tmp520, align 4, !dbg !426
  %320 = load i32, i32* %tmp520, align 4, !dbg !426
  store i32 %320, i32* %t, align 4, !dbg !422
  %321 = load i32, i32* %u, align 4, !dbg !422
  %shr521 = lshr i32 %321, 2, !dbg !422
  %and522 = and i32 %shr521, 63, !dbg !422
  %idxprom523 = zext i32 %and522 to i64, !dbg !422
  %arrayidx524 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom523, !dbg !422
  %322 = load i32, i32* %arrayidx524, align 4, !dbg !422
  %323 = load i32, i32* %u, align 4, !dbg !422
  %shr525 = lshr i32 %323, 10, !dbg !422
  %and526 = and i32 %shr525, 63, !dbg !422
  %idxprom527 = zext i32 %and526 to i64, !dbg !422
  %arrayidx528 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom527, !dbg !422
  %324 = load i32, i32* %arrayidx528, align 4, !dbg !422
  %xor529 = xor i32 %322, %324, !dbg !422
  %325 = load i32, i32* %u, align 4, !dbg !422
  %shr530 = lshr i32 %325, 18, !dbg !422
  %and531 = and i32 %shr530, 63, !dbg !422
  %idxprom532 = zext i32 %and531 to i64, !dbg !422
  %arrayidx533 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom532, !dbg !422
  %326 = load i32, i32* %arrayidx533, align 4, !dbg !422
  %xor534 = xor i32 %xor529, %326, !dbg !422
  %327 = load i32, i32* %u, align 4, !dbg !422
  %shr535 = lshr i32 %327, 26, !dbg !422
  %and536 = and i32 %shr535, 63, !dbg !422
  %idxprom537 = zext i32 %and536 to i64, !dbg !422
  %arrayidx538 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom537, !dbg !422
  %328 = load i32, i32* %arrayidx538, align 4, !dbg !422
  %xor539 = xor i32 %xor534, %328, !dbg !422
  %329 = load i32, i32* %t, align 4, !dbg !422
  %shr540 = lshr i32 %329, 2, !dbg !422
  %and541 = and i32 %shr540, 63, !dbg !422
  %idxprom542 = zext i32 %and541 to i64, !dbg !422
  %arrayidx543 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom542, !dbg !422
  %330 = load i32, i32* %arrayidx543, align 4, !dbg !422
  %xor544 = xor i32 %xor539, %330, !dbg !422
  %331 = load i32, i32* %t, align 4, !dbg !422
  %shr545 = lshr i32 %331, 10, !dbg !422
  %and546 = and i32 %shr545, 63, !dbg !422
  %idxprom547 = zext i32 %and546 to i64, !dbg !422
  %arrayidx548 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom547, !dbg !422
  %332 = load i32, i32* %arrayidx548, align 4, !dbg !422
  %xor549 = xor i32 %xor544, %332, !dbg !422
  %333 = load i32, i32* %t, align 4, !dbg !422
  %shr550 = lshr i32 %333, 18, !dbg !422
  %and551 = and i32 %shr550, 63, !dbg !422
  %idxprom552 = zext i32 %and551 to i64, !dbg !422
  %arrayidx553 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom552, !dbg !422
  %334 = load i32, i32* %arrayidx553, align 4, !dbg !422
  %xor554 = xor i32 %xor549, %334, !dbg !422
  %335 = load i32, i32* %t, align 4, !dbg !422
  %shr555 = lshr i32 %335, 26, !dbg !422
  %and556 = and i32 %shr555, 63, !dbg !422
  %idxprom557 = zext i32 %and556 to i64, !dbg !422
  %arrayidx558 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom557, !dbg !422
  %336 = load i32, i32* %arrayidx558, align 4, !dbg !422
  %xor559 = xor i32 %xor554, %336, !dbg !422
  %337 = load i32, i32* %r, align 4, !dbg !422
  %xor560 = xor i32 %337, %xor559, !dbg !422
  store i32 %xor560, i32* %r, align 4, !dbg !422
  %338 = load i32, i32* %r, align 4, !dbg !428
  %339 = load i32*, i32** %s, align 8, !dbg !428
  %arrayidx561 = getelementptr inbounds i32, i32* %339, i64 24, !dbg !428
  %340 = load i32, i32* %arrayidx561, align 4, !dbg !428
  %xor562 = xor i32 %338, %340, !dbg !428
  store i32 %xor562, i32* %u, align 4, !dbg !428
  %341 = load i32, i32* %r, align 4, !dbg !428
  %342 = load i32*, i32** %s, align 8, !dbg !428
  %arrayidx563 = getelementptr inbounds i32, i32* %342, i64 25, !dbg !428
  %343 = load i32, i32* %arrayidx563, align 4, !dbg !428
  %xor564 = xor i32 %341, %343, !dbg !428
  store i32 %xor564, i32* %t, align 4, !dbg !428
  call void @llvm.dbg.declare(metadata i32* %ret565, metadata !430, metadata !DIExpression()), !dbg !432
  %344 = load i32, i32* %t, align 4, !dbg !432
  %345 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %344) #7, !dbg !432, !srcloc !433
  store i32 %345, i32* %ret565, align 4, !dbg !432
  %346 = load i32, i32* %ret565, align 4, !dbg !432
  store i32 %346, i32* %tmp566, align 4, !dbg !432
  %347 = load i32, i32* %tmp566, align 4, !dbg !432
  store i32 %347, i32* %t, align 4, !dbg !428
  %348 = load i32, i32* %u, align 4, !dbg !428
  %shr567 = lshr i32 %348, 2, !dbg !428
  %and568 = and i32 %shr567, 63, !dbg !428
  %idxprom569 = zext i32 %and568 to i64, !dbg !428
  %arrayidx570 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom569, !dbg !428
  %349 = load i32, i32* %arrayidx570, align 4, !dbg !428
  %350 = load i32, i32* %u, align 4, !dbg !428
  %shr571 = lshr i32 %350, 10, !dbg !428
  %and572 = and i32 %shr571, 63, !dbg !428
  %idxprom573 = zext i32 %and572 to i64, !dbg !428
  %arrayidx574 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom573, !dbg !428
  %351 = load i32, i32* %arrayidx574, align 4, !dbg !428
  %xor575 = xor i32 %349, %351, !dbg !428
  %352 = load i32, i32* %u, align 4, !dbg !428
  %shr576 = lshr i32 %352, 18, !dbg !428
  %and577 = and i32 %shr576, 63, !dbg !428
  %idxprom578 = zext i32 %and577 to i64, !dbg !428
  %arrayidx579 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom578, !dbg !428
  %353 = load i32, i32* %arrayidx579, align 4, !dbg !428
  %xor580 = xor i32 %xor575, %353, !dbg !428
  %354 = load i32, i32* %u, align 4, !dbg !428
  %shr581 = lshr i32 %354, 26, !dbg !428
  %and582 = and i32 %shr581, 63, !dbg !428
  %idxprom583 = zext i32 %and582 to i64, !dbg !428
  %arrayidx584 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom583, !dbg !428
  %355 = load i32, i32* %arrayidx584, align 4, !dbg !428
  %xor585 = xor i32 %xor580, %355, !dbg !428
  %356 = load i32, i32* %t, align 4, !dbg !428
  %shr586 = lshr i32 %356, 2, !dbg !428
  %and587 = and i32 %shr586, 63, !dbg !428
  %idxprom588 = zext i32 %and587 to i64, !dbg !428
  %arrayidx589 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom588, !dbg !428
  %357 = load i32, i32* %arrayidx589, align 4, !dbg !428
  %xor590 = xor i32 %xor585, %357, !dbg !428
  %358 = load i32, i32* %t, align 4, !dbg !428
  %shr591 = lshr i32 %358, 10, !dbg !428
  %and592 = and i32 %shr591, 63, !dbg !428
  %idxprom593 = zext i32 %and592 to i64, !dbg !428
  %arrayidx594 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom593, !dbg !428
  %359 = load i32, i32* %arrayidx594, align 4, !dbg !428
  %xor595 = xor i32 %xor590, %359, !dbg !428
  %360 = load i32, i32* %t, align 4, !dbg !428
  %shr596 = lshr i32 %360, 18, !dbg !428
  %and597 = and i32 %shr596, 63, !dbg !428
  %idxprom598 = zext i32 %and597 to i64, !dbg !428
  %arrayidx599 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom598, !dbg !428
  %361 = load i32, i32* %arrayidx599, align 4, !dbg !428
  %xor600 = xor i32 %xor595, %361, !dbg !428
  %362 = load i32, i32* %t, align 4, !dbg !428
  %shr601 = lshr i32 %362, 26, !dbg !428
  %and602 = and i32 %shr601, 63, !dbg !428
  %idxprom603 = zext i32 %and602 to i64, !dbg !428
  %arrayidx604 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom603, !dbg !428
  %363 = load i32, i32* %arrayidx604, align 4, !dbg !428
  %xor605 = xor i32 %xor600, %363, !dbg !428
  %364 = load i32, i32* %l, align 4, !dbg !428
  %xor606 = xor i32 %364, %xor605, !dbg !428
  store i32 %xor606, i32* %l, align 4, !dbg !428
  %365 = load i32, i32* %l, align 4, !dbg !434
  %366 = load i32*, i32** %s, align 8, !dbg !434
  %arrayidx607 = getelementptr inbounds i32, i32* %366, i64 26, !dbg !434
  %367 = load i32, i32* %arrayidx607, align 4, !dbg !434
  %xor608 = xor i32 %365, %367, !dbg !434
  store i32 %xor608, i32* %u, align 4, !dbg !434
  %368 = load i32, i32* %l, align 4, !dbg !434
  %369 = load i32*, i32** %s, align 8, !dbg !434
  %arrayidx609 = getelementptr inbounds i32, i32* %369, i64 27, !dbg !434
  %370 = load i32, i32* %arrayidx609, align 4, !dbg !434
  %xor610 = xor i32 %368, %370, !dbg !434
  store i32 %xor610, i32* %t, align 4, !dbg !434
  call void @llvm.dbg.declare(metadata i32* %ret611, metadata !436, metadata !DIExpression()), !dbg !438
  %371 = load i32, i32* %t, align 4, !dbg !438
  %372 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %371) #7, !dbg !438, !srcloc !439
  store i32 %372, i32* %ret611, align 4, !dbg !438
  %373 = load i32, i32* %ret611, align 4, !dbg !438
  store i32 %373, i32* %tmp612, align 4, !dbg !438
  %374 = load i32, i32* %tmp612, align 4, !dbg !438
  store i32 %374, i32* %t, align 4, !dbg !434
  %375 = load i32, i32* %u, align 4, !dbg !434
  %shr613 = lshr i32 %375, 2, !dbg !434
  %and614 = and i32 %shr613, 63, !dbg !434
  %idxprom615 = zext i32 %and614 to i64, !dbg !434
  %arrayidx616 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom615, !dbg !434
  %376 = load i32, i32* %arrayidx616, align 4, !dbg !434
  %377 = load i32, i32* %u, align 4, !dbg !434
  %shr617 = lshr i32 %377, 10, !dbg !434
  %and618 = and i32 %shr617, 63, !dbg !434
  %idxprom619 = zext i32 %and618 to i64, !dbg !434
  %arrayidx620 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom619, !dbg !434
  %378 = load i32, i32* %arrayidx620, align 4, !dbg !434
  %xor621 = xor i32 %376, %378, !dbg !434
  %379 = load i32, i32* %u, align 4, !dbg !434
  %shr622 = lshr i32 %379, 18, !dbg !434
  %and623 = and i32 %shr622, 63, !dbg !434
  %idxprom624 = zext i32 %and623 to i64, !dbg !434
  %arrayidx625 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom624, !dbg !434
  %380 = load i32, i32* %arrayidx625, align 4, !dbg !434
  %xor626 = xor i32 %xor621, %380, !dbg !434
  %381 = load i32, i32* %u, align 4, !dbg !434
  %shr627 = lshr i32 %381, 26, !dbg !434
  %and628 = and i32 %shr627, 63, !dbg !434
  %idxprom629 = zext i32 %and628 to i64, !dbg !434
  %arrayidx630 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom629, !dbg !434
  %382 = load i32, i32* %arrayidx630, align 4, !dbg !434
  %xor631 = xor i32 %xor626, %382, !dbg !434
  %383 = load i32, i32* %t, align 4, !dbg !434
  %shr632 = lshr i32 %383, 2, !dbg !434
  %and633 = and i32 %shr632, 63, !dbg !434
  %idxprom634 = zext i32 %and633 to i64, !dbg !434
  %arrayidx635 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom634, !dbg !434
  %384 = load i32, i32* %arrayidx635, align 4, !dbg !434
  %xor636 = xor i32 %xor631, %384, !dbg !434
  %385 = load i32, i32* %t, align 4, !dbg !434
  %shr637 = lshr i32 %385, 10, !dbg !434
  %and638 = and i32 %shr637, 63, !dbg !434
  %idxprom639 = zext i32 %and638 to i64, !dbg !434
  %arrayidx640 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom639, !dbg !434
  %386 = load i32, i32* %arrayidx640, align 4, !dbg !434
  %xor641 = xor i32 %xor636, %386, !dbg !434
  %387 = load i32, i32* %t, align 4, !dbg !434
  %shr642 = lshr i32 %387, 18, !dbg !434
  %and643 = and i32 %shr642, 63, !dbg !434
  %idxprom644 = zext i32 %and643 to i64, !dbg !434
  %arrayidx645 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom644, !dbg !434
  %388 = load i32, i32* %arrayidx645, align 4, !dbg !434
  %xor646 = xor i32 %xor641, %388, !dbg !434
  %389 = load i32, i32* %t, align 4, !dbg !434
  %shr647 = lshr i32 %389, 26, !dbg !434
  %and648 = and i32 %shr647, 63, !dbg !434
  %idxprom649 = zext i32 %and648 to i64, !dbg !434
  %arrayidx650 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom649, !dbg !434
  %390 = load i32, i32* %arrayidx650, align 4, !dbg !434
  %xor651 = xor i32 %xor646, %390, !dbg !434
  %391 = load i32, i32* %r, align 4, !dbg !434
  %xor652 = xor i32 %391, %xor651, !dbg !434
  store i32 %xor652, i32* %r, align 4, !dbg !434
  %392 = load i32, i32* %r, align 4, !dbg !440
  %393 = load i32*, i32** %s, align 8, !dbg !440
  %arrayidx653 = getelementptr inbounds i32, i32* %393, i64 28, !dbg !440
  %394 = load i32, i32* %arrayidx653, align 4, !dbg !440
  %xor654 = xor i32 %392, %394, !dbg !440
  store i32 %xor654, i32* %u, align 4, !dbg !440
  %395 = load i32, i32* %r, align 4, !dbg !440
  %396 = load i32*, i32** %s, align 8, !dbg !440
  %arrayidx655 = getelementptr inbounds i32, i32* %396, i64 29, !dbg !440
  %397 = load i32, i32* %arrayidx655, align 4, !dbg !440
  %xor656 = xor i32 %395, %397, !dbg !440
  store i32 %xor656, i32* %t, align 4, !dbg !440
  call void @llvm.dbg.declare(metadata i32* %ret657, metadata !442, metadata !DIExpression()), !dbg !444
  %398 = load i32, i32* %t, align 4, !dbg !444
  %399 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %398) #7, !dbg !444, !srcloc !445
  store i32 %399, i32* %ret657, align 4, !dbg !444
  %400 = load i32, i32* %ret657, align 4, !dbg !444
  store i32 %400, i32* %tmp658, align 4, !dbg !444
  %401 = load i32, i32* %tmp658, align 4, !dbg !444
  store i32 %401, i32* %t, align 4, !dbg !440
  %402 = load i32, i32* %u, align 4, !dbg !440
  %shr659 = lshr i32 %402, 2, !dbg !440
  %and660 = and i32 %shr659, 63, !dbg !440
  %idxprom661 = zext i32 %and660 to i64, !dbg !440
  %arrayidx662 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom661, !dbg !440
  %403 = load i32, i32* %arrayidx662, align 4, !dbg !440
  %404 = load i32, i32* %u, align 4, !dbg !440
  %shr663 = lshr i32 %404, 10, !dbg !440
  %and664 = and i32 %shr663, 63, !dbg !440
  %idxprom665 = zext i32 %and664 to i64, !dbg !440
  %arrayidx666 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom665, !dbg !440
  %405 = load i32, i32* %arrayidx666, align 4, !dbg !440
  %xor667 = xor i32 %403, %405, !dbg !440
  %406 = load i32, i32* %u, align 4, !dbg !440
  %shr668 = lshr i32 %406, 18, !dbg !440
  %and669 = and i32 %shr668, 63, !dbg !440
  %idxprom670 = zext i32 %and669 to i64, !dbg !440
  %arrayidx671 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom670, !dbg !440
  %407 = load i32, i32* %arrayidx671, align 4, !dbg !440
  %xor672 = xor i32 %xor667, %407, !dbg !440
  %408 = load i32, i32* %u, align 4, !dbg !440
  %shr673 = lshr i32 %408, 26, !dbg !440
  %and674 = and i32 %shr673, 63, !dbg !440
  %idxprom675 = zext i32 %and674 to i64, !dbg !440
  %arrayidx676 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom675, !dbg !440
  %409 = load i32, i32* %arrayidx676, align 4, !dbg !440
  %xor677 = xor i32 %xor672, %409, !dbg !440
  %410 = load i32, i32* %t, align 4, !dbg !440
  %shr678 = lshr i32 %410, 2, !dbg !440
  %and679 = and i32 %shr678, 63, !dbg !440
  %idxprom680 = zext i32 %and679 to i64, !dbg !440
  %arrayidx681 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom680, !dbg !440
  %411 = load i32, i32* %arrayidx681, align 4, !dbg !440
  %xor682 = xor i32 %xor677, %411, !dbg !440
  %412 = load i32, i32* %t, align 4, !dbg !440
  %shr683 = lshr i32 %412, 10, !dbg !440
  %and684 = and i32 %shr683, 63, !dbg !440
  %idxprom685 = zext i32 %and684 to i64, !dbg !440
  %arrayidx686 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom685, !dbg !440
  %413 = load i32, i32* %arrayidx686, align 4, !dbg !440
  %xor687 = xor i32 %xor682, %413, !dbg !440
  %414 = load i32, i32* %t, align 4, !dbg !440
  %shr688 = lshr i32 %414, 18, !dbg !440
  %and689 = and i32 %shr688, 63, !dbg !440
  %idxprom690 = zext i32 %and689 to i64, !dbg !440
  %arrayidx691 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom690, !dbg !440
  %415 = load i32, i32* %arrayidx691, align 4, !dbg !440
  %xor692 = xor i32 %xor687, %415, !dbg !440
  %416 = load i32, i32* %t, align 4, !dbg !440
  %shr693 = lshr i32 %416, 26, !dbg !440
  %and694 = and i32 %shr693, 63, !dbg !440
  %idxprom695 = zext i32 %and694 to i64, !dbg !440
  %arrayidx696 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom695, !dbg !440
  %417 = load i32, i32* %arrayidx696, align 4, !dbg !440
  %xor697 = xor i32 %xor692, %417, !dbg !440
  %418 = load i32, i32* %l, align 4, !dbg !440
  %xor698 = xor i32 %418, %xor697, !dbg !440
  store i32 %xor698, i32* %l, align 4, !dbg !440
  %419 = load i32, i32* %l, align 4, !dbg !446
  %420 = load i32*, i32** %s, align 8, !dbg !446
  %arrayidx699 = getelementptr inbounds i32, i32* %420, i64 30, !dbg !446
  %421 = load i32, i32* %arrayidx699, align 4, !dbg !446
  %xor700 = xor i32 %419, %421, !dbg !446
  store i32 %xor700, i32* %u, align 4, !dbg !446
  %422 = load i32, i32* %l, align 4, !dbg !446
  %423 = load i32*, i32** %s, align 8, !dbg !446
  %arrayidx701 = getelementptr inbounds i32, i32* %423, i64 31, !dbg !446
  %424 = load i32, i32* %arrayidx701, align 4, !dbg !446
  %xor702 = xor i32 %422, %424, !dbg !446
  store i32 %xor702, i32* %t, align 4, !dbg !446
  call void @llvm.dbg.declare(metadata i32* %ret703, metadata !448, metadata !DIExpression()), !dbg !450
  %425 = load i32, i32* %t, align 4, !dbg !450
  %426 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %425) #7, !dbg !450, !srcloc !451
  store i32 %426, i32* %ret703, align 4, !dbg !450
  %427 = load i32, i32* %ret703, align 4, !dbg !450
  store i32 %427, i32* %tmp704, align 4, !dbg !450
  %428 = load i32, i32* %tmp704, align 4, !dbg !450
  store i32 %428, i32* %t, align 4, !dbg !446
  %429 = load i32, i32* %u, align 4, !dbg !446
  %shr705 = lshr i32 %429, 2, !dbg !446
  %and706 = and i32 %shr705, 63, !dbg !446
  %idxprom707 = zext i32 %and706 to i64, !dbg !446
  %arrayidx708 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom707, !dbg !446
  %430 = load i32, i32* %arrayidx708, align 4, !dbg !446
  %431 = load i32, i32* %u, align 4, !dbg !446
  %shr709 = lshr i32 %431, 10, !dbg !446
  %and710 = and i32 %shr709, 63, !dbg !446
  %idxprom711 = zext i32 %and710 to i64, !dbg !446
  %arrayidx712 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom711, !dbg !446
  %432 = load i32, i32* %arrayidx712, align 4, !dbg !446
  %xor713 = xor i32 %430, %432, !dbg !446
  %433 = load i32, i32* %u, align 4, !dbg !446
  %shr714 = lshr i32 %433, 18, !dbg !446
  %and715 = and i32 %shr714, 63, !dbg !446
  %idxprom716 = zext i32 %and715 to i64, !dbg !446
  %arrayidx717 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom716, !dbg !446
  %434 = load i32, i32* %arrayidx717, align 4, !dbg !446
  %xor718 = xor i32 %xor713, %434, !dbg !446
  %435 = load i32, i32* %u, align 4, !dbg !446
  %shr719 = lshr i32 %435, 26, !dbg !446
  %and720 = and i32 %shr719, 63, !dbg !446
  %idxprom721 = zext i32 %and720 to i64, !dbg !446
  %arrayidx722 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom721, !dbg !446
  %436 = load i32, i32* %arrayidx722, align 4, !dbg !446
  %xor723 = xor i32 %xor718, %436, !dbg !446
  %437 = load i32, i32* %t, align 4, !dbg !446
  %shr724 = lshr i32 %437, 2, !dbg !446
  %and725 = and i32 %shr724, 63, !dbg !446
  %idxprom726 = zext i32 %and725 to i64, !dbg !446
  %arrayidx727 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom726, !dbg !446
  %438 = load i32, i32* %arrayidx727, align 4, !dbg !446
  %xor728 = xor i32 %xor723, %438, !dbg !446
  %439 = load i32, i32* %t, align 4, !dbg !446
  %shr729 = lshr i32 %439, 10, !dbg !446
  %and730 = and i32 %shr729, 63, !dbg !446
  %idxprom731 = zext i32 %and730 to i64, !dbg !446
  %arrayidx732 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom731, !dbg !446
  %440 = load i32, i32* %arrayidx732, align 4, !dbg !446
  %xor733 = xor i32 %xor728, %440, !dbg !446
  %441 = load i32, i32* %t, align 4, !dbg !446
  %shr734 = lshr i32 %441, 18, !dbg !446
  %and735 = and i32 %shr734, 63, !dbg !446
  %idxprom736 = zext i32 %and735 to i64, !dbg !446
  %arrayidx737 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom736, !dbg !446
  %442 = load i32, i32* %arrayidx737, align 4, !dbg !446
  %xor738 = xor i32 %xor733, %442, !dbg !446
  %443 = load i32, i32* %t, align 4, !dbg !446
  %shr739 = lshr i32 %443, 26, !dbg !446
  %and740 = and i32 %shr739, 63, !dbg !446
  %idxprom741 = zext i32 %and740 to i64, !dbg !446
  %arrayidx742 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom741, !dbg !446
  %444 = load i32, i32* %arrayidx742, align 4, !dbg !446
  %xor743 = xor i32 %xor738, %444, !dbg !446
  %445 = load i32, i32* %r, align 4, !dbg !446
  %xor744 = xor i32 %445, %xor743, !dbg !446
  store i32 %xor744, i32* %r, align 4, !dbg !446
  br label %if.end, !dbg !452

if.else:                                          ; preds = %entry
  %446 = load i32, i32* %r, align 4, !dbg !453
  %447 = load i32*, i32** %s, align 8, !dbg !453
  %arrayidx745 = getelementptr inbounds i32, i32* %447, i64 30, !dbg !453
  %448 = load i32, i32* %arrayidx745, align 4, !dbg !453
  %xor746 = xor i32 %446, %448, !dbg !453
  store i32 %xor746, i32* %u, align 4, !dbg !453
  %449 = load i32, i32* %r, align 4, !dbg !453
  %450 = load i32*, i32** %s, align 8, !dbg !453
  %arrayidx747 = getelementptr inbounds i32, i32* %450, i64 31, !dbg !453
  %451 = load i32, i32* %arrayidx747, align 4, !dbg !453
  %xor748 = xor i32 %449, %451, !dbg !453
  store i32 %xor748, i32* %t, align 4, !dbg !453
  call void @llvm.dbg.declare(metadata i32* %ret749, metadata !456, metadata !DIExpression()), !dbg !458
  %452 = load i32, i32* %t, align 4, !dbg !458
  %453 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %452) #7, !dbg !458, !srcloc !459
  store i32 %453, i32* %ret749, align 4, !dbg !458
  %454 = load i32, i32* %ret749, align 4, !dbg !458
  store i32 %454, i32* %tmp750, align 4, !dbg !458
  %455 = load i32, i32* %tmp750, align 4, !dbg !458
  store i32 %455, i32* %t, align 4, !dbg !453
  %456 = load i32, i32* %u, align 4, !dbg !453
  %shr751 = lshr i32 %456, 2, !dbg !453
  %and752 = and i32 %shr751, 63, !dbg !453
  %idxprom753 = zext i32 %and752 to i64, !dbg !453
  %arrayidx754 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom753, !dbg !453
  %457 = load i32, i32* %arrayidx754, align 4, !dbg !453
  %458 = load i32, i32* %u, align 4, !dbg !453
  %shr755 = lshr i32 %458, 10, !dbg !453
  %and756 = and i32 %shr755, 63, !dbg !453
  %idxprom757 = zext i32 %and756 to i64, !dbg !453
  %arrayidx758 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom757, !dbg !453
  %459 = load i32, i32* %arrayidx758, align 4, !dbg !453
  %xor759 = xor i32 %457, %459, !dbg !453
  %460 = load i32, i32* %u, align 4, !dbg !453
  %shr760 = lshr i32 %460, 18, !dbg !453
  %and761 = and i32 %shr760, 63, !dbg !453
  %idxprom762 = zext i32 %and761 to i64, !dbg !453
  %arrayidx763 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom762, !dbg !453
  %461 = load i32, i32* %arrayidx763, align 4, !dbg !453
  %xor764 = xor i32 %xor759, %461, !dbg !453
  %462 = load i32, i32* %u, align 4, !dbg !453
  %shr765 = lshr i32 %462, 26, !dbg !453
  %and766 = and i32 %shr765, 63, !dbg !453
  %idxprom767 = zext i32 %and766 to i64, !dbg !453
  %arrayidx768 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom767, !dbg !453
  %463 = load i32, i32* %arrayidx768, align 4, !dbg !453
  %xor769 = xor i32 %xor764, %463, !dbg !453
  %464 = load i32, i32* %t, align 4, !dbg !453
  %shr770 = lshr i32 %464, 2, !dbg !453
  %and771 = and i32 %shr770, 63, !dbg !453
  %idxprom772 = zext i32 %and771 to i64, !dbg !453
  %arrayidx773 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom772, !dbg !453
  %465 = load i32, i32* %arrayidx773, align 4, !dbg !453
  %xor774 = xor i32 %xor769, %465, !dbg !453
  %466 = load i32, i32* %t, align 4, !dbg !453
  %shr775 = lshr i32 %466, 10, !dbg !453
  %and776 = and i32 %shr775, 63, !dbg !453
  %idxprom777 = zext i32 %and776 to i64, !dbg !453
  %arrayidx778 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom777, !dbg !453
  %467 = load i32, i32* %arrayidx778, align 4, !dbg !453
  %xor779 = xor i32 %xor774, %467, !dbg !453
  %468 = load i32, i32* %t, align 4, !dbg !453
  %shr780 = lshr i32 %468, 18, !dbg !453
  %and781 = and i32 %shr780, 63, !dbg !453
  %idxprom782 = zext i32 %and781 to i64, !dbg !453
  %arrayidx783 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom782, !dbg !453
  %469 = load i32, i32* %arrayidx783, align 4, !dbg !453
  %xor784 = xor i32 %xor779, %469, !dbg !453
  %470 = load i32, i32* %t, align 4, !dbg !453
  %shr785 = lshr i32 %470, 26, !dbg !453
  %and786 = and i32 %shr785, 63, !dbg !453
  %idxprom787 = zext i32 %and786 to i64, !dbg !453
  %arrayidx788 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom787, !dbg !453
  %471 = load i32, i32* %arrayidx788, align 4, !dbg !453
  %xor789 = xor i32 %xor784, %471, !dbg !453
  %472 = load i32, i32* %l, align 4, !dbg !453
  %xor790 = xor i32 %472, %xor789, !dbg !453
  store i32 %xor790, i32* %l, align 4, !dbg !453
  %473 = load i32, i32* %l, align 4, !dbg !460
  %474 = load i32*, i32** %s, align 8, !dbg !460
  %arrayidx791 = getelementptr inbounds i32, i32* %474, i64 28, !dbg !460
  %475 = load i32, i32* %arrayidx791, align 4, !dbg !460
  %xor792 = xor i32 %473, %475, !dbg !460
  store i32 %xor792, i32* %u, align 4, !dbg !460
  %476 = load i32, i32* %l, align 4, !dbg !460
  %477 = load i32*, i32** %s, align 8, !dbg !460
  %arrayidx793 = getelementptr inbounds i32, i32* %477, i64 29, !dbg !460
  %478 = load i32, i32* %arrayidx793, align 4, !dbg !460
  %xor794 = xor i32 %476, %478, !dbg !460
  store i32 %xor794, i32* %t, align 4, !dbg !460
  call void @llvm.dbg.declare(metadata i32* %ret795, metadata !462, metadata !DIExpression()), !dbg !464
  %479 = load i32, i32* %t, align 4, !dbg !464
  %480 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %479) #7, !dbg !464, !srcloc !465
  store i32 %480, i32* %ret795, align 4, !dbg !464
  %481 = load i32, i32* %ret795, align 4, !dbg !464
  store i32 %481, i32* %tmp796, align 4, !dbg !464
  %482 = load i32, i32* %tmp796, align 4, !dbg !464
  store i32 %482, i32* %t, align 4, !dbg !460
  %483 = load i32, i32* %u, align 4, !dbg !460
  %shr797 = lshr i32 %483, 2, !dbg !460
  %and798 = and i32 %shr797, 63, !dbg !460
  %idxprom799 = zext i32 %and798 to i64, !dbg !460
  %arrayidx800 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom799, !dbg !460
  %484 = load i32, i32* %arrayidx800, align 4, !dbg !460
  %485 = load i32, i32* %u, align 4, !dbg !460
  %shr801 = lshr i32 %485, 10, !dbg !460
  %and802 = and i32 %shr801, 63, !dbg !460
  %idxprom803 = zext i32 %and802 to i64, !dbg !460
  %arrayidx804 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom803, !dbg !460
  %486 = load i32, i32* %arrayidx804, align 4, !dbg !460
  %xor805 = xor i32 %484, %486, !dbg !460
  %487 = load i32, i32* %u, align 4, !dbg !460
  %shr806 = lshr i32 %487, 18, !dbg !460
  %and807 = and i32 %shr806, 63, !dbg !460
  %idxprom808 = zext i32 %and807 to i64, !dbg !460
  %arrayidx809 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom808, !dbg !460
  %488 = load i32, i32* %arrayidx809, align 4, !dbg !460
  %xor810 = xor i32 %xor805, %488, !dbg !460
  %489 = load i32, i32* %u, align 4, !dbg !460
  %shr811 = lshr i32 %489, 26, !dbg !460
  %and812 = and i32 %shr811, 63, !dbg !460
  %idxprom813 = zext i32 %and812 to i64, !dbg !460
  %arrayidx814 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom813, !dbg !460
  %490 = load i32, i32* %arrayidx814, align 4, !dbg !460
  %xor815 = xor i32 %xor810, %490, !dbg !460
  %491 = load i32, i32* %t, align 4, !dbg !460
  %shr816 = lshr i32 %491, 2, !dbg !460
  %and817 = and i32 %shr816, 63, !dbg !460
  %idxprom818 = zext i32 %and817 to i64, !dbg !460
  %arrayidx819 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom818, !dbg !460
  %492 = load i32, i32* %arrayidx819, align 4, !dbg !460
  %xor820 = xor i32 %xor815, %492, !dbg !460
  %493 = load i32, i32* %t, align 4, !dbg !460
  %shr821 = lshr i32 %493, 10, !dbg !460
  %and822 = and i32 %shr821, 63, !dbg !460
  %idxprom823 = zext i32 %and822 to i64, !dbg !460
  %arrayidx824 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom823, !dbg !460
  %494 = load i32, i32* %arrayidx824, align 4, !dbg !460
  %xor825 = xor i32 %xor820, %494, !dbg !460
  %495 = load i32, i32* %t, align 4, !dbg !460
  %shr826 = lshr i32 %495, 18, !dbg !460
  %and827 = and i32 %shr826, 63, !dbg !460
  %idxprom828 = zext i32 %and827 to i64, !dbg !460
  %arrayidx829 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom828, !dbg !460
  %496 = load i32, i32* %arrayidx829, align 4, !dbg !460
  %xor830 = xor i32 %xor825, %496, !dbg !460
  %497 = load i32, i32* %t, align 4, !dbg !460
  %shr831 = lshr i32 %497, 26, !dbg !460
  %and832 = and i32 %shr831, 63, !dbg !460
  %idxprom833 = zext i32 %and832 to i64, !dbg !460
  %arrayidx834 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom833, !dbg !460
  %498 = load i32, i32* %arrayidx834, align 4, !dbg !460
  %xor835 = xor i32 %xor830, %498, !dbg !460
  %499 = load i32, i32* %r, align 4, !dbg !460
  %xor836 = xor i32 %499, %xor835, !dbg !460
  store i32 %xor836, i32* %r, align 4, !dbg !460
  %500 = load i32, i32* %r, align 4, !dbg !466
  %501 = load i32*, i32** %s, align 8, !dbg !466
  %arrayidx837 = getelementptr inbounds i32, i32* %501, i64 26, !dbg !466
  %502 = load i32, i32* %arrayidx837, align 4, !dbg !466
  %xor838 = xor i32 %500, %502, !dbg !466
  store i32 %xor838, i32* %u, align 4, !dbg !466
  %503 = load i32, i32* %r, align 4, !dbg !466
  %504 = load i32*, i32** %s, align 8, !dbg !466
  %arrayidx839 = getelementptr inbounds i32, i32* %504, i64 27, !dbg !466
  %505 = load i32, i32* %arrayidx839, align 4, !dbg !466
  %xor840 = xor i32 %503, %505, !dbg !466
  store i32 %xor840, i32* %t, align 4, !dbg !466
  call void @llvm.dbg.declare(metadata i32* %ret841, metadata !468, metadata !DIExpression()), !dbg !470
  %506 = load i32, i32* %t, align 4, !dbg !470
  %507 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %506) #7, !dbg !470, !srcloc !471
  store i32 %507, i32* %ret841, align 4, !dbg !470
  %508 = load i32, i32* %ret841, align 4, !dbg !470
  store i32 %508, i32* %tmp842, align 4, !dbg !470
  %509 = load i32, i32* %tmp842, align 4, !dbg !470
  store i32 %509, i32* %t, align 4, !dbg !466
  %510 = load i32, i32* %u, align 4, !dbg !466
  %shr843 = lshr i32 %510, 2, !dbg !466
  %and844 = and i32 %shr843, 63, !dbg !466
  %idxprom845 = zext i32 %and844 to i64, !dbg !466
  %arrayidx846 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom845, !dbg !466
  %511 = load i32, i32* %arrayidx846, align 4, !dbg !466
  %512 = load i32, i32* %u, align 4, !dbg !466
  %shr847 = lshr i32 %512, 10, !dbg !466
  %and848 = and i32 %shr847, 63, !dbg !466
  %idxprom849 = zext i32 %and848 to i64, !dbg !466
  %arrayidx850 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom849, !dbg !466
  %513 = load i32, i32* %arrayidx850, align 4, !dbg !466
  %xor851 = xor i32 %511, %513, !dbg !466
  %514 = load i32, i32* %u, align 4, !dbg !466
  %shr852 = lshr i32 %514, 18, !dbg !466
  %and853 = and i32 %shr852, 63, !dbg !466
  %idxprom854 = zext i32 %and853 to i64, !dbg !466
  %arrayidx855 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom854, !dbg !466
  %515 = load i32, i32* %arrayidx855, align 4, !dbg !466
  %xor856 = xor i32 %xor851, %515, !dbg !466
  %516 = load i32, i32* %u, align 4, !dbg !466
  %shr857 = lshr i32 %516, 26, !dbg !466
  %and858 = and i32 %shr857, 63, !dbg !466
  %idxprom859 = zext i32 %and858 to i64, !dbg !466
  %arrayidx860 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom859, !dbg !466
  %517 = load i32, i32* %arrayidx860, align 4, !dbg !466
  %xor861 = xor i32 %xor856, %517, !dbg !466
  %518 = load i32, i32* %t, align 4, !dbg !466
  %shr862 = lshr i32 %518, 2, !dbg !466
  %and863 = and i32 %shr862, 63, !dbg !466
  %idxprom864 = zext i32 %and863 to i64, !dbg !466
  %arrayidx865 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom864, !dbg !466
  %519 = load i32, i32* %arrayidx865, align 4, !dbg !466
  %xor866 = xor i32 %xor861, %519, !dbg !466
  %520 = load i32, i32* %t, align 4, !dbg !466
  %shr867 = lshr i32 %520, 10, !dbg !466
  %and868 = and i32 %shr867, 63, !dbg !466
  %idxprom869 = zext i32 %and868 to i64, !dbg !466
  %arrayidx870 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom869, !dbg !466
  %521 = load i32, i32* %arrayidx870, align 4, !dbg !466
  %xor871 = xor i32 %xor866, %521, !dbg !466
  %522 = load i32, i32* %t, align 4, !dbg !466
  %shr872 = lshr i32 %522, 18, !dbg !466
  %and873 = and i32 %shr872, 63, !dbg !466
  %idxprom874 = zext i32 %and873 to i64, !dbg !466
  %arrayidx875 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom874, !dbg !466
  %523 = load i32, i32* %arrayidx875, align 4, !dbg !466
  %xor876 = xor i32 %xor871, %523, !dbg !466
  %524 = load i32, i32* %t, align 4, !dbg !466
  %shr877 = lshr i32 %524, 26, !dbg !466
  %and878 = and i32 %shr877, 63, !dbg !466
  %idxprom879 = zext i32 %and878 to i64, !dbg !466
  %arrayidx880 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom879, !dbg !466
  %525 = load i32, i32* %arrayidx880, align 4, !dbg !466
  %xor881 = xor i32 %xor876, %525, !dbg !466
  %526 = load i32, i32* %l, align 4, !dbg !466
  %xor882 = xor i32 %526, %xor881, !dbg !466
  store i32 %xor882, i32* %l, align 4, !dbg !466
  %527 = load i32, i32* %l, align 4, !dbg !472
  %528 = load i32*, i32** %s, align 8, !dbg !472
  %arrayidx883 = getelementptr inbounds i32, i32* %528, i64 24, !dbg !472
  %529 = load i32, i32* %arrayidx883, align 4, !dbg !472
  %xor884 = xor i32 %527, %529, !dbg !472
  store i32 %xor884, i32* %u, align 4, !dbg !472
  %530 = load i32, i32* %l, align 4, !dbg !472
  %531 = load i32*, i32** %s, align 8, !dbg !472
  %arrayidx885 = getelementptr inbounds i32, i32* %531, i64 25, !dbg !472
  %532 = load i32, i32* %arrayidx885, align 4, !dbg !472
  %xor886 = xor i32 %530, %532, !dbg !472
  store i32 %xor886, i32* %t, align 4, !dbg !472
  call void @llvm.dbg.declare(metadata i32* %ret887, metadata !474, metadata !DIExpression()), !dbg !476
  %533 = load i32, i32* %t, align 4, !dbg !476
  %534 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %533) #7, !dbg !476, !srcloc !477
  store i32 %534, i32* %ret887, align 4, !dbg !476
  %535 = load i32, i32* %ret887, align 4, !dbg !476
  store i32 %535, i32* %tmp888, align 4, !dbg !476
  %536 = load i32, i32* %tmp888, align 4, !dbg !476
  store i32 %536, i32* %t, align 4, !dbg !472
  %537 = load i32, i32* %u, align 4, !dbg !472
  %shr889 = lshr i32 %537, 2, !dbg !472
  %and890 = and i32 %shr889, 63, !dbg !472
  %idxprom891 = zext i32 %and890 to i64, !dbg !472
  %arrayidx892 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom891, !dbg !472
  %538 = load i32, i32* %arrayidx892, align 4, !dbg !472
  %539 = load i32, i32* %u, align 4, !dbg !472
  %shr893 = lshr i32 %539, 10, !dbg !472
  %and894 = and i32 %shr893, 63, !dbg !472
  %idxprom895 = zext i32 %and894 to i64, !dbg !472
  %arrayidx896 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom895, !dbg !472
  %540 = load i32, i32* %arrayidx896, align 4, !dbg !472
  %xor897 = xor i32 %538, %540, !dbg !472
  %541 = load i32, i32* %u, align 4, !dbg !472
  %shr898 = lshr i32 %541, 18, !dbg !472
  %and899 = and i32 %shr898, 63, !dbg !472
  %idxprom900 = zext i32 %and899 to i64, !dbg !472
  %arrayidx901 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom900, !dbg !472
  %542 = load i32, i32* %arrayidx901, align 4, !dbg !472
  %xor902 = xor i32 %xor897, %542, !dbg !472
  %543 = load i32, i32* %u, align 4, !dbg !472
  %shr903 = lshr i32 %543, 26, !dbg !472
  %and904 = and i32 %shr903, 63, !dbg !472
  %idxprom905 = zext i32 %and904 to i64, !dbg !472
  %arrayidx906 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom905, !dbg !472
  %544 = load i32, i32* %arrayidx906, align 4, !dbg !472
  %xor907 = xor i32 %xor902, %544, !dbg !472
  %545 = load i32, i32* %t, align 4, !dbg !472
  %shr908 = lshr i32 %545, 2, !dbg !472
  %and909 = and i32 %shr908, 63, !dbg !472
  %idxprom910 = zext i32 %and909 to i64, !dbg !472
  %arrayidx911 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom910, !dbg !472
  %546 = load i32, i32* %arrayidx911, align 4, !dbg !472
  %xor912 = xor i32 %xor907, %546, !dbg !472
  %547 = load i32, i32* %t, align 4, !dbg !472
  %shr913 = lshr i32 %547, 10, !dbg !472
  %and914 = and i32 %shr913, 63, !dbg !472
  %idxprom915 = zext i32 %and914 to i64, !dbg !472
  %arrayidx916 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom915, !dbg !472
  %548 = load i32, i32* %arrayidx916, align 4, !dbg !472
  %xor917 = xor i32 %xor912, %548, !dbg !472
  %549 = load i32, i32* %t, align 4, !dbg !472
  %shr918 = lshr i32 %549, 18, !dbg !472
  %and919 = and i32 %shr918, 63, !dbg !472
  %idxprom920 = zext i32 %and919 to i64, !dbg !472
  %arrayidx921 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom920, !dbg !472
  %550 = load i32, i32* %arrayidx921, align 4, !dbg !472
  %xor922 = xor i32 %xor917, %550, !dbg !472
  %551 = load i32, i32* %t, align 4, !dbg !472
  %shr923 = lshr i32 %551, 26, !dbg !472
  %and924 = and i32 %shr923, 63, !dbg !472
  %idxprom925 = zext i32 %and924 to i64, !dbg !472
  %arrayidx926 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom925, !dbg !472
  %552 = load i32, i32* %arrayidx926, align 4, !dbg !472
  %xor927 = xor i32 %xor922, %552, !dbg !472
  %553 = load i32, i32* %r, align 4, !dbg !472
  %xor928 = xor i32 %553, %xor927, !dbg !472
  store i32 %xor928, i32* %r, align 4, !dbg !472
  %554 = load i32, i32* %r, align 4, !dbg !478
  %555 = load i32*, i32** %s, align 8, !dbg !478
  %arrayidx929 = getelementptr inbounds i32, i32* %555, i64 22, !dbg !478
  %556 = load i32, i32* %arrayidx929, align 4, !dbg !478
  %xor930 = xor i32 %554, %556, !dbg !478
  store i32 %xor930, i32* %u, align 4, !dbg !478
  %557 = load i32, i32* %r, align 4, !dbg !478
  %558 = load i32*, i32** %s, align 8, !dbg !478
  %arrayidx931 = getelementptr inbounds i32, i32* %558, i64 23, !dbg !478
  %559 = load i32, i32* %arrayidx931, align 4, !dbg !478
  %xor932 = xor i32 %557, %559, !dbg !478
  store i32 %xor932, i32* %t, align 4, !dbg !478
  call void @llvm.dbg.declare(metadata i32* %ret933, metadata !480, metadata !DIExpression()), !dbg !482
  %560 = load i32, i32* %t, align 4, !dbg !482
  %561 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %560) #7, !dbg !482, !srcloc !483
  store i32 %561, i32* %ret933, align 4, !dbg !482
  %562 = load i32, i32* %ret933, align 4, !dbg !482
  store i32 %562, i32* %tmp934, align 4, !dbg !482
  %563 = load i32, i32* %tmp934, align 4, !dbg !482
  store i32 %563, i32* %t, align 4, !dbg !478
  %564 = load i32, i32* %u, align 4, !dbg !478
  %shr935 = lshr i32 %564, 2, !dbg !478
  %and936 = and i32 %shr935, 63, !dbg !478
  %idxprom937 = zext i32 %and936 to i64, !dbg !478
  %arrayidx938 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom937, !dbg !478
  %565 = load i32, i32* %arrayidx938, align 4, !dbg !478
  %566 = load i32, i32* %u, align 4, !dbg !478
  %shr939 = lshr i32 %566, 10, !dbg !478
  %and940 = and i32 %shr939, 63, !dbg !478
  %idxprom941 = zext i32 %and940 to i64, !dbg !478
  %arrayidx942 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom941, !dbg !478
  %567 = load i32, i32* %arrayidx942, align 4, !dbg !478
  %xor943 = xor i32 %565, %567, !dbg !478
  %568 = load i32, i32* %u, align 4, !dbg !478
  %shr944 = lshr i32 %568, 18, !dbg !478
  %and945 = and i32 %shr944, 63, !dbg !478
  %idxprom946 = zext i32 %and945 to i64, !dbg !478
  %arrayidx947 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom946, !dbg !478
  %569 = load i32, i32* %arrayidx947, align 4, !dbg !478
  %xor948 = xor i32 %xor943, %569, !dbg !478
  %570 = load i32, i32* %u, align 4, !dbg !478
  %shr949 = lshr i32 %570, 26, !dbg !478
  %and950 = and i32 %shr949, 63, !dbg !478
  %idxprom951 = zext i32 %and950 to i64, !dbg !478
  %arrayidx952 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom951, !dbg !478
  %571 = load i32, i32* %arrayidx952, align 4, !dbg !478
  %xor953 = xor i32 %xor948, %571, !dbg !478
  %572 = load i32, i32* %t, align 4, !dbg !478
  %shr954 = lshr i32 %572, 2, !dbg !478
  %and955 = and i32 %shr954, 63, !dbg !478
  %idxprom956 = zext i32 %and955 to i64, !dbg !478
  %arrayidx957 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom956, !dbg !478
  %573 = load i32, i32* %arrayidx957, align 4, !dbg !478
  %xor958 = xor i32 %xor953, %573, !dbg !478
  %574 = load i32, i32* %t, align 4, !dbg !478
  %shr959 = lshr i32 %574, 10, !dbg !478
  %and960 = and i32 %shr959, 63, !dbg !478
  %idxprom961 = zext i32 %and960 to i64, !dbg !478
  %arrayidx962 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom961, !dbg !478
  %575 = load i32, i32* %arrayidx962, align 4, !dbg !478
  %xor963 = xor i32 %xor958, %575, !dbg !478
  %576 = load i32, i32* %t, align 4, !dbg !478
  %shr964 = lshr i32 %576, 18, !dbg !478
  %and965 = and i32 %shr964, 63, !dbg !478
  %idxprom966 = zext i32 %and965 to i64, !dbg !478
  %arrayidx967 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom966, !dbg !478
  %577 = load i32, i32* %arrayidx967, align 4, !dbg !478
  %xor968 = xor i32 %xor963, %577, !dbg !478
  %578 = load i32, i32* %t, align 4, !dbg !478
  %shr969 = lshr i32 %578, 26, !dbg !478
  %and970 = and i32 %shr969, 63, !dbg !478
  %idxprom971 = zext i32 %and970 to i64, !dbg !478
  %arrayidx972 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom971, !dbg !478
  %579 = load i32, i32* %arrayidx972, align 4, !dbg !478
  %xor973 = xor i32 %xor968, %579, !dbg !478
  %580 = load i32, i32* %l, align 4, !dbg !478
  %xor974 = xor i32 %580, %xor973, !dbg !478
  store i32 %xor974, i32* %l, align 4, !dbg !478
  %581 = load i32, i32* %l, align 4, !dbg !484
  %582 = load i32*, i32** %s, align 8, !dbg !484
  %arrayidx975 = getelementptr inbounds i32, i32* %582, i64 20, !dbg !484
  %583 = load i32, i32* %arrayidx975, align 4, !dbg !484
  %xor976 = xor i32 %581, %583, !dbg !484
  store i32 %xor976, i32* %u, align 4, !dbg !484
  %584 = load i32, i32* %l, align 4, !dbg !484
  %585 = load i32*, i32** %s, align 8, !dbg !484
  %arrayidx977 = getelementptr inbounds i32, i32* %585, i64 21, !dbg !484
  %586 = load i32, i32* %arrayidx977, align 4, !dbg !484
  %xor978 = xor i32 %584, %586, !dbg !484
  store i32 %xor978, i32* %t, align 4, !dbg !484
  call void @llvm.dbg.declare(metadata i32* %ret979, metadata !486, metadata !DIExpression()), !dbg !488
  %587 = load i32, i32* %t, align 4, !dbg !488
  %588 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %587) #7, !dbg !488, !srcloc !489
  store i32 %588, i32* %ret979, align 4, !dbg !488
  %589 = load i32, i32* %ret979, align 4, !dbg !488
  store i32 %589, i32* %tmp980, align 4, !dbg !488
  %590 = load i32, i32* %tmp980, align 4, !dbg !488
  store i32 %590, i32* %t, align 4, !dbg !484
  %591 = load i32, i32* %u, align 4, !dbg !484
  %shr981 = lshr i32 %591, 2, !dbg !484
  %and982 = and i32 %shr981, 63, !dbg !484
  %idxprom983 = zext i32 %and982 to i64, !dbg !484
  %arrayidx984 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom983, !dbg !484
  %592 = load i32, i32* %arrayidx984, align 4, !dbg !484
  %593 = load i32, i32* %u, align 4, !dbg !484
  %shr985 = lshr i32 %593, 10, !dbg !484
  %and986 = and i32 %shr985, 63, !dbg !484
  %idxprom987 = zext i32 %and986 to i64, !dbg !484
  %arrayidx988 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom987, !dbg !484
  %594 = load i32, i32* %arrayidx988, align 4, !dbg !484
  %xor989 = xor i32 %592, %594, !dbg !484
  %595 = load i32, i32* %u, align 4, !dbg !484
  %shr990 = lshr i32 %595, 18, !dbg !484
  %and991 = and i32 %shr990, 63, !dbg !484
  %idxprom992 = zext i32 %and991 to i64, !dbg !484
  %arrayidx993 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom992, !dbg !484
  %596 = load i32, i32* %arrayidx993, align 4, !dbg !484
  %xor994 = xor i32 %xor989, %596, !dbg !484
  %597 = load i32, i32* %u, align 4, !dbg !484
  %shr995 = lshr i32 %597, 26, !dbg !484
  %and996 = and i32 %shr995, 63, !dbg !484
  %idxprom997 = zext i32 %and996 to i64, !dbg !484
  %arrayidx998 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom997, !dbg !484
  %598 = load i32, i32* %arrayidx998, align 4, !dbg !484
  %xor999 = xor i32 %xor994, %598, !dbg !484
  %599 = load i32, i32* %t, align 4, !dbg !484
  %shr1000 = lshr i32 %599, 2, !dbg !484
  %and1001 = and i32 %shr1000, 63, !dbg !484
  %idxprom1002 = zext i32 %and1001 to i64, !dbg !484
  %arrayidx1003 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1002, !dbg !484
  %600 = load i32, i32* %arrayidx1003, align 4, !dbg !484
  %xor1004 = xor i32 %xor999, %600, !dbg !484
  %601 = load i32, i32* %t, align 4, !dbg !484
  %shr1005 = lshr i32 %601, 10, !dbg !484
  %and1006 = and i32 %shr1005, 63, !dbg !484
  %idxprom1007 = zext i32 %and1006 to i64, !dbg !484
  %arrayidx1008 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1007, !dbg !484
  %602 = load i32, i32* %arrayidx1008, align 4, !dbg !484
  %xor1009 = xor i32 %xor1004, %602, !dbg !484
  %603 = load i32, i32* %t, align 4, !dbg !484
  %shr1010 = lshr i32 %603, 18, !dbg !484
  %and1011 = and i32 %shr1010, 63, !dbg !484
  %idxprom1012 = zext i32 %and1011 to i64, !dbg !484
  %arrayidx1013 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1012, !dbg !484
  %604 = load i32, i32* %arrayidx1013, align 4, !dbg !484
  %xor1014 = xor i32 %xor1009, %604, !dbg !484
  %605 = load i32, i32* %t, align 4, !dbg !484
  %shr1015 = lshr i32 %605, 26, !dbg !484
  %and1016 = and i32 %shr1015, 63, !dbg !484
  %idxprom1017 = zext i32 %and1016 to i64, !dbg !484
  %arrayidx1018 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1017, !dbg !484
  %606 = load i32, i32* %arrayidx1018, align 4, !dbg !484
  %xor1019 = xor i32 %xor1014, %606, !dbg !484
  %607 = load i32, i32* %r, align 4, !dbg !484
  %xor1020 = xor i32 %607, %xor1019, !dbg !484
  store i32 %xor1020, i32* %r, align 4, !dbg !484
  %608 = load i32, i32* %r, align 4, !dbg !490
  %609 = load i32*, i32** %s, align 8, !dbg !490
  %arrayidx1021 = getelementptr inbounds i32, i32* %609, i64 18, !dbg !490
  %610 = load i32, i32* %arrayidx1021, align 4, !dbg !490
  %xor1022 = xor i32 %608, %610, !dbg !490
  store i32 %xor1022, i32* %u, align 4, !dbg !490
  %611 = load i32, i32* %r, align 4, !dbg !490
  %612 = load i32*, i32** %s, align 8, !dbg !490
  %arrayidx1023 = getelementptr inbounds i32, i32* %612, i64 19, !dbg !490
  %613 = load i32, i32* %arrayidx1023, align 4, !dbg !490
  %xor1024 = xor i32 %611, %613, !dbg !490
  store i32 %xor1024, i32* %t, align 4, !dbg !490
  call void @llvm.dbg.declare(metadata i32* %ret1025, metadata !492, metadata !DIExpression()), !dbg !494
  %614 = load i32, i32* %t, align 4, !dbg !494
  %615 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %614) #7, !dbg !494, !srcloc !495
  store i32 %615, i32* %ret1025, align 4, !dbg !494
  %616 = load i32, i32* %ret1025, align 4, !dbg !494
  store i32 %616, i32* %tmp1026, align 4, !dbg !494
  %617 = load i32, i32* %tmp1026, align 4, !dbg !494
  store i32 %617, i32* %t, align 4, !dbg !490
  %618 = load i32, i32* %u, align 4, !dbg !490
  %shr1027 = lshr i32 %618, 2, !dbg !490
  %and1028 = and i32 %shr1027, 63, !dbg !490
  %idxprom1029 = zext i32 %and1028 to i64, !dbg !490
  %arrayidx1030 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1029, !dbg !490
  %619 = load i32, i32* %arrayidx1030, align 4, !dbg !490
  %620 = load i32, i32* %u, align 4, !dbg !490
  %shr1031 = lshr i32 %620, 10, !dbg !490
  %and1032 = and i32 %shr1031, 63, !dbg !490
  %idxprom1033 = zext i32 %and1032 to i64, !dbg !490
  %arrayidx1034 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1033, !dbg !490
  %621 = load i32, i32* %arrayidx1034, align 4, !dbg !490
  %xor1035 = xor i32 %619, %621, !dbg !490
  %622 = load i32, i32* %u, align 4, !dbg !490
  %shr1036 = lshr i32 %622, 18, !dbg !490
  %and1037 = and i32 %shr1036, 63, !dbg !490
  %idxprom1038 = zext i32 %and1037 to i64, !dbg !490
  %arrayidx1039 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1038, !dbg !490
  %623 = load i32, i32* %arrayidx1039, align 4, !dbg !490
  %xor1040 = xor i32 %xor1035, %623, !dbg !490
  %624 = load i32, i32* %u, align 4, !dbg !490
  %shr1041 = lshr i32 %624, 26, !dbg !490
  %and1042 = and i32 %shr1041, 63, !dbg !490
  %idxprom1043 = zext i32 %and1042 to i64, !dbg !490
  %arrayidx1044 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1043, !dbg !490
  %625 = load i32, i32* %arrayidx1044, align 4, !dbg !490
  %xor1045 = xor i32 %xor1040, %625, !dbg !490
  %626 = load i32, i32* %t, align 4, !dbg !490
  %shr1046 = lshr i32 %626, 2, !dbg !490
  %and1047 = and i32 %shr1046, 63, !dbg !490
  %idxprom1048 = zext i32 %and1047 to i64, !dbg !490
  %arrayidx1049 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1048, !dbg !490
  %627 = load i32, i32* %arrayidx1049, align 4, !dbg !490
  %xor1050 = xor i32 %xor1045, %627, !dbg !490
  %628 = load i32, i32* %t, align 4, !dbg !490
  %shr1051 = lshr i32 %628, 10, !dbg !490
  %and1052 = and i32 %shr1051, 63, !dbg !490
  %idxprom1053 = zext i32 %and1052 to i64, !dbg !490
  %arrayidx1054 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1053, !dbg !490
  %629 = load i32, i32* %arrayidx1054, align 4, !dbg !490
  %xor1055 = xor i32 %xor1050, %629, !dbg !490
  %630 = load i32, i32* %t, align 4, !dbg !490
  %shr1056 = lshr i32 %630, 18, !dbg !490
  %and1057 = and i32 %shr1056, 63, !dbg !490
  %idxprom1058 = zext i32 %and1057 to i64, !dbg !490
  %arrayidx1059 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1058, !dbg !490
  %631 = load i32, i32* %arrayidx1059, align 4, !dbg !490
  %xor1060 = xor i32 %xor1055, %631, !dbg !490
  %632 = load i32, i32* %t, align 4, !dbg !490
  %shr1061 = lshr i32 %632, 26, !dbg !490
  %and1062 = and i32 %shr1061, 63, !dbg !490
  %idxprom1063 = zext i32 %and1062 to i64, !dbg !490
  %arrayidx1064 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1063, !dbg !490
  %633 = load i32, i32* %arrayidx1064, align 4, !dbg !490
  %xor1065 = xor i32 %xor1060, %633, !dbg !490
  %634 = load i32, i32* %l, align 4, !dbg !490
  %xor1066 = xor i32 %634, %xor1065, !dbg !490
  store i32 %xor1066, i32* %l, align 4, !dbg !490
  %635 = load i32, i32* %l, align 4, !dbg !496
  %636 = load i32*, i32** %s, align 8, !dbg !496
  %arrayidx1067 = getelementptr inbounds i32, i32* %636, i64 16, !dbg !496
  %637 = load i32, i32* %arrayidx1067, align 4, !dbg !496
  %xor1068 = xor i32 %635, %637, !dbg !496
  store i32 %xor1068, i32* %u, align 4, !dbg !496
  %638 = load i32, i32* %l, align 4, !dbg !496
  %639 = load i32*, i32** %s, align 8, !dbg !496
  %arrayidx1069 = getelementptr inbounds i32, i32* %639, i64 17, !dbg !496
  %640 = load i32, i32* %arrayidx1069, align 4, !dbg !496
  %xor1070 = xor i32 %638, %640, !dbg !496
  store i32 %xor1070, i32* %t, align 4, !dbg !496
  call void @llvm.dbg.declare(metadata i32* %ret1071, metadata !498, metadata !DIExpression()), !dbg !500
  %641 = load i32, i32* %t, align 4, !dbg !500
  %642 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %641) #7, !dbg !500, !srcloc !501
  store i32 %642, i32* %ret1071, align 4, !dbg !500
  %643 = load i32, i32* %ret1071, align 4, !dbg !500
  store i32 %643, i32* %tmp1072, align 4, !dbg !500
  %644 = load i32, i32* %tmp1072, align 4, !dbg !500
  store i32 %644, i32* %t, align 4, !dbg !496
  %645 = load i32, i32* %u, align 4, !dbg !496
  %shr1073 = lshr i32 %645, 2, !dbg !496
  %and1074 = and i32 %shr1073, 63, !dbg !496
  %idxprom1075 = zext i32 %and1074 to i64, !dbg !496
  %arrayidx1076 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1075, !dbg !496
  %646 = load i32, i32* %arrayidx1076, align 4, !dbg !496
  %647 = load i32, i32* %u, align 4, !dbg !496
  %shr1077 = lshr i32 %647, 10, !dbg !496
  %and1078 = and i32 %shr1077, 63, !dbg !496
  %idxprom1079 = zext i32 %and1078 to i64, !dbg !496
  %arrayidx1080 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1079, !dbg !496
  %648 = load i32, i32* %arrayidx1080, align 4, !dbg !496
  %xor1081 = xor i32 %646, %648, !dbg !496
  %649 = load i32, i32* %u, align 4, !dbg !496
  %shr1082 = lshr i32 %649, 18, !dbg !496
  %and1083 = and i32 %shr1082, 63, !dbg !496
  %idxprom1084 = zext i32 %and1083 to i64, !dbg !496
  %arrayidx1085 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1084, !dbg !496
  %650 = load i32, i32* %arrayidx1085, align 4, !dbg !496
  %xor1086 = xor i32 %xor1081, %650, !dbg !496
  %651 = load i32, i32* %u, align 4, !dbg !496
  %shr1087 = lshr i32 %651, 26, !dbg !496
  %and1088 = and i32 %shr1087, 63, !dbg !496
  %idxprom1089 = zext i32 %and1088 to i64, !dbg !496
  %arrayidx1090 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1089, !dbg !496
  %652 = load i32, i32* %arrayidx1090, align 4, !dbg !496
  %xor1091 = xor i32 %xor1086, %652, !dbg !496
  %653 = load i32, i32* %t, align 4, !dbg !496
  %shr1092 = lshr i32 %653, 2, !dbg !496
  %and1093 = and i32 %shr1092, 63, !dbg !496
  %idxprom1094 = zext i32 %and1093 to i64, !dbg !496
  %arrayidx1095 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1094, !dbg !496
  %654 = load i32, i32* %arrayidx1095, align 4, !dbg !496
  %xor1096 = xor i32 %xor1091, %654, !dbg !496
  %655 = load i32, i32* %t, align 4, !dbg !496
  %shr1097 = lshr i32 %655, 10, !dbg !496
  %and1098 = and i32 %shr1097, 63, !dbg !496
  %idxprom1099 = zext i32 %and1098 to i64, !dbg !496
  %arrayidx1100 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1099, !dbg !496
  %656 = load i32, i32* %arrayidx1100, align 4, !dbg !496
  %xor1101 = xor i32 %xor1096, %656, !dbg !496
  %657 = load i32, i32* %t, align 4, !dbg !496
  %shr1102 = lshr i32 %657, 18, !dbg !496
  %and1103 = and i32 %shr1102, 63, !dbg !496
  %idxprom1104 = zext i32 %and1103 to i64, !dbg !496
  %arrayidx1105 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1104, !dbg !496
  %658 = load i32, i32* %arrayidx1105, align 4, !dbg !496
  %xor1106 = xor i32 %xor1101, %658, !dbg !496
  %659 = load i32, i32* %t, align 4, !dbg !496
  %shr1107 = lshr i32 %659, 26, !dbg !496
  %and1108 = and i32 %shr1107, 63, !dbg !496
  %idxprom1109 = zext i32 %and1108 to i64, !dbg !496
  %arrayidx1110 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1109, !dbg !496
  %660 = load i32, i32* %arrayidx1110, align 4, !dbg !496
  %xor1111 = xor i32 %xor1106, %660, !dbg !496
  %661 = load i32, i32* %r, align 4, !dbg !496
  %xor1112 = xor i32 %661, %xor1111, !dbg !496
  store i32 %xor1112, i32* %r, align 4, !dbg !496
  %662 = load i32, i32* %r, align 4, !dbg !502
  %663 = load i32*, i32** %s, align 8, !dbg !502
  %arrayidx1113 = getelementptr inbounds i32, i32* %663, i64 14, !dbg !502
  %664 = load i32, i32* %arrayidx1113, align 4, !dbg !502
  %xor1114 = xor i32 %662, %664, !dbg !502
  store i32 %xor1114, i32* %u, align 4, !dbg !502
  %665 = load i32, i32* %r, align 4, !dbg !502
  %666 = load i32*, i32** %s, align 8, !dbg !502
  %arrayidx1115 = getelementptr inbounds i32, i32* %666, i64 15, !dbg !502
  %667 = load i32, i32* %arrayidx1115, align 4, !dbg !502
  %xor1116 = xor i32 %665, %667, !dbg !502
  store i32 %xor1116, i32* %t, align 4, !dbg !502
  call void @llvm.dbg.declare(metadata i32* %ret1117, metadata !504, metadata !DIExpression()), !dbg !506
  %668 = load i32, i32* %t, align 4, !dbg !506
  %669 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %668) #7, !dbg !506, !srcloc !507
  store i32 %669, i32* %ret1117, align 4, !dbg !506
  %670 = load i32, i32* %ret1117, align 4, !dbg !506
  store i32 %670, i32* %tmp1118, align 4, !dbg !506
  %671 = load i32, i32* %tmp1118, align 4, !dbg !506
  store i32 %671, i32* %t, align 4, !dbg !502
  %672 = load i32, i32* %u, align 4, !dbg !502
  %shr1119 = lshr i32 %672, 2, !dbg !502
  %and1120 = and i32 %shr1119, 63, !dbg !502
  %idxprom1121 = zext i32 %and1120 to i64, !dbg !502
  %arrayidx1122 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1121, !dbg !502
  %673 = load i32, i32* %arrayidx1122, align 4, !dbg !502
  %674 = load i32, i32* %u, align 4, !dbg !502
  %shr1123 = lshr i32 %674, 10, !dbg !502
  %and1124 = and i32 %shr1123, 63, !dbg !502
  %idxprom1125 = zext i32 %and1124 to i64, !dbg !502
  %arrayidx1126 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1125, !dbg !502
  %675 = load i32, i32* %arrayidx1126, align 4, !dbg !502
  %xor1127 = xor i32 %673, %675, !dbg !502
  %676 = load i32, i32* %u, align 4, !dbg !502
  %shr1128 = lshr i32 %676, 18, !dbg !502
  %and1129 = and i32 %shr1128, 63, !dbg !502
  %idxprom1130 = zext i32 %and1129 to i64, !dbg !502
  %arrayidx1131 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1130, !dbg !502
  %677 = load i32, i32* %arrayidx1131, align 4, !dbg !502
  %xor1132 = xor i32 %xor1127, %677, !dbg !502
  %678 = load i32, i32* %u, align 4, !dbg !502
  %shr1133 = lshr i32 %678, 26, !dbg !502
  %and1134 = and i32 %shr1133, 63, !dbg !502
  %idxprom1135 = zext i32 %and1134 to i64, !dbg !502
  %arrayidx1136 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1135, !dbg !502
  %679 = load i32, i32* %arrayidx1136, align 4, !dbg !502
  %xor1137 = xor i32 %xor1132, %679, !dbg !502
  %680 = load i32, i32* %t, align 4, !dbg !502
  %shr1138 = lshr i32 %680, 2, !dbg !502
  %and1139 = and i32 %shr1138, 63, !dbg !502
  %idxprom1140 = zext i32 %and1139 to i64, !dbg !502
  %arrayidx1141 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1140, !dbg !502
  %681 = load i32, i32* %arrayidx1141, align 4, !dbg !502
  %xor1142 = xor i32 %xor1137, %681, !dbg !502
  %682 = load i32, i32* %t, align 4, !dbg !502
  %shr1143 = lshr i32 %682, 10, !dbg !502
  %and1144 = and i32 %shr1143, 63, !dbg !502
  %idxprom1145 = zext i32 %and1144 to i64, !dbg !502
  %arrayidx1146 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1145, !dbg !502
  %683 = load i32, i32* %arrayidx1146, align 4, !dbg !502
  %xor1147 = xor i32 %xor1142, %683, !dbg !502
  %684 = load i32, i32* %t, align 4, !dbg !502
  %shr1148 = lshr i32 %684, 18, !dbg !502
  %and1149 = and i32 %shr1148, 63, !dbg !502
  %idxprom1150 = zext i32 %and1149 to i64, !dbg !502
  %arrayidx1151 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1150, !dbg !502
  %685 = load i32, i32* %arrayidx1151, align 4, !dbg !502
  %xor1152 = xor i32 %xor1147, %685, !dbg !502
  %686 = load i32, i32* %t, align 4, !dbg !502
  %shr1153 = lshr i32 %686, 26, !dbg !502
  %and1154 = and i32 %shr1153, 63, !dbg !502
  %idxprom1155 = zext i32 %and1154 to i64, !dbg !502
  %arrayidx1156 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1155, !dbg !502
  %687 = load i32, i32* %arrayidx1156, align 4, !dbg !502
  %xor1157 = xor i32 %xor1152, %687, !dbg !502
  %688 = load i32, i32* %l, align 4, !dbg !502
  %xor1158 = xor i32 %688, %xor1157, !dbg !502
  store i32 %xor1158, i32* %l, align 4, !dbg !502
  %689 = load i32, i32* %l, align 4, !dbg !508
  %690 = load i32*, i32** %s, align 8, !dbg !508
  %arrayidx1159 = getelementptr inbounds i32, i32* %690, i64 12, !dbg !508
  %691 = load i32, i32* %arrayidx1159, align 4, !dbg !508
  %xor1160 = xor i32 %689, %691, !dbg !508
  store i32 %xor1160, i32* %u, align 4, !dbg !508
  %692 = load i32, i32* %l, align 4, !dbg !508
  %693 = load i32*, i32** %s, align 8, !dbg !508
  %arrayidx1161 = getelementptr inbounds i32, i32* %693, i64 13, !dbg !508
  %694 = load i32, i32* %arrayidx1161, align 4, !dbg !508
  %xor1162 = xor i32 %692, %694, !dbg !508
  store i32 %xor1162, i32* %t, align 4, !dbg !508
  call void @llvm.dbg.declare(metadata i32* %ret1163, metadata !510, metadata !DIExpression()), !dbg !512
  %695 = load i32, i32* %t, align 4, !dbg !512
  %696 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %695) #7, !dbg !512, !srcloc !513
  store i32 %696, i32* %ret1163, align 4, !dbg !512
  %697 = load i32, i32* %ret1163, align 4, !dbg !512
  store i32 %697, i32* %tmp1164, align 4, !dbg !512
  %698 = load i32, i32* %tmp1164, align 4, !dbg !512
  store i32 %698, i32* %t, align 4, !dbg !508
  %699 = load i32, i32* %u, align 4, !dbg !508
  %shr1165 = lshr i32 %699, 2, !dbg !508
  %and1166 = and i32 %shr1165, 63, !dbg !508
  %idxprom1167 = zext i32 %and1166 to i64, !dbg !508
  %arrayidx1168 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1167, !dbg !508
  %700 = load i32, i32* %arrayidx1168, align 4, !dbg !508
  %701 = load i32, i32* %u, align 4, !dbg !508
  %shr1169 = lshr i32 %701, 10, !dbg !508
  %and1170 = and i32 %shr1169, 63, !dbg !508
  %idxprom1171 = zext i32 %and1170 to i64, !dbg !508
  %arrayidx1172 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1171, !dbg !508
  %702 = load i32, i32* %arrayidx1172, align 4, !dbg !508
  %xor1173 = xor i32 %700, %702, !dbg !508
  %703 = load i32, i32* %u, align 4, !dbg !508
  %shr1174 = lshr i32 %703, 18, !dbg !508
  %and1175 = and i32 %shr1174, 63, !dbg !508
  %idxprom1176 = zext i32 %and1175 to i64, !dbg !508
  %arrayidx1177 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1176, !dbg !508
  %704 = load i32, i32* %arrayidx1177, align 4, !dbg !508
  %xor1178 = xor i32 %xor1173, %704, !dbg !508
  %705 = load i32, i32* %u, align 4, !dbg !508
  %shr1179 = lshr i32 %705, 26, !dbg !508
  %and1180 = and i32 %shr1179, 63, !dbg !508
  %idxprom1181 = zext i32 %and1180 to i64, !dbg !508
  %arrayidx1182 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1181, !dbg !508
  %706 = load i32, i32* %arrayidx1182, align 4, !dbg !508
  %xor1183 = xor i32 %xor1178, %706, !dbg !508
  %707 = load i32, i32* %t, align 4, !dbg !508
  %shr1184 = lshr i32 %707, 2, !dbg !508
  %and1185 = and i32 %shr1184, 63, !dbg !508
  %idxprom1186 = zext i32 %and1185 to i64, !dbg !508
  %arrayidx1187 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1186, !dbg !508
  %708 = load i32, i32* %arrayidx1187, align 4, !dbg !508
  %xor1188 = xor i32 %xor1183, %708, !dbg !508
  %709 = load i32, i32* %t, align 4, !dbg !508
  %shr1189 = lshr i32 %709, 10, !dbg !508
  %and1190 = and i32 %shr1189, 63, !dbg !508
  %idxprom1191 = zext i32 %and1190 to i64, !dbg !508
  %arrayidx1192 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1191, !dbg !508
  %710 = load i32, i32* %arrayidx1192, align 4, !dbg !508
  %xor1193 = xor i32 %xor1188, %710, !dbg !508
  %711 = load i32, i32* %t, align 4, !dbg !508
  %shr1194 = lshr i32 %711, 18, !dbg !508
  %and1195 = and i32 %shr1194, 63, !dbg !508
  %idxprom1196 = zext i32 %and1195 to i64, !dbg !508
  %arrayidx1197 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1196, !dbg !508
  %712 = load i32, i32* %arrayidx1197, align 4, !dbg !508
  %xor1198 = xor i32 %xor1193, %712, !dbg !508
  %713 = load i32, i32* %t, align 4, !dbg !508
  %shr1199 = lshr i32 %713, 26, !dbg !508
  %and1200 = and i32 %shr1199, 63, !dbg !508
  %idxprom1201 = zext i32 %and1200 to i64, !dbg !508
  %arrayidx1202 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1201, !dbg !508
  %714 = load i32, i32* %arrayidx1202, align 4, !dbg !508
  %xor1203 = xor i32 %xor1198, %714, !dbg !508
  %715 = load i32, i32* %r, align 4, !dbg !508
  %xor1204 = xor i32 %715, %xor1203, !dbg !508
  store i32 %xor1204, i32* %r, align 4, !dbg !508
  %716 = load i32, i32* %r, align 4, !dbg !514
  %717 = load i32*, i32** %s, align 8, !dbg !514
  %arrayidx1205 = getelementptr inbounds i32, i32* %717, i64 10, !dbg !514
  %718 = load i32, i32* %arrayidx1205, align 4, !dbg !514
  %xor1206 = xor i32 %716, %718, !dbg !514
  store i32 %xor1206, i32* %u, align 4, !dbg !514
  %719 = load i32, i32* %r, align 4, !dbg !514
  %720 = load i32*, i32** %s, align 8, !dbg !514
  %arrayidx1207 = getelementptr inbounds i32, i32* %720, i64 11, !dbg !514
  %721 = load i32, i32* %arrayidx1207, align 4, !dbg !514
  %xor1208 = xor i32 %719, %721, !dbg !514
  store i32 %xor1208, i32* %t, align 4, !dbg !514
  call void @llvm.dbg.declare(metadata i32* %ret1209, metadata !516, metadata !DIExpression()), !dbg !518
  %722 = load i32, i32* %t, align 4, !dbg !518
  %723 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %722) #7, !dbg !518, !srcloc !519
  store i32 %723, i32* %ret1209, align 4, !dbg !518
  %724 = load i32, i32* %ret1209, align 4, !dbg !518
  store i32 %724, i32* %tmp1210, align 4, !dbg !518
  %725 = load i32, i32* %tmp1210, align 4, !dbg !518
  store i32 %725, i32* %t, align 4, !dbg !514
  %726 = load i32, i32* %u, align 4, !dbg !514
  %shr1211 = lshr i32 %726, 2, !dbg !514
  %and1212 = and i32 %shr1211, 63, !dbg !514
  %idxprom1213 = zext i32 %and1212 to i64, !dbg !514
  %arrayidx1214 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1213, !dbg !514
  %727 = load i32, i32* %arrayidx1214, align 4, !dbg !514
  %728 = load i32, i32* %u, align 4, !dbg !514
  %shr1215 = lshr i32 %728, 10, !dbg !514
  %and1216 = and i32 %shr1215, 63, !dbg !514
  %idxprom1217 = zext i32 %and1216 to i64, !dbg !514
  %arrayidx1218 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1217, !dbg !514
  %729 = load i32, i32* %arrayidx1218, align 4, !dbg !514
  %xor1219 = xor i32 %727, %729, !dbg !514
  %730 = load i32, i32* %u, align 4, !dbg !514
  %shr1220 = lshr i32 %730, 18, !dbg !514
  %and1221 = and i32 %shr1220, 63, !dbg !514
  %idxprom1222 = zext i32 %and1221 to i64, !dbg !514
  %arrayidx1223 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1222, !dbg !514
  %731 = load i32, i32* %arrayidx1223, align 4, !dbg !514
  %xor1224 = xor i32 %xor1219, %731, !dbg !514
  %732 = load i32, i32* %u, align 4, !dbg !514
  %shr1225 = lshr i32 %732, 26, !dbg !514
  %and1226 = and i32 %shr1225, 63, !dbg !514
  %idxprom1227 = zext i32 %and1226 to i64, !dbg !514
  %arrayidx1228 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1227, !dbg !514
  %733 = load i32, i32* %arrayidx1228, align 4, !dbg !514
  %xor1229 = xor i32 %xor1224, %733, !dbg !514
  %734 = load i32, i32* %t, align 4, !dbg !514
  %shr1230 = lshr i32 %734, 2, !dbg !514
  %and1231 = and i32 %shr1230, 63, !dbg !514
  %idxprom1232 = zext i32 %and1231 to i64, !dbg !514
  %arrayidx1233 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1232, !dbg !514
  %735 = load i32, i32* %arrayidx1233, align 4, !dbg !514
  %xor1234 = xor i32 %xor1229, %735, !dbg !514
  %736 = load i32, i32* %t, align 4, !dbg !514
  %shr1235 = lshr i32 %736, 10, !dbg !514
  %and1236 = and i32 %shr1235, 63, !dbg !514
  %idxprom1237 = zext i32 %and1236 to i64, !dbg !514
  %arrayidx1238 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1237, !dbg !514
  %737 = load i32, i32* %arrayidx1238, align 4, !dbg !514
  %xor1239 = xor i32 %xor1234, %737, !dbg !514
  %738 = load i32, i32* %t, align 4, !dbg !514
  %shr1240 = lshr i32 %738, 18, !dbg !514
  %and1241 = and i32 %shr1240, 63, !dbg !514
  %idxprom1242 = zext i32 %and1241 to i64, !dbg !514
  %arrayidx1243 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1242, !dbg !514
  %739 = load i32, i32* %arrayidx1243, align 4, !dbg !514
  %xor1244 = xor i32 %xor1239, %739, !dbg !514
  %740 = load i32, i32* %t, align 4, !dbg !514
  %shr1245 = lshr i32 %740, 26, !dbg !514
  %and1246 = and i32 %shr1245, 63, !dbg !514
  %idxprom1247 = zext i32 %and1246 to i64, !dbg !514
  %arrayidx1248 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1247, !dbg !514
  %741 = load i32, i32* %arrayidx1248, align 4, !dbg !514
  %xor1249 = xor i32 %xor1244, %741, !dbg !514
  %742 = load i32, i32* %l, align 4, !dbg !514
  %xor1250 = xor i32 %742, %xor1249, !dbg !514
  store i32 %xor1250, i32* %l, align 4, !dbg !514
  %743 = load i32, i32* %l, align 4, !dbg !520
  %744 = load i32*, i32** %s, align 8, !dbg !520
  %arrayidx1251 = getelementptr inbounds i32, i32* %744, i64 8, !dbg !520
  %745 = load i32, i32* %arrayidx1251, align 4, !dbg !520
  %xor1252 = xor i32 %743, %745, !dbg !520
  store i32 %xor1252, i32* %u, align 4, !dbg !520
  %746 = load i32, i32* %l, align 4, !dbg !520
  %747 = load i32*, i32** %s, align 8, !dbg !520
  %arrayidx1253 = getelementptr inbounds i32, i32* %747, i64 9, !dbg !520
  %748 = load i32, i32* %arrayidx1253, align 4, !dbg !520
  %xor1254 = xor i32 %746, %748, !dbg !520
  store i32 %xor1254, i32* %t, align 4, !dbg !520
  call void @llvm.dbg.declare(metadata i32* %ret1255, metadata !522, metadata !DIExpression()), !dbg !524
  %749 = load i32, i32* %t, align 4, !dbg !524
  %750 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %749) #7, !dbg !524, !srcloc !525
  store i32 %750, i32* %ret1255, align 4, !dbg !524
  %751 = load i32, i32* %ret1255, align 4, !dbg !524
  store i32 %751, i32* %tmp1256, align 4, !dbg !524
  %752 = load i32, i32* %tmp1256, align 4, !dbg !524
  store i32 %752, i32* %t, align 4, !dbg !520
  %753 = load i32, i32* %u, align 4, !dbg !520
  %shr1257 = lshr i32 %753, 2, !dbg !520
  %and1258 = and i32 %shr1257, 63, !dbg !520
  %idxprom1259 = zext i32 %and1258 to i64, !dbg !520
  %arrayidx1260 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1259, !dbg !520
  %754 = load i32, i32* %arrayidx1260, align 4, !dbg !520
  %755 = load i32, i32* %u, align 4, !dbg !520
  %shr1261 = lshr i32 %755, 10, !dbg !520
  %and1262 = and i32 %shr1261, 63, !dbg !520
  %idxprom1263 = zext i32 %and1262 to i64, !dbg !520
  %arrayidx1264 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1263, !dbg !520
  %756 = load i32, i32* %arrayidx1264, align 4, !dbg !520
  %xor1265 = xor i32 %754, %756, !dbg !520
  %757 = load i32, i32* %u, align 4, !dbg !520
  %shr1266 = lshr i32 %757, 18, !dbg !520
  %and1267 = and i32 %shr1266, 63, !dbg !520
  %idxprom1268 = zext i32 %and1267 to i64, !dbg !520
  %arrayidx1269 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1268, !dbg !520
  %758 = load i32, i32* %arrayidx1269, align 4, !dbg !520
  %xor1270 = xor i32 %xor1265, %758, !dbg !520
  %759 = load i32, i32* %u, align 4, !dbg !520
  %shr1271 = lshr i32 %759, 26, !dbg !520
  %and1272 = and i32 %shr1271, 63, !dbg !520
  %idxprom1273 = zext i32 %and1272 to i64, !dbg !520
  %arrayidx1274 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1273, !dbg !520
  %760 = load i32, i32* %arrayidx1274, align 4, !dbg !520
  %xor1275 = xor i32 %xor1270, %760, !dbg !520
  %761 = load i32, i32* %t, align 4, !dbg !520
  %shr1276 = lshr i32 %761, 2, !dbg !520
  %and1277 = and i32 %shr1276, 63, !dbg !520
  %idxprom1278 = zext i32 %and1277 to i64, !dbg !520
  %arrayidx1279 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1278, !dbg !520
  %762 = load i32, i32* %arrayidx1279, align 4, !dbg !520
  %xor1280 = xor i32 %xor1275, %762, !dbg !520
  %763 = load i32, i32* %t, align 4, !dbg !520
  %shr1281 = lshr i32 %763, 10, !dbg !520
  %and1282 = and i32 %shr1281, 63, !dbg !520
  %idxprom1283 = zext i32 %and1282 to i64, !dbg !520
  %arrayidx1284 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1283, !dbg !520
  %764 = load i32, i32* %arrayidx1284, align 4, !dbg !520
  %xor1285 = xor i32 %xor1280, %764, !dbg !520
  %765 = load i32, i32* %t, align 4, !dbg !520
  %shr1286 = lshr i32 %765, 18, !dbg !520
  %and1287 = and i32 %shr1286, 63, !dbg !520
  %idxprom1288 = zext i32 %and1287 to i64, !dbg !520
  %arrayidx1289 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1288, !dbg !520
  %766 = load i32, i32* %arrayidx1289, align 4, !dbg !520
  %xor1290 = xor i32 %xor1285, %766, !dbg !520
  %767 = load i32, i32* %t, align 4, !dbg !520
  %shr1291 = lshr i32 %767, 26, !dbg !520
  %and1292 = and i32 %shr1291, 63, !dbg !520
  %idxprom1293 = zext i32 %and1292 to i64, !dbg !520
  %arrayidx1294 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1293, !dbg !520
  %768 = load i32, i32* %arrayidx1294, align 4, !dbg !520
  %xor1295 = xor i32 %xor1290, %768, !dbg !520
  %769 = load i32, i32* %r, align 4, !dbg !520
  %xor1296 = xor i32 %769, %xor1295, !dbg !520
  store i32 %xor1296, i32* %r, align 4, !dbg !520
  %770 = load i32, i32* %r, align 4, !dbg !526
  %771 = load i32*, i32** %s, align 8, !dbg !526
  %arrayidx1297 = getelementptr inbounds i32, i32* %771, i64 6, !dbg !526
  %772 = load i32, i32* %arrayidx1297, align 4, !dbg !526
  %xor1298 = xor i32 %770, %772, !dbg !526
  store i32 %xor1298, i32* %u, align 4, !dbg !526
  %773 = load i32, i32* %r, align 4, !dbg !526
  %774 = load i32*, i32** %s, align 8, !dbg !526
  %arrayidx1299 = getelementptr inbounds i32, i32* %774, i64 7, !dbg !526
  %775 = load i32, i32* %arrayidx1299, align 4, !dbg !526
  %xor1300 = xor i32 %773, %775, !dbg !526
  store i32 %xor1300, i32* %t, align 4, !dbg !526
  call void @llvm.dbg.declare(metadata i32* %ret1301, metadata !528, metadata !DIExpression()), !dbg !530
  %776 = load i32, i32* %t, align 4, !dbg !530
  %777 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %776) #7, !dbg !530, !srcloc !531
  store i32 %777, i32* %ret1301, align 4, !dbg !530
  %778 = load i32, i32* %ret1301, align 4, !dbg !530
  store i32 %778, i32* %tmp1302, align 4, !dbg !530
  %779 = load i32, i32* %tmp1302, align 4, !dbg !530
  store i32 %779, i32* %t, align 4, !dbg !526
  %780 = load i32, i32* %u, align 4, !dbg !526
  %shr1303 = lshr i32 %780, 2, !dbg !526
  %and1304 = and i32 %shr1303, 63, !dbg !526
  %idxprom1305 = zext i32 %and1304 to i64, !dbg !526
  %arrayidx1306 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1305, !dbg !526
  %781 = load i32, i32* %arrayidx1306, align 4, !dbg !526
  %782 = load i32, i32* %u, align 4, !dbg !526
  %shr1307 = lshr i32 %782, 10, !dbg !526
  %and1308 = and i32 %shr1307, 63, !dbg !526
  %idxprom1309 = zext i32 %and1308 to i64, !dbg !526
  %arrayidx1310 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1309, !dbg !526
  %783 = load i32, i32* %arrayidx1310, align 4, !dbg !526
  %xor1311 = xor i32 %781, %783, !dbg !526
  %784 = load i32, i32* %u, align 4, !dbg !526
  %shr1312 = lshr i32 %784, 18, !dbg !526
  %and1313 = and i32 %shr1312, 63, !dbg !526
  %idxprom1314 = zext i32 %and1313 to i64, !dbg !526
  %arrayidx1315 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1314, !dbg !526
  %785 = load i32, i32* %arrayidx1315, align 4, !dbg !526
  %xor1316 = xor i32 %xor1311, %785, !dbg !526
  %786 = load i32, i32* %u, align 4, !dbg !526
  %shr1317 = lshr i32 %786, 26, !dbg !526
  %and1318 = and i32 %shr1317, 63, !dbg !526
  %idxprom1319 = zext i32 %and1318 to i64, !dbg !526
  %arrayidx1320 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1319, !dbg !526
  %787 = load i32, i32* %arrayidx1320, align 4, !dbg !526
  %xor1321 = xor i32 %xor1316, %787, !dbg !526
  %788 = load i32, i32* %t, align 4, !dbg !526
  %shr1322 = lshr i32 %788, 2, !dbg !526
  %and1323 = and i32 %shr1322, 63, !dbg !526
  %idxprom1324 = zext i32 %and1323 to i64, !dbg !526
  %arrayidx1325 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1324, !dbg !526
  %789 = load i32, i32* %arrayidx1325, align 4, !dbg !526
  %xor1326 = xor i32 %xor1321, %789, !dbg !526
  %790 = load i32, i32* %t, align 4, !dbg !526
  %shr1327 = lshr i32 %790, 10, !dbg !526
  %and1328 = and i32 %shr1327, 63, !dbg !526
  %idxprom1329 = zext i32 %and1328 to i64, !dbg !526
  %arrayidx1330 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1329, !dbg !526
  %791 = load i32, i32* %arrayidx1330, align 4, !dbg !526
  %xor1331 = xor i32 %xor1326, %791, !dbg !526
  %792 = load i32, i32* %t, align 4, !dbg !526
  %shr1332 = lshr i32 %792, 18, !dbg !526
  %and1333 = and i32 %shr1332, 63, !dbg !526
  %idxprom1334 = zext i32 %and1333 to i64, !dbg !526
  %arrayidx1335 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1334, !dbg !526
  %793 = load i32, i32* %arrayidx1335, align 4, !dbg !526
  %xor1336 = xor i32 %xor1331, %793, !dbg !526
  %794 = load i32, i32* %t, align 4, !dbg !526
  %shr1337 = lshr i32 %794, 26, !dbg !526
  %and1338 = and i32 %shr1337, 63, !dbg !526
  %idxprom1339 = zext i32 %and1338 to i64, !dbg !526
  %arrayidx1340 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1339, !dbg !526
  %795 = load i32, i32* %arrayidx1340, align 4, !dbg !526
  %xor1341 = xor i32 %xor1336, %795, !dbg !526
  %796 = load i32, i32* %l, align 4, !dbg !526
  %xor1342 = xor i32 %796, %xor1341, !dbg !526
  store i32 %xor1342, i32* %l, align 4, !dbg !526
  %797 = load i32, i32* %l, align 4, !dbg !532
  %798 = load i32*, i32** %s, align 8, !dbg !532
  %arrayidx1343 = getelementptr inbounds i32, i32* %798, i64 4, !dbg !532
  %799 = load i32, i32* %arrayidx1343, align 4, !dbg !532
  %xor1344 = xor i32 %797, %799, !dbg !532
  store i32 %xor1344, i32* %u, align 4, !dbg !532
  %800 = load i32, i32* %l, align 4, !dbg !532
  %801 = load i32*, i32** %s, align 8, !dbg !532
  %arrayidx1345 = getelementptr inbounds i32, i32* %801, i64 5, !dbg !532
  %802 = load i32, i32* %arrayidx1345, align 4, !dbg !532
  %xor1346 = xor i32 %800, %802, !dbg !532
  store i32 %xor1346, i32* %t, align 4, !dbg !532
  call void @llvm.dbg.declare(metadata i32* %ret1347, metadata !534, metadata !DIExpression()), !dbg !536
  %803 = load i32, i32* %t, align 4, !dbg !536
  %804 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %803) #7, !dbg !536, !srcloc !537
  store i32 %804, i32* %ret1347, align 4, !dbg !536
  %805 = load i32, i32* %ret1347, align 4, !dbg !536
  store i32 %805, i32* %tmp1348, align 4, !dbg !536
  %806 = load i32, i32* %tmp1348, align 4, !dbg !536
  store i32 %806, i32* %t, align 4, !dbg !532
  %807 = load i32, i32* %u, align 4, !dbg !532
  %shr1349 = lshr i32 %807, 2, !dbg !532
  %and1350 = and i32 %shr1349, 63, !dbg !532
  %idxprom1351 = zext i32 %and1350 to i64, !dbg !532
  %arrayidx1352 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1351, !dbg !532
  %808 = load i32, i32* %arrayidx1352, align 4, !dbg !532
  %809 = load i32, i32* %u, align 4, !dbg !532
  %shr1353 = lshr i32 %809, 10, !dbg !532
  %and1354 = and i32 %shr1353, 63, !dbg !532
  %idxprom1355 = zext i32 %and1354 to i64, !dbg !532
  %arrayidx1356 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1355, !dbg !532
  %810 = load i32, i32* %arrayidx1356, align 4, !dbg !532
  %xor1357 = xor i32 %808, %810, !dbg !532
  %811 = load i32, i32* %u, align 4, !dbg !532
  %shr1358 = lshr i32 %811, 18, !dbg !532
  %and1359 = and i32 %shr1358, 63, !dbg !532
  %idxprom1360 = zext i32 %and1359 to i64, !dbg !532
  %arrayidx1361 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1360, !dbg !532
  %812 = load i32, i32* %arrayidx1361, align 4, !dbg !532
  %xor1362 = xor i32 %xor1357, %812, !dbg !532
  %813 = load i32, i32* %u, align 4, !dbg !532
  %shr1363 = lshr i32 %813, 26, !dbg !532
  %and1364 = and i32 %shr1363, 63, !dbg !532
  %idxprom1365 = zext i32 %and1364 to i64, !dbg !532
  %arrayidx1366 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1365, !dbg !532
  %814 = load i32, i32* %arrayidx1366, align 4, !dbg !532
  %xor1367 = xor i32 %xor1362, %814, !dbg !532
  %815 = load i32, i32* %t, align 4, !dbg !532
  %shr1368 = lshr i32 %815, 2, !dbg !532
  %and1369 = and i32 %shr1368, 63, !dbg !532
  %idxprom1370 = zext i32 %and1369 to i64, !dbg !532
  %arrayidx1371 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1370, !dbg !532
  %816 = load i32, i32* %arrayidx1371, align 4, !dbg !532
  %xor1372 = xor i32 %xor1367, %816, !dbg !532
  %817 = load i32, i32* %t, align 4, !dbg !532
  %shr1373 = lshr i32 %817, 10, !dbg !532
  %and1374 = and i32 %shr1373, 63, !dbg !532
  %idxprom1375 = zext i32 %and1374 to i64, !dbg !532
  %arrayidx1376 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1375, !dbg !532
  %818 = load i32, i32* %arrayidx1376, align 4, !dbg !532
  %xor1377 = xor i32 %xor1372, %818, !dbg !532
  %819 = load i32, i32* %t, align 4, !dbg !532
  %shr1378 = lshr i32 %819, 18, !dbg !532
  %and1379 = and i32 %shr1378, 63, !dbg !532
  %idxprom1380 = zext i32 %and1379 to i64, !dbg !532
  %arrayidx1381 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1380, !dbg !532
  %820 = load i32, i32* %arrayidx1381, align 4, !dbg !532
  %xor1382 = xor i32 %xor1377, %820, !dbg !532
  %821 = load i32, i32* %t, align 4, !dbg !532
  %shr1383 = lshr i32 %821, 26, !dbg !532
  %and1384 = and i32 %shr1383, 63, !dbg !532
  %idxprom1385 = zext i32 %and1384 to i64, !dbg !532
  %arrayidx1386 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1385, !dbg !532
  %822 = load i32, i32* %arrayidx1386, align 4, !dbg !532
  %xor1387 = xor i32 %xor1382, %822, !dbg !532
  %823 = load i32, i32* %r, align 4, !dbg !532
  %xor1388 = xor i32 %823, %xor1387, !dbg !532
  store i32 %xor1388, i32* %r, align 4, !dbg !532
  %824 = load i32, i32* %r, align 4, !dbg !538
  %825 = load i32*, i32** %s, align 8, !dbg !538
  %arrayidx1389 = getelementptr inbounds i32, i32* %825, i64 2, !dbg !538
  %826 = load i32, i32* %arrayidx1389, align 4, !dbg !538
  %xor1390 = xor i32 %824, %826, !dbg !538
  store i32 %xor1390, i32* %u, align 4, !dbg !538
  %827 = load i32, i32* %r, align 4, !dbg !538
  %828 = load i32*, i32** %s, align 8, !dbg !538
  %arrayidx1391 = getelementptr inbounds i32, i32* %828, i64 3, !dbg !538
  %829 = load i32, i32* %arrayidx1391, align 4, !dbg !538
  %xor1392 = xor i32 %827, %829, !dbg !538
  store i32 %xor1392, i32* %t, align 4, !dbg !538
  call void @llvm.dbg.declare(metadata i32* %ret1393, metadata !540, metadata !DIExpression()), !dbg !542
  %830 = load i32, i32* %t, align 4, !dbg !542
  %831 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %830) #7, !dbg !542, !srcloc !543
  store i32 %831, i32* %ret1393, align 4, !dbg !542
  %832 = load i32, i32* %ret1393, align 4, !dbg !542
  store i32 %832, i32* %tmp1394, align 4, !dbg !542
  %833 = load i32, i32* %tmp1394, align 4, !dbg !542
  store i32 %833, i32* %t, align 4, !dbg !538
  %834 = load i32, i32* %u, align 4, !dbg !538
  %shr1395 = lshr i32 %834, 2, !dbg !538
  %and1396 = and i32 %shr1395, 63, !dbg !538
  %idxprom1397 = zext i32 %and1396 to i64, !dbg !538
  %arrayidx1398 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1397, !dbg !538
  %835 = load i32, i32* %arrayidx1398, align 4, !dbg !538
  %836 = load i32, i32* %u, align 4, !dbg !538
  %shr1399 = lshr i32 %836, 10, !dbg !538
  %and1400 = and i32 %shr1399, 63, !dbg !538
  %idxprom1401 = zext i32 %and1400 to i64, !dbg !538
  %arrayidx1402 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1401, !dbg !538
  %837 = load i32, i32* %arrayidx1402, align 4, !dbg !538
  %xor1403 = xor i32 %835, %837, !dbg !538
  %838 = load i32, i32* %u, align 4, !dbg !538
  %shr1404 = lshr i32 %838, 18, !dbg !538
  %and1405 = and i32 %shr1404, 63, !dbg !538
  %idxprom1406 = zext i32 %and1405 to i64, !dbg !538
  %arrayidx1407 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1406, !dbg !538
  %839 = load i32, i32* %arrayidx1407, align 4, !dbg !538
  %xor1408 = xor i32 %xor1403, %839, !dbg !538
  %840 = load i32, i32* %u, align 4, !dbg !538
  %shr1409 = lshr i32 %840, 26, !dbg !538
  %and1410 = and i32 %shr1409, 63, !dbg !538
  %idxprom1411 = zext i32 %and1410 to i64, !dbg !538
  %arrayidx1412 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1411, !dbg !538
  %841 = load i32, i32* %arrayidx1412, align 4, !dbg !538
  %xor1413 = xor i32 %xor1408, %841, !dbg !538
  %842 = load i32, i32* %t, align 4, !dbg !538
  %shr1414 = lshr i32 %842, 2, !dbg !538
  %and1415 = and i32 %shr1414, 63, !dbg !538
  %idxprom1416 = zext i32 %and1415 to i64, !dbg !538
  %arrayidx1417 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1416, !dbg !538
  %843 = load i32, i32* %arrayidx1417, align 4, !dbg !538
  %xor1418 = xor i32 %xor1413, %843, !dbg !538
  %844 = load i32, i32* %t, align 4, !dbg !538
  %shr1419 = lshr i32 %844, 10, !dbg !538
  %and1420 = and i32 %shr1419, 63, !dbg !538
  %idxprom1421 = zext i32 %and1420 to i64, !dbg !538
  %arrayidx1422 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1421, !dbg !538
  %845 = load i32, i32* %arrayidx1422, align 4, !dbg !538
  %xor1423 = xor i32 %xor1418, %845, !dbg !538
  %846 = load i32, i32* %t, align 4, !dbg !538
  %shr1424 = lshr i32 %846, 18, !dbg !538
  %and1425 = and i32 %shr1424, 63, !dbg !538
  %idxprom1426 = zext i32 %and1425 to i64, !dbg !538
  %arrayidx1427 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1426, !dbg !538
  %847 = load i32, i32* %arrayidx1427, align 4, !dbg !538
  %xor1428 = xor i32 %xor1423, %847, !dbg !538
  %848 = load i32, i32* %t, align 4, !dbg !538
  %shr1429 = lshr i32 %848, 26, !dbg !538
  %and1430 = and i32 %shr1429, 63, !dbg !538
  %idxprom1431 = zext i32 %and1430 to i64, !dbg !538
  %arrayidx1432 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1431, !dbg !538
  %849 = load i32, i32* %arrayidx1432, align 4, !dbg !538
  %xor1433 = xor i32 %xor1428, %849, !dbg !538
  %850 = load i32, i32* %l, align 4, !dbg !538
  %xor1434 = xor i32 %850, %xor1433, !dbg !538
  store i32 %xor1434, i32* %l, align 4, !dbg !538
  %851 = load i32, i32* %l, align 4, !dbg !544
  %852 = load i32*, i32** %s, align 8, !dbg !544
  %arrayidx1435 = getelementptr inbounds i32, i32* %852, i64 0, !dbg !544
  %853 = load i32, i32* %arrayidx1435, align 4, !dbg !544
  %xor1436 = xor i32 %851, %853, !dbg !544
  store i32 %xor1436, i32* %u, align 4, !dbg !544
  %854 = load i32, i32* %l, align 4, !dbg !544
  %855 = load i32*, i32** %s, align 8, !dbg !544
  %arrayidx1437 = getelementptr inbounds i32, i32* %855, i64 1, !dbg !544
  %856 = load i32, i32* %arrayidx1437, align 4, !dbg !544
  %xor1438 = xor i32 %854, %856, !dbg !544
  store i32 %xor1438, i32* %t, align 4, !dbg !544
  call void @llvm.dbg.declare(metadata i32* %ret1439, metadata !546, metadata !DIExpression()), !dbg !548
  %857 = load i32, i32* %t, align 4, !dbg !548
  %858 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %857) #7, !dbg !548, !srcloc !549
  store i32 %858, i32* %ret1439, align 4, !dbg !548
  %859 = load i32, i32* %ret1439, align 4, !dbg !548
  store i32 %859, i32* %tmp1440, align 4, !dbg !548
  %860 = load i32, i32* %tmp1440, align 4, !dbg !548
  store i32 %860, i32* %t, align 4, !dbg !544
  %861 = load i32, i32* %u, align 4, !dbg !544
  %shr1441 = lshr i32 %861, 2, !dbg !544
  %and1442 = and i32 %shr1441, 63, !dbg !544
  %idxprom1443 = zext i32 %and1442 to i64, !dbg !544
  %arrayidx1444 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1443, !dbg !544
  %862 = load i32, i32* %arrayidx1444, align 4, !dbg !544
  %863 = load i32, i32* %u, align 4, !dbg !544
  %shr1445 = lshr i32 %863, 10, !dbg !544
  %and1446 = and i32 %shr1445, 63, !dbg !544
  %idxprom1447 = zext i32 %and1446 to i64, !dbg !544
  %arrayidx1448 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1447, !dbg !544
  %864 = load i32, i32* %arrayidx1448, align 4, !dbg !544
  %xor1449 = xor i32 %862, %864, !dbg !544
  %865 = load i32, i32* %u, align 4, !dbg !544
  %shr1450 = lshr i32 %865, 18, !dbg !544
  %and1451 = and i32 %shr1450, 63, !dbg !544
  %idxprom1452 = zext i32 %and1451 to i64, !dbg !544
  %arrayidx1453 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1452, !dbg !544
  %866 = load i32, i32* %arrayidx1453, align 4, !dbg !544
  %xor1454 = xor i32 %xor1449, %866, !dbg !544
  %867 = load i32, i32* %u, align 4, !dbg !544
  %shr1455 = lshr i32 %867, 26, !dbg !544
  %and1456 = and i32 %shr1455, 63, !dbg !544
  %idxprom1457 = zext i32 %and1456 to i64, !dbg !544
  %arrayidx1458 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1457, !dbg !544
  %868 = load i32, i32* %arrayidx1458, align 4, !dbg !544
  %xor1459 = xor i32 %xor1454, %868, !dbg !544
  %869 = load i32, i32* %t, align 4, !dbg !544
  %shr1460 = lshr i32 %869, 2, !dbg !544
  %and1461 = and i32 %shr1460, 63, !dbg !544
  %idxprom1462 = zext i32 %and1461 to i64, !dbg !544
  %arrayidx1463 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1462, !dbg !544
  %870 = load i32, i32* %arrayidx1463, align 4, !dbg !544
  %xor1464 = xor i32 %xor1459, %870, !dbg !544
  %871 = load i32, i32* %t, align 4, !dbg !544
  %shr1465 = lshr i32 %871, 10, !dbg !544
  %and1466 = and i32 %shr1465, 63, !dbg !544
  %idxprom1467 = zext i32 %and1466 to i64, !dbg !544
  %arrayidx1468 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1467, !dbg !544
  %872 = load i32, i32* %arrayidx1468, align 4, !dbg !544
  %xor1469 = xor i32 %xor1464, %872, !dbg !544
  %873 = load i32, i32* %t, align 4, !dbg !544
  %shr1470 = lshr i32 %873, 18, !dbg !544
  %and1471 = and i32 %shr1470, 63, !dbg !544
  %idxprom1472 = zext i32 %and1471 to i64, !dbg !544
  %arrayidx1473 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1472, !dbg !544
  %874 = load i32, i32* %arrayidx1473, align 4, !dbg !544
  %xor1474 = xor i32 %xor1469, %874, !dbg !544
  %875 = load i32, i32* %t, align 4, !dbg !544
  %shr1475 = lshr i32 %875, 26, !dbg !544
  %and1476 = and i32 %shr1475, 63, !dbg !544
  %idxprom1477 = zext i32 %and1476 to i64, !dbg !544
  %arrayidx1478 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1477, !dbg !544
  %876 = load i32, i32* %arrayidx1478, align 4, !dbg !544
  %xor1479 = xor i32 %xor1474, %876, !dbg !544
  %877 = load i32, i32* %r, align 4, !dbg !544
  %xor1480 = xor i32 %877, %xor1479, !dbg !544
  store i32 %xor1480, i32* %r, align 4, !dbg !544
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.declare(metadata i32* %ret1481, metadata !550, metadata !DIExpression()), !dbg !552
  %878 = load i32, i32* %l, align 4, !dbg !552
  %879 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %878) #7, !dbg !552, !srcloc !553
  store i32 %879, i32* %ret1481, align 4, !dbg !552
  %880 = load i32, i32* %ret1481, align 4, !dbg !552
  store i32 %880, i32* %tmp1482, align 4, !dbg !552
  %881 = load i32, i32* %tmp1482, align 4, !dbg !552
  %conv1483 = zext i32 %881 to i64, !dbg !554
  %and1484 = and i64 %conv1483, 4294967295, !dbg !555
  %conv1485 = trunc i64 %and1484 to i32, !dbg !554
  %882 = load i32*, i32** %data.addr, align 8, !dbg !556
  %arrayidx1486 = getelementptr inbounds i32, i32* %882, i64 0, !dbg !556
  store i32 %conv1485, i32* %arrayidx1486, align 4, !dbg !557
  call void @llvm.dbg.declare(metadata i32* %ret1487, metadata !558, metadata !DIExpression()), !dbg !560
  %883 = load i32, i32* %r, align 4, !dbg !560
  %884 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %883) #7, !dbg !560, !srcloc !561
  store i32 %884, i32* %ret1487, align 4, !dbg !560
  %885 = load i32, i32* %ret1487, align 4, !dbg !560
  store i32 %885, i32* %tmp1488, align 4, !dbg !560
  %886 = load i32, i32* %tmp1488, align 4, !dbg !560
  %conv1489 = zext i32 %886 to i64, !dbg !562
  %and1490 = and i64 %conv1489, 4294967295, !dbg !563
  %conv1491 = trunc i64 %and1490 to i32, !dbg !562
  %887 = load i32*, i32** %data.addr, align 8, !dbg !564
  %arrayidx1492 = getelementptr inbounds i32, i32* %887, i64 1, !dbg !564
  store i32 %conv1491, i32* %arrayidx1492, align 4, !dbg !565
  store i32 0, i32* %u, align 4, !dbg !566
  store i32 0, i32* %t, align 4, !dbg !567
  store i32 0, i32* %r, align 4, !dbg !568
  store i32 0, i32* %l, align 4, !dbg !569
  ret void, !dbg !570
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_encrypt3(i32* %data, %struct.DES_ks* %ks1, %struct.DES_ks* %ks2, %struct.DES_ks* %ks3) #3 !dbg !571 {
entry:
  %data.addr = alloca i32*, align 8
  %ks1.addr = alloca %struct.DES_ks*, align 8
  %ks2.addr = alloca %struct.DES_ks*, align 8
  %ks3.addr = alloca %struct.DES_ks*, align 8
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %tt = alloca i32, align 4
  %tt41 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !574, metadata !DIExpression()), !dbg !575
  store %struct.DES_ks* %ks1, %struct.DES_ks** %ks1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks1.addr, metadata !576, metadata !DIExpression()), !dbg !577
  store %struct.DES_ks* %ks2, %struct.DES_ks** %ks2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks2.addr, metadata !578, metadata !DIExpression()), !dbg !579
  store %struct.DES_ks* %ks3, %struct.DES_ks** %ks3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks3.addr, metadata !580, metadata !DIExpression()), !dbg !581
  call void @llvm.dbg.declare(metadata i32* %l, metadata !582, metadata !DIExpression()), !dbg !583
  call void @llvm.dbg.declare(metadata i32* %r, metadata !584, metadata !DIExpression()), !dbg !585
  %0 = load i32*, i32** %data.addr, align 8, !dbg !586
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !586
  %1 = load i32, i32* %arrayidx, align 4, !dbg !586
  store i32 %1, i32* %l, align 4, !dbg !587
  %2 = load i32*, i32** %data.addr, align 8, !dbg !588
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !588
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !588
  store i32 %3, i32* %r, align 4, !dbg !589
  call void @llvm.dbg.declare(metadata i32* %tt, metadata !590, metadata !DIExpression()), !dbg !592
  %4 = load i32, i32* %r, align 4, !dbg !592
  %shr = lshr i32 %4, 4, !dbg !592
  %5 = load i32, i32* %l, align 4, !dbg !592
  %xor = xor i32 %shr, %5, !dbg !592
  %conv = zext i32 %xor to i64, !dbg !592
  %and = and i64 %conv, 252645135, !dbg !592
  %conv2 = trunc i64 %and to i32, !dbg !592
  store i32 %conv2, i32* %tt, align 4, !dbg !592
  %6 = load i32, i32* %tt, align 4, !dbg !592
  %7 = load i32, i32* %l, align 4, !dbg !592
  %xor3 = xor i32 %7, %6, !dbg !592
  store i32 %xor3, i32* %l, align 4, !dbg !592
  %8 = load i32, i32* %tt, align 4, !dbg !592
  %shl = shl i32 %8, 4, !dbg !592
  %9 = load i32, i32* %r, align 4, !dbg !592
  %xor4 = xor i32 %9, %shl, !dbg !592
  store i32 %xor4, i32* %r, align 4, !dbg !592
  %10 = load i32, i32* %l, align 4, !dbg !592
  %shr5 = lshr i32 %10, 16, !dbg !592
  %11 = load i32, i32* %r, align 4, !dbg !592
  %xor6 = xor i32 %shr5, %11, !dbg !592
  %conv7 = zext i32 %xor6 to i64, !dbg !592
  %and8 = and i64 %conv7, 65535, !dbg !592
  %conv9 = trunc i64 %and8 to i32, !dbg !592
  store i32 %conv9, i32* %tt, align 4, !dbg !592
  %12 = load i32, i32* %tt, align 4, !dbg !592
  %13 = load i32, i32* %r, align 4, !dbg !592
  %xor10 = xor i32 %13, %12, !dbg !592
  store i32 %xor10, i32* %r, align 4, !dbg !592
  %14 = load i32, i32* %tt, align 4, !dbg !592
  %shl11 = shl i32 %14, 16, !dbg !592
  %15 = load i32, i32* %l, align 4, !dbg !592
  %xor12 = xor i32 %15, %shl11, !dbg !592
  store i32 %xor12, i32* %l, align 4, !dbg !592
  %16 = load i32, i32* %r, align 4, !dbg !592
  %shr13 = lshr i32 %16, 2, !dbg !592
  %17 = load i32, i32* %l, align 4, !dbg !592
  %xor14 = xor i32 %shr13, %17, !dbg !592
  %conv15 = zext i32 %xor14 to i64, !dbg !592
  %and16 = and i64 %conv15, 858993459, !dbg !592
  %conv17 = trunc i64 %and16 to i32, !dbg !592
  store i32 %conv17, i32* %tt, align 4, !dbg !592
  %18 = load i32, i32* %tt, align 4, !dbg !592
  %19 = load i32, i32* %l, align 4, !dbg !592
  %xor18 = xor i32 %19, %18, !dbg !592
  store i32 %xor18, i32* %l, align 4, !dbg !592
  %20 = load i32, i32* %tt, align 4, !dbg !592
  %shl19 = shl i32 %20, 2, !dbg !592
  %21 = load i32, i32* %r, align 4, !dbg !592
  %xor20 = xor i32 %21, %shl19, !dbg !592
  store i32 %xor20, i32* %r, align 4, !dbg !592
  %22 = load i32, i32* %l, align 4, !dbg !592
  %shr21 = lshr i32 %22, 8, !dbg !592
  %23 = load i32, i32* %r, align 4, !dbg !592
  %xor22 = xor i32 %shr21, %23, !dbg !592
  %conv23 = zext i32 %xor22 to i64, !dbg !592
  %and24 = and i64 %conv23, 16711935, !dbg !592
  %conv25 = trunc i64 %and24 to i32, !dbg !592
  store i32 %conv25, i32* %tt, align 4, !dbg !592
  %24 = load i32, i32* %tt, align 4, !dbg !592
  %25 = load i32, i32* %r, align 4, !dbg !592
  %xor26 = xor i32 %25, %24, !dbg !592
  store i32 %xor26, i32* %r, align 4, !dbg !592
  %26 = load i32, i32* %tt, align 4, !dbg !592
  %shl27 = shl i32 %26, 8, !dbg !592
  %27 = load i32, i32* %l, align 4, !dbg !592
  %xor28 = xor i32 %27, %shl27, !dbg !592
  store i32 %xor28, i32* %l, align 4, !dbg !592
  %28 = load i32, i32* %r, align 4, !dbg !592
  %shr29 = lshr i32 %28, 1, !dbg !592
  %29 = load i32, i32* %l, align 4, !dbg !592
  %xor30 = xor i32 %shr29, %29, !dbg !592
  %conv31 = zext i32 %xor30 to i64, !dbg !592
  %and32 = and i64 %conv31, 1431655765, !dbg !592
  %conv33 = trunc i64 %and32 to i32, !dbg !592
  store i32 %conv33, i32* %tt, align 4, !dbg !592
  %30 = load i32, i32* %tt, align 4, !dbg !592
  %31 = load i32, i32* %l, align 4, !dbg !592
  %xor34 = xor i32 %31, %30, !dbg !592
  store i32 %xor34, i32* %l, align 4, !dbg !592
  %32 = load i32, i32* %tt, align 4, !dbg !592
  %shl35 = shl i32 %32, 1, !dbg !592
  %33 = load i32, i32* %r, align 4, !dbg !592
  %xor36 = xor i32 %33, %shl35, !dbg !592
  store i32 %xor36, i32* %r, align 4, !dbg !592
  %34 = load i32, i32* %l, align 4, !dbg !593
  %35 = load i32*, i32** %data.addr, align 8, !dbg !594
  %arrayidx37 = getelementptr inbounds i32, i32* %35, i64 0, !dbg !594
  store i32 %34, i32* %arrayidx37, align 4, !dbg !595
  %36 = load i32, i32* %r, align 4, !dbg !596
  %37 = load i32*, i32** %data.addr, align 8, !dbg !597
  %arrayidx38 = getelementptr inbounds i32, i32* %37, i64 1, !dbg !597
  store i32 %36, i32* %arrayidx38, align 4, !dbg !598
  %38 = load i32*, i32** %data.addr, align 8, !dbg !599
  %39 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !600
  call void @DES_encrypt2(i32* %38, %struct.DES_ks* %39, i32 1), !dbg !601
  %40 = load i32*, i32** %data.addr, align 8, !dbg !602
  %41 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !603
  call void @DES_encrypt2(i32* %40, %struct.DES_ks* %41, i32 0), !dbg !604
  %42 = load i32*, i32** %data.addr, align 8, !dbg !605
  %43 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !606
  call void @DES_encrypt2(i32* %42, %struct.DES_ks* %43, i32 1), !dbg !607
  %44 = load i32*, i32** %data.addr, align 8, !dbg !608
  %arrayidx39 = getelementptr inbounds i32, i32* %44, i64 0, !dbg !608
  %45 = load i32, i32* %arrayidx39, align 4, !dbg !608
  store i32 %45, i32* %l, align 4, !dbg !609
  %46 = load i32*, i32** %data.addr, align 8, !dbg !610
  %arrayidx40 = getelementptr inbounds i32, i32* %46, i64 1, !dbg !610
  %47 = load i32, i32* %arrayidx40, align 4, !dbg !610
  store i32 %47, i32* %r, align 4, !dbg !611
  call void @llvm.dbg.declare(metadata i32* %tt41, metadata !612, metadata !DIExpression()), !dbg !614
  %48 = load i32, i32* %r, align 4, !dbg !614
  %shr42 = lshr i32 %48, 1, !dbg !614
  %49 = load i32, i32* %l, align 4, !dbg !614
  %xor43 = xor i32 %shr42, %49, !dbg !614
  %conv44 = zext i32 %xor43 to i64, !dbg !614
  %and45 = and i64 %conv44, 1431655765, !dbg !614
  %conv46 = trunc i64 %and45 to i32, !dbg !614
  store i32 %conv46, i32* %tt41, align 4, !dbg !614
  %50 = load i32, i32* %tt41, align 4, !dbg !614
  %51 = load i32, i32* %l, align 4, !dbg !614
  %xor47 = xor i32 %51, %50, !dbg !614
  store i32 %xor47, i32* %l, align 4, !dbg !614
  %52 = load i32, i32* %tt41, align 4, !dbg !614
  %shl48 = shl i32 %52, 1, !dbg !614
  %53 = load i32, i32* %r, align 4, !dbg !614
  %xor49 = xor i32 %53, %shl48, !dbg !614
  store i32 %xor49, i32* %r, align 4, !dbg !614
  %54 = load i32, i32* %l, align 4, !dbg !614
  %shr50 = lshr i32 %54, 8, !dbg !614
  %55 = load i32, i32* %r, align 4, !dbg !614
  %xor51 = xor i32 %shr50, %55, !dbg !614
  %conv52 = zext i32 %xor51 to i64, !dbg !614
  %and53 = and i64 %conv52, 16711935, !dbg !614
  %conv54 = trunc i64 %and53 to i32, !dbg !614
  store i32 %conv54, i32* %tt41, align 4, !dbg !614
  %56 = load i32, i32* %tt41, align 4, !dbg !614
  %57 = load i32, i32* %r, align 4, !dbg !614
  %xor55 = xor i32 %57, %56, !dbg !614
  store i32 %xor55, i32* %r, align 4, !dbg !614
  %58 = load i32, i32* %tt41, align 4, !dbg !614
  %shl56 = shl i32 %58, 8, !dbg !614
  %59 = load i32, i32* %l, align 4, !dbg !614
  %xor57 = xor i32 %59, %shl56, !dbg !614
  store i32 %xor57, i32* %l, align 4, !dbg !614
  %60 = load i32, i32* %r, align 4, !dbg !614
  %shr58 = lshr i32 %60, 2, !dbg !614
  %61 = load i32, i32* %l, align 4, !dbg !614
  %xor59 = xor i32 %shr58, %61, !dbg !614
  %conv60 = zext i32 %xor59 to i64, !dbg !614
  %and61 = and i64 %conv60, 858993459, !dbg !614
  %conv62 = trunc i64 %and61 to i32, !dbg !614
  store i32 %conv62, i32* %tt41, align 4, !dbg !614
  %62 = load i32, i32* %tt41, align 4, !dbg !614
  %63 = load i32, i32* %l, align 4, !dbg !614
  %xor63 = xor i32 %63, %62, !dbg !614
  store i32 %xor63, i32* %l, align 4, !dbg !614
  %64 = load i32, i32* %tt41, align 4, !dbg !614
  %shl64 = shl i32 %64, 2, !dbg !614
  %65 = load i32, i32* %r, align 4, !dbg !614
  %xor65 = xor i32 %65, %shl64, !dbg !614
  store i32 %xor65, i32* %r, align 4, !dbg !614
  %66 = load i32, i32* %l, align 4, !dbg !614
  %shr66 = lshr i32 %66, 16, !dbg !614
  %67 = load i32, i32* %r, align 4, !dbg !614
  %xor67 = xor i32 %shr66, %67, !dbg !614
  %conv68 = zext i32 %xor67 to i64, !dbg !614
  %and69 = and i64 %conv68, 65535, !dbg !614
  %conv70 = trunc i64 %and69 to i32, !dbg !614
  store i32 %conv70, i32* %tt41, align 4, !dbg !614
  %68 = load i32, i32* %tt41, align 4, !dbg !614
  %69 = load i32, i32* %r, align 4, !dbg !614
  %xor71 = xor i32 %69, %68, !dbg !614
  store i32 %xor71, i32* %r, align 4, !dbg !614
  %70 = load i32, i32* %tt41, align 4, !dbg !614
  %shl72 = shl i32 %70, 16, !dbg !614
  %71 = load i32, i32* %l, align 4, !dbg !614
  %xor73 = xor i32 %71, %shl72, !dbg !614
  store i32 %xor73, i32* %l, align 4, !dbg !614
  %72 = load i32, i32* %r, align 4, !dbg !614
  %shr74 = lshr i32 %72, 4, !dbg !614
  %73 = load i32, i32* %l, align 4, !dbg !614
  %xor75 = xor i32 %shr74, %73, !dbg !614
  %conv76 = zext i32 %xor75 to i64, !dbg !614
  %and77 = and i64 %conv76, 252645135, !dbg !614
  %conv78 = trunc i64 %and77 to i32, !dbg !614
  store i32 %conv78, i32* %tt41, align 4, !dbg !614
  %74 = load i32, i32* %tt41, align 4, !dbg !614
  %75 = load i32, i32* %l, align 4, !dbg !614
  %xor79 = xor i32 %75, %74, !dbg !614
  store i32 %xor79, i32* %l, align 4, !dbg !614
  %76 = load i32, i32* %tt41, align 4, !dbg !614
  %shl80 = shl i32 %76, 4, !dbg !614
  %77 = load i32, i32* %r, align 4, !dbg !614
  %xor81 = xor i32 %77, %shl80, !dbg !614
  store i32 %xor81, i32* %r, align 4, !dbg !614
  %78 = load i32, i32* %l, align 4, !dbg !615
  %79 = load i32*, i32** %data.addr, align 8, !dbg !616
  %arrayidx82 = getelementptr inbounds i32, i32* %79, i64 0, !dbg !616
  store i32 %78, i32* %arrayidx82, align 4, !dbg !617
  %80 = load i32, i32* %r, align 4, !dbg !618
  %81 = load i32*, i32** %data.addr, align 8, !dbg !619
  %arrayidx83 = getelementptr inbounds i32, i32* %81, i64 1, !dbg !619
  store i32 %80, i32* %arrayidx83, align 4, !dbg !620
  ret void, !dbg !621
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_decrypt3(i32* %data, %struct.DES_ks* %ks1, %struct.DES_ks* %ks2, %struct.DES_ks* %ks3) #3 !dbg !622 {
entry:
  %data.addr = alloca i32*, align 8
  %ks1.addr = alloca %struct.DES_ks*, align 8
  %ks2.addr = alloca %struct.DES_ks*, align 8
  %ks3.addr = alloca %struct.DES_ks*, align 8
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %tt = alloca i32, align 4
  %tt41 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !623, metadata !DIExpression()), !dbg !624
  store %struct.DES_ks* %ks1, %struct.DES_ks** %ks1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks1.addr, metadata !625, metadata !DIExpression()), !dbg !626
  store %struct.DES_ks* %ks2, %struct.DES_ks** %ks2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks2.addr, metadata !627, metadata !DIExpression()), !dbg !628
  store %struct.DES_ks* %ks3, %struct.DES_ks** %ks3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks3.addr, metadata !629, metadata !DIExpression()), !dbg !630
  call void @llvm.dbg.declare(metadata i32* %l, metadata !631, metadata !DIExpression()), !dbg !632
  call void @llvm.dbg.declare(metadata i32* %r, metadata !633, metadata !DIExpression()), !dbg !634
  %0 = load i32*, i32** %data.addr, align 8, !dbg !635
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !635
  %1 = load i32, i32* %arrayidx, align 4, !dbg !635
  store i32 %1, i32* %l, align 4, !dbg !636
  %2 = load i32*, i32** %data.addr, align 8, !dbg !637
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !637
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !637
  store i32 %3, i32* %r, align 4, !dbg !638
  call void @llvm.dbg.declare(metadata i32* %tt, metadata !639, metadata !DIExpression()), !dbg !641
  %4 = load i32, i32* %r, align 4, !dbg !641
  %shr = lshr i32 %4, 4, !dbg !641
  %5 = load i32, i32* %l, align 4, !dbg !641
  %xor = xor i32 %shr, %5, !dbg !641
  %conv = zext i32 %xor to i64, !dbg !641
  %and = and i64 %conv, 252645135, !dbg !641
  %conv2 = trunc i64 %and to i32, !dbg !641
  store i32 %conv2, i32* %tt, align 4, !dbg !641
  %6 = load i32, i32* %tt, align 4, !dbg !641
  %7 = load i32, i32* %l, align 4, !dbg !641
  %xor3 = xor i32 %7, %6, !dbg !641
  store i32 %xor3, i32* %l, align 4, !dbg !641
  %8 = load i32, i32* %tt, align 4, !dbg !641
  %shl = shl i32 %8, 4, !dbg !641
  %9 = load i32, i32* %r, align 4, !dbg !641
  %xor4 = xor i32 %9, %shl, !dbg !641
  store i32 %xor4, i32* %r, align 4, !dbg !641
  %10 = load i32, i32* %l, align 4, !dbg !641
  %shr5 = lshr i32 %10, 16, !dbg !641
  %11 = load i32, i32* %r, align 4, !dbg !641
  %xor6 = xor i32 %shr5, %11, !dbg !641
  %conv7 = zext i32 %xor6 to i64, !dbg !641
  %and8 = and i64 %conv7, 65535, !dbg !641
  %conv9 = trunc i64 %and8 to i32, !dbg !641
  store i32 %conv9, i32* %tt, align 4, !dbg !641
  %12 = load i32, i32* %tt, align 4, !dbg !641
  %13 = load i32, i32* %r, align 4, !dbg !641
  %xor10 = xor i32 %13, %12, !dbg !641
  store i32 %xor10, i32* %r, align 4, !dbg !641
  %14 = load i32, i32* %tt, align 4, !dbg !641
  %shl11 = shl i32 %14, 16, !dbg !641
  %15 = load i32, i32* %l, align 4, !dbg !641
  %xor12 = xor i32 %15, %shl11, !dbg !641
  store i32 %xor12, i32* %l, align 4, !dbg !641
  %16 = load i32, i32* %r, align 4, !dbg !641
  %shr13 = lshr i32 %16, 2, !dbg !641
  %17 = load i32, i32* %l, align 4, !dbg !641
  %xor14 = xor i32 %shr13, %17, !dbg !641
  %conv15 = zext i32 %xor14 to i64, !dbg !641
  %and16 = and i64 %conv15, 858993459, !dbg !641
  %conv17 = trunc i64 %and16 to i32, !dbg !641
  store i32 %conv17, i32* %tt, align 4, !dbg !641
  %18 = load i32, i32* %tt, align 4, !dbg !641
  %19 = load i32, i32* %l, align 4, !dbg !641
  %xor18 = xor i32 %19, %18, !dbg !641
  store i32 %xor18, i32* %l, align 4, !dbg !641
  %20 = load i32, i32* %tt, align 4, !dbg !641
  %shl19 = shl i32 %20, 2, !dbg !641
  %21 = load i32, i32* %r, align 4, !dbg !641
  %xor20 = xor i32 %21, %shl19, !dbg !641
  store i32 %xor20, i32* %r, align 4, !dbg !641
  %22 = load i32, i32* %l, align 4, !dbg !641
  %shr21 = lshr i32 %22, 8, !dbg !641
  %23 = load i32, i32* %r, align 4, !dbg !641
  %xor22 = xor i32 %shr21, %23, !dbg !641
  %conv23 = zext i32 %xor22 to i64, !dbg !641
  %and24 = and i64 %conv23, 16711935, !dbg !641
  %conv25 = trunc i64 %and24 to i32, !dbg !641
  store i32 %conv25, i32* %tt, align 4, !dbg !641
  %24 = load i32, i32* %tt, align 4, !dbg !641
  %25 = load i32, i32* %r, align 4, !dbg !641
  %xor26 = xor i32 %25, %24, !dbg !641
  store i32 %xor26, i32* %r, align 4, !dbg !641
  %26 = load i32, i32* %tt, align 4, !dbg !641
  %shl27 = shl i32 %26, 8, !dbg !641
  %27 = load i32, i32* %l, align 4, !dbg !641
  %xor28 = xor i32 %27, %shl27, !dbg !641
  store i32 %xor28, i32* %l, align 4, !dbg !641
  %28 = load i32, i32* %r, align 4, !dbg !641
  %shr29 = lshr i32 %28, 1, !dbg !641
  %29 = load i32, i32* %l, align 4, !dbg !641
  %xor30 = xor i32 %shr29, %29, !dbg !641
  %conv31 = zext i32 %xor30 to i64, !dbg !641
  %and32 = and i64 %conv31, 1431655765, !dbg !641
  %conv33 = trunc i64 %and32 to i32, !dbg !641
  store i32 %conv33, i32* %tt, align 4, !dbg !641
  %30 = load i32, i32* %tt, align 4, !dbg !641
  %31 = load i32, i32* %l, align 4, !dbg !641
  %xor34 = xor i32 %31, %30, !dbg !641
  store i32 %xor34, i32* %l, align 4, !dbg !641
  %32 = load i32, i32* %tt, align 4, !dbg !641
  %shl35 = shl i32 %32, 1, !dbg !641
  %33 = load i32, i32* %r, align 4, !dbg !641
  %xor36 = xor i32 %33, %shl35, !dbg !641
  store i32 %xor36, i32* %r, align 4, !dbg !641
  %34 = load i32, i32* %l, align 4, !dbg !642
  %35 = load i32*, i32** %data.addr, align 8, !dbg !643
  %arrayidx37 = getelementptr inbounds i32, i32* %35, i64 0, !dbg !643
  store i32 %34, i32* %arrayidx37, align 4, !dbg !644
  %36 = load i32, i32* %r, align 4, !dbg !645
  %37 = load i32*, i32** %data.addr, align 8, !dbg !646
  %arrayidx38 = getelementptr inbounds i32, i32* %37, i64 1, !dbg !646
  store i32 %36, i32* %arrayidx38, align 4, !dbg !647
  %38 = load i32*, i32** %data.addr, align 8, !dbg !648
  %39 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !649
  call void @DES_encrypt2(i32* %38, %struct.DES_ks* %39, i32 0), !dbg !650
  %40 = load i32*, i32** %data.addr, align 8, !dbg !651
  %41 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !652
  call void @DES_encrypt2(i32* %40, %struct.DES_ks* %41, i32 1), !dbg !653
  %42 = load i32*, i32** %data.addr, align 8, !dbg !654
  %43 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !655
  call void @DES_encrypt2(i32* %42, %struct.DES_ks* %43, i32 0), !dbg !656
  %44 = load i32*, i32** %data.addr, align 8, !dbg !657
  %arrayidx39 = getelementptr inbounds i32, i32* %44, i64 0, !dbg !657
  %45 = load i32, i32* %arrayidx39, align 4, !dbg !657
  store i32 %45, i32* %l, align 4, !dbg !658
  %46 = load i32*, i32** %data.addr, align 8, !dbg !659
  %arrayidx40 = getelementptr inbounds i32, i32* %46, i64 1, !dbg !659
  %47 = load i32, i32* %arrayidx40, align 4, !dbg !659
  store i32 %47, i32* %r, align 4, !dbg !660
  call void @llvm.dbg.declare(metadata i32* %tt41, metadata !661, metadata !DIExpression()), !dbg !663
  %48 = load i32, i32* %r, align 4, !dbg !663
  %shr42 = lshr i32 %48, 1, !dbg !663
  %49 = load i32, i32* %l, align 4, !dbg !663
  %xor43 = xor i32 %shr42, %49, !dbg !663
  %conv44 = zext i32 %xor43 to i64, !dbg !663
  %and45 = and i64 %conv44, 1431655765, !dbg !663
  %conv46 = trunc i64 %and45 to i32, !dbg !663
  store i32 %conv46, i32* %tt41, align 4, !dbg !663
  %50 = load i32, i32* %tt41, align 4, !dbg !663
  %51 = load i32, i32* %l, align 4, !dbg !663
  %xor47 = xor i32 %51, %50, !dbg !663
  store i32 %xor47, i32* %l, align 4, !dbg !663
  %52 = load i32, i32* %tt41, align 4, !dbg !663
  %shl48 = shl i32 %52, 1, !dbg !663
  %53 = load i32, i32* %r, align 4, !dbg !663
  %xor49 = xor i32 %53, %shl48, !dbg !663
  store i32 %xor49, i32* %r, align 4, !dbg !663
  %54 = load i32, i32* %l, align 4, !dbg !663
  %shr50 = lshr i32 %54, 8, !dbg !663
  %55 = load i32, i32* %r, align 4, !dbg !663
  %xor51 = xor i32 %shr50, %55, !dbg !663
  %conv52 = zext i32 %xor51 to i64, !dbg !663
  %and53 = and i64 %conv52, 16711935, !dbg !663
  %conv54 = trunc i64 %and53 to i32, !dbg !663
  store i32 %conv54, i32* %tt41, align 4, !dbg !663
  %56 = load i32, i32* %tt41, align 4, !dbg !663
  %57 = load i32, i32* %r, align 4, !dbg !663
  %xor55 = xor i32 %57, %56, !dbg !663
  store i32 %xor55, i32* %r, align 4, !dbg !663
  %58 = load i32, i32* %tt41, align 4, !dbg !663
  %shl56 = shl i32 %58, 8, !dbg !663
  %59 = load i32, i32* %l, align 4, !dbg !663
  %xor57 = xor i32 %59, %shl56, !dbg !663
  store i32 %xor57, i32* %l, align 4, !dbg !663
  %60 = load i32, i32* %r, align 4, !dbg !663
  %shr58 = lshr i32 %60, 2, !dbg !663
  %61 = load i32, i32* %l, align 4, !dbg !663
  %xor59 = xor i32 %shr58, %61, !dbg !663
  %conv60 = zext i32 %xor59 to i64, !dbg !663
  %and61 = and i64 %conv60, 858993459, !dbg !663
  %conv62 = trunc i64 %and61 to i32, !dbg !663
  store i32 %conv62, i32* %tt41, align 4, !dbg !663
  %62 = load i32, i32* %tt41, align 4, !dbg !663
  %63 = load i32, i32* %l, align 4, !dbg !663
  %xor63 = xor i32 %63, %62, !dbg !663
  store i32 %xor63, i32* %l, align 4, !dbg !663
  %64 = load i32, i32* %tt41, align 4, !dbg !663
  %shl64 = shl i32 %64, 2, !dbg !663
  %65 = load i32, i32* %r, align 4, !dbg !663
  %xor65 = xor i32 %65, %shl64, !dbg !663
  store i32 %xor65, i32* %r, align 4, !dbg !663
  %66 = load i32, i32* %l, align 4, !dbg !663
  %shr66 = lshr i32 %66, 16, !dbg !663
  %67 = load i32, i32* %r, align 4, !dbg !663
  %xor67 = xor i32 %shr66, %67, !dbg !663
  %conv68 = zext i32 %xor67 to i64, !dbg !663
  %and69 = and i64 %conv68, 65535, !dbg !663
  %conv70 = trunc i64 %and69 to i32, !dbg !663
  store i32 %conv70, i32* %tt41, align 4, !dbg !663
  %68 = load i32, i32* %tt41, align 4, !dbg !663
  %69 = load i32, i32* %r, align 4, !dbg !663
  %xor71 = xor i32 %69, %68, !dbg !663
  store i32 %xor71, i32* %r, align 4, !dbg !663
  %70 = load i32, i32* %tt41, align 4, !dbg !663
  %shl72 = shl i32 %70, 16, !dbg !663
  %71 = load i32, i32* %l, align 4, !dbg !663
  %xor73 = xor i32 %71, %shl72, !dbg !663
  store i32 %xor73, i32* %l, align 4, !dbg !663
  %72 = load i32, i32* %r, align 4, !dbg !663
  %shr74 = lshr i32 %72, 4, !dbg !663
  %73 = load i32, i32* %l, align 4, !dbg !663
  %xor75 = xor i32 %shr74, %73, !dbg !663
  %conv76 = zext i32 %xor75 to i64, !dbg !663
  %and77 = and i64 %conv76, 252645135, !dbg !663
  %conv78 = trunc i64 %and77 to i32, !dbg !663
  store i32 %conv78, i32* %tt41, align 4, !dbg !663
  %74 = load i32, i32* %tt41, align 4, !dbg !663
  %75 = load i32, i32* %l, align 4, !dbg !663
  %xor79 = xor i32 %75, %74, !dbg !663
  store i32 %xor79, i32* %l, align 4, !dbg !663
  %76 = load i32, i32* %tt41, align 4, !dbg !663
  %shl80 = shl i32 %76, 4, !dbg !663
  %77 = load i32, i32* %r, align 4, !dbg !663
  %xor81 = xor i32 %77, %shl80, !dbg !663
  store i32 %xor81, i32* %r, align 4, !dbg !663
  %78 = load i32, i32* %l, align 4, !dbg !664
  %79 = load i32*, i32** %data.addr, align 8, !dbg !665
  %arrayidx82 = getelementptr inbounds i32, i32* %79, i64 0, !dbg !665
  store i32 %78, i32* %arrayidx82, align 4, !dbg !666
  %80 = load i32, i32* %r, align 4, !dbg !667
  %81 = load i32*, i32** %data.addr, align 8, !dbg !668
  %arrayidx83 = getelementptr inbounds i32, i32* %81, i64 1, !dbg !668
  store i32 %80, i32* %arrayidx83, align 4, !dbg !669
  ret void, !dbg !670
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_ncbc_encrypt(i8* %in, i8* %out, i64 %length, %struct.DES_ks* %_schedule, [8 x i8]* %ivec, i32 %enc) #3 !dbg !671 {
entry:
  %data.addr.i3467 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i3467, metadata !44, metadata !DIExpression()), !dbg !680
  %ks.addr.i3468 = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i3468, metadata !46, metadata !DIExpression()), !dbg !686
  %enc.addr.i3469 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i3469, metadata !48, metadata !DIExpression()), !dbg !687
  %l.i3470 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i3470, metadata !50, metadata !DIExpression()), !dbg !688
  %r.i3471 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i3471, metadata !52, metadata !DIExpression()), !dbg !689
  %t.i3472 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i3472, metadata !54, metadata !DIExpression()), !dbg !690
  %u.i3473 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i3473, metadata !56, metadata !DIExpression()), !dbg !691
  %s.i3474 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i3474, metadata !58, metadata !DIExpression()), !dbg !692
  %tt.i3475 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i3475, metadata !65, metadata !DIExpression()), !dbg !693
  %ret.i3476 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i3476, metadata !68, metadata !DIExpression()), !dbg !694
  %tmp.i3477 = alloca i32, align 4
  %ret42.i3478 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret42.i3478, metadata !75, metadata !DIExpression()), !dbg !695
  %tmp43.i3479 = alloca i32, align 4
  %ret53.i3480 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret53.i3480, metadata !92, metadata !DIExpression()), !dbg !696
  %tmp54.i3481 = alloca i32, align 4
  %ret98.i3482 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret98.i3482, metadata !98, metadata !DIExpression()), !dbg !697
  %tmp99.i3483 = alloca i32, align 4
  %ret144.i3484 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret144.i3484, metadata !104, metadata !DIExpression()), !dbg !698
  %tmp145.i3485 = alloca i32, align 4
  %ret190.i3486 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret190.i3486, metadata !110, metadata !DIExpression()), !dbg !699
  %tmp191.i3487 = alloca i32, align 4
  %ret236.i3488 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret236.i3488, metadata !116, metadata !DIExpression()), !dbg !700
  %tmp237.i3489 = alloca i32, align 4
  %ret282.i3490 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret282.i3490, metadata !122, metadata !DIExpression()), !dbg !701
  %tmp283.i3491 = alloca i32, align 4
  %ret328.i3492 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret328.i3492, metadata !128, metadata !DIExpression()), !dbg !702
  %tmp329.i3493 = alloca i32, align 4
  %ret374.i3494 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret374.i3494, metadata !134, metadata !DIExpression()), !dbg !703
  %tmp375.i3495 = alloca i32, align 4
  %ret420.i3496 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret420.i3496, metadata !140, metadata !DIExpression()), !dbg !704
  %tmp421.i3497 = alloca i32, align 4
  %ret466.i3498 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret466.i3498, metadata !146, metadata !DIExpression()), !dbg !705
  %tmp467.i3499 = alloca i32, align 4
  %ret512.i3500 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret512.i3500, metadata !152, metadata !DIExpression()), !dbg !706
  %tmp513.i3501 = alloca i32, align 4
  %ret558.i3502 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret558.i3502, metadata !158, metadata !DIExpression()), !dbg !707
  %tmp559.i3503 = alloca i32, align 4
  %ret604.i3504 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret604.i3504, metadata !164, metadata !DIExpression()), !dbg !708
  %tmp605.i3505 = alloca i32, align 4
  %ret650.i3506 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret650.i3506, metadata !170, metadata !DIExpression()), !dbg !709
  %tmp651.i3507 = alloca i32, align 4
  %ret696.i3508 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret696.i3508, metadata !176, metadata !DIExpression()), !dbg !710
  %tmp697.i3509 = alloca i32, align 4
  %ret742.i3510 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret742.i3510, metadata !182, metadata !DIExpression()), !dbg !711
  %tmp743.i3511 = alloca i32, align 4
  %ret788.i3512 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret788.i3512, metadata !190, metadata !DIExpression()), !dbg !712
  %tmp789.i3513 = alloca i32, align 4
  %ret834.i3514 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret834.i3514, metadata !196, metadata !DIExpression()), !dbg !713
  %tmp835.i3515 = alloca i32, align 4
  %ret880.i3516 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret880.i3516, metadata !202, metadata !DIExpression()), !dbg !714
  %tmp881.i3517 = alloca i32, align 4
  %ret926.i3518 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret926.i3518, metadata !208, metadata !DIExpression()), !dbg !715
  %tmp927.i3519 = alloca i32, align 4
  %ret972.i3520 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret972.i3520, metadata !214, metadata !DIExpression()), !dbg !716
  %tmp973.i3521 = alloca i32, align 4
  %ret1018.i3522 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1018.i3522, metadata !220, metadata !DIExpression()), !dbg !717
  %tmp1019.i3523 = alloca i32, align 4
  %ret1064.i3524 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1064.i3524, metadata !226, metadata !DIExpression()), !dbg !718
  %tmp1065.i3525 = alloca i32, align 4
  %ret1110.i3526 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1110.i3526, metadata !232, metadata !DIExpression()), !dbg !719
  %tmp1111.i3527 = alloca i32, align 4
  %ret1156.i3528 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1156.i3528, metadata !238, metadata !DIExpression()), !dbg !720
  %tmp1157.i3529 = alloca i32, align 4
  %ret1202.i3530 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1202.i3530, metadata !244, metadata !DIExpression()), !dbg !721
  %tmp1203.i3531 = alloca i32, align 4
  %ret1248.i3532 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1248.i3532, metadata !250, metadata !DIExpression()), !dbg !722
  %tmp1249.i3533 = alloca i32, align 4
  %ret1294.i3534 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1294.i3534, metadata !256, metadata !DIExpression()), !dbg !723
  %tmp1295.i3535 = alloca i32, align 4
  %ret1340.i3536 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1340.i3536, metadata !262, metadata !DIExpression()), !dbg !724
  %tmp1341.i3537 = alloca i32, align 4
  %ret1386.i3538 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1386.i3538, metadata !268, metadata !DIExpression()), !dbg !725
  %tmp1387.i3539 = alloca i32, align 4
  %ret1432.i3540 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1432.i3540, metadata !274, metadata !DIExpression()), !dbg !726
  %tmp1433.i3541 = alloca i32, align 4
  %ret1478.i3542 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1478.i3542, metadata !280, metadata !DIExpression()), !dbg !727
  %tmp1479.i3543 = alloca i32, align 4
  %ret1520.i3544 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1520.i3544, metadata !284, metadata !DIExpression()), !dbg !728
  %tmp1521.i3545 = alloca i32, align 4
  %ret1525.i3546 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1525.i3546, metadata !291, metadata !DIExpression()), !dbg !729
  %tmp1526.i3547 = alloca i32, align 4
  %tt1530.i3548 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1530.i3548, metadata !298, metadata !DIExpression()), !dbg !730
  %data.addr.i1939 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i1939, metadata !44, metadata !DIExpression()), !dbg !731
  %ks.addr.i1940 = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i1940, metadata !46, metadata !DIExpression()), !dbg !736
  %enc.addr.i1941 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i1941, metadata !48, metadata !DIExpression()), !dbg !737
  %l.i1942 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i1942, metadata !50, metadata !DIExpression()), !dbg !738
  %r.i1943 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i1943, metadata !52, metadata !DIExpression()), !dbg !739
  %t.i1944 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i1944, metadata !54, metadata !DIExpression()), !dbg !740
  %u.i1945 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i1945, metadata !56, metadata !DIExpression()), !dbg !741
  %s.i1946 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i1946, metadata !58, metadata !DIExpression()), !dbg !742
  %tt.i1947 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i1947, metadata !65, metadata !DIExpression()), !dbg !743
  %ret.i1948 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i1948, metadata !68, metadata !DIExpression()), !dbg !744
  %tmp.i1949 = alloca i32, align 4
  %ret42.i1950 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret42.i1950, metadata !75, metadata !DIExpression()), !dbg !745
  %tmp43.i1951 = alloca i32, align 4
  %ret53.i1952 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret53.i1952, metadata !92, metadata !DIExpression()), !dbg !746
  %tmp54.i1953 = alloca i32, align 4
  %ret98.i1954 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret98.i1954, metadata !98, metadata !DIExpression()), !dbg !747
  %tmp99.i1955 = alloca i32, align 4
  %ret144.i1956 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret144.i1956, metadata !104, metadata !DIExpression()), !dbg !748
  %tmp145.i1957 = alloca i32, align 4
  %ret190.i1958 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret190.i1958, metadata !110, metadata !DIExpression()), !dbg !749
  %tmp191.i1959 = alloca i32, align 4
  %ret236.i1960 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret236.i1960, metadata !116, metadata !DIExpression()), !dbg !750
  %tmp237.i1961 = alloca i32, align 4
  %ret282.i1962 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret282.i1962, metadata !122, metadata !DIExpression()), !dbg !751
  %tmp283.i1963 = alloca i32, align 4
  %ret328.i1964 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret328.i1964, metadata !128, metadata !DIExpression()), !dbg !752
  %tmp329.i1965 = alloca i32, align 4
  %ret374.i1966 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret374.i1966, metadata !134, metadata !DIExpression()), !dbg !753
  %tmp375.i1967 = alloca i32, align 4
  %ret420.i1968 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret420.i1968, metadata !140, metadata !DIExpression()), !dbg !754
  %tmp421.i1969 = alloca i32, align 4
  %ret466.i1970 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret466.i1970, metadata !146, metadata !DIExpression()), !dbg !755
  %tmp467.i1971 = alloca i32, align 4
  %ret512.i1972 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret512.i1972, metadata !152, metadata !DIExpression()), !dbg !756
  %tmp513.i1973 = alloca i32, align 4
  %ret558.i1974 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret558.i1974, metadata !158, metadata !DIExpression()), !dbg !757
  %tmp559.i1975 = alloca i32, align 4
  %ret604.i1976 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret604.i1976, metadata !164, metadata !DIExpression()), !dbg !758
  %tmp605.i1977 = alloca i32, align 4
  %ret650.i1978 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret650.i1978, metadata !170, metadata !DIExpression()), !dbg !759
  %tmp651.i1979 = alloca i32, align 4
  %ret696.i1980 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret696.i1980, metadata !176, metadata !DIExpression()), !dbg !760
  %tmp697.i1981 = alloca i32, align 4
  %ret742.i1982 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret742.i1982, metadata !182, metadata !DIExpression()), !dbg !761
  %tmp743.i1983 = alloca i32, align 4
  %ret788.i1984 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret788.i1984, metadata !190, metadata !DIExpression()), !dbg !762
  %tmp789.i1985 = alloca i32, align 4
  %ret834.i1986 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret834.i1986, metadata !196, metadata !DIExpression()), !dbg !763
  %tmp835.i1987 = alloca i32, align 4
  %ret880.i1988 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret880.i1988, metadata !202, metadata !DIExpression()), !dbg !764
  %tmp881.i1989 = alloca i32, align 4
  %ret926.i1990 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret926.i1990, metadata !208, metadata !DIExpression()), !dbg !765
  %tmp927.i1991 = alloca i32, align 4
  %ret972.i1992 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret972.i1992, metadata !214, metadata !DIExpression()), !dbg !766
  %tmp973.i1993 = alloca i32, align 4
  %ret1018.i1994 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1018.i1994, metadata !220, metadata !DIExpression()), !dbg !767
  %tmp1019.i1995 = alloca i32, align 4
  %ret1064.i1996 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1064.i1996, metadata !226, metadata !DIExpression()), !dbg !768
  %tmp1065.i1997 = alloca i32, align 4
  %ret1110.i1998 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1110.i1998, metadata !232, metadata !DIExpression()), !dbg !769
  %tmp1111.i1999 = alloca i32, align 4
  %ret1156.i2000 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1156.i2000, metadata !238, metadata !DIExpression()), !dbg !770
  %tmp1157.i2001 = alloca i32, align 4
  %ret1202.i2002 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1202.i2002, metadata !244, metadata !DIExpression()), !dbg !771
  %tmp1203.i2003 = alloca i32, align 4
  %ret1248.i2004 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1248.i2004, metadata !250, metadata !DIExpression()), !dbg !772
  %tmp1249.i2005 = alloca i32, align 4
  %ret1294.i2006 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1294.i2006, metadata !256, metadata !DIExpression()), !dbg !773
  %tmp1295.i2007 = alloca i32, align 4
  %ret1340.i2008 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1340.i2008, metadata !262, metadata !DIExpression()), !dbg !774
  %tmp1341.i2009 = alloca i32, align 4
  %ret1386.i2010 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1386.i2010, metadata !268, metadata !DIExpression()), !dbg !775
  %tmp1387.i2011 = alloca i32, align 4
  %ret1432.i2012 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1432.i2012, metadata !274, metadata !DIExpression()), !dbg !776
  %tmp1433.i2013 = alloca i32, align 4
  %ret1478.i2014 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1478.i2014, metadata !280, metadata !DIExpression()), !dbg !777
  %tmp1479.i2015 = alloca i32, align 4
  %ret1520.i2016 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1520.i2016, metadata !284, metadata !DIExpression()), !dbg !778
  %tmp1521.i2017 = alloca i32, align 4
  %ret1525.i2018 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1525.i2018, metadata !291, metadata !DIExpression()), !dbg !779
  %tmp1526.i2019 = alloca i32, align 4
  %tt1530.i2020 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1530.i2020, metadata !298, metadata !DIExpression()), !dbg !780
  %data.addr.i411 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i411, metadata !44, metadata !DIExpression()), !dbg !781
  %ks.addr.i412 = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i412, metadata !46, metadata !DIExpression()), !dbg !786
  %enc.addr.i413 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i413, metadata !48, metadata !DIExpression()), !dbg !787
  %l.i414 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i414, metadata !50, metadata !DIExpression()), !dbg !788
  %r.i415 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i415, metadata !52, metadata !DIExpression()), !dbg !789
  %t.i416 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i416, metadata !54, metadata !DIExpression()), !dbg !790
  %u.i417 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i417, metadata !56, metadata !DIExpression()), !dbg !791
  %s.i418 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i418, metadata !58, metadata !DIExpression()), !dbg !792
  %tt.i419 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i419, metadata !65, metadata !DIExpression()), !dbg !793
  %ret.i420 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i420, metadata !68, metadata !DIExpression()), !dbg !794
  %tmp.i421 = alloca i32, align 4
  %ret42.i422 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret42.i422, metadata !75, metadata !DIExpression()), !dbg !795
  %tmp43.i423 = alloca i32, align 4
  %ret53.i424 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret53.i424, metadata !92, metadata !DIExpression()), !dbg !796
  %tmp54.i425 = alloca i32, align 4
  %ret98.i426 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret98.i426, metadata !98, metadata !DIExpression()), !dbg !797
  %tmp99.i427 = alloca i32, align 4
  %ret144.i428 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret144.i428, metadata !104, metadata !DIExpression()), !dbg !798
  %tmp145.i429 = alloca i32, align 4
  %ret190.i430 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret190.i430, metadata !110, metadata !DIExpression()), !dbg !799
  %tmp191.i431 = alloca i32, align 4
  %ret236.i432 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret236.i432, metadata !116, metadata !DIExpression()), !dbg !800
  %tmp237.i433 = alloca i32, align 4
  %ret282.i434 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret282.i434, metadata !122, metadata !DIExpression()), !dbg !801
  %tmp283.i435 = alloca i32, align 4
  %ret328.i436 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret328.i436, metadata !128, metadata !DIExpression()), !dbg !802
  %tmp329.i437 = alloca i32, align 4
  %ret374.i438 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret374.i438, metadata !134, metadata !DIExpression()), !dbg !803
  %tmp375.i439 = alloca i32, align 4
  %ret420.i440 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret420.i440, metadata !140, metadata !DIExpression()), !dbg !804
  %tmp421.i441 = alloca i32, align 4
  %ret466.i442 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret466.i442, metadata !146, metadata !DIExpression()), !dbg !805
  %tmp467.i443 = alloca i32, align 4
  %ret512.i444 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret512.i444, metadata !152, metadata !DIExpression()), !dbg !806
  %tmp513.i445 = alloca i32, align 4
  %ret558.i446 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret558.i446, metadata !158, metadata !DIExpression()), !dbg !807
  %tmp559.i447 = alloca i32, align 4
  %ret604.i448 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret604.i448, metadata !164, metadata !DIExpression()), !dbg !808
  %tmp605.i449 = alloca i32, align 4
  %ret650.i450 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret650.i450, metadata !170, metadata !DIExpression()), !dbg !809
  %tmp651.i451 = alloca i32, align 4
  %ret696.i452 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret696.i452, metadata !176, metadata !DIExpression()), !dbg !810
  %tmp697.i453 = alloca i32, align 4
  %ret742.i454 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret742.i454, metadata !182, metadata !DIExpression()), !dbg !811
  %tmp743.i455 = alloca i32, align 4
  %ret788.i456 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret788.i456, metadata !190, metadata !DIExpression()), !dbg !812
  %tmp789.i457 = alloca i32, align 4
  %ret834.i458 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret834.i458, metadata !196, metadata !DIExpression()), !dbg !813
  %tmp835.i459 = alloca i32, align 4
  %ret880.i460 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret880.i460, metadata !202, metadata !DIExpression()), !dbg !814
  %tmp881.i461 = alloca i32, align 4
  %ret926.i462 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret926.i462, metadata !208, metadata !DIExpression()), !dbg !815
  %tmp927.i463 = alloca i32, align 4
  %ret972.i464 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret972.i464, metadata !214, metadata !DIExpression()), !dbg !816
  %tmp973.i465 = alloca i32, align 4
  %ret1018.i466 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1018.i466, metadata !220, metadata !DIExpression()), !dbg !817
  %tmp1019.i467 = alloca i32, align 4
  %ret1064.i468 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1064.i468, metadata !226, metadata !DIExpression()), !dbg !818
  %tmp1065.i469 = alloca i32, align 4
  %ret1110.i470 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1110.i470, metadata !232, metadata !DIExpression()), !dbg !819
  %tmp1111.i471 = alloca i32, align 4
  %ret1156.i472 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1156.i472, metadata !238, metadata !DIExpression()), !dbg !820
  %tmp1157.i473 = alloca i32, align 4
  %ret1202.i474 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1202.i474, metadata !244, metadata !DIExpression()), !dbg !821
  %tmp1203.i475 = alloca i32, align 4
  %ret1248.i476 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1248.i476, metadata !250, metadata !DIExpression()), !dbg !822
  %tmp1249.i477 = alloca i32, align 4
  %ret1294.i478 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1294.i478, metadata !256, metadata !DIExpression()), !dbg !823
  %tmp1295.i479 = alloca i32, align 4
  %ret1340.i480 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1340.i480, metadata !262, metadata !DIExpression()), !dbg !824
  %tmp1341.i481 = alloca i32, align 4
  %ret1386.i482 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1386.i482, metadata !268, metadata !DIExpression()), !dbg !825
  %tmp1387.i483 = alloca i32, align 4
  %ret1432.i484 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1432.i484, metadata !274, metadata !DIExpression()), !dbg !826
  %tmp1433.i485 = alloca i32, align 4
  %ret1478.i486 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1478.i486, metadata !280, metadata !DIExpression()), !dbg !827
  %tmp1479.i487 = alloca i32, align 4
  %ret1520.i488 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1520.i488, metadata !284, metadata !DIExpression()), !dbg !828
  %tmp1521.i489 = alloca i32, align 4
  %ret1525.i490 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1525.i490, metadata !291, metadata !DIExpression()), !dbg !829
  %tmp1526.i491 = alloca i32, align 4
  %tt1530.i492 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1530.i492, metadata !298, metadata !DIExpression()), !dbg !830
  %data.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i, metadata !44, metadata !DIExpression()), !dbg !831
  %ks.addr.i = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i, metadata !46, metadata !DIExpression()), !dbg !836
  %enc.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i, metadata !48, metadata !DIExpression()), !dbg !837
  %l.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i, metadata !50, metadata !DIExpression()), !dbg !838
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !52, metadata !DIExpression()), !dbg !839
  %t.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i, metadata !54, metadata !DIExpression()), !dbg !840
  %u.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i, metadata !56, metadata !DIExpression()), !dbg !841
  %s.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i, metadata !58, metadata !DIExpression()), !dbg !842
  %tt.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i, metadata !65, metadata !DIExpression()), !dbg !843
  %ret.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i, metadata !68, metadata !DIExpression()), !dbg !844
  %tmp.i = alloca i32, align 4
  %ret42.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret42.i, metadata !75, metadata !DIExpression()), !dbg !845
  %tmp43.i = alloca i32, align 4
  %ret53.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret53.i, metadata !92, metadata !DIExpression()), !dbg !846
  %tmp54.i = alloca i32, align 4
  %ret98.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret98.i, metadata !98, metadata !DIExpression()), !dbg !847
  %tmp99.i = alloca i32, align 4
  %ret144.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret144.i, metadata !104, metadata !DIExpression()), !dbg !848
  %tmp145.i = alloca i32, align 4
  %ret190.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret190.i, metadata !110, metadata !DIExpression()), !dbg !849
  %tmp191.i = alloca i32, align 4
  %ret236.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret236.i, metadata !116, metadata !DIExpression()), !dbg !850
  %tmp237.i = alloca i32, align 4
  %ret282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret282.i, metadata !122, metadata !DIExpression()), !dbg !851
  %tmp283.i = alloca i32, align 4
  %ret328.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret328.i, metadata !128, metadata !DIExpression()), !dbg !852
  %tmp329.i = alloca i32, align 4
  %ret374.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret374.i, metadata !134, metadata !DIExpression()), !dbg !853
  %tmp375.i = alloca i32, align 4
  %ret420.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret420.i, metadata !140, metadata !DIExpression()), !dbg !854
  %tmp421.i = alloca i32, align 4
  %ret466.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret466.i, metadata !146, metadata !DIExpression()), !dbg !855
  %tmp467.i = alloca i32, align 4
  %ret512.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret512.i, metadata !152, metadata !DIExpression()), !dbg !856
  %tmp513.i = alloca i32, align 4
  %ret558.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret558.i, metadata !158, metadata !DIExpression()), !dbg !857
  %tmp559.i = alloca i32, align 4
  %ret604.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret604.i, metadata !164, metadata !DIExpression()), !dbg !858
  %tmp605.i = alloca i32, align 4
  %ret650.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret650.i, metadata !170, metadata !DIExpression()), !dbg !859
  %tmp651.i = alloca i32, align 4
  %ret696.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret696.i, metadata !176, metadata !DIExpression()), !dbg !860
  %tmp697.i = alloca i32, align 4
  %ret742.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret742.i, metadata !182, metadata !DIExpression()), !dbg !861
  %tmp743.i = alloca i32, align 4
  %ret788.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret788.i, metadata !190, metadata !DIExpression()), !dbg !862
  %tmp789.i = alloca i32, align 4
  %ret834.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret834.i, metadata !196, metadata !DIExpression()), !dbg !863
  %tmp835.i = alloca i32, align 4
  %ret880.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret880.i, metadata !202, metadata !DIExpression()), !dbg !864
  %tmp881.i = alloca i32, align 4
  %ret926.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret926.i, metadata !208, metadata !DIExpression()), !dbg !865
  %tmp927.i = alloca i32, align 4
  %ret972.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret972.i, metadata !214, metadata !DIExpression()), !dbg !866
  %tmp973.i = alloca i32, align 4
  %ret1018.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1018.i, metadata !220, metadata !DIExpression()), !dbg !867
  %tmp1019.i = alloca i32, align 4
  %ret1064.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1064.i, metadata !226, metadata !DIExpression()), !dbg !868
  %tmp1065.i = alloca i32, align 4
  %ret1110.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1110.i, metadata !232, metadata !DIExpression()), !dbg !869
  %tmp1111.i = alloca i32, align 4
  %ret1156.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1156.i, metadata !238, metadata !DIExpression()), !dbg !870
  %tmp1157.i = alloca i32, align 4
  %ret1202.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1202.i, metadata !244, metadata !DIExpression()), !dbg !871
  %tmp1203.i = alloca i32, align 4
  %ret1248.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1248.i, metadata !250, metadata !DIExpression()), !dbg !872
  %tmp1249.i = alloca i32, align 4
  %ret1294.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1294.i, metadata !256, metadata !DIExpression()), !dbg !873
  %tmp1295.i = alloca i32, align 4
  %ret1340.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1340.i, metadata !262, metadata !DIExpression()), !dbg !874
  %tmp1341.i = alloca i32, align 4
  %ret1386.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1386.i, metadata !268, metadata !DIExpression()), !dbg !875
  %tmp1387.i = alloca i32, align 4
  %ret1432.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1432.i, metadata !274, metadata !DIExpression()), !dbg !876
  %tmp1433.i = alloca i32, align 4
  %ret1478.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1478.i, metadata !280, metadata !DIExpression()), !dbg !877
  %tmp1479.i = alloca i32, align 4
  %ret1520.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1520.i, metadata !284, metadata !DIExpression()), !dbg !878
  %tmp1521.i = alloca i32, align 4
  %ret1525.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1525.i, metadata !291, metadata !DIExpression()), !dbg !879
  %tmp1526.i = alloca i32, align 4
  %tt1530.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1530.i, metadata !298, metadata !DIExpression()), !dbg !880
  %in.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %_schedule.addr = alloca %struct.DES_ks*, align 8
  %ivec.addr = alloca [8 x i8]*, align 8
  %enc.addr = alloca i32, align 4
  %tin0 = alloca i32, align 4
  %tin1 = alloca i32, align 4
  %tout0 = alloca i32, align 4
  %tout1 = alloca i32, align 4
  %xor0 = alloca i32, align 4
  %xor1 = alloca i32, align 4
  %l = alloca i64, align 8
  %tin = alloca [2 x i32], align 4
  %iv = alloca i8*, align 8
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !881, metadata !DIExpression()), !dbg !882
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !883, metadata !DIExpression()), !dbg !884
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !885, metadata !DIExpression()), !dbg !886
  store %struct.DES_ks* %_schedule, %struct.DES_ks** %_schedule.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %_schedule.addr, metadata !887, metadata !DIExpression()), !dbg !888
  store [8 x i8]* %ivec, [8 x i8]** %ivec.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %ivec.addr, metadata !889, metadata !DIExpression()), !dbg !890
  store i32 %enc, i32* %enc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr, metadata !891, metadata !DIExpression()), !dbg !892
  call void @llvm.dbg.declare(metadata i32* %tin0, metadata !893, metadata !DIExpression()), !dbg !894
  call void @llvm.dbg.declare(metadata i32* %tin1, metadata !895, metadata !DIExpression()), !dbg !896
  call void @llvm.dbg.declare(metadata i32* %tout0, metadata !897, metadata !DIExpression()), !dbg !898
  call void @llvm.dbg.declare(metadata i32* %tout1, metadata !899, metadata !DIExpression()), !dbg !900
  call void @llvm.dbg.declare(metadata i32* %xor0, metadata !901, metadata !DIExpression()), !dbg !902
  call void @llvm.dbg.declare(metadata i32* %xor1, metadata !903, metadata !DIExpression()), !dbg !904
  call void @llvm.dbg.declare(metadata i64* %l, metadata !905, metadata !DIExpression()), !dbg !906
  %0 = load i64, i64* %length.addr, align 8, !dbg !907
  store i64 %0, i64* %l, align 8, !dbg !906
  call void @llvm.dbg.declare(metadata [2 x i32]* %tin, metadata !908, metadata !DIExpression()), !dbg !909
  call void @llvm.dbg.declare(metadata i8** %iv, metadata !910, metadata !DIExpression()), !dbg !911
  %1 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !912
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0, !dbg !913
  store i8* %arrayidx, i8** %iv, align 8, !dbg !914
  %2 = load i32, i32* %enc.addr, align 4, !dbg !915
  %tobool = icmp ne i32 %2, 0, !dbg !915
  br i1 %tobool, label %if.then, label %if.else, !dbg !916

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %iv, align 8, !dbg !917
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !917
  store i8* %incdec.ptr, i8** %iv, align 8, !dbg !917
  %4 = load i8, i8* %3, align 1, !dbg !917
  %conv = zext i8 %4 to i32, !dbg !917
  store i32 %conv, i32* %tout0, align 4, !dbg !917
  %5 = load i8*, i8** %iv, align 8, !dbg !917
  %incdec.ptr1 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !917
  store i8* %incdec.ptr1, i8** %iv, align 8, !dbg !917
  %6 = load i8, i8* %5, align 1, !dbg !917
  %conv2 = zext i8 %6 to i32, !dbg !917
  %shl = shl i32 %conv2, 8, !dbg !917
  %7 = load i32, i32* %tout0, align 4, !dbg !917
  %or = or i32 %7, %shl, !dbg !917
  store i32 %or, i32* %tout0, align 4, !dbg !917
  %8 = load i8*, i8** %iv, align 8, !dbg !917
  %incdec.ptr3 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !917
  store i8* %incdec.ptr3, i8** %iv, align 8, !dbg !917
  %9 = load i8, i8* %8, align 1, !dbg !917
  %conv4 = zext i8 %9 to i32, !dbg !917
  %shl5 = shl i32 %conv4, 16, !dbg !917
  %10 = load i32, i32* %tout0, align 4, !dbg !917
  %or6 = or i32 %10, %shl5, !dbg !917
  store i32 %or6, i32* %tout0, align 4, !dbg !917
  %11 = load i8*, i8** %iv, align 8, !dbg !917
  %incdec.ptr7 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !917
  store i8* %incdec.ptr7, i8** %iv, align 8, !dbg !917
  %12 = load i8, i8* %11, align 1, !dbg !917
  %conv8 = zext i8 %12 to i32, !dbg !917
  %shl9 = shl i32 %conv8, 24, !dbg !917
  %13 = load i32, i32* %tout0, align 4, !dbg !917
  %or10 = or i32 %13, %shl9, !dbg !917
  store i32 %or10, i32* %tout0, align 4, !dbg !917
  %14 = load i8*, i8** %iv, align 8, !dbg !918
  %incdec.ptr11 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !918
  store i8* %incdec.ptr11, i8** %iv, align 8, !dbg !918
  %15 = load i8, i8* %14, align 1, !dbg !918
  %conv12 = zext i8 %15 to i32, !dbg !918
  store i32 %conv12, i32* %tout1, align 4, !dbg !918
  %16 = load i8*, i8** %iv, align 8, !dbg !918
  %incdec.ptr13 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !918
  store i8* %incdec.ptr13, i8** %iv, align 8, !dbg !918
  %17 = load i8, i8* %16, align 1, !dbg !918
  %conv14 = zext i8 %17 to i32, !dbg !918
  %shl15 = shl i32 %conv14, 8, !dbg !918
  %18 = load i32, i32* %tout1, align 4, !dbg !918
  %or16 = or i32 %18, %shl15, !dbg !918
  store i32 %or16, i32* %tout1, align 4, !dbg !918
  %19 = load i8*, i8** %iv, align 8, !dbg !918
  %incdec.ptr17 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !918
  store i8* %incdec.ptr17, i8** %iv, align 8, !dbg !918
  %20 = load i8, i8* %19, align 1, !dbg !918
  %conv18 = zext i8 %20 to i32, !dbg !918
  %shl19 = shl i32 %conv18, 16, !dbg !918
  %21 = load i32, i32* %tout1, align 4, !dbg !918
  %or20 = or i32 %21, %shl19, !dbg !918
  store i32 %or20, i32* %tout1, align 4, !dbg !918
  %22 = load i8*, i8** %iv, align 8, !dbg !918
  %incdec.ptr21 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !918
  store i8* %incdec.ptr21, i8** %iv, align 8, !dbg !918
  %23 = load i8, i8* %22, align 1, !dbg !918
  %conv22 = zext i8 %23 to i32, !dbg !918
  %shl23 = shl i32 %conv22, 24, !dbg !918
  %24 = load i32, i32* %tout1, align 4, !dbg !918
  %or24 = or i32 %24, %shl23, !dbg !918
  store i32 %or24, i32* %tout1, align 4, !dbg !918
  %25 = load i64, i64* %l, align 8, !dbg !919
  %sub = sub nsw i64 %25, 8, !dbg !919
  store i64 %sub, i64* %l, align 8, !dbg !919
  br label %for.cond, !dbg !920

for.cond:                                         ; preds = %for.inc, %if.then
  %26 = load i64, i64* %l, align 8, !dbg !921
  %cmp = icmp sge i64 %26, 0, !dbg !922
  br i1 %cmp, label %for.body, label %for.end, !dbg !923

for.body:                                         ; preds = %for.cond
  %27 = load i8*, i8** %in.addr, align 8, !dbg !924
  %incdec.ptr26 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !924
  store i8* %incdec.ptr26, i8** %in.addr, align 8, !dbg !924
  %28 = load i8, i8* %27, align 1, !dbg !924
  %conv27 = zext i8 %28 to i32, !dbg !924
  store i32 %conv27, i32* %tin0, align 4, !dbg !924
  %29 = load i8*, i8** %in.addr, align 8, !dbg !924
  %incdec.ptr28 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !924
  store i8* %incdec.ptr28, i8** %in.addr, align 8, !dbg !924
  %30 = load i8, i8* %29, align 1, !dbg !924
  %conv29 = zext i8 %30 to i32, !dbg !924
  %shl30 = shl i32 %conv29, 8, !dbg !924
  %31 = load i32, i32* %tin0, align 4, !dbg !924
  %or31 = or i32 %31, %shl30, !dbg !924
  store i32 %or31, i32* %tin0, align 4, !dbg !924
  %32 = load i8*, i8** %in.addr, align 8, !dbg !924
  %incdec.ptr32 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !924
  store i8* %incdec.ptr32, i8** %in.addr, align 8, !dbg !924
  %33 = load i8, i8* %32, align 1, !dbg !924
  %conv33 = zext i8 %33 to i32, !dbg !924
  %shl34 = shl i32 %conv33, 16, !dbg !924
  %34 = load i32, i32* %tin0, align 4, !dbg !924
  %or35 = or i32 %34, %shl34, !dbg !924
  store i32 %or35, i32* %tin0, align 4, !dbg !924
  %35 = load i8*, i8** %in.addr, align 8, !dbg !924
  %incdec.ptr36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !924
  store i8* %incdec.ptr36, i8** %in.addr, align 8, !dbg !924
  %36 = load i8, i8* %35, align 1, !dbg !924
  %conv37 = zext i8 %36 to i32, !dbg !924
  %shl38 = shl i32 %conv37, 24, !dbg !924
  %37 = load i32, i32* %tin0, align 4, !dbg !924
  %or39 = or i32 %37, %shl38, !dbg !924
  store i32 %or39, i32* %tin0, align 4, !dbg !924
  %38 = load i8*, i8** %in.addr, align 8, !dbg !925
  %incdec.ptr40 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !925
  store i8* %incdec.ptr40, i8** %in.addr, align 8, !dbg !925
  %39 = load i8, i8* %38, align 1, !dbg !925
  %conv41 = zext i8 %39 to i32, !dbg !925
  store i32 %conv41, i32* %tin1, align 4, !dbg !925
  %40 = load i8*, i8** %in.addr, align 8, !dbg !925
  %incdec.ptr42 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !925
  store i8* %incdec.ptr42, i8** %in.addr, align 8, !dbg !925
  %41 = load i8, i8* %40, align 1, !dbg !925
  %conv43 = zext i8 %41 to i32, !dbg !925
  %shl44 = shl i32 %conv43, 8, !dbg !925
  %42 = load i32, i32* %tin1, align 4, !dbg !925
  %or45 = or i32 %42, %shl44, !dbg !925
  store i32 %or45, i32* %tin1, align 4, !dbg !925
  %43 = load i8*, i8** %in.addr, align 8, !dbg !925
  %incdec.ptr46 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !925
  store i8* %incdec.ptr46, i8** %in.addr, align 8, !dbg !925
  %44 = load i8, i8* %43, align 1, !dbg !925
  %conv47 = zext i8 %44 to i32, !dbg !925
  %shl48 = shl i32 %conv47, 16, !dbg !925
  %45 = load i32, i32* %tin1, align 4, !dbg !925
  %or49 = or i32 %45, %shl48, !dbg !925
  store i32 %or49, i32* %tin1, align 4, !dbg !925
  %46 = load i8*, i8** %in.addr, align 8, !dbg !925
  %incdec.ptr50 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !925
  store i8* %incdec.ptr50, i8** %in.addr, align 8, !dbg !925
  %47 = load i8, i8* %46, align 1, !dbg !925
  %conv51 = zext i8 %47 to i32, !dbg !925
  %shl52 = shl i32 %conv51, 24, !dbg !925
  %48 = load i32, i32* %tin1, align 4, !dbg !925
  %or53 = or i32 %48, %shl52, !dbg !925
  store i32 %or53, i32* %tin1, align 4, !dbg !925
  %49 = load i32, i32* %tout0, align 4, !dbg !926
  %50 = load i32, i32* %tin0, align 4, !dbg !927
  %xor = xor i32 %50, %49, !dbg !927
  store i32 %xor, i32* %tin0, align 4, !dbg !927
  %51 = load i32, i32* %tin0, align 4, !dbg !928
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !929
  store i32 %51, i32* %arrayidx54, align 4, !dbg !930
  %52 = load i32, i32* %tout1, align 4, !dbg !931
  %53 = load i32, i32* %tin1, align 4, !dbg !932
  %xor55 = xor i32 %53, %52, !dbg !932
  store i32 %xor55, i32* %tin1, align 4, !dbg !932
  %54 = load i32, i32* %tin1, align 4, !dbg !933
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !934
  store i32 %54, i32* %arrayidx56, align 4, !dbg !935
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !936
  %55 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8, !dbg !937
  store i32* %arraydecay, i32** %data.addr.i, align 8
  store %struct.DES_ks* %55, %struct.DES_ks** %ks.addr.i, align 8
  %ks.addr1.i = bitcast %struct.DES_ks** %ks.addr.i to i8*
  call void @llvm.var.annotation(i8* %ks.addr1.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 14) #8
  store i32 1, i32* %enc.addr.i, align 4
  %s2.i = bitcast i32** %s.i to i8*, !dbg !938
  call void @llvm.var.annotation(i8* %s2.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 17) #8, !dbg !938
  %56 = load i32*, i32** %data.addr.i, align 8, !dbg !939
  %57 = load i32, i32* %56, align 4, !dbg !939
  store i32 %57, i32* %r.i, align 4, !dbg !940
  %58 = load i32*, i32** %data.addr.i, align 8, !dbg !941
  %arrayidx3.i = getelementptr inbounds i32, i32* %58, i64 1, !dbg !941
  %59 = load i32, i32* %arrayidx3.i, align 4, !dbg !941
  store i32 %59, i32* %l.i, align 4, !dbg !942
  %60 = load i32, i32* %l.i, align 4, !dbg !843
  %shr.i = lshr i32 %60, 4, !dbg !843
  %61 = load i32, i32* %r.i, align 4, !dbg !843
  %xor.i = xor i32 %shr.i, %61, !dbg !843
  %conv.i = zext i32 %xor.i to i64, !dbg !843
  %and.i = and i64 %conv.i, 252645135, !dbg !843
  %conv4.i = trunc i64 %and.i to i32, !dbg !843
  store i32 %conv4.i, i32* %tt.i, align 4, !dbg !843
  %62 = load i32, i32* %tt.i, align 4, !dbg !843
  %63 = load i32, i32* %r.i, align 4, !dbg !843
  %xor5.i = xor i32 %63, %62, !dbg !843
  store i32 %xor5.i, i32* %r.i, align 4, !dbg !843
  %64 = load i32, i32* %tt.i, align 4, !dbg !843
  %shl.i = shl i32 %64, 4, !dbg !843
  %65 = load i32, i32* %l.i, align 4, !dbg !843
  %xor6.i = xor i32 %65, %shl.i, !dbg !843
  store i32 %xor6.i, i32* %l.i, align 4, !dbg !843
  %66 = load i32, i32* %r.i, align 4, !dbg !843
  %shr7.i = lshr i32 %66, 16, !dbg !843
  %67 = load i32, i32* %l.i, align 4, !dbg !843
  %xor8.i = xor i32 %shr7.i, %67, !dbg !843
  %conv9.i = zext i32 %xor8.i to i64, !dbg !843
  %and10.i = and i64 %conv9.i, 65535, !dbg !843
  %conv11.i = trunc i64 %and10.i to i32, !dbg !843
  store i32 %conv11.i, i32* %tt.i, align 4, !dbg !843
  %68 = load i32, i32* %tt.i, align 4, !dbg !843
  %69 = load i32, i32* %l.i, align 4, !dbg !843
  %xor12.i = xor i32 %69, %68, !dbg !843
  store i32 %xor12.i, i32* %l.i, align 4, !dbg !843
  %70 = load i32, i32* %tt.i, align 4, !dbg !843
  %shl13.i = shl i32 %70, 16, !dbg !843
  %71 = load i32, i32* %r.i, align 4, !dbg !843
  %xor14.i = xor i32 %71, %shl13.i, !dbg !843
  store i32 %xor14.i, i32* %r.i, align 4, !dbg !843
  %72 = load i32, i32* %l.i, align 4, !dbg !843
  %shr15.i = lshr i32 %72, 2, !dbg !843
  %73 = load i32, i32* %r.i, align 4, !dbg !843
  %xor16.i = xor i32 %shr15.i, %73, !dbg !843
  %conv17.i = zext i32 %xor16.i to i64, !dbg !843
  %and18.i = and i64 %conv17.i, 858993459, !dbg !843
  %conv19.i = trunc i64 %and18.i to i32, !dbg !843
  store i32 %conv19.i, i32* %tt.i, align 4, !dbg !843
  %74 = load i32, i32* %tt.i, align 4, !dbg !843
  %75 = load i32, i32* %r.i, align 4, !dbg !843
  %xor20.i = xor i32 %75, %74, !dbg !843
  store i32 %xor20.i, i32* %r.i, align 4, !dbg !843
  %76 = load i32, i32* %tt.i, align 4, !dbg !843
  %shl21.i = shl i32 %76, 2, !dbg !843
  %77 = load i32, i32* %l.i, align 4, !dbg !843
  %xor22.i = xor i32 %77, %shl21.i, !dbg !843
  store i32 %xor22.i, i32* %l.i, align 4, !dbg !843
  %78 = load i32, i32* %r.i, align 4, !dbg !843
  %shr23.i = lshr i32 %78, 8, !dbg !843
  %79 = load i32, i32* %l.i, align 4, !dbg !843
  %xor24.i = xor i32 %shr23.i, %79, !dbg !843
  %conv25.i = zext i32 %xor24.i to i64, !dbg !843
  %and26.i = and i64 %conv25.i, 16711935, !dbg !843
  %conv27.i = trunc i64 %and26.i to i32, !dbg !843
  store i32 %conv27.i, i32* %tt.i, align 4, !dbg !843
  %80 = load i32, i32* %tt.i, align 4, !dbg !843
  %81 = load i32, i32* %l.i, align 4, !dbg !843
  %xor28.i = xor i32 %81, %80, !dbg !843
  store i32 %xor28.i, i32* %l.i, align 4, !dbg !843
  %82 = load i32, i32* %tt.i, align 4, !dbg !843
  %shl29.i = shl i32 %82, 8, !dbg !843
  %83 = load i32, i32* %r.i, align 4, !dbg !843
  %xor30.i = xor i32 %83, %shl29.i, !dbg !843
  store i32 %xor30.i, i32* %r.i, align 4, !dbg !843
  %84 = load i32, i32* %l.i, align 4, !dbg !843
  %shr31.i = lshr i32 %84, 1, !dbg !843
  %85 = load i32, i32* %r.i, align 4, !dbg !843
  %xor32.i = xor i32 %shr31.i, %85, !dbg !843
  %conv33.i = zext i32 %xor32.i to i64, !dbg !843
  %and34.i = and i64 %conv33.i, 1431655765, !dbg !843
  %conv35.i = trunc i64 %and34.i to i32, !dbg !843
  store i32 %conv35.i, i32* %tt.i, align 4, !dbg !843
  %86 = load i32, i32* %tt.i, align 4, !dbg !843
  %87 = load i32, i32* %r.i, align 4, !dbg !843
  %xor36.i = xor i32 %87, %86, !dbg !843
  store i32 %xor36.i, i32* %r.i, align 4, !dbg !843
  %88 = load i32, i32* %tt.i, align 4, !dbg !843
  %shl37.i = shl i32 %88, 1, !dbg !843
  %89 = load i32, i32* %l.i, align 4, !dbg !843
  %xor38.i = xor i32 %89, %shl37.i, !dbg !843
  store i32 %xor38.i, i32* %l.i, align 4, !dbg !843
  %90 = load i32, i32* %r.i, align 4, !dbg !844
  %91 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %90) #7, !dbg !844, !srcloc !71
  store i32 %91, i32* %ret.i, align 4, !dbg !844
  %92 = load i32, i32* %ret.i, align 4, !dbg !844
  store i32 %92, i32* %tmp.i, align 4, !dbg !844
  %93 = load i32, i32* %tmp.i, align 4, !dbg !844
  %conv39.i = zext i32 %93 to i64, !dbg !943
  %and40.i = and i64 %conv39.i, 4294967295, !dbg !944
  %conv41.i = trunc i64 %and40.i to i32, !dbg !943
  store i32 %conv41.i, i32* %r.i, align 4, !dbg !945
  %94 = load i32, i32* %l.i, align 4, !dbg !845
  %95 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %94) #7, !dbg !845, !srcloc !78
  store i32 %95, i32* %ret42.i, align 4, !dbg !845
  %96 = load i32, i32* %ret42.i, align 4, !dbg !845
  store i32 %96, i32* %tmp43.i, align 4, !dbg !845
  %97 = load i32, i32* %tmp43.i, align 4, !dbg !845
  %conv44.i = zext i32 %97 to i64, !dbg !946
  %and45.i = and i64 %conv44.i, 4294967295, !dbg !947
  %conv46.i = trunc i64 %and45.i to i32, !dbg !946
  store i32 %conv46.i, i32* %l.i, align 4, !dbg !948
  %98 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i, align 8, !dbg !949
  %ks47.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %98, i32 0, i32 0, !dbg !950
  %arraydecay.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks47.i, i64 0, i64 0, !dbg !951
  %deslong.i = bitcast %union.anon* %arraydecay.i to [2 x i32]*, !dbg !951
  %arraydecay48.i = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i, i64 0, i64 0, !dbg !949
  store i32* %arraydecay48.i, i32** %s.i, align 8, !dbg !952
  %99 = load i32, i32* %enc.addr.i, align 4, !dbg !953
  %tobool.i = icmp ne i32 %99, 0, !dbg !953
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !954

if.then.i:                                        ; preds = %for.body
  %100 = load i32, i32* %r.i, align 4, !dbg !955
  %101 = load i32*, i32** %s.i, align 8, !dbg !955
  %102 = load i32, i32* %101, align 4, !dbg !955
  %xor50.i = xor i32 %100, %102, !dbg !955
  store i32 %xor50.i, i32* %u.i, align 4, !dbg !955
  %103 = load i32, i32* %r.i, align 4, !dbg !955
  %104 = load i32*, i32** %s.i, align 8, !dbg !955
  %arrayidx51.i = getelementptr inbounds i32, i32* %104, i64 1, !dbg !955
  %105 = load i32, i32* %arrayidx51.i, align 4, !dbg !955
  %xor52.i = xor i32 %103, %105, !dbg !955
  store i32 %xor52.i, i32* %t.i, align 4, !dbg !955
  %106 = load i32, i32* %t.i, align 4, !dbg !846
  %107 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %106) #7, !dbg !846, !srcloc !95
  store i32 %107, i32* %ret53.i, align 4, !dbg !846
  %108 = load i32, i32* %ret53.i, align 4, !dbg !846
  store i32 %108, i32* %tmp54.i, align 4, !dbg !846
  %109 = load i32, i32* %tmp54.i, align 4, !dbg !846
  store i32 %109, i32* %t.i, align 4, !dbg !955
  %110 = load i32, i32* %u.i, align 4, !dbg !955
  %shr55.i = lshr i32 %110, 2, !dbg !955
  %and56.i = and i32 %shr55.i, 63, !dbg !955
  %idxprom.i = zext i32 %and56.i to i64, !dbg !955
  %arrayidx57.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i, !dbg !955
  %111 = load i32, i32* %arrayidx57.i, align 4, !dbg !955
  %112 = load i32, i32* %u.i, align 4, !dbg !955
  %shr58.i = lshr i32 %112, 10, !dbg !955
  %and59.i = and i32 %shr58.i, 63, !dbg !955
  %idxprom60.i = zext i32 %and59.i to i64, !dbg !955
  %arrayidx61.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom60.i, !dbg !955
  %113 = load i32, i32* %arrayidx61.i, align 4, !dbg !955
  %xor62.i = xor i32 %111, %113, !dbg !955
  %114 = load i32, i32* %u.i, align 4, !dbg !955
  %shr63.i = lshr i32 %114, 18, !dbg !955
  %and64.i = and i32 %shr63.i, 63, !dbg !955
  %idxprom65.i = zext i32 %and64.i to i64, !dbg !955
  %arrayidx66.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom65.i, !dbg !955
  %115 = load i32, i32* %arrayidx66.i, align 4, !dbg !955
  %xor67.i = xor i32 %xor62.i, %115, !dbg !955
  %116 = load i32, i32* %u.i, align 4, !dbg !955
  %shr68.i = lshr i32 %116, 26, !dbg !955
  %idxprom70.i = zext i32 %shr68.i to i64, !dbg !955
  %arrayidx71.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom70.i, !dbg !955
  %117 = load i32, i32* %arrayidx71.i, align 4, !dbg !955
  %xor72.i = xor i32 %xor67.i, %117, !dbg !955
  %118 = load i32, i32* %t.i, align 4, !dbg !955
  %shr73.i = lshr i32 %118, 2, !dbg !955
  %and74.i = and i32 %shr73.i, 63, !dbg !955
  %idxprom75.i = zext i32 %and74.i to i64, !dbg !955
  %arrayidx76.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom75.i, !dbg !955
  %119 = load i32, i32* %arrayidx76.i, align 4, !dbg !955
  %xor77.i = xor i32 %xor72.i, %119, !dbg !955
  %120 = load i32, i32* %t.i, align 4, !dbg !955
  %shr78.i = lshr i32 %120, 10, !dbg !955
  %and79.i = and i32 %shr78.i, 63, !dbg !955
  %idxprom80.i = zext i32 %and79.i to i64, !dbg !955
  %arrayidx81.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom80.i, !dbg !955
  %121 = load i32, i32* %arrayidx81.i, align 4, !dbg !955
  %xor82.i = xor i32 %xor77.i, %121, !dbg !955
  %122 = load i32, i32* %t.i, align 4, !dbg !955
  %shr83.i = lshr i32 %122, 18, !dbg !955
  %and84.i = and i32 %shr83.i, 63, !dbg !955
  %idxprom85.i = zext i32 %and84.i to i64, !dbg !955
  %arrayidx86.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom85.i, !dbg !955
  %123 = load i32, i32* %arrayidx86.i, align 4, !dbg !955
  %xor87.i = xor i32 %xor82.i, %123, !dbg !955
  %124 = load i32, i32* %t.i, align 4, !dbg !955
  %shr88.i = lshr i32 %124, 26, !dbg !955
  %idxprom90.i = zext i32 %shr88.i to i64, !dbg !955
  %arrayidx91.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom90.i, !dbg !955
  %125 = load i32, i32* %arrayidx91.i, align 4, !dbg !955
  %xor92.i = xor i32 %xor87.i, %125, !dbg !955
  %126 = load i32, i32* %l.i, align 4, !dbg !955
  %xor93.i = xor i32 %126, %xor92.i, !dbg !955
  store i32 %xor93.i, i32* %l.i, align 4, !dbg !955
  %127 = load i32, i32* %l.i, align 4, !dbg !956
  %128 = load i32*, i32** %s.i, align 8, !dbg !956
  %arrayidx94.i = getelementptr inbounds i32, i32* %128, i64 2, !dbg !956
  %129 = load i32, i32* %arrayidx94.i, align 4, !dbg !956
  %xor95.i = xor i32 %127, %129, !dbg !956
  store i32 %xor95.i, i32* %u.i, align 4, !dbg !956
  %130 = load i32, i32* %l.i, align 4, !dbg !956
  %131 = load i32*, i32** %s.i, align 8, !dbg !956
  %arrayidx96.i = getelementptr inbounds i32, i32* %131, i64 3, !dbg !956
  %132 = load i32, i32* %arrayidx96.i, align 4, !dbg !956
  %xor97.i = xor i32 %130, %132, !dbg !956
  store i32 %xor97.i, i32* %t.i, align 4, !dbg !956
  %133 = load i32, i32* %t.i, align 4, !dbg !847
  %134 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %133) #7, !dbg !847, !srcloc !101
  store i32 %134, i32* %ret98.i, align 4, !dbg !847
  %135 = load i32, i32* %ret98.i, align 4, !dbg !847
  store i32 %135, i32* %tmp99.i, align 4, !dbg !847
  %136 = load i32, i32* %tmp99.i, align 4, !dbg !847
  store i32 %136, i32* %t.i, align 4, !dbg !956
  %137 = load i32, i32* %u.i, align 4, !dbg !956
  %shr100.i = lshr i32 %137, 2, !dbg !956
  %and101.i = and i32 %shr100.i, 63, !dbg !956
  %idxprom102.i = zext i32 %and101.i to i64, !dbg !956
  %arrayidx103.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom102.i, !dbg !956
  %138 = load i32, i32* %arrayidx103.i, align 4, !dbg !956
  %139 = load i32, i32* %u.i, align 4, !dbg !956
  %shr104.i = lshr i32 %139, 10, !dbg !956
  %and105.i = and i32 %shr104.i, 63, !dbg !956
  %idxprom106.i = zext i32 %and105.i to i64, !dbg !956
  %arrayidx107.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom106.i, !dbg !956
  %140 = load i32, i32* %arrayidx107.i, align 4, !dbg !956
  %xor108.i = xor i32 %138, %140, !dbg !956
  %141 = load i32, i32* %u.i, align 4, !dbg !956
  %shr109.i = lshr i32 %141, 18, !dbg !956
  %and110.i = and i32 %shr109.i, 63, !dbg !956
  %idxprom111.i = zext i32 %and110.i to i64, !dbg !956
  %arrayidx112.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom111.i, !dbg !956
  %142 = load i32, i32* %arrayidx112.i, align 4, !dbg !956
  %xor113.i = xor i32 %xor108.i, %142, !dbg !956
  %143 = load i32, i32* %u.i, align 4, !dbg !956
  %shr114.i = lshr i32 %143, 26, !dbg !956
  %idxprom116.i = zext i32 %shr114.i to i64, !dbg !956
  %arrayidx117.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom116.i, !dbg !956
  %144 = load i32, i32* %arrayidx117.i, align 4, !dbg !956
  %xor118.i = xor i32 %xor113.i, %144, !dbg !956
  %145 = load i32, i32* %t.i, align 4, !dbg !956
  %shr119.i = lshr i32 %145, 2, !dbg !956
  %and120.i = and i32 %shr119.i, 63, !dbg !956
  %idxprom121.i = zext i32 %and120.i to i64, !dbg !956
  %arrayidx122.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom121.i, !dbg !956
  %146 = load i32, i32* %arrayidx122.i, align 4, !dbg !956
  %xor123.i = xor i32 %xor118.i, %146, !dbg !956
  %147 = load i32, i32* %t.i, align 4, !dbg !956
  %shr124.i = lshr i32 %147, 10, !dbg !956
  %and125.i = and i32 %shr124.i, 63, !dbg !956
  %idxprom126.i = zext i32 %and125.i to i64, !dbg !956
  %arrayidx127.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom126.i, !dbg !956
  %148 = load i32, i32* %arrayidx127.i, align 4, !dbg !956
  %xor128.i = xor i32 %xor123.i, %148, !dbg !956
  %149 = load i32, i32* %t.i, align 4, !dbg !956
  %shr129.i = lshr i32 %149, 18, !dbg !956
  %and130.i = and i32 %shr129.i, 63, !dbg !956
  %idxprom131.i = zext i32 %and130.i to i64, !dbg !956
  %arrayidx132.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom131.i, !dbg !956
  %150 = load i32, i32* %arrayidx132.i, align 4, !dbg !956
  %xor133.i = xor i32 %xor128.i, %150, !dbg !956
  %151 = load i32, i32* %t.i, align 4, !dbg !956
  %shr134.i = lshr i32 %151, 26, !dbg !956
  %idxprom136.i = zext i32 %shr134.i to i64, !dbg !956
  %arrayidx137.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom136.i, !dbg !956
  %152 = load i32, i32* %arrayidx137.i, align 4, !dbg !956
  %xor138.i = xor i32 %xor133.i, %152, !dbg !956
  %153 = load i32, i32* %r.i, align 4, !dbg !956
  %xor139.i = xor i32 %153, %xor138.i, !dbg !956
  store i32 %xor139.i, i32* %r.i, align 4, !dbg !956
  %154 = load i32, i32* %r.i, align 4, !dbg !957
  %155 = load i32*, i32** %s.i, align 8, !dbg !957
  %arrayidx140.i = getelementptr inbounds i32, i32* %155, i64 4, !dbg !957
  %156 = load i32, i32* %arrayidx140.i, align 4, !dbg !957
  %xor141.i = xor i32 %154, %156, !dbg !957
  store i32 %xor141.i, i32* %u.i, align 4, !dbg !957
  %157 = load i32, i32* %r.i, align 4, !dbg !957
  %158 = load i32*, i32** %s.i, align 8, !dbg !957
  %arrayidx142.i = getelementptr inbounds i32, i32* %158, i64 5, !dbg !957
  %159 = load i32, i32* %arrayidx142.i, align 4, !dbg !957
  %xor143.i = xor i32 %157, %159, !dbg !957
  store i32 %xor143.i, i32* %t.i, align 4, !dbg !957
  %160 = load i32, i32* %t.i, align 4, !dbg !848
  %161 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %160) #7, !dbg !848, !srcloc !107
  store i32 %161, i32* %ret144.i, align 4, !dbg !848
  %162 = load i32, i32* %ret144.i, align 4, !dbg !848
  store i32 %162, i32* %tmp145.i, align 4, !dbg !848
  %163 = load i32, i32* %tmp145.i, align 4, !dbg !848
  store i32 %163, i32* %t.i, align 4, !dbg !957
  %164 = load i32, i32* %u.i, align 4, !dbg !957
  %shr146.i = lshr i32 %164, 2, !dbg !957
  %and147.i = and i32 %shr146.i, 63, !dbg !957
  %idxprom148.i = zext i32 %and147.i to i64, !dbg !957
  %arrayidx149.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom148.i, !dbg !957
  %165 = load i32, i32* %arrayidx149.i, align 4, !dbg !957
  %166 = load i32, i32* %u.i, align 4, !dbg !957
  %shr150.i = lshr i32 %166, 10, !dbg !957
  %and151.i = and i32 %shr150.i, 63, !dbg !957
  %idxprom152.i = zext i32 %and151.i to i64, !dbg !957
  %arrayidx153.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom152.i, !dbg !957
  %167 = load i32, i32* %arrayidx153.i, align 4, !dbg !957
  %xor154.i = xor i32 %165, %167, !dbg !957
  %168 = load i32, i32* %u.i, align 4, !dbg !957
  %shr155.i = lshr i32 %168, 18, !dbg !957
  %and156.i = and i32 %shr155.i, 63, !dbg !957
  %idxprom157.i = zext i32 %and156.i to i64, !dbg !957
  %arrayidx158.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom157.i, !dbg !957
  %169 = load i32, i32* %arrayidx158.i, align 4, !dbg !957
  %xor159.i = xor i32 %xor154.i, %169, !dbg !957
  %170 = load i32, i32* %u.i, align 4, !dbg !957
  %shr160.i = lshr i32 %170, 26, !dbg !957
  %idxprom162.i = zext i32 %shr160.i to i64, !dbg !957
  %arrayidx163.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom162.i, !dbg !957
  %171 = load i32, i32* %arrayidx163.i, align 4, !dbg !957
  %xor164.i = xor i32 %xor159.i, %171, !dbg !957
  %172 = load i32, i32* %t.i, align 4, !dbg !957
  %shr165.i = lshr i32 %172, 2, !dbg !957
  %and166.i = and i32 %shr165.i, 63, !dbg !957
  %idxprom167.i = zext i32 %and166.i to i64, !dbg !957
  %arrayidx168.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom167.i, !dbg !957
  %173 = load i32, i32* %arrayidx168.i, align 4, !dbg !957
  %xor169.i = xor i32 %xor164.i, %173, !dbg !957
  %174 = load i32, i32* %t.i, align 4, !dbg !957
  %shr170.i = lshr i32 %174, 10, !dbg !957
  %and171.i = and i32 %shr170.i, 63, !dbg !957
  %idxprom172.i = zext i32 %and171.i to i64, !dbg !957
  %arrayidx173.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom172.i, !dbg !957
  %175 = load i32, i32* %arrayidx173.i, align 4, !dbg !957
  %xor174.i = xor i32 %xor169.i, %175, !dbg !957
  %176 = load i32, i32* %t.i, align 4, !dbg !957
  %shr175.i = lshr i32 %176, 18, !dbg !957
  %and176.i = and i32 %shr175.i, 63, !dbg !957
  %idxprom177.i = zext i32 %and176.i to i64, !dbg !957
  %arrayidx178.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom177.i, !dbg !957
  %177 = load i32, i32* %arrayidx178.i, align 4, !dbg !957
  %xor179.i = xor i32 %xor174.i, %177, !dbg !957
  %178 = load i32, i32* %t.i, align 4, !dbg !957
  %shr180.i = lshr i32 %178, 26, !dbg !957
  %idxprom182.i = zext i32 %shr180.i to i64, !dbg !957
  %arrayidx183.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom182.i, !dbg !957
  %179 = load i32, i32* %arrayidx183.i, align 4, !dbg !957
  %xor184.i = xor i32 %xor179.i, %179, !dbg !957
  %180 = load i32, i32* %l.i, align 4, !dbg !957
  %xor185.i = xor i32 %180, %xor184.i, !dbg !957
  store i32 %xor185.i, i32* %l.i, align 4, !dbg !957
  %181 = load i32, i32* %l.i, align 4, !dbg !958
  %182 = load i32*, i32** %s.i, align 8, !dbg !958
  %arrayidx186.i = getelementptr inbounds i32, i32* %182, i64 6, !dbg !958
  %183 = load i32, i32* %arrayidx186.i, align 4, !dbg !958
  %xor187.i = xor i32 %181, %183, !dbg !958
  store i32 %xor187.i, i32* %u.i, align 4, !dbg !958
  %184 = load i32, i32* %l.i, align 4, !dbg !958
  %185 = load i32*, i32** %s.i, align 8, !dbg !958
  %arrayidx188.i = getelementptr inbounds i32, i32* %185, i64 7, !dbg !958
  %186 = load i32, i32* %arrayidx188.i, align 4, !dbg !958
  %xor189.i = xor i32 %184, %186, !dbg !958
  store i32 %xor189.i, i32* %t.i, align 4, !dbg !958
  %187 = load i32, i32* %t.i, align 4, !dbg !849
  %188 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %187) #7, !dbg !849, !srcloc !113
  store i32 %188, i32* %ret190.i, align 4, !dbg !849
  %189 = load i32, i32* %ret190.i, align 4, !dbg !849
  store i32 %189, i32* %tmp191.i, align 4, !dbg !849
  %190 = load i32, i32* %tmp191.i, align 4, !dbg !849
  store i32 %190, i32* %t.i, align 4, !dbg !958
  %191 = load i32, i32* %u.i, align 4, !dbg !958
  %shr192.i = lshr i32 %191, 2, !dbg !958
  %and193.i = and i32 %shr192.i, 63, !dbg !958
  %idxprom194.i = zext i32 %and193.i to i64, !dbg !958
  %arrayidx195.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom194.i, !dbg !958
  %192 = load i32, i32* %arrayidx195.i, align 4, !dbg !958
  %193 = load i32, i32* %u.i, align 4, !dbg !958
  %shr196.i = lshr i32 %193, 10, !dbg !958
  %and197.i = and i32 %shr196.i, 63, !dbg !958
  %idxprom198.i = zext i32 %and197.i to i64, !dbg !958
  %arrayidx199.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom198.i, !dbg !958
  %194 = load i32, i32* %arrayidx199.i, align 4, !dbg !958
  %xor200.i = xor i32 %192, %194, !dbg !958
  %195 = load i32, i32* %u.i, align 4, !dbg !958
  %shr201.i = lshr i32 %195, 18, !dbg !958
  %and202.i = and i32 %shr201.i, 63, !dbg !958
  %idxprom203.i = zext i32 %and202.i to i64, !dbg !958
  %arrayidx204.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom203.i, !dbg !958
  %196 = load i32, i32* %arrayidx204.i, align 4, !dbg !958
  %xor205.i = xor i32 %xor200.i, %196, !dbg !958
  %197 = load i32, i32* %u.i, align 4, !dbg !958
  %shr206.i = lshr i32 %197, 26, !dbg !958
  %idxprom208.i = zext i32 %shr206.i to i64, !dbg !958
  %arrayidx209.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom208.i, !dbg !958
  %198 = load i32, i32* %arrayidx209.i, align 4, !dbg !958
  %xor210.i = xor i32 %xor205.i, %198, !dbg !958
  %199 = load i32, i32* %t.i, align 4, !dbg !958
  %shr211.i = lshr i32 %199, 2, !dbg !958
  %and212.i = and i32 %shr211.i, 63, !dbg !958
  %idxprom213.i = zext i32 %and212.i to i64, !dbg !958
  %arrayidx214.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom213.i, !dbg !958
  %200 = load i32, i32* %arrayidx214.i, align 4, !dbg !958
  %xor215.i = xor i32 %xor210.i, %200, !dbg !958
  %201 = load i32, i32* %t.i, align 4, !dbg !958
  %shr216.i = lshr i32 %201, 10, !dbg !958
  %and217.i = and i32 %shr216.i, 63, !dbg !958
  %idxprom218.i = zext i32 %and217.i to i64, !dbg !958
  %arrayidx219.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom218.i, !dbg !958
  %202 = load i32, i32* %arrayidx219.i, align 4, !dbg !958
  %xor220.i = xor i32 %xor215.i, %202, !dbg !958
  %203 = load i32, i32* %t.i, align 4, !dbg !958
  %shr221.i = lshr i32 %203, 18, !dbg !958
  %and222.i = and i32 %shr221.i, 63, !dbg !958
  %idxprom223.i = zext i32 %and222.i to i64, !dbg !958
  %arrayidx224.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom223.i, !dbg !958
  %204 = load i32, i32* %arrayidx224.i, align 4, !dbg !958
  %xor225.i = xor i32 %xor220.i, %204, !dbg !958
  %205 = load i32, i32* %t.i, align 4, !dbg !958
  %shr226.i = lshr i32 %205, 26, !dbg !958
  %idxprom228.i = zext i32 %shr226.i to i64, !dbg !958
  %arrayidx229.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom228.i, !dbg !958
  %206 = load i32, i32* %arrayidx229.i, align 4, !dbg !958
  %xor230.i = xor i32 %xor225.i, %206, !dbg !958
  %207 = load i32, i32* %r.i, align 4, !dbg !958
  %xor231.i = xor i32 %207, %xor230.i, !dbg !958
  store i32 %xor231.i, i32* %r.i, align 4, !dbg !958
  %208 = load i32, i32* %r.i, align 4, !dbg !959
  %209 = load i32*, i32** %s.i, align 8, !dbg !959
  %arrayidx232.i = getelementptr inbounds i32, i32* %209, i64 8, !dbg !959
  %210 = load i32, i32* %arrayidx232.i, align 4, !dbg !959
  %xor233.i = xor i32 %208, %210, !dbg !959
  store i32 %xor233.i, i32* %u.i, align 4, !dbg !959
  %211 = load i32, i32* %r.i, align 4, !dbg !959
  %212 = load i32*, i32** %s.i, align 8, !dbg !959
  %arrayidx234.i = getelementptr inbounds i32, i32* %212, i64 9, !dbg !959
  %213 = load i32, i32* %arrayidx234.i, align 4, !dbg !959
  %xor235.i = xor i32 %211, %213, !dbg !959
  store i32 %xor235.i, i32* %t.i, align 4, !dbg !959
  %214 = load i32, i32* %t.i, align 4, !dbg !850
  %215 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %214) #7, !dbg !850, !srcloc !119
  store i32 %215, i32* %ret236.i, align 4, !dbg !850
  %216 = load i32, i32* %ret236.i, align 4, !dbg !850
  store i32 %216, i32* %tmp237.i, align 4, !dbg !850
  %217 = load i32, i32* %tmp237.i, align 4, !dbg !850
  store i32 %217, i32* %t.i, align 4, !dbg !959
  %218 = load i32, i32* %u.i, align 4, !dbg !959
  %shr238.i = lshr i32 %218, 2, !dbg !959
  %and239.i = and i32 %shr238.i, 63, !dbg !959
  %idxprom240.i = zext i32 %and239.i to i64, !dbg !959
  %arrayidx241.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom240.i, !dbg !959
  %219 = load i32, i32* %arrayidx241.i, align 4, !dbg !959
  %220 = load i32, i32* %u.i, align 4, !dbg !959
  %shr242.i = lshr i32 %220, 10, !dbg !959
  %and243.i = and i32 %shr242.i, 63, !dbg !959
  %idxprom244.i = zext i32 %and243.i to i64, !dbg !959
  %arrayidx245.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom244.i, !dbg !959
  %221 = load i32, i32* %arrayidx245.i, align 4, !dbg !959
  %xor246.i = xor i32 %219, %221, !dbg !959
  %222 = load i32, i32* %u.i, align 4, !dbg !959
  %shr247.i = lshr i32 %222, 18, !dbg !959
  %and248.i = and i32 %shr247.i, 63, !dbg !959
  %idxprom249.i = zext i32 %and248.i to i64, !dbg !959
  %arrayidx250.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom249.i, !dbg !959
  %223 = load i32, i32* %arrayidx250.i, align 4, !dbg !959
  %xor251.i = xor i32 %xor246.i, %223, !dbg !959
  %224 = load i32, i32* %u.i, align 4, !dbg !959
  %shr252.i = lshr i32 %224, 26, !dbg !959
  %idxprom254.i = zext i32 %shr252.i to i64, !dbg !959
  %arrayidx255.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom254.i, !dbg !959
  %225 = load i32, i32* %arrayidx255.i, align 4, !dbg !959
  %xor256.i = xor i32 %xor251.i, %225, !dbg !959
  %226 = load i32, i32* %t.i, align 4, !dbg !959
  %shr257.i = lshr i32 %226, 2, !dbg !959
  %and258.i = and i32 %shr257.i, 63, !dbg !959
  %idxprom259.i = zext i32 %and258.i to i64, !dbg !959
  %arrayidx260.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom259.i, !dbg !959
  %227 = load i32, i32* %arrayidx260.i, align 4, !dbg !959
  %xor261.i = xor i32 %xor256.i, %227, !dbg !959
  %228 = load i32, i32* %t.i, align 4, !dbg !959
  %shr262.i = lshr i32 %228, 10, !dbg !959
  %and263.i = and i32 %shr262.i, 63, !dbg !959
  %idxprom264.i = zext i32 %and263.i to i64, !dbg !959
  %arrayidx265.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom264.i, !dbg !959
  %229 = load i32, i32* %arrayidx265.i, align 4, !dbg !959
  %xor266.i = xor i32 %xor261.i, %229, !dbg !959
  %230 = load i32, i32* %t.i, align 4, !dbg !959
  %shr267.i = lshr i32 %230, 18, !dbg !959
  %and268.i = and i32 %shr267.i, 63, !dbg !959
  %idxprom269.i = zext i32 %and268.i to i64, !dbg !959
  %arrayidx270.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom269.i, !dbg !959
  %231 = load i32, i32* %arrayidx270.i, align 4, !dbg !959
  %xor271.i = xor i32 %xor266.i, %231, !dbg !959
  %232 = load i32, i32* %t.i, align 4, !dbg !959
  %shr272.i = lshr i32 %232, 26, !dbg !959
  %idxprom274.i = zext i32 %shr272.i to i64, !dbg !959
  %arrayidx275.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom274.i, !dbg !959
  %233 = load i32, i32* %arrayidx275.i, align 4, !dbg !959
  %xor276.i = xor i32 %xor271.i, %233, !dbg !959
  %234 = load i32, i32* %l.i, align 4, !dbg !959
  %xor277.i = xor i32 %234, %xor276.i, !dbg !959
  store i32 %xor277.i, i32* %l.i, align 4, !dbg !959
  %235 = load i32, i32* %l.i, align 4, !dbg !960
  %236 = load i32*, i32** %s.i, align 8, !dbg !960
  %arrayidx278.i = getelementptr inbounds i32, i32* %236, i64 10, !dbg !960
  %237 = load i32, i32* %arrayidx278.i, align 4, !dbg !960
  %xor279.i = xor i32 %235, %237, !dbg !960
  store i32 %xor279.i, i32* %u.i, align 4, !dbg !960
  %238 = load i32, i32* %l.i, align 4, !dbg !960
  %239 = load i32*, i32** %s.i, align 8, !dbg !960
  %arrayidx280.i = getelementptr inbounds i32, i32* %239, i64 11, !dbg !960
  %240 = load i32, i32* %arrayidx280.i, align 4, !dbg !960
  %xor281.i = xor i32 %238, %240, !dbg !960
  store i32 %xor281.i, i32* %t.i, align 4, !dbg !960
  %241 = load i32, i32* %t.i, align 4, !dbg !851
  %242 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %241) #7, !dbg !851, !srcloc !125
  store i32 %242, i32* %ret282.i, align 4, !dbg !851
  %243 = load i32, i32* %ret282.i, align 4, !dbg !851
  store i32 %243, i32* %tmp283.i, align 4, !dbg !851
  %244 = load i32, i32* %tmp283.i, align 4, !dbg !851
  store i32 %244, i32* %t.i, align 4, !dbg !960
  %245 = load i32, i32* %u.i, align 4, !dbg !960
  %shr284.i = lshr i32 %245, 2, !dbg !960
  %and285.i = and i32 %shr284.i, 63, !dbg !960
  %idxprom286.i = zext i32 %and285.i to i64, !dbg !960
  %arrayidx287.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom286.i, !dbg !960
  %246 = load i32, i32* %arrayidx287.i, align 4, !dbg !960
  %247 = load i32, i32* %u.i, align 4, !dbg !960
  %shr288.i = lshr i32 %247, 10, !dbg !960
  %and289.i = and i32 %shr288.i, 63, !dbg !960
  %idxprom290.i = zext i32 %and289.i to i64, !dbg !960
  %arrayidx291.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom290.i, !dbg !960
  %248 = load i32, i32* %arrayidx291.i, align 4, !dbg !960
  %xor292.i = xor i32 %246, %248, !dbg !960
  %249 = load i32, i32* %u.i, align 4, !dbg !960
  %shr293.i = lshr i32 %249, 18, !dbg !960
  %and294.i = and i32 %shr293.i, 63, !dbg !960
  %idxprom295.i = zext i32 %and294.i to i64, !dbg !960
  %arrayidx296.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom295.i, !dbg !960
  %250 = load i32, i32* %arrayidx296.i, align 4, !dbg !960
  %xor297.i = xor i32 %xor292.i, %250, !dbg !960
  %251 = load i32, i32* %u.i, align 4, !dbg !960
  %shr298.i = lshr i32 %251, 26, !dbg !960
  %idxprom300.i = zext i32 %shr298.i to i64, !dbg !960
  %arrayidx301.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom300.i, !dbg !960
  %252 = load i32, i32* %arrayidx301.i, align 4, !dbg !960
  %xor302.i = xor i32 %xor297.i, %252, !dbg !960
  %253 = load i32, i32* %t.i, align 4, !dbg !960
  %shr303.i = lshr i32 %253, 2, !dbg !960
  %and304.i = and i32 %shr303.i, 63, !dbg !960
  %idxprom305.i = zext i32 %and304.i to i64, !dbg !960
  %arrayidx306.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom305.i, !dbg !960
  %254 = load i32, i32* %arrayidx306.i, align 4, !dbg !960
  %xor307.i = xor i32 %xor302.i, %254, !dbg !960
  %255 = load i32, i32* %t.i, align 4, !dbg !960
  %shr308.i = lshr i32 %255, 10, !dbg !960
  %and309.i = and i32 %shr308.i, 63, !dbg !960
  %idxprom310.i = zext i32 %and309.i to i64, !dbg !960
  %arrayidx311.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom310.i, !dbg !960
  %256 = load i32, i32* %arrayidx311.i, align 4, !dbg !960
  %xor312.i = xor i32 %xor307.i, %256, !dbg !960
  %257 = load i32, i32* %t.i, align 4, !dbg !960
  %shr313.i = lshr i32 %257, 18, !dbg !960
  %and314.i = and i32 %shr313.i, 63, !dbg !960
  %idxprom315.i = zext i32 %and314.i to i64, !dbg !960
  %arrayidx316.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom315.i, !dbg !960
  %258 = load i32, i32* %arrayidx316.i, align 4, !dbg !960
  %xor317.i = xor i32 %xor312.i, %258, !dbg !960
  %259 = load i32, i32* %t.i, align 4, !dbg !960
  %shr318.i = lshr i32 %259, 26, !dbg !960
  %idxprom320.i = zext i32 %shr318.i to i64, !dbg !960
  %arrayidx321.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom320.i, !dbg !960
  %260 = load i32, i32* %arrayidx321.i, align 4, !dbg !960
  %xor322.i = xor i32 %xor317.i, %260, !dbg !960
  %261 = load i32, i32* %r.i, align 4, !dbg !960
  %xor323.i = xor i32 %261, %xor322.i, !dbg !960
  store i32 %xor323.i, i32* %r.i, align 4, !dbg !960
  %262 = load i32, i32* %r.i, align 4, !dbg !961
  %263 = load i32*, i32** %s.i, align 8, !dbg !961
  %arrayidx324.i = getelementptr inbounds i32, i32* %263, i64 12, !dbg !961
  %264 = load i32, i32* %arrayidx324.i, align 4, !dbg !961
  %xor325.i = xor i32 %262, %264, !dbg !961
  store i32 %xor325.i, i32* %u.i, align 4, !dbg !961
  %265 = load i32, i32* %r.i, align 4, !dbg !961
  %266 = load i32*, i32** %s.i, align 8, !dbg !961
  %arrayidx326.i = getelementptr inbounds i32, i32* %266, i64 13, !dbg !961
  %267 = load i32, i32* %arrayidx326.i, align 4, !dbg !961
  %xor327.i = xor i32 %265, %267, !dbg !961
  store i32 %xor327.i, i32* %t.i, align 4, !dbg !961
  %268 = load i32, i32* %t.i, align 4, !dbg !852
  %269 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %268) #7, !dbg !852, !srcloc !131
  store i32 %269, i32* %ret328.i, align 4, !dbg !852
  %270 = load i32, i32* %ret328.i, align 4, !dbg !852
  store i32 %270, i32* %tmp329.i, align 4, !dbg !852
  %271 = load i32, i32* %tmp329.i, align 4, !dbg !852
  store i32 %271, i32* %t.i, align 4, !dbg !961
  %272 = load i32, i32* %u.i, align 4, !dbg !961
  %shr330.i = lshr i32 %272, 2, !dbg !961
  %and331.i = and i32 %shr330.i, 63, !dbg !961
  %idxprom332.i = zext i32 %and331.i to i64, !dbg !961
  %arrayidx333.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom332.i, !dbg !961
  %273 = load i32, i32* %arrayidx333.i, align 4, !dbg !961
  %274 = load i32, i32* %u.i, align 4, !dbg !961
  %shr334.i = lshr i32 %274, 10, !dbg !961
  %and335.i = and i32 %shr334.i, 63, !dbg !961
  %idxprom336.i = zext i32 %and335.i to i64, !dbg !961
  %arrayidx337.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom336.i, !dbg !961
  %275 = load i32, i32* %arrayidx337.i, align 4, !dbg !961
  %xor338.i = xor i32 %273, %275, !dbg !961
  %276 = load i32, i32* %u.i, align 4, !dbg !961
  %shr339.i = lshr i32 %276, 18, !dbg !961
  %and340.i = and i32 %shr339.i, 63, !dbg !961
  %idxprom341.i = zext i32 %and340.i to i64, !dbg !961
  %arrayidx342.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom341.i, !dbg !961
  %277 = load i32, i32* %arrayidx342.i, align 4, !dbg !961
  %xor343.i = xor i32 %xor338.i, %277, !dbg !961
  %278 = load i32, i32* %u.i, align 4, !dbg !961
  %shr344.i = lshr i32 %278, 26, !dbg !961
  %idxprom346.i = zext i32 %shr344.i to i64, !dbg !961
  %arrayidx347.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom346.i, !dbg !961
  %279 = load i32, i32* %arrayidx347.i, align 4, !dbg !961
  %xor348.i = xor i32 %xor343.i, %279, !dbg !961
  %280 = load i32, i32* %t.i, align 4, !dbg !961
  %shr349.i = lshr i32 %280, 2, !dbg !961
  %and350.i = and i32 %shr349.i, 63, !dbg !961
  %idxprom351.i = zext i32 %and350.i to i64, !dbg !961
  %arrayidx352.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom351.i, !dbg !961
  %281 = load i32, i32* %arrayidx352.i, align 4, !dbg !961
  %xor353.i = xor i32 %xor348.i, %281, !dbg !961
  %282 = load i32, i32* %t.i, align 4, !dbg !961
  %shr354.i = lshr i32 %282, 10, !dbg !961
  %and355.i = and i32 %shr354.i, 63, !dbg !961
  %idxprom356.i = zext i32 %and355.i to i64, !dbg !961
  %arrayidx357.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom356.i, !dbg !961
  %283 = load i32, i32* %arrayidx357.i, align 4, !dbg !961
  %xor358.i = xor i32 %xor353.i, %283, !dbg !961
  %284 = load i32, i32* %t.i, align 4, !dbg !961
  %shr359.i = lshr i32 %284, 18, !dbg !961
  %and360.i = and i32 %shr359.i, 63, !dbg !961
  %idxprom361.i = zext i32 %and360.i to i64, !dbg !961
  %arrayidx362.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom361.i, !dbg !961
  %285 = load i32, i32* %arrayidx362.i, align 4, !dbg !961
  %xor363.i = xor i32 %xor358.i, %285, !dbg !961
  %286 = load i32, i32* %t.i, align 4, !dbg !961
  %shr364.i = lshr i32 %286, 26, !dbg !961
  %idxprom366.i = zext i32 %shr364.i to i64, !dbg !961
  %arrayidx367.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom366.i, !dbg !961
  %287 = load i32, i32* %arrayidx367.i, align 4, !dbg !961
  %xor368.i = xor i32 %xor363.i, %287, !dbg !961
  %288 = load i32, i32* %l.i, align 4, !dbg !961
  %xor369.i = xor i32 %288, %xor368.i, !dbg !961
  store i32 %xor369.i, i32* %l.i, align 4, !dbg !961
  %289 = load i32, i32* %l.i, align 4, !dbg !962
  %290 = load i32*, i32** %s.i, align 8, !dbg !962
  %arrayidx370.i = getelementptr inbounds i32, i32* %290, i64 14, !dbg !962
  %291 = load i32, i32* %arrayidx370.i, align 4, !dbg !962
  %xor371.i = xor i32 %289, %291, !dbg !962
  store i32 %xor371.i, i32* %u.i, align 4, !dbg !962
  %292 = load i32, i32* %l.i, align 4, !dbg !962
  %293 = load i32*, i32** %s.i, align 8, !dbg !962
  %arrayidx372.i = getelementptr inbounds i32, i32* %293, i64 15, !dbg !962
  %294 = load i32, i32* %arrayidx372.i, align 4, !dbg !962
  %xor373.i = xor i32 %292, %294, !dbg !962
  store i32 %xor373.i, i32* %t.i, align 4, !dbg !962
  %295 = load i32, i32* %t.i, align 4, !dbg !853
  %296 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %295) #7, !dbg !853, !srcloc !137
  store i32 %296, i32* %ret374.i, align 4, !dbg !853
  %297 = load i32, i32* %ret374.i, align 4, !dbg !853
  store i32 %297, i32* %tmp375.i, align 4, !dbg !853
  %298 = load i32, i32* %tmp375.i, align 4, !dbg !853
  store i32 %298, i32* %t.i, align 4, !dbg !962
  %299 = load i32, i32* %u.i, align 4, !dbg !962
  %shr376.i = lshr i32 %299, 2, !dbg !962
  %and377.i = and i32 %shr376.i, 63, !dbg !962
  %idxprom378.i = zext i32 %and377.i to i64, !dbg !962
  %arrayidx379.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom378.i, !dbg !962
  %300 = load i32, i32* %arrayidx379.i, align 4, !dbg !962
  %301 = load i32, i32* %u.i, align 4, !dbg !962
  %shr380.i = lshr i32 %301, 10, !dbg !962
  %and381.i = and i32 %shr380.i, 63, !dbg !962
  %idxprom382.i = zext i32 %and381.i to i64, !dbg !962
  %arrayidx383.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom382.i, !dbg !962
  %302 = load i32, i32* %arrayidx383.i, align 4, !dbg !962
  %xor384.i = xor i32 %300, %302, !dbg !962
  %303 = load i32, i32* %u.i, align 4, !dbg !962
  %shr385.i = lshr i32 %303, 18, !dbg !962
  %and386.i = and i32 %shr385.i, 63, !dbg !962
  %idxprom387.i = zext i32 %and386.i to i64, !dbg !962
  %arrayidx388.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom387.i, !dbg !962
  %304 = load i32, i32* %arrayidx388.i, align 4, !dbg !962
  %xor389.i = xor i32 %xor384.i, %304, !dbg !962
  %305 = load i32, i32* %u.i, align 4, !dbg !962
  %shr390.i = lshr i32 %305, 26, !dbg !962
  %idxprom392.i = zext i32 %shr390.i to i64, !dbg !962
  %arrayidx393.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom392.i, !dbg !962
  %306 = load i32, i32* %arrayidx393.i, align 4, !dbg !962
  %xor394.i = xor i32 %xor389.i, %306, !dbg !962
  %307 = load i32, i32* %t.i, align 4, !dbg !962
  %shr395.i = lshr i32 %307, 2, !dbg !962
  %and396.i = and i32 %shr395.i, 63, !dbg !962
  %idxprom397.i = zext i32 %and396.i to i64, !dbg !962
  %arrayidx398.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom397.i, !dbg !962
  %308 = load i32, i32* %arrayidx398.i, align 4, !dbg !962
  %xor399.i = xor i32 %xor394.i, %308, !dbg !962
  %309 = load i32, i32* %t.i, align 4, !dbg !962
  %shr400.i = lshr i32 %309, 10, !dbg !962
  %and401.i = and i32 %shr400.i, 63, !dbg !962
  %idxprom402.i = zext i32 %and401.i to i64, !dbg !962
  %arrayidx403.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom402.i, !dbg !962
  %310 = load i32, i32* %arrayidx403.i, align 4, !dbg !962
  %xor404.i = xor i32 %xor399.i, %310, !dbg !962
  %311 = load i32, i32* %t.i, align 4, !dbg !962
  %shr405.i = lshr i32 %311, 18, !dbg !962
  %and406.i = and i32 %shr405.i, 63, !dbg !962
  %idxprom407.i = zext i32 %and406.i to i64, !dbg !962
  %arrayidx408.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom407.i, !dbg !962
  %312 = load i32, i32* %arrayidx408.i, align 4, !dbg !962
  %xor409.i = xor i32 %xor404.i, %312, !dbg !962
  %313 = load i32, i32* %t.i, align 4, !dbg !962
  %shr410.i = lshr i32 %313, 26, !dbg !962
  %idxprom412.i = zext i32 %shr410.i to i64, !dbg !962
  %arrayidx413.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom412.i, !dbg !962
  %314 = load i32, i32* %arrayidx413.i, align 4, !dbg !962
  %xor414.i = xor i32 %xor409.i, %314, !dbg !962
  %315 = load i32, i32* %r.i, align 4, !dbg !962
  %xor415.i = xor i32 %315, %xor414.i, !dbg !962
  store i32 %xor415.i, i32* %r.i, align 4, !dbg !962
  %316 = load i32, i32* %r.i, align 4, !dbg !963
  %317 = load i32*, i32** %s.i, align 8, !dbg !963
  %arrayidx416.i = getelementptr inbounds i32, i32* %317, i64 16, !dbg !963
  %318 = load i32, i32* %arrayidx416.i, align 4, !dbg !963
  %xor417.i = xor i32 %316, %318, !dbg !963
  store i32 %xor417.i, i32* %u.i, align 4, !dbg !963
  %319 = load i32, i32* %r.i, align 4, !dbg !963
  %320 = load i32*, i32** %s.i, align 8, !dbg !963
  %arrayidx418.i = getelementptr inbounds i32, i32* %320, i64 17, !dbg !963
  %321 = load i32, i32* %arrayidx418.i, align 4, !dbg !963
  %xor419.i = xor i32 %319, %321, !dbg !963
  store i32 %xor419.i, i32* %t.i, align 4, !dbg !963
  %322 = load i32, i32* %t.i, align 4, !dbg !854
  %323 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %322) #7, !dbg !854, !srcloc !143
  store i32 %323, i32* %ret420.i, align 4, !dbg !854
  %324 = load i32, i32* %ret420.i, align 4, !dbg !854
  store i32 %324, i32* %tmp421.i, align 4, !dbg !854
  %325 = load i32, i32* %tmp421.i, align 4, !dbg !854
  store i32 %325, i32* %t.i, align 4, !dbg !963
  %326 = load i32, i32* %u.i, align 4, !dbg !963
  %shr422.i = lshr i32 %326, 2, !dbg !963
  %and423.i = and i32 %shr422.i, 63, !dbg !963
  %idxprom424.i = zext i32 %and423.i to i64, !dbg !963
  %arrayidx425.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom424.i, !dbg !963
  %327 = load i32, i32* %arrayidx425.i, align 4, !dbg !963
  %328 = load i32, i32* %u.i, align 4, !dbg !963
  %shr426.i = lshr i32 %328, 10, !dbg !963
  %and427.i = and i32 %shr426.i, 63, !dbg !963
  %idxprom428.i = zext i32 %and427.i to i64, !dbg !963
  %arrayidx429.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom428.i, !dbg !963
  %329 = load i32, i32* %arrayidx429.i, align 4, !dbg !963
  %xor430.i = xor i32 %327, %329, !dbg !963
  %330 = load i32, i32* %u.i, align 4, !dbg !963
  %shr431.i = lshr i32 %330, 18, !dbg !963
  %and432.i = and i32 %shr431.i, 63, !dbg !963
  %idxprom433.i = zext i32 %and432.i to i64, !dbg !963
  %arrayidx434.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom433.i, !dbg !963
  %331 = load i32, i32* %arrayidx434.i, align 4, !dbg !963
  %xor435.i = xor i32 %xor430.i, %331, !dbg !963
  %332 = load i32, i32* %u.i, align 4, !dbg !963
  %shr436.i = lshr i32 %332, 26, !dbg !963
  %idxprom438.i = zext i32 %shr436.i to i64, !dbg !963
  %arrayidx439.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom438.i, !dbg !963
  %333 = load i32, i32* %arrayidx439.i, align 4, !dbg !963
  %xor440.i = xor i32 %xor435.i, %333, !dbg !963
  %334 = load i32, i32* %t.i, align 4, !dbg !963
  %shr441.i = lshr i32 %334, 2, !dbg !963
  %and442.i = and i32 %shr441.i, 63, !dbg !963
  %idxprom443.i = zext i32 %and442.i to i64, !dbg !963
  %arrayidx444.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom443.i, !dbg !963
  %335 = load i32, i32* %arrayidx444.i, align 4, !dbg !963
  %xor445.i = xor i32 %xor440.i, %335, !dbg !963
  %336 = load i32, i32* %t.i, align 4, !dbg !963
  %shr446.i = lshr i32 %336, 10, !dbg !963
  %and447.i = and i32 %shr446.i, 63, !dbg !963
  %idxprom448.i = zext i32 %and447.i to i64, !dbg !963
  %arrayidx449.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom448.i, !dbg !963
  %337 = load i32, i32* %arrayidx449.i, align 4, !dbg !963
  %xor450.i = xor i32 %xor445.i, %337, !dbg !963
  %338 = load i32, i32* %t.i, align 4, !dbg !963
  %shr451.i = lshr i32 %338, 18, !dbg !963
  %and452.i = and i32 %shr451.i, 63, !dbg !963
  %idxprom453.i = zext i32 %and452.i to i64, !dbg !963
  %arrayidx454.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom453.i, !dbg !963
  %339 = load i32, i32* %arrayidx454.i, align 4, !dbg !963
  %xor455.i = xor i32 %xor450.i, %339, !dbg !963
  %340 = load i32, i32* %t.i, align 4, !dbg !963
  %shr456.i = lshr i32 %340, 26, !dbg !963
  %idxprom458.i = zext i32 %shr456.i to i64, !dbg !963
  %arrayidx459.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom458.i, !dbg !963
  %341 = load i32, i32* %arrayidx459.i, align 4, !dbg !963
  %xor460.i = xor i32 %xor455.i, %341, !dbg !963
  %342 = load i32, i32* %l.i, align 4, !dbg !963
  %xor461.i = xor i32 %342, %xor460.i, !dbg !963
  store i32 %xor461.i, i32* %l.i, align 4, !dbg !963
  %343 = load i32, i32* %l.i, align 4, !dbg !964
  %344 = load i32*, i32** %s.i, align 8, !dbg !964
  %arrayidx462.i = getelementptr inbounds i32, i32* %344, i64 18, !dbg !964
  %345 = load i32, i32* %arrayidx462.i, align 4, !dbg !964
  %xor463.i = xor i32 %343, %345, !dbg !964
  store i32 %xor463.i, i32* %u.i, align 4, !dbg !964
  %346 = load i32, i32* %l.i, align 4, !dbg !964
  %347 = load i32*, i32** %s.i, align 8, !dbg !964
  %arrayidx464.i = getelementptr inbounds i32, i32* %347, i64 19, !dbg !964
  %348 = load i32, i32* %arrayidx464.i, align 4, !dbg !964
  %xor465.i = xor i32 %346, %348, !dbg !964
  store i32 %xor465.i, i32* %t.i, align 4, !dbg !964
  %349 = load i32, i32* %t.i, align 4, !dbg !855
  %350 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %349) #7, !dbg !855, !srcloc !149
  store i32 %350, i32* %ret466.i, align 4, !dbg !855
  %351 = load i32, i32* %ret466.i, align 4, !dbg !855
  store i32 %351, i32* %tmp467.i, align 4, !dbg !855
  %352 = load i32, i32* %tmp467.i, align 4, !dbg !855
  store i32 %352, i32* %t.i, align 4, !dbg !964
  %353 = load i32, i32* %u.i, align 4, !dbg !964
  %shr468.i = lshr i32 %353, 2, !dbg !964
  %and469.i = and i32 %shr468.i, 63, !dbg !964
  %idxprom470.i = zext i32 %and469.i to i64, !dbg !964
  %arrayidx471.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom470.i, !dbg !964
  %354 = load i32, i32* %arrayidx471.i, align 4, !dbg !964
  %355 = load i32, i32* %u.i, align 4, !dbg !964
  %shr472.i = lshr i32 %355, 10, !dbg !964
  %and473.i = and i32 %shr472.i, 63, !dbg !964
  %idxprom474.i = zext i32 %and473.i to i64, !dbg !964
  %arrayidx475.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom474.i, !dbg !964
  %356 = load i32, i32* %arrayidx475.i, align 4, !dbg !964
  %xor476.i = xor i32 %354, %356, !dbg !964
  %357 = load i32, i32* %u.i, align 4, !dbg !964
  %shr477.i = lshr i32 %357, 18, !dbg !964
  %and478.i = and i32 %shr477.i, 63, !dbg !964
  %idxprom479.i = zext i32 %and478.i to i64, !dbg !964
  %arrayidx480.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom479.i, !dbg !964
  %358 = load i32, i32* %arrayidx480.i, align 4, !dbg !964
  %xor481.i = xor i32 %xor476.i, %358, !dbg !964
  %359 = load i32, i32* %u.i, align 4, !dbg !964
  %shr482.i = lshr i32 %359, 26, !dbg !964
  %idxprom484.i = zext i32 %shr482.i to i64, !dbg !964
  %arrayidx485.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom484.i, !dbg !964
  %360 = load i32, i32* %arrayidx485.i, align 4, !dbg !964
  %xor486.i = xor i32 %xor481.i, %360, !dbg !964
  %361 = load i32, i32* %t.i, align 4, !dbg !964
  %shr487.i = lshr i32 %361, 2, !dbg !964
  %and488.i = and i32 %shr487.i, 63, !dbg !964
  %idxprom489.i = zext i32 %and488.i to i64, !dbg !964
  %arrayidx490.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom489.i, !dbg !964
  %362 = load i32, i32* %arrayidx490.i, align 4, !dbg !964
  %xor491.i = xor i32 %xor486.i, %362, !dbg !964
  %363 = load i32, i32* %t.i, align 4, !dbg !964
  %shr492.i = lshr i32 %363, 10, !dbg !964
  %and493.i = and i32 %shr492.i, 63, !dbg !964
  %idxprom494.i = zext i32 %and493.i to i64, !dbg !964
  %arrayidx495.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom494.i, !dbg !964
  %364 = load i32, i32* %arrayidx495.i, align 4, !dbg !964
  %xor496.i = xor i32 %xor491.i, %364, !dbg !964
  %365 = load i32, i32* %t.i, align 4, !dbg !964
  %shr497.i = lshr i32 %365, 18, !dbg !964
  %and498.i = and i32 %shr497.i, 63, !dbg !964
  %idxprom499.i = zext i32 %and498.i to i64, !dbg !964
  %arrayidx500.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom499.i, !dbg !964
  %366 = load i32, i32* %arrayidx500.i, align 4, !dbg !964
  %xor501.i = xor i32 %xor496.i, %366, !dbg !964
  %367 = load i32, i32* %t.i, align 4, !dbg !964
  %shr502.i = lshr i32 %367, 26, !dbg !964
  %idxprom504.i = zext i32 %shr502.i to i64, !dbg !964
  %arrayidx505.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom504.i, !dbg !964
  %368 = load i32, i32* %arrayidx505.i, align 4, !dbg !964
  %xor506.i = xor i32 %xor501.i, %368, !dbg !964
  %369 = load i32, i32* %r.i, align 4, !dbg !964
  %xor507.i = xor i32 %369, %xor506.i, !dbg !964
  store i32 %xor507.i, i32* %r.i, align 4, !dbg !964
  %370 = load i32, i32* %r.i, align 4, !dbg !965
  %371 = load i32*, i32** %s.i, align 8, !dbg !965
  %arrayidx508.i = getelementptr inbounds i32, i32* %371, i64 20, !dbg !965
  %372 = load i32, i32* %arrayidx508.i, align 4, !dbg !965
  %xor509.i = xor i32 %370, %372, !dbg !965
  store i32 %xor509.i, i32* %u.i, align 4, !dbg !965
  %373 = load i32, i32* %r.i, align 4, !dbg !965
  %374 = load i32*, i32** %s.i, align 8, !dbg !965
  %arrayidx510.i = getelementptr inbounds i32, i32* %374, i64 21, !dbg !965
  %375 = load i32, i32* %arrayidx510.i, align 4, !dbg !965
  %xor511.i = xor i32 %373, %375, !dbg !965
  store i32 %xor511.i, i32* %t.i, align 4, !dbg !965
  %376 = load i32, i32* %t.i, align 4, !dbg !856
  %377 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %376) #7, !dbg !856, !srcloc !155
  store i32 %377, i32* %ret512.i, align 4, !dbg !856
  %378 = load i32, i32* %ret512.i, align 4, !dbg !856
  store i32 %378, i32* %tmp513.i, align 4, !dbg !856
  %379 = load i32, i32* %tmp513.i, align 4, !dbg !856
  store i32 %379, i32* %t.i, align 4, !dbg !965
  %380 = load i32, i32* %u.i, align 4, !dbg !965
  %shr514.i = lshr i32 %380, 2, !dbg !965
  %and515.i = and i32 %shr514.i, 63, !dbg !965
  %idxprom516.i = zext i32 %and515.i to i64, !dbg !965
  %arrayidx517.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom516.i, !dbg !965
  %381 = load i32, i32* %arrayidx517.i, align 4, !dbg !965
  %382 = load i32, i32* %u.i, align 4, !dbg !965
  %shr518.i = lshr i32 %382, 10, !dbg !965
  %and519.i = and i32 %shr518.i, 63, !dbg !965
  %idxprom520.i = zext i32 %and519.i to i64, !dbg !965
  %arrayidx521.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom520.i, !dbg !965
  %383 = load i32, i32* %arrayidx521.i, align 4, !dbg !965
  %xor522.i = xor i32 %381, %383, !dbg !965
  %384 = load i32, i32* %u.i, align 4, !dbg !965
  %shr523.i = lshr i32 %384, 18, !dbg !965
  %and524.i = and i32 %shr523.i, 63, !dbg !965
  %idxprom525.i = zext i32 %and524.i to i64, !dbg !965
  %arrayidx526.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom525.i, !dbg !965
  %385 = load i32, i32* %arrayidx526.i, align 4, !dbg !965
  %xor527.i = xor i32 %xor522.i, %385, !dbg !965
  %386 = load i32, i32* %u.i, align 4, !dbg !965
  %shr528.i = lshr i32 %386, 26, !dbg !965
  %idxprom530.i = zext i32 %shr528.i to i64, !dbg !965
  %arrayidx531.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom530.i, !dbg !965
  %387 = load i32, i32* %arrayidx531.i, align 4, !dbg !965
  %xor532.i = xor i32 %xor527.i, %387, !dbg !965
  %388 = load i32, i32* %t.i, align 4, !dbg !965
  %shr533.i = lshr i32 %388, 2, !dbg !965
  %and534.i = and i32 %shr533.i, 63, !dbg !965
  %idxprom535.i = zext i32 %and534.i to i64, !dbg !965
  %arrayidx536.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom535.i, !dbg !965
  %389 = load i32, i32* %arrayidx536.i, align 4, !dbg !965
  %xor537.i = xor i32 %xor532.i, %389, !dbg !965
  %390 = load i32, i32* %t.i, align 4, !dbg !965
  %shr538.i = lshr i32 %390, 10, !dbg !965
  %and539.i = and i32 %shr538.i, 63, !dbg !965
  %idxprom540.i = zext i32 %and539.i to i64, !dbg !965
  %arrayidx541.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom540.i, !dbg !965
  %391 = load i32, i32* %arrayidx541.i, align 4, !dbg !965
  %xor542.i = xor i32 %xor537.i, %391, !dbg !965
  %392 = load i32, i32* %t.i, align 4, !dbg !965
  %shr543.i = lshr i32 %392, 18, !dbg !965
  %and544.i = and i32 %shr543.i, 63, !dbg !965
  %idxprom545.i = zext i32 %and544.i to i64, !dbg !965
  %arrayidx546.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom545.i, !dbg !965
  %393 = load i32, i32* %arrayidx546.i, align 4, !dbg !965
  %xor547.i = xor i32 %xor542.i, %393, !dbg !965
  %394 = load i32, i32* %t.i, align 4, !dbg !965
  %shr548.i = lshr i32 %394, 26, !dbg !965
  %idxprom550.i = zext i32 %shr548.i to i64, !dbg !965
  %arrayidx551.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom550.i, !dbg !965
  %395 = load i32, i32* %arrayidx551.i, align 4, !dbg !965
  %xor552.i = xor i32 %xor547.i, %395, !dbg !965
  %396 = load i32, i32* %l.i, align 4, !dbg !965
  %xor553.i = xor i32 %396, %xor552.i, !dbg !965
  store i32 %xor553.i, i32* %l.i, align 4, !dbg !965
  %397 = load i32, i32* %l.i, align 4, !dbg !966
  %398 = load i32*, i32** %s.i, align 8, !dbg !966
  %arrayidx554.i = getelementptr inbounds i32, i32* %398, i64 22, !dbg !966
  %399 = load i32, i32* %arrayidx554.i, align 4, !dbg !966
  %xor555.i = xor i32 %397, %399, !dbg !966
  store i32 %xor555.i, i32* %u.i, align 4, !dbg !966
  %400 = load i32, i32* %l.i, align 4, !dbg !966
  %401 = load i32*, i32** %s.i, align 8, !dbg !966
  %arrayidx556.i = getelementptr inbounds i32, i32* %401, i64 23, !dbg !966
  %402 = load i32, i32* %arrayidx556.i, align 4, !dbg !966
  %xor557.i = xor i32 %400, %402, !dbg !966
  store i32 %xor557.i, i32* %t.i, align 4, !dbg !966
  %403 = load i32, i32* %t.i, align 4, !dbg !857
  %404 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %403) #7, !dbg !857, !srcloc !161
  store i32 %404, i32* %ret558.i, align 4, !dbg !857
  %405 = load i32, i32* %ret558.i, align 4, !dbg !857
  store i32 %405, i32* %tmp559.i, align 4, !dbg !857
  %406 = load i32, i32* %tmp559.i, align 4, !dbg !857
  store i32 %406, i32* %t.i, align 4, !dbg !966
  %407 = load i32, i32* %u.i, align 4, !dbg !966
  %shr560.i = lshr i32 %407, 2, !dbg !966
  %and561.i = and i32 %shr560.i, 63, !dbg !966
  %idxprom562.i = zext i32 %and561.i to i64, !dbg !966
  %arrayidx563.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom562.i, !dbg !966
  %408 = load i32, i32* %arrayidx563.i, align 4, !dbg !966
  %409 = load i32, i32* %u.i, align 4, !dbg !966
  %shr564.i = lshr i32 %409, 10, !dbg !966
  %and565.i = and i32 %shr564.i, 63, !dbg !966
  %idxprom566.i = zext i32 %and565.i to i64, !dbg !966
  %arrayidx567.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom566.i, !dbg !966
  %410 = load i32, i32* %arrayidx567.i, align 4, !dbg !966
  %xor568.i = xor i32 %408, %410, !dbg !966
  %411 = load i32, i32* %u.i, align 4, !dbg !966
  %shr569.i = lshr i32 %411, 18, !dbg !966
  %and570.i = and i32 %shr569.i, 63, !dbg !966
  %idxprom571.i = zext i32 %and570.i to i64, !dbg !966
  %arrayidx572.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom571.i, !dbg !966
  %412 = load i32, i32* %arrayidx572.i, align 4, !dbg !966
  %xor573.i = xor i32 %xor568.i, %412, !dbg !966
  %413 = load i32, i32* %u.i, align 4, !dbg !966
  %shr574.i = lshr i32 %413, 26, !dbg !966
  %idxprom576.i = zext i32 %shr574.i to i64, !dbg !966
  %arrayidx577.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom576.i, !dbg !966
  %414 = load i32, i32* %arrayidx577.i, align 4, !dbg !966
  %xor578.i = xor i32 %xor573.i, %414, !dbg !966
  %415 = load i32, i32* %t.i, align 4, !dbg !966
  %shr579.i = lshr i32 %415, 2, !dbg !966
  %and580.i = and i32 %shr579.i, 63, !dbg !966
  %idxprom581.i = zext i32 %and580.i to i64, !dbg !966
  %arrayidx582.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom581.i, !dbg !966
  %416 = load i32, i32* %arrayidx582.i, align 4, !dbg !966
  %xor583.i = xor i32 %xor578.i, %416, !dbg !966
  %417 = load i32, i32* %t.i, align 4, !dbg !966
  %shr584.i = lshr i32 %417, 10, !dbg !966
  %and585.i = and i32 %shr584.i, 63, !dbg !966
  %idxprom586.i = zext i32 %and585.i to i64, !dbg !966
  %arrayidx587.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom586.i, !dbg !966
  %418 = load i32, i32* %arrayidx587.i, align 4, !dbg !966
  %xor588.i = xor i32 %xor583.i, %418, !dbg !966
  %419 = load i32, i32* %t.i, align 4, !dbg !966
  %shr589.i = lshr i32 %419, 18, !dbg !966
  %and590.i = and i32 %shr589.i, 63, !dbg !966
  %idxprom591.i = zext i32 %and590.i to i64, !dbg !966
  %arrayidx592.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom591.i, !dbg !966
  %420 = load i32, i32* %arrayidx592.i, align 4, !dbg !966
  %xor593.i = xor i32 %xor588.i, %420, !dbg !966
  %421 = load i32, i32* %t.i, align 4, !dbg !966
  %shr594.i = lshr i32 %421, 26, !dbg !966
  %idxprom596.i = zext i32 %shr594.i to i64, !dbg !966
  %arrayidx597.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom596.i, !dbg !966
  %422 = load i32, i32* %arrayidx597.i, align 4, !dbg !966
  %xor598.i = xor i32 %xor593.i, %422, !dbg !966
  %423 = load i32, i32* %r.i, align 4, !dbg !966
  %xor599.i = xor i32 %423, %xor598.i, !dbg !966
  store i32 %xor599.i, i32* %r.i, align 4, !dbg !966
  %424 = load i32, i32* %r.i, align 4, !dbg !967
  %425 = load i32*, i32** %s.i, align 8, !dbg !967
  %arrayidx600.i = getelementptr inbounds i32, i32* %425, i64 24, !dbg !967
  %426 = load i32, i32* %arrayidx600.i, align 4, !dbg !967
  %xor601.i = xor i32 %424, %426, !dbg !967
  store i32 %xor601.i, i32* %u.i, align 4, !dbg !967
  %427 = load i32, i32* %r.i, align 4, !dbg !967
  %428 = load i32*, i32** %s.i, align 8, !dbg !967
  %arrayidx602.i = getelementptr inbounds i32, i32* %428, i64 25, !dbg !967
  %429 = load i32, i32* %arrayidx602.i, align 4, !dbg !967
  %xor603.i = xor i32 %427, %429, !dbg !967
  store i32 %xor603.i, i32* %t.i, align 4, !dbg !967
  %430 = load i32, i32* %t.i, align 4, !dbg !858
  %431 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %430) #7, !dbg !858, !srcloc !167
  store i32 %431, i32* %ret604.i, align 4, !dbg !858
  %432 = load i32, i32* %ret604.i, align 4, !dbg !858
  store i32 %432, i32* %tmp605.i, align 4, !dbg !858
  %433 = load i32, i32* %tmp605.i, align 4, !dbg !858
  store i32 %433, i32* %t.i, align 4, !dbg !967
  %434 = load i32, i32* %u.i, align 4, !dbg !967
  %shr606.i = lshr i32 %434, 2, !dbg !967
  %and607.i = and i32 %shr606.i, 63, !dbg !967
  %idxprom608.i = zext i32 %and607.i to i64, !dbg !967
  %arrayidx609.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom608.i, !dbg !967
  %435 = load i32, i32* %arrayidx609.i, align 4, !dbg !967
  %436 = load i32, i32* %u.i, align 4, !dbg !967
  %shr610.i = lshr i32 %436, 10, !dbg !967
  %and611.i = and i32 %shr610.i, 63, !dbg !967
  %idxprom612.i = zext i32 %and611.i to i64, !dbg !967
  %arrayidx613.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom612.i, !dbg !967
  %437 = load i32, i32* %arrayidx613.i, align 4, !dbg !967
  %xor614.i = xor i32 %435, %437, !dbg !967
  %438 = load i32, i32* %u.i, align 4, !dbg !967
  %shr615.i = lshr i32 %438, 18, !dbg !967
  %and616.i = and i32 %shr615.i, 63, !dbg !967
  %idxprom617.i = zext i32 %and616.i to i64, !dbg !967
  %arrayidx618.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom617.i, !dbg !967
  %439 = load i32, i32* %arrayidx618.i, align 4, !dbg !967
  %xor619.i = xor i32 %xor614.i, %439, !dbg !967
  %440 = load i32, i32* %u.i, align 4, !dbg !967
  %shr620.i = lshr i32 %440, 26, !dbg !967
  %idxprom622.i = zext i32 %shr620.i to i64, !dbg !967
  %arrayidx623.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom622.i, !dbg !967
  %441 = load i32, i32* %arrayidx623.i, align 4, !dbg !967
  %xor624.i = xor i32 %xor619.i, %441, !dbg !967
  %442 = load i32, i32* %t.i, align 4, !dbg !967
  %shr625.i = lshr i32 %442, 2, !dbg !967
  %and626.i = and i32 %shr625.i, 63, !dbg !967
  %idxprom627.i = zext i32 %and626.i to i64, !dbg !967
  %arrayidx628.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom627.i, !dbg !967
  %443 = load i32, i32* %arrayidx628.i, align 4, !dbg !967
  %xor629.i = xor i32 %xor624.i, %443, !dbg !967
  %444 = load i32, i32* %t.i, align 4, !dbg !967
  %shr630.i = lshr i32 %444, 10, !dbg !967
  %and631.i = and i32 %shr630.i, 63, !dbg !967
  %idxprom632.i = zext i32 %and631.i to i64, !dbg !967
  %arrayidx633.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom632.i, !dbg !967
  %445 = load i32, i32* %arrayidx633.i, align 4, !dbg !967
  %xor634.i = xor i32 %xor629.i, %445, !dbg !967
  %446 = load i32, i32* %t.i, align 4, !dbg !967
  %shr635.i = lshr i32 %446, 18, !dbg !967
  %and636.i = and i32 %shr635.i, 63, !dbg !967
  %idxprom637.i = zext i32 %and636.i to i64, !dbg !967
  %arrayidx638.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom637.i, !dbg !967
  %447 = load i32, i32* %arrayidx638.i, align 4, !dbg !967
  %xor639.i = xor i32 %xor634.i, %447, !dbg !967
  %448 = load i32, i32* %t.i, align 4, !dbg !967
  %shr640.i = lshr i32 %448, 26, !dbg !967
  %idxprom642.i = zext i32 %shr640.i to i64, !dbg !967
  %arrayidx643.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom642.i, !dbg !967
  %449 = load i32, i32* %arrayidx643.i, align 4, !dbg !967
  %xor644.i = xor i32 %xor639.i, %449, !dbg !967
  %450 = load i32, i32* %l.i, align 4, !dbg !967
  %xor645.i = xor i32 %450, %xor644.i, !dbg !967
  store i32 %xor645.i, i32* %l.i, align 4, !dbg !967
  %451 = load i32, i32* %l.i, align 4, !dbg !968
  %452 = load i32*, i32** %s.i, align 8, !dbg !968
  %arrayidx646.i = getelementptr inbounds i32, i32* %452, i64 26, !dbg !968
  %453 = load i32, i32* %arrayidx646.i, align 4, !dbg !968
  %xor647.i = xor i32 %451, %453, !dbg !968
  store i32 %xor647.i, i32* %u.i, align 4, !dbg !968
  %454 = load i32, i32* %l.i, align 4, !dbg !968
  %455 = load i32*, i32** %s.i, align 8, !dbg !968
  %arrayidx648.i = getelementptr inbounds i32, i32* %455, i64 27, !dbg !968
  %456 = load i32, i32* %arrayidx648.i, align 4, !dbg !968
  %xor649.i = xor i32 %454, %456, !dbg !968
  store i32 %xor649.i, i32* %t.i, align 4, !dbg !968
  %457 = load i32, i32* %t.i, align 4, !dbg !859
  %458 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %457) #7, !dbg !859, !srcloc !173
  store i32 %458, i32* %ret650.i, align 4, !dbg !859
  %459 = load i32, i32* %ret650.i, align 4, !dbg !859
  store i32 %459, i32* %tmp651.i, align 4, !dbg !859
  %460 = load i32, i32* %tmp651.i, align 4, !dbg !859
  store i32 %460, i32* %t.i, align 4, !dbg !968
  %461 = load i32, i32* %u.i, align 4, !dbg !968
  %shr652.i = lshr i32 %461, 2, !dbg !968
  %and653.i = and i32 %shr652.i, 63, !dbg !968
  %idxprom654.i = zext i32 %and653.i to i64, !dbg !968
  %arrayidx655.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom654.i, !dbg !968
  %462 = load i32, i32* %arrayidx655.i, align 4, !dbg !968
  %463 = load i32, i32* %u.i, align 4, !dbg !968
  %shr656.i = lshr i32 %463, 10, !dbg !968
  %and657.i = and i32 %shr656.i, 63, !dbg !968
  %idxprom658.i = zext i32 %and657.i to i64, !dbg !968
  %arrayidx659.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom658.i, !dbg !968
  %464 = load i32, i32* %arrayidx659.i, align 4, !dbg !968
  %xor660.i = xor i32 %462, %464, !dbg !968
  %465 = load i32, i32* %u.i, align 4, !dbg !968
  %shr661.i = lshr i32 %465, 18, !dbg !968
  %and662.i = and i32 %shr661.i, 63, !dbg !968
  %idxprom663.i = zext i32 %and662.i to i64, !dbg !968
  %arrayidx664.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom663.i, !dbg !968
  %466 = load i32, i32* %arrayidx664.i, align 4, !dbg !968
  %xor665.i = xor i32 %xor660.i, %466, !dbg !968
  %467 = load i32, i32* %u.i, align 4, !dbg !968
  %shr666.i = lshr i32 %467, 26, !dbg !968
  %idxprom668.i = zext i32 %shr666.i to i64, !dbg !968
  %arrayidx669.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom668.i, !dbg !968
  %468 = load i32, i32* %arrayidx669.i, align 4, !dbg !968
  %xor670.i = xor i32 %xor665.i, %468, !dbg !968
  %469 = load i32, i32* %t.i, align 4, !dbg !968
  %shr671.i = lshr i32 %469, 2, !dbg !968
  %and672.i = and i32 %shr671.i, 63, !dbg !968
  %idxprom673.i = zext i32 %and672.i to i64, !dbg !968
  %arrayidx674.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom673.i, !dbg !968
  %470 = load i32, i32* %arrayidx674.i, align 4, !dbg !968
  %xor675.i = xor i32 %xor670.i, %470, !dbg !968
  %471 = load i32, i32* %t.i, align 4, !dbg !968
  %shr676.i = lshr i32 %471, 10, !dbg !968
  %and677.i = and i32 %shr676.i, 63, !dbg !968
  %idxprom678.i = zext i32 %and677.i to i64, !dbg !968
  %arrayidx679.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom678.i, !dbg !968
  %472 = load i32, i32* %arrayidx679.i, align 4, !dbg !968
  %xor680.i = xor i32 %xor675.i, %472, !dbg !968
  %473 = load i32, i32* %t.i, align 4, !dbg !968
  %shr681.i = lshr i32 %473, 18, !dbg !968
  %and682.i = and i32 %shr681.i, 63, !dbg !968
  %idxprom683.i = zext i32 %and682.i to i64, !dbg !968
  %arrayidx684.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom683.i, !dbg !968
  %474 = load i32, i32* %arrayidx684.i, align 4, !dbg !968
  %xor685.i = xor i32 %xor680.i, %474, !dbg !968
  %475 = load i32, i32* %t.i, align 4, !dbg !968
  %shr686.i = lshr i32 %475, 26, !dbg !968
  %idxprom688.i = zext i32 %shr686.i to i64, !dbg !968
  %arrayidx689.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom688.i, !dbg !968
  %476 = load i32, i32* %arrayidx689.i, align 4, !dbg !968
  %xor690.i = xor i32 %xor685.i, %476, !dbg !968
  %477 = load i32, i32* %r.i, align 4, !dbg !968
  %xor691.i = xor i32 %477, %xor690.i, !dbg !968
  store i32 %xor691.i, i32* %r.i, align 4, !dbg !968
  %478 = load i32, i32* %r.i, align 4, !dbg !969
  %479 = load i32*, i32** %s.i, align 8, !dbg !969
  %arrayidx692.i = getelementptr inbounds i32, i32* %479, i64 28, !dbg !969
  %480 = load i32, i32* %arrayidx692.i, align 4, !dbg !969
  %xor693.i = xor i32 %478, %480, !dbg !969
  store i32 %xor693.i, i32* %u.i, align 4, !dbg !969
  %481 = load i32, i32* %r.i, align 4, !dbg !969
  %482 = load i32*, i32** %s.i, align 8, !dbg !969
  %arrayidx694.i = getelementptr inbounds i32, i32* %482, i64 29, !dbg !969
  %483 = load i32, i32* %arrayidx694.i, align 4, !dbg !969
  %xor695.i = xor i32 %481, %483, !dbg !969
  store i32 %xor695.i, i32* %t.i, align 4, !dbg !969
  %484 = load i32, i32* %t.i, align 4, !dbg !860
  %485 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %484) #7, !dbg !860, !srcloc !179
  store i32 %485, i32* %ret696.i, align 4, !dbg !860
  %486 = load i32, i32* %ret696.i, align 4, !dbg !860
  store i32 %486, i32* %tmp697.i, align 4, !dbg !860
  %487 = load i32, i32* %tmp697.i, align 4, !dbg !860
  store i32 %487, i32* %t.i, align 4, !dbg !969
  %488 = load i32, i32* %u.i, align 4, !dbg !969
  %shr698.i = lshr i32 %488, 2, !dbg !969
  %and699.i = and i32 %shr698.i, 63, !dbg !969
  %idxprom700.i = zext i32 %and699.i to i64, !dbg !969
  %arrayidx701.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom700.i, !dbg !969
  %489 = load i32, i32* %arrayidx701.i, align 4, !dbg !969
  %490 = load i32, i32* %u.i, align 4, !dbg !969
  %shr702.i = lshr i32 %490, 10, !dbg !969
  %and703.i = and i32 %shr702.i, 63, !dbg !969
  %idxprom704.i = zext i32 %and703.i to i64, !dbg !969
  %arrayidx705.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom704.i, !dbg !969
  %491 = load i32, i32* %arrayidx705.i, align 4, !dbg !969
  %xor706.i = xor i32 %489, %491, !dbg !969
  %492 = load i32, i32* %u.i, align 4, !dbg !969
  %shr707.i = lshr i32 %492, 18, !dbg !969
  %and708.i = and i32 %shr707.i, 63, !dbg !969
  %idxprom709.i = zext i32 %and708.i to i64, !dbg !969
  %arrayidx710.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom709.i, !dbg !969
  %493 = load i32, i32* %arrayidx710.i, align 4, !dbg !969
  %xor711.i = xor i32 %xor706.i, %493, !dbg !969
  %494 = load i32, i32* %u.i, align 4, !dbg !969
  %shr712.i = lshr i32 %494, 26, !dbg !969
  %idxprom714.i = zext i32 %shr712.i to i64, !dbg !969
  %arrayidx715.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom714.i, !dbg !969
  %495 = load i32, i32* %arrayidx715.i, align 4, !dbg !969
  %xor716.i = xor i32 %xor711.i, %495, !dbg !969
  %496 = load i32, i32* %t.i, align 4, !dbg !969
  %shr717.i = lshr i32 %496, 2, !dbg !969
  %and718.i = and i32 %shr717.i, 63, !dbg !969
  %idxprom719.i = zext i32 %and718.i to i64, !dbg !969
  %arrayidx720.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom719.i, !dbg !969
  %497 = load i32, i32* %arrayidx720.i, align 4, !dbg !969
  %xor721.i = xor i32 %xor716.i, %497, !dbg !969
  %498 = load i32, i32* %t.i, align 4, !dbg !969
  %shr722.i = lshr i32 %498, 10, !dbg !969
  %and723.i = and i32 %shr722.i, 63, !dbg !969
  %idxprom724.i = zext i32 %and723.i to i64, !dbg !969
  %arrayidx725.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom724.i, !dbg !969
  %499 = load i32, i32* %arrayidx725.i, align 4, !dbg !969
  %xor726.i = xor i32 %xor721.i, %499, !dbg !969
  %500 = load i32, i32* %t.i, align 4, !dbg !969
  %shr727.i = lshr i32 %500, 18, !dbg !969
  %and728.i = and i32 %shr727.i, 63, !dbg !969
  %idxprom729.i = zext i32 %and728.i to i64, !dbg !969
  %arrayidx730.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom729.i, !dbg !969
  %501 = load i32, i32* %arrayidx730.i, align 4, !dbg !969
  %xor731.i = xor i32 %xor726.i, %501, !dbg !969
  %502 = load i32, i32* %t.i, align 4, !dbg !969
  %shr732.i = lshr i32 %502, 26, !dbg !969
  %idxprom734.i = zext i32 %shr732.i to i64, !dbg !969
  %arrayidx735.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom734.i, !dbg !969
  %503 = load i32, i32* %arrayidx735.i, align 4, !dbg !969
  %xor736.i = xor i32 %xor731.i, %503, !dbg !969
  %504 = load i32, i32* %l.i, align 4, !dbg !969
  %xor737.i = xor i32 %504, %xor736.i, !dbg !969
  store i32 %xor737.i, i32* %l.i, align 4, !dbg !969
  %505 = load i32, i32* %l.i, align 4, !dbg !970
  %506 = load i32*, i32** %s.i, align 8, !dbg !970
  %arrayidx738.i = getelementptr inbounds i32, i32* %506, i64 30, !dbg !970
  %507 = load i32, i32* %arrayidx738.i, align 4, !dbg !970
  %xor739.i = xor i32 %505, %507, !dbg !970
  store i32 %xor739.i, i32* %u.i, align 4, !dbg !970
  %508 = load i32, i32* %l.i, align 4, !dbg !970
  %509 = load i32*, i32** %s.i, align 8, !dbg !970
  %arrayidx740.i = getelementptr inbounds i32, i32* %509, i64 31, !dbg !970
  %510 = load i32, i32* %arrayidx740.i, align 4, !dbg !970
  %xor741.i = xor i32 %508, %510, !dbg !970
  store i32 %xor741.i, i32* %t.i, align 4, !dbg !970
  %511 = load i32, i32* %t.i, align 4, !dbg !861
  %512 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %511) #7, !dbg !861, !srcloc !185
  store i32 %512, i32* %ret742.i, align 4, !dbg !861
  %513 = load i32, i32* %ret742.i, align 4, !dbg !861
  store i32 %513, i32* %tmp743.i, align 4, !dbg !861
  %514 = load i32, i32* %tmp743.i, align 4, !dbg !861
  store i32 %514, i32* %t.i, align 4, !dbg !970
  %515 = load i32, i32* %u.i, align 4, !dbg !970
  %shr744.i = lshr i32 %515, 2, !dbg !970
  %and745.i = and i32 %shr744.i, 63, !dbg !970
  %idxprom746.i = zext i32 %and745.i to i64, !dbg !970
  %arrayidx747.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom746.i, !dbg !970
  %516 = load i32, i32* %arrayidx747.i, align 4, !dbg !970
  %517 = load i32, i32* %u.i, align 4, !dbg !970
  %shr748.i = lshr i32 %517, 10, !dbg !970
  %and749.i = and i32 %shr748.i, 63, !dbg !970
  %idxprom750.i = zext i32 %and749.i to i64, !dbg !970
  %arrayidx751.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom750.i, !dbg !970
  %518 = load i32, i32* %arrayidx751.i, align 4, !dbg !970
  %xor752.i = xor i32 %516, %518, !dbg !970
  %519 = load i32, i32* %u.i, align 4, !dbg !970
  %shr753.i = lshr i32 %519, 18, !dbg !970
  %and754.i = and i32 %shr753.i, 63, !dbg !970
  %idxprom755.i = zext i32 %and754.i to i64, !dbg !970
  %arrayidx756.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom755.i, !dbg !970
  %520 = load i32, i32* %arrayidx756.i, align 4, !dbg !970
  %xor757.i = xor i32 %xor752.i, %520, !dbg !970
  %521 = load i32, i32* %u.i, align 4, !dbg !970
  %shr758.i = lshr i32 %521, 26, !dbg !970
  %idxprom760.i = zext i32 %shr758.i to i64, !dbg !970
  %arrayidx761.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom760.i, !dbg !970
  %522 = load i32, i32* %arrayidx761.i, align 4, !dbg !970
  %xor762.i = xor i32 %xor757.i, %522, !dbg !970
  %523 = load i32, i32* %t.i, align 4, !dbg !970
  %shr763.i = lshr i32 %523, 2, !dbg !970
  %and764.i = and i32 %shr763.i, 63, !dbg !970
  %idxprom765.i = zext i32 %and764.i to i64, !dbg !970
  %arrayidx766.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom765.i, !dbg !970
  %524 = load i32, i32* %arrayidx766.i, align 4, !dbg !970
  %xor767.i = xor i32 %xor762.i, %524, !dbg !970
  %525 = load i32, i32* %t.i, align 4, !dbg !970
  %shr768.i = lshr i32 %525, 10, !dbg !970
  %and769.i = and i32 %shr768.i, 63, !dbg !970
  %idxprom770.i = zext i32 %and769.i to i64, !dbg !970
  %arrayidx771.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom770.i, !dbg !970
  %526 = load i32, i32* %arrayidx771.i, align 4, !dbg !970
  %xor772.i = xor i32 %xor767.i, %526, !dbg !970
  %527 = load i32, i32* %t.i, align 4, !dbg !970
  %shr773.i = lshr i32 %527, 18, !dbg !970
  %and774.i = and i32 %shr773.i, 63, !dbg !970
  %idxprom775.i = zext i32 %and774.i to i64, !dbg !970
  %arrayidx776.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom775.i, !dbg !970
  %528 = load i32, i32* %arrayidx776.i, align 4, !dbg !970
  %xor777.i = xor i32 %xor772.i, %528, !dbg !970
  %529 = load i32, i32* %t.i, align 4, !dbg !970
  %shr778.i = lshr i32 %529, 26, !dbg !970
  %idxprom780.i = zext i32 %shr778.i to i64, !dbg !970
  %arrayidx781.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom780.i, !dbg !970
  %530 = load i32, i32* %arrayidx781.i, align 4, !dbg !970
  %xor782.i = xor i32 %xor777.i, %530, !dbg !970
  %531 = load i32, i32* %r.i, align 4, !dbg !970
  %xor783.i = xor i32 %531, %xor782.i, !dbg !970
  store i32 %xor783.i, i32* %r.i, align 4, !dbg !970
  br label %DES_encrypt1.exit, !dbg !971

if.else.i:                                        ; preds = %for.body
  %532 = load i32, i32* %r.i, align 4, !dbg !972
  %533 = load i32*, i32** %s.i, align 8, !dbg !972
  %arrayidx784.i = getelementptr inbounds i32, i32* %533, i64 30, !dbg !972
  %534 = load i32, i32* %arrayidx784.i, align 4, !dbg !972
  %xor785.i = xor i32 %532, %534, !dbg !972
  store i32 %xor785.i, i32* %u.i, align 4, !dbg !972
  %535 = load i32, i32* %r.i, align 4, !dbg !972
  %536 = load i32*, i32** %s.i, align 8, !dbg !972
  %arrayidx786.i = getelementptr inbounds i32, i32* %536, i64 31, !dbg !972
  %537 = load i32, i32* %arrayidx786.i, align 4, !dbg !972
  %xor787.i = xor i32 %535, %537, !dbg !972
  store i32 %xor787.i, i32* %t.i, align 4, !dbg !972
  %538 = load i32, i32* %t.i, align 4, !dbg !862
  %539 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %538) #7, !dbg !862, !srcloc !193
  store i32 %539, i32* %ret788.i, align 4, !dbg !862
  %540 = load i32, i32* %ret788.i, align 4, !dbg !862
  store i32 %540, i32* %tmp789.i, align 4, !dbg !862
  %541 = load i32, i32* %tmp789.i, align 4, !dbg !862
  store i32 %541, i32* %t.i, align 4, !dbg !972
  %542 = load i32, i32* %u.i, align 4, !dbg !972
  %shr790.i = lshr i32 %542, 2, !dbg !972
  %and791.i = and i32 %shr790.i, 63, !dbg !972
  %idxprom792.i = zext i32 %and791.i to i64, !dbg !972
  %arrayidx793.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom792.i, !dbg !972
  %543 = load i32, i32* %arrayidx793.i, align 4, !dbg !972
  %544 = load i32, i32* %u.i, align 4, !dbg !972
  %shr794.i = lshr i32 %544, 10, !dbg !972
  %and795.i = and i32 %shr794.i, 63, !dbg !972
  %idxprom796.i = zext i32 %and795.i to i64, !dbg !972
  %arrayidx797.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom796.i, !dbg !972
  %545 = load i32, i32* %arrayidx797.i, align 4, !dbg !972
  %xor798.i = xor i32 %543, %545, !dbg !972
  %546 = load i32, i32* %u.i, align 4, !dbg !972
  %shr799.i = lshr i32 %546, 18, !dbg !972
  %and800.i = and i32 %shr799.i, 63, !dbg !972
  %idxprom801.i = zext i32 %and800.i to i64, !dbg !972
  %arrayidx802.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom801.i, !dbg !972
  %547 = load i32, i32* %arrayidx802.i, align 4, !dbg !972
  %xor803.i = xor i32 %xor798.i, %547, !dbg !972
  %548 = load i32, i32* %u.i, align 4, !dbg !972
  %shr804.i = lshr i32 %548, 26, !dbg !972
  %idxprom806.i = zext i32 %shr804.i to i64, !dbg !972
  %arrayidx807.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom806.i, !dbg !972
  %549 = load i32, i32* %arrayidx807.i, align 4, !dbg !972
  %xor808.i = xor i32 %xor803.i, %549, !dbg !972
  %550 = load i32, i32* %t.i, align 4, !dbg !972
  %shr809.i = lshr i32 %550, 2, !dbg !972
  %and810.i = and i32 %shr809.i, 63, !dbg !972
  %idxprom811.i = zext i32 %and810.i to i64, !dbg !972
  %arrayidx812.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom811.i, !dbg !972
  %551 = load i32, i32* %arrayidx812.i, align 4, !dbg !972
  %xor813.i = xor i32 %xor808.i, %551, !dbg !972
  %552 = load i32, i32* %t.i, align 4, !dbg !972
  %shr814.i = lshr i32 %552, 10, !dbg !972
  %and815.i = and i32 %shr814.i, 63, !dbg !972
  %idxprom816.i = zext i32 %and815.i to i64, !dbg !972
  %arrayidx817.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom816.i, !dbg !972
  %553 = load i32, i32* %arrayidx817.i, align 4, !dbg !972
  %xor818.i = xor i32 %xor813.i, %553, !dbg !972
  %554 = load i32, i32* %t.i, align 4, !dbg !972
  %shr819.i = lshr i32 %554, 18, !dbg !972
  %and820.i = and i32 %shr819.i, 63, !dbg !972
  %idxprom821.i = zext i32 %and820.i to i64, !dbg !972
  %arrayidx822.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom821.i, !dbg !972
  %555 = load i32, i32* %arrayidx822.i, align 4, !dbg !972
  %xor823.i = xor i32 %xor818.i, %555, !dbg !972
  %556 = load i32, i32* %t.i, align 4, !dbg !972
  %shr824.i = lshr i32 %556, 26, !dbg !972
  %idxprom826.i = zext i32 %shr824.i to i64, !dbg !972
  %arrayidx827.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom826.i, !dbg !972
  %557 = load i32, i32* %arrayidx827.i, align 4, !dbg !972
  %xor828.i = xor i32 %xor823.i, %557, !dbg !972
  %558 = load i32, i32* %l.i, align 4, !dbg !972
  %xor829.i = xor i32 %558, %xor828.i, !dbg !972
  store i32 %xor829.i, i32* %l.i, align 4, !dbg !972
  %559 = load i32, i32* %l.i, align 4, !dbg !973
  %560 = load i32*, i32** %s.i, align 8, !dbg !973
  %arrayidx830.i = getelementptr inbounds i32, i32* %560, i64 28, !dbg !973
  %561 = load i32, i32* %arrayidx830.i, align 4, !dbg !973
  %xor831.i = xor i32 %559, %561, !dbg !973
  store i32 %xor831.i, i32* %u.i, align 4, !dbg !973
  %562 = load i32, i32* %l.i, align 4, !dbg !973
  %563 = load i32*, i32** %s.i, align 8, !dbg !973
  %arrayidx832.i = getelementptr inbounds i32, i32* %563, i64 29, !dbg !973
  %564 = load i32, i32* %arrayidx832.i, align 4, !dbg !973
  %xor833.i = xor i32 %562, %564, !dbg !973
  store i32 %xor833.i, i32* %t.i, align 4, !dbg !973
  %565 = load i32, i32* %t.i, align 4, !dbg !863
  %566 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %565) #7, !dbg !863, !srcloc !199
  store i32 %566, i32* %ret834.i, align 4, !dbg !863
  %567 = load i32, i32* %ret834.i, align 4, !dbg !863
  store i32 %567, i32* %tmp835.i, align 4, !dbg !863
  %568 = load i32, i32* %tmp835.i, align 4, !dbg !863
  store i32 %568, i32* %t.i, align 4, !dbg !973
  %569 = load i32, i32* %u.i, align 4, !dbg !973
  %shr836.i = lshr i32 %569, 2, !dbg !973
  %and837.i = and i32 %shr836.i, 63, !dbg !973
  %idxprom838.i = zext i32 %and837.i to i64, !dbg !973
  %arrayidx839.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom838.i, !dbg !973
  %570 = load i32, i32* %arrayidx839.i, align 4, !dbg !973
  %571 = load i32, i32* %u.i, align 4, !dbg !973
  %shr840.i = lshr i32 %571, 10, !dbg !973
  %and841.i = and i32 %shr840.i, 63, !dbg !973
  %idxprom842.i = zext i32 %and841.i to i64, !dbg !973
  %arrayidx843.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom842.i, !dbg !973
  %572 = load i32, i32* %arrayidx843.i, align 4, !dbg !973
  %xor844.i = xor i32 %570, %572, !dbg !973
  %573 = load i32, i32* %u.i, align 4, !dbg !973
  %shr845.i = lshr i32 %573, 18, !dbg !973
  %and846.i = and i32 %shr845.i, 63, !dbg !973
  %idxprom847.i = zext i32 %and846.i to i64, !dbg !973
  %arrayidx848.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom847.i, !dbg !973
  %574 = load i32, i32* %arrayidx848.i, align 4, !dbg !973
  %xor849.i = xor i32 %xor844.i, %574, !dbg !973
  %575 = load i32, i32* %u.i, align 4, !dbg !973
  %shr850.i = lshr i32 %575, 26, !dbg !973
  %idxprom852.i = zext i32 %shr850.i to i64, !dbg !973
  %arrayidx853.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom852.i, !dbg !973
  %576 = load i32, i32* %arrayidx853.i, align 4, !dbg !973
  %xor854.i = xor i32 %xor849.i, %576, !dbg !973
  %577 = load i32, i32* %t.i, align 4, !dbg !973
  %shr855.i = lshr i32 %577, 2, !dbg !973
  %and856.i = and i32 %shr855.i, 63, !dbg !973
  %idxprom857.i = zext i32 %and856.i to i64, !dbg !973
  %arrayidx858.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom857.i, !dbg !973
  %578 = load i32, i32* %arrayidx858.i, align 4, !dbg !973
  %xor859.i = xor i32 %xor854.i, %578, !dbg !973
  %579 = load i32, i32* %t.i, align 4, !dbg !973
  %shr860.i = lshr i32 %579, 10, !dbg !973
  %and861.i = and i32 %shr860.i, 63, !dbg !973
  %idxprom862.i = zext i32 %and861.i to i64, !dbg !973
  %arrayidx863.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom862.i, !dbg !973
  %580 = load i32, i32* %arrayidx863.i, align 4, !dbg !973
  %xor864.i = xor i32 %xor859.i, %580, !dbg !973
  %581 = load i32, i32* %t.i, align 4, !dbg !973
  %shr865.i = lshr i32 %581, 18, !dbg !973
  %and866.i = and i32 %shr865.i, 63, !dbg !973
  %idxprom867.i = zext i32 %and866.i to i64, !dbg !973
  %arrayidx868.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom867.i, !dbg !973
  %582 = load i32, i32* %arrayidx868.i, align 4, !dbg !973
  %xor869.i = xor i32 %xor864.i, %582, !dbg !973
  %583 = load i32, i32* %t.i, align 4, !dbg !973
  %shr870.i = lshr i32 %583, 26, !dbg !973
  %idxprom872.i = zext i32 %shr870.i to i64, !dbg !973
  %arrayidx873.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom872.i, !dbg !973
  %584 = load i32, i32* %arrayidx873.i, align 4, !dbg !973
  %xor874.i = xor i32 %xor869.i, %584, !dbg !973
  %585 = load i32, i32* %r.i, align 4, !dbg !973
  %xor875.i = xor i32 %585, %xor874.i, !dbg !973
  store i32 %xor875.i, i32* %r.i, align 4, !dbg !973
  %586 = load i32, i32* %r.i, align 4, !dbg !974
  %587 = load i32*, i32** %s.i, align 8, !dbg !974
  %arrayidx876.i = getelementptr inbounds i32, i32* %587, i64 26, !dbg !974
  %588 = load i32, i32* %arrayidx876.i, align 4, !dbg !974
  %xor877.i = xor i32 %586, %588, !dbg !974
  store i32 %xor877.i, i32* %u.i, align 4, !dbg !974
  %589 = load i32, i32* %r.i, align 4, !dbg !974
  %590 = load i32*, i32** %s.i, align 8, !dbg !974
  %arrayidx878.i = getelementptr inbounds i32, i32* %590, i64 27, !dbg !974
  %591 = load i32, i32* %arrayidx878.i, align 4, !dbg !974
  %xor879.i = xor i32 %589, %591, !dbg !974
  store i32 %xor879.i, i32* %t.i, align 4, !dbg !974
  %592 = load i32, i32* %t.i, align 4, !dbg !864
  %593 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %592) #7, !dbg !864, !srcloc !205
  store i32 %593, i32* %ret880.i, align 4, !dbg !864
  %594 = load i32, i32* %ret880.i, align 4, !dbg !864
  store i32 %594, i32* %tmp881.i, align 4, !dbg !864
  %595 = load i32, i32* %tmp881.i, align 4, !dbg !864
  store i32 %595, i32* %t.i, align 4, !dbg !974
  %596 = load i32, i32* %u.i, align 4, !dbg !974
  %shr882.i = lshr i32 %596, 2, !dbg !974
  %and883.i = and i32 %shr882.i, 63, !dbg !974
  %idxprom884.i = zext i32 %and883.i to i64, !dbg !974
  %arrayidx885.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom884.i, !dbg !974
  %597 = load i32, i32* %arrayidx885.i, align 4, !dbg !974
  %598 = load i32, i32* %u.i, align 4, !dbg !974
  %shr886.i = lshr i32 %598, 10, !dbg !974
  %and887.i = and i32 %shr886.i, 63, !dbg !974
  %idxprom888.i = zext i32 %and887.i to i64, !dbg !974
  %arrayidx889.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom888.i, !dbg !974
  %599 = load i32, i32* %arrayidx889.i, align 4, !dbg !974
  %xor890.i = xor i32 %597, %599, !dbg !974
  %600 = load i32, i32* %u.i, align 4, !dbg !974
  %shr891.i = lshr i32 %600, 18, !dbg !974
  %and892.i = and i32 %shr891.i, 63, !dbg !974
  %idxprom893.i = zext i32 %and892.i to i64, !dbg !974
  %arrayidx894.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom893.i, !dbg !974
  %601 = load i32, i32* %arrayidx894.i, align 4, !dbg !974
  %xor895.i = xor i32 %xor890.i, %601, !dbg !974
  %602 = load i32, i32* %u.i, align 4, !dbg !974
  %shr896.i = lshr i32 %602, 26, !dbg !974
  %idxprom898.i = zext i32 %shr896.i to i64, !dbg !974
  %arrayidx899.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom898.i, !dbg !974
  %603 = load i32, i32* %arrayidx899.i, align 4, !dbg !974
  %xor900.i = xor i32 %xor895.i, %603, !dbg !974
  %604 = load i32, i32* %t.i, align 4, !dbg !974
  %shr901.i = lshr i32 %604, 2, !dbg !974
  %and902.i = and i32 %shr901.i, 63, !dbg !974
  %idxprom903.i = zext i32 %and902.i to i64, !dbg !974
  %arrayidx904.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom903.i, !dbg !974
  %605 = load i32, i32* %arrayidx904.i, align 4, !dbg !974
  %xor905.i = xor i32 %xor900.i, %605, !dbg !974
  %606 = load i32, i32* %t.i, align 4, !dbg !974
  %shr906.i = lshr i32 %606, 10, !dbg !974
  %and907.i = and i32 %shr906.i, 63, !dbg !974
  %idxprom908.i = zext i32 %and907.i to i64, !dbg !974
  %arrayidx909.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom908.i, !dbg !974
  %607 = load i32, i32* %arrayidx909.i, align 4, !dbg !974
  %xor910.i = xor i32 %xor905.i, %607, !dbg !974
  %608 = load i32, i32* %t.i, align 4, !dbg !974
  %shr911.i = lshr i32 %608, 18, !dbg !974
  %and912.i = and i32 %shr911.i, 63, !dbg !974
  %idxprom913.i = zext i32 %and912.i to i64, !dbg !974
  %arrayidx914.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom913.i, !dbg !974
  %609 = load i32, i32* %arrayidx914.i, align 4, !dbg !974
  %xor915.i = xor i32 %xor910.i, %609, !dbg !974
  %610 = load i32, i32* %t.i, align 4, !dbg !974
  %shr916.i = lshr i32 %610, 26, !dbg !974
  %idxprom918.i = zext i32 %shr916.i to i64, !dbg !974
  %arrayidx919.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom918.i, !dbg !974
  %611 = load i32, i32* %arrayidx919.i, align 4, !dbg !974
  %xor920.i = xor i32 %xor915.i, %611, !dbg !974
  %612 = load i32, i32* %l.i, align 4, !dbg !974
  %xor921.i = xor i32 %612, %xor920.i, !dbg !974
  store i32 %xor921.i, i32* %l.i, align 4, !dbg !974
  %613 = load i32, i32* %l.i, align 4, !dbg !975
  %614 = load i32*, i32** %s.i, align 8, !dbg !975
  %arrayidx922.i = getelementptr inbounds i32, i32* %614, i64 24, !dbg !975
  %615 = load i32, i32* %arrayidx922.i, align 4, !dbg !975
  %xor923.i = xor i32 %613, %615, !dbg !975
  store i32 %xor923.i, i32* %u.i, align 4, !dbg !975
  %616 = load i32, i32* %l.i, align 4, !dbg !975
  %617 = load i32*, i32** %s.i, align 8, !dbg !975
  %arrayidx924.i = getelementptr inbounds i32, i32* %617, i64 25, !dbg !975
  %618 = load i32, i32* %arrayidx924.i, align 4, !dbg !975
  %xor925.i = xor i32 %616, %618, !dbg !975
  store i32 %xor925.i, i32* %t.i, align 4, !dbg !975
  %619 = load i32, i32* %t.i, align 4, !dbg !865
  %620 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %619) #7, !dbg !865, !srcloc !211
  store i32 %620, i32* %ret926.i, align 4, !dbg !865
  %621 = load i32, i32* %ret926.i, align 4, !dbg !865
  store i32 %621, i32* %tmp927.i, align 4, !dbg !865
  %622 = load i32, i32* %tmp927.i, align 4, !dbg !865
  store i32 %622, i32* %t.i, align 4, !dbg !975
  %623 = load i32, i32* %u.i, align 4, !dbg !975
  %shr928.i = lshr i32 %623, 2, !dbg !975
  %and929.i = and i32 %shr928.i, 63, !dbg !975
  %idxprom930.i = zext i32 %and929.i to i64, !dbg !975
  %arrayidx931.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom930.i, !dbg !975
  %624 = load i32, i32* %arrayidx931.i, align 4, !dbg !975
  %625 = load i32, i32* %u.i, align 4, !dbg !975
  %shr932.i = lshr i32 %625, 10, !dbg !975
  %and933.i = and i32 %shr932.i, 63, !dbg !975
  %idxprom934.i = zext i32 %and933.i to i64, !dbg !975
  %arrayidx935.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom934.i, !dbg !975
  %626 = load i32, i32* %arrayidx935.i, align 4, !dbg !975
  %xor936.i = xor i32 %624, %626, !dbg !975
  %627 = load i32, i32* %u.i, align 4, !dbg !975
  %shr937.i = lshr i32 %627, 18, !dbg !975
  %and938.i = and i32 %shr937.i, 63, !dbg !975
  %idxprom939.i = zext i32 %and938.i to i64, !dbg !975
  %arrayidx940.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom939.i, !dbg !975
  %628 = load i32, i32* %arrayidx940.i, align 4, !dbg !975
  %xor941.i = xor i32 %xor936.i, %628, !dbg !975
  %629 = load i32, i32* %u.i, align 4, !dbg !975
  %shr942.i = lshr i32 %629, 26, !dbg !975
  %idxprom944.i = zext i32 %shr942.i to i64, !dbg !975
  %arrayidx945.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom944.i, !dbg !975
  %630 = load i32, i32* %arrayidx945.i, align 4, !dbg !975
  %xor946.i = xor i32 %xor941.i, %630, !dbg !975
  %631 = load i32, i32* %t.i, align 4, !dbg !975
  %shr947.i = lshr i32 %631, 2, !dbg !975
  %and948.i = and i32 %shr947.i, 63, !dbg !975
  %idxprom949.i = zext i32 %and948.i to i64, !dbg !975
  %arrayidx950.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom949.i, !dbg !975
  %632 = load i32, i32* %arrayidx950.i, align 4, !dbg !975
  %xor951.i = xor i32 %xor946.i, %632, !dbg !975
  %633 = load i32, i32* %t.i, align 4, !dbg !975
  %shr952.i = lshr i32 %633, 10, !dbg !975
  %and953.i = and i32 %shr952.i, 63, !dbg !975
  %idxprom954.i = zext i32 %and953.i to i64, !dbg !975
  %arrayidx955.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom954.i, !dbg !975
  %634 = load i32, i32* %arrayidx955.i, align 4, !dbg !975
  %xor956.i = xor i32 %xor951.i, %634, !dbg !975
  %635 = load i32, i32* %t.i, align 4, !dbg !975
  %shr957.i = lshr i32 %635, 18, !dbg !975
  %and958.i = and i32 %shr957.i, 63, !dbg !975
  %idxprom959.i = zext i32 %and958.i to i64, !dbg !975
  %arrayidx960.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom959.i, !dbg !975
  %636 = load i32, i32* %arrayidx960.i, align 4, !dbg !975
  %xor961.i = xor i32 %xor956.i, %636, !dbg !975
  %637 = load i32, i32* %t.i, align 4, !dbg !975
  %shr962.i = lshr i32 %637, 26, !dbg !975
  %idxprom964.i = zext i32 %shr962.i to i64, !dbg !975
  %arrayidx965.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom964.i, !dbg !975
  %638 = load i32, i32* %arrayidx965.i, align 4, !dbg !975
  %xor966.i = xor i32 %xor961.i, %638, !dbg !975
  %639 = load i32, i32* %r.i, align 4, !dbg !975
  %xor967.i = xor i32 %639, %xor966.i, !dbg !975
  store i32 %xor967.i, i32* %r.i, align 4, !dbg !975
  %640 = load i32, i32* %r.i, align 4, !dbg !976
  %641 = load i32*, i32** %s.i, align 8, !dbg !976
  %arrayidx968.i = getelementptr inbounds i32, i32* %641, i64 22, !dbg !976
  %642 = load i32, i32* %arrayidx968.i, align 4, !dbg !976
  %xor969.i = xor i32 %640, %642, !dbg !976
  store i32 %xor969.i, i32* %u.i, align 4, !dbg !976
  %643 = load i32, i32* %r.i, align 4, !dbg !976
  %644 = load i32*, i32** %s.i, align 8, !dbg !976
  %arrayidx970.i = getelementptr inbounds i32, i32* %644, i64 23, !dbg !976
  %645 = load i32, i32* %arrayidx970.i, align 4, !dbg !976
  %xor971.i = xor i32 %643, %645, !dbg !976
  store i32 %xor971.i, i32* %t.i, align 4, !dbg !976
  %646 = load i32, i32* %t.i, align 4, !dbg !866
  %647 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %646) #7, !dbg !866, !srcloc !217
  store i32 %647, i32* %ret972.i, align 4, !dbg !866
  %648 = load i32, i32* %ret972.i, align 4, !dbg !866
  store i32 %648, i32* %tmp973.i, align 4, !dbg !866
  %649 = load i32, i32* %tmp973.i, align 4, !dbg !866
  store i32 %649, i32* %t.i, align 4, !dbg !976
  %650 = load i32, i32* %u.i, align 4, !dbg !976
  %shr974.i = lshr i32 %650, 2, !dbg !976
  %and975.i = and i32 %shr974.i, 63, !dbg !976
  %idxprom976.i = zext i32 %and975.i to i64, !dbg !976
  %arrayidx977.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom976.i, !dbg !976
  %651 = load i32, i32* %arrayidx977.i, align 4, !dbg !976
  %652 = load i32, i32* %u.i, align 4, !dbg !976
  %shr978.i = lshr i32 %652, 10, !dbg !976
  %and979.i = and i32 %shr978.i, 63, !dbg !976
  %idxprom980.i = zext i32 %and979.i to i64, !dbg !976
  %arrayidx981.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom980.i, !dbg !976
  %653 = load i32, i32* %arrayidx981.i, align 4, !dbg !976
  %xor982.i = xor i32 %651, %653, !dbg !976
  %654 = load i32, i32* %u.i, align 4, !dbg !976
  %shr983.i = lshr i32 %654, 18, !dbg !976
  %and984.i = and i32 %shr983.i, 63, !dbg !976
  %idxprom985.i = zext i32 %and984.i to i64, !dbg !976
  %arrayidx986.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom985.i, !dbg !976
  %655 = load i32, i32* %arrayidx986.i, align 4, !dbg !976
  %xor987.i = xor i32 %xor982.i, %655, !dbg !976
  %656 = load i32, i32* %u.i, align 4, !dbg !976
  %shr988.i = lshr i32 %656, 26, !dbg !976
  %idxprom990.i = zext i32 %shr988.i to i64, !dbg !976
  %arrayidx991.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom990.i, !dbg !976
  %657 = load i32, i32* %arrayidx991.i, align 4, !dbg !976
  %xor992.i = xor i32 %xor987.i, %657, !dbg !976
  %658 = load i32, i32* %t.i, align 4, !dbg !976
  %shr993.i = lshr i32 %658, 2, !dbg !976
  %and994.i = and i32 %shr993.i, 63, !dbg !976
  %idxprom995.i = zext i32 %and994.i to i64, !dbg !976
  %arrayidx996.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom995.i, !dbg !976
  %659 = load i32, i32* %arrayidx996.i, align 4, !dbg !976
  %xor997.i = xor i32 %xor992.i, %659, !dbg !976
  %660 = load i32, i32* %t.i, align 4, !dbg !976
  %shr998.i = lshr i32 %660, 10, !dbg !976
  %and999.i = and i32 %shr998.i, 63, !dbg !976
  %idxprom1000.i = zext i32 %and999.i to i64, !dbg !976
  %arrayidx1001.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1000.i, !dbg !976
  %661 = load i32, i32* %arrayidx1001.i, align 4, !dbg !976
  %xor1002.i = xor i32 %xor997.i, %661, !dbg !976
  %662 = load i32, i32* %t.i, align 4, !dbg !976
  %shr1003.i = lshr i32 %662, 18, !dbg !976
  %and1004.i = and i32 %shr1003.i, 63, !dbg !976
  %idxprom1005.i = zext i32 %and1004.i to i64, !dbg !976
  %arrayidx1006.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1005.i, !dbg !976
  %663 = load i32, i32* %arrayidx1006.i, align 4, !dbg !976
  %xor1007.i = xor i32 %xor1002.i, %663, !dbg !976
  %664 = load i32, i32* %t.i, align 4, !dbg !976
  %shr1008.i = lshr i32 %664, 26, !dbg !976
  %idxprom1010.i = zext i32 %shr1008.i to i64, !dbg !976
  %arrayidx1011.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1010.i, !dbg !976
  %665 = load i32, i32* %arrayidx1011.i, align 4, !dbg !976
  %xor1012.i = xor i32 %xor1007.i, %665, !dbg !976
  %666 = load i32, i32* %l.i, align 4, !dbg !976
  %xor1013.i = xor i32 %666, %xor1012.i, !dbg !976
  store i32 %xor1013.i, i32* %l.i, align 4, !dbg !976
  %667 = load i32, i32* %l.i, align 4, !dbg !977
  %668 = load i32*, i32** %s.i, align 8, !dbg !977
  %arrayidx1014.i = getelementptr inbounds i32, i32* %668, i64 20, !dbg !977
  %669 = load i32, i32* %arrayidx1014.i, align 4, !dbg !977
  %xor1015.i = xor i32 %667, %669, !dbg !977
  store i32 %xor1015.i, i32* %u.i, align 4, !dbg !977
  %670 = load i32, i32* %l.i, align 4, !dbg !977
  %671 = load i32*, i32** %s.i, align 8, !dbg !977
  %arrayidx1016.i = getelementptr inbounds i32, i32* %671, i64 21, !dbg !977
  %672 = load i32, i32* %arrayidx1016.i, align 4, !dbg !977
  %xor1017.i = xor i32 %670, %672, !dbg !977
  store i32 %xor1017.i, i32* %t.i, align 4, !dbg !977
  %673 = load i32, i32* %t.i, align 4, !dbg !867
  %674 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %673) #7, !dbg !867, !srcloc !223
  store i32 %674, i32* %ret1018.i, align 4, !dbg !867
  %675 = load i32, i32* %ret1018.i, align 4, !dbg !867
  store i32 %675, i32* %tmp1019.i, align 4, !dbg !867
  %676 = load i32, i32* %tmp1019.i, align 4, !dbg !867
  store i32 %676, i32* %t.i, align 4, !dbg !977
  %677 = load i32, i32* %u.i, align 4, !dbg !977
  %shr1020.i = lshr i32 %677, 2, !dbg !977
  %and1021.i = and i32 %shr1020.i, 63, !dbg !977
  %idxprom1022.i = zext i32 %and1021.i to i64, !dbg !977
  %arrayidx1023.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1022.i, !dbg !977
  %678 = load i32, i32* %arrayidx1023.i, align 4, !dbg !977
  %679 = load i32, i32* %u.i, align 4, !dbg !977
  %shr1024.i = lshr i32 %679, 10, !dbg !977
  %and1025.i = and i32 %shr1024.i, 63, !dbg !977
  %idxprom1026.i = zext i32 %and1025.i to i64, !dbg !977
  %arrayidx1027.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1026.i, !dbg !977
  %680 = load i32, i32* %arrayidx1027.i, align 4, !dbg !977
  %xor1028.i = xor i32 %678, %680, !dbg !977
  %681 = load i32, i32* %u.i, align 4, !dbg !977
  %shr1029.i = lshr i32 %681, 18, !dbg !977
  %and1030.i = and i32 %shr1029.i, 63, !dbg !977
  %idxprom1031.i = zext i32 %and1030.i to i64, !dbg !977
  %arrayidx1032.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1031.i, !dbg !977
  %682 = load i32, i32* %arrayidx1032.i, align 4, !dbg !977
  %xor1033.i = xor i32 %xor1028.i, %682, !dbg !977
  %683 = load i32, i32* %u.i, align 4, !dbg !977
  %shr1034.i = lshr i32 %683, 26, !dbg !977
  %idxprom1036.i = zext i32 %shr1034.i to i64, !dbg !977
  %arrayidx1037.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1036.i, !dbg !977
  %684 = load i32, i32* %arrayidx1037.i, align 4, !dbg !977
  %xor1038.i = xor i32 %xor1033.i, %684, !dbg !977
  %685 = load i32, i32* %t.i, align 4, !dbg !977
  %shr1039.i = lshr i32 %685, 2, !dbg !977
  %and1040.i = and i32 %shr1039.i, 63, !dbg !977
  %idxprom1041.i = zext i32 %and1040.i to i64, !dbg !977
  %arrayidx1042.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1041.i, !dbg !977
  %686 = load i32, i32* %arrayidx1042.i, align 4, !dbg !977
  %xor1043.i = xor i32 %xor1038.i, %686, !dbg !977
  %687 = load i32, i32* %t.i, align 4, !dbg !977
  %shr1044.i = lshr i32 %687, 10, !dbg !977
  %and1045.i = and i32 %shr1044.i, 63, !dbg !977
  %idxprom1046.i = zext i32 %and1045.i to i64, !dbg !977
  %arrayidx1047.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1046.i, !dbg !977
  %688 = load i32, i32* %arrayidx1047.i, align 4, !dbg !977
  %xor1048.i = xor i32 %xor1043.i, %688, !dbg !977
  %689 = load i32, i32* %t.i, align 4, !dbg !977
  %shr1049.i = lshr i32 %689, 18, !dbg !977
  %and1050.i = and i32 %shr1049.i, 63, !dbg !977
  %idxprom1051.i = zext i32 %and1050.i to i64, !dbg !977
  %arrayidx1052.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1051.i, !dbg !977
  %690 = load i32, i32* %arrayidx1052.i, align 4, !dbg !977
  %xor1053.i = xor i32 %xor1048.i, %690, !dbg !977
  %691 = load i32, i32* %t.i, align 4, !dbg !977
  %shr1054.i = lshr i32 %691, 26, !dbg !977
  %idxprom1056.i = zext i32 %shr1054.i to i64, !dbg !977
  %arrayidx1057.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1056.i, !dbg !977
  %692 = load i32, i32* %arrayidx1057.i, align 4, !dbg !977
  %xor1058.i = xor i32 %xor1053.i, %692, !dbg !977
  %693 = load i32, i32* %r.i, align 4, !dbg !977
  %xor1059.i = xor i32 %693, %xor1058.i, !dbg !977
  store i32 %xor1059.i, i32* %r.i, align 4, !dbg !977
  %694 = load i32, i32* %r.i, align 4, !dbg !978
  %695 = load i32*, i32** %s.i, align 8, !dbg !978
  %arrayidx1060.i = getelementptr inbounds i32, i32* %695, i64 18, !dbg !978
  %696 = load i32, i32* %arrayidx1060.i, align 4, !dbg !978
  %xor1061.i = xor i32 %694, %696, !dbg !978
  store i32 %xor1061.i, i32* %u.i, align 4, !dbg !978
  %697 = load i32, i32* %r.i, align 4, !dbg !978
  %698 = load i32*, i32** %s.i, align 8, !dbg !978
  %arrayidx1062.i = getelementptr inbounds i32, i32* %698, i64 19, !dbg !978
  %699 = load i32, i32* %arrayidx1062.i, align 4, !dbg !978
  %xor1063.i = xor i32 %697, %699, !dbg !978
  store i32 %xor1063.i, i32* %t.i, align 4, !dbg !978
  %700 = load i32, i32* %t.i, align 4, !dbg !868
  %701 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %700) #7, !dbg !868, !srcloc !229
  store i32 %701, i32* %ret1064.i, align 4, !dbg !868
  %702 = load i32, i32* %ret1064.i, align 4, !dbg !868
  store i32 %702, i32* %tmp1065.i, align 4, !dbg !868
  %703 = load i32, i32* %tmp1065.i, align 4, !dbg !868
  store i32 %703, i32* %t.i, align 4, !dbg !978
  %704 = load i32, i32* %u.i, align 4, !dbg !978
  %shr1066.i = lshr i32 %704, 2, !dbg !978
  %and1067.i = and i32 %shr1066.i, 63, !dbg !978
  %idxprom1068.i = zext i32 %and1067.i to i64, !dbg !978
  %arrayidx1069.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1068.i, !dbg !978
  %705 = load i32, i32* %arrayidx1069.i, align 4, !dbg !978
  %706 = load i32, i32* %u.i, align 4, !dbg !978
  %shr1070.i = lshr i32 %706, 10, !dbg !978
  %and1071.i = and i32 %shr1070.i, 63, !dbg !978
  %idxprom1072.i = zext i32 %and1071.i to i64, !dbg !978
  %arrayidx1073.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1072.i, !dbg !978
  %707 = load i32, i32* %arrayidx1073.i, align 4, !dbg !978
  %xor1074.i = xor i32 %705, %707, !dbg !978
  %708 = load i32, i32* %u.i, align 4, !dbg !978
  %shr1075.i = lshr i32 %708, 18, !dbg !978
  %and1076.i = and i32 %shr1075.i, 63, !dbg !978
  %idxprom1077.i = zext i32 %and1076.i to i64, !dbg !978
  %arrayidx1078.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1077.i, !dbg !978
  %709 = load i32, i32* %arrayidx1078.i, align 4, !dbg !978
  %xor1079.i = xor i32 %xor1074.i, %709, !dbg !978
  %710 = load i32, i32* %u.i, align 4, !dbg !978
  %shr1080.i = lshr i32 %710, 26, !dbg !978
  %idxprom1082.i = zext i32 %shr1080.i to i64, !dbg !978
  %arrayidx1083.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1082.i, !dbg !978
  %711 = load i32, i32* %arrayidx1083.i, align 4, !dbg !978
  %xor1084.i = xor i32 %xor1079.i, %711, !dbg !978
  %712 = load i32, i32* %t.i, align 4, !dbg !978
  %shr1085.i = lshr i32 %712, 2, !dbg !978
  %and1086.i = and i32 %shr1085.i, 63, !dbg !978
  %idxprom1087.i = zext i32 %and1086.i to i64, !dbg !978
  %arrayidx1088.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1087.i, !dbg !978
  %713 = load i32, i32* %arrayidx1088.i, align 4, !dbg !978
  %xor1089.i = xor i32 %xor1084.i, %713, !dbg !978
  %714 = load i32, i32* %t.i, align 4, !dbg !978
  %shr1090.i = lshr i32 %714, 10, !dbg !978
  %and1091.i = and i32 %shr1090.i, 63, !dbg !978
  %idxprom1092.i = zext i32 %and1091.i to i64, !dbg !978
  %arrayidx1093.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1092.i, !dbg !978
  %715 = load i32, i32* %arrayidx1093.i, align 4, !dbg !978
  %xor1094.i = xor i32 %xor1089.i, %715, !dbg !978
  %716 = load i32, i32* %t.i, align 4, !dbg !978
  %shr1095.i = lshr i32 %716, 18, !dbg !978
  %and1096.i = and i32 %shr1095.i, 63, !dbg !978
  %idxprom1097.i = zext i32 %and1096.i to i64, !dbg !978
  %arrayidx1098.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1097.i, !dbg !978
  %717 = load i32, i32* %arrayidx1098.i, align 4, !dbg !978
  %xor1099.i = xor i32 %xor1094.i, %717, !dbg !978
  %718 = load i32, i32* %t.i, align 4, !dbg !978
  %shr1100.i = lshr i32 %718, 26, !dbg !978
  %idxprom1102.i = zext i32 %shr1100.i to i64, !dbg !978
  %arrayidx1103.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1102.i, !dbg !978
  %719 = load i32, i32* %arrayidx1103.i, align 4, !dbg !978
  %xor1104.i = xor i32 %xor1099.i, %719, !dbg !978
  %720 = load i32, i32* %l.i, align 4, !dbg !978
  %xor1105.i = xor i32 %720, %xor1104.i, !dbg !978
  store i32 %xor1105.i, i32* %l.i, align 4, !dbg !978
  %721 = load i32, i32* %l.i, align 4, !dbg !979
  %722 = load i32*, i32** %s.i, align 8, !dbg !979
  %arrayidx1106.i = getelementptr inbounds i32, i32* %722, i64 16, !dbg !979
  %723 = load i32, i32* %arrayidx1106.i, align 4, !dbg !979
  %xor1107.i = xor i32 %721, %723, !dbg !979
  store i32 %xor1107.i, i32* %u.i, align 4, !dbg !979
  %724 = load i32, i32* %l.i, align 4, !dbg !979
  %725 = load i32*, i32** %s.i, align 8, !dbg !979
  %arrayidx1108.i = getelementptr inbounds i32, i32* %725, i64 17, !dbg !979
  %726 = load i32, i32* %arrayidx1108.i, align 4, !dbg !979
  %xor1109.i = xor i32 %724, %726, !dbg !979
  store i32 %xor1109.i, i32* %t.i, align 4, !dbg !979
  %727 = load i32, i32* %t.i, align 4, !dbg !869
  %728 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %727) #7, !dbg !869, !srcloc !235
  store i32 %728, i32* %ret1110.i, align 4, !dbg !869
  %729 = load i32, i32* %ret1110.i, align 4, !dbg !869
  store i32 %729, i32* %tmp1111.i, align 4, !dbg !869
  %730 = load i32, i32* %tmp1111.i, align 4, !dbg !869
  store i32 %730, i32* %t.i, align 4, !dbg !979
  %731 = load i32, i32* %u.i, align 4, !dbg !979
  %shr1112.i = lshr i32 %731, 2, !dbg !979
  %and1113.i = and i32 %shr1112.i, 63, !dbg !979
  %idxprom1114.i = zext i32 %and1113.i to i64, !dbg !979
  %arrayidx1115.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1114.i, !dbg !979
  %732 = load i32, i32* %arrayidx1115.i, align 4, !dbg !979
  %733 = load i32, i32* %u.i, align 4, !dbg !979
  %shr1116.i = lshr i32 %733, 10, !dbg !979
  %and1117.i = and i32 %shr1116.i, 63, !dbg !979
  %idxprom1118.i = zext i32 %and1117.i to i64, !dbg !979
  %arrayidx1119.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1118.i, !dbg !979
  %734 = load i32, i32* %arrayidx1119.i, align 4, !dbg !979
  %xor1120.i = xor i32 %732, %734, !dbg !979
  %735 = load i32, i32* %u.i, align 4, !dbg !979
  %shr1121.i = lshr i32 %735, 18, !dbg !979
  %and1122.i = and i32 %shr1121.i, 63, !dbg !979
  %idxprom1123.i = zext i32 %and1122.i to i64, !dbg !979
  %arrayidx1124.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1123.i, !dbg !979
  %736 = load i32, i32* %arrayidx1124.i, align 4, !dbg !979
  %xor1125.i = xor i32 %xor1120.i, %736, !dbg !979
  %737 = load i32, i32* %u.i, align 4, !dbg !979
  %shr1126.i = lshr i32 %737, 26, !dbg !979
  %idxprom1128.i = zext i32 %shr1126.i to i64, !dbg !979
  %arrayidx1129.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1128.i, !dbg !979
  %738 = load i32, i32* %arrayidx1129.i, align 4, !dbg !979
  %xor1130.i = xor i32 %xor1125.i, %738, !dbg !979
  %739 = load i32, i32* %t.i, align 4, !dbg !979
  %shr1131.i = lshr i32 %739, 2, !dbg !979
  %and1132.i = and i32 %shr1131.i, 63, !dbg !979
  %idxprom1133.i = zext i32 %and1132.i to i64, !dbg !979
  %arrayidx1134.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1133.i, !dbg !979
  %740 = load i32, i32* %arrayidx1134.i, align 4, !dbg !979
  %xor1135.i = xor i32 %xor1130.i, %740, !dbg !979
  %741 = load i32, i32* %t.i, align 4, !dbg !979
  %shr1136.i = lshr i32 %741, 10, !dbg !979
  %and1137.i = and i32 %shr1136.i, 63, !dbg !979
  %idxprom1138.i = zext i32 %and1137.i to i64, !dbg !979
  %arrayidx1139.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1138.i, !dbg !979
  %742 = load i32, i32* %arrayidx1139.i, align 4, !dbg !979
  %xor1140.i = xor i32 %xor1135.i, %742, !dbg !979
  %743 = load i32, i32* %t.i, align 4, !dbg !979
  %shr1141.i = lshr i32 %743, 18, !dbg !979
  %and1142.i = and i32 %shr1141.i, 63, !dbg !979
  %idxprom1143.i = zext i32 %and1142.i to i64, !dbg !979
  %arrayidx1144.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1143.i, !dbg !979
  %744 = load i32, i32* %arrayidx1144.i, align 4, !dbg !979
  %xor1145.i = xor i32 %xor1140.i, %744, !dbg !979
  %745 = load i32, i32* %t.i, align 4, !dbg !979
  %shr1146.i = lshr i32 %745, 26, !dbg !979
  %idxprom1148.i = zext i32 %shr1146.i to i64, !dbg !979
  %arrayidx1149.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1148.i, !dbg !979
  %746 = load i32, i32* %arrayidx1149.i, align 4, !dbg !979
  %xor1150.i = xor i32 %xor1145.i, %746, !dbg !979
  %747 = load i32, i32* %r.i, align 4, !dbg !979
  %xor1151.i = xor i32 %747, %xor1150.i, !dbg !979
  store i32 %xor1151.i, i32* %r.i, align 4, !dbg !979
  %748 = load i32, i32* %r.i, align 4, !dbg !980
  %749 = load i32*, i32** %s.i, align 8, !dbg !980
  %arrayidx1152.i = getelementptr inbounds i32, i32* %749, i64 14, !dbg !980
  %750 = load i32, i32* %arrayidx1152.i, align 4, !dbg !980
  %xor1153.i = xor i32 %748, %750, !dbg !980
  store i32 %xor1153.i, i32* %u.i, align 4, !dbg !980
  %751 = load i32, i32* %r.i, align 4, !dbg !980
  %752 = load i32*, i32** %s.i, align 8, !dbg !980
  %arrayidx1154.i = getelementptr inbounds i32, i32* %752, i64 15, !dbg !980
  %753 = load i32, i32* %arrayidx1154.i, align 4, !dbg !980
  %xor1155.i = xor i32 %751, %753, !dbg !980
  store i32 %xor1155.i, i32* %t.i, align 4, !dbg !980
  %754 = load i32, i32* %t.i, align 4, !dbg !870
  %755 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %754) #7, !dbg !870, !srcloc !241
  store i32 %755, i32* %ret1156.i, align 4, !dbg !870
  %756 = load i32, i32* %ret1156.i, align 4, !dbg !870
  store i32 %756, i32* %tmp1157.i, align 4, !dbg !870
  %757 = load i32, i32* %tmp1157.i, align 4, !dbg !870
  store i32 %757, i32* %t.i, align 4, !dbg !980
  %758 = load i32, i32* %u.i, align 4, !dbg !980
  %shr1158.i = lshr i32 %758, 2, !dbg !980
  %and1159.i = and i32 %shr1158.i, 63, !dbg !980
  %idxprom1160.i = zext i32 %and1159.i to i64, !dbg !980
  %arrayidx1161.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1160.i, !dbg !980
  %759 = load i32, i32* %arrayidx1161.i, align 4, !dbg !980
  %760 = load i32, i32* %u.i, align 4, !dbg !980
  %shr1162.i = lshr i32 %760, 10, !dbg !980
  %and1163.i = and i32 %shr1162.i, 63, !dbg !980
  %idxprom1164.i = zext i32 %and1163.i to i64, !dbg !980
  %arrayidx1165.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1164.i, !dbg !980
  %761 = load i32, i32* %arrayidx1165.i, align 4, !dbg !980
  %xor1166.i = xor i32 %759, %761, !dbg !980
  %762 = load i32, i32* %u.i, align 4, !dbg !980
  %shr1167.i = lshr i32 %762, 18, !dbg !980
  %and1168.i = and i32 %shr1167.i, 63, !dbg !980
  %idxprom1169.i = zext i32 %and1168.i to i64, !dbg !980
  %arrayidx1170.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1169.i, !dbg !980
  %763 = load i32, i32* %arrayidx1170.i, align 4, !dbg !980
  %xor1171.i = xor i32 %xor1166.i, %763, !dbg !980
  %764 = load i32, i32* %u.i, align 4, !dbg !980
  %shr1172.i = lshr i32 %764, 26, !dbg !980
  %idxprom1174.i = zext i32 %shr1172.i to i64, !dbg !980
  %arrayidx1175.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1174.i, !dbg !980
  %765 = load i32, i32* %arrayidx1175.i, align 4, !dbg !980
  %xor1176.i = xor i32 %xor1171.i, %765, !dbg !980
  %766 = load i32, i32* %t.i, align 4, !dbg !980
  %shr1177.i = lshr i32 %766, 2, !dbg !980
  %and1178.i = and i32 %shr1177.i, 63, !dbg !980
  %idxprom1179.i = zext i32 %and1178.i to i64, !dbg !980
  %arrayidx1180.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1179.i, !dbg !980
  %767 = load i32, i32* %arrayidx1180.i, align 4, !dbg !980
  %xor1181.i = xor i32 %xor1176.i, %767, !dbg !980
  %768 = load i32, i32* %t.i, align 4, !dbg !980
  %shr1182.i = lshr i32 %768, 10, !dbg !980
  %and1183.i = and i32 %shr1182.i, 63, !dbg !980
  %idxprom1184.i = zext i32 %and1183.i to i64, !dbg !980
  %arrayidx1185.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1184.i, !dbg !980
  %769 = load i32, i32* %arrayidx1185.i, align 4, !dbg !980
  %xor1186.i = xor i32 %xor1181.i, %769, !dbg !980
  %770 = load i32, i32* %t.i, align 4, !dbg !980
  %shr1187.i = lshr i32 %770, 18, !dbg !980
  %and1188.i = and i32 %shr1187.i, 63, !dbg !980
  %idxprom1189.i = zext i32 %and1188.i to i64, !dbg !980
  %arrayidx1190.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1189.i, !dbg !980
  %771 = load i32, i32* %arrayidx1190.i, align 4, !dbg !980
  %xor1191.i = xor i32 %xor1186.i, %771, !dbg !980
  %772 = load i32, i32* %t.i, align 4, !dbg !980
  %shr1192.i = lshr i32 %772, 26, !dbg !980
  %idxprom1194.i = zext i32 %shr1192.i to i64, !dbg !980
  %arrayidx1195.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1194.i, !dbg !980
  %773 = load i32, i32* %arrayidx1195.i, align 4, !dbg !980
  %xor1196.i = xor i32 %xor1191.i, %773, !dbg !980
  %774 = load i32, i32* %l.i, align 4, !dbg !980
  %xor1197.i = xor i32 %774, %xor1196.i, !dbg !980
  store i32 %xor1197.i, i32* %l.i, align 4, !dbg !980
  %775 = load i32, i32* %l.i, align 4, !dbg !981
  %776 = load i32*, i32** %s.i, align 8, !dbg !981
  %arrayidx1198.i = getelementptr inbounds i32, i32* %776, i64 12, !dbg !981
  %777 = load i32, i32* %arrayidx1198.i, align 4, !dbg !981
  %xor1199.i = xor i32 %775, %777, !dbg !981
  store i32 %xor1199.i, i32* %u.i, align 4, !dbg !981
  %778 = load i32, i32* %l.i, align 4, !dbg !981
  %779 = load i32*, i32** %s.i, align 8, !dbg !981
  %arrayidx1200.i = getelementptr inbounds i32, i32* %779, i64 13, !dbg !981
  %780 = load i32, i32* %arrayidx1200.i, align 4, !dbg !981
  %xor1201.i = xor i32 %778, %780, !dbg !981
  store i32 %xor1201.i, i32* %t.i, align 4, !dbg !981
  %781 = load i32, i32* %t.i, align 4, !dbg !871
  %782 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %781) #7, !dbg !871, !srcloc !247
  store i32 %782, i32* %ret1202.i, align 4, !dbg !871
  %783 = load i32, i32* %ret1202.i, align 4, !dbg !871
  store i32 %783, i32* %tmp1203.i, align 4, !dbg !871
  %784 = load i32, i32* %tmp1203.i, align 4, !dbg !871
  store i32 %784, i32* %t.i, align 4, !dbg !981
  %785 = load i32, i32* %u.i, align 4, !dbg !981
  %shr1204.i = lshr i32 %785, 2, !dbg !981
  %and1205.i = and i32 %shr1204.i, 63, !dbg !981
  %idxprom1206.i = zext i32 %and1205.i to i64, !dbg !981
  %arrayidx1207.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1206.i, !dbg !981
  %786 = load i32, i32* %arrayidx1207.i, align 4, !dbg !981
  %787 = load i32, i32* %u.i, align 4, !dbg !981
  %shr1208.i = lshr i32 %787, 10, !dbg !981
  %and1209.i = and i32 %shr1208.i, 63, !dbg !981
  %idxprom1210.i = zext i32 %and1209.i to i64, !dbg !981
  %arrayidx1211.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1210.i, !dbg !981
  %788 = load i32, i32* %arrayidx1211.i, align 4, !dbg !981
  %xor1212.i = xor i32 %786, %788, !dbg !981
  %789 = load i32, i32* %u.i, align 4, !dbg !981
  %shr1213.i = lshr i32 %789, 18, !dbg !981
  %and1214.i = and i32 %shr1213.i, 63, !dbg !981
  %idxprom1215.i = zext i32 %and1214.i to i64, !dbg !981
  %arrayidx1216.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1215.i, !dbg !981
  %790 = load i32, i32* %arrayidx1216.i, align 4, !dbg !981
  %xor1217.i = xor i32 %xor1212.i, %790, !dbg !981
  %791 = load i32, i32* %u.i, align 4, !dbg !981
  %shr1218.i = lshr i32 %791, 26, !dbg !981
  %idxprom1220.i = zext i32 %shr1218.i to i64, !dbg !981
  %arrayidx1221.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1220.i, !dbg !981
  %792 = load i32, i32* %arrayidx1221.i, align 4, !dbg !981
  %xor1222.i = xor i32 %xor1217.i, %792, !dbg !981
  %793 = load i32, i32* %t.i, align 4, !dbg !981
  %shr1223.i = lshr i32 %793, 2, !dbg !981
  %and1224.i = and i32 %shr1223.i, 63, !dbg !981
  %idxprom1225.i = zext i32 %and1224.i to i64, !dbg !981
  %arrayidx1226.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1225.i, !dbg !981
  %794 = load i32, i32* %arrayidx1226.i, align 4, !dbg !981
  %xor1227.i = xor i32 %xor1222.i, %794, !dbg !981
  %795 = load i32, i32* %t.i, align 4, !dbg !981
  %shr1228.i = lshr i32 %795, 10, !dbg !981
  %and1229.i = and i32 %shr1228.i, 63, !dbg !981
  %idxprom1230.i = zext i32 %and1229.i to i64, !dbg !981
  %arrayidx1231.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1230.i, !dbg !981
  %796 = load i32, i32* %arrayidx1231.i, align 4, !dbg !981
  %xor1232.i = xor i32 %xor1227.i, %796, !dbg !981
  %797 = load i32, i32* %t.i, align 4, !dbg !981
  %shr1233.i = lshr i32 %797, 18, !dbg !981
  %and1234.i = and i32 %shr1233.i, 63, !dbg !981
  %idxprom1235.i = zext i32 %and1234.i to i64, !dbg !981
  %arrayidx1236.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1235.i, !dbg !981
  %798 = load i32, i32* %arrayidx1236.i, align 4, !dbg !981
  %xor1237.i = xor i32 %xor1232.i, %798, !dbg !981
  %799 = load i32, i32* %t.i, align 4, !dbg !981
  %shr1238.i = lshr i32 %799, 26, !dbg !981
  %idxprom1240.i = zext i32 %shr1238.i to i64, !dbg !981
  %arrayidx1241.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1240.i, !dbg !981
  %800 = load i32, i32* %arrayidx1241.i, align 4, !dbg !981
  %xor1242.i = xor i32 %xor1237.i, %800, !dbg !981
  %801 = load i32, i32* %r.i, align 4, !dbg !981
  %xor1243.i = xor i32 %801, %xor1242.i, !dbg !981
  store i32 %xor1243.i, i32* %r.i, align 4, !dbg !981
  %802 = load i32, i32* %r.i, align 4, !dbg !982
  %803 = load i32*, i32** %s.i, align 8, !dbg !982
  %arrayidx1244.i = getelementptr inbounds i32, i32* %803, i64 10, !dbg !982
  %804 = load i32, i32* %arrayidx1244.i, align 4, !dbg !982
  %xor1245.i = xor i32 %802, %804, !dbg !982
  store i32 %xor1245.i, i32* %u.i, align 4, !dbg !982
  %805 = load i32, i32* %r.i, align 4, !dbg !982
  %806 = load i32*, i32** %s.i, align 8, !dbg !982
  %arrayidx1246.i = getelementptr inbounds i32, i32* %806, i64 11, !dbg !982
  %807 = load i32, i32* %arrayidx1246.i, align 4, !dbg !982
  %xor1247.i = xor i32 %805, %807, !dbg !982
  store i32 %xor1247.i, i32* %t.i, align 4, !dbg !982
  %808 = load i32, i32* %t.i, align 4, !dbg !872
  %809 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %808) #7, !dbg !872, !srcloc !253
  store i32 %809, i32* %ret1248.i, align 4, !dbg !872
  %810 = load i32, i32* %ret1248.i, align 4, !dbg !872
  store i32 %810, i32* %tmp1249.i, align 4, !dbg !872
  %811 = load i32, i32* %tmp1249.i, align 4, !dbg !872
  store i32 %811, i32* %t.i, align 4, !dbg !982
  %812 = load i32, i32* %u.i, align 4, !dbg !982
  %shr1250.i = lshr i32 %812, 2, !dbg !982
  %and1251.i = and i32 %shr1250.i, 63, !dbg !982
  %idxprom1252.i = zext i32 %and1251.i to i64, !dbg !982
  %arrayidx1253.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1252.i, !dbg !982
  %813 = load i32, i32* %arrayidx1253.i, align 4, !dbg !982
  %814 = load i32, i32* %u.i, align 4, !dbg !982
  %shr1254.i = lshr i32 %814, 10, !dbg !982
  %and1255.i = and i32 %shr1254.i, 63, !dbg !982
  %idxprom1256.i = zext i32 %and1255.i to i64, !dbg !982
  %arrayidx1257.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1256.i, !dbg !982
  %815 = load i32, i32* %arrayidx1257.i, align 4, !dbg !982
  %xor1258.i = xor i32 %813, %815, !dbg !982
  %816 = load i32, i32* %u.i, align 4, !dbg !982
  %shr1259.i = lshr i32 %816, 18, !dbg !982
  %and1260.i = and i32 %shr1259.i, 63, !dbg !982
  %idxprom1261.i = zext i32 %and1260.i to i64, !dbg !982
  %arrayidx1262.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1261.i, !dbg !982
  %817 = load i32, i32* %arrayidx1262.i, align 4, !dbg !982
  %xor1263.i = xor i32 %xor1258.i, %817, !dbg !982
  %818 = load i32, i32* %u.i, align 4, !dbg !982
  %shr1264.i = lshr i32 %818, 26, !dbg !982
  %idxprom1266.i = zext i32 %shr1264.i to i64, !dbg !982
  %arrayidx1267.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1266.i, !dbg !982
  %819 = load i32, i32* %arrayidx1267.i, align 4, !dbg !982
  %xor1268.i = xor i32 %xor1263.i, %819, !dbg !982
  %820 = load i32, i32* %t.i, align 4, !dbg !982
  %shr1269.i = lshr i32 %820, 2, !dbg !982
  %and1270.i = and i32 %shr1269.i, 63, !dbg !982
  %idxprom1271.i = zext i32 %and1270.i to i64, !dbg !982
  %arrayidx1272.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1271.i, !dbg !982
  %821 = load i32, i32* %arrayidx1272.i, align 4, !dbg !982
  %xor1273.i = xor i32 %xor1268.i, %821, !dbg !982
  %822 = load i32, i32* %t.i, align 4, !dbg !982
  %shr1274.i = lshr i32 %822, 10, !dbg !982
  %and1275.i = and i32 %shr1274.i, 63, !dbg !982
  %idxprom1276.i = zext i32 %and1275.i to i64, !dbg !982
  %arrayidx1277.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1276.i, !dbg !982
  %823 = load i32, i32* %arrayidx1277.i, align 4, !dbg !982
  %xor1278.i = xor i32 %xor1273.i, %823, !dbg !982
  %824 = load i32, i32* %t.i, align 4, !dbg !982
  %shr1279.i = lshr i32 %824, 18, !dbg !982
  %and1280.i = and i32 %shr1279.i, 63, !dbg !982
  %idxprom1281.i = zext i32 %and1280.i to i64, !dbg !982
  %arrayidx1282.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1281.i, !dbg !982
  %825 = load i32, i32* %arrayidx1282.i, align 4, !dbg !982
  %xor1283.i = xor i32 %xor1278.i, %825, !dbg !982
  %826 = load i32, i32* %t.i, align 4, !dbg !982
  %shr1284.i = lshr i32 %826, 26, !dbg !982
  %idxprom1286.i = zext i32 %shr1284.i to i64, !dbg !982
  %arrayidx1287.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1286.i, !dbg !982
  %827 = load i32, i32* %arrayidx1287.i, align 4, !dbg !982
  %xor1288.i = xor i32 %xor1283.i, %827, !dbg !982
  %828 = load i32, i32* %l.i, align 4, !dbg !982
  %xor1289.i = xor i32 %828, %xor1288.i, !dbg !982
  store i32 %xor1289.i, i32* %l.i, align 4, !dbg !982
  %829 = load i32, i32* %l.i, align 4, !dbg !983
  %830 = load i32*, i32** %s.i, align 8, !dbg !983
  %arrayidx1290.i = getelementptr inbounds i32, i32* %830, i64 8, !dbg !983
  %831 = load i32, i32* %arrayidx1290.i, align 4, !dbg !983
  %xor1291.i = xor i32 %829, %831, !dbg !983
  store i32 %xor1291.i, i32* %u.i, align 4, !dbg !983
  %832 = load i32, i32* %l.i, align 4, !dbg !983
  %833 = load i32*, i32** %s.i, align 8, !dbg !983
  %arrayidx1292.i = getelementptr inbounds i32, i32* %833, i64 9, !dbg !983
  %834 = load i32, i32* %arrayidx1292.i, align 4, !dbg !983
  %xor1293.i = xor i32 %832, %834, !dbg !983
  store i32 %xor1293.i, i32* %t.i, align 4, !dbg !983
  %835 = load i32, i32* %t.i, align 4, !dbg !873
  %836 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %835) #7, !dbg !873, !srcloc !259
  store i32 %836, i32* %ret1294.i, align 4, !dbg !873
  %837 = load i32, i32* %ret1294.i, align 4, !dbg !873
  store i32 %837, i32* %tmp1295.i, align 4, !dbg !873
  %838 = load i32, i32* %tmp1295.i, align 4, !dbg !873
  store i32 %838, i32* %t.i, align 4, !dbg !983
  %839 = load i32, i32* %u.i, align 4, !dbg !983
  %shr1296.i = lshr i32 %839, 2, !dbg !983
  %and1297.i = and i32 %shr1296.i, 63, !dbg !983
  %idxprom1298.i = zext i32 %and1297.i to i64, !dbg !983
  %arrayidx1299.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1298.i, !dbg !983
  %840 = load i32, i32* %arrayidx1299.i, align 4, !dbg !983
  %841 = load i32, i32* %u.i, align 4, !dbg !983
  %shr1300.i = lshr i32 %841, 10, !dbg !983
  %and1301.i = and i32 %shr1300.i, 63, !dbg !983
  %idxprom1302.i = zext i32 %and1301.i to i64, !dbg !983
  %arrayidx1303.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1302.i, !dbg !983
  %842 = load i32, i32* %arrayidx1303.i, align 4, !dbg !983
  %xor1304.i = xor i32 %840, %842, !dbg !983
  %843 = load i32, i32* %u.i, align 4, !dbg !983
  %shr1305.i = lshr i32 %843, 18, !dbg !983
  %and1306.i = and i32 %shr1305.i, 63, !dbg !983
  %idxprom1307.i = zext i32 %and1306.i to i64, !dbg !983
  %arrayidx1308.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1307.i, !dbg !983
  %844 = load i32, i32* %arrayidx1308.i, align 4, !dbg !983
  %xor1309.i = xor i32 %xor1304.i, %844, !dbg !983
  %845 = load i32, i32* %u.i, align 4, !dbg !983
  %shr1310.i = lshr i32 %845, 26, !dbg !983
  %idxprom1312.i = zext i32 %shr1310.i to i64, !dbg !983
  %arrayidx1313.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1312.i, !dbg !983
  %846 = load i32, i32* %arrayidx1313.i, align 4, !dbg !983
  %xor1314.i = xor i32 %xor1309.i, %846, !dbg !983
  %847 = load i32, i32* %t.i, align 4, !dbg !983
  %shr1315.i = lshr i32 %847, 2, !dbg !983
  %and1316.i = and i32 %shr1315.i, 63, !dbg !983
  %idxprom1317.i = zext i32 %and1316.i to i64, !dbg !983
  %arrayidx1318.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1317.i, !dbg !983
  %848 = load i32, i32* %arrayidx1318.i, align 4, !dbg !983
  %xor1319.i = xor i32 %xor1314.i, %848, !dbg !983
  %849 = load i32, i32* %t.i, align 4, !dbg !983
  %shr1320.i = lshr i32 %849, 10, !dbg !983
  %and1321.i = and i32 %shr1320.i, 63, !dbg !983
  %idxprom1322.i = zext i32 %and1321.i to i64, !dbg !983
  %arrayidx1323.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1322.i, !dbg !983
  %850 = load i32, i32* %arrayidx1323.i, align 4, !dbg !983
  %xor1324.i = xor i32 %xor1319.i, %850, !dbg !983
  %851 = load i32, i32* %t.i, align 4, !dbg !983
  %shr1325.i = lshr i32 %851, 18, !dbg !983
  %and1326.i = and i32 %shr1325.i, 63, !dbg !983
  %idxprom1327.i = zext i32 %and1326.i to i64, !dbg !983
  %arrayidx1328.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1327.i, !dbg !983
  %852 = load i32, i32* %arrayidx1328.i, align 4, !dbg !983
  %xor1329.i = xor i32 %xor1324.i, %852, !dbg !983
  %853 = load i32, i32* %t.i, align 4, !dbg !983
  %shr1330.i = lshr i32 %853, 26, !dbg !983
  %idxprom1332.i = zext i32 %shr1330.i to i64, !dbg !983
  %arrayidx1333.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1332.i, !dbg !983
  %854 = load i32, i32* %arrayidx1333.i, align 4, !dbg !983
  %xor1334.i = xor i32 %xor1329.i, %854, !dbg !983
  %855 = load i32, i32* %r.i, align 4, !dbg !983
  %xor1335.i = xor i32 %855, %xor1334.i, !dbg !983
  store i32 %xor1335.i, i32* %r.i, align 4, !dbg !983
  %856 = load i32, i32* %r.i, align 4, !dbg !984
  %857 = load i32*, i32** %s.i, align 8, !dbg !984
  %arrayidx1336.i = getelementptr inbounds i32, i32* %857, i64 6, !dbg !984
  %858 = load i32, i32* %arrayidx1336.i, align 4, !dbg !984
  %xor1337.i = xor i32 %856, %858, !dbg !984
  store i32 %xor1337.i, i32* %u.i, align 4, !dbg !984
  %859 = load i32, i32* %r.i, align 4, !dbg !984
  %860 = load i32*, i32** %s.i, align 8, !dbg !984
  %arrayidx1338.i = getelementptr inbounds i32, i32* %860, i64 7, !dbg !984
  %861 = load i32, i32* %arrayidx1338.i, align 4, !dbg !984
  %xor1339.i = xor i32 %859, %861, !dbg !984
  store i32 %xor1339.i, i32* %t.i, align 4, !dbg !984
  %862 = load i32, i32* %t.i, align 4, !dbg !874
  %863 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %862) #7, !dbg !874, !srcloc !265
  store i32 %863, i32* %ret1340.i, align 4, !dbg !874
  %864 = load i32, i32* %ret1340.i, align 4, !dbg !874
  store i32 %864, i32* %tmp1341.i, align 4, !dbg !874
  %865 = load i32, i32* %tmp1341.i, align 4, !dbg !874
  store i32 %865, i32* %t.i, align 4, !dbg !984
  %866 = load i32, i32* %u.i, align 4, !dbg !984
  %shr1342.i = lshr i32 %866, 2, !dbg !984
  %and1343.i = and i32 %shr1342.i, 63, !dbg !984
  %idxprom1344.i = zext i32 %and1343.i to i64, !dbg !984
  %arrayidx1345.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1344.i, !dbg !984
  %867 = load i32, i32* %arrayidx1345.i, align 4, !dbg !984
  %868 = load i32, i32* %u.i, align 4, !dbg !984
  %shr1346.i = lshr i32 %868, 10, !dbg !984
  %and1347.i = and i32 %shr1346.i, 63, !dbg !984
  %idxprom1348.i = zext i32 %and1347.i to i64, !dbg !984
  %arrayidx1349.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1348.i, !dbg !984
  %869 = load i32, i32* %arrayidx1349.i, align 4, !dbg !984
  %xor1350.i = xor i32 %867, %869, !dbg !984
  %870 = load i32, i32* %u.i, align 4, !dbg !984
  %shr1351.i = lshr i32 %870, 18, !dbg !984
  %and1352.i = and i32 %shr1351.i, 63, !dbg !984
  %idxprom1353.i = zext i32 %and1352.i to i64, !dbg !984
  %arrayidx1354.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1353.i, !dbg !984
  %871 = load i32, i32* %arrayidx1354.i, align 4, !dbg !984
  %xor1355.i = xor i32 %xor1350.i, %871, !dbg !984
  %872 = load i32, i32* %u.i, align 4, !dbg !984
  %shr1356.i = lshr i32 %872, 26, !dbg !984
  %idxprom1358.i = zext i32 %shr1356.i to i64, !dbg !984
  %arrayidx1359.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1358.i, !dbg !984
  %873 = load i32, i32* %arrayidx1359.i, align 4, !dbg !984
  %xor1360.i = xor i32 %xor1355.i, %873, !dbg !984
  %874 = load i32, i32* %t.i, align 4, !dbg !984
  %shr1361.i = lshr i32 %874, 2, !dbg !984
  %and1362.i = and i32 %shr1361.i, 63, !dbg !984
  %idxprom1363.i = zext i32 %and1362.i to i64, !dbg !984
  %arrayidx1364.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1363.i, !dbg !984
  %875 = load i32, i32* %arrayidx1364.i, align 4, !dbg !984
  %xor1365.i = xor i32 %xor1360.i, %875, !dbg !984
  %876 = load i32, i32* %t.i, align 4, !dbg !984
  %shr1366.i = lshr i32 %876, 10, !dbg !984
  %and1367.i = and i32 %shr1366.i, 63, !dbg !984
  %idxprom1368.i = zext i32 %and1367.i to i64, !dbg !984
  %arrayidx1369.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1368.i, !dbg !984
  %877 = load i32, i32* %arrayidx1369.i, align 4, !dbg !984
  %xor1370.i = xor i32 %xor1365.i, %877, !dbg !984
  %878 = load i32, i32* %t.i, align 4, !dbg !984
  %shr1371.i = lshr i32 %878, 18, !dbg !984
  %and1372.i = and i32 %shr1371.i, 63, !dbg !984
  %idxprom1373.i = zext i32 %and1372.i to i64, !dbg !984
  %arrayidx1374.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1373.i, !dbg !984
  %879 = load i32, i32* %arrayidx1374.i, align 4, !dbg !984
  %xor1375.i = xor i32 %xor1370.i, %879, !dbg !984
  %880 = load i32, i32* %t.i, align 4, !dbg !984
  %shr1376.i = lshr i32 %880, 26, !dbg !984
  %idxprom1378.i = zext i32 %shr1376.i to i64, !dbg !984
  %arrayidx1379.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1378.i, !dbg !984
  %881 = load i32, i32* %arrayidx1379.i, align 4, !dbg !984
  %xor1380.i = xor i32 %xor1375.i, %881, !dbg !984
  %882 = load i32, i32* %l.i, align 4, !dbg !984
  %xor1381.i = xor i32 %882, %xor1380.i, !dbg !984
  store i32 %xor1381.i, i32* %l.i, align 4, !dbg !984
  %883 = load i32, i32* %l.i, align 4, !dbg !985
  %884 = load i32*, i32** %s.i, align 8, !dbg !985
  %arrayidx1382.i = getelementptr inbounds i32, i32* %884, i64 4, !dbg !985
  %885 = load i32, i32* %arrayidx1382.i, align 4, !dbg !985
  %xor1383.i = xor i32 %883, %885, !dbg !985
  store i32 %xor1383.i, i32* %u.i, align 4, !dbg !985
  %886 = load i32, i32* %l.i, align 4, !dbg !985
  %887 = load i32*, i32** %s.i, align 8, !dbg !985
  %arrayidx1384.i = getelementptr inbounds i32, i32* %887, i64 5, !dbg !985
  %888 = load i32, i32* %arrayidx1384.i, align 4, !dbg !985
  %xor1385.i = xor i32 %886, %888, !dbg !985
  store i32 %xor1385.i, i32* %t.i, align 4, !dbg !985
  %889 = load i32, i32* %t.i, align 4, !dbg !875
  %890 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %889) #7, !dbg !875, !srcloc !271
  store i32 %890, i32* %ret1386.i, align 4, !dbg !875
  %891 = load i32, i32* %ret1386.i, align 4, !dbg !875
  store i32 %891, i32* %tmp1387.i, align 4, !dbg !875
  %892 = load i32, i32* %tmp1387.i, align 4, !dbg !875
  store i32 %892, i32* %t.i, align 4, !dbg !985
  %893 = load i32, i32* %u.i, align 4, !dbg !985
  %shr1388.i = lshr i32 %893, 2, !dbg !985
  %and1389.i = and i32 %shr1388.i, 63, !dbg !985
  %idxprom1390.i = zext i32 %and1389.i to i64, !dbg !985
  %arrayidx1391.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1390.i, !dbg !985
  %894 = load i32, i32* %arrayidx1391.i, align 4, !dbg !985
  %895 = load i32, i32* %u.i, align 4, !dbg !985
  %shr1392.i = lshr i32 %895, 10, !dbg !985
  %and1393.i = and i32 %shr1392.i, 63, !dbg !985
  %idxprom1394.i = zext i32 %and1393.i to i64, !dbg !985
  %arrayidx1395.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1394.i, !dbg !985
  %896 = load i32, i32* %arrayidx1395.i, align 4, !dbg !985
  %xor1396.i = xor i32 %894, %896, !dbg !985
  %897 = load i32, i32* %u.i, align 4, !dbg !985
  %shr1397.i = lshr i32 %897, 18, !dbg !985
  %and1398.i = and i32 %shr1397.i, 63, !dbg !985
  %idxprom1399.i = zext i32 %and1398.i to i64, !dbg !985
  %arrayidx1400.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1399.i, !dbg !985
  %898 = load i32, i32* %arrayidx1400.i, align 4, !dbg !985
  %xor1401.i = xor i32 %xor1396.i, %898, !dbg !985
  %899 = load i32, i32* %u.i, align 4, !dbg !985
  %shr1402.i = lshr i32 %899, 26, !dbg !985
  %idxprom1404.i = zext i32 %shr1402.i to i64, !dbg !985
  %arrayidx1405.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1404.i, !dbg !985
  %900 = load i32, i32* %arrayidx1405.i, align 4, !dbg !985
  %xor1406.i = xor i32 %xor1401.i, %900, !dbg !985
  %901 = load i32, i32* %t.i, align 4, !dbg !985
  %shr1407.i = lshr i32 %901, 2, !dbg !985
  %and1408.i = and i32 %shr1407.i, 63, !dbg !985
  %idxprom1409.i = zext i32 %and1408.i to i64, !dbg !985
  %arrayidx1410.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1409.i, !dbg !985
  %902 = load i32, i32* %arrayidx1410.i, align 4, !dbg !985
  %xor1411.i = xor i32 %xor1406.i, %902, !dbg !985
  %903 = load i32, i32* %t.i, align 4, !dbg !985
  %shr1412.i = lshr i32 %903, 10, !dbg !985
  %and1413.i = and i32 %shr1412.i, 63, !dbg !985
  %idxprom1414.i = zext i32 %and1413.i to i64, !dbg !985
  %arrayidx1415.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1414.i, !dbg !985
  %904 = load i32, i32* %arrayidx1415.i, align 4, !dbg !985
  %xor1416.i = xor i32 %xor1411.i, %904, !dbg !985
  %905 = load i32, i32* %t.i, align 4, !dbg !985
  %shr1417.i = lshr i32 %905, 18, !dbg !985
  %and1418.i = and i32 %shr1417.i, 63, !dbg !985
  %idxprom1419.i = zext i32 %and1418.i to i64, !dbg !985
  %arrayidx1420.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1419.i, !dbg !985
  %906 = load i32, i32* %arrayidx1420.i, align 4, !dbg !985
  %xor1421.i = xor i32 %xor1416.i, %906, !dbg !985
  %907 = load i32, i32* %t.i, align 4, !dbg !985
  %shr1422.i = lshr i32 %907, 26, !dbg !985
  %idxprom1424.i = zext i32 %shr1422.i to i64, !dbg !985
  %arrayidx1425.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1424.i, !dbg !985
  %908 = load i32, i32* %arrayidx1425.i, align 4, !dbg !985
  %xor1426.i = xor i32 %xor1421.i, %908, !dbg !985
  %909 = load i32, i32* %r.i, align 4, !dbg !985
  %xor1427.i = xor i32 %909, %xor1426.i, !dbg !985
  store i32 %xor1427.i, i32* %r.i, align 4, !dbg !985
  %910 = load i32, i32* %r.i, align 4, !dbg !986
  %911 = load i32*, i32** %s.i, align 8, !dbg !986
  %arrayidx1428.i = getelementptr inbounds i32, i32* %911, i64 2, !dbg !986
  %912 = load i32, i32* %arrayidx1428.i, align 4, !dbg !986
  %xor1429.i = xor i32 %910, %912, !dbg !986
  store i32 %xor1429.i, i32* %u.i, align 4, !dbg !986
  %913 = load i32, i32* %r.i, align 4, !dbg !986
  %914 = load i32*, i32** %s.i, align 8, !dbg !986
  %arrayidx1430.i = getelementptr inbounds i32, i32* %914, i64 3, !dbg !986
  %915 = load i32, i32* %arrayidx1430.i, align 4, !dbg !986
  %xor1431.i = xor i32 %913, %915, !dbg !986
  store i32 %xor1431.i, i32* %t.i, align 4, !dbg !986
  %916 = load i32, i32* %t.i, align 4, !dbg !876
  %917 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %916) #7, !dbg !876, !srcloc !277
  store i32 %917, i32* %ret1432.i, align 4, !dbg !876
  %918 = load i32, i32* %ret1432.i, align 4, !dbg !876
  store i32 %918, i32* %tmp1433.i, align 4, !dbg !876
  %919 = load i32, i32* %tmp1433.i, align 4, !dbg !876
  store i32 %919, i32* %t.i, align 4, !dbg !986
  %920 = load i32, i32* %u.i, align 4, !dbg !986
  %shr1434.i = lshr i32 %920, 2, !dbg !986
  %and1435.i = and i32 %shr1434.i, 63, !dbg !986
  %idxprom1436.i = zext i32 %and1435.i to i64, !dbg !986
  %arrayidx1437.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1436.i, !dbg !986
  %921 = load i32, i32* %arrayidx1437.i, align 4, !dbg !986
  %922 = load i32, i32* %u.i, align 4, !dbg !986
  %shr1438.i = lshr i32 %922, 10, !dbg !986
  %and1439.i = and i32 %shr1438.i, 63, !dbg !986
  %idxprom1440.i = zext i32 %and1439.i to i64, !dbg !986
  %arrayidx1441.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1440.i, !dbg !986
  %923 = load i32, i32* %arrayidx1441.i, align 4, !dbg !986
  %xor1442.i = xor i32 %921, %923, !dbg !986
  %924 = load i32, i32* %u.i, align 4, !dbg !986
  %shr1443.i = lshr i32 %924, 18, !dbg !986
  %and1444.i = and i32 %shr1443.i, 63, !dbg !986
  %idxprom1445.i = zext i32 %and1444.i to i64, !dbg !986
  %arrayidx1446.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1445.i, !dbg !986
  %925 = load i32, i32* %arrayidx1446.i, align 4, !dbg !986
  %xor1447.i = xor i32 %xor1442.i, %925, !dbg !986
  %926 = load i32, i32* %u.i, align 4, !dbg !986
  %shr1448.i = lshr i32 %926, 26, !dbg !986
  %idxprom1450.i = zext i32 %shr1448.i to i64, !dbg !986
  %arrayidx1451.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1450.i, !dbg !986
  %927 = load i32, i32* %arrayidx1451.i, align 4, !dbg !986
  %xor1452.i = xor i32 %xor1447.i, %927, !dbg !986
  %928 = load i32, i32* %t.i, align 4, !dbg !986
  %shr1453.i = lshr i32 %928, 2, !dbg !986
  %and1454.i = and i32 %shr1453.i, 63, !dbg !986
  %idxprom1455.i = zext i32 %and1454.i to i64, !dbg !986
  %arrayidx1456.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1455.i, !dbg !986
  %929 = load i32, i32* %arrayidx1456.i, align 4, !dbg !986
  %xor1457.i = xor i32 %xor1452.i, %929, !dbg !986
  %930 = load i32, i32* %t.i, align 4, !dbg !986
  %shr1458.i = lshr i32 %930, 10, !dbg !986
  %and1459.i = and i32 %shr1458.i, 63, !dbg !986
  %idxprom1460.i = zext i32 %and1459.i to i64, !dbg !986
  %arrayidx1461.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1460.i, !dbg !986
  %931 = load i32, i32* %arrayidx1461.i, align 4, !dbg !986
  %xor1462.i = xor i32 %xor1457.i, %931, !dbg !986
  %932 = load i32, i32* %t.i, align 4, !dbg !986
  %shr1463.i = lshr i32 %932, 18, !dbg !986
  %and1464.i = and i32 %shr1463.i, 63, !dbg !986
  %idxprom1465.i = zext i32 %and1464.i to i64, !dbg !986
  %arrayidx1466.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1465.i, !dbg !986
  %933 = load i32, i32* %arrayidx1466.i, align 4, !dbg !986
  %xor1467.i = xor i32 %xor1462.i, %933, !dbg !986
  %934 = load i32, i32* %t.i, align 4, !dbg !986
  %shr1468.i = lshr i32 %934, 26, !dbg !986
  %idxprom1470.i = zext i32 %shr1468.i to i64, !dbg !986
  %arrayidx1471.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1470.i, !dbg !986
  %935 = load i32, i32* %arrayidx1471.i, align 4, !dbg !986
  %xor1472.i = xor i32 %xor1467.i, %935, !dbg !986
  %936 = load i32, i32* %l.i, align 4, !dbg !986
  %xor1473.i = xor i32 %936, %xor1472.i, !dbg !986
  store i32 %xor1473.i, i32* %l.i, align 4, !dbg !986
  %937 = load i32, i32* %l.i, align 4, !dbg !987
  %938 = load i32*, i32** %s.i, align 8, !dbg !987
  %939 = load i32, i32* %938, align 4, !dbg !987
  %xor1475.i = xor i32 %937, %939, !dbg !987
  store i32 %xor1475.i, i32* %u.i, align 4, !dbg !987
  %940 = load i32, i32* %l.i, align 4, !dbg !987
  %941 = load i32*, i32** %s.i, align 8, !dbg !987
  %arrayidx1476.i = getelementptr inbounds i32, i32* %941, i64 1, !dbg !987
  %942 = load i32, i32* %arrayidx1476.i, align 4, !dbg !987
  %xor1477.i = xor i32 %940, %942, !dbg !987
  store i32 %xor1477.i, i32* %t.i, align 4, !dbg !987
  %943 = load i32, i32* %t.i, align 4, !dbg !877
  %944 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %943) #7, !dbg !877, !srcloc !283
  store i32 %944, i32* %ret1478.i, align 4, !dbg !877
  %945 = load i32, i32* %ret1478.i, align 4, !dbg !877
  store i32 %945, i32* %tmp1479.i, align 4, !dbg !877
  %946 = load i32, i32* %tmp1479.i, align 4, !dbg !877
  store i32 %946, i32* %t.i, align 4, !dbg !987
  %947 = load i32, i32* %u.i, align 4, !dbg !987
  %shr1480.i = lshr i32 %947, 2, !dbg !987
  %and1481.i = and i32 %shr1480.i, 63, !dbg !987
  %idxprom1482.i = zext i32 %and1481.i to i64, !dbg !987
  %arrayidx1483.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1482.i, !dbg !987
  %948 = load i32, i32* %arrayidx1483.i, align 4, !dbg !987
  %949 = load i32, i32* %u.i, align 4, !dbg !987
  %shr1484.i = lshr i32 %949, 10, !dbg !987
  %and1485.i = and i32 %shr1484.i, 63, !dbg !987
  %idxprom1486.i = zext i32 %and1485.i to i64, !dbg !987
  %arrayidx1487.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1486.i, !dbg !987
  %950 = load i32, i32* %arrayidx1487.i, align 4, !dbg !987
  %xor1488.i = xor i32 %948, %950, !dbg !987
  %951 = load i32, i32* %u.i, align 4, !dbg !987
  %shr1489.i = lshr i32 %951, 18, !dbg !987
  %and1490.i = and i32 %shr1489.i, 63, !dbg !987
  %idxprom1491.i = zext i32 %and1490.i to i64, !dbg !987
  %arrayidx1492.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1491.i, !dbg !987
  %952 = load i32, i32* %arrayidx1492.i, align 4, !dbg !987
  %xor1493.i = xor i32 %xor1488.i, %952, !dbg !987
  %953 = load i32, i32* %u.i, align 4, !dbg !987
  %shr1494.i = lshr i32 %953, 26, !dbg !987
  %idxprom1496.i = zext i32 %shr1494.i to i64, !dbg !987
  %arrayidx1497.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1496.i, !dbg !987
  %954 = load i32, i32* %arrayidx1497.i, align 4, !dbg !987
  %xor1498.i = xor i32 %xor1493.i, %954, !dbg !987
  %955 = load i32, i32* %t.i, align 4, !dbg !987
  %shr1499.i = lshr i32 %955, 2, !dbg !987
  %and1500.i = and i32 %shr1499.i, 63, !dbg !987
  %idxprom1501.i = zext i32 %and1500.i to i64, !dbg !987
  %arrayidx1502.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1501.i, !dbg !987
  %956 = load i32, i32* %arrayidx1502.i, align 4, !dbg !987
  %xor1503.i = xor i32 %xor1498.i, %956, !dbg !987
  %957 = load i32, i32* %t.i, align 4, !dbg !987
  %shr1504.i = lshr i32 %957, 10, !dbg !987
  %and1505.i = and i32 %shr1504.i, 63, !dbg !987
  %idxprom1506.i = zext i32 %and1505.i to i64, !dbg !987
  %arrayidx1507.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1506.i, !dbg !987
  %958 = load i32, i32* %arrayidx1507.i, align 4, !dbg !987
  %xor1508.i = xor i32 %xor1503.i, %958, !dbg !987
  %959 = load i32, i32* %t.i, align 4, !dbg !987
  %shr1509.i = lshr i32 %959, 18, !dbg !987
  %and1510.i = and i32 %shr1509.i, 63, !dbg !987
  %idxprom1511.i = zext i32 %and1510.i to i64, !dbg !987
  %arrayidx1512.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1511.i, !dbg !987
  %960 = load i32, i32* %arrayidx1512.i, align 4, !dbg !987
  %xor1513.i = xor i32 %xor1508.i, %960, !dbg !987
  %961 = load i32, i32* %t.i, align 4, !dbg !987
  %shr1514.i = lshr i32 %961, 26, !dbg !987
  %idxprom1516.i = zext i32 %shr1514.i to i64, !dbg !987
  %arrayidx1517.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1516.i, !dbg !987
  %962 = load i32, i32* %arrayidx1517.i, align 4, !dbg !987
  %xor1518.i = xor i32 %xor1513.i, %962, !dbg !987
  %963 = load i32, i32* %r.i, align 4, !dbg !987
  %xor1519.i = xor i32 %963, %xor1518.i, !dbg !987
  store i32 %xor1519.i, i32* %r.i, align 4, !dbg !987
  br label %DES_encrypt1.exit

DES_encrypt1.exit:                                ; preds = %if.then.i, %if.else.i
  %964 = load i32, i32* %l.i, align 4, !dbg !878
  %965 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %964) #7, !dbg !878, !srcloc !287
  store i32 %965, i32* %ret1520.i, align 4, !dbg !878
  %966 = load i32, i32* %ret1520.i, align 4, !dbg !878
  store i32 %966, i32* %tmp1521.i, align 4, !dbg !878
  %967 = load i32, i32* %tmp1521.i, align 4, !dbg !878
  %conv1522.i = zext i32 %967 to i64, !dbg !988
  %and1523.i = and i64 %conv1522.i, 4294967295, !dbg !989
  %conv1524.i = trunc i64 %and1523.i to i32, !dbg !988
  store i32 %conv1524.i, i32* %l.i, align 4, !dbg !990
  %968 = load i32, i32* %r.i, align 4, !dbg !879
  %969 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %968) #7, !dbg !879, !srcloc !294
  store i32 %969, i32* %ret1525.i, align 4, !dbg !879
  %970 = load i32, i32* %ret1525.i, align 4, !dbg !879
  store i32 %970, i32* %tmp1526.i, align 4, !dbg !879
  %971 = load i32, i32* %tmp1526.i, align 4, !dbg !879
  %conv1527.i = zext i32 %971 to i64, !dbg !991
  %and1528.i = and i64 %conv1527.i, 4294967295, !dbg !992
  %conv1529.i = trunc i64 %and1528.i to i32, !dbg !991
  store i32 %conv1529.i, i32* %r.i, align 4, !dbg !993
  %972 = load i32, i32* %r.i, align 4, !dbg !880
  %shr1531.i = lshr i32 %972, 1, !dbg !880
  %973 = load i32, i32* %l.i, align 4, !dbg !880
  %xor1532.i = xor i32 %shr1531.i, %973, !dbg !880
  %conv1533.i = zext i32 %xor1532.i to i64, !dbg !880
  %and1534.i = and i64 %conv1533.i, 1431655765, !dbg !880
  %conv1535.i = trunc i64 %and1534.i to i32, !dbg !880
  store i32 %conv1535.i, i32* %tt1530.i, align 4, !dbg !880
  %974 = load i32, i32* %tt1530.i, align 4, !dbg !880
  %975 = load i32, i32* %l.i, align 4, !dbg !880
  %xor1536.i = xor i32 %975, %974, !dbg !880
  store i32 %xor1536.i, i32* %l.i, align 4, !dbg !880
  %976 = load i32, i32* %tt1530.i, align 4, !dbg !880
  %shl1537.i = shl i32 %976, 1, !dbg !880
  %977 = load i32, i32* %r.i, align 4, !dbg !880
  %xor1538.i = xor i32 %977, %shl1537.i, !dbg !880
  store i32 %xor1538.i, i32* %r.i, align 4, !dbg !880
  %978 = load i32, i32* %l.i, align 4, !dbg !880
  %shr1539.i = lshr i32 %978, 8, !dbg !880
  %979 = load i32, i32* %r.i, align 4, !dbg !880
  %xor1540.i = xor i32 %shr1539.i, %979, !dbg !880
  %conv1541.i = zext i32 %xor1540.i to i64, !dbg !880
  %and1542.i = and i64 %conv1541.i, 16711935, !dbg !880
  %conv1543.i = trunc i64 %and1542.i to i32, !dbg !880
  store i32 %conv1543.i, i32* %tt1530.i, align 4, !dbg !880
  %980 = load i32, i32* %tt1530.i, align 4, !dbg !880
  %981 = load i32, i32* %r.i, align 4, !dbg !880
  %xor1544.i = xor i32 %981, %980, !dbg !880
  store i32 %xor1544.i, i32* %r.i, align 4, !dbg !880
  %982 = load i32, i32* %tt1530.i, align 4, !dbg !880
  %shl1545.i = shl i32 %982, 8, !dbg !880
  %983 = load i32, i32* %l.i, align 4, !dbg !880
  %xor1546.i = xor i32 %983, %shl1545.i, !dbg !880
  store i32 %xor1546.i, i32* %l.i, align 4, !dbg !880
  %984 = load i32, i32* %r.i, align 4, !dbg !880
  %shr1547.i = lshr i32 %984, 2, !dbg !880
  %985 = load i32, i32* %l.i, align 4, !dbg !880
  %xor1548.i = xor i32 %shr1547.i, %985, !dbg !880
  %conv1549.i = zext i32 %xor1548.i to i64, !dbg !880
  %and1550.i = and i64 %conv1549.i, 858993459, !dbg !880
  %conv1551.i = trunc i64 %and1550.i to i32, !dbg !880
  store i32 %conv1551.i, i32* %tt1530.i, align 4, !dbg !880
  %986 = load i32, i32* %tt1530.i, align 4, !dbg !880
  %987 = load i32, i32* %l.i, align 4, !dbg !880
  %xor1552.i = xor i32 %987, %986, !dbg !880
  store i32 %xor1552.i, i32* %l.i, align 4, !dbg !880
  %988 = load i32, i32* %tt1530.i, align 4, !dbg !880
  %shl1553.i = shl i32 %988, 2, !dbg !880
  %989 = load i32, i32* %r.i, align 4, !dbg !880
  %xor1554.i = xor i32 %989, %shl1553.i, !dbg !880
  store i32 %xor1554.i, i32* %r.i, align 4, !dbg !880
  %990 = load i32, i32* %l.i, align 4, !dbg !880
  %shr1555.i = lshr i32 %990, 16, !dbg !880
  %991 = load i32, i32* %r.i, align 4, !dbg !880
  %xor1556.i = xor i32 %shr1555.i, %991, !dbg !880
  %conv1557.i = zext i32 %xor1556.i to i64, !dbg !880
  %and1558.i = and i64 %conv1557.i, 65535, !dbg !880
  %conv1559.i = trunc i64 %and1558.i to i32, !dbg !880
  store i32 %conv1559.i, i32* %tt1530.i, align 4, !dbg !880
  %992 = load i32, i32* %tt1530.i, align 4, !dbg !880
  %993 = load i32, i32* %r.i, align 4, !dbg !880
  %xor1560.i = xor i32 %993, %992, !dbg !880
  store i32 %xor1560.i, i32* %r.i, align 4, !dbg !880
  %994 = load i32, i32* %tt1530.i, align 4, !dbg !880
  %shl1561.i = shl i32 %994, 16, !dbg !880
  %995 = load i32, i32* %l.i, align 4, !dbg !880
  %xor1562.i = xor i32 %995, %shl1561.i, !dbg !880
  store i32 %xor1562.i, i32* %l.i, align 4, !dbg !880
  %996 = load i32, i32* %r.i, align 4, !dbg !880
  %shr1563.i = lshr i32 %996, 4, !dbg !880
  %997 = load i32, i32* %l.i, align 4, !dbg !880
  %xor1564.i = xor i32 %shr1563.i, %997, !dbg !880
  %conv1565.i = zext i32 %xor1564.i to i64, !dbg !880
  %and1566.i = and i64 %conv1565.i, 252645135, !dbg !880
  %conv1567.i = trunc i64 %and1566.i to i32, !dbg !880
  store i32 %conv1567.i, i32* %tt1530.i, align 4, !dbg !880
  %998 = load i32, i32* %tt1530.i, align 4, !dbg !880
  %999 = load i32, i32* %l.i, align 4, !dbg !880
  %xor1568.i = xor i32 %999, %998, !dbg !880
  store i32 %xor1568.i, i32* %l.i, align 4, !dbg !880
  %1000 = load i32, i32* %tt1530.i, align 4, !dbg !880
  %shl1569.i = shl i32 %1000, 4, !dbg !880
  %1001 = load i32, i32* %r.i, align 4, !dbg !880
  %xor1570.i = xor i32 %1001, %shl1569.i, !dbg !880
  store i32 %xor1570.i, i32* %r.i, align 4, !dbg !880
  %1002 = load i32, i32* %l.i, align 4, !dbg !994
  %1003 = load i32*, i32** %data.addr.i, align 8, !dbg !995
  store i32 %1002, i32* %1003, align 4, !dbg !996
  %1004 = load i32, i32* %r.i, align 4, !dbg !997
  %1005 = load i32*, i32** %data.addr.i, align 8, !dbg !998
  %arrayidx1572.i = getelementptr inbounds i32, i32* %1005, i64 1, !dbg !998
  store i32 %1004, i32* %arrayidx1572.i, align 4, !dbg !999
  store i32 0, i32* %u.i, align 4, !dbg !1000
  store i32 0, i32* %t.i, align 4, !dbg !1001
  store i32 0, i32* %r.i, align 4, !dbg !1002
  store i32 0, i32* %l.i, align 4, !dbg !1003
  %arrayidx57 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1004
  %1006 = load i32, i32* %arrayidx57, align 4, !dbg !1004
  store i32 %1006, i32* %tout0, align 4, !dbg !1005
  %1007 = load i32, i32* %tout0, align 4, !dbg !1006
  %and = and i32 %1007, 255, !dbg !1006
  %conv58 = trunc i32 %and to i8, !dbg !1006
  %1008 = load i8*, i8** %out.addr, align 8, !dbg !1006
  %incdec.ptr59 = getelementptr inbounds i8, i8* %1008, i32 1, !dbg !1006
  store i8* %incdec.ptr59, i8** %out.addr, align 8, !dbg !1006
  store i8 %conv58, i8* %1008, align 1, !dbg !1006
  %1009 = load i32, i32* %tout0, align 4, !dbg !1006
  %shr = lshr i32 %1009, 8, !dbg !1006
  %and60 = and i32 %shr, 255, !dbg !1006
  %conv61 = trunc i32 %and60 to i8, !dbg !1006
  %1010 = load i8*, i8** %out.addr, align 8, !dbg !1006
  %incdec.ptr62 = getelementptr inbounds i8, i8* %1010, i32 1, !dbg !1006
  store i8* %incdec.ptr62, i8** %out.addr, align 8, !dbg !1006
  store i8 %conv61, i8* %1010, align 1, !dbg !1006
  %1011 = load i32, i32* %tout0, align 4, !dbg !1006
  %shr63 = lshr i32 %1011, 16, !dbg !1006
  %and64 = and i32 %shr63, 255, !dbg !1006
  %conv65 = trunc i32 %and64 to i8, !dbg !1006
  %1012 = load i8*, i8** %out.addr, align 8, !dbg !1006
  %incdec.ptr66 = getelementptr inbounds i8, i8* %1012, i32 1, !dbg !1006
  store i8* %incdec.ptr66, i8** %out.addr, align 8, !dbg !1006
  store i8 %conv65, i8* %1012, align 1, !dbg !1006
  %1013 = load i32, i32* %tout0, align 4, !dbg !1006
  %shr67 = lshr i32 %1013, 24, !dbg !1006
  %and68 = and i32 %shr67, 255, !dbg !1006
  %conv69 = trunc i32 %and68 to i8, !dbg !1006
  %1014 = load i8*, i8** %out.addr, align 8, !dbg !1006
  %incdec.ptr70 = getelementptr inbounds i8, i8* %1014, i32 1, !dbg !1006
  store i8* %incdec.ptr70, i8** %out.addr, align 8, !dbg !1006
  store i8 %conv69, i8* %1014, align 1, !dbg !1006
  %arrayidx71 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1007
  %1015 = load i32, i32* %arrayidx71, align 4, !dbg !1007
  store i32 %1015, i32* %tout1, align 4, !dbg !1008
  %1016 = load i32, i32* %tout1, align 4, !dbg !1009
  %and72 = and i32 %1016, 255, !dbg !1009
  %conv73 = trunc i32 %and72 to i8, !dbg !1009
  %1017 = load i8*, i8** %out.addr, align 8, !dbg !1009
  %incdec.ptr74 = getelementptr inbounds i8, i8* %1017, i32 1, !dbg !1009
  store i8* %incdec.ptr74, i8** %out.addr, align 8, !dbg !1009
  store i8 %conv73, i8* %1017, align 1, !dbg !1009
  %1018 = load i32, i32* %tout1, align 4, !dbg !1009
  %shr75 = lshr i32 %1018, 8, !dbg !1009
  %and76 = and i32 %shr75, 255, !dbg !1009
  %conv77 = trunc i32 %and76 to i8, !dbg !1009
  %1019 = load i8*, i8** %out.addr, align 8, !dbg !1009
  %incdec.ptr78 = getelementptr inbounds i8, i8* %1019, i32 1, !dbg !1009
  store i8* %incdec.ptr78, i8** %out.addr, align 8, !dbg !1009
  store i8 %conv77, i8* %1019, align 1, !dbg !1009
  %1020 = load i32, i32* %tout1, align 4, !dbg !1009
  %shr79 = lshr i32 %1020, 16, !dbg !1009
  %and80 = and i32 %shr79, 255, !dbg !1009
  %conv81 = trunc i32 %and80 to i8, !dbg !1009
  %1021 = load i8*, i8** %out.addr, align 8, !dbg !1009
  %incdec.ptr82 = getelementptr inbounds i8, i8* %1021, i32 1, !dbg !1009
  store i8* %incdec.ptr82, i8** %out.addr, align 8, !dbg !1009
  store i8 %conv81, i8* %1021, align 1, !dbg !1009
  %1022 = load i32, i32* %tout1, align 4, !dbg !1009
  %shr83 = lshr i32 %1022, 24, !dbg !1009
  %and84 = and i32 %shr83, 255, !dbg !1009
  %conv85 = trunc i32 %and84 to i8, !dbg !1009
  %1023 = load i8*, i8** %out.addr, align 8, !dbg !1009
  %incdec.ptr86 = getelementptr inbounds i8, i8* %1023, i32 1, !dbg !1009
  store i8* %incdec.ptr86, i8** %out.addr, align 8, !dbg !1009
  store i8 %conv85, i8* %1023, align 1, !dbg !1009
  br label %for.inc, !dbg !1010

for.inc:                                          ; preds = %DES_encrypt1.exit
  %1024 = load i64, i64* %l, align 8, !dbg !1011
  %sub87 = sub nsw i64 %1024, 8, !dbg !1011
  store i64 %sub87, i64* %l, align 8, !dbg !1011
  br label %for.cond, !dbg !1012, !llvm.loop !1013

for.end:                                          ; preds = %for.cond
  %1025 = load i64, i64* %l, align 8, !dbg !1015
  %cmp88 = icmp ne i64 %1025, -8, !dbg !1016
  br i1 %cmp88, label %if.then90, label %if.end, !dbg !1017

if.then90:                                        ; preds = %for.end
  %1026 = load i64, i64* %l, align 8, !dbg !1018
  %add = add nsw i64 %1026, 8, !dbg !1018
  %1027 = load i8*, i8** %in.addr, align 8, !dbg !1018
  %add.ptr = getelementptr inbounds i8, i8* %1027, i64 %add, !dbg !1018
  store i8* %add.ptr, i8** %in.addr, align 8, !dbg !1018
  store i32 0, i32* %tin1, align 4, !dbg !1018
  store i32 0, i32* %tin0, align 4, !dbg !1018
  %1028 = load i64, i64* %l, align 8, !dbg !1018
  %add91 = add nsw i64 %1028, 8, !dbg !1018
  switch i64 %add91, label %sw.epilog [
    i64 8, label %sw.bb
    i64 7, label %sw.bb95
    i64 6, label %sw.bb100
    i64 5, label %sw.bb105
    i64 4, label %sw.bb109
    i64 3, label %sw.bb113
    i64 2, label %sw.bb118
    i64 1, label %sw.bb123
  ], !dbg !1018

sw.bb:                                            ; preds = %if.then90
  %1029 = load i8*, i8** %in.addr, align 8, !dbg !1020
  %incdec.ptr92 = getelementptr inbounds i8, i8* %1029, i32 -1, !dbg !1020
  store i8* %incdec.ptr92, i8** %in.addr, align 8, !dbg !1020
  %1030 = load i8, i8* %incdec.ptr92, align 1, !dbg !1020
  %conv93 = zext i8 %1030 to i32, !dbg !1020
  %shl94 = shl i32 %conv93, 24, !dbg !1020
  store i32 %shl94, i32* %tin1, align 4, !dbg !1020
  br label %sw.bb95, !dbg !1020

sw.bb95:                                          ; preds = %if.then90, %sw.bb
  %1031 = load i8*, i8** %in.addr, align 8, !dbg !1020
  %incdec.ptr96 = getelementptr inbounds i8, i8* %1031, i32 -1, !dbg !1020
  store i8* %incdec.ptr96, i8** %in.addr, align 8, !dbg !1020
  %1032 = load i8, i8* %incdec.ptr96, align 1, !dbg !1020
  %conv97 = zext i8 %1032 to i32, !dbg !1020
  %shl98 = shl i32 %conv97, 16, !dbg !1020
  %1033 = load i32, i32* %tin1, align 4, !dbg !1020
  %or99 = or i32 %1033, %shl98, !dbg !1020
  store i32 %or99, i32* %tin1, align 4, !dbg !1020
  br label %sw.bb100, !dbg !1020

sw.bb100:                                         ; preds = %if.then90, %sw.bb95
  %1034 = load i8*, i8** %in.addr, align 8, !dbg !1020
  %incdec.ptr101 = getelementptr inbounds i8, i8* %1034, i32 -1, !dbg !1020
  store i8* %incdec.ptr101, i8** %in.addr, align 8, !dbg !1020
  %1035 = load i8, i8* %incdec.ptr101, align 1, !dbg !1020
  %conv102 = zext i8 %1035 to i32, !dbg !1020
  %shl103 = shl i32 %conv102, 8, !dbg !1020
  %1036 = load i32, i32* %tin1, align 4, !dbg !1020
  %or104 = or i32 %1036, %shl103, !dbg !1020
  store i32 %or104, i32* %tin1, align 4, !dbg !1020
  br label %sw.bb105, !dbg !1020

sw.bb105:                                         ; preds = %if.then90, %sw.bb100
  %1037 = load i8*, i8** %in.addr, align 8, !dbg !1020
  %incdec.ptr106 = getelementptr inbounds i8, i8* %1037, i32 -1, !dbg !1020
  store i8* %incdec.ptr106, i8** %in.addr, align 8, !dbg !1020
  %1038 = load i8, i8* %incdec.ptr106, align 1, !dbg !1020
  %conv107 = zext i8 %1038 to i32, !dbg !1020
  %1039 = load i32, i32* %tin1, align 4, !dbg !1020
  %or108 = or i32 %1039, %conv107, !dbg !1020
  store i32 %or108, i32* %tin1, align 4, !dbg !1020
  br label %sw.bb109, !dbg !1020

sw.bb109:                                         ; preds = %if.then90, %sw.bb105
  %1040 = load i8*, i8** %in.addr, align 8, !dbg !1020
  %incdec.ptr110 = getelementptr inbounds i8, i8* %1040, i32 -1, !dbg !1020
  store i8* %incdec.ptr110, i8** %in.addr, align 8, !dbg !1020
  %1041 = load i8, i8* %incdec.ptr110, align 1, !dbg !1020
  %conv111 = zext i8 %1041 to i32, !dbg !1020
  %shl112 = shl i32 %conv111, 24, !dbg !1020
  store i32 %shl112, i32* %tin0, align 4, !dbg !1020
  br label %sw.bb113, !dbg !1020

sw.bb113:                                         ; preds = %if.then90, %sw.bb109
  %1042 = load i8*, i8** %in.addr, align 8, !dbg !1020
  %incdec.ptr114 = getelementptr inbounds i8, i8* %1042, i32 -1, !dbg !1020
  store i8* %incdec.ptr114, i8** %in.addr, align 8, !dbg !1020
  %1043 = load i8, i8* %incdec.ptr114, align 1, !dbg !1020
  %conv115 = zext i8 %1043 to i32, !dbg !1020
  %shl116 = shl i32 %conv115, 16, !dbg !1020
  %1044 = load i32, i32* %tin0, align 4, !dbg !1020
  %or117 = or i32 %1044, %shl116, !dbg !1020
  store i32 %or117, i32* %tin0, align 4, !dbg !1020
  br label %sw.bb118, !dbg !1020

sw.bb118:                                         ; preds = %if.then90, %sw.bb113
  %1045 = load i8*, i8** %in.addr, align 8, !dbg !1020
  %incdec.ptr119 = getelementptr inbounds i8, i8* %1045, i32 -1, !dbg !1020
  store i8* %incdec.ptr119, i8** %in.addr, align 8, !dbg !1020
  %1046 = load i8, i8* %incdec.ptr119, align 1, !dbg !1020
  %conv120 = zext i8 %1046 to i32, !dbg !1020
  %shl121 = shl i32 %conv120, 8, !dbg !1020
  %1047 = load i32, i32* %tin0, align 4, !dbg !1020
  %or122 = or i32 %1047, %shl121, !dbg !1020
  store i32 %or122, i32* %tin0, align 4, !dbg !1020
  br label %sw.bb123, !dbg !1020

sw.bb123:                                         ; preds = %if.then90, %sw.bb118
  %1048 = load i8*, i8** %in.addr, align 8, !dbg !1020
  %incdec.ptr124 = getelementptr inbounds i8, i8* %1048, i32 -1, !dbg !1020
  store i8* %incdec.ptr124, i8** %in.addr, align 8, !dbg !1020
  %1049 = load i8, i8* %incdec.ptr124, align 1, !dbg !1020
  %conv125 = zext i8 %1049 to i32, !dbg !1020
  %1050 = load i32, i32* %tin0, align 4, !dbg !1020
  %or126 = or i32 %1050, %conv125, !dbg !1020
  store i32 %or126, i32* %tin0, align 4, !dbg !1020
  br label %sw.epilog, !dbg !1020

sw.epilog:                                        ; preds = %sw.bb123, %if.then90
  %1051 = load i32, i32* %tout0, align 4, !dbg !1022
  %1052 = load i32, i32* %tin0, align 4, !dbg !1023
  %xor127 = xor i32 %1052, %1051, !dbg !1023
  store i32 %xor127, i32* %tin0, align 4, !dbg !1023
  %1053 = load i32, i32* %tin0, align 4, !dbg !1024
  %arrayidx128 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1025
  store i32 %1053, i32* %arrayidx128, align 4, !dbg !1026
  %1054 = load i32, i32* %tout1, align 4, !dbg !1027
  %1055 = load i32, i32* %tin1, align 4, !dbg !1028
  %xor129 = xor i32 %1055, %1054, !dbg !1028
  store i32 %xor129, i32* %tin1, align 4, !dbg !1028
  %1056 = load i32, i32* %tin1, align 4, !dbg !1029
  %arrayidx130 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1030
  store i32 %1056, i32* %arrayidx130, align 4, !dbg !1031
  %arraydecay131 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1032
  %1057 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8, !dbg !1033
  store i32* %arraydecay131, i32** %data.addr.i411, align 8
  store %struct.DES_ks* %1057, %struct.DES_ks** %ks.addr.i412, align 8
  %ks.addr1.i493 = bitcast %struct.DES_ks** %ks.addr.i412 to i8*
  call void @llvm.var.annotation(i8* %ks.addr1.i493, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 14) #8
  store i32 1, i32* %enc.addr.i413, align 4
  %s2.i494 = bitcast i32** %s.i418 to i8*, !dbg !1034
  call void @llvm.var.annotation(i8* %s2.i494, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 17) #8, !dbg !1034
  %1058 = load i32*, i32** %data.addr.i411, align 8, !dbg !1035
  %1059 = load i32, i32* %1058, align 4, !dbg !1035
  store i32 %1059, i32* %r.i415, align 4, !dbg !1036
  %1060 = load i32*, i32** %data.addr.i411, align 8, !dbg !1037
  %arrayidx3.i495 = getelementptr inbounds i32, i32* %1060, i64 1, !dbg !1037
  %1061 = load i32, i32* %arrayidx3.i495, align 4, !dbg !1037
  store i32 %1061, i32* %l.i414, align 4, !dbg !1038
  %1062 = load i32, i32* %l.i414, align 4, !dbg !793
  %shr.i496 = lshr i32 %1062, 4, !dbg !793
  %1063 = load i32, i32* %r.i415, align 4, !dbg !793
  %xor.i497 = xor i32 %shr.i496, %1063, !dbg !793
  %conv.i498 = zext i32 %xor.i497 to i64, !dbg !793
  %and.i499 = and i64 %conv.i498, 252645135, !dbg !793
  %conv4.i500 = trunc i64 %and.i499 to i32, !dbg !793
  store i32 %conv4.i500, i32* %tt.i419, align 4, !dbg !793
  %1064 = load i32, i32* %tt.i419, align 4, !dbg !793
  %1065 = load i32, i32* %r.i415, align 4, !dbg !793
  %xor5.i501 = xor i32 %1065, %1064, !dbg !793
  store i32 %xor5.i501, i32* %r.i415, align 4, !dbg !793
  %1066 = load i32, i32* %tt.i419, align 4, !dbg !793
  %shl.i502 = shl i32 %1066, 4, !dbg !793
  %1067 = load i32, i32* %l.i414, align 4, !dbg !793
  %xor6.i503 = xor i32 %1067, %shl.i502, !dbg !793
  store i32 %xor6.i503, i32* %l.i414, align 4, !dbg !793
  %1068 = load i32, i32* %r.i415, align 4, !dbg !793
  %shr7.i504 = lshr i32 %1068, 16, !dbg !793
  %1069 = load i32, i32* %l.i414, align 4, !dbg !793
  %xor8.i505 = xor i32 %shr7.i504, %1069, !dbg !793
  %conv9.i506 = zext i32 %xor8.i505 to i64, !dbg !793
  %and10.i507 = and i64 %conv9.i506, 65535, !dbg !793
  %conv11.i508 = trunc i64 %and10.i507 to i32, !dbg !793
  store i32 %conv11.i508, i32* %tt.i419, align 4, !dbg !793
  %1070 = load i32, i32* %tt.i419, align 4, !dbg !793
  %1071 = load i32, i32* %l.i414, align 4, !dbg !793
  %xor12.i509 = xor i32 %1071, %1070, !dbg !793
  store i32 %xor12.i509, i32* %l.i414, align 4, !dbg !793
  %1072 = load i32, i32* %tt.i419, align 4, !dbg !793
  %shl13.i510 = shl i32 %1072, 16, !dbg !793
  %1073 = load i32, i32* %r.i415, align 4, !dbg !793
  %xor14.i511 = xor i32 %1073, %shl13.i510, !dbg !793
  store i32 %xor14.i511, i32* %r.i415, align 4, !dbg !793
  %1074 = load i32, i32* %l.i414, align 4, !dbg !793
  %shr15.i512 = lshr i32 %1074, 2, !dbg !793
  %1075 = load i32, i32* %r.i415, align 4, !dbg !793
  %xor16.i513 = xor i32 %shr15.i512, %1075, !dbg !793
  %conv17.i514 = zext i32 %xor16.i513 to i64, !dbg !793
  %and18.i515 = and i64 %conv17.i514, 858993459, !dbg !793
  %conv19.i516 = trunc i64 %and18.i515 to i32, !dbg !793
  store i32 %conv19.i516, i32* %tt.i419, align 4, !dbg !793
  %1076 = load i32, i32* %tt.i419, align 4, !dbg !793
  %1077 = load i32, i32* %r.i415, align 4, !dbg !793
  %xor20.i517 = xor i32 %1077, %1076, !dbg !793
  store i32 %xor20.i517, i32* %r.i415, align 4, !dbg !793
  %1078 = load i32, i32* %tt.i419, align 4, !dbg !793
  %shl21.i518 = shl i32 %1078, 2, !dbg !793
  %1079 = load i32, i32* %l.i414, align 4, !dbg !793
  %xor22.i519 = xor i32 %1079, %shl21.i518, !dbg !793
  store i32 %xor22.i519, i32* %l.i414, align 4, !dbg !793
  %1080 = load i32, i32* %r.i415, align 4, !dbg !793
  %shr23.i520 = lshr i32 %1080, 8, !dbg !793
  %1081 = load i32, i32* %l.i414, align 4, !dbg !793
  %xor24.i521 = xor i32 %shr23.i520, %1081, !dbg !793
  %conv25.i522 = zext i32 %xor24.i521 to i64, !dbg !793
  %and26.i523 = and i64 %conv25.i522, 16711935, !dbg !793
  %conv27.i524 = trunc i64 %and26.i523 to i32, !dbg !793
  store i32 %conv27.i524, i32* %tt.i419, align 4, !dbg !793
  %1082 = load i32, i32* %tt.i419, align 4, !dbg !793
  %1083 = load i32, i32* %l.i414, align 4, !dbg !793
  %xor28.i525 = xor i32 %1083, %1082, !dbg !793
  store i32 %xor28.i525, i32* %l.i414, align 4, !dbg !793
  %1084 = load i32, i32* %tt.i419, align 4, !dbg !793
  %shl29.i526 = shl i32 %1084, 8, !dbg !793
  %1085 = load i32, i32* %r.i415, align 4, !dbg !793
  %xor30.i527 = xor i32 %1085, %shl29.i526, !dbg !793
  store i32 %xor30.i527, i32* %r.i415, align 4, !dbg !793
  %1086 = load i32, i32* %l.i414, align 4, !dbg !793
  %shr31.i528 = lshr i32 %1086, 1, !dbg !793
  %1087 = load i32, i32* %r.i415, align 4, !dbg !793
  %xor32.i529 = xor i32 %shr31.i528, %1087, !dbg !793
  %conv33.i530 = zext i32 %xor32.i529 to i64, !dbg !793
  %and34.i531 = and i64 %conv33.i530, 1431655765, !dbg !793
  %conv35.i532 = trunc i64 %and34.i531 to i32, !dbg !793
  store i32 %conv35.i532, i32* %tt.i419, align 4, !dbg !793
  %1088 = load i32, i32* %tt.i419, align 4, !dbg !793
  %1089 = load i32, i32* %r.i415, align 4, !dbg !793
  %xor36.i533 = xor i32 %1089, %1088, !dbg !793
  store i32 %xor36.i533, i32* %r.i415, align 4, !dbg !793
  %1090 = load i32, i32* %tt.i419, align 4, !dbg !793
  %shl37.i534 = shl i32 %1090, 1, !dbg !793
  %1091 = load i32, i32* %l.i414, align 4, !dbg !793
  %xor38.i535 = xor i32 %1091, %shl37.i534, !dbg !793
  store i32 %xor38.i535, i32* %l.i414, align 4, !dbg !793
  %1092 = load i32, i32* %r.i415, align 4, !dbg !794
  %1093 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %1092) #7, !dbg !794, !srcloc !71
  store i32 %1093, i32* %ret.i420, align 4, !dbg !794
  %1094 = load i32, i32* %ret.i420, align 4, !dbg !794
  store i32 %1094, i32* %tmp.i421, align 4, !dbg !794
  %1095 = load i32, i32* %tmp.i421, align 4, !dbg !794
  %conv39.i536 = zext i32 %1095 to i64, !dbg !1039
  %and40.i537 = and i64 %conv39.i536, 4294967295, !dbg !1040
  %conv41.i538 = trunc i64 %and40.i537 to i32, !dbg !1039
  store i32 %conv41.i538, i32* %r.i415, align 4, !dbg !1041
  %1096 = load i32, i32* %l.i414, align 4, !dbg !795
  %1097 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %1096) #7, !dbg !795, !srcloc !78
  store i32 %1097, i32* %ret42.i422, align 4, !dbg !795
  %1098 = load i32, i32* %ret42.i422, align 4, !dbg !795
  store i32 %1098, i32* %tmp43.i423, align 4, !dbg !795
  %1099 = load i32, i32* %tmp43.i423, align 4, !dbg !795
  %conv44.i539 = zext i32 %1099 to i64, !dbg !1042
  %and45.i540 = and i64 %conv44.i539, 4294967295, !dbg !1043
  %conv46.i541 = trunc i64 %and45.i540 to i32, !dbg !1042
  store i32 %conv46.i541, i32* %l.i414, align 4, !dbg !1044
  %1100 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i412, align 8, !dbg !1045
  %ks47.i542 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %1100, i32 0, i32 0, !dbg !1046
  %arraydecay.i543 = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks47.i542, i64 0, i64 0, !dbg !1047
  %deslong.i544 = bitcast %union.anon* %arraydecay.i543 to [2 x i32]*, !dbg !1047
  %arraydecay48.i545 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i544, i64 0, i64 0, !dbg !1045
  store i32* %arraydecay48.i545, i32** %s.i418, align 8, !dbg !1048
  %1101 = load i32, i32* %enc.addr.i413, align 4, !dbg !1049
  %tobool.i546 = icmp ne i32 %1101, 0, !dbg !1049
  br i1 %tobool.i546, label %if.then.i1218, label %if.else.i1890, !dbg !1050

if.then.i1218:                                    ; preds = %sw.epilog
  %1102 = load i32, i32* %r.i415, align 4, !dbg !1051
  %1103 = load i32*, i32** %s.i418, align 8, !dbg !1051
  %1104 = load i32, i32* %1103, align 4, !dbg !1051
  %xor50.i547 = xor i32 %1102, %1104, !dbg !1051
  store i32 %xor50.i547, i32* %u.i417, align 4, !dbg !1051
  %1105 = load i32, i32* %r.i415, align 4, !dbg !1051
  %1106 = load i32*, i32** %s.i418, align 8, !dbg !1051
  %arrayidx51.i548 = getelementptr inbounds i32, i32* %1106, i64 1, !dbg !1051
  %1107 = load i32, i32* %arrayidx51.i548, align 4, !dbg !1051
  %xor52.i549 = xor i32 %1105, %1107, !dbg !1051
  store i32 %xor52.i549, i32* %t.i416, align 4, !dbg !1051
  %1108 = load i32, i32* %t.i416, align 4, !dbg !796
  %1109 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1108) #7, !dbg !796, !srcloc !95
  store i32 %1109, i32* %ret53.i424, align 4, !dbg !796
  %1110 = load i32, i32* %ret53.i424, align 4, !dbg !796
  store i32 %1110, i32* %tmp54.i425, align 4, !dbg !796
  %1111 = load i32, i32* %tmp54.i425, align 4, !dbg !796
  store i32 %1111, i32* %t.i416, align 4, !dbg !1051
  %1112 = load i32, i32* %u.i417, align 4, !dbg !1051
  %shr55.i550 = lshr i32 %1112, 2, !dbg !1051
  %and56.i551 = and i32 %shr55.i550, 63, !dbg !1051
  %idxprom.i552 = zext i32 %and56.i551 to i64, !dbg !1051
  %arrayidx57.i553 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i552, !dbg !1051
  %1113 = load i32, i32* %arrayidx57.i553, align 4, !dbg !1051
  %1114 = load i32, i32* %u.i417, align 4, !dbg !1051
  %shr58.i554 = lshr i32 %1114, 10, !dbg !1051
  %and59.i555 = and i32 %shr58.i554, 63, !dbg !1051
  %idxprom60.i556 = zext i32 %and59.i555 to i64, !dbg !1051
  %arrayidx61.i557 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom60.i556, !dbg !1051
  %1115 = load i32, i32* %arrayidx61.i557, align 4, !dbg !1051
  %xor62.i558 = xor i32 %1113, %1115, !dbg !1051
  %1116 = load i32, i32* %u.i417, align 4, !dbg !1051
  %shr63.i559 = lshr i32 %1116, 18, !dbg !1051
  %and64.i560 = and i32 %shr63.i559, 63, !dbg !1051
  %idxprom65.i561 = zext i32 %and64.i560 to i64, !dbg !1051
  %arrayidx66.i562 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom65.i561, !dbg !1051
  %1117 = load i32, i32* %arrayidx66.i562, align 4, !dbg !1051
  %xor67.i563 = xor i32 %xor62.i558, %1117, !dbg !1051
  %1118 = load i32, i32* %u.i417, align 4, !dbg !1051
  %shr68.i564 = lshr i32 %1118, 26, !dbg !1051
  %idxprom70.i565 = zext i32 %shr68.i564 to i64, !dbg !1051
  %arrayidx71.i566 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom70.i565, !dbg !1051
  %1119 = load i32, i32* %arrayidx71.i566, align 4, !dbg !1051
  %xor72.i567 = xor i32 %xor67.i563, %1119, !dbg !1051
  %1120 = load i32, i32* %t.i416, align 4, !dbg !1051
  %shr73.i568 = lshr i32 %1120, 2, !dbg !1051
  %and74.i569 = and i32 %shr73.i568, 63, !dbg !1051
  %idxprom75.i570 = zext i32 %and74.i569 to i64, !dbg !1051
  %arrayidx76.i571 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom75.i570, !dbg !1051
  %1121 = load i32, i32* %arrayidx76.i571, align 4, !dbg !1051
  %xor77.i572 = xor i32 %xor72.i567, %1121, !dbg !1051
  %1122 = load i32, i32* %t.i416, align 4, !dbg !1051
  %shr78.i573 = lshr i32 %1122, 10, !dbg !1051
  %and79.i574 = and i32 %shr78.i573, 63, !dbg !1051
  %idxprom80.i575 = zext i32 %and79.i574 to i64, !dbg !1051
  %arrayidx81.i576 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom80.i575, !dbg !1051
  %1123 = load i32, i32* %arrayidx81.i576, align 4, !dbg !1051
  %xor82.i577 = xor i32 %xor77.i572, %1123, !dbg !1051
  %1124 = load i32, i32* %t.i416, align 4, !dbg !1051
  %shr83.i578 = lshr i32 %1124, 18, !dbg !1051
  %and84.i579 = and i32 %shr83.i578, 63, !dbg !1051
  %idxprom85.i580 = zext i32 %and84.i579 to i64, !dbg !1051
  %arrayidx86.i581 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom85.i580, !dbg !1051
  %1125 = load i32, i32* %arrayidx86.i581, align 4, !dbg !1051
  %xor87.i582 = xor i32 %xor82.i577, %1125, !dbg !1051
  %1126 = load i32, i32* %t.i416, align 4, !dbg !1051
  %shr88.i583 = lshr i32 %1126, 26, !dbg !1051
  %idxprom90.i584 = zext i32 %shr88.i583 to i64, !dbg !1051
  %arrayidx91.i585 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom90.i584, !dbg !1051
  %1127 = load i32, i32* %arrayidx91.i585, align 4, !dbg !1051
  %xor92.i586 = xor i32 %xor87.i582, %1127, !dbg !1051
  %1128 = load i32, i32* %l.i414, align 4, !dbg !1051
  %xor93.i587 = xor i32 %1128, %xor92.i586, !dbg !1051
  store i32 %xor93.i587, i32* %l.i414, align 4, !dbg !1051
  %1129 = load i32, i32* %l.i414, align 4, !dbg !1052
  %1130 = load i32*, i32** %s.i418, align 8, !dbg !1052
  %arrayidx94.i588 = getelementptr inbounds i32, i32* %1130, i64 2, !dbg !1052
  %1131 = load i32, i32* %arrayidx94.i588, align 4, !dbg !1052
  %xor95.i589 = xor i32 %1129, %1131, !dbg !1052
  store i32 %xor95.i589, i32* %u.i417, align 4, !dbg !1052
  %1132 = load i32, i32* %l.i414, align 4, !dbg !1052
  %1133 = load i32*, i32** %s.i418, align 8, !dbg !1052
  %arrayidx96.i590 = getelementptr inbounds i32, i32* %1133, i64 3, !dbg !1052
  %1134 = load i32, i32* %arrayidx96.i590, align 4, !dbg !1052
  %xor97.i591 = xor i32 %1132, %1134, !dbg !1052
  store i32 %xor97.i591, i32* %t.i416, align 4, !dbg !1052
  %1135 = load i32, i32* %t.i416, align 4, !dbg !797
  %1136 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1135) #7, !dbg !797, !srcloc !101
  store i32 %1136, i32* %ret98.i426, align 4, !dbg !797
  %1137 = load i32, i32* %ret98.i426, align 4, !dbg !797
  store i32 %1137, i32* %tmp99.i427, align 4, !dbg !797
  %1138 = load i32, i32* %tmp99.i427, align 4, !dbg !797
  store i32 %1138, i32* %t.i416, align 4, !dbg !1052
  %1139 = load i32, i32* %u.i417, align 4, !dbg !1052
  %shr100.i592 = lshr i32 %1139, 2, !dbg !1052
  %and101.i593 = and i32 %shr100.i592, 63, !dbg !1052
  %idxprom102.i594 = zext i32 %and101.i593 to i64, !dbg !1052
  %arrayidx103.i595 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom102.i594, !dbg !1052
  %1140 = load i32, i32* %arrayidx103.i595, align 4, !dbg !1052
  %1141 = load i32, i32* %u.i417, align 4, !dbg !1052
  %shr104.i596 = lshr i32 %1141, 10, !dbg !1052
  %and105.i597 = and i32 %shr104.i596, 63, !dbg !1052
  %idxprom106.i598 = zext i32 %and105.i597 to i64, !dbg !1052
  %arrayidx107.i599 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom106.i598, !dbg !1052
  %1142 = load i32, i32* %arrayidx107.i599, align 4, !dbg !1052
  %xor108.i600 = xor i32 %1140, %1142, !dbg !1052
  %1143 = load i32, i32* %u.i417, align 4, !dbg !1052
  %shr109.i601 = lshr i32 %1143, 18, !dbg !1052
  %and110.i602 = and i32 %shr109.i601, 63, !dbg !1052
  %idxprom111.i603 = zext i32 %and110.i602 to i64, !dbg !1052
  %arrayidx112.i604 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom111.i603, !dbg !1052
  %1144 = load i32, i32* %arrayidx112.i604, align 4, !dbg !1052
  %xor113.i605 = xor i32 %xor108.i600, %1144, !dbg !1052
  %1145 = load i32, i32* %u.i417, align 4, !dbg !1052
  %shr114.i606 = lshr i32 %1145, 26, !dbg !1052
  %idxprom116.i607 = zext i32 %shr114.i606 to i64, !dbg !1052
  %arrayidx117.i608 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom116.i607, !dbg !1052
  %1146 = load i32, i32* %arrayidx117.i608, align 4, !dbg !1052
  %xor118.i609 = xor i32 %xor113.i605, %1146, !dbg !1052
  %1147 = load i32, i32* %t.i416, align 4, !dbg !1052
  %shr119.i610 = lshr i32 %1147, 2, !dbg !1052
  %and120.i611 = and i32 %shr119.i610, 63, !dbg !1052
  %idxprom121.i612 = zext i32 %and120.i611 to i64, !dbg !1052
  %arrayidx122.i613 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom121.i612, !dbg !1052
  %1148 = load i32, i32* %arrayidx122.i613, align 4, !dbg !1052
  %xor123.i614 = xor i32 %xor118.i609, %1148, !dbg !1052
  %1149 = load i32, i32* %t.i416, align 4, !dbg !1052
  %shr124.i615 = lshr i32 %1149, 10, !dbg !1052
  %and125.i616 = and i32 %shr124.i615, 63, !dbg !1052
  %idxprom126.i617 = zext i32 %and125.i616 to i64, !dbg !1052
  %arrayidx127.i618 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom126.i617, !dbg !1052
  %1150 = load i32, i32* %arrayidx127.i618, align 4, !dbg !1052
  %xor128.i619 = xor i32 %xor123.i614, %1150, !dbg !1052
  %1151 = load i32, i32* %t.i416, align 4, !dbg !1052
  %shr129.i620 = lshr i32 %1151, 18, !dbg !1052
  %and130.i621 = and i32 %shr129.i620, 63, !dbg !1052
  %idxprom131.i622 = zext i32 %and130.i621 to i64, !dbg !1052
  %arrayidx132.i623 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom131.i622, !dbg !1052
  %1152 = load i32, i32* %arrayidx132.i623, align 4, !dbg !1052
  %xor133.i624 = xor i32 %xor128.i619, %1152, !dbg !1052
  %1153 = load i32, i32* %t.i416, align 4, !dbg !1052
  %shr134.i625 = lshr i32 %1153, 26, !dbg !1052
  %idxprom136.i626 = zext i32 %shr134.i625 to i64, !dbg !1052
  %arrayidx137.i627 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom136.i626, !dbg !1052
  %1154 = load i32, i32* %arrayidx137.i627, align 4, !dbg !1052
  %xor138.i628 = xor i32 %xor133.i624, %1154, !dbg !1052
  %1155 = load i32, i32* %r.i415, align 4, !dbg !1052
  %xor139.i629 = xor i32 %1155, %xor138.i628, !dbg !1052
  store i32 %xor139.i629, i32* %r.i415, align 4, !dbg !1052
  %1156 = load i32, i32* %r.i415, align 4, !dbg !1053
  %1157 = load i32*, i32** %s.i418, align 8, !dbg !1053
  %arrayidx140.i630 = getelementptr inbounds i32, i32* %1157, i64 4, !dbg !1053
  %1158 = load i32, i32* %arrayidx140.i630, align 4, !dbg !1053
  %xor141.i631 = xor i32 %1156, %1158, !dbg !1053
  store i32 %xor141.i631, i32* %u.i417, align 4, !dbg !1053
  %1159 = load i32, i32* %r.i415, align 4, !dbg !1053
  %1160 = load i32*, i32** %s.i418, align 8, !dbg !1053
  %arrayidx142.i632 = getelementptr inbounds i32, i32* %1160, i64 5, !dbg !1053
  %1161 = load i32, i32* %arrayidx142.i632, align 4, !dbg !1053
  %xor143.i633 = xor i32 %1159, %1161, !dbg !1053
  store i32 %xor143.i633, i32* %t.i416, align 4, !dbg !1053
  %1162 = load i32, i32* %t.i416, align 4, !dbg !798
  %1163 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1162) #7, !dbg !798, !srcloc !107
  store i32 %1163, i32* %ret144.i428, align 4, !dbg !798
  %1164 = load i32, i32* %ret144.i428, align 4, !dbg !798
  store i32 %1164, i32* %tmp145.i429, align 4, !dbg !798
  %1165 = load i32, i32* %tmp145.i429, align 4, !dbg !798
  store i32 %1165, i32* %t.i416, align 4, !dbg !1053
  %1166 = load i32, i32* %u.i417, align 4, !dbg !1053
  %shr146.i634 = lshr i32 %1166, 2, !dbg !1053
  %and147.i635 = and i32 %shr146.i634, 63, !dbg !1053
  %idxprom148.i636 = zext i32 %and147.i635 to i64, !dbg !1053
  %arrayidx149.i637 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom148.i636, !dbg !1053
  %1167 = load i32, i32* %arrayidx149.i637, align 4, !dbg !1053
  %1168 = load i32, i32* %u.i417, align 4, !dbg !1053
  %shr150.i638 = lshr i32 %1168, 10, !dbg !1053
  %and151.i639 = and i32 %shr150.i638, 63, !dbg !1053
  %idxprom152.i640 = zext i32 %and151.i639 to i64, !dbg !1053
  %arrayidx153.i641 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom152.i640, !dbg !1053
  %1169 = load i32, i32* %arrayidx153.i641, align 4, !dbg !1053
  %xor154.i642 = xor i32 %1167, %1169, !dbg !1053
  %1170 = load i32, i32* %u.i417, align 4, !dbg !1053
  %shr155.i643 = lshr i32 %1170, 18, !dbg !1053
  %and156.i644 = and i32 %shr155.i643, 63, !dbg !1053
  %idxprom157.i645 = zext i32 %and156.i644 to i64, !dbg !1053
  %arrayidx158.i646 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom157.i645, !dbg !1053
  %1171 = load i32, i32* %arrayidx158.i646, align 4, !dbg !1053
  %xor159.i647 = xor i32 %xor154.i642, %1171, !dbg !1053
  %1172 = load i32, i32* %u.i417, align 4, !dbg !1053
  %shr160.i648 = lshr i32 %1172, 26, !dbg !1053
  %idxprom162.i649 = zext i32 %shr160.i648 to i64, !dbg !1053
  %arrayidx163.i650 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom162.i649, !dbg !1053
  %1173 = load i32, i32* %arrayidx163.i650, align 4, !dbg !1053
  %xor164.i651 = xor i32 %xor159.i647, %1173, !dbg !1053
  %1174 = load i32, i32* %t.i416, align 4, !dbg !1053
  %shr165.i652 = lshr i32 %1174, 2, !dbg !1053
  %and166.i653 = and i32 %shr165.i652, 63, !dbg !1053
  %idxprom167.i654 = zext i32 %and166.i653 to i64, !dbg !1053
  %arrayidx168.i655 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom167.i654, !dbg !1053
  %1175 = load i32, i32* %arrayidx168.i655, align 4, !dbg !1053
  %xor169.i656 = xor i32 %xor164.i651, %1175, !dbg !1053
  %1176 = load i32, i32* %t.i416, align 4, !dbg !1053
  %shr170.i657 = lshr i32 %1176, 10, !dbg !1053
  %and171.i658 = and i32 %shr170.i657, 63, !dbg !1053
  %idxprom172.i659 = zext i32 %and171.i658 to i64, !dbg !1053
  %arrayidx173.i660 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom172.i659, !dbg !1053
  %1177 = load i32, i32* %arrayidx173.i660, align 4, !dbg !1053
  %xor174.i661 = xor i32 %xor169.i656, %1177, !dbg !1053
  %1178 = load i32, i32* %t.i416, align 4, !dbg !1053
  %shr175.i662 = lshr i32 %1178, 18, !dbg !1053
  %and176.i663 = and i32 %shr175.i662, 63, !dbg !1053
  %idxprom177.i664 = zext i32 %and176.i663 to i64, !dbg !1053
  %arrayidx178.i665 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom177.i664, !dbg !1053
  %1179 = load i32, i32* %arrayidx178.i665, align 4, !dbg !1053
  %xor179.i666 = xor i32 %xor174.i661, %1179, !dbg !1053
  %1180 = load i32, i32* %t.i416, align 4, !dbg !1053
  %shr180.i667 = lshr i32 %1180, 26, !dbg !1053
  %idxprom182.i668 = zext i32 %shr180.i667 to i64, !dbg !1053
  %arrayidx183.i669 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom182.i668, !dbg !1053
  %1181 = load i32, i32* %arrayidx183.i669, align 4, !dbg !1053
  %xor184.i670 = xor i32 %xor179.i666, %1181, !dbg !1053
  %1182 = load i32, i32* %l.i414, align 4, !dbg !1053
  %xor185.i671 = xor i32 %1182, %xor184.i670, !dbg !1053
  store i32 %xor185.i671, i32* %l.i414, align 4, !dbg !1053
  %1183 = load i32, i32* %l.i414, align 4, !dbg !1054
  %1184 = load i32*, i32** %s.i418, align 8, !dbg !1054
  %arrayidx186.i672 = getelementptr inbounds i32, i32* %1184, i64 6, !dbg !1054
  %1185 = load i32, i32* %arrayidx186.i672, align 4, !dbg !1054
  %xor187.i673 = xor i32 %1183, %1185, !dbg !1054
  store i32 %xor187.i673, i32* %u.i417, align 4, !dbg !1054
  %1186 = load i32, i32* %l.i414, align 4, !dbg !1054
  %1187 = load i32*, i32** %s.i418, align 8, !dbg !1054
  %arrayidx188.i674 = getelementptr inbounds i32, i32* %1187, i64 7, !dbg !1054
  %1188 = load i32, i32* %arrayidx188.i674, align 4, !dbg !1054
  %xor189.i675 = xor i32 %1186, %1188, !dbg !1054
  store i32 %xor189.i675, i32* %t.i416, align 4, !dbg !1054
  %1189 = load i32, i32* %t.i416, align 4, !dbg !799
  %1190 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1189) #7, !dbg !799, !srcloc !113
  store i32 %1190, i32* %ret190.i430, align 4, !dbg !799
  %1191 = load i32, i32* %ret190.i430, align 4, !dbg !799
  store i32 %1191, i32* %tmp191.i431, align 4, !dbg !799
  %1192 = load i32, i32* %tmp191.i431, align 4, !dbg !799
  store i32 %1192, i32* %t.i416, align 4, !dbg !1054
  %1193 = load i32, i32* %u.i417, align 4, !dbg !1054
  %shr192.i676 = lshr i32 %1193, 2, !dbg !1054
  %and193.i677 = and i32 %shr192.i676, 63, !dbg !1054
  %idxprom194.i678 = zext i32 %and193.i677 to i64, !dbg !1054
  %arrayidx195.i679 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom194.i678, !dbg !1054
  %1194 = load i32, i32* %arrayidx195.i679, align 4, !dbg !1054
  %1195 = load i32, i32* %u.i417, align 4, !dbg !1054
  %shr196.i680 = lshr i32 %1195, 10, !dbg !1054
  %and197.i681 = and i32 %shr196.i680, 63, !dbg !1054
  %idxprom198.i682 = zext i32 %and197.i681 to i64, !dbg !1054
  %arrayidx199.i683 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom198.i682, !dbg !1054
  %1196 = load i32, i32* %arrayidx199.i683, align 4, !dbg !1054
  %xor200.i684 = xor i32 %1194, %1196, !dbg !1054
  %1197 = load i32, i32* %u.i417, align 4, !dbg !1054
  %shr201.i685 = lshr i32 %1197, 18, !dbg !1054
  %and202.i686 = and i32 %shr201.i685, 63, !dbg !1054
  %idxprom203.i687 = zext i32 %and202.i686 to i64, !dbg !1054
  %arrayidx204.i688 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom203.i687, !dbg !1054
  %1198 = load i32, i32* %arrayidx204.i688, align 4, !dbg !1054
  %xor205.i689 = xor i32 %xor200.i684, %1198, !dbg !1054
  %1199 = load i32, i32* %u.i417, align 4, !dbg !1054
  %shr206.i690 = lshr i32 %1199, 26, !dbg !1054
  %idxprom208.i691 = zext i32 %shr206.i690 to i64, !dbg !1054
  %arrayidx209.i692 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom208.i691, !dbg !1054
  %1200 = load i32, i32* %arrayidx209.i692, align 4, !dbg !1054
  %xor210.i693 = xor i32 %xor205.i689, %1200, !dbg !1054
  %1201 = load i32, i32* %t.i416, align 4, !dbg !1054
  %shr211.i694 = lshr i32 %1201, 2, !dbg !1054
  %and212.i695 = and i32 %shr211.i694, 63, !dbg !1054
  %idxprom213.i696 = zext i32 %and212.i695 to i64, !dbg !1054
  %arrayidx214.i697 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom213.i696, !dbg !1054
  %1202 = load i32, i32* %arrayidx214.i697, align 4, !dbg !1054
  %xor215.i698 = xor i32 %xor210.i693, %1202, !dbg !1054
  %1203 = load i32, i32* %t.i416, align 4, !dbg !1054
  %shr216.i699 = lshr i32 %1203, 10, !dbg !1054
  %and217.i700 = and i32 %shr216.i699, 63, !dbg !1054
  %idxprom218.i701 = zext i32 %and217.i700 to i64, !dbg !1054
  %arrayidx219.i702 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom218.i701, !dbg !1054
  %1204 = load i32, i32* %arrayidx219.i702, align 4, !dbg !1054
  %xor220.i703 = xor i32 %xor215.i698, %1204, !dbg !1054
  %1205 = load i32, i32* %t.i416, align 4, !dbg !1054
  %shr221.i704 = lshr i32 %1205, 18, !dbg !1054
  %and222.i705 = and i32 %shr221.i704, 63, !dbg !1054
  %idxprom223.i706 = zext i32 %and222.i705 to i64, !dbg !1054
  %arrayidx224.i707 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom223.i706, !dbg !1054
  %1206 = load i32, i32* %arrayidx224.i707, align 4, !dbg !1054
  %xor225.i708 = xor i32 %xor220.i703, %1206, !dbg !1054
  %1207 = load i32, i32* %t.i416, align 4, !dbg !1054
  %shr226.i709 = lshr i32 %1207, 26, !dbg !1054
  %idxprom228.i710 = zext i32 %shr226.i709 to i64, !dbg !1054
  %arrayidx229.i711 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom228.i710, !dbg !1054
  %1208 = load i32, i32* %arrayidx229.i711, align 4, !dbg !1054
  %xor230.i712 = xor i32 %xor225.i708, %1208, !dbg !1054
  %1209 = load i32, i32* %r.i415, align 4, !dbg !1054
  %xor231.i713 = xor i32 %1209, %xor230.i712, !dbg !1054
  store i32 %xor231.i713, i32* %r.i415, align 4, !dbg !1054
  %1210 = load i32, i32* %r.i415, align 4, !dbg !1055
  %1211 = load i32*, i32** %s.i418, align 8, !dbg !1055
  %arrayidx232.i714 = getelementptr inbounds i32, i32* %1211, i64 8, !dbg !1055
  %1212 = load i32, i32* %arrayidx232.i714, align 4, !dbg !1055
  %xor233.i715 = xor i32 %1210, %1212, !dbg !1055
  store i32 %xor233.i715, i32* %u.i417, align 4, !dbg !1055
  %1213 = load i32, i32* %r.i415, align 4, !dbg !1055
  %1214 = load i32*, i32** %s.i418, align 8, !dbg !1055
  %arrayidx234.i716 = getelementptr inbounds i32, i32* %1214, i64 9, !dbg !1055
  %1215 = load i32, i32* %arrayidx234.i716, align 4, !dbg !1055
  %xor235.i717 = xor i32 %1213, %1215, !dbg !1055
  store i32 %xor235.i717, i32* %t.i416, align 4, !dbg !1055
  %1216 = load i32, i32* %t.i416, align 4, !dbg !800
  %1217 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1216) #7, !dbg !800, !srcloc !119
  store i32 %1217, i32* %ret236.i432, align 4, !dbg !800
  %1218 = load i32, i32* %ret236.i432, align 4, !dbg !800
  store i32 %1218, i32* %tmp237.i433, align 4, !dbg !800
  %1219 = load i32, i32* %tmp237.i433, align 4, !dbg !800
  store i32 %1219, i32* %t.i416, align 4, !dbg !1055
  %1220 = load i32, i32* %u.i417, align 4, !dbg !1055
  %shr238.i718 = lshr i32 %1220, 2, !dbg !1055
  %and239.i719 = and i32 %shr238.i718, 63, !dbg !1055
  %idxprom240.i720 = zext i32 %and239.i719 to i64, !dbg !1055
  %arrayidx241.i721 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom240.i720, !dbg !1055
  %1221 = load i32, i32* %arrayidx241.i721, align 4, !dbg !1055
  %1222 = load i32, i32* %u.i417, align 4, !dbg !1055
  %shr242.i722 = lshr i32 %1222, 10, !dbg !1055
  %and243.i723 = and i32 %shr242.i722, 63, !dbg !1055
  %idxprom244.i724 = zext i32 %and243.i723 to i64, !dbg !1055
  %arrayidx245.i725 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom244.i724, !dbg !1055
  %1223 = load i32, i32* %arrayidx245.i725, align 4, !dbg !1055
  %xor246.i726 = xor i32 %1221, %1223, !dbg !1055
  %1224 = load i32, i32* %u.i417, align 4, !dbg !1055
  %shr247.i727 = lshr i32 %1224, 18, !dbg !1055
  %and248.i728 = and i32 %shr247.i727, 63, !dbg !1055
  %idxprom249.i729 = zext i32 %and248.i728 to i64, !dbg !1055
  %arrayidx250.i730 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom249.i729, !dbg !1055
  %1225 = load i32, i32* %arrayidx250.i730, align 4, !dbg !1055
  %xor251.i731 = xor i32 %xor246.i726, %1225, !dbg !1055
  %1226 = load i32, i32* %u.i417, align 4, !dbg !1055
  %shr252.i732 = lshr i32 %1226, 26, !dbg !1055
  %idxprom254.i733 = zext i32 %shr252.i732 to i64, !dbg !1055
  %arrayidx255.i734 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom254.i733, !dbg !1055
  %1227 = load i32, i32* %arrayidx255.i734, align 4, !dbg !1055
  %xor256.i735 = xor i32 %xor251.i731, %1227, !dbg !1055
  %1228 = load i32, i32* %t.i416, align 4, !dbg !1055
  %shr257.i736 = lshr i32 %1228, 2, !dbg !1055
  %and258.i737 = and i32 %shr257.i736, 63, !dbg !1055
  %idxprom259.i738 = zext i32 %and258.i737 to i64, !dbg !1055
  %arrayidx260.i739 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom259.i738, !dbg !1055
  %1229 = load i32, i32* %arrayidx260.i739, align 4, !dbg !1055
  %xor261.i740 = xor i32 %xor256.i735, %1229, !dbg !1055
  %1230 = load i32, i32* %t.i416, align 4, !dbg !1055
  %shr262.i741 = lshr i32 %1230, 10, !dbg !1055
  %and263.i742 = and i32 %shr262.i741, 63, !dbg !1055
  %idxprom264.i743 = zext i32 %and263.i742 to i64, !dbg !1055
  %arrayidx265.i744 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom264.i743, !dbg !1055
  %1231 = load i32, i32* %arrayidx265.i744, align 4, !dbg !1055
  %xor266.i745 = xor i32 %xor261.i740, %1231, !dbg !1055
  %1232 = load i32, i32* %t.i416, align 4, !dbg !1055
  %shr267.i746 = lshr i32 %1232, 18, !dbg !1055
  %and268.i747 = and i32 %shr267.i746, 63, !dbg !1055
  %idxprom269.i748 = zext i32 %and268.i747 to i64, !dbg !1055
  %arrayidx270.i749 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom269.i748, !dbg !1055
  %1233 = load i32, i32* %arrayidx270.i749, align 4, !dbg !1055
  %xor271.i750 = xor i32 %xor266.i745, %1233, !dbg !1055
  %1234 = load i32, i32* %t.i416, align 4, !dbg !1055
  %shr272.i751 = lshr i32 %1234, 26, !dbg !1055
  %idxprom274.i752 = zext i32 %shr272.i751 to i64, !dbg !1055
  %arrayidx275.i753 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom274.i752, !dbg !1055
  %1235 = load i32, i32* %arrayidx275.i753, align 4, !dbg !1055
  %xor276.i754 = xor i32 %xor271.i750, %1235, !dbg !1055
  %1236 = load i32, i32* %l.i414, align 4, !dbg !1055
  %xor277.i755 = xor i32 %1236, %xor276.i754, !dbg !1055
  store i32 %xor277.i755, i32* %l.i414, align 4, !dbg !1055
  %1237 = load i32, i32* %l.i414, align 4, !dbg !1056
  %1238 = load i32*, i32** %s.i418, align 8, !dbg !1056
  %arrayidx278.i756 = getelementptr inbounds i32, i32* %1238, i64 10, !dbg !1056
  %1239 = load i32, i32* %arrayidx278.i756, align 4, !dbg !1056
  %xor279.i757 = xor i32 %1237, %1239, !dbg !1056
  store i32 %xor279.i757, i32* %u.i417, align 4, !dbg !1056
  %1240 = load i32, i32* %l.i414, align 4, !dbg !1056
  %1241 = load i32*, i32** %s.i418, align 8, !dbg !1056
  %arrayidx280.i758 = getelementptr inbounds i32, i32* %1241, i64 11, !dbg !1056
  %1242 = load i32, i32* %arrayidx280.i758, align 4, !dbg !1056
  %xor281.i759 = xor i32 %1240, %1242, !dbg !1056
  store i32 %xor281.i759, i32* %t.i416, align 4, !dbg !1056
  %1243 = load i32, i32* %t.i416, align 4, !dbg !801
  %1244 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1243) #7, !dbg !801, !srcloc !125
  store i32 %1244, i32* %ret282.i434, align 4, !dbg !801
  %1245 = load i32, i32* %ret282.i434, align 4, !dbg !801
  store i32 %1245, i32* %tmp283.i435, align 4, !dbg !801
  %1246 = load i32, i32* %tmp283.i435, align 4, !dbg !801
  store i32 %1246, i32* %t.i416, align 4, !dbg !1056
  %1247 = load i32, i32* %u.i417, align 4, !dbg !1056
  %shr284.i760 = lshr i32 %1247, 2, !dbg !1056
  %and285.i761 = and i32 %shr284.i760, 63, !dbg !1056
  %idxprom286.i762 = zext i32 %and285.i761 to i64, !dbg !1056
  %arrayidx287.i763 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom286.i762, !dbg !1056
  %1248 = load i32, i32* %arrayidx287.i763, align 4, !dbg !1056
  %1249 = load i32, i32* %u.i417, align 4, !dbg !1056
  %shr288.i764 = lshr i32 %1249, 10, !dbg !1056
  %and289.i765 = and i32 %shr288.i764, 63, !dbg !1056
  %idxprom290.i766 = zext i32 %and289.i765 to i64, !dbg !1056
  %arrayidx291.i767 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom290.i766, !dbg !1056
  %1250 = load i32, i32* %arrayidx291.i767, align 4, !dbg !1056
  %xor292.i768 = xor i32 %1248, %1250, !dbg !1056
  %1251 = load i32, i32* %u.i417, align 4, !dbg !1056
  %shr293.i769 = lshr i32 %1251, 18, !dbg !1056
  %and294.i770 = and i32 %shr293.i769, 63, !dbg !1056
  %idxprom295.i771 = zext i32 %and294.i770 to i64, !dbg !1056
  %arrayidx296.i772 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom295.i771, !dbg !1056
  %1252 = load i32, i32* %arrayidx296.i772, align 4, !dbg !1056
  %xor297.i773 = xor i32 %xor292.i768, %1252, !dbg !1056
  %1253 = load i32, i32* %u.i417, align 4, !dbg !1056
  %shr298.i774 = lshr i32 %1253, 26, !dbg !1056
  %idxprom300.i775 = zext i32 %shr298.i774 to i64, !dbg !1056
  %arrayidx301.i776 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom300.i775, !dbg !1056
  %1254 = load i32, i32* %arrayidx301.i776, align 4, !dbg !1056
  %xor302.i777 = xor i32 %xor297.i773, %1254, !dbg !1056
  %1255 = load i32, i32* %t.i416, align 4, !dbg !1056
  %shr303.i778 = lshr i32 %1255, 2, !dbg !1056
  %and304.i779 = and i32 %shr303.i778, 63, !dbg !1056
  %idxprom305.i780 = zext i32 %and304.i779 to i64, !dbg !1056
  %arrayidx306.i781 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom305.i780, !dbg !1056
  %1256 = load i32, i32* %arrayidx306.i781, align 4, !dbg !1056
  %xor307.i782 = xor i32 %xor302.i777, %1256, !dbg !1056
  %1257 = load i32, i32* %t.i416, align 4, !dbg !1056
  %shr308.i783 = lshr i32 %1257, 10, !dbg !1056
  %and309.i784 = and i32 %shr308.i783, 63, !dbg !1056
  %idxprom310.i785 = zext i32 %and309.i784 to i64, !dbg !1056
  %arrayidx311.i786 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom310.i785, !dbg !1056
  %1258 = load i32, i32* %arrayidx311.i786, align 4, !dbg !1056
  %xor312.i787 = xor i32 %xor307.i782, %1258, !dbg !1056
  %1259 = load i32, i32* %t.i416, align 4, !dbg !1056
  %shr313.i788 = lshr i32 %1259, 18, !dbg !1056
  %and314.i789 = and i32 %shr313.i788, 63, !dbg !1056
  %idxprom315.i790 = zext i32 %and314.i789 to i64, !dbg !1056
  %arrayidx316.i791 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom315.i790, !dbg !1056
  %1260 = load i32, i32* %arrayidx316.i791, align 4, !dbg !1056
  %xor317.i792 = xor i32 %xor312.i787, %1260, !dbg !1056
  %1261 = load i32, i32* %t.i416, align 4, !dbg !1056
  %shr318.i793 = lshr i32 %1261, 26, !dbg !1056
  %idxprom320.i794 = zext i32 %shr318.i793 to i64, !dbg !1056
  %arrayidx321.i795 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom320.i794, !dbg !1056
  %1262 = load i32, i32* %arrayidx321.i795, align 4, !dbg !1056
  %xor322.i796 = xor i32 %xor317.i792, %1262, !dbg !1056
  %1263 = load i32, i32* %r.i415, align 4, !dbg !1056
  %xor323.i797 = xor i32 %1263, %xor322.i796, !dbg !1056
  store i32 %xor323.i797, i32* %r.i415, align 4, !dbg !1056
  %1264 = load i32, i32* %r.i415, align 4, !dbg !1057
  %1265 = load i32*, i32** %s.i418, align 8, !dbg !1057
  %arrayidx324.i798 = getelementptr inbounds i32, i32* %1265, i64 12, !dbg !1057
  %1266 = load i32, i32* %arrayidx324.i798, align 4, !dbg !1057
  %xor325.i799 = xor i32 %1264, %1266, !dbg !1057
  store i32 %xor325.i799, i32* %u.i417, align 4, !dbg !1057
  %1267 = load i32, i32* %r.i415, align 4, !dbg !1057
  %1268 = load i32*, i32** %s.i418, align 8, !dbg !1057
  %arrayidx326.i800 = getelementptr inbounds i32, i32* %1268, i64 13, !dbg !1057
  %1269 = load i32, i32* %arrayidx326.i800, align 4, !dbg !1057
  %xor327.i801 = xor i32 %1267, %1269, !dbg !1057
  store i32 %xor327.i801, i32* %t.i416, align 4, !dbg !1057
  %1270 = load i32, i32* %t.i416, align 4, !dbg !802
  %1271 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1270) #7, !dbg !802, !srcloc !131
  store i32 %1271, i32* %ret328.i436, align 4, !dbg !802
  %1272 = load i32, i32* %ret328.i436, align 4, !dbg !802
  store i32 %1272, i32* %tmp329.i437, align 4, !dbg !802
  %1273 = load i32, i32* %tmp329.i437, align 4, !dbg !802
  store i32 %1273, i32* %t.i416, align 4, !dbg !1057
  %1274 = load i32, i32* %u.i417, align 4, !dbg !1057
  %shr330.i802 = lshr i32 %1274, 2, !dbg !1057
  %and331.i803 = and i32 %shr330.i802, 63, !dbg !1057
  %idxprom332.i804 = zext i32 %and331.i803 to i64, !dbg !1057
  %arrayidx333.i805 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom332.i804, !dbg !1057
  %1275 = load i32, i32* %arrayidx333.i805, align 4, !dbg !1057
  %1276 = load i32, i32* %u.i417, align 4, !dbg !1057
  %shr334.i806 = lshr i32 %1276, 10, !dbg !1057
  %and335.i807 = and i32 %shr334.i806, 63, !dbg !1057
  %idxprom336.i808 = zext i32 %and335.i807 to i64, !dbg !1057
  %arrayidx337.i809 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom336.i808, !dbg !1057
  %1277 = load i32, i32* %arrayidx337.i809, align 4, !dbg !1057
  %xor338.i810 = xor i32 %1275, %1277, !dbg !1057
  %1278 = load i32, i32* %u.i417, align 4, !dbg !1057
  %shr339.i811 = lshr i32 %1278, 18, !dbg !1057
  %and340.i812 = and i32 %shr339.i811, 63, !dbg !1057
  %idxprom341.i813 = zext i32 %and340.i812 to i64, !dbg !1057
  %arrayidx342.i814 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom341.i813, !dbg !1057
  %1279 = load i32, i32* %arrayidx342.i814, align 4, !dbg !1057
  %xor343.i815 = xor i32 %xor338.i810, %1279, !dbg !1057
  %1280 = load i32, i32* %u.i417, align 4, !dbg !1057
  %shr344.i816 = lshr i32 %1280, 26, !dbg !1057
  %idxprom346.i817 = zext i32 %shr344.i816 to i64, !dbg !1057
  %arrayidx347.i818 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom346.i817, !dbg !1057
  %1281 = load i32, i32* %arrayidx347.i818, align 4, !dbg !1057
  %xor348.i819 = xor i32 %xor343.i815, %1281, !dbg !1057
  %1282 = load i32, i32* %t.i416, align 4, !dbg !1057
  %shr349.i820 = lshr i32 %1282, 2, !dbg !1057
  %and350.i821 = and i32 %shr349.i820, 63, !dbg !1057
  %idxprom351.i822 = zext i32 %and350.i821 to i64, !dbg !1057
  %arrayidx352.i823 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom351.i822, !dbg !1057
  %1283 = load i32, i32* %arrayidx352.i823, align 4, !dbg !1057
  %xor353.i824 = xor i32 %xor348.i819, %1283, !dbg !1057
  %1284 = load i32, i32* %t.i416, align 4, !dbg !1057
  %shr354.i825 = lshr i32 %1284, 10, !dbg !1057
  %and355.i826 = and i32 %shr354.i825, 63, !dbg !1057
  %idxprom356.i827 = zext i32 %and355.i826 to i64, !dbg !1057
  %arrayidx357.i828 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom356.i827, !dbg !1057
  %1285 = load i32, i32* %arrayidx357.i828, align 4, !dbg !1057
  %xor358.i829 = xor i32 %xor353.i824, %1285, !dbg !1057
  %1286 = load i32, i32* %t.i416, align 4, !dbg !1057
  %shr359.i830 = lshr i32 %1286, 18, !dbg !1057
  %and360.i831 = and i32 %shr359.i830, 63, !dbg !1057
  %idxprom361.i832 = zext i32 %and360.i831 to i64, !dbg !1057
  %arrayidx362.i833 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom361.i832, !dbg !1057
  %1287 = load i32, i32* %arrayidx362.i833, align 4, !dbg !1057
  %xor363.i834 = xor i32 %xor358.i829, %1287, !dbg !1057
  %1288 = load i32, i32* %t.i416, align 4, !dbg !1057
  %shr364.i835 = lshr i32 %1288, 26, !dbg !1057
  %idxprom366.i836 = zext i32 %shr364.i835 to i64, !dbg !1057
  %arrayidx367.i837 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom366.i836, !dbg !1057
  %1289 = load i32, i32* %arrayidx367.i837, align 4, !dbg !1057
  %xor368.i838 = xor i32 %xor363.i834, %1289, !dbg !1057
  %1290 = load i32, i32* %l.i414, align 4, !dbg !1057
  %xor369.i839 = xor i32 %1290, %xor368.i838, !dbg !1057
  store i32 %xor369.i839, i32* %l.i414, align 4, !dbg !1057
  %1291 = load i32, i32* %l.i414, align 4, !dbg !1058
  %1292 = load i32*, i32** %s.i418, align 8, !dbg !1058
  %arrayidx370.i840 = getelementptr inbounds i32, i32* %1292, i64 14, !dbg !1058
  %1293 = load i32, i32* %arrayidx370.i840, align 4, !dbg !1058
  %xor371.i841 = xor i32 %1291, %1293, !dbg !1058
  store i32 %xor371.i841, i32* %u.i417, align 4, !dbg !1058
  %1294 = load i32, i32* %l.i414, align 4, !dbg !1058
  %1295 = load i32*, i32** %s.i418, align 8, !dbg !1058
  %arrayidx372.i842 = getelementptr inbounds i32, i32* %1295, i64 15, !dbg !1058
  %1296 = load i32, i32* %arrayidx372.i842, align 4, !dbg !1058
  %xor373.i843 = xor i32 %1294, %1296, !dbg !1058
  store i32 %xor373.i843, i32* %t.i416, align 4, !dbg !1058
  %1297 = load i32, i32* %t.i416, align 4, !dbg !803
  %1298 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1297) #7, !dbg !803, !srcloc !137
  store i32 %1298, i32* %ret374.i438, align 4, !dbg !803
  %1299 = load i32, i32* %ret374.i438, align 4, !dbg !803
  store i32 %1299, i32* %tmp375.i439, align 4, !dbg !803
  %1300 = load i32, i32* %tmp375.i439, align 4, !dbg !803
  store i32 %1300, i32* %t.i416, align 4, !dbg !1058
  %1301 = load i32, i32* %u.i417, align 4, !dbg !1058
  %shr376.i844 = lshr i32 %1301, 2, !dbg !1058
  %and377.i845 = and i32 %shr376.i844, 63, !dbg !1058
  %idxprom378.i846 = zext i32 %and377.i845 to i64, !dbg !1058
  %arrayidx379.i847 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom378.i846, !dbg !1058
  %1302 = load i32, i32* %arrayidx379.i847, align 4, !dbg !1058
  %1303 = load i32, i32* %u.i417, align 4, !dbg !1058
  %shr380.i848 = lshr i32 %1303, 10, !dbg !1058
  %and381.i849 = and i32 %shr380.i848, 63, !dbg !1058
  %idxprom382.i850 = zext i32 %and381.i849 to i64, !dbg !1058
  %arrayidx383.i851 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom382.i850, !dbg !1058
  %1304 = load i32, i32* %arrayidx383.i851, align 4, !dbg !1058
  %xor384.i852 = xor i32 %1302, %1304, !dbg !1058
  %1305 = load i32, i32* %u.i417, align 4, !dbg !1058
  %shr385.i853 = lshr i32 %1305, 18, !dbg !1058
  %and386.i854 = and i32 %shr385.i853, 63, !dbg !1058
  %idxprom387.i855 = zext i32 %and386.i854 to i64, !dbg !1058
  %arrayidx388.i856 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom387.i855, !dbg !1058
  %1306 = load i32, i32* %arrayidx388.i856, align 4, !dbg !1058
  %xor389.i857 = xor i32 %xor384.i852, %1306, !dbg !1058
  %1307 = load i32, i32* %u.i417, align 4, !dbg !1058
  %shr390.i858 = lshr i32 %1307, 26, !dbg !1058
  %idxprom392.i859 = zext i32 %shr390.i858 to i64, !dbg !1058
  %arrayidx393.i860 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom392.i859, !dbg !1058
  %1308 = load i32, i32* %arrayidx393.i860, align 4, !dbg !1058
  %xor394.i861 = xor i32 %xor389.i857, %1308, !dbg !1058
  %1309 = load i32, i32* %t.i416, align 4, !dbg !1058
  %shr395.i862 = lshr i32 %1309, 2, !dbg !1058
  %and396.i863 = and i32 %shr395.i862, 63, !dbg !1058
  %idxprom397.i864 = zext i32 %and396.i863 to i64, !dbg !1058
  %arrayidx398.i865 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom397.i864, !dbg !1058
  %1310 = load i32, i32* %arrayidx398.i865, align 4, !dbg !1058
  %xor399.i866 = xor i32 %xor394.i861, %1310, !dbg !1058
  %1311 = load i32, i32* %t.i416, align 4, !dbg !1058
  %shr400.i867 = lshr i32 %1311, 10, !dbg !1058
  %and401.i868 = and i32 %shr400.i867, 63, !dbg !1058
  %idxprom402.i869 = zext i32 %and401.i868 to i64, !dbg !1058
  %arrayidx403.i870 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom402.i869, !dbg !1058
  %1312 = load i32, i32* %arrayidx403.i870, align 4, !dbg !1058
  %xor404.i871 = xor i32 %xor399.i866, %1312, !dbg !1058
  %1313 = load i32, i32* %t.i416, align 4, !dbg !1058
  %shr405.i872 = lshr i32 %1313, 18, !dbg !1058
  %and406.i873 = and i32 %shr405.i872, 63, !dbg !1058
  %idxprom407.i874 = zext i32 %and406.i873 to i64, !dbg !1058
  %arrayidx408.i875 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom407.i874, !dbg !1058
  %1314 = load i32, i32* %arrayidx408.i875, align 4, !dbg !1058
  %xor409.i876 = xor i32 %xor404.i871, %1314, !dbg !1058
  %1315 = load i32, i32* %t.i416, align 4, !dbg !1058
  %shr410.i877 = lshr i32 %1315, 26, !dbg !1058
  %idxprom412.i878 = zext i32 %shr410.i877 to i64, !dbg !1058
  %arrayidx413.i879 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom412.i878, !dbg !1058
  %1316 = load i32, i32* %arrayidx413.i879, align 4, !dbg !1058
  %xor414.i880 = xor i32 %xor409.i876, %1316, !dbg !1058
  %1317 = load i32, i32* %r.i415, align 4, !dbg !1058
  %xor415.i881 = xor i32 %1317, %xor414.i880, !dbg !1058
  store i32 %xor415.i881, i32* %r.i415, align 4, !dbg !1058
  %1318 = load i32, i32* %r.i415, align 4, !dbg !1059
  %1319 = load i32*, i32** %s.i418, align 8, !dbg !1059
  %arrayidx416.i882 = getelementptr inbounds i32, i32* %1319, i64 16, !dbg !1059
  %1320 = load i32, i32* %arrayidx416.i882, align 4, !dbg !1059
  %xor417.i883 = xor i32 %1318, %1320, !dbg !1059
  store i32 %xor417.i883, i32* %u.i417, align 4, !dbg !1059
  %1321 = load i32, i32* %r.i415, align 4, !dbg !1059
  %1322 = load i32*, i32** %s.i418, align 8, !dbg !1059
  %arrayidx418.i884 = getelementptr inbounds i32, i32* %1322, i64 17, !dbg !1059
  %1323 = load i32, i32* %arrayidx418.i884, align 4, !dbg !1059
  %xor419.i885 = xor i32 %1321, %1323, !dbg !1059
  store i32 %xor419.i885, i32* %t.i416, align 4, !dbg !1059
  %1324 = load i32, i32* %t.i416, align 4, !dbg !804
  %1325 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1324) #7, !dbg !804, !srcloc !143
  store i32 %1325, i32* %ret420.i440, align 4, !dbg !804
  %1326 = load i32, i32* %ret420.i440, align 4, !dbg !804
  store i32 %1326, i32* %tmp421.i441, align 4, !dbg !804
  %1327 = load i32, i32* %tmp421.i441, align 4, !dbg !804
  store i32 %1327, i32* %t.i416, align 4, !dbg !1059
  %1328 = load i32, i32* %u.i417, align 4, !dbg !1059
  %shr422.i886 = lshr i32 %1328, 2, !dbg !1059
  %and423.i887 = and i32 %shr422.i886, 63, !dbg !1059
  %idxprom424.i888 = zext i32 %and423.i887 to i64, !dbg !1059
  %arrayidx425.i889 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom424.i888, !dbg !1059
  %1329 = load i32, i32* %arrayidx425.i889, align 4, !dbg !1059
  %1330 = load i32, i32* %u.i417, align 4, !dbg !1059
  %shr426.i890 = lshr i32 %1330, 10, !dbg !1059
  %and427.i891 = and i32 %shr426.i890, 63, !dbg !1059
  %idxprom428.i892 = zext i32 %and427.i891 to i64, !dbg !1059
  %arrayidx429.i893 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom428.i892, !dbg !1059
  %1331 = load i32, i32* %arrayidx429.i893, align 4, !dbg !1059
  %xor430.i894 = xor i32 %1329, %1331, !dbg !1059
  %1332 = load i32, i32* %u.i417, align 4, !dbg !1059
  %shr431.i895 = lshr i32 %1332, 18, !dbg !1059
  %and432.i896 = and i32 %shr431.i895, 63, !dbg !1059
  %idxprom433.i897 = zext i32 %and432.i896 to i64, !dbg !1059
  %arrayidx434.i898 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom433.i897, !dbg !1059
  %1333 = load i32, i32* %arrayidx434.i898, align 4, !dbg !1059
  %xor435.i899 = xor i32 %xor430.i894, %1333, !dbg !1059
  %1334 = load i32, i32* %u.i417, align 4, !dbg !1059
  %shr436.i900 = lshr i32 %1334, 26, !dbg !1059
  %idxprom438.i901 = zext i32 %shr436.i900 to i64, !dbg !1059
  %arrayidx439.i902 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom438.i901, !dbg !1059
  %1335 = load i32, i32* %arrayidx439.i902, align 4, !dbg !1059
  %xor440.i903 = xor i32 %xor435.i899, %1335, !dbg !1059
  %1336 = load i32, i32* %t.i416, align 4, !dbg !1059
  %shr441.i904 = lshr i32 %1336, 2, !dbg !1059
  %and442.i905 = and i32 %shr441.i904, 63, !dbg !1059
  %idxprom443.i906 = zext i32 %and442.i905 to i64, !dbg !1059
  %arrayidx444.i907 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom443.i906, !dbg !1059
  %1337 = load i32, i32* %arrayidx444.i907, align 4, !dbg !1059
  %xor445.i908 = xor i32 %xor440.i903, %1337, !dbg !1059
  %1338 = load i32, i32* %t.i416, align 4, !dbg !1059
  %shr446.i909 = lshr i32 %1338, 10, !dbg !1059
  %and447.i910 = and i32 %shr446.i909, 63, !dbg !1059
  %idxprom448.i911 = zext i32 %and447.i910 to i64, !dbg !1059
  %arrayidx449.i912 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom448.i911, !dbg !1059
  %1339 = load i32, i32* %arrayidx449.i912, align 4, !dbg !1059
  %xor450.i913 = xor i32 %xor445.i908, %1339, !dbg !1059
  %1340 = load i32, i32* %t.i416, align 4, !dbg !1059
  %shr451.i914 = lshr i32 %1340, 18, !dbg !1059
  %and452.i915 = and i32 %shr451.i914, 63, !dbg !1059
  %idxprom453.i916 = zext i32 %and452.i915 to i64, !dbg !1059
  %arrayidx454.i917 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom453.i916, !dbg !1059
  %1341 = load i32, i32* %arrayidx454.i917, align 4, !dbg !1059
  %xor455.i918 = xor i32 %xor450.i913, %1341, !dbg !1059
  %1342 = load i32, i32* %t.i416, align 4, !dbg !1059
  %shr456.i919 = lshr i32 %1342, 26, !dbg !1059
  %idxprom458.i920 = zext i32 %shr456.i919 to i64, !dbg !1059
  %arrayidx459.i921 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom458.i920, !dbg !1059
  %1343 = load i32, i32* %arrayidx459.i921, align 4, !dbg !1059
  %xor460.i922 = xor i32 %xor455.i918, %1343, !dbg !1059
  %1344 = load i32, i32* %l.i414, align 4, !dbg !1059
  %xor461.i923 = xor i32 %1344, %xor460.i922, !dbg !1059
  store i32 %xor461.i923, i32* %l.i414, align 4, !dbg !1059
  %1345 = load i32, i32* %l.i414, align 4, !dbg !1060
  %1346 = load i32*, i32** %s.i418, align 8, !dbg !1060
  %arrayidx462.i924 = getelementptr inbounds i32, i32* %1346, i64 18, !dbg !1060
  %1347 = load i32, i32* %arrayidx462.i924, align 4, !dbg !1060
  %xor463.i925 = xor i32 %1345, %1347, !dbg !1060
  store i32 %xor463.i925, i32* %u.i417, align 4, !dbg !1060
  %1348 = load i32, i32* %l.i414, align 4, !dbg !1060
  %1349 = load i32*, i32** %s.i418, align 8, !dbg !1060
  %arrayidx464.i926 = getelementptr inbounds i32, i32* %1349, i64 19, !dbg !1060
  %1350 = load i32, i32* %arrayidx464.i926, align 4, !dbg !1060
  %xor465.i927 = xor i32 %1348, %1350, !dbg !1060
  store i32 %xor465.i927, i32* %t.i416, align 4, !dbg !1060
  %1351 = load i32, i32* %t.i416, align 4, !dbg !805
  %1352 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1351) #7, !dbg !805, !srcloc !149
  store i32 %1352, i32* %ret466.i442, align 4, !dbg !805
  %1353 = load i32, i32* %ret466.i442, align 4, !dbg !805
  store i32 %1353, i32* %tmp467.i443, align 4, !dbg !805
  %1354 = load i32, i32* %tmp467.i443, align 4, !dbg !805
  store i32 %1354, i32* %t.i416, align 4, !dbg !1060
  %1355 = load i32, i32* %u.i417, align 4, !dbg !1060
  %shr468.i928 = lshr i32 %1355, 2, !dbg !1060
  %and469.i929 = and i32 %shr468.i928, 63, !dbg !1060
  %idxprom470.i930 = zext i32 %and469.i929 to i64, !dbg !1060
  %arrayidx471.i931 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom470.i930, !dbg !1060
  %1356 = load i32, i32* %arrayidx471.i931, align 4, !dbg !1060
  %1357 = load i32, i32* %u.i417, align 4, !dbg !1060
  %shr472.i932 = lshr i32 %1357, 10, !dbg !1060
  %and473.i933 = and i32 %shr472.i932, 63, !dbg !1060
  %idxprom474.i934 = zext i32 %and473.i933 to i64, !dbg !1060
  %arrayidx475.i935 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom474.i934, !dbg !1060
  %1358 = load i32, i32* %arrayidx475.i935, align 4, !dbg !1060
  %xor476.i936 = xor i32 %1356, %1358, !dbg !1060
  %1359 = load i32, i32* %u.i417, align 4, !dbg !1060
  %shr477.i937 = lshr i32 %1359, 18, !dbg !1060
  %and478.i938 = and i32 %shr477.i937, 63, !dbg !1060
  %idxprom479.i939 = zext i32 %and478.i938 to i64, !dbg !1060
  %arrayidx480.i940 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom479.i939, !dbg !1060
  %1360 = load i32, i32* %arrayidx480.i940, align 4, !dbg !1060
  %xor481.i941 = xor i32 %xor476.i936, %1360, !dbg !1060
  %1361 = load i32, i32* %u.i417, align 4, !dbg !1060
  %shr482.i942 = lshr i32 %1361, 26, !dbg !1060
  %idxprom484.i943 = zext i32 %shr482.i942 to i64, !dbg !1060
  %arrayidx485.i944 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom484.i943, !dbg !1060
  %1362 = load i32, i32* %arrayidx485.i944, align 4, !dbg !1060
  %xor486.i945 = xor i32 %xor481.i941, %1362, !dbg !1060
  %1363 = load i32, i32* %t.i416, align 4, !dbg !1060
  %shr487.i946 = lshr i32 %1363, 2, !dbg !1060
  %and488.i947 = and i32 %shr487.i946, 63, !dbg !1060
  %idxprom489.i948 = zext i32 %and488.i947 to i64, !dbg !1060
  %arrayidx490.i949 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom489.i948, !dbg !1060
  %1364 = load i32, i32* %arrayidx490.i949, align 4, !dbg !1060
  %xor491.i950 = xor i32 %xor486.i945, %1364, !dbg !1060
  %1365 = load i32, i32* %t.i416, align 4, !dbg !1060
  %shr492.i951 = lshr i32 %1365, 10, !dbg !1060
  %and493.i952 = and i32 %shr492.i951, 63, !dbg !1060
  %idxprom494.i953 = zext i32 %and493.i952 to i64, !dbg !1060
  %arrayidx495.i954 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom494.i953, !dbg !1060
  %1366 = load i32, i32* %arrayidx495.i954, align 4, !dbg !1060
  %xor496.i955 = xor i32 %xor491.i950, %1366, !dbg !1060
  %1367 = load i32, i32* %t.i416, align 4, !dbg !1060
  %shr497.i956 = lshr i32 %1367, 18, !dbg !1060
  %and498.i957 = and i32 %shr497.i956, 63, !dbg !1060
  %idxprom499.i958 = zext i32 %and498.i957 to i64, !dbg !1060
  %arrayidx500.i959 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom499.i958, !dbg !1060
  %1368 = load i32, i32* %arrayidx500.i959, align 4, !dbg !1060
  %xor501.i960 = xor i32 %xor496.i955, %1368, !dbg !1060
  %1369 = load i32, i32* %t.i416, align 4, !dbg !1060
  %shr502.i961 = lshr i32 %1369, 26, !dbg !1060
  %idxprom504.i962 = zext i32 %shr502.i961 to i64, !dbg !1060
  %arrayidx505.i963 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom504.i962, !dbg !1060
  %1370 = load i32, i32* %arrayidx505.i963, align 4, !dbg !1060
  %xor506.i964 = xor i32 %xor501.i960, %1370, !dbg !1060
  %1371 = load i32, i32* %r.i415, align 4, !dbg !1060
  %xor507.i965 = xor i32 %1371, %xor506.i964, !dbg !1060
  store i32 %xor507.i965, i32* %r.i415, align 4, !dbg !1060
  %1372 = load i32, i32* %r.i415, align 4, !dbg !1061
  %1373 = load i32*, i32** %s.i418, align 8, !dbg !1061
  %arrayidx508.i966 = getelementptr inbounds i32, i32* %1373, i64 20, !dbg !1061
  %1374 = load i32, i32* %arrayidx508.i966, align 4, !dbg !1061
  %xor509.i967 = xor i32 %1372, %1374, !dbg !1061
  store i32 %xor509.i967, i32* %u.i417, align 4, !dbg !1061
  %1375 = load i32, i32* %r.i415, align 4, !dbg !1061
  %1376 = load i32*, i32** %s.i418, align 8, !dbg !1061
  %arrayidx510.i968 = getelementptr inbounds i32, i32* %1376, i64 21, !dbg !1061
  %1377 = load i32, i32* %arrayidx510.i968, align 4, !dbg !1061
  %xor511.i969 = xor i32 %1375, %1377, !dbg !1061
  store i32 %xor511.i969, i32* %t.i416, align 4, !dbg !1061
  %1378 = load i32, i32* %t.i416, align 4, !dbg !806
  %1379 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1378) #7, !dbg !806, !srcloc !155
  store i32 %1379, i32* %ret512.i444, align 4, !dbg !806
  %1380 = load i32, i32* %ret512.i444, align 4, !dbg !806
  store i32 %1380, i32* %tmp513.i445, align 4, !dbg !806
  %1381 = load i32, i32* %tmp513.i445, align 4, !dbg !806
  store i32 %1381, i32* %t.i416, align 4, !dbg !1061
  %1382 = load i32, i32* %u.i417, align 4, !dbg !1061
  %shr514.i970 = lshr i32 %1382, 2, !dbg !1061
  %and515.i971 = and i32 %shr514.i970, 63, !dbg !1061
  %idxprom516.i972 = zext i32 %and515.i971 to i64, !dbg !1061
  %arrayidx517.i973 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom516.i972, !dbg !1061
  %1383 = load i32, i32* %arrayidx517.i973, align 4, !dbg !1061
  %1384 = load i32, i32* %u.i417, align 4, !dbg !1061
  %shr518.i974 = lshr i32 %1384, 10, !dbg !1061
  %and519.i975 = and i32 %shr518.i974, 63, !dbg !1061
  %idxprom520.i976 = zext i32 %and519.i975 to i64, !dbg !1061
  %arrayidx521.i977 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom520.i976, !dbg !1061
  %1385 = load i32, i32* %arrayidx521.i977, align 4, !dbg !1061
  %xor522.i978 = xor i32 %1383, %1385, !dbg !1061
  %1386 = load i32, i32* %u.i417, align 4, !dbg !1061
  %shr523.i979 = lshr i32 %1386, 18, !dbg !1061
  %and524.i980 = and i32 %shr523.i979, 63, !dbg !1061
  %idxprom525.i981 = zext i32 %and524.i980 to i64, !dbg !1061
  %arrayidx526.i982 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom525.i981, !dbg !1061
  %1387 = load i32, i32* %arrayidx526.i982, align 4, !dbg !1061
  %xor527.i983 = xor i32 %xor522.i978, %1387, !dbg !1061
  %1388 = load i32, i32* %u.i417, align 4, !dbg !1061
  %shr528.i984 = lshr i32 %1388, 26, !dbg !1061
  %idxprom530.i985 = zext i32 %shr528.i984 to i64, !dbg !1061
  %arrayidx531.i986 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom530.i985, !dbg !1061
  %1389 = load i32, i32* %arrayidx531.i986, align 4, !dbg !1061
  %xor532.i987 = xor i32 %xor527.i983, %1389, !dbg !1061
  %1390 = load i32, i32* %t.i416, align 4, !dbg !1061
  %shr533.i988 = lshr i32 %1390, 2, !dbg !1061
  %and534.i989 = and i32 %shr533.i988, 63, !dbg !1061
  %idxprom535.i990 = zext i32 %and534.i989 to i64, !dbg !1061
  %arrayidx536.i991 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom535.i990, !dbg !1061
  %1391 = load i32, i32* %arrayidx536.i991, align 4, !dbg !1061
  %xor537.i992 = xor i32 %xor532.i987, %1391, !dbg !1061
  %1392 = load i32, i32* %t.i416, align 4, !dbg !1061
  %shr538.i993 = lshr i32 %1392, 10, !dbg !1061
  %and539.i994 = and i32 %shr538.i993, 63, !dbg !1061
  %idxprom540.i995 = zext i32 %and539.i994 to i64, !dbg !1061
  %arrayidx541.i996 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom540.i995, !dbg !1061
  %1393 = load i32, i32* %arrayidx541.i996, align 4, !dbg !1061
  %xor542.i997 = xor i32 %xor537.i992, %1393, !dbg !1061
  %1394 = load i32, i32* %t.i416, align 4, !dbg !1061
  %shr543.i998 = lshr i32 %1394, 18, !dbg !1061
  %and544.i999 = and i32 %shr543.i998, 63, !dbg !1061
  %idxprom545.i1000 = zext i32 %and544.i999 to i64, !dbg !1061
  %arrayidx546.i1001 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom545.i1000, !dbg !1061
  %1395 = load i32, i32* %arrayidx546.i1001, align 4, !dbg !1061
  %xor547.i1002 = xor i32 %xor542.i997, %1395, !dbg !1061
  %1396 = load i32, i32* %t.i416, align 4, !dbg !1061
  %shr548.i1003 = lshr i32 %1396, 26, !dbg !1061
  %idxprom550.i1004 = zext i32 %shr548.i1003 to i64, !dbg !1061
  %arrayidx551.i1005 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom550.i1004, !dbg !1061
  %1397 = load i32, i32* %arrayidx551.i1005, align 4, !dbg !1061
  %xor552.i1006 = xor i32 %xor547.i1002, %1397, !dbg !1061
  %1398 = load i32, i32* %l.i414, align 4, !dbg !1061
  %xor553.i1007 = xor i32 %1398, %xor552.i1006, !dbg !1061
  store i32 %xor553.i1007, i32* %l.i414, align 4, !dbg !1061
  %1399 = load i32, i32* %l.i414, align 4, !dbg !1062
  %1400 = load i32*, i32** %s.i418, align 8, !dbg !1062
  %arrayidx554.i1008 = getelementptr inbounds i32, i32* %1400, i64 22, !dbg !1062
  %1401 = load i32, i32* %arrayidx554.i1008, align 4, !dbg !1062
  %xor555.i1009 = xor i32 %1399, %1401, !dbg !1062
  store i32 %xor555.i1009, i32* %u.i417, align 4, !dbg !1062
  %1402 = load i32, i32* %l.i414, align 4, !dbg !1062
  %1403 = load i32*, i32** %s.i418, align 8, !dbg !1062
  %arrayidx556.i1010 = getelementptr inbounds i32, i32* %1403, i64 23, !dbg !1062
  %1404 = load i32, i32* %arrayidx556.i1010, align 4, !dbg !1062
  %xor557.i1011 = xor i32 %1402, %1404, !dbg !1062
  store i32 %xor557.i1011, i32* %t.i416, align 4, !dbg !1062
  %1405 = load i32, i32* %t.i416, align 4, !dbg !807
  %1406 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1405) #7, !dbg !807, !srcloc !161
  store i32 %1406, i32* %ret558.i446, align 4, !dbg !807
  %1407 = load i32, i32* %ret558.i446, align 4, !dbg !807
  store i32 %1407, i32* %tmp559.i447, align 4, !dbg !807
  %1408 = load i32, i32* %tmp559.i447, align 4, !dbg !807
  store i32 %1408, i32* %t.i416, align 4, !dbg !1062
  %1409 = load i32, i32* %u.i417, align 4, !dbg !1062
  %shr560.i1012 = lshr i32 %1409, 2, !dbg !1062
  %and561.i1013 = and i32 %shr560.i1012, 63, !dbg !1062
  %idxprom562.i1014 = zext i32 %and561.i1013 to i64, !dbg !1062
  %arrayidx563.i1015 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom562.i1014, !dbg !1062
  %1410 = load i32, i32* %arrayidx563.i1015, align 4, !dbg !1062
  %1411 = load i32, i32* %u.i417, align 4, !dbg !1062
  %shr564.i1016 = lshr i32 %1411, 10, !dbg !1062
  %and565.i1017 = and i32 %shr564.i1016, 63, !dbg !1062
  %idxprom566.i1018 = zext i32 %and565.i1017 to i64, !dbg !1062
  %arrayidx567.i1019 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom566.i1018, !dbg !1062
  %1412 = load i32, i32* %arrayidx567.i1019, align 4, !dbg !1062
  %xor568.i1020 = xor i32 %1410, %1412, !dbg !1062
  %1413 = load i32, i32* %u.i417, align 4, !dbg !1062
  %shr569.i1021 = lshr i32 %1413, 18, !dbg !1062
  %and570.i1022 = and i32 %shr569.i1021, 63, !dbg !1062
  %idxprom571.i1023 = zext i32 %and570.i1022 to i64, !dbg !1062
  %arrayidx572.i1024 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom571.i1023, !dbg !1062
  %1414 = load i32, i32* %arrayidx572.i1024, align 4, !dbg !1062
  %xor573.i1025 = xor i32 %xor568.i1020, %1414, !dbg !1062
  %1415 = load i32, i32* %u.i417, align 4, !dbg !1062
  %shr574.i1026 = lshr i32 %1415, 26, !dbg !1062
  %idxprom576.i1027 = zext i32 %shr574.i1026 to i64, !dbg !1062
  %arrayidx577.i1028 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom576.i1027, !dbg !1062
  %1416 = load i32, i32* %arrayidx577.i1028, align 4, !dbg !1062
  %xor578.i1029 = xor i32 %xor573.i1025, %1416, !dbg !1062
  %1417 = load i32, i32* %t.i416, align 4, !dbg !1062
  %shr579.i1030 = lshr i32 %1417, 2, !dbg !1062
  %and580.i1031 = and i32 %shr579.i1030, 63, !dbg !1062
  %idxprom581.i1032 = zext i32 %and580.i1031 to i64, !dbg !1062
  %arrayidx582.i1033 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom581.i1032, !dbg !1062
  %1418 = load i32, i32* %arrayidx582.i1033, align 4, !dbg !1062
  %xor583.i1034 = xor i32 %xor578.i1029, %1418, !dbg !1062
  %1419 = load i32, i32* %t.i416, align 4, !dbg !1062
  %shr584.i1035 = lshr i32 %1419, 10, !dbg !1062
  %and585.i1036 = and i32 %shr584.i1035, 63, !dbg !1062
  %idxprom586.i1037 = zext i32 %and585.i1036 to i64, !dbg !1062
  %arrayidx587.i1038 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom586.i1037, !dbg !1062
  %1420 = load i32, i32* %arrayidx587.i1038, align 4, !dbg !1062
  %xor588.i1039 = xor i32 %xor583.i1034, %1420, !dbg !1062
  %1421 = load i32, i32* %t.i416, align 4, !dbg !1062
  %shr589.i1040 = lshr i32 %1421, 18, !dbg !1062
  %and590.i1041 = and i32 %shr589.i1040, 63, !dbg !1062
  %idxprom591.i1042 = zext i32 %and590.i1041 to i64, !dbg !1062
  %arrayidx592.i1043 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom591.i1042, !dbg !1062
  %1422 = load i32, i32* %arrayidx592.i1043, align 4, !dbg !1062
  %xor593.i1044 = xor i32 %xor588.i1039, %1422, !dbg !1062
  %1423 = load i32, i32* %t.i416, align 4, !dbg !1062
  %shr594.i1045 = lshr i32 %1423, 26, !dbg !1062
  %idxprom596.i1046 = zext i32 %shr594.i1045 to i64, !dbg !1062
  %arrayidx597.i1047 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom596.i1046, !dbg !1062
  %1424 = load i32, i32* %arrayidx597.i1047, align 4, !dbg !1062
  %xor598.i1048 = xor i32 %xor593.i1044, %1424, !dbg !1062
  %1425 = load i32, i32* %r.i415, align 4, !dbg !1062
  %xor599.i1049 = xor i32 %1425, %xor598.i1048, !dbg !1062
  store i32 %xor599.i1049, i32* %r.i415, align 4, !dbg !1062
  %1426 = load i32, i32* %r.i415, align 4, !dbg !1063
  %1427 = load i32*, i32** %s.i418, align 8, !dbg !1063
  %arrayidx600.i1050 = getelementptr inbounds i32, i32* %1427, i64 24, !dbg !1063
  %1428 = load i32, i32* %arrayidx600.i1050, align 4, !dbg !1063
  %xor601.i1051 = xor i32 %1426, %1428, !dbg !1063
  store i32 %xor601.i1051, i32* %u.i417, align 4, !dbg !1063
  %1429 = load i32, i32* %r.i415, align 4, !dbg !1063
  %1430 = load i32*, i32** %s.i418, align 8, !dbg !1063
  %arrayidx602.i1052 = getelementptr inbounds i32, i32* %1430, i64 25, !dbg !1063
  %1431 = load i32, i32* %arrayidx602.i1052, align 4, !dbg !1063
  %xor603.i1053 = xor i32 %1429, %1431, !dbg !1063
  store i32 %xor603.i1053, i32* %t.i416, align 4, !dbg !1063
  %1432 = load i32, i32* %t.i416, align 4, !dbg !808
  %1433 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1432) #7, !dbg !808, !srcloc !167
  store i32 %1433, i32* %ret604.i448, align 4, !dbg !808
  %1434 = load i32, i32* %ret604.i448, align 4, !dbg !808
  store i32 %1434, i32* %tmp605.i449, align 4, !dbg !808
  %1435 = load i32, i32* %tmp605.i449, align 4, !dbg !808
  store i32 %1435, i32* %t.i416, align 4, !dbg !1063
  %1436 = load i32, i32* %u.i417, align 4, !dbg !1063
  %shr606.i1054 = lshr i32 %1436, 2, !dbg !1063
  %and607.i1055 = and i32 %shr606.i1054, 63, !dbg !1063
  %idxprom608.i1056 = zext i32 %and607.i1055 to i64, !dbg !1063
  %arrayidx609.i1057 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom608.i1056, !dbg !1063
  %1437 = load i32, i32* %arrayidx609.i1057, align 4, !dbg !1063
  %1438 = load i32, i32* %u.i417, align 4, !dbg !1063
  %shr610.i1058 = lshr i32 %1438, 10, !dbg !1063
  %and611.i1059 = and i32 %shr610.i1058, 63, !dbg !1063
  %idxprom612.i1060 = zext i32 %and611.i1059 to i64, !dbg !1063
  %arrayidx613.i1061 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom612.i1060, !dbg !1063
  %1439 = load i32, i32* %arrayidx613.i1061, align 4, !dbg !1063
  %xor614.i1062 = xor i32 %1437, %1439, !dbg !1063
  %1440 = load i32, i32* %u.i417, align 4, !dbg !1063
  %shr615.i1063 = lshr i32 %1440, 18, !dbg !1063
  %and616.i1064 = and i32 %shr615.i1063, 63, !dbg !1063
  %idxprom617.i1065 = zext i32 %and616.i1064 to i64, !dbg !1063
  %arrayidx618.i1066 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom617.i1065, !dbg !1063
  %1441 = load i32, i32* %arrayidx618.i1066, align 4, !dbg !1063
  %xor619.i1067 = xor i32 %xor614.i1062, %1441, !dbg !1063
  %1442 = load i32, i32* %u.i417, align 4, !dbg !1063
  %shr620.i1068 = lshr i32 %1442, 26, !dbg !1063
  %idxprom622.i1069 = zext i32 %shr620.i1068 to i64, !dbg !1063
  %arrayidx623.i1070 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom622.i1069, !dbg !1063
  %1443 = load i32, i32* %arrayidx623.i1070, align 4, !dbg !1063
  %xor624.i1071 = xor i32 %xor619.i1067, %1443, !dbg !1063
  %1444 = load i32, i32* %t.i416, align 4, !dbg !1063
  %shr625.i1072 = lshr i32 %1444, 2, !dbg !1063
  %and626.i1073 = and i32 %shr625.i1072, 63, !dbg !1063
  %idxprom627.i1074 = zext i32 %and626.i1073 to i64, !dbg !1063
  %arrayidx628.i1075 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom627.i1074, !dbg !1063
  %1445 = load i32, i32* %arrayidx628.i1075, align 4, !dbg !1063
  %xor629.i1076 = xor i32 %xor624.i1071, %1445, !dbg !1063
  %1446 = load i32, i32* %t.i416, align 4, !dbg !1063
  %shr630.i1077 = lshr i32 %1446, 10, !dbg !1063
  %and631.i1078 = and i32 %shr630.i1077, 63, !dbg !1063
  %idxprom632.i1079 = zext i32 %and631.i1078 to i64, !dbg !1063
  %arrayidx633.i1080 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom632.i1079, !dbg !1063
  %1447 = load i32, i32* %arrayidx633.i1080, align 4, !dbg !1063
  %xor634.i1081 = xor i32 %xor629.i1076, %1447, !dbg !1063
  %1448 = load i32, i32* %t.i416, align 4, !dbg !1063
  %shr635.i1082 = lshr i32 %1448, 18, !dbg !1063
  %and636.i1083 = and i32 %shr635.i1082, 63, !dbg !1063
  %idxprom637.i1084 = zext i32 %and636.i1083 to i64, !dbg !1063
  %arrayidx638.i1085 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom637.i1084, !dbg !1063
  %1449 = load i32, i32* %arrayidx638.i1085, align 4, !dbg !1063
  %xor639.i1086 = xor i32 %xor634.i1081, %1449, !dbg !1063
  %1450 = load i32, i32* %t.i416, align 4, !dbg !1063
  %shr640.i1087 = lshr i32 %1450, 26, !dbg !1063
  %idxprom642.i1088 = zext i32 %shr640.i1087 to i64, !dbg !1063
  %arrayidx643.i1089 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom642.i1088, !dbg !1063
  %1451 = load i32, i32* %arrayidx643.i1089, align 4, !dbg !1063
  %xor644.i1090 = xor i32 %xor639.i1086, %1451, !dbg !1063
  %1452 = load i32, i32* %l.i414, align 4, !dbg !1063
  %xor645.i1091 = xor i32 %1452, %xor644.i1090, !dbg !1063
  store i32 %xor645.i1091, i32* %l.i414, align 4, !dbg !1063
  %1453 = load i32, i32* %l.i414, align 4, !dbg !1064
  %1454 = load i32*, i32** %s.i418, align 8, !dbg !1064
  %arrayidx646.i1092 = getelementptr inbounds i32, i32* %1454, i64 26, !dbg !1064
  %1455 = load i32, i32* %arrayidx646.i1092, align 4, !dbg !1064
  %xor647.i1093 = xor i32 %1453, %1455, !dbg !1064
  store i32 %xor647.i1093, i32* %u.i417, align 4, !dbg !1064
  %1456 = load i32, i32* %l.i414, align 4, !dbg !1064
  %1457 = load i32*, i32** %s.i418, align 8, !dbg !1064
  %arrayidx648.i1094 = getelementptr inbounds i32, i32* %1457, i64 27, !dbg !1064
  %1458 = load i32, i32* %arrayidx648.i1094, align 4, !dbg !1064
  %xor649.i1095 = xor i32 %1456, %1458, !dbg !1064
  store i32 %xor649.i1095, i32* %t.i416, align 4, !dbg !1064
  %1459 = load i32, i32* %t.i416, align 4, !dbg !809
  %1460 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1459) #7, !dbg !809, !srcloc !173
  store i32 %1460, i32* %ret650.i450, align 4, !dbg !809
  %1461 = load i32, i32* %ret650.i450, align 4, !dbg !809
  store i32 %1461, i32* %tmp651.i451, align 4, !dbg !809
  %1462 = load i32, i32* %tmp651.i451, align 4, !dbg !809
  store i32 %1462, i32* %t.i416, align 4, !dbg !1064
  %1463 = load i32, i32* %u.i417, align 4, !dbg !1064
  %shr652.i1096 = lshr i32 %1463, 2, !dbg !1064
  %and653.i1097 = and i32 %shr652.i1096, 63, !dbg !1064
  %idxprom654.i1098 = zext i32 %and653.i1097 to i64, !dbg !1064
  %arrayidx655.i1099 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom654.i1098, !dbg !1064
  %1464 = load i32, i32* %arrayidx655.i1099, align 4, !dbg !1064
  %1465 = load i32, i32* %u.i417, align 4, !dbg !1064
  %shr656.i1100 = lshr i32 %1465, 10, !dbg !1064
  %and657.i1101 = and i32 %shr656.i1100, 63, !dbg !1064
  %idxprom658.i1102 = zext i32 %and657.i1101 to i64, !dbg !1064
  %arrayidx659.i1103 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom658.i1102, !dbg !1064
  %1466 = load i32, i32* %arrayidx659.i1103, align 4, !dbg !1064
  %xor660.i1104 = xor i32 %1464, %1466, !dbg !1064
  %1467 = load i32, i32* %u.i417, align 4, !dbg !1064
  %shr661.i1105 = lshr i32 %1467, 18, !dbg !1064
  %and662.i1106 = and i32 %shr661.i1105, 63, !dbg !1064
  %idxprom663.i1107 = zext i32 %and662.i1106 to i64, !dbg !1064
  %arrayidx664.i1108 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom663.i1107, !dbg !1064
  %1468 = load i32, i32* %arrayidx664.i1108, align 4, !dbg !1064
  %xor665.i1109 = xor i32 %xor660.i1104, %1468, !dbg !1064
  %1469 = load i32, i32* %u.i417, align 4, !dbg !1064
  %shr666.i1110 = lshr i32 %1469, 26, !dbg !1064
  %idxprom668.i1111 = zext i32 %shr666.i1110 to i64, !dbg !1064
  %arrayidx669.i1112 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom668.i1111, !dbg !1064
  %1470 = load i32, i32* %arrayidx669.i1112, align 4, !dbg !1064
  %xor670.i1113 = xor i32 %xor665.i1109, %1470, !dbg !1064
  %1471 = load i32, i32* %t.i416, align 4, !dbg !1064
  %shr671.i1114 = lshr i32 %1471, 2, !dbg !1064
  %and672.i1115 = and i32 %shr671.i1114, 63, !dbg !1064
  %idxprom673.i1116 = zext i32 %and672.i1115 to i64, !dbg !1064
  %arrayidx674.i1117 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom673.i1116, !dbg !1064
  %1472 = load i32, i32* %arrayidx674.i1117, align 4, !dbg !1064
  %xor675.i1118 = xor i32 %xor670.i1113, %1472, !dbg !1064
  %1473 = load i32, i32* %t.i416, align 4, !dbg !1064
  %shr676.i1119 = lshr i32 %1473, 10, !dbg !1064
  %and677.i1120 = and i32 %shr676.i1119, 63, !dbg !1064
  %idxprom678.i1121 = zext i32 %and677.i1120 to i64, !dbg !1064
  %arrayidx679.i1122 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom678.i1121, !dbg !1064
  %1474 = load i32, i32* %arrayidx679.i1122, align 4, !dbg !1064
  %xor680.i1123 = xor i32 %xor675.i1118, %1474, !dbg !1064
  %1475 = load i32, i32* %t.i416, align 4, !dbg !1064
  %shr681.i1124 = lshr i32 %1475, 18, !dbg !1064
  %and682.i1125 = and i32 %shr681.i1124, 63, !dbg !1064
  %idxprom683.i1126 = zext i32 %and682.i1125 to i64, !dbg !1064
  %arrayidx684.i1127 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom683.i1126, !dbg !1064
  %1476 = load i32, i32* %arrayidx684.i1127, align 4, !dbg !1064
  %xor685.i1128 = xor i32 %xor680.i1123, %1476, !dbg !1064
  %1477 = load i32, i32* %t.i416, align 4, !dbg !1064
  %shr686.i1129 = lshr i32 %1477, 26, !dbg !1064
  %idxprom688.i1130 = zext i32 %shr686.i1129 to i64, !dbg !1064
  %arrayidx689.i1131 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom688.i1130, !dbg !1064
  %1478 = load i32, i32* %arrayidx689.i1131, align 4, !dbg !1064
  %xor690.i1132 = xor i32 %xor685.i1128, %1478, !dbg !1064
  %1479 = load i32, i32* %r.i415, align 4, !dbg !1064
  %xor691.i1133 = xor i32 %1479, %xor690.i1132, !dbg !1064
  store i32 %xor691.i1133, i32* %r.i415, align 4, !dbg !1064
  %1480 = load i32, i32* %r.i415, align 4, !dbg !1065
  %1481 = load i32*, i32** %s.i418, align 8, !dbg !1065
  %arrayidx692.i1134 = getelementptr inbounds i32, i32* %1481, i64 28, !dbg !1065
  %1482 = load i32, i32* %arrayidx692.i1134, align 4, !dbg !1065
  %xor693.i1135 = xor i32 %1480, %1482, !dbg !1065
  store i32 %xor693.i1135, i32* %u.i417, align 4, !dbg !1065
  %1483 = load i32, i32* %r.i415, align 4, !dbg !1065
  %1484 = load i32*, i32** %s.i418, align 8, !dbg !1065
  %arrayidx694.i1136 = getelementptr inbounds i32, i32* %1484, i64 29, !dbg !1065
  %1485 = load i32, i32* %arrayidx694.i1136, align 4, !dbg !1065
  %xor695.i1137 = xor i32 %1483, %1485, !dbg !1065
  store i32 %xor695.i1137, i32* %t.i416, align 4, !dbg !1065
  %1486 = load i32, i32* %t.i416, align 4, !dbg !810
  %1487 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1486) #7, !dbg !810, !srcloc !179
  store i32 %1487, i32* %ret696.i452, align 4, !dbg !810
  %1488 = load i32, i32* %ret696.i452, align 4, !dbg !810
  store i32 %1488, i32* %tmp697.i453, align 4, !dbg !810
  %1489 = load i32, i32* %tmp697.i453, align 4, !dbg !810
  store i32 %1489, i32* %t.i416, align 4, !dbg !1065
  %1490 = load i32, i32* %u.i417, align 4, !dbg !1065
  %shr698.i1138 = lshr i32 %1490, 2, !dbg !1065
  %and699.i1139 = and i32 %shr698.i1138, 63, !dbg !1065
  %idxprom700.i1140 = zext i32 %and699.i1139 to i64, !dbg !1065
  %arrayidx701.i1141 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom700.i1140, !dbg !1065
  %1491 = load i32, i32* %arrayidx701.i1141, align 4, !dbg !1065
  %1492 = load i32, i32* %u.i417, align 4, !dbg !1065
  %shr702.i1142 = lshr i32 %1492, 10, !dbg !1065
  %and703.i1143 = and i32 %shr702.i1142, 63, !dbg !1065
  %idxprom704.i1144 = zext i32 %and703.i1143 to i64, !dbg !1065
  %arrayidx705.i1145 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom704.i1144, !dbg !1065
  %1493 = load i32, i32* %arrayidx705.i1145, align 4, !dbg !1065
  %xor706.i1146 = xor i32 %1491, %1493, !dbg !1065
  %1494 = load i32, i32* %u.i417, align 4, !dbg !1065
  %shr707.i1147 = lshr i32 %1494, 18, !dbg !1065
  %and708.i1148 = and i32 %shr707.i1147, 63, !dbg !1065
  %idxprom709.i1149 = zext i32 %and708.i1148 to i64, !dbg !1065
  %arrayidx710.i1150 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom709.i1149, !dbg !1065
  %1495 = load i32, i32* %arrayidx710.i1150, align 4, !dbg !1065
  %xor711.i1151 = xor i32 %xor706.i1146, %1495, !dbg !1065
  %1496 = load i32, i32* %u.i417, align 4, !dbg !1065
  %shr712.i1152 = lshr i32 %1496, 26, !dbg !1065
  %idxprom714.i1153 = zext i32 %shr712.i1152 to i64, !dbg !1065
  %arrayidx715.i1154 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom714.i1153, !dbg !1065
  %1497 = load i32, i32* %arrayidx715.i1154, align 4, !dbg !1065
  %xor716.i1155 = xor i32 %xor711.i1151, %1497, !dbg !1065
  %1498 = load i32, i32* %t.i416, align 4, !dbg !1065
  %shr717.i1156 = lshr i32 %1498, 2, !dbg !1065
  %and718.i1157 = and i32 %shr717.i1156, 63, !dbg !1065
  %idxprom719.i1158 = zext i32 %and718.i1157 to i64, !dbg !1065
  %arrayidx720.i1159 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom719.i1158, !dbg !1065
  %1499 = load i32, i32* %arrayidx720.i1159, align 4, !dbg !1065
  %xor721.i1160 = xor i32 %xor716.i1155, %1499, !dbg !1065
  %1500 = load i32, i32* %t.i416, align 4, !dbg !1065
  %shr722.i1161 = lshr i32 %1500, 10, !dbg !1065
  %and723.i1162 = and i32 %shr722.i1161, 63, !dbg !1065
  %idxprom724.i1163 = zext i32 %and723.i1162 to i64, !dbg !1065
  %arrayidx725.i1164 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom724.i1163, !dbg !1065
  %1501 = load i32, i32* %arrayidx725.i1164, align 4, !dbg !1065
  %xor726.i1165 = xor i32 %xor721.i1160, %1501, !dbg !1065
  %1502 = load i32, i32* %t.i416, align 4, !dbg !1065
  %shr727.i1166 = lshr i32 %1502, 18, !dbg !1065
  %and728.i1167 = and i32 %shr727.i1166, 63, !dbg !1065
  %idxprom729.i1168 = zext i32 %and728.i1167 to i64, !dbg !1065
  %arrayidx730.i1169 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom729.i1168, !dbg !1065
  %1503 = load i32, i32* %arrayidx730.i1169, align 4, !dbg !1065
  %xor731.i1170 = xor i32 %xor726.i1165, %1503, !dbg !1065
  %1504 = load i32, i32* %t.i416, align 4, !dbg !1065
  %shr732.i1171 = lshr i32 %1504, 26, !dbg !1065
  %idxprom734.i1172 = zext i32 %shr732.i1171 to i64, !dbg !1065
  %arrayidx735.i1173 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom734.i1172, !dbg !1065
  %1505 = load i32, i32* %arrayidx735.i1173, align 4, !dbg !1065
  %xor736.i1174 = xor i32 %xor731.i1170, %1505, !dbg !1065
  %1506 = load i32, i32* %l.i414, align 4, !dbg !1065
  %xor737.i1175 = xor i32 %1506, %xor736.i1174, !dbg !1065
  store i32 %xor737.i1175, i32* %l.i414, align 4, !dbg !1065
  %1507 = load i32, i32* %l.i414, align 4, !dbg !1066
  %1508 = load i32*, i32** %s.i418, align 8, !dbg !1066
  %arrayidx738.i1176 = getelementptr inbounds i32, i32* %1508, i64 30, !dbg !1066
  %1509 = load i32, i32* %arrayidx738.i1176, align 4, !dbg !1066
  %xor739.i1177 = xor i32 %1507, %1509, !dbg !1066
  store i32 %xor739.i1177, i32* %u.i417, align 4, !dbg !1066
  %1510 = load i32, i32* %l.i414, align 4, !dbg !1066
  %1511 = load i32*, i32** %s.i418, align 8, !dbg !1066
  %arrayidx740.i1178 = getelementptr inbounds i32, i32* %1511, i64 31, !dbg !1066
  %1512 = load i32, i32* %arrayidx740.i1178, align 4, !dbg !1066
  %xor741.i1179 = xor i32 %1510, %1512, !dbg !1066
  store i32 %xor741.i1179, i32* %t.i416, align 4, !dbg !1066
  %1513 = load i32, i32* %t.i416, align 4, !dbg !811
  %1514 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1513) #7, !dbg !811, !srcloc !185
  store i32 %1514, i32* %ret742.i454, align 4, !dbg !811
  %1515 = load i32, i32* %ret742.i454, align 4, !dbg !811
  store i32 %1515, i32* %tmp743.i455, align 4, !dbg !811
  %1516 = load i32, i32* %tmp743.i455, align 4, !dbg !811
  store i32 %1516, i32* %t.i416, align 4, !dbg !1066
  %1517 = load i32, i32* %u.i417, align 4, !dbg !1066
  %shr744.i1180 = lshr i32 %1517, 2, !dbg !1066
  %and745.i1181 = and i32 %shr744.i1180, 63, !dbg !1066
  %idxprom746.i1182 = zext i32 %and745.i1181 to i64, !dbg !1066
  %arrayidx747.i1183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom746.i1182, !dbg !1066
  %1518 = load i32, i32* %arrayidx747.i1183, align 4, !dbg !1066
  %1519 = load i32, i32* %u.i417, align 4, !dbg !1066
  %shr748.i1184 = lshr i32 %1519, 10, !dbg !1066
  %and749.i1185 = and i32 %shr748.i1184, 63, !dbg !1066
  %idxprom750.i1186 = zext i32 %and749.i1185 to i64, !dbg !1066
  %arrayidx751.i1187 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom750.i1186, !dbg !1066
  %1520 = load i32, i32* %arrayidx751.i1187, align 4, !dbg !1066
  %xor752.i1188 = xor i32 %1518, %1520, !dbg !1066
  %1521 = load i32, i32* %u.i417, align 4, !dbg !1066
  %shr753.i1189 = lshr i32 %1521, 18, !dbg !1066
  %and754.i1190 = and i32 %shr753.i1189, 63, !dbg !1066
  %idxprom755.i1191 = zext i32 %and754.i1190 to i64, !dbg !1066
  %arrayidx756.i1192 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom755.i1191, !dbg !1066
  %1522 = load i32, i32* %arrayidx756.i1192, align 4, !dbg !1066
  %xor757.i1193 = xor i32 %xor752.i1188, %1522, !dbg !1066
  %1523 = load i32, i32* %u.i417, align 4, !dbg !1066
  %shr758.i1194 = lshr i32 %1523, 26, !dbg !1066
  %idxprom760.i1195 = zext i32 %shr758.i1194 to i64, !dbg !1066
  %arrayidx761.i1196 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom760.i1195, !dbg !1066
  %1524 = load i32, i32* %arrayidx761.i1196, align 4, !dbg !1066
  %xor762.i1197 = xor i32 %xor757.i1193, %1524, !dbg !1066
  %1525 = load i32, i32* %t.i416, align 4, !dbg !1066
  %shr763.i1198 = lshr i32 %1525, 2, !dbg !1066
  %and764.i1199 = and i32 %shr763.i1198, 63, !dbg !1066
  %idxprom765.i1200 = zext i32 %and764.i1199 to i64, !dbg !1066
  %arrayidx766.i1201 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom765.i1200, !dbg !1066
  %1526 = load i32, i32* %arrayidx766.i1201, align 4, !dbg !1066
  %xor767.i1202 = xor i32 %xor762.i1197, %1526, !dbg !1066
  %1527 = load i32, i32* %t.i416, align 4, !dbg !1066
  %shr768.i1203 = lshr i32 %1527, 10, !dbg !1066
  %and769.i1204 = and i32 %shr768.i1203, 63, !dbg !1066
  %idxprom770.i1205 = zext i32 %and769.i1204 to i64, !dbg !1066
  %arrayidx771.i1206 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom770.i1205, !dbg !1066
  %1528 = load i32, i32* %arrayidx771.i1206, align 4, !dbg !1066
  %xor772.i1207 = xor i32 %xor767.i1202, %1528, !dbg !1066
  %1529 = load i32, i32* %t.i416, align 4, !dbg !1066
  %shr773.i1208 = lshr i32 %1529, 18, !dbg !1066
  %and774.i1209 = and i32 %shr773.i1208, 63, !dbg !1066
  %idxprom775.i1210 = zext i32 %and774.i1209 to i64, !dbg !1066
  %arrayidx776.i1211 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom775.i1210, !dbg !1066
  %1530 = load i32, i32* %arrayidx776.i1211, align 4, !dbg !1066
  %xor777.i1212 = xor i32 %xor772.i1207, %1530, !dbg !1066
  %1531 = load i32, i32* %t.i416, align 4, !dbg !1066
  %shr778.i1213 = lshr i32 %1531, 26, !dbg !1066
  %idxprom780.i1214 = zext i32 %shr778.i1213 to i64, !dbg !1066
  %arrayidx781.i1215 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom780.i1214, !dbg !1066
  %1532 = load i32, i32* %arrayidx781.i1215, align 4, !dbg !1066
  %xor782.i1216 = xor i32 %xor777.i1212, %1532, !dbg !1066
  %1533 = load i32, i32* %r.i415, align 4, !dbg !1066
  %xor783.i1217 = xor i32 %1533, %xor782.i1216, !dbg !1066
  store i32 %xor783.i1217, i32* %r.i415, align 4, !dbg !1066
  br label %DES_encrypt1.exit1938, !dbg !1067

if.else.i1890:                                    ; preds = %sw.epilog
  %1534 = load i32, i32* %r.i415, align 4, !dbg !1068
  %1535 = load i32*, i32** %s.i418, align 8, !dbg !1068
  %arrayidx784.i1219 = getelementptr inbounds i32, i32* %1535, i64 30, !dbg !1068
  %1536 = load i32, i32* %arrayidx784.i1219, align 4, !dbg !1068
  %xor785.i1220 = xor i32 %1534, %1536, !dbg !1068
  store i32 %xor785.i1220, i32* %u.i417, align 4, !dbg !1068
  %1537 = load i32, i32* %r.i415, align 4, !dbg !1068
  %1538 = load i32*, i32** %s.i418, align 8, !dbg !1068
  %arrayidx786.i1221 = getelementptr inbounds i32, i32* %1538, i64 31, !dbg !1068
  %1539 = load i32, i32* %arrayidx786.i1221, align 4, !dbg !1068
  %xor787.i1222 = xor i32 %1537, %1539, !dbg !1068
  store i32 %xor787.i1222, i32* %t.i416, align 4, !dbg !1068
  %1540 = load i32, i32* %t.i416, align 4, !dbg !812
  %1541 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1540) #7, !dbg !812, !srcloc !193
  store i32 %1541, i32* %ret788.i456, align 4, !dbg !812
  %1542 = load i32, i32* %ret788.i456, align 4, !dbg !812
  store i32 %1542, i32* %tmp789.i457, align 4, !dbg !812
  %1543 = load i32, i32* %tmp789.i457, align 4, !dbg !812
  store i32 %1543, i32* %t.i416, align 4, !dbg !1068
  %1544 = load i32, i32* %u.i417, align 4, !dbg !1068
  %shr790.i1223 = lshr i32 %1544, 2, !dbg !1068
  %and791.i1224 = and i32 %shr790.i1223, 63, !dbg !1068
  %idxprom792.i1225 = zext i32 %and791.i1224 to i64, !dbg !1068
  %arrayidx793.i1226 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom792.i1225, !dbg !1068
  %1545 = load i32, i32* %arrayidx793.i1226, align 4, !dbg !1068
  %1546 = load i32, i32* %u.i417, align 4, !dbg !1068
  %shr794.i1227 = lshr i32 %1546, 10, !dbg !1068
  %and795.i1228 = and i32 %shr794.i1227, 63, !dbg !1068
  %idxprom796.i1229 = zext i32 %and795.i1228 to i64, !dbg !1068
  %arrayidx797.i1230 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom796.i1229, !dbg !1068
  %1547 = load i32, i32* %arrayidx797.i1230, align 4, !dbg !1068
  %xor798.i1231 = xor i32 %1545, %1547, !dbg !1068
  %1548 = load i32, i32* %u.i417, align 4, !dbg !1068
  %shr799.i1232 = lshr i32 %1548, 18, !dbg !1068
  %and800.i1233 = and i32 %shr799.i1232, 63, !dbg !1068
  %idxprom801.i1234 = zext i32 %and800.i1233 to i64, !dbg !1068
  %arrayidx802.i1235 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom801.i1234, !dbg !1068
  %1549 = load i32, i32* %arrayidx802.i1235, align 4, !dbg !1068
  %xor803.i1236 = xor i32 %xor798.i1231, %1549, !dbg !1068
  %1550 = load i32, i32* %u.i417, align 4, !dbg !1068
  %shr804.i1237 = lshr i32 %1550, 26, !dbg !1068
  %idxprom806.i1238 = zext i32 %shr804.i1237 to i64, !dbg !1068
  %arrayidx807.i1239 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom806.i1238, !dbg !1068
  %1551 = load i32, i32* %arrayidx807.i1239, align 4, !dbg !1068
  %xor808.i1240 = xor i32 %xor803.i1236, %1551, !dbg !1068
  %1552 = load i32, i32* %t.i416, align 4, !dbg !1068
  %shr809.i1241 = lshr i32 %1552, 2, !dbg !1068
  %and810.i1242 = and i32 %shr809.i1241, 63, !dbg !1068
  %idxprom811.i1243 = zext i32 %and810.i1242 to i64, !dbg !1068
  %arrayidx812.i1244 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom811.i1243, !dbg !1068
  %1553 = load i32, i32* %arrayidx812.i1244, align 4, !dbg !1068
  %xor813.i1245 = xor i32 %xor808.i1240, %1553, !dbg !1068
  %1554 = load i32, i32* %t.i416, align 4, !dbg !1068
  %shr814.i1246 = lshr i32 %1554, 10, !dbg !1068
  %and815.i1247 = and i32 %shr814.i1246, 63, !dbg !1068
  %idxprom816.i1248 = zext i32 %and815.i1247 to i64, !dbg !1068
  %arrayidx817.i1249 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom816.i1248, !dbg !1068
  %1555 = load i32, i32* %arrayidx817.i1249, align 4, !dbg !1068
  %xor818.i1250 = xor i32 %xor813.i1245, %1555, !dbg !1068
  %1556 = load i32, i32* %t.i416, align 4, !dbg !1068
  %shr819.i1251 = lshr i32 %1556, 18, !dbg !1068
  %and820.i1252 = and i32 %shr819.i1251, 63, !dbg !1068
  %idxprom821.i1253 = zext i32 %and820.i1252 to i64, !dbg !1068
  %arrayidx822.i1254 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom821.i1253, !dbg !1068
  %1557 = load i32, i32* %arrayidx822.i1254, align 4, !dbg !1068
  %xor823.i1255 = xor i32 %xor818.i1250, %1557, !dbg !1068
  %1558 = load i32, i32* %t.i416, align 4, !dbg !1068
  %shr824.i1256 = lshr i32 %1558, 26, !dbg !1068
  %idxprom826.i1257 = zext i32 %shr824.i1256 to i64, !dbg !1068
  %arrayidx827.i1258 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom826.i1257, !dbg !1068
  %1559 = load i32, i32* %arrayidx827.i1258, align 4, !dbg !1068
  %xor828.i1259 = xor i32 %xor823.i1255, %1559, !dbg !1068
  %1560 = load i32, i32* %l.i414, align 4, !dbg !1068
  %xor829.i1260 = xor i32 %1560, %xor828.i1259, !dbg !1068
  store i32 %xor829.i1260, i32* %l.i414, align 4, !dbg !1068
  %1561 = load i32, i32* %l.i414, align 4, !dbg !1069
  %1562 = load i32*, i32** %s.i418, align 8, !dbg !1069
  %arrayidx830.i1261 = getelementptr inbounds i32, i32* %1562, i64 28, !dbg !1069
  %1563 = load i32, i32* %arrayidx830.i1261, align 4, !dbg !1069
  %xor831.i1262 = xor i32 %1561, %1563, !dbg !1069
  store i32 %xor831.i1262, i32* %u.i417, align 4, !dbg !1069
  %1564 = load i32, i32* %l.i414, align 4, !dbg !1069
  %1565 = load i32*, i32** %s.i418, align 8, !dbg !1069
  %arrayidx832.i1263 = getelementptr inbounds i32, i32* %1565, i64 29, !dbg !1069
  %1566 = load i32, i32* %arrayidx832.i1263, align 4, !dbg !1069
  %xor833.i1264 = xor i32 %1564, %1566, !dbg !1069
  store i32 %xor833.i1264, i32* %t.i416, align 4, !dbg !1069
  %1567 = load i32, i32* %t.i416, align 4, !dbg !813
  %1568 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1567) #7, !dbg !813, !srcloc !199
  store i32 %1568, i32* %ret834.i458, align 4, !dbg !813
  %1569 = load i32, i32* %ret834.i458, align 4, !dbg !813
  store i32 %1569, i32* %tmp835.i459, align 4, !dbg !813
  %1570 = load i32, i32* %tmp835.i459, align 4, !dbg !813
  store i32 %1570, i32* %t.i416, align 4, !dbg !1069
  %1571 = load i32, i32* %u.i417, align 4, !dbg !1069
  %shr836.i1265 = lshr i32 %1571, 2, !dbg !1069
  %and837.i1266 = and i32 %shr836.i1265, 63, !dbg !1069
  %idxprom838.i1267 = zext i32 %and837.i1266 to i64, !dbg !1069
  %arrayidx839.i1268 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom838.i1267, !dbg !1069
  %1572 = load i32, i32* %arrayidx839.i1268, align 4, !dbg !1069
  %1573 = load i32, i32* %u.i417, align 4, !dbg !1069
  %shr840.i1269 = lshr i32 %1573, 10, !dbg !1069
  %and841.i1270 = and i32 %shr840.i1269, 63, !dbg !1069
  %idxprom842.i1271 = zext i32 %and841.i1270 to i64, !dbg !1069
  %arrayidx843.i1272 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom842.i1271, !dbg !1069
  %1574 = load i32, i32* %arrayidx843.i1272, align 4, !dbg !1069
  %xor844.i1273 = xor i32 %1572, %1574, !dbg !1069
  %1575 = load i32, i32* %u.i417, align 4, !dbg !1069
  %shr845.i1274 = lshr i32 %1575, 18, !dbg !1069
  %and846.i1275 = and i32 %shr845.i1274, 63, !dbg !1069
  %idxprom847.i1276 = zext i32 %and846.i1275 to i64, !dbg !1069
  %arrayidx848.i1277 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom847.i1276, !dbg !1069
  %1576 = load i32, i32* %arrayidx848.i1277, align 4, !dbg !1069
  %xor849.i1278 = xor i32 %xor844.i1273, %1576, !dbg !1069
  %1577 = load i32, i32* %u.i417, align 4, !dbg !1069
  %shr850.i1279 = lshr i32 %1577, 26, !dbg !1069
  %idxprom852.i1280 = zext i32 %shr850.i1279 to i64, !dbg !1069
  %arrayidx853.i1281 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom852.i1280, !dbg !1069
  %1578 = load i32, i32* %arrayidx853.i1281, align 4, !dbg !1069
  %xor854.i1282 = xor i32 %xor849.i1278, %1578, !dbg !1069
  %1579 = load i32, i32* %t.i416, align 4, !dbg !1069
  %shr855.i1283 = lshr i32 %1579, 2, !dbg !1069
  %and856.i1284 = and i32 %shr855.i1283, 63, !dbg !1069
  %idxprom857.i1285 = zext i32 %and856.i1284 to i64, !dbg !1069
  %arrayidx858.i1286 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom857.i1285, !dbg !1069
  %1580 = load i32, i32* %arrayidx858.i1286, align 4, !dbg !1069
  %xor859.i1287 = xor i32 %xor854.i1282, %1580, !dbg !1069
  %1581 = load i32, i32* %t.i416, align 4, !dbg !1069
  %shr860.i1288 = lshr i32 %1581, 10, !dbg !1069
  %and861.i1289 = and i32 %shr860.i1288, 63, !dbg !1069
  %idxprom862.i1290 = zext i32 %and861.i1289 to i64, !dbg !1069
  %arrayidx863.i1291 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom862.i1290, !dbg !1069
  %1582 = load i32, i32* %arrayidx863.i1291, align 4, !dbg !1069
  %xor864.i1292 = xor i32 %xor859.i1287, %1582, !dbg !1069
  %1583 = load i32, i32* %t.i416, align 4, !dbg !1069
  %shr865.i1293 = lshr i32 %1583, 18, !dbg !1069
  %and866.i1294 = and i32 %shr865.i1293, 63, !dbg !1069
  %idxprom867.i1295 = zext i32 %and866.i1294 to i64, !dbg !1069
  %arrayidx868.i1296 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom867.i1295, !dbg !1069
  %1584 = load i32, i32* %arrayidx868.i1296, align 4, !dbg !1069
  %xor869.i1297 = xor i32 %xor864.i1292, %1584, !dbg !1069
  %1585 = load i32, i32* %t.i416, align 4, !dbg !1069
  %shr870.i1298 = lshr i32 %1585, 26, !dbg !1069
  %idxprom872.i1299 = zext i32 %shr870.i1298 to i64, !dbg !1069
  %arrayidx873.i1300 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom872.i1299, !dbg !1069
  %1586 = load i32, i32* %arrayidx873.i1300, align 4, !dbg !1069
  %xor874.i1301 = xor i32 %xor869.i1297, %1586, !dbg !1069
  %1587 = load i32, i32* %r.i415, align 4, !dbg !1069
  %xor875.i1302 = xor i32 %1587, %xor874.i1301, !dbg !1069
  store i32 %xor875.i1302, i32* %r.i415, align 4, !dbg !1069
  %1588 = load i32, i32* %r.i415, align 4, !dbg !1070
  %1589 = load i32*, i32** %s.i418, align 8, !dbg !1070
  %arrayidx876.i1303 = getelementptr inbounds i32, i32* %1589, i64 26, !dbg !1070
  %1590 = load i32, i32* %arrayidx876.i1303, align 4, !dbg !1070
  %xor877.i1304 = xor i32 %1588, %1590, !dbg !1070
  store i32 %xor877.i1304, i32* %u.i417, align 4, !dbg !1070
  %1591 = load i32, i32* %r.i415, align 4, !dbg !1070
  %1592 = load i32*, i32** %s.i418, align 8, !dbg !1070
  %arrayidx878.i1305 = getelementptr inbounds i32, i32* %1592, i64 27, !dbg !1070
  %1593 = load i32, i32* %arrayidx878.i1305, align 4, !dbg !1070
  %xor879.i1306 = xor i32 %1591, %1593, !dbg !1070
  store i32 %xor879.i1306, i32* %t.i416, align 4, !dbg !1070
  %1594 = load i32, i32* %t.i416, align 4, !dbg !814
  %1595 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1594) #7, !dbg !814, !srcloc !205
  store i32 %1595, i32* %ret880.i460, align 4, !dbg !814
  %1596 = load i32, i32* %ret880.i460, align 4, !dbg !814
  store i32 %1596, i32* %tmp881.i461, align 4, !dbg !814
  %1597 = load i32, i32* %tmp881.i461, align 4, !dbg !814
  store i32 %1597, i32* %t.i416, align 4, !dbg !1070
  %1598 = load i32, i32* %u.i417, align 4, !dbg !1070
  %shr882.i1307 = lshr i32 %1598, 2, !dbg !1070
  %and883.i1308 = and i32 %shr882.i1307, 63, !dbg !1070
  %idxprom884.i1309 = zext i32 %and883.i1308 to i64, !dbg !1070
  %arrayidx885.i1310 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom884.i1309, !dbg !1070
  %1599 = load i32, i32* %arrayidx885.i1310, align 4, !dbg !1070
  %1600 = load i32, i32* %u.i417, align 4, !dbg !1070
  %shr886.i1311 = lshr i32 %1600, 10, !dbg !1070
  %and887.i1312 = and i32 %shr886.i1311, 63, !dbg !1070
  %idxprom888.i1313 = zext i32 %and887.i1312 to i64, !dbg !1070
  %arrayidx889.i1314 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom888.i1313, !dbg !1070
  %1601 = load i32, i32* %arrayidx889.i1314, align 4, !dbg !1070
  %xor890.i1315 = xor i32 %1599, %1601, !dbg !1070
  %1602 = load i32, i32* %u.i417, align 4, !dbg !1070
  %shr891.i1316 = lshr i32 %1602, 18, !dbg !1070
  %and892.i1317 = and i32 %shr891.i1316, 63, !dbg !1070
  %idxprom893.i1318 = zext i32 %and892.i1317 to i64, !dbg !1070
  %arrayidx894.i1319 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom893.i1318, !dbg !1070
  %1603 = load i32, i32* %arrayidx894.i1319, align 4, !dbg !1070
  %xor895.i1320 = xor i32 %xor890.i1315, %1603, !dbg !1070
  %1604 = load i32, i32* %u.i417, align 4, !dbg !1070
  %shr896.i1321 = lshr i32 %1604, 26, !dbg !1070
  %idxprom898.i1322 = zext i32 %shr896.i1321 to i64, !dbg !1070
  %arrayidx899.i1323 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom898.i1322, !dbg !1070
  %1605 = load i32, i32* %arrayidx899.i1323, align 4, !dbg !1070
  %xor900.i1324 = xor i32 %xor895.i1320, %1605, !dbg !1070
  %1606 = load i32, i32* %t.i416, align 4, !dbg !1070
  %shr901.i1325 = lshr i32 %1606, 2, !dbg !1070
  %and902.i1326 = and i32 %shr901.i1325, 63, !dbg !1070
  %idxprom903.i1327 = zext i32 %and902.i1326 to i64, !dbg !1070
  %arrayidx904.i1328 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom903.i1327, !dbg !1070
  %1607 = load i32, i32* %arrayidx904.i1328, align 4, !dbg !1070
  %xor905.i1329 = xor i32 %xor900.i1324, %1607, !dbg !1070
  %1608 = load i32, i32* %t.i416, align 4, !dbg !1070
  %shr906.i1330 = lshr i32 %1608, 10, !dbg !1070
  %and907.i1331 = and i32 %shr906.i1330, 63, !dbg !1070
  %idxprom908.i1332 = zext i32 %and907.i1331 to i64, !dbg !1070
  %arrayidx909.i1333 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom908.i1332, !dbg !1070
  %1609 = load i32, i32* %arrayidx909.i1333, align 4, !dbg !1070
  %xor910.i1334 = xor i32 %xor905.i1329, %1609, !dbg !1070
  %1610 = load i32, i32* %t.i416, align 4, !dbg !1070
  %shr911.i1335 = lshr i32 %1610, 18, !dbg !1070
  %and912.i1336 = and i32 %shr911.i1335, 63, !dbg !1070
  %idxprom913.i1337 = zext i32 %and912.i1336 to i64, !dbg !1070
  %arrayidx914.i1338 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom913.i1337, !dbg !1070
  %1611 = load i32, i32* %arrayidx914.i1338, align 4, !dbg !1070
  %xor915.i1339 = xor i32 %xor910.i1334, %1611, !dbg !1070
  %1612 = load i32, i32* %t.i416, align 4, !dbg !1070
  %shr916.i1340 = lshr i32 %1612, 26, !dbg !1070
  %idxprom918.i1341 = zext i32 %shr916.i1340 to i64, !dbg !1070
  %arrayidx919.i1342 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom918.i1341, !dbg !1070
  %1613 = load i32, i32* %arrayidx919.i1342, align 4, !dbg !1070
  %xor920.i1343 = xor i32 %xor915.i1339, %1613, !dbg !1070
  %1614 = load i32, i32* %l.i414, align 4, !dbg !1070
  %xor921.i1344 = xor i32 %1614, %xor920.i1343, !dbg !1070
  store i32 %xor921.i1344, i32* %l.i414, align 4, !dbg !1070
  %1615 = load i32, i32* %l.i414, align 4, !dbg !1071
  %1616 = load i32*, i32** %s.i418, align 8, !dbg !1071
  %arrayidx922.i1345 = getelementptr inbounds i32, i32* %1616, i64 24, !dbg !1071
  %1617 = load i32, i32* %arrayidx922.i1345, align 4, !dbg !1071
  %xor923.i1346 = xor i32 %1615, %1617, !dbg !1071
  store i32 %xor923.i1346, i32* %u.i417, align 4, !dbg !1071
  %1618 = load i32, i32* %l.i414, align 4, !dbg !1071
  %1619 = load i32*, i32** %s.i418, align 8, !dbg !1071
  %arrayidx924.i1347 = getelementptr inbounds i32, i32* %1619, i64 25, !dbg !1071
  %1620 = load i32, i32* %arrayidx924.i1347, align 4, !dbg !1071
  %xor925.i1348 = xor i32 %1618, %1620, !dbg !1071
  store i32 %xor925.i1348, i32* %t.i416, align 4, !dbg !1071
  %1621 = load i32, i32* %t.i416, align 4, !dbg !815
  %1622 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1621) #7, !dbg !815, !srcloc !211
  store i32 %1622, i32* %ret926.i462, align 4, !dbg !815
  %1623 = load i32, i32* %ret926.i462, align 4, !dbg !815
  store i32 %1623, i32* %tmp927.i463, align 4, !dbg !815
  %1624 = load i32, i32* %tmp927.i463, align 4, !dbg !815
  store i32 %1624, i32* %t.i416, align 4, !dbg !1071
  %1625 = load i32, i32* %u.i417, align 4, !dbg !1071
  %shr928.i1349 = lshr i32 %1625, 2, !dbg !1071
  %and929.i1350 = and i32 %shr928.i1349, 63, !dbg !1071
  %idxprom930.i1351 = zext i32 %and929.i1350 to i64, !dbg !1071
  %arrayidx931.i1352 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom930.i1351, !dbg !1071
  %1626 = load i32, i32* %arrayidx931.i1352, align 4, !dbg !1071
  %1627 = load i32, i32* %u.i417, align 4, !dbg !1071
  %shr932.i1353 = lshr i32 %1627, 10, !dbg !1071
  %and933.i1354 = and i32 %shr932.i1353, 63, !dbg !1071
  %idxprom934.i1355 = zext i32 %and933.i1354 to i64, !dbg !1071
  %arrayidx935.i1356 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom934.i1355, !dbg !1071
  %1628 = load i32, i32* %arrayidx935.i1356, align 4, !dbg !1071
  %xor936.i1357 = xor i32 %1626, %1628, !dbg !1071
  %1629 = load i32, i32* %u.i417, align 4, !dbg !1071
  %shr937.i1358 = lshr i32 %1629, 18, !dbg !1071
  %and938.i1359 = and i32 %shr937.i1358, 63, !dbg !1071
  %idxprom939.i1360 = zext i32 %and938.i1359 to i64, !dbg !1071
  %arrayidx940.i1361 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom939.i1360, !dbg !1071
  %1630 = load i32, i32* %arrayidx940.i1361, align 4, !dbg !1071
  %xor941.i1362 = xor i32 %xor936.i1357, %1630, !dbg !1071
  %1631 = load i32, i32* %u.i417, align 4, !dbg !1071
  %shr942.i1363 = lshr i32 %1631, 26, !dbg !1071
  %idxprom944.i1364 = zext i32 %shr942.i1363 to i64, !dbg !1071
  %arrayidx945.i1365 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom944.i1364, !dbg !1071
  %1632 = load i32, i32* %arrayidx945.i1365, align 4, !dbg !1071
  %xor946.i1366 = xor i32 %xor941.i1362, %1632, !dbg !1071
  %1633 = load i32, i32* %t.i416, align 4, !dbg !1071
  %shr947.i1367 = lshr i32 %1633, 2, !dbg !1071
  %and948.i1368 = and i32 %shr947.i1367, 63, !dbg !1071
  %idxprom949.i1369 = zext i32 %and948.i1368 to i64, !dbg !1071
  %arrayidx950.i1370 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom949.i1369, !dbg !1071
  %1634 = load i32, i32* %arrayidx950.i1370, align 4, !dbg !1071
  %xor951.i1371 = xor i32 %xor946.i1366, %1634, !dbg !1071
  %1635 = load i32, i32* %t.i416, align 4, !dbg !1071
  %shr952.i1372 = lshr i32 %1635, 10, !dbg !1071
  %and953.i1373 = and i32 %shr952.i1372, 63, !dbg !1071
  %idxprom954.i1374 = zext i32 %and953.i1373 to i64, !dbg !1071
  %arrayidx955.i1375 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom954.i1374, !dbg !1071
  %1636 = load i32, i32* %arrayidx955.i1375, align 4, !dbg !1071
  %xor956.i1376 = xor i32 %xor951.i1371, %1636, !dbg !1071
  %1637 = load i32, i32* %t.i416, align 4, !dbg !1071
  %shr957.i1377 = lshr i32 %1637, 18, !dbg !1071
  %and958.i1378 = and i32 %shr957.i1377, 63, !dbg !1071
  %idxprom959.i1379 = zext i32 %and958.i1378 to i64, !dbg !1071
  %arrayidx960.i1380 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom959.i1379, !dbg !1071
  %1638 = load i32, i32* %arrayidx960.i1380, align 4, !dbg !1071
  %xor961.i1381 = xor i32 %xor956.i1376, %1638, !dbg !1071
  %1639 = load i32, i32* %t.i416, align 4, !dbg !1071
  %shr962.i1382 = lshr i32 %1639, 26, !dbg !1071
  %idxprom964.i1383 = zext i32 %shr962.i1382 to i64, !dbg !1071
  %arrayidx965.i1384 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom964.i1383, !dbg !1071
  %1640 = load i32, i32* %arrayidx965.i1384, align 4, !dbg !1071
  %xor966.i1385 = xor i32 %xor961.i1381, %1640, !dbg !1071
  %1641 = load i32, i32* %r.i415, align 4, !dbg !1071
  %xor967.i1386 = xor i32 %1641, %xor966.i1385, !dbg !1071
  store i32 %xor967.i1386, i32* %r.i415, align 4, !dbg !1071
  %1642 = load i32, i32* %r.i415, align 4, !dbg !1072
  %1643 = load i32*, i32** %s.i418, align 8, !dbg !1072
  %arrayidx968.i1387 = getelementptr inbounds i32, i32* %1643, i64 22, !dbg !1072
  %1644 = load i32, i32* %arrayidx968.i1387, align 4, !dbg !1072
  %xor969.i1388 = xor i32 %1642, %1644, !dbg !1072
  store i32 %xor969.i1388, i32* %u.i417, align 4, !dbg !1072
  %1645 = load i32, i32* %r.i415, align 4, !dbg !1072
  %1646 = load i32*, i32** %s.i418, align 8, !dbg !1072
  %arrayidx970.i1389 = getelementptr inbounds i32, i32* %1646, i64 23, !dbg !1072
  %1647 = load i32, i32* %arrayidx970.i1389, align 4, !dbg !1072
  %xor971.i1390 = xor i32 %1645, %1647, !dbg !1072
  store i32 %xor971.i1390, i32* %t.i416, align 4, !dbg !1072
  %1648 = load i32, i32* %t.i416, align 4, !dbg !816
  %1649 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1648) #7, !dbg !816, !srcloc !217
  store i32 %1649, i32* %ret972.i464, align 4, !dbg !816
  %1650 = load i32, i32* %ret972.i464, align 4, !dbg !816
  store i32 %1650, i32* %tmp973.i465, align 4, !dbg !816
  %1651 = load i32, i32* %tmp973.i465, align 4, !dbg !816
  store i32 %1651, i32* %t.i416, align 4, !dbg !1072
  %1652 = load i32, i32* %u.i417, align 4, !dbg !1072
  %shr974.i1391 = lshr i32 %1652, 2, !dbg !1072
  %and975.i1392 = and i32 %shr974.i1391, 63, !dbg !1072
  %idxprom976.i1393 = zext i32 %and975.i1392 to i64, !dbg !1072
  %arrayidx977.i1394 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom976.i1393, !dbg !1072
  %1653 = load i32, i32* %arrayidx977.i1394, align 4, !dbg !1072
  %1654 = load i32, i32* %u.i417, align 4, !dbg !1072
  %shr978.i1395 = lshr i32 %1654, 10, !dbg !1072
  %and979.i1396 = and i32 %shr978.i1395, 63, !dbg !1072
  %idxprom980.i1397 = zext i32 %and979.i1396 to i64, !dbg !1072
  %arrayidx981.i1398 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom980.i1397, !dbg !1072
  %1655 = load i32, i32* %arrayidx981.i1398, align 4, !dbg !1072
  %xor982.i1399 = xor i32 %1653, %1655, !dbg !1072
  %1656 = load i32, i32* %u.i417, align 4, !dbg !1072
  %shr983.i1400 = lshr i32 %1656, 18, !dbg !1072
  %and984.i1401 = and i32 %shr983.i1400, 63, !dbg !1072
  %idxprom985.i1402 = zext i32 %and984.i1401 to i64, !dbg !1072
  %arrayidx986.i1403 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom985.i1402, !dbg !1072
  %1657 = load i32, i32* %arrayidx986.i1403, align 4, !dbg !1072
  %xor987.i1404 = xor i32 %xor982.i1399, %1657, !dbg !1072
  %1658 = load i32, i32* %u.i417, align 4, !dbg !1072
  %shr988.i1405 = lshr i32 %1658, 26, !dbg !1072
  %idxprom990.i1406 = zext i32 %shr988.i1405 to i64, !dbg !1072
  %arrayidx991.i1407 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom990.i1406, !dbg !1072
  %1659 = load i32, i32* %arrayidx991.i1407, align 4, !dbg !1072
  %xor992.i1408 = xor i32 %xor987.i1404, %1659, !dbg !1072
  %1660 = load i32, i32* %t.i416, align 4, !dbg !1072
  %shr993.i1409 = lshr i32 %1660, 2, !dbg !1072
  %and994.i1410 = and i32 %shr993.i1409, 63, !dbg !1072
  %idxprom995.i1411 = zext i32 %and994.i1410 to i64, !dbg !1072
  %arrayidx996.i1412 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom995.i1411, !dbg !1072
  %1661 = load i32, i32* %arrayidx996.i1412, align 4, !dbg !1072
  %xor997.i1413 = xor i32 %xor992.i1408, %1661, !dbg !1072
  %1662 = load i32, i32* %t.i416, align 4, !dbg !1072
  %shr998.i1414 = lshr i32 %1662, 10, !dbg !1072
  %and999.i1415 = and i32 %shr998.i1414, 63, !dbg !1072
  %idxprom1000.i1416 = zext i32 %and999.i1415 to i64, !dbg !1072
  %arrayidx1001.i1417 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1000.i1416, !dbg !1072
  %1663 = load i32, i32* %arrayidx1001.i1417, align 4, !dbg !1072
  %xor1002.i1418 = xor i32 %xor997.i1413, %1663, !dbg !1072
  %1664 = load i32, i32* %t.i416, align 4, !dbg !1072
  %shr1003.i1419 = lshr i32 %1664, 18, !dbg !1072
  %and1004.i1420 = and i32 %shr1003.i1419, 63, !dbg !1072
  %idxprom1005.i1421 = zext i32 %and1004.i1420 to i64, !dbg !1072
  %arrayidx1006.i1422 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1005.i1421, !dbg !1072
  %1665 = load i32, i32* %arrayidx1006.i1422, align 4, !dbg !1072
  %xor1007.i1423 = xor i32 %xor1002.i1418, %1665, !dbg !1072
  %1666 = load i32, i32* %t.i416, align 4, !dbg !1072
  %shr1008.i1424 = lshr i32 %1666, 26, !dbg !1072
  %idxprom1010.i1425 = zext i32 %shr1008.i1424 to i64, !dbg !1072
  %arrayidx1011.i1426 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1010.i1425, !dbg !1072
  %1667 = load i32, i32* %arrayidx1011.i1426, align 4, !dbg !1072
  %xor1012.i1427 = xor i32 %xor1007.i1423, %1667, !dbg !1072
  %1668 = load i32, i32* %l.i414, align 4, !dbg !1072
  %xor1013.i1428 = xor i32 %1668, %xor1012.i1427, !dbg !1072
  store i32 %xor1013.i1428, i32* %l.i414, align 4, !dbg !1072
  %1669 = load i32, i32* %l.i414, align 4, !dbg !1073
  %1670 = load i32*, i32** %s.i418, align 8, !dbg !1073
  %arrayidx1014.i1429 = getelementptr inbounds i32, i32* %1670, i64 20, !dbg !1073
  %1671 = load i32, i32* %arrayidx1014.i1429, align 4, !dbg !1073
  %xor1015.i1430 = xor i32 %1669, %1671, !dbg !1073
  store i32 %xor1015.i1430, i32* %u.i417, align 4, !dbg !1073
  %1672 = load i32, i32* %l.i414, align 4, !dbg !1073
  %1673 = load i32*, i32** %s.i418, align 8, !dbg !1073
  %arrayidx1016.i1431 = getelementptr inbounds i32, i32* %1673, i64 21, !dbg !1073
  %1674 = load i32, i32* %arrayidx1016.i1431, align 4, !dbg !1073
  %xor1017.i1432 = xor i32 %1672, %1674, !dbg !1073
  store i32 %xor1017.i1432, i32* %t.i416, align 4, !dbg !1073
  %1675 = load i32, i32* %t.i416, align 4, !dbg !817
  %1676 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1675) #7, !dbg !817, !srcloc !223
  store i32 %1676, i32* %ret1018.i466, align 4, !dbg !817
  %1677 = load i32, i32* %ret1018.i466, align 4, !dbg !817
  store i32 %1677, i32* %tmp1019.i467, align 4, !dbg !817
  %1678 = load i32, i32* %tmp1019.i467, align 4, !dbg !817
  store i32 %1678, i32* %t.i416, align 4, !dbg !1073
  %1679 = load i32, i32* %u.i417, align 4, !dbg !1073
  %shr1020.i1433 = lshr i32 %1679, 2, !dbg !1073
  %and1021.i1434 = and i32 %shr1020.i1433, 63, !dbg !1073
  %idxprom1022.i1435 = zext i32 %and1021.i1434 to i64, !dbg !1073
  %arrayidx1023.i1436 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1022.i1435, !dbg !1073
  %1680 = load i32, i32* %arrayidx1023.i1436, align 4, !dbg !1073
  %1681 = load i32, i32* %u.i417, align 4, !dbg !1073
  %shr1024.i1437 = lshr i32 %1681, 10, !dbg !1073
  %and1025.i1438 = and i32 %shr1024.i1437, 63, !dbg !1073
  %idxprom1026.i1439 = zext i32 %and1025.i1438 to i64, !dbg !1073
  %arrayidx1027.i1440 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1026.i1439, !dbg !1073
  %1682 = load i32, i32* %arrayidx1027.i1440, align 4, !dbg !1073
  %xor1028.i1441 = xor i32 %1680, %1682, !dbg !1073
  %1683 = load i32, i32* %u.i417, align 4, !dbg !1073
  %shr1029.i1442 = lshr i32 %1683, 18, !dbg !1073
  %and1030.i1443 = and i32 %shr1029.i1442, 63, !dbg !1073
  %idxprom1031.i1444 = zext i32 %and1030.i1443 to i64, !dbg !1073
  %arrayidx1032.i1445 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1031.i1444, !dbg !1073
  %1684 = load i32, i32* %arrayidx1032.i1445, align 4, !dbg !1073
  %xor1033.i1446 = xor i32 %xor1028.i1441, %1684, !dbg !1073
  %1685 = load i32, i32* %u.i417, align 4, !dbg !1073
  %shr1034.i1447 = lshr i32 %1685, 26, !dbg !1073
  %idxprom1036.i1448 = zext i32 %shr1034.i1447 to i64, !dbg !1073
  %arrayidx1037.i1449 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1036.i1448, !dbg !1073
  %1686 = load i32, i32* %arrayidx1037.i1449, align 4, !dbg !1073
  %xor1038.i1450 = xor i32 %xor1033.i1446, %1686, !dbg !1073
  %1687 = load i32, i32* %t.i416, align 4, !dbg !1073
  %shr1039.i1451 = lshr i32 %1687, 2, !dbg !1073
  %and1040.i1452 = and i32 %shr1039.i1451, 63, !dbg !1073
  %idxprom1041.i1453 = zext i32 %and1040.i1452 to i64, !dbg !1073
  %arrayidx1042.i1454 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1041.i1453, !dbg !1073
  %1688 = load i32, i32* %arrayidx1042.i1454, align 4, !dbg !1073
  %xor1043.i1455 = xor i32 %xor1038.i1450, %1688, !dbg !1073
  %1689 = load i32, i32* %t.i416, align 4, !dbg !1073
  %shr1044.i1456 = lshr i32 %1689, 10, !dbg !1073
  %and1045.i1457 = and i32 %shr1044.i1456, 63, !dbg !1073
  %idxprom1046.i1458 = zext i32 %and1045.i1457 to i64, !dbg !1073
  %arrayidx1047.i1459 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1046.i1458, !dbg !1073
  %1690 = load i32, i32* %arrayidx1047.i1459, align 4, !dbg !1073
  %xor1048.i1460 = xor i32 %xor1043.i1455, %1690, !dbg !1073
  %1691 = load i32, i32* %t.i416, align 4, !dbg !1073
  %shr1049.i1461 = lshr i32 %1691, 18, !dbg !1073
  %and1050.i1462 = and i32 %shr1049.i1461, 63, !dbg !1073
  %idxprom1051.i1463 = zext i32 %and1050.i1462 to i64, !dbg !1073
  %arrayidx1052.i1464 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1051.i1463, !dbg !1073
  %1692 = load i32, i32* %arrayidx1052.i1464, align 4, !dbg !1073
  %xor1053.i1465 = xor i32 %xor1048.i1460, %1692, !dbg !1073
  %1693 = load i32, i32* %t.i416, align 4, !dbg !1073
  %shr1054.i1466 = lshr i32 %1693, 26, !dbg !1073
  %idxprom1056.i1467 = zext i32 %shr1054.i1466 to i64, !dbg !1073
  %arrayidx1057.i1468 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1056.i1467, !dbg !1073
  %1694 = load i32, i32* %arrayidx1057.i1468, align 4, !dbg !1073
  %xor1058.i1469 = xor i32 %xor1053.i1465, %1694, !dbg !1073
  %1695 = load i32, i32* %r.i415, align 4, !dbg !1073
  %xor1059.i1470 = xor i32 %1695, %xor1058.i1469, !dbg !1073
  store i32 %xor1059.i1470, i32* %r.i415, align 4, !dbg !1073
  %1696 = load i32, i32* %r.i415, align 4, !dbg !1074
  %1697 = load i32*, i32** %s.i418, align 8, !dbg !1074
  %arrayidx1060.i1471 = getelementptr inbounds i32, i32* %1697, i64 18, !dbg !1074
  %1698 = load i32, i32* %arrayidx1060.i1471, align 4, !dbg !1074
  %xor1061.i1472 = xor i32 %1696, %1698, !dbg !1074
  store i32 %xor1061.i1472, i32* %u.i417, align 4, !dbg !1074
  %1699 = load i32, i32* %r.i415, align 4, !dbg !1074
  %1700 = load i32*, i32** %s.i418, align 8, !dbg !1074
  %arrayidx1062.i1473 = getelementptr inbounds i32, i32* %1700, i64 19, !dbg !1074
  %1701 = load i32, i32* %arrayidx1062.i1473, align 4, !dbg !1074
  %xor1063.i1474 = xor i32 %1699, %1701, !dbg !1074
  store i32 %xor1063.i1474, i32* %t.i416, align 4, !dbg !1074
  %1702 = load i32, i32* %t.i416, align 4, !dbg !818
  %1703 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1702) #7, !dbg !818, !srcloc !229
  store i32 %1703, i32* %ret1064.i468, align 4, !dbg !818
  %1704 = load i32, i32* %ret1064.i468, align 4, !dbg !818
  store i32 %1704, i32* %tmp1065.i469, align 4, !dbg !818
  %1705 = load i32, i32* %tmp1065.i469, align 4, !dbg !818
  store i32 %1705, i32* %t.i416, align 4, !dbg !1074
  %1706 = load i32, i32* %u.i417, align 4, !dbg !1074
  %shr1066.i1475 = lshr i32 %1706, 2, !dbg !1074
  %and1067.i1476 = and i32 %shr1066.i1475, 63, !dbg !1074
  %idxprom1068.i1477 = zext i32 %and1067.i1476 to i64, !dbg !1074
  %arrayidx1069.i1478 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1068.i1477, !dbg !1074
  %1707 = load i32, i32* %arrayidx1069.i1478, align 4, !dbg !1074
  %1708 = load i32, i32* %u.i417, align 4, !dbg !1074
  %shr1070.i1479 = lshr i32 %1708, 10, !dbg !1074
  %and1071.i1480 = and i32 %shr1070.i1479, 63, !dbg !1074
  %idxprom1072.i1481 = zext i32 %and1071.i1480 to i64, !dbg !1074
  %arrayidx1073.i1482 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1072.i1481, !dbg !1074
  %1709 = load i32, i32* %arrayidx1073.i1482, align 4, !dbg !1074
  %xor1074.i1483 = xor i32 %1707, %1709, !dbg !1074
  %1710 = load i32, i32* %u.i417, align 4, !dbg !1074
  %shr1075.i1484 = lshr i32 %1710, 18, !dbg !1074
  %and1076.i1485 = and i32 %shr1075.i1484, 63, !dbg !1074
  %idxprom1077.i1486 = zext i32 %and1076.i1485 to i64, !dbg !1074
  %arrayidx1078.i1487 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1077.i1486, !dbg !1074
  %1711 = load i32, i32* %arrayidx1078.i1487, align 4, !dbg !1074
  %xor1079.i1488 = xor i32 %xor1074.i1483, %1711, !dbg !1074
  %1712 = load i32, i32* %u.i417, align 4, !dbg !1074
  %shr1080.i1489 = lshr i32 %1712, 26, !dbg !1074
  %idxprom1082.i1490 = zext i32 %shr1080.i1489 to i64, !dbg !1074
  %arrayidx1083.i1491 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1082.i1490, !dbg !1074
  %1713 = load i32, i32* %arrayidx1083.i1491, align 4, !dbg !1074
  %xor1084.i1492 = xor i32 %xor1079.i1488, %1713, !dbg !1074
  %1714 = load i32, i32* %t.i416, align 4, !dbg !1074
  %shr1085.i1493 = lshr i32 %1714, 2, !dbg !1074
  %and1086.i1494 = and i32 %shr1085.i1493, 63, !dbg !1074
  %idxprom1087.i1495 = zext i32 %and1086.i1494 to i64, !dbg !1074
  %arrayidx1088.i1496 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1087.i1495, !dbg !1074
  %1715 = load i32, i32* %arrayidx1088.i1496, align 4, !dbg !1074
  %xor1089.i1497 = xor i32 %xor1084.i1492, %1715, !dbg !1074
  %1716 = load i32, i32* %t.i416, align 4, !dbg !1074
  %shr1090.i1498 = lshr i32 %1716, 10, !dbg !1074
  %and1091.i1499 = and i32 %shr1090.i1498, 63, !dbg !1074
  %idxprom1092.i1500 = zext i32 %and1091.i1499 to i64, !dbg !1074
  %arrayidx1093.i1501 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1092.i1500, !dbg !1074
  %1717 = load i32, i32* %arrayidx1093.i1501, align 4, !dbg !1074
  %xor1094.i1502 = xor i32 %xor1089.i1497, %1717, !dbg !1074
  %1718 = load i32, i32* %t.i416, align 4, !dbg !1074
  %shr1095.i1503 = lshr i32 %1718, 18, !dbg !1074
  %and1096.i1504 = and i32 %shr1095.i1503, 63, !dbg !1074
  %idxprom1097.i1505 = zext i32 %and1096.i1504 to i64, !dbg !1074
  %arrayidx1098.i1506 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1097.i1505, !dbg !1074
  %1719 = load i32, i32* %arrayidx1098.i1506, align 4, !dbg !1074
  %xor1099.i1507 = xor i32 %xor1094.i1502, %1719, !dbg !1074
  %1720 = load i32, i32* %t.i416, align 4, !dbg !1074
  %shr1100.i1508 = lshr i32 %1720, 26, !dbg !1074
  %idxprom1102.i1509 = zext i32 %shr1100.i1508 to i64, !dbg !1074
  %arrayidx1103.i1510 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1102.i1509, !dbg !1074
  %1721 = load i32, i32* %arrayidx1103.i1510, align 4, !dbg !1074
  %xor1104.i1511 = xor i32 %xor1099.i1507, %1721, !dbg !1074
  %1722 = load i32, i32* %l.i414, align 4, !dbg !1074
  %xor1105.i1512 = xor i32 %1722, %xor1104.i1511, !dbg !1074
  store i32 %xor1105.i1512, i32* %l.i414, align 4, !dbg !1074
  %1723 = load i32, i32* %l.i414, align 4, !dbg !1075
  %1724 = load i32*, i32** %s.i418, align 8, !dbg !1075
  %arrayidx1106.i1513 = getelementptr inbounds i32, i32* %1724, i64 16, !dbg !1075
  %1725 = load i32, i32* %arrayidx1106.i1513, align 4, !dbg !1075
  %xor1107.i1514 = xor i32 %1723, %1725, !dbg !1075
  store i32 %xor1107.i1514, i32* %u.i417, align 4, !dbg !1075
  %1726 = load i32, i32* %l.i414, align 4, !dbg !1075
  %1727 = load i32*, i32** %s.i418, align 8, !dbg !1075
  %arrayidx1108.i1515 = getelementptr inbounds i32, i32* %1727, i64 17, !dbg !1075
  %1728 = load i32, i32* %arrayidx1108.i1515, align 4, !dbg !1075
  %xor1109.i1516 = xor i32 %1726, %1728, !dbg !1075
  store i32 %xor1109.i1516, i32* %t.i416, align 4, !dbg !1075
  %1729 = load i32, i32* %t.i416, align 4, !dbg !819
  %1730 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1729) #7, !dbg !819, !srcloc !235
  store i32 %1730, i32* %ret1110.i470, align 4, !dbg !819
  %1731 = load i32, i32* %ret1110.i470, align 4, !dbg !819
  store i32 %1731, i32* %tmp1111.i471, align 4, !dbg !819
  %1732 = load i32, i32* %tmp1111.i471, align 4, !dbg !819
  store i32 %1732, i32* %t.i416, align 4, !dbg !1075
  %1733 = load i32, i32* %u.i417, align 4, !dbg !1075
  %shr1112.i1517 = lshr i32 %1733, 2, !dbg !1075
  %and1113.i1518 = and i32 %shr1112.i1517, 63, !dbg !1075
  %idxprom1114.i1519 = zext i32 %and1113.i1518 to i64, !dbg !1075
  %arrayidx1115.i1520 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1114.i1519, !dbg !1075
  %1734 = load i32, i32* %arrayidx1115.i1520, align 4, !dbg !1075
  %1735 = load i32, i32* %u.i417, align 4, !dbg !1075
  %shr1116.i1521 = lshr i32 %1735, 10, !dbg !1075
  %and1117.i1522 = and i32 %shr1116.i1521, 63, !dbg !1075
  %idxprom1118.i1523 = zext i32 %and1117.i1522 to i64, !dbg !1075
  %arrayidx1119.i1524 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1118.i1523, !dbg !1075
  %1736 = load i32, i32* %arrayidx1119.i1524, align 4, !dbg !1075
  %xor1120.i1525 = xor i32 %1734, %1736, !dbg !1075
  %1737 = load i32, i32* %u.i417, align 4, !dbg !1075
  %shr1121.i1526 = lshr i32 %1737, 18, !dbg !1075
  %and1122.i1527 = and i32 %shr1121.i1526, 63, !dbg !1075
  %idxprom1123.i1528 = zext i32 %and1122.i1527 to i64, !dbg !1075
  %arrayidx1124.i1529 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1123.i1528, !dbg !1075
  %1738 = load i32, i32* %arrayidx1124.i1529, align 4, !dbg !1075
  %xor1125.i1530 = xor i32 %xor1120.i1525, %1738, !dbg !1075
  %1739 = load i32, i32* %u.i417, align 4, !dbg !1075
  %shr1126.i1531 = lshr i32 %1739, 26, !dbg !1075
  %idxprom1128.i1532 = zext i32 %shr1126.i1531 to i64, !dbg !1075
  %arrayidx1129.i1533 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1128.i1532, !dbg !1075
  %1740 = load i32, i32* %arrayidx1129.i1533, align 4, !dbg !1075
  %xor1130.i1534 = xor i32 %xor1125.i1530, %1740, !dbg !1075
  %1741 = load i32, i32* %t.i416, align 4, !dbg !1075
  %shr1131.i1535 = lshr i32 %1741, 2, !dbg !1075
  %and1132.i1536 = and i32 %shr1131.i1535, 63, !dbg !1075
  %idxprom1133.i1537 = zext i32 %and1132.i1536 to i64, !dbg !1075
  %arrayidx1134.i1538 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1133.i1537, !dbg !1075
  %1742 = load i32, i32* %arrayidx1134.i1538, align 4, !dbg !1075
  %xor1135.i1539 = xor i32 %xor1130.i1534, %1742, !dbg !1075
  %1743 = load i32, i32* %t.i416, align 4, !dbg !1075
  %shr1136.i1540 = lshr i32 %1743, 10, !dbg !1075
  %and1137.i1541 = and i32 %shr1136.i1540, 63, !dbg !1075
  %idxprom1138.i1542 = zext i32 %and1137.i1541 to i64, !dbg !1075
  %arrayidx1139.i1543 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1138.i1542, !dbg !1075
  %1744 = load i32, i32* %arrayidx1139.i1543, align 4, !dbg !1075
  %xor1140.i1544 = xor i32 %xor1135.i1539, %1744, !dbg !1075
  %1745 = load i32, i32* %t.i416, align 4, !dbg !1075
  %shr1141.i1545 = lshr i32 %1745, 18, !dbg !1075
  %and1142.i1546 = and i32 %shr1141.i1545, 63, !dbg !1075
  %idxprom1143.i1547 = zext i32 %and1142.i1546 to i64, !dbg !1075
  %arrayidx1144.i1548 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1143.i1547, !dbg !1075
  %1746 = load i32, i32* %arrayidx1144.i1548, align 4, !dbg !1075
  %xor1145.i1549 = xor i32 %xor1140.i1544, %1746, !dbg !1075
  %1747 = load i32, i32* %t.i416, align 4, !dbg !1075
  %shr1146.i1550 = lshr i32 %1747, 26, !dbg !1075
  %idxprom1148.i1551 = zext i32 %shr1146.i1550 to i64, !dbg !1075
  %arrayidx1149.i1552 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1148.i1551, !dbg !1075
  %1748 = load i32, i32* %arrayidx1149.i1552, align 4, !dbg !1075
  %xor1150.i1553 = xor i32 %xor1145.i1549, %1748, !dbg !1075
  %1749 = load i32, i32* %r.i415, align 4, !dbg !1075
  %xor1151.i1554 = xor i32 %1749, %xor1150.i1553, !dbg !1075
  store i32 %xor1151.i1554, i32* %r.i415, align 4, !dbg !1075
  %1750 = load i32, i32* %r.i415, align 4, !dbg !1076
  %1751 = load i32*, i32** %s.i418, align 8, !dbg !1076
  %arrayidx1152.i1555 = getelementptr inbounds i32, i32* %1751, i64 14, !dbg !1076
  %1752 = load i32, i32* %arrayidx1152.i1555, align 4, !dbg !1076
  %xor1153.i1556 = xor i32 %1750, %1752, !dbg !1076
  store i32 %xor1153.i1556, i32* %u.i417, align 4, !dbg !1076
  %1753 = load i32, i32* %r.i415, align 4, !dbg !1076
  %1754 = load i32*, i32** %s.i418, align 8, !dbg !1076
  %arrayidx1154.i1557 = getelementptr inbounds i32, i32* %1754, i64 15, !dbg !1076
  %1755 = load i32, i32* %arrayidx1154.i1557, align 4, !dbg !1076
  %xor1155.i1558 = xor i32 %1753, %1755, !dbg !1076
  store i32 %xor1155.i1558, i32* %t.i416, align 4, !dbg !1076
  %1756 = load i32, i32* %t.i416, align 4, !dbg !820
  %1757 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1756) #7, !dbg !820, !srcloc !241
  store i32 %1757, i32* %ret1156.i472, align 4, !dbg !820
  %1758 = load i32, i32* %ret1156.i472, align 4, !dbg !820
  store i32 %1758, i32* %tmp1157.i473, align 4, !dbg !820
  %1759 = load i32, i32* %tmp1157.i473, align 4, !dbg !820
  store i32 %1759, i32* %t.i416, align 4, !dbg !1076
  %1760 = load i32, i32* %u.i417, align 4, !dbg !1076
  %shr1158.i1559 = lshr i32 %1760, 2, !dbg !1076
  %and1159.i1560 = and i32 %shr1158.i1559, 63, !dbg !1076
  %idxprom1160.i1561 = zext i32 %and1159.i1560 to i64, !dbg !1076
  %arrayidx1161.i1562 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1160.i1561, !dbg !1076
  %1761 = load i32, i32* %arrayidx1161.i1562, align 4, !dbg !1076
  %1762 = load i32, i32* %u.i417, align 4, !dbg !1076
  %shr1162.i1563 = lshr i32 %1762, 10, !dbg !1076
  %and1163.i1564 = and i32 %shr1162.i1563, 63, !dbg !1076
  %idxprom1164.i1565 = zext i32 %and1163.i1564 to i64, !dbg !1076
  %arrayidx1165.i1566 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1164.i1565, !dbg !1076
  %1763 = load i32, i32* %arrayidx1165.i1566, align 4, !dbg !1076
  %xor1166.i1567 = xor i32 %1761, %1763, !dbg !1076
  %1764 = load i32, i32* %u.i417, align 4, !dbg !1076
  %shr1167.i1568 = lshr i32 %1764, 18, !dbg !1076
  %and1168.i1569 = and i32 %shr1167.i1568, 63, !dbg !1076
  %idxprom1169.i1570 = zext i32 %and1168.i1569 to i64, !dbg !1076
  %arrayidx1170.i1571 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1169.i1570, !dbg !1076
  %1765 = load i32, i32* %arrayidx1170.i1571, align 4, !dbg !1076
  %xor1171.i1572 = xor i32 %xor1166.i1567, %1765, !dbg !1076
  %1766 = load i32, i32* %u.i417, align 4, !dbg !1076
  %shr1172.i1573 = lshr i32 %1766, 26, !dbg !1076
  %idxprom1174.i1574 = zext i32 %shr1172.i1573 to i64, !dbg !1076
  %arrayidx1175.i1575 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1174.i1574, !dbg !1076
  %1767 = load i32, i32* %arrayidx1175.i1575, align 4, !dbg !1076
  %xor1176.i1576 = xor i32 %xor1171.i1572, %1767, !dbg !1076
  %1768 = load i32, i32* %t.i416, align 4, !dbg !1076
  %shr1177.i1577 = lshr i32 %1768, 2, !dbg !1076
  %and1178.i1578 = and i32 %shr1177.i1577, 63, !dbg !1076
  %idxprom1179.i1579 = zext i32 %and1178.i1578 to i64, !dbg !1076
  %arrayidx1180.i1580 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1179.i1579, !dbg !1076
  %1769 = load i32, i32* %arrayidx1180.i1580, align 4, !dbg !1076
  %xor1181.i1581 = xor i32 %xor1176.i1576, %1769, !dbg !1076
  %1770 = load i32, i32* %t.i416, align 4, !dbg !1076
  %shr1182.i1582 = lshr i32 %1770, 10, !dbg !1076
  %and1183.i1583 = and i32 %shr1182.i1582, 63, !dbg !1076
  %idxprom1184.i1584 = zext i32 %and1183.i1583 to i64, !dbg !1076
  %arrayidx1185.i1585 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1184.i1584, !dbg !1076
  %1771 = load i32, i32* %arrayidx1185.i1585, align 4, !dbg !1076
  %xor1186.i1586 = xor i32 %xor1181.i1581, %1771, !dbg !1076
  %1772 = load i32, i32* %t.i416, align 4, !dbg !1076
  %shr1187.i1587 = lshr i32 %1772, 18, !dbg !1076
  %and1188.i1588 = and i32 %shr1187.i1587, 63, !dbg !1076
  %idxprom1189.i1589 = zext i32 %and1188.i1588 to i64, !dbg !1076
  %arrayidx1190.i1590 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1189.i1589, !dbg !1076
  %1773 = load i32, i32* %arrayidx1190.i1590, align 4, !dbg !1076
  %xor1191.i1591 = xor i32 %xor1186.i1586, %1773, !dbg !1076
  %1774 = load i32, i32* %t.i416, align 4, !dbg !1076
  %shr1192.i1592 = lshr i32 %1774, 26, !dbg !1076
  %idxprom1194.i1593 = zext i32 %shr1192.i1592 to i64, !dbg !1076
  %arrayidx1195.i1594 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1194.i1593, !dbg !1076
  %1775 = load i32, i32* %arrayidx1195.i1594, align 4, !dbg !1076
  %xor1196.i1595 = xor i32 %xor1191.i1591, %1775, !dbg !1076
  %1776 = load i32, i32* %l.i414, align 4, !dbg !1076
  %xor1197.i1596 = xor i32 %1776, %xor1196.i1595, !dbg !1076
  store i32 %xor1197.i1596, i32* %l.i414, align 4, !dbg !1076
  %1777 = load i32, i32* %l.i414, align 4, !dbg !1077
  %1778 = load i32*, i32** %s.i418, align 8, !dbg !1077
  %arrayidx1198.i1597 = getelementptr inbounds i32, i32* %1778, i64 12, !dbg !1077
  %1779 = load i32, i32* %arrayidx1198.i1597, align 4, !dbg !1077
  %xor1199.i1598 = xor i32 %1777, %1779, !dbg !1077
  store i32 %xor1199.i1598, i32* %u.i417, align 4, !dbg !1077
  %1780 = load i32, i32* %l.i414, align 4, !dbg !1077
  %1781 = load i32*, i32** %s.i418, align 8, !dbg !1077
  %arrayidx1200.i1599 = getelementptr inbounds i32, i32* %1781, i64 13, !dbg !1077
  %1782 = load i32, i32* %arrayidx1200.i1599, align 4, !dbg !1077
  %xor1201.i1600 = xor i32 %1780, %1782, !dbg !1077
  store i32 %xor1201.i1600, i32* %t.i416, align 4, !dbg !1077
  %1783 = load i32, i32* %t.i416, align 4, !dbg !821
  %1784 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1783) #7, !dbg !821, !srcloc !247
  store i32 %1784, i32* %ret1202.i474, align 4, !dbg !821
  %1785 = load i32, i32* %ret1202.i474, align 4, !dbg !821
  store i32 %1785, i32* %tmp1203.i475, align 4, !dbg !821
  %1786 = load i32, i32* %tmp1203.i475, align 4, !dbg !821
  store i32 %1786, i32* %t.i416, align 4, !dbg !1077
  %1787 = load i32, i32* %u.i417, align 4, !dbg !1077
  %shr1204.i1601 = lshr i32 %1787, 2, !dbg !1077
  %and1205.i1602 = and i32 %shr1204.i1601, 63, !dbg !1077
  %idxprom1206.i1603 = zext i32 %and1205.i1602 to i64, !dbg !1077
  %arrayidx1207.i1604 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1206.i1603, !dbg !1077
  %1788 = load i32, i32* %arrayidx1207.i1604, align 4, !dbg !1077
  %1789 = load i32, i32* %u.i417, align 4, !dbg !1077
  %shr1208.i1605 = lshr i32 %1789, 10, !dbg !1077
  %and1209.i1606 = and i32 %shr1208.i1605, 63, !dbg !1077
  %idxprom1210.i1607 = zext i32 %and1209.i1606 to i64, !dbg !1077
  %arrayidx1211.i1608 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1210.i1607, !dbg !1077
  %1790 = load i32, i32* %arrayidx1211.i1608, align 4, !dbg !1077
  %xor1212.i1609 = xor i32 %1788, %1790, !dbg !1077
  %1791 = load i32, i32* %u.i417, align 4, !dbg !1077
  %shr1213.i1610 = lshr i32 %1791, 18, !dbg !1077
  %and1214.i1611 = and i32 %shr1213.i1610, 63, !dbg !1077
  %idxprom1215.i1612 = zext i32 %and1214.i1611 to i64, !dbg !1077
  %arrayidx1216.i1613 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1215.i1612, !dbg !1077
  %1792 = load i32, i32* %arrayidx1216.i1613, align 4, !dbg !1077
  %xor1217.i1614 = xor i32 %xor1212.i1609, %1792, !dbg !1077
  %1793 = load i32, i32* %u.i417, align 4, !dbg !1077
  %shr1218.i1615 = lshr i32 %1793, 26, !dbg !1077
  %idxprom1220.i1616 = zext i32 %shr1218.i1615 to i64, !dbg !1077
  %arrayidx1221.i1617 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1220.i1616, !dbg !1077
  %1794 = load i32, i32* %arrayidx1221.i1617, align 4, !dbg !1077
  %xor1222.i1618 = xor i32 %xor1217.i1614, %1794, !dbg !1077
  %1795 = load i32, i32* %t.i416, align 4, !dbg !1077
  %shr1223.i1619 = lshr i32 %1795, 2, !dbg !1077
  %and1224.i1620 = and i32 %shr1223.i1619, 63, !dbg !1077
  %idxprom1225.i1621 = zext i32 %and1224.i1620 to i64, !dbg !1077
  %arrayidx1226.i1622 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1225.i1621, !dbg !1077
  %1796 = load i32, i32* %arrayidx1226.i1622, align 4, !dbg !1077
  %xor1227.i1623 = xor i32 %xor1222.i1618, %1796, !dbg !1077
  %1797 = load i32, i32* %t.i416, align 4, !dbg !1077
  %shr1228.i1624 = lshr i32 %1797, 10, !dbg !1077
  %and1229.i1625 = and i32 %shr1228.i1624, 63, !dbg !1077
  %idxprom1230.i1626 = zext i32 %and1229.i1625 to i64, !dbg !1077
  %arrayidx1231.i1627 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1230.i1626, !dbg !1077
  %1798 = load i32, i32* %arrayidx1231.i1627, align 4, !dbg !1077
  %xor1232.i1628 = xor i32 %xor1227.i1623, %1798, !dbg !1077
  %1799 = load i32, i32* %t.i416, align 4, !dbg !1077
  %shr1233.i1629 = lshr i32 %1799, 18, !dbg !1077
  %and1234.i1630 = and i32 %shr1233.i1629, 63, !dbg !1077
  %idxprom1235.i1631 = zext i32 %and1234.i1630 to i64, !dbg !1077
  %arrayidx1236.i1632 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1235.i1631, !dbg !1077
  %1800 = load i32, i32* %arrayidx1236.i1632, align 4, !dbg !1077
  %xor1237.i1633 = xor i32 %xor1232.i1628, %1800, !dbg !1077
  %1801 = load i32, i32* %t.i416, align 4, !dbg !1077
  %shr1238.i1634 = lshr i32 %1801, 26, !dbg !1077
  %idxprom1240.i1635 = zext i32 %shr1238.i1634 to i64, !dbg !1077
  %arrayidx1241.i1636 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1240.i1635, !dbg !1077
  %1802 = load i32, i32* %arrayidx1241.i1636, align 4, !dbg !1077
  %xor1242.i1637 = xor i32 %xor1237.i1633, %1802, !dbg !1077
  %1803 = load i32, i32* %r.i415, align 4, !dbg !1077
  %xor1243.i1638 = xor i32 %1803, %xor1242.i1637, !dbg !1077
  store i32 %xor1243.i1638, i32* %r.i415, align 4, !dbg !1077
  %1804 = load i32, i32* %r.i415, align 4, !dbg !1078
  %1805 = load i32*, i32** %s.i418, align 8, !dbg !1078
  %arrayidx1244.i1639 = getelementptr inbounds i32, i32* %1805, i64 10, !dbg !1078
  %1806 = load i32, i32* %arrayidx1244.i1639, align 4, !dbg !1078
  %xor1245.i1640 = xor i32 %1804, %1806, !dbg !1078
  store i32 %xor1245.i1640, i32* %u.i417, align 4, !dbg !1078
  %1807 = load i32, i32* %r.i415, align 4, !dbg !1078
  %1808 = load i32*, i32** %s.i418, align 8, !dbg !1078
  %arrayidx1246.i1641 = getelementptr inbounds i32, i32* %1808, i64 11, !dbg !1078
  %1809 = load i32, i32* %arrayidx1246.i1641, align 4, !dbg !1078
  %xor1247.i1642 = xor i32 %1807, %1809, !dbg !1078
  store i32 %xor1247.i1642, i32* %t.i416, align 4, !dbg !1078
  %1810 = load i32, i32* %t.i416, align 4, !dbg !822
  %1811 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1810) #7, !dbg !822, !srcloc !253
  store i32 %1811, i32* %ret1248.i476, align 4, !dbg !822
  %1812 = load i32, i32* %ret1248.i476, align 4, !dbg !822
  store i32 %1812, i32* %tmp1249.i477, align 4, !dbg !822
  %1813 = load i32, i32* %tmp1249.i477, align 4, !dbg !822
  store i32 %1813, i32* %t.i416, align 4, !dbg !1078
  %1814 = load i32, i32* %u.i417, align 4, !dbg !1078
  %shr1250.i1643 = lshr i32 %1814, 2, !dbg !1078
  %and1251.i1644 = and i32 %shr1250.i1643, 63, !dbg !1078
  %idxprom1252.i1645 = zext i32 %and1251.i1644 to i64, !dbg !1078
  %arrayidx1253.i1646 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1252.i1645, !dbg !1078
  %1815 = load i32, i32* %arrayidx1253.i1646, align 4, !dbg !1078
  %1816 = load i32, i32* %u.i417, align 4, !dbg !1078
  %shr1254.i1647 = lshr i32 %1816, 10, !dbg !1078
  %and1255.i1648 = and i32 %shr1254.i1647, 63, !dbg !1078
  %idxprom1256.i1649 = zext i32 %and1255.i1648 to i64, !dbg !1078
  %arrayidx1257.i1650 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1256.i1649, !dbg !1078
  %1817 = load i32, i32* %arrayidx1257.i1650, align 4, !dbg !1078
  %xor1258.i1651 = xor i32 %1815, %1817, !dbg !1078
  %1818 = load i32, i32* %u.i417, align 4, !dbg !1078
  %shr1259.i1652 = lshr i32 %1818, 18, !dbg !1078
  %and1260.i1653 = and i32 %shr1259.i1652, 63, !dbg !1078
  %idxprom1261.i1654 = zext i32 %and1260.i1653 to i64, !dbg !1078
  %arrayidx1262.i1655 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1261.i1654, !dbg !1078
  %1819 = load i32, i32* %arrayidx1262.i1655, align 4, !dbg !1078
  %xor1263.i1656 = xor i32 %xor1258.i1651, %1819, !dbg !1078
  %1820 = load i32, i32* %u.i417, align 4, !dbg !1078
  %shr1264.i1657 = lshr i32 %1820, 26, !dbg !1078
  %idxprom1266.i1658 = zext i32 %shr1264.i1657 to i64, !dbg !1078
  %arrayidx1267.i1659 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1266.i1658, !dbg !1078
  %1821 = load i32, i32* %arrayidx1267.i1659, align 4, !dbg !1078
  %xor1268.i1660 = xor i32 %xor1263.i1656, %1821, !dbg !1078
  %1822 = load i32, i32* %t.i416, align 4, !dbg !1078
  %shr1269.i1661 = lshr i32 %1822, 2, !dbg !1078
  %and1270.i1662 = and i32 %shr1269.i1661, 63, !dbg !1078
  %idxprom1271.i1663 = zext i32 %and1270.i1662 to i64, !dbg !1078
  %arrayidx1272.i1664 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1271.i1663, !dbg !1078
  %1823 = load i32, i32* %arrayidx1272.i1664, align 4, !dbg !1078
  %xor1273.i1665 = xor i32 %xor1268.i1660, %1823, !dbg !1078
  %1824 = load i32, i32* %t.i416, align 4, !dbg !1078
  %shr1274.i1666 = lshr i32 %1824, 10, !dbg !1078
  %and1275.i1667 = and i32 %shr1274.i1666, 63, !dbg !1078
  %idxprom1276.i1668 = zext i32 %and1275.i1667 to i64, !dbg !1078
  %arrayidx1277.i1669 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1276.i1668, !dbg !1078
  %1825 = load i32, i32* %arrayidx1277.i1669, align 4, !dbg !1078
  %xor1278.i1670 = xor i32 %xor1273.i1665, %1825, !dbg !1078
  %1826 = load i32, i32* %t.i416, align 4, !dbg !1078
  %shr1279.i1671 = lshr i32 %1826, 18, !dbg !1078
  %and1280.i1672 = and i32 %shr1279.i1671, 63, !dbg !1078
  %idxprom1281.i1673 = zext i32 %and1280.i1672 to i64, !dbg !1078
  %arrayidx1282.i1674 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1281.i1673, !dbg !1078
  %1827 = load i32, i32* %arrayidx1282.i1674, align 4, !dbg !1078
  %xor1283.i1675 = xor i32 %xor1278.i1670, %1827, !dbg !1078
  %1828 = load i32, i32* %t.i416, align 4, !dbg !1078
  %shr1284.i1676 = lshr i32 %1828, 26, !dbg !1078
  %idxprom1286.i1677 = zext i32 %shr1284.i1676 to i64, !dbg !1078
  %arrayidx1287.i1678 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1286.i1677, !dbg !1078
  %1829 = load i32, i32* %arrayidx1287.i1678, align 4, !dbg !1078
  %xor1288.i1679 = xor i32 %xor1283.i1675, %1829, !dbg !1078
  %1830 = load i32, i32* %l.i414, align 4, !dbg !1078
  %xor1289.i1680 = xor i32 %1830, %xor1288.i1679, !dbg !1078
  store i32 %xor1289.i1680, i32* %l.i414, align 4, !dbg !1078
  %1831 = load i32, i32* %l.i414, align 4, !dbg !1079
  %1832 = load i32*, i32** %s.i418, align 8, !dbg !1079
  %arrayidx1290.i1681 = getelementptr inbounds i32, i32* %1832, i64 8, !dbg !1079
  %1833 = load i32, i32* %arrayidx1290.i1681, align 4, !dbg !1079
  %xor1291.i1682 = xor i32 %1831, %1833, !dbg !1079
  store i32 %xor1291.i1682, i32* %u.i417, align 4, !dbg !1079
  %1834 = load i32, i32* %l.i414, align 4, !dbg !1079
  %1835 = load i32*, i32** %s.i418, align 8, !dbg !1079
  %arrayidx1292.i1683 = getelementptr inbounds i32, i32* %1835, i64 9, !dbg !1079
  %1836 = load i32, i32* %arrayidx1292.i1683, align 4, !dbg !1079
  %xor1293.i1684 = xor i32 %1834, %1836, !dbg !1079
  store i32 %xor1293.i1684, i32* %t.i416, align 4, !dbg !1079
  %1837 = load i32, i32* %t.i416, align 4, !dbg !823
  %1838 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1837) #7, !dbg !823, !srcloc !259
  store i32 %1838, i32* %ret1294.i478, align 4, !dbg !823
  %1839 = load i32, i32* %ret1294.i478, align 4, !dbg !823
  store i32 %1839, i32* %tmp1295.i479, align 4, !dbg !823
  %1840 = load i32, i32* %tmp1295.i479, align 4, !dbg !823
  store i32 %1840, i32* %t.i416, align 4, !dbg !1079
  %1841 = load i32, i32* %u.i417, align 4, !dbg !1079
  %shr1296.i1685 = lshr i32 %1841, 2, !dbg !1079
  %and1297.i1686 = and i32 %shr1296.i1685, 63, !dbg !1079
  %idxprom1298.i1687 = zext i32 %and1297.i1686 to i64, !dbg !1079
  %arrayidx1299.i1688 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1298.i1687, !dbg !1079
  %1842 = load i32, i32* %arrayidx1299.i1688, align 4, !dbg !1079
  %1843 = load i32, i32* %u.i417, align 4, !dbg !1079
  %shr1300.i1689 = lshr i32 %1843, 10, !dbg !1079
  %and1301.i1690 = and i32 %shr1300.i1689, 63, !dbg !1079
  %idxprom1302.i1691 = zext i32 %and1301.i1690 to i64, !dbg !1079
  %arrayidx1303.i1692 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1302.i1691, !dbg !1079
  %1844 = load i32, i32* %arrayidx1303.i1692, align 4, !dbg !1079
  %xor1304.i1693 = xor i32 %1842, %1844, !dbg !1079
  %1845 = load i32, i32* %u.i417, align 4, !dbg !1079
  %shr1305.i1694 = lshr i32 %1845, 18, !dbg !1079
  %and1306.i1695 = and i32 %shr1305.i1694, 63, !dbg !1079
  %idxprom1307.i1696 = zext i32 %and1306.i1695 to i64, !dbg !1079
  %arrayidx1308.i1697 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1307.i1696, !dbg !1079
  %1846 = load i32, i32* %arrayidx1308.i1697, align 4, !dbg !1079
  %xor1309.i1698 = xor i32 %xor1304.i1693, %1846, !dbg !1079
  %1847 = load i32, i32* %u.i417, align 4, !dbg !1079
  %shr1310.i1699 = lshr i32 %1847, 26, !dbg !1079
  %idxprom1312.i1700 = zext i32 %shr1310.i1699 to i64, !dbg !1079
  %arrayidx1313.i1701 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1312.i1700, !dbg !1079
  %1848 = load i32, i32* %arrayidx1313.i1701, align 4, !dbg !1079
  %xor1314.i1702 = xor i32 %xor1309.i1698, %1848, !dbg !1079
  %1849 = load i32, i32* %t.i416, align 4, !dbg !1079
  %shr1315.i1703 = lshr i32 %1849, 2, !dbg !1079
  %and1316.i1704 = and i32 %shr1315.i1703, 63, !dbg !1079
  %idxprom1317.i1705 = zext i32 %and1316.i1704 to i64, !dbg !1079
  %arrayidx1318.i1706 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1317.i1705, !dbg !1079
  %1850 = load i32, i32* %arrayidx1318.i1706, align 4, !dbg !1079
  %xor1319.i1707 = xor i32 %xor1314.i1702, %1850, !dbg !1079
  %1851 = load i32, i32* %t.i416, align 4, !dbg !1079
  %shr1320.i1708 = lshr i32 %1851, 10, !dbg !1079
  %and1321.i1709 = and i32 %shr1320.i1708, 63, !dbg !1079
  %idxprom1322.i1710 = zext i32 %and1321.i1709 to i64, !dbg !1079
  %arrayidx1323.i1711 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1322.i1710, !dbg !1079
  %1852 = load i32, i32* %arrayidx1323.i1711, align 4, !dbg !1079
  %xor1324.i1712 = xor i32 %xor1319.i1707, %1852, !dbg !1079
  %1853 = load i32, i32* %t.i416, align 4, !dbg !1079
  %shr1325.i1713 = lshr i32 %1853, 18, !dbg !1079
  %and1326.i1714 = and i32 %shr1325.i1713, 63, !dbg !1079
  %idxprom1327.i1715 = zext i32 %and1326.i1714 to i64, !dbg !1079
  %arrayidx1328.i1716 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1327.i1715, !dbg !1079
  %1854 = load i32, i32* %arrayidx1328.i1716, align 4, !dbg !1079
  %xor1329.i1717 = xor i32 %xor1324.i1712, %1854, !dbg !1079
  %1855 = load i32, i32* %t.i416, align 4, !dbg !1079
  %shr1330.i1718 = lshr i32 %1855, 26, !dbg !1079
  %idxprom1332.i1719 = zext i32 %shr1330.i1718 to i64, !dbg !1079
  %arrayidx1333.i1720 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1332.i1719, !dbg !1079
  %1856 = load i32, i32* %arrayidx1333.i1720, align 4, !dbg !1079
  %xor1334.i1721 = xor i32 %xor1329.i1717, %1856, !dbg !1079
  %1857 = load i32, i32* %r.i415, align 4, !dbg !1079
  %xor1335.i1722 = xor i32 %1857, %xor1334.i1721, !dbg !1079
  store i32 %xor1335.i1722, i32* %r.i415, align 4, !dbg !1079
  %1858 = load i32, i32* %r.i415, align 4, !dbg !1080
  %1859 = load i32*, i32** %s.i418, align 8, !dbg !1080
  %arrayidx1336.i1723 = getelementptr inbounds i32, i32* %1859, i64 6, !dbg !1080
  %1860 = load i32, i32* %arrayidx1336.i1723, align 4, !dbg !1080
  %xor1337.i1724 = xor i32 %1858, %1860, !dbg !1080
  store i32 %xor1337.i1724, i32* %u.i417, align 4, !dbg !1080
  %1861 = load i32, i32* %r.i415, align 4, !dbg !1080
  %1862 = load i32*, i32** %s.i418, align 8, !dbg !1080
  %arrayidx1338.i1725 = getelementptr inbounds i32, i32* %1862, i64 7, !dbg !1080
  %1863 = load i32, i32* %arrayidx1338.i1725, align 4, !dbg !1080
  %xor1339.i1726 = xor i32 %1861, %1863, !dbg !1080
  store i32 %xor1339.i1726, i32* %t.i416, align 4, !dbg !1080
  %1864 = load i32, i32* %t.i416, align 4, !dbg !824
  %1865 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1864) #7, !dbg !824, !srcloc !265
  store i32 %1865, i32* %ret1340.i480, align 4, !dbg !824
  %1866 = load i32, i32* %ret1340.i480, align 4, !dbg !824
  store i32 %1866, i32* %tmp1341.i481, align 4, !dbg !824
  %1867 = load i32, i32* %tmp1341.i481, align 4, !dbg !824
  store i32 %1867, i32* %t.i416, align 4, !dbg !1080
  %1868 = load i32, i32* %u.i417, align 4, !dbg !1080
  %shr1342.i1727 = lshr i32 %1868, 2, !dbg !1080
  %and1343.i1728 = and i32 %shr1342.i1727, 63, !dbg !1080
  %idxprom1344.i1729 = zext i32 %and1343.i1728 to i64, !dbg !1080
  %arrayidx1345.i1730 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1344.i1729, !dbg !1080
  %1869 = load i32, i32* %arrayidx1345.i1730, align 4, !dbg !1080
  %1870 = load i32, i32* %u.i417, align 4, !dbg !1080
  %shr1346.i1731 = lshr i32 %1870, 10, !dbg !1080
  %and1347.i1732 = and i32 %shr1346.i1731, 63, !dbg !1080
  %idxprom1348.i1733 = zext i32 %and1347.i1732 to i64, !dbg !1080
  %arrayidx1349.i1734 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1348.i1733, !dbg !1080
  %1871 = load i32, i32* %arrayidx1349.i1734, align 4, !dbg !1080
  %xor1350.i1735 = xor i32 %1869, %1871, !dbg !1080
  %1872 = load i32, i32* %u.i417, align 4, !dbg !1080
  %shr1351.i1736 = lshr i32 %1872, 18, !dbg !1080
  %and1352.i1737 = and i32 %shr1351.i1736, 63, !dbg !1080
  %idxprom1353.i1738 = zext i32 %and1352.i1737 to i64, !dbg !1080
  %arrayidx1354.i1739 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1353.i1738, !dbg !1080
  %1873 = load i32, i32* %arrayidx1354.i1739, align 4, !dbg !1080
  %xor1355.i1740 = xor i32 %xor1350.i1735, %1873, !dbg !1080
  %1874 = load i32, i32* %u.i417, align 4, !dbg !1080
  %shr1356.i1741 = lshr i32 %1874, 26, !dbg !1080
  %idxprom1358.i1742 = zext i32 %shr1356.i1741 to i64, !dbg !1080
  %arrayidx1359.i1743 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1358.i1742, !dbg !1080
  %1875 = load i32, i32* %arrayidx1359.i1743, align 4, !dbg !1080
  %xor1360.i1744 = xor i32 %xor1355.i1740, %1875, !dbg !1080
  %1876 = load i32, i32* %t.i416, align 4, !dbg !1080
  %shr1361.i1745 = lshr i32 %1876, 2, !dbg !1080
  %and1362.i1746 = and i32 %shr1361.i1745, 63, !dbg !1080
  %idxprom1363.i1747 = zext i32 %and1362.i1746 to i64, !dbg !1080
  %arrayidx1364.i1748 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1363.i1747, !dbg !1080
  %1877 = load i32, i32* %arrayidx1364.i1748, align 4, !dbg !1080
  %xor1365.i1749 = xor i32 %xor1360.i1744, %1877, !dbg !1080
  %1878 = load i32, i32* %t.i416, align 4, !dbg !1080
  %shr1366.i1750 = lshr i32 %1878, 10, !dbg !1080
  %and1367.i1751 = and i32 %shr1366.i1750, 63, !dbg !1080
  %idxprom1368.i1752 = zext i32 %and1367.i1751 to i64, !dbg !1080
  %arrayidx1369.i1753 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1368.i1752, !dbg !1080
  %1879 = load i32, i32* %arrayidx1369.i1753, align 4, !dbg !1080
  %xor1370.i1754 = xor i32 %xor1365.i1749, %1879, !dbg !1080
  %1880 = load i32, i32* %t.i416, align 4, !dbg !1080
  %shr1371.i1755 = lshr i32 %1880, 18, !dbg !1080
  %and1372.i1756 = and i32 %shr1371.i1755, 63, !dbg !1080
  %idxprom1373.i1757 = zext i32 %and1372.i1756 to i64, !dbg !1080
  %arrayidx1374.i1758 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1373.i1757, !dbg !1080
  %1881 = load i32, i32* %arrayidx1374.i1758, align 4, !dbg !1080
  %xor1375.i1759 = xor i32 %xor1370.i1754, %1881, !dbg !1080
  %1882 = load i32, i32* %t.i416, align 4, !dbg !1080
  %shr1376.i1760 = lshr i32 %1882, 26, !dbg !1080
  %idxprom1378.i1761 = zext i32 %shr1376.i1760 to i64, !dbg !1080
  %arrayidx1379.i1762 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1378.i1761, !dbg !1080
  %1883 = load i32, i32* %arrayidx1379.i1762, align 4, !dbg !1080
  %xor1380.i1763 = xor i32 %xor1375.i1759, %1883, !dbg !1080
  %1884 = load i32, i32* %l.i414, align 4, !dbg !1080
  %xor1381.i1764 = xor i32 %1884, %xor1380.i1763, !dbg !1080
  store i32 %xor1381.i1764, i32* %l.i414, align 4, !dbg !1080
  %1885 = load i32, i32* %l.i414, align 4, !dbg !1081
  %1886 = load i32*, i32** %s.i418, align 8, !dbg !1081
  %arrayidx1382.i1765 = getelementptr inbounds i32, i32* %1886, i64 4, !dbg !1081
  %1887 = load i32, i32* %arrayidx1382.i1765, align 4, !dbg !1081
  %xor1383.i1766 = xor i32 %1885, %1887, !dbg !1081
  store i32 %xor1383.i1766, i32* %u.i417, align 4, !dbg !1081
  %1888 = load i32, i32* %l.i414, align 4, !dbg !1081
  %1889 = load i32*, i32** %s.i418, align 8, !dbg !1081
  %arrayidx1384.i1767 = getelementptr inbounds i32, i32* %1889, i64 5, !dbg !1081
  %1890 = load i32, i32* %arrayidx1384.i1767, align 4, !dbg !1081
  %xor1385.i1768 = xor i32 %1888, %1890, !dbg !1081
  store i32 %xor1385.i1768, i32* %t.i416, align 4, !dbg !1081
  %1891 = load i32, i32* %t.i416, align 4, !dbg !825
  %1892 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1891) #7, !dbg !825, !srcloc !271
  store i32 %1892, i32* %ret1386.i482, align 4, !dbg !825
  %1893 = load i32, i32* %ret1386.i482, align 4, !dbg !825
  store i32 %1893, i32* %tmp1387.i483, align 4, !dbg !825
  %1894 = load i32, i32* %tmp1387.i483, align 4, !dbg !825
  store i32 %1894, i32* %t.i416, align 4, !dbg !1081
  %1895 = load i32, i32* %u.i417, align 4, !dbg !1081
  %shr1388.i1769 = lshr i32 %1895, 2, !dbg !1081
  %and1389.i1770 = and i32 %shr1388.i1769, 63, !dbg !1081
  %idxprom1390.i1771 = zext i32 %and1389.i1770 to i64, !dbg !1081
  %arrayidx1391.i1772 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1390.i1771, !dbg !1081
  %1896 = load i32, i32* %arrayidx1391.i1772, align 4, !dbg !1081
  %1897 = load i32, i32* %u.i417, align 4, !dbg !1081
  %shr1392.i1773 = lshr i32 %1897, 10, !dbg !1081
  %and1393.i1774 = and i32 %shr1392.i1773, 63, !dbg !1081
  %idxprom1394.i1775 = zext i32 %and1393.i1774 to i64, !dbg !1081
  %arrayidx1395.i1776 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1394.i1775, !dbg !1081
  %1898 = load i32, i32* %arrayidx1395.i1776, align 4, !dbg !1081
  %xor1396.i1777 = xor i32 %1896, %1898, !dbg !1081
  %1899 = load i32, i32* %u.i417, align 4, !dbg !1081
  %shr1397.i1778 = lshr i32 %1899, 18, !dbg !1081
  %and1398.i1779 = and i32 %shr1397.i1778, 63, !dbg !1081
  %idxprom1399.i1780 = zext i32 %and1398.i1779 to i64, !dbg !1081
  %arrayidx1400.i1781 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1399.i1780, !dbg !1081
  %1900 = load i32, i32* %arrayidx1400.i1781, align 4, !dbg !1081
  %xor1401.i1782 = xor i32 %xor1396.i1777, %1900, !dbg !1081
  %1901 = load i32, i32* %u.i417, align 4, !dbg !1081
  %shr1402.i1783 = lshr i32 %1901, 26, !dbg !1081
  %idxprom1404.i1784 = zext i32 %shr1402.i1783 to i64, !dbg !1081
  %arrayidx1405.i1785 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1404.i1784, !dbg !1081
  %1902 = load i32, i32* %arrayidx1405.i1785, align 4, !dbg !1081
  %xor1406.i1786 = xor i32 %xor1401.i1782, %1902, !dbg !1081
  %1903 = load i32, i32* %t.i416, align 4, !dbg !1081
  %shr1407.i1787 = lshr i32 %1903, 2, !dbg !1081
  %and1408.i1788 = and i32 %shr1407.i1787, 63, !dbg !1081
  %idxprom1409.i1789 = zext i32 %and1408.i1788 to i64, !dbg !1081
  %arrayidx1410.i1790 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1409.i1789, !dbg !1081
  %1904 = load i32, i32* %arrayidx1410.i1790, align 4, !dbg !1081
  %xor1411.i1791 = xor i32 %xor1406.i1786, %1904, !dbg !1081
  %1905 = load i32, i32* %t.i416, align 4, !dbg !1081
  %shr1412.i1792 = lshr i32 %1905, 10, !dbg !1081
  %and1413.i1793 = and i32 %shr1412.i1792, 63, !dbg !1081
  %idxprom1414.i1794 = zext i32 %and1413.i1793 to i64, !dbg !1081
  %arrayidx1415.i1795 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1414.i1794, !dbg !1081
  %1906 = load i32, i32* %arrayidx1415.i1795, align 4, !dbg !1081
  %xor1416.i1796 = xor i32 %xor1411.i1791, %1906, !dbg !1081
  %1907 = load i32, i32* %t.i416, align 4, !dbg !1081
  %shr1417.i1797 = lshr i32 %1907, 18, !dbg !1081
  %and1418.i1798 = and i32 %shr1417.i1797, 63, !dbg !1081
  %idxprom1419.i1799 = zext i32 %and1418.i1798 to i64, !dbg !1081
  %arrayidx1420.i1800 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1419.i1799, !dbg !1081
  %1908 = load i32, i32* %arrayidx1420.i1800, align 4, !dbg !1081
  %xor1421.i1801 = xor i32 %xor1416.i1796, %1908, !dbg !1081
  %1909 = load i32, i32* %t.i416, align 4, !dbg !1081
  %shr1422.i1802 = lshr i32 %1909, 26, !dbg !1081
  %idxprom1424.i1803 = zext i32 %shr1422.i1802 to i64, !dbg !1081
  %arrayidx1425.i1804 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1424.i1803, !dbg !1081
  %1910 = load i32, i32* %arrayidx1425.i1804, align 4, !dbg !1081
  %xor1426.i1805 = xor i32 %xor1421.i1801, %1910, !dbg !1081
  %1911 = load i32, i32* %r.i415, align 4, !dbg !1081
  %xor1427.i1806 = xor i32 %1911, %xor1426.i1805, !dbg !1081
  store i32 %xor1427.i1806, i32* %r.i415, align 4, !dbg !1081
  %1912 = load i32, i32* %r.i415, align 4, !dbg !1082
  %1913 = load i32*, i32** %s.i418, align 8, !dbg !1082
  %arrayidx1428.i1807 = getelementptr inbounds i32, i32* %1913, i64 2, !dbg !1082
  %1914 = load i32, i32* %arrayidx1428.i1807, align 4, !dbg !1082
  %xor1429.i1808 = xor i32 %1912, %1914, !dbg !1082
  store i32 %xor1429.i1808, i32* %u.i417, align 4, !dbg !1082
  %1915 = load i32, i32* %r.i415, align 4, !dbg !1082
  %1916 = load i32*, i32** %s.i418, align 8, !dbg !1082
  %arrayidx1430.i1809 = getelementptr inbounds i32, i32* %1916, i64 3, !dbg !1082
  %1917 = load i32, i32* %arrayidx1430.i1809, align 4, !dbg !1082
  %xor1431.i1810 = xor i32 %1915, %1917, !dbg !1082
  store i32 %xor1431.i1810, i32* %t.i416, align 4, !dbg !1082
  %1918 = load i32, i32* %t.i416, align 4, !dbg !826
  %1919 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1918) #7, !dbg !826, !srcloc !277
  store i32 %1919, i32* %ret1432.i484, align 4, !dbg !826
  %1920 = load i32, i32* %ret1432.i484, align 4, !dbg !826
  store i32 %1920, i32* %tmp1433.i485, align 4, !dbg !826
  %1921 = load i32, i32* %tmp1433.i485, align 4, !dbg !826
  store i32 %1921, i32* %t.i416, align 4, !dbg !1082
  %1922 = load i32, i32* %u.i417, align 4, !dbg !1082
  %shr1434.i1811 = lshr i32 %1922, 2, !dbg !1082
  %and1435.i1812 = and i32 %shr1434.i1811, 63, !dbg !1082
  %idxprom1436.i1813 = zext i32 %and1435.i1812 to i64, !dbg !1082
  %arrayidx1437.i1814 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1436.i1813, !dbg !1082
  %1923 = load i32, i32* %arrayidx1437.i1814, align 4, !dbg !1082
  %1924 = load i32, i32* %u.i417, align 4, !dbg !1082
  %shr1438.i1815 = lshr i32 %1924, 10, !dbg !1082
  %and1439.i1816 = and i32 %shr1438.i1815, 63, !dbg !1082
  %idxprom1440.i1817 = zext i32 %and1439.i1816 to i64, !dbg !1082
  %arrayidx1441.i1818 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1440.i1817, !dbg !1082
  %1925 = load i32, i32* %arrayidx1441.i1818, align 4, !dbg !1082
  %xor1442.i1819 = xor i32 %1923, %1925, !dbg !1082
  %1926 = load i32, i32* %u.i417, align 4, !dbg !1082
  %shr1443.i1820 = lshr i32 %1926, 18, !dbg !1082
  %and1444.i1821 = and i32 %shr1443.i1820, 63, !dbg !1082
  %idxprom1445.i1822 = zext i32 %and1444.i1821 to i64, !dbg !1082
  %arrayidx1446.i1823 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1445.i1822, !dbg !1082
  %1927 = load i32, i32* %arrayidx1446.i1823, align 4, !dbg !1082
  %xor1447.i1824 = xor i32 %xor1442.i1819, %1927, !dbg !1082
  %1928 = load i32, i32* %u.i417, align 4, !dbg !1082
  %shr1448.i1825 = lshr i32 %1928, 26, !dbg !1082
  %idxprom1450.i1826 = zext i32 %shr1448.i1825 to i64, !dbg !1082
  %arrayidx1451.i1827 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1450.i1826, !dbg !1082
  %1929 = load i32, i32* %arrayidx1451.i1827, align 4, !dbg !1082
  %xor1452.i1828 = xor i32 %xor1447.i1824, %1929, !dbg !1082
  %1930 = load i32, i32* %t.i416, align 4, !dbg !1082
  %shr1453.i1829 = lshr i32 %1930, 2, !dbg !1082
  %and1454.i1830 = and i32 %shr1453.i1829, 63, !dbg !1082
  %idxprom1455.i1831 = zext i32 %and1454.i1830 to i64, !dbg !1082
  %arrayidx1456.i1832 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1455.i1831, !dbg !1082
  %1931 = load i32, i32* %arrayidx1456.i1832, align 4, !dbg !1082
  %xor1457.i1833 = xor i32 %xor1452.i1828, %1931, !dbg !1082
  %1932 = load i32, i32* %t.i416, align 4, !dbg !1082
  %shr1458.i1834 = lshr i32 %1932, 10, !dbg !1082
  %and1459.i1835 = and i32 %shr1458.i1834, 63, !dbg !1082
  %idxprom1460.i1836 = zext i32 %and1459.i1835 to i64, !dbg !1082
  %arrayidx1461.i1837 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1460.i1836, !dbg !1082
  %1933 = load i32, i32* %arrayidx1461.i1837, align 4, !dbg !1082
  %xor1462.i1838 = xor i32 %xor1457.i1833, %1933, !dbg !1082
  %1934 = load i32, i32* %t.i416, align 4, !dbg !1082
  %shr1463.i1839 = lshr i32 %1934, 18, !dbg !1082
  %and1464.i1840 = and i32 %shr1463.i1839, 63, !dbg !1082
  %idxprom1465.i1841 = zext i32 %and1464.i1840 to i64, !dbg !1082
  %arrayidx1466.i1842 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1465.i1841, !dbg !1082
  %1935 = load i32, i32* %arrayidx1466.i1842, align 4, !dbg !1082
  %xor1467.i1843 = xor i32 %xor1462.i1838, %1935, !dbg !1082
  %1936 = load i32, i32* %t.i416, align 4, !dbg !1082
  %shr1468.i1844 = lshr i32 %1936, 26, !dbg !1082
  %idxprom1470.i1845 = zext i32 %shr1468.i1844 to i64, !dbg !1082
  %arrayidx1471.i1846 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1470.i1845, !dbg !1082
  %1937 = load i32, i32* %arrayidx1471.i1846, align 4, !dbg !1082
  %xor1472.i1847 = xor i32 %xor1467.i1843, %1937, !dbg !1082
  %1938 = load i32, i32* %l.i414, align 4, !dbg !1082
  %xor1473.i1848 = xor i32 %1938, %xor1472.i1847, !dbg !1082
  store i32 %xor1473.i1848, i32* %l.i414, align 4, !dbg !1082
  %1939 = load i32, i32* %l.i414, align 4, !dbg !1083
  %1940 = load i32*, i32** %s.i418, align 8, !dbg !1083
  %1941 = load i32, i32* %1940, align 4, !dbg !1083
  %xor1475.i1849 = xor i32 %1939, %1941, !dbg !1083
  store i32 %xor1475.i1849, i32* %u.i417, align 4, !dbg !1083
  %1942 = load i32, i32* %l.i414, align 4, !dbg !1083
  %1943 = load i32*, i32** %s.i418, align 8, !dbg !1083
  %arrayidx1476.i1850 = getelementptr inbounds i32, i32* %1943, i64 1, !dbg !1083
  %1944 = load i32, i32* %arrayidx1476.i1850, align 4, !dbg !1083
  %xor1477.i1851 = xor i32 %1942, %1944, !dbg !1083
  store i32 %xor1477.i1851, i32* %t.i416, align 4, !dbg !1083
  %1945 = load i32, i32* %t.i416, align 4, !dbg !827
  %1946 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1945) #7, !dbg !827, !srcloc !283
  store i32 %1946, i32* %ret1478.i486, align 4, !dbg !827
  %1947 = load i32, i32* %ret1478.i486, align 4, !dbg !827
  store i32 %1947, i32* %tmp1479.i487, align 4, !dbg !827
  %1948 = load i32, i32* %tmp1479.i487, align 4, !dbg !827
  store i32 %1948, i32* %t.i416, align 4, !dbg !1083
  %1949 = load i32, i32* %u.i417, align 4, !dbg !1083
  %shr1480.i1852 = lshr i32 %1949, 2, !dbg !1083
  %and1481.i1853 = and i32 %shr1480.i1852, 63, !dbg !1083
  %idxprom1482.i1854 = zext i32 %and1481.i1853 to i64, !dbg !1083
  %arrayidx1483.i1855 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1482.i1854, !dbg !1083
  %1950 = load i32, i32* %arrayidx1483.i1855, align 4, !dbg !1083
  %1951 = load i32, i32* %u.i417, align 4, !dbg !1083
  %shr1484.i1856 = lshr i32 %1951, 10, !dbg !1083
  %and1485.i1857 = and i32 %shr1484.i1856, 63, !dbg !1083
  %idxprom1486.i1858 = zext i32 %and1485.i1857 to i64, !dbg !1083
  %arrayidx1487.i1859 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1486.i1858, !dbg !1083
  %1952 = load i32, i32* %arrayidx1487.i1859, align 4, !dbg !1083
  %xor1488.i1860 = xor i32 %1950, %1952, !dbg !1083
  %1953 = load i32, i32* %u.i417, align 4, !dbg !1083
  %shr1489.i1861 = lshr i32 %1953, 18, !dbg !1083
  %and1490.i1862 = and i32 %shr1489.i1861, 63, !dbg !1083
  %idxprom1491.i1863 = zext i32 %and1490.i1862 to i64, !dbg !1083
  %arrayidx1492.i1864 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1491.i1863, !dbg !1083
  %1954 = load i32, i32* %arrayidx1492.i1864, align 4, !dbg !1083
  %xor1493.i1865 = xor i32 %xor1488.i1860, %1954, !dbg !1083
  %1955 = load i32, i32* %u.i417, align 4, !dbg !1083
  %shr1494.i1866 = lshr i32 %1955, 26, !dbg !1083
  %idxprom1496.i1867 = zext i32 %shr1494.i1866 to i64, !dbg !1083
  %arrayidx1497.i1868 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1496.i1867, !dbg !1083
  %1956 = load i32, i32* %arrayidx1497.i1868, align 4, !dbg !1083
  %xor1498.i1869 = xor i32 %xor1493.i1865, %1956, !dbg !1083
  %1957 = load i32, i32* %t.i416, align 4, !dbg !1083
  %shr1499.i1870 = lshr i32 %1957, 2, !dbg !1083
  %and1500.i1871 = and i32 %shr1499.i1870, 63, !dbg !1083
  %idxprom1501.i1872 = zext i32 %and1500.i1871 to i64, !dbg !1083
  %arrayidx1502.i1873 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1501.i1872, !dbg !1083
  %1958 = load i32, i32* %arrayidx1502.i1873, align 4, !dbg !1083
  %xor1503.i1874 = xor i32 %xor1498.i1869, %1958, !dbg !1083
  %1959 = load i32, i32* %t.i416, align 4, !dbg !1083
  %shr1504.i1875 = lshr i32 %1959, 10, !dbg !1083
  %and1505.i1876 = and i32 %shr1504.i1875, 63, !dbg !1083
  %idxprom1506.i1877 = zext i32 %and1505.i1876 to i64, !dbg !1083
  %arrayidx1507.i1878 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1506.i1877, !dbg !1083
  %1960 = load i32, i32* %arrayidx1507.i1878, align 4, !dbg !1083
  %xor1508.i1879 = xor i32 %xor1503.i1874, %1960, !dbg !1083
  %1961 = load i32, i32* %t.i416, align 4, !dbg !1083
  %shr1509.i1880 = lshr i32 %1961, 18, !dbg !1083
  %and1510.i1881 = and i32 %shr1509.i1880, 63, !dbg !1083
  %idxprom1511.i1882 = zext i32 %and1510.i1881 to i64, !dbg !1083
  %arrayidx1512.i1883 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1511.i1882, !dbg !1083
  %1962 = load i32, i32* %arrayidx1512.i1883, align 4, !dbg !1083
  %xor1513.i1884 = xor i32 %xor1508.i1879, %1962, !dbg !1083
  %1963 = load i32, i32* %t.i416, align 4, !dbg !1083
  %shr1514.i1885 = lshr i32 %1963, 26, !dbg !1083
  %idxprom1516.i1886 = zext i32 %shr1514.i1885 to i64, !dbg !1083
  %arrayidx1517.i1887 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1516.i1886, !dbg !1083
  %1964 = load i32, i32* %arrayidx1517.i1887, align 4, !dbg !1083
  %xor1518.i1888 = xor i32 %xor1513.i1884, %1964, !dbg !1083
  %1965 = load i32, i32* %r.i415, align 4, !dbg !1083
  %xor1519.i1889 = xor i32 %1965, %xor1518.i1888, !dbg !1083
  store i32 %xor1519.i1889, i32* %r.i415, align 4, !dbg !1083
  br label %DES_encrypt1.exit1938

DES_encrypt1.exit1938:                            ; preds = %if.then.i1218, %if.else.i1890
  %1966 = load i32, i32* %l.i414, align 4, !dbg !828
  %1967 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %1966) #7, !dbg !828, !srcloc !287
  store i32 %1967, i32* %ret1520.i488, align 4, !dbg !828
  %1968 = load i32, i32* %ret1520.i488, align 4, !dbg !828
  store i32 %1968, i32* %tmp1521.i489, align 4, !dbg !828
  %1969 = load i32, i32* %tmp1521.i489, align 4, !dbg !828
  %conv1522.i1891 = zext i32 %1969 to i64, !dbg !1084
  %and1523.i1892 = and i64 %conv1522.i1891, 4294967295, !dbg !1085
  %conv1524.i1893 = trunc i64 %and1523.i1892 to i32, !dbg !1084
  store i32 %conv1524.i1893, i32* %l.i414, align 4, !dbg !1086
  %1970 = load i32, i32* %r.i415, align 4, !dbg !829
  %1971 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %1970) #7, !dbg !829, !srcloc !294
  store i32 %1971, i32* %ret1525.i490, align 4, !dbg !829
  %1972 = load i32, i32* %ret1525.i490, align 4, !dbg !829
  store i32 %1972, i32* %tmp1526.i491, align 4, !dbg !829
  %1973 = load i32, i32* %tmp1526.i491, align 4, !dbg !829
  %conv1527.i1894 = zext i32 %1973 to i64, !dbg !1087
  %and1528.i1895 = and i64 %conv1527.i1894, 4294967295, !dbg !1088
  %conv1529.i1896 = trunc i64 %and1528.i1895 to i32, !dbg !1087
  store i32 %conv1529.i1896, i32* %r.i415, align 4, !dbg !1089
  %1974 = load i32, i32* %r.i415, align 4, !dbg !830
  %shr1531.i1897 = lshr i32 %1974, 1, !dbg !830
  %1975 = load i32, i32* %l.i414, align 4, !dbg !830
  %xor1532.i1898 = xor i32 %shr1531.i1897, %1975, !dbg !830
  %conv1533.i1899 = zext i32 %xor1532.i1898 to i64, !dbg !830
  %and1534.i1900 = and i64 %conv1533.i1899, 1431655765, !dbg !830
  %conv1535.i1901 = trunc i64 %and1534.i1900 to i32, !dbg !830
  store i32 %conv1535.i1901, i32* %tt1530.i492, align 4, !dbg !830
  %1976 = load i32, i32* %tt1530.i492, align 4, !dbg !830
  %1977 = load i32, i32* %l.i414, align 4, !dbg !830
  %xor1536.i1902 = xor i32 %1977, %1976, !dbg !830
  store i32 %xor1536.i1902, i32* %l.i414, align 4, !dbg !830
  %1978 = load i32, i32* %tt1530.i492, align 4, !dbg !830
  %shl1537.i1903 = shl i32 %1978, 1, !dbg !830
  %1979 = load i32, i32* %r.i415, align 4, !dbg !830
  %xor1538.i1904 = xor i32 %1979, %shl1537.i1903, !dbg !830
  store i32 %xor1538.i1904, i32* %r.i415, align 4, !dbg !830
  %1980 = load i32, i32* %l.i414, align 4, !dbg !830
  %shr1539.i1905 = lshr i32 %1980, 8, !dbg !830
  %1981 = load i32, i32* %r.i415, align 4, !dbg !830
  %xor1540.i1906 = xor i32 %shr1539.i1905, %1981, !dbg !830
  %conv1541.i1907 = zext i32 %xor1540.i1906 to i64, !dbg !830
  %and1542.i1908 = and i64 %conv1541.i1907, 16711935, !dbg !830
  %conv1543.i1909 = trunc i64 %and1542.i1908 to i32, !dbg !830
  store i32 %conv1543.i1909, i32* %tt1530.i492, align 4, !dbg !830
  %1982 = load i32, i32* %tt1530.i492, align 4, !dbg !830
  %1983 = load i32, i32* %r.i415, align 4, !dbg !830
  %xor1544.i1910 = xor i32 %1983, %1982, !dbg !830
  store i32 %xor1544.i1910, i32* %r.i415, align 4, !dbg !830
  %1984 = load i32, i32* %tt1530.i492, align 4, !dbg !830
  %shl1545.i1911 = shl i32 %1984, 8, !dbg !830
  %1985 = load i32, i32* %l.i414, align 4, !dbg !830
  %xor1546.i1912 = xor i32 %1985, %shl1545.i1911, !dbg !830
  store i32 %xor1546.i1912, i32* %l.i414, align 4, !dbg !830
  %1986 = load i32, i32* %r.i415, align 4, !dbg !830
  %shr1547.i1913 = lshr i32 %1986, 2, !dbg !830
  %1987 = load i32, i32* %l.i414, align 4, !dbg !830
  %xor1548.i1914 = xor i32 %shr1547.i1913, %1987, !dbg !830
  %conv1549.i1915 = zext i32 %xor1548.i1914 to i64, !dbg !830
  %and1550.i1916 = and i64 %conv1549.i1915, 858993459, !dbg !830
  %conv1551.i1917 = trunc i64 %and1550.i1916 to i32, !dbg !830
  store i32 %conv1551.i1917, i32* %tt1530.i492, align 4, !dbg !830
  %1988 = load i32, i32* %tt1530.i492, align 4, !dbg !830
  %1989 = load i32, i32* %l.i414, align 4, !dbg !830
  %xor1552.i1918 = xor i32 %1989, %1988, !dbg !830
  store i32 %xor1552.i1918, i32* %l.i414, align 4, !dbg !830
  %1990 = load i32, i32* %tt1530.i492, align 4, !dbg !830
  %shl1553.i1919 = shl i32 %1990, 2, !dbg !830
  %1991 = load i32, i32* %r.i415, align 4, !dbg !830
  %xor1554.i1920 = xor i32 %1991, %shl1553.i1919, !dbg !830
  store i32 %xor1554.i1920, i32* %r.i415, align 4, !dbg !830
  %1992 = load i32, i32* %l.i414, align 4, !dbg !830
  %shr1555.i1921 = lshr i32 %1992, 16, !dbg !830
  %1993 = load i32, i32* %r.i415, align 4, !dbg !830
  %xor1556.i1922 = xor i32 %shr1555.i1921, %1993, !dbg !830
  %conv1557.i1923 = zext i32 %xor1556.i1922 to i64, !dbg !830
  %and1558.i1924 = and i64 %conv1557.i1923, 65535, !dbg !830
  %conv1559.i1925 = trunc i64 %and1558.i1924 to i32, !dbg !830
  store i32 %conv1559.i1925, i32* %tt1530.i492, align 4, !dbg !830
  %1994 = load i32, i32* %tt1530.i492, align 4, !dbg !830
  %1995 = load i32, i32* %r.i415, align 4, !dbg !830
  %xor1560.i1926 = xor i32 %1995, %1994, !dbg !830
  store i32 %xor1560.i1926, i32* %r.i415, align 4, !dbg !830
  %1996 = load i32, i32* %tt1530.i492, align 4, !dbg !830
  %shl1561.i1927 = shl i32 %1996, 16, !dbg !830
  %1997 = load i32, i32* %l.i414, align 4, !dbg !830
  %xor1562.i1928 = xor i32 %1997, %shl1561.i1927, !dbg !830
  store i32 %xor1562.i1928, i32* %l.i414, align 4, !dbg !830
  %1998 = load i32, i32* %r.i415, align 4, !dbg !830
  %shr1563.i1929 = lshr i32 %1998, 4, !dbg !830
  %1999 = load i32, i32* %l.i414, align 4, !dbg !830
  %xor1564.i1930 = xor i32 %shr1563.i1929, %1999, !dbg !830
  %conv1565.i1931 = zext i32 %xor1564.i1930 to i64, !dbg !830
  %and1566.i1932 = and i64 %conv1565.i1931, 252645135, !dbg !830
  %conv1567.i1933 = trunc i64 %and1566.i1932 to i32, !dbg !830
  store i32 %conv1567.i1933, i32* %tt1530.i492, align 4, !dbg !830
  %2000 = load i32, i32* %tt1530.i492, align 4, !dbg !830
  %2001 = load i32, i32* %l.i414, align 4, !dbg !830
  %xor1568.i1934 = xor i32 %2001, %2000, !dbg !830
  store i32 %xor1568.i1934, i32* %l.i414, align 4, !dbg !830
  %2002 = load i32, i32* %tt1530.i492, align 4, !dbg !830
  %shl1569.i1935 = shl i32 %2002, 4, !dbg !830
  %2003 = load i32, i32* %r.i415, align 4, !dbg !830
  %xor1570.i1936 = xor i32 %2003, %shl1569.i1935, !dbg !830
  store i32 %xor1570.i1936, i32* %r.i415, align 4, !dbg !830
  %2004 = load i32, i32* %l.i414, align 4, !dbg !1090
  %2005 = load i32*, i32** %data.addr.i411, align 8, !dbg !1091
  store i32 %2004, i32* %2005, align 4, !dbg !1092
  %2006 = load i32, i32* %r.i415, align 4, !dbg !1093
  %2007 = load i32*, i32** %data.addr.i411, align 8, !dbg !1094
  %arrayidx1572.i1937 = getelementptr inbounds i32, i32* %2007, i64 1, !dbg !1094
  store i32 %2006, i32* %arrayidx1572.i1937, align 4, !dbg !1095
  store i32 0, i32* %u.i417, align 4, !dbg !1096
  store i32 0, i32* %t.i416, align 4, !dbg !1097
  store i32 0, i32* %r.i415, align 4, !dbg !1098
  store i32 0, i32* %l.i414, align 4, !dbg !1099
  %arrayidx132 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1100
  %2008 = load i32, i32* %arrayidx132, align 4, !dbg !1100
  store i32 %2008, i32* %tout0, align 4, !dbg !1101
  %2009 = load i32, i32* %tout0, align 4, !dbg !1102
  %and133 = and i32 %2009, 255, !dbg !1102
  %conv134 = trunc i32 %and133 to i8, !dbg !1102
  %2010 = load i8*, i8** %out.addr, align 8, !dbg !1102
  %incdec.ptr135 = getelementptr inbounds i8, i8* %2010, i32 1, !dbg !1102
  store i8* %incdec.ptr135, i8** %out.addr, align 8, !dbg !1102
  store i8 %conv134, i8* %2010, align 1, !dbg !1102
  %2011 = load i32, i32* %tout0, align 4, !dbg !1102
  %shr136 = lshr i32 %2011, 8, !dbg !1102
  %and137 = and i32 %shr136, 255, !dbg !1102
  %conv138 = trunc i32 %and137 to i8, !dbg !1102
  %2012 = load i8*, i8** %out.addr, align 8, !dbg !1102
  %incdec.ptr139 = getelementptr inbounds i8, i8* %2012, i32 1, !dbg !1102
  store i8* %incdec.ptr139, i8** %out.addr, align 8, !dbg !1102
  store i8 %conv138, i8* %2012, align 1, !dbg !1102
  %2013 = load i32, i32* %tout0, align 4, !dbg !1102
  %shr140 = lshr i32 %2013, 16, !dbg !1102
  %and141 = and i32 %shr140, 255, !dbg !1102
  %conv142 = trunc i32 %and141 to i8, !dbg !1102
  %2014 = load i8*, i8** %out.addr, align 8, !dbg !1102
  %incdec.ptr143 = getelementptr inbounds i8, i8* %2014, i32 1, !dbg !1102
  store i8* %incdec.ptr143, i8** %out.addr, align 8, !dbg !1102
  store i8 %conv142, i8* %2014, align 1, !dbg !1102
  %2015 = load i32, i32* %tout0, align 4, !dbg !1102
  %shr144 = lshr i32 %2015, 24, !dbg !1102
  %and145 = and i32 %shr144, 255, !dbg !1102
  %conv146 = trunc i32 %and145 to i8, !dbg !1102
  %2016 = load i8*, i8** %out.addr, align 8, !dbg !1102
  %incdec.ptr147 = getelementptr inbounds i8, i8* %2016, i32 1, !dbg !1102
  store i8* %incdec.ptr147, i8** %out.addr, align 8, !dbg !1102
  store i8 %conv146, i8* %2016, align 1, !dbg !1102
  %arrayidx148 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1103
  %2017 = load i32, i32* %arrayidx148, align 4, !dbg !1103
  store i32 %2017, i32* %tout1, align 4, !dbg !1104
  %2018 = load i32, i32* %tout1, align 4, !dbg !1105
  %and149 = and i32 %2018, 255, !dbg !1105
  %conv150 = trunc i32 %and149 to i8, !dbg !1105
  %2019 = load i8*, i8** %out.addr, align 8, !dbg !1105
  %incdec.ptr151 = getelementptr inbounds i8, i8* %2019, i32 1, !dbg !1105
  store i8* %incdec.ptr151, i8** %out.addr, align 8, !dbg !1105
  store i8 %conv150, i8* %2019, align 1, !dbg !1105
  %2020 = load i32, i32* %tout1, align 4, !dbg !1105
  %shr152 = lshr i32 %2020, 8, !dbg !1105
  %and153 = and i32 %shr152, 255, !dbg !1105
  %conv154 = trunc i32 %and153 to i8, !dbg !1105
  %2021 = load i8*, i8** %out.addr, align 8, !dbg !1105
  %incdec.ptr155 = getelementptr inbounds i8, i8* %2021, i32 1, !dbg !1105
  store i8* %incdec.ptr155, i8** %out.addr, align 8, !dbg !1105
  store i8 %conv154, i8* %2021, align 1, !dbg !1105
  %2022 = load i32, i32* %tout1, align 4, !dbg !1105
  %shr156 = lshr i32 %2022, 16, !dbg !1105
  %and157 = and i32 %shr156, 255, !dbg !1105
  %conv158 = trunc i32 %and157 to i8, !dbg !1105
  %2023 = load i8*, i8** %out.addr, align 8, !dbg !1105
  %incdec.ptr159 = getelementptr inbounds i8, i8* %2023, i32 1, !dbg !1105
  store i8* %incdec.ptr159, i8** %out.addr, align 8, !dbg !1105
  store i8 %conv158, i8* %2023, align 1, !dbg !1105
  %2024 = load i32, i32* %tout1, align 4, !dbg !1105
  %shr160 = lshr i32 %2024, 24, !dbg !1105
  %and161 = and i32 %shr160, 255, !dbg !1105
  %conv162 = trunc i32 %and161 to i8, !dbg !1105
  %2025 = load i8*, i8** %out.addr, align 8, !dbg !1105
  %incdec.ptr163 = getelementptr inbounds i8, i8* %2025, i32 1, !dbg !1105
  store i8* %incdec.ptr163, i8** %out.addr, align 8, !dbg !1105
  store i8 %conv162, i8* %2025, align 1, !dbg !1105
  br label %if.end, !dbg !1106

if.end:                                           ; preds = %DES_encrypt1.exit1938, %for.end
  %2026 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !1107
  %arrayidx164 = getelementptr inbounds [8 x i8], [8 x i8]* %2026, i64 0, i64 0, !dbg !1108
  store i8* %arrayidx164, i8** %iv, align 8, !dbg !1109
  %2027 = load i32, i32* %tout0, align 4, !dbg !1110
  %and165 = and i32 %2027, 255, !dbg !1110
  %conv166 = trunc i32 %and165 to i8, !dbg !1110
  %2028 = load i8*, i8** %iv, align 8, !dbg !1110
  %incdec.ptr167 = getelementptr inbounds i8, i8* %2028, i32 1, !dbg !1110
  store i8* %incdec.ptr167, i8** %iv, align 8, !dbg !1110
  store i8 %conv166, i8* %2028, align 1, !dbg !1110
  %2029 = load i32, i32* %tout0, align 4, !dbg !1110
  %shr168 = lshr i32 %2029, 8, !dbg !1110
  %and169 = and i32 %shr168, 255, !dbg !1110
  %conv170 = trunc i32 %and169 to i8, !dbg !1110
  %2030 = load i8*, i8** %iv, align 8, !dbg !1110
  %incdec.ptr171 = getelementptr inbounds i8, i8* %2030, i32 1, !dbg !1110
  store i8* %incdec.ptr171, i8** %iv, align 8, !dbg !1110
  store i8 %conv170, i8* %2030, align 1, !dbg !1110
  %2031 = load i32, i32* %tout0, align 4, !dbg !1110
  %shr172 = lshr i32 %2031, 16, !dbg !1110
  %and173 = and i32 %shr172, 255, !dbg !1110
  %conv174 = trunc i32 %and173 to i8, !dbg !1110
  %2032 = load i8*, i8** %iv, align 8, !dbg !1110
  %incdec.ptr175 = getelementptr inbounds i8, i8* %2032, i32 1, !dbg !1110
  store i8* %incdec.ptr175, i8** %iv, align 8, !dbg !1110
  store i8 %conv174, i8* %2032, align 1, !dbg !1110
  %2033 = load i32, i32* %tout0, align 4, !dbg !1110
  %shr176 = lshr i32 %2033, 24, !dbg !1110
  %and177 = and i32 %shr176, 255, !dbg !1110
  %conv178 = trunc i32 %and177 to i8, !dbg !1110
  %2034 = load i8*, i8** %iv, align 8, !dbg !1110
  %incdec.ptr179 = getelementptr inbounds i8, i8* %2034, i32 1, !dbg !1110
  store i8* %incdec.ptr179, i8** %iv, align 8, !dbg !1110
  store i8 %conv178, i8* %2034, align 1, !dbg !1110
  %2035 = load i32, i32* %tout1, align 4, !dbg !1111
  %and180 = and i32 %2035, 255, !dbg !1111
  %conv181 = trunc i32 %and180 to i8, !dbg !1111
  %2036 = load i8*, i8** %iv, align 8, !dbg !1111
  %incdec.ptr182 = getelementptr inbounds i8, i8* %2036, i32 1, !dbg !1111
  store i8* %incdec.ptr182, i8** %iv, align 8, !dbg !1111
  store i8 %conv181, i8* %2036, align 1, !dbg !1111
  %2037 = load i32, i32* %tout1, align 4, !dbg !1111
  %shr183 = lshr i32 %2037, 8, !dbg !1111
  %and184 = and i32 %shr183, 255, !dbg !1111
  %conv185 = trunc i32 %and184 to i8, !dbg !1111
  %2038 = load i8*, i8** %iv, align 8, !dbg !1111
  %incdec.ptr186 = getelementptr inbounds i8, i8* %2038, i32 1, !dbg !1111
  store i8* %incdec.ptr186, i8** %iv, align 8, !dbg !1111
  store i8 %conv185, i8* %2038, align 1, !dbg !1111
  %2039 = load i32, i32* %tout1, align 4, !dbg !1111
  %shr187 = lshr i32 %2039, 16, !dbg !1111
  %and188 = and i32 %shr187, 255, !dbg !1111
  %conv189 = trunc i32 %and188 to i8, !dbg !1111
  %2040 = load i8*, i8** %iv, align 8, !dbg !1111
  %incdec.ptr190 = getelementptr inbounds i8, i8* %2040, i32 1, !dbg !1111
  store i8* %incdec.ptr190, i8** %iv, align 8, !dbg !1111
  store i8 %conv189, i8* %2040, align 1, !dbg !1111
  %2041 = load i32, i32* %tout1, align 4, !dbg !1111
  %shr191 = lshr i32 %2041, 24, !dbg !1111
  %and192 = and i32 %shr191, 255, !dbg !1111
  %conv193 = trunc i32 %and192 to i8, !dbg !1111
  %2042 = load i8*, i8** %iv, align 8, !dbg !1111
  %incdec.ptr194 = getelementptr inbounds i8, i8* %2042, i32 1, !dbg !1111
  store i8* %incdec.ptr194, i8** %iv, align 8, !dbg !1111
  store i8 %conv193, i8* %2042, align 1, !dbg !1111
  br label %if.end408, !dbg !1112

if.else:                                          ; preds = %entry
  %2043 = load i8*, i8** %iv, align 8, !dbg !1113
  %incdec.ptr195 = getelementptr inbounds i8, i8* %2043, i32 1, !dbg !1113
  store i8* %incdec.ptr195, i8** %iv, align 8, !dbg !1113
  %2044 = load i8, i8* %2043, align 1, !dbg !1113
  %conv196 = zext i8 %2044 to i32, !dbg !1113
  store i32 %conv196, i32* %xor0, align 4, !dbg !1113
  %2045 = load i8*, i8** %iv, align 8, !dbg !1113
  %incdec.ptr197 = getelementptr inbounds i8, i8* %2045, i32 1, !dbg !1113
  store i8* %incdec.ptr197, i8** %iv, align 8, !dbg !1113
  %2046 = load i8, i8* %2045, align 1, !dbg !1113
  %conv198 = zext i8 %2046 to i32, !dbg !1113
  %shl199 = shl i32 %conv198, 8, !dbg !1113
  %2047 = load i32, i32* %xor0, align 4, !dbg !1113
  %or200 = or i32 %2047, %shl199, !dbg !1113
  store i32 %or200, i32* %xor0, align 4, !dbg !1113
  %2048 = load i8*, i8** %iv, align 8, !dbg !1113
  %incdec.ptr201 = getelementptr inbounds i8, i8* %2048, i32 1, !dbg !1113
  store i8* %incdec.ptr201, i8** %iv, align 8, !dbg !1113
  %2049 = load i8, i8* %2048, align 1, !dbg !1113
  %conv202 = zext i8 %2049 to i32, !dbg !1113
  %shl203 = shl i32 %conv202, 16, !dbg !1113
  %2050 = load i32, i32* %xor0, align 4, !dbg !1113
  %or204 = or i32 %2050, %shl203, !dbg !1113
  store i32 %or204, i32* %xor0, align 4, !dbg !1113
  %2051 = load i8*, i8** %iv, align 8, !dbg !1113
  %incdec.ptr205 = getelementptr inbounds i8, i8* %2051, i32 1, !dbg !1113
  store i8* %incdec.ptr205, i8** %iv, align 8, !dbg !1113
  %2052 = load i8, i8* %2051, align 1, !dbg !1113
  %conv206 = zext i8 %2052 to i32, !dbg !1113
  %shl207 = shl i32 %conv206, 24, !dbg !1113
  %2053 = load i32, i32* %xor0, align 4, !dbg !1113
  %or208 = or i32 %2053, %shl207, !dbg !1113
  store i32 %or208, i32* %xor0, align 4, !dbg !1113
  %2054 = load i8*, i8** %iv, align 8, !dbg !1114
  %incdec.ptr209 = getelementptr inbounds i8, i8* %2054, i32 1, !dbg !1114
  store i8* %incdec.ptr209, i8** %iv, align 8, !dbg !1114
  %2055 = load i8, i8* %2054, align 1, !dbg !1114
  %conv210 = zext i8 %2055 to i32, !dbg !1114
  store i32 %conv210, i32* %xor1, align 4, !dbg !1114
  %2056 = load i8*, i8** %iv, align 8, !dbg !1114
  %incdec.ptr211 = getelementptr inbounds i8, i8* %2056, i32 1, !dbg !1114
  store i8* %incdec.ptr211, i8** %iv, align 8, !dbg !1114
  %2057 = load i8, i8* %2056, align 1, !dbg !1114
  %conv212 = zext i8 %2057 to i32, !dbg !1114
  %shl213 = shl i32 %conv212, 8, !dbg !1114
  %2058 = load i32, i32* %xor1, align 4, !dbg !1114
  %or214 = or i32 %2058, %shl213, !dbg !1114
  store i32 %or214, i32* %xor1, align 4, !dbg !1114
  %2059 = load i8*, i8** %iv, align 8, !dbg !1114
  %incdec.ptr215 = getelementptr inbounds i8, i8* %2059, i32 1, !dbg !1114
  store i8* %incdec.ptr215, i8** %iv, align 8, !dbg !1114
  %2060 = load i8, i8* %2059, align 1, !dbg !1114
  %conv216 = zext i8 %2060 to i32, !dbg !1114
  %shl217 = shl i32 %conv216, 16, !dbg !1114
  %2061 = load i32, i32* %xor1, align 4, !dbg !1114
  %or218 = or i32 %2061, %shl217, !dbg !1114
  store i32 %or218, i32* %xor1, align 4, !dbg !1114
  %2062 = load i8*, i8** %iv, align 8, !dbg !1114
  %incdec.ptr219 = getelementptr inbounds i8, i8* %2062, i32 1, !dbg !1114
  store i8* %incdec.ptr219, i8** %iv, align 8, !dbg !1114
  %2063 = load i8, i8* %2062, align 1, !dbg !1114
  %conv220 = zext i8 %2063 to i32, !dbg !1114
  %shl221 = shl i32 %conv220, 24, !dbg !1114
  %2064 = load i32, i32* %xor1, align 4, !dbg !1114
  %or222 = or i32 %2064, %shl221, !dbg !1114
  store i32 %or222, i32* %xor1, align 4, !dbg !1114
  %2065 = load i64, i64* %l, align 8, !dbg !1115
  %sub223 = sub nsw i64 %2065, 8, !dbg !1115
  store i64 %sub223, i64* %l, align 8, !dbg !1115
  br label %for.cond224, !dbg !1116

for.cond224:                                      ; preds = %for.inc293, %if.else
  %2066 = load i64, i64* %l, align 8, !dbg !1117
  %cmp225 = icmp sge i64 %2066, 0, !dbg !1118
  br i1 %cmp225, label %for.body227, label %for.end295, !dbg !1119

for.body227:                                      ; preds = %for.cond224
  %2067 = load i8*, i8** %in.addr, align 8, !dbg !1120
  %incdec.ptr228 = getelementptr inbounds i8, i8* %2067, i32 1, !dbg !1120
  store i8* %incdec.ptr228, i8** %in.addr, align 8, !dbg !1120
  %2068 = load i8, i8* %2067, align 1, !dbg !1120
  %conv229 = zext i8 %2068 to i32, !dbg !1120
  store i32 %conv229, i32* %tin0, align 4, !dbg !1120
  %2069 = load i8*, i8** %in.addr, align 8, !dbg !1120
  %incdec.ptr230 = getelementptr inbounds i8, i8* %2069, i32 1, !dbg !1120
  store i8* %incdec.ptr230, i8** %in.addr, align 8, !dbg !1120
  %2070 = load i8, i8* %2069, align 1, !dbg !1120
  %conv231 = zext i8 %2070 to i32, !dbg !1120
  %shl232 = shl i32 %conv231, 8, !dbg !1120
  %2071 = load i32, i32* %tin0, align 4, !dbg !1120
  %or233 = or i32 %2071, %shl232, !dbg !1120
  store i32 %or233, i32* %tin0, align 4, !dbg !1120
  %2072 = load i8*, i8** %in.addr, align 8, !dbg !1120
  %incdec.ptr234 = getelementptr inbounds i8, i8* %2072, i32 1, !dbg !1120
  store i8* %incdec.ptr234, i8** %in.addr, align 8, !dbg !1120
  %2073 = load i8, i8* %2072, align 1, !dbg !1120
  %conv235 = zext i8 %2073 to i32, !dbg !1120
  %shl236 = shl i32 %conv235, 16, !dbg !1120
  %2074 = load i32, i32* %tin0, align 4, !dbg !1120
  %or237 = or i32 %2074, %shl236, !dbg !1120
  store i32 %or237, i32* %tin0, align 4, !dbg !1120
  %2075 = load i8*, i8** %in.addr, align 8, !dbg !1120
  %incdec.ptr238 = getelementptr inbounds i8, i8* %2075, i32 1, !dbg !1120
  store i8* %incdec.ptr238, i8** %in.addr, align 8, !dbg !1120
  %2076 = load i8, i8* %2075, align 1, !dbg !1120
  %conv239 = zext i8 %2076 to i32, !dbg !1120
  %shl240 = shl i32 %conv239, 24, !dbg !1120
  %2077 = load i32, i32* %tin0, align 4, !dbg !1120
  %or241 = or i32 %2077, %shl240, !dbg !1120
  store i32 %or241, i32* %tin0, align 4, !dbg !1120
  %2078 = load i32, i32* %tin0, align 4, !dbg !1121
  %arrayidx242 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1122
  store i32 %2078, i32* %arrayidx242, align 4, !dbg !1123
  %2079 = load i8*, i8** %in.addr, align 8, !dbg !1124
  %incdec.ptr243 = getelementptr inbounds i8, i8* %2079, i32 1, !dbg !1124
  store i8* %incdec.ptr243, i8** %in.addr, align 8, !dbg !1124
  %2080 = load i8, i8* %2079, align 1, !dbg !1124
  %conv244 = zext i8 %2080 to i32, !dbg !1124
  store i32 %conv244, i32* %tin1, align 4, !dbg !1124
  %2081 = load i8*, i8** %in.addr, align 8, !dbg !1124
  %incdec.ptr245 = getelementptr inbounds i8, i8* %2081, i32 1, !dbg !1124
  store i8* %incdec.ptr245, i8** %in.addr, align 8, !dbg !1124
  %2082 = load i8, i8* %2081, align 1, !dbg !1124
  %conv246 = zext i8 %2082 to i32, !dbg !1124
  %shl247 = shl i32 %conv246, 8, !dbg !1124
  %2083 = load i32, i32* %tin1, align 4, !dbg !1124
  %or248 = or i32 %2083, %shl247, !dbg !1124
  store i32 %or248, i32* %tin1, align 4, !dbg !1124
  %2084 = load i8*, i8** %in.addr, align 8, !dbg !1124
  %incdec.ptr249 = getelementptr inbounds i8, i8* %2084, i32 1, !dbg !1124
  store i8* %incdec.ptr249, i8** %in.addr, align 8, !dbg !1124
  %2085 = load i8, i8* %2084, align 1, !dbg !1124
  %conv250 = zext i8 %2085 to i32, !dbg !1124
  %shl251 = shl i32 %conv250, 16, !dbg !1124
  %2086 = load i32, i32* %tin1, align 4, !dbg !1124
  %or252 = or i32 %2086, %shl251, !dbg !1124
  store i32 %or252, i32* %tin1, align 4, !dbg !1124
  %2087 = load i8*, i8** %in.addr, align 8, !dbg !1124
  %incdec.ptr253 = getelementptr inbounds i8, i8* %2087, i32 1, !dbg !1124
  store i8* %incdec.ptr253, i8** %in.addr, align 8, !dbg !1124
  %2088 = load i8, i8* %2087, align 1, !dbg !1124
  %conv254 = zext i8 %2088 to i32, !dbg !1124
  %shl255 = shl i32 %conv254, 24, !dbg !1124
  %2089 = load i32, i32* %tin1, align 4, !dbg !1124
  %or256 = or i32 %2089, %shl255, !dbg !1124
  store i32 %or256, i32* %tin1, align 4, !dbg !1124
  %2090 = load i32, i32* %tin1, align 4, !dbg !1125
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1126
  store i32 %2090, i32* %arrayidx257, align 4, !dbg !1127
  %arraydecay258 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1128
  %2091 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8, !dbg !1129
  store i32* %arraydecay258, i32** %data.addr.i1939, align 8
  store %struct.DES_ks* %2091, %struct.DES_ks** %ks.addr.i1940, align 8
  %ks.addr1.i2021 = bitcast %struct.DES_ks** %ks.addr.i1940 to i8*
  call void @llvm.var.annotation(i8* %ks.addr1.i2021, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 14) #8
  store i32 0, i32* %enc.addr.i1941, align 4
  %s2.i2022 = bitcast i32** %s.i1946 to i8*, !dbg !1130
  call void @llvm.var.annotation(i8* %s2.i2022, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 17) #8, !dbg !1130
  %2092 = load i32*, i32** %data.addr.i1939, align 8, !dbg !1131
  %2093 = load i32, i32* %2092, align 4, !dbg !1131
  store i32 %2093, i32* %r.i1943, align 4, !dbg !1132
  %2094 = load i32*, i32** %data.addr.i1939, align 8, !dbg !1133
  %arrayidx3.i2023 = getelementptr inbounds i32, i32* %2094, i64 1, !dbg !1133
  %2095 = load i32, i32* %arrayidx3.i2023, align 4, !dbg !1133
  store i32 %2095, i32* %l.i1942, align 4, !dbg !1134
  %2096 = load i32, i32* %l.i1942, align 4, !dbg !743
  %shr.i2024 = lshr i32 %2096, 4, !dbg !743
  %2097 = load i32, i32* %r.i1943, align 4, !dbg !743
  %xor.i2025 = xor i32 %shr.i2024, %2097, !dbg !743
  %conv.i2026 = zext i32 %xor.i2025 to i64, !dbg !743
  %and.i2027 = and i64 %conv.i2026, 252645135, !dbg !743
  %conv4.i2028 = trunc i64 %and.i2027 to i32, !dbg !743
  store i32 %conv4.i2028, i32* %tt.i1947, align 4, !dbg !743
  %2098 = load i32, i32* %tt.i1947, align 4, !dbg !743
  %2099 = load i32, i32* %r.i1943, align 4, !dbg !743
  %xor5.i2029 = xor i32 %2099, %2098, !dbg !743
  store i32 %xor5.i2029, i32* %r.i1943, align 4, !dbg !743
  %2100 = load i32, i32* %tt.i1947, align 4, !dbg !743
  %shl.i2030 = shl i32 %2100, 4, !dbg !743
  %2101 = load i32, i32* %l.i1942, align 4, !dbg !743
  %xor6.i2031 = xor i32 %2101, %shl.i2030, !dbg !743
  store i32 %xor6.i2031, i32* %l.i1942, align 4, !dbg !743
  %2102 = load i32, i32* %r.i1943, align 4, !dbg !743
  %shr7.i2032 = lshr i32 %2102, 16, !dbg !743
  %2103 = load i32, i32* %l.i1942, align 4, !dbg !743
  %xor8.i2033 = xor i32 %shr7.i2032, %2103, !dbg !743
  %conv9.i2034 = zext i32 %xor8.i2033 to i64, !dbg !743
  %and10.i2035 = and i64 %conv9.i2034, 65535, !dbg !743
  %conv11.i2036 = trunc i64 %and10.i2035 to i32, !dbg !743
  store i32 %conv11.i2036, i32* %tt.i1947, align 4, !dbg !743
  %2104 = load i32, i32* %tt.i1947, align 4, !dbg !743
  %2105 = load i32, i32* %l.i1942, align 4, !dbg !743
  %xor12.i2037 = xor i32 %2105, %2104, !dbg !743
  store i32 %xor12.i2037, i32* %l.i1942, align 4, !dbg !743
  %2106 = load i32, i32* %tt.i1947, align 4, !dbg !743
  %shl13.i2038 = shl i32 %2106, 16, !dbg !743
  %2107 = load i32, i32* %r.i1943, align 4, !dbg !743
  %xor14.i2039 = xor i32 %2107, %shl13.i2038, !dbg !743
  store i32 %xor14.i2039, i32* %r.i1943, align 4, !dbg !743
  %2108 = load i32, i32* %l.i1942, align 4, !dbg !743
  %shr15.i2040 = lshr i32 %2108, 2, !dbg !743
  %2109 = load i32, i32* %r.i1943, align 4, !dbg !743
  %xor16.i2041 = xor i32 %shr15.i2040, %2109, !dbg !743
  %conv17.i2042 = zext i32 %xor16.i2041 to i64, !dbg !743
  %and18.i2043 = and i64 %conv17.i2042, 858993459, !dbg !743
  %conv19.i2044 = trunc i64 %and18.i2043 to i32, !dbg !743
  store i32 %conv19.i2044, i32* %tt.i1947, align 4, !dbg !743
  %2110 = load i32, i32* %tt.i1947, align 4, !dbg !743
  %2111 = load i32, i32* %r.i1943, align 4, !dbg !743
  %xor20.i2045 = xor i32 %2111, %2110, !dbg !743
  store i32 %xor20.i2045, i32* %r.i1943, align 4, !dbg !743
  %2112 = load i32, i32* %tt.i1947, align 4, !dbg !743
  %shl21.i2046 = shl i32 %2112, 2, !dbg !743
  %2113 = load i32, i32* %l.i1942, align 4, !dbg !743
  %xor22.i2047 = xor i32 %2113, %shl21.i2046, !dbg !743
  store i32 %xor22.i2047, i32* %l.i1942, align 4, !dbg !743
  %2114 = load i32, i32* %r.i1943, align 4, !dbg !743
  %shr23.i2048 = lshr i32 %2114, 8, !dbg !743
  %2115 = load i32, i32* %l.i1942, align 4, !dbg !743
  %xor24.i2049 = xor i32 %shr23.i2048, %2115, !dbg !743
  %conv25.i2050 = zext i32 %xor24.i2049 to i64, !dbg !743
  %and26.i2051 = and i64 %conv25.i2050, 16711935, !dbg !743
  %conv27.i2052 = trunc i64 %and26.i2051 to i32, !dbg !743
  store i32 %conv27.i2052, i32* %tt.i1947, align 4, !dbg !743
  %2116 = load i32, i32* %tt.i1947, align 4, !dbg !743
  %2117 = load i32, i32* %l.i1942, align 4, !dbg !743
  %xor28.i2053 = xor i32 %2117, %2116, !dbg !743
  store i32 %xor28.i2053, i32* %l.i1942, align 4, !dbg !743
  %2118 = load i32, i32* %tt.i1947, align 4, !dbg !743
  %shl29.i2054 = shl i32 %2118, 8, !dbg !743
  %2119 = load i32, i32* %r.i1943, align 4, !dbg !743
  %xor30.i2055 = xor i32 %2119, %shl29.i2054, !dbg !743
  store i32 %xor30.i2055, i32* %r.i1943, align 4, !dbg !743
  %2120 = load i32, i32* %l.i1942, align 4, !dbg !743
  %shr31.i2056 = lshr i32 %2120, 1, !dbg !743
  %2121 = load i32, i32* %r.i1943, align 4, !dbg !743
  %xor32.i2057 = xor i32 %shr31.i2056, %2121, !dbg !743
  %conv33.i2058 = zext i32 %xor32.i2057 to i64, !dbg !743
  %and34.i2059 = and i64 %conv33.i2058, 1431655765, !dbg !743
  %conv35.i2060 = trunc i64 %and34.i2059 to i32, !dbg !743
  store i32 %conv35.i2060, i32* %tt.i1947, align 4, !dbg !743
  %2122 = load i32, i32* %tt.i1947, align 4, !dbg !743
  %2123 = load i32, i32* %r.i1943, align 4, !dbg !743
  %xor36.i2061 = xor i32 %2123, %2122, !dbg !743
  store i32 %xor36.i2061, i32* %r.i1943, align 4, !dbg !743
  %2124 = load i32, i32* %tt.i1947, align 4, !dbg !743
  %shl37.i2062 = shl i32 %2124, 1, !dbg !743
  %2125 = load i32, i32* %l.i1942, align 4, !dbg !743
  %xor38.i2063 = xor i32 %2125, %shl37.i2062, !dbg !743
  store i32 %xor38.i2063, i32* %l.i1942, align 4, !dbg !743
  %2126 = load i32, i32* %r.i1943, align 4, !dbg !744
  %2127 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %2126) #7, !dbg !744, !srcloc !71
  store i32 %2127, i32* %ret.i1948, align 4, !dbg !744
  %2128 = load i32, i32* %ret.i1948, align 4, !dbg !744
  store i32 %2128, i32* %tmp.i1949, align 4, !dbg !744
  %2129 = load i32, i32* %tmp.i1949, align 4, !dbg !744
  %conv39.i2064 = zext i32 %2129 to i64, !dbg !1135
  %and40.i2065 = and i64 %conv39.i2064, 4294967295, !dbg !1136
  %conv41.i2066 = trunc i64 %and40.i2065 to i32, !dbg !1135
  store i32 %conv41.i2066, i32* %r.i1943, align 4, !dbg !1137
  %2130 = load i32, i32* %l.i1942, align 4, !dbg !745
  %2131 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %2130) #7, !dbg !745, !srcloc !78
  store i32 %2131, i32* %ret42.i1950, align 4, !dbg !745
  %2132 = load i32, i32* %ret42.i1950, align 4, !dbg !745
  store i32 %2132, i32* %tmp43.i1951, align 4, !dbg !745
  %2133 = load i32, i32* %tmp43.i1951, align 4, !dbg !745
  %conv44.i2067 = zext i32 %2133 to i64, !dbg !1138
  %and45.i2068 = and i64 %conv44.i2067, 4294967295, !dbg !1139
  %conv46.i2069 = trunc i64 %and45.i2068 to i32, !dbg !1138
  store i32 %conv46.i2069, i32* %l.i1942, align 4, !dbg !1140
  %2134 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i1940, align 8, !dbg !1141
  %ks47.i2070 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %2134, i32 0, i32 0, !dbg !1142
  %arraydecay.i2071 = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks47.i2070, i64 0, i64 0, !dbg !1143
  %deslong.i2072 = bitcast %union.anon* %arraydecay.i2071 to [2 x i32]*, !dbg !1143
  %arraydecay48.i2073 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i2072, i64 0, i64 0, !dbg !1141
  store i32* %arraydecay48.i2073, i32** %s.i1946, align 8, !dbg !1144
  %2135 = load i32, i32* %enc.addr.i1941, align 4, !dbg !1145
  %tobool.i2074 = icmp ne i32 %2135, 0, !dbg !1145
  br i1 %tobool.i2074, label %if.then.i2746, label %if.else.i3418, !dbg !1146

if.then.i2746:                                    ; preds = %for.body227
  %2136 = load i32, i32* %r.i1943, align 4, !dbg !1147
  %2137 = load i32*, i32** %s.i1946, align 8, !dbg !1147
  %2138 = load i32, i32* %2137, align 4, !dbg !1147
  %xor50.i2075 = xor i32 %2136, %2138, !dbg !1147
  store i32 %xor50.i2075, i32* %u.i1945, align 4, !dbg !1147
  %2139 = load i32, i32* %r.i1943, align 4, !dbg !1147
  %2140 = load i32*, i32** %s.i1946, align 8, !dbg !1147
  %arrayidx51.i2076 = getelementptr inbounds i32, i32* %2140, i64 1, !dbg !1147
  %2141 = load i32, i32* %arrayidx51.i2076, align 4, !dbg !1147
  %xor52.i2077 = xor i32 %2139, %2141, !dbg !1147
  store i32 %xor52.i2077, i32* %t.i1944, align 4, !dbg !1147
  %2142 = load i32, i32* %t.i1944, align 4, !dbg !746
  %2143 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2142) #7, !dbg !746, !srcloc !95
  store i32 %2143, i32* %ret53.i1952, align 4, !dbg !746
  %2144 = load i32, i32* %ret53.i1952, align 4, !dbg !746
  store i32 %2144, i32* %tmp54.i1953, align 4, !dbg !746
  %2145 = load i32, i32* %tmp54.i1953, align 4, !dbg !746
  store i32 %2145, i32* %t.i1944, align 4, !dbg !1147
  %2146 = load i32, i32* %u.i1945, align 4, !dbg !1147
  %shr55.i2078 = lshr i32 %2146, 2, !dbg !1147
  %and56.i2079 = and i32 %shr55.i2078, 63, !dbg !1147
  %idxprom.i2080 = zext i32 %and56.i2079 to i64, !dbg !1147
  %arrayidx57.i2081 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i2080, !dbg !1147
  %2147 = load i32, i32* %arrayidx57.i2081, align 4, !dbg !1147
  %2148 = load i32, i32* %u.i1945, align 4, !dbg !1147
  %shr58.i2082 = lshr i32 %2148, 10, !dbg !1147
  %and59.i2083 = and i32 %shr58.i2082, 63, !dbg !1147
  %idxprom60.i2084 = zext i32 %and59.i2083 to i64, !dbg !1147
  %arrayidx61.i2085 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom60.i2084, !dbg !1147
  %2149 = load i32, i32* %arrayidx61.i2085, align 4, !dbg !1147
  %xor62.i2086 = xor i32 %2147, %2149, !dbg !1147
  %2150 = load i32, i32* %u.i1945, align 4, !dbg !1147
  %shr63.i2087 = lshr i32 %2150, 18, !dbg !1147
  %and64.i2088 = and i32 %shr63.i2087, 63, !dbg !1147
  %idxprom65.i2089 = zext i32 %and64.i2088 to i64, !dbg !1147
  %arrayidx66.i2090 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom65.i2089, !dbg !1147
  %2151 = load i32, i32* %arrayidx66.i2090, align 4, !dbg !1147
  %xor67.i2091 = xor i32 %xor62.i2086, %2151, !dbg !1147
  %2152 = load i32, i32* %u.i1945, align 4, !dbg !1147
  %shr68.i2092 = lshr i32 %2152, 26, !dbg !1147
  %idxprom70.i2093 = zext i32 %shr68.i2092 to i64, !dbg !1147
  %arrayidx71.i2094 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom70.i2093, !dbg !1147
  %2153 = load i32, i32* %arrayidx71.i2094, align 4, !dbg !1147
  %xor72.i2095 = xor i32 %xor67.i2091, %2153, !dbg !1147
  %2154 = load i32, i32* %t.i1944, align 4, !dbg !1147
  %shr73.i2096 = lshr i32 %2154, 2, !dbg !1147
  %and74.i2097 = and i32 %shr73.i2096, 63, !dbg !1147
  %idxprom75.i2098 = zext i32 %and74.i2097 to i64, !dbg !1147
  %arrayidx76.i2099 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom75.i2098, !dbg !1147
  %2155 = load i32, i32* %arrayidx76.i2099, align 4, !dbg !1147
  %xor77.i2100 = xor i32 %xor72.i2095, %2155, !dbg !1147
  %2156 = load i32, i32* %t.i1944, align 4, !dbg !1147
  %shr78.i2101 = lshr i32 %2156, 10, !dbg !1147
  %and79.i2102 = and i32 %shr78.i2101, 63, !dbg !1147
  %idxprom80.i2103 = zext i32 %and79.i2102 to i64, !dbg !1147
  %arrayidx81.i2104 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom80.i2103, !dbg !1147
  %2157 = load i32, i32* %arrayidx81.i2104, align 4, !dbg !1147
  %xor82.i2105 = xor i32 %xor77.i2100, %2157, !dbg !1147
  %2158 = load i32, i32* %t.i1944, align 4, !dbg !1147
  %shr83.i2106 = lshr i32 %2158, 18, !dbg !1147
  %and84.i2107 = and i32 %shr83.i2106, 63, !dbg !1147
  %idxprom85.i2108 = zext i32 %and84.i2107 to i64, !dbg !1147
  %arrayidx86.i2109 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom85.i2108, !dbg !1147
  %2159 = load i32, i32* %arrayidx86.i2109, align 4, !dbg !1147
  %xor87.i2110 = xor i32 %xor82.i2105, %2159, !dbg !1147
  %2160 = load i32, i32* %t.i1944, align 4, !dbg !1147
  %shr88.i2111 = lshr i32 %2160, 26, !dbg !1147
  %idxprom90.i2112 = zext i32 %shr88.i2111 to i64, !dbg !1147
  %arrayidx91.i2113 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom90.i2112, !dbg !1147
  %2161 = load i32, i32* %arrayidx91.i2113, align 4, !dbg !1147
  %xor92.i2114 = xor i32 %xor87.i2110, %2161, !dbg !1147
  %2162 = load i32, i32* %l.i1942, align 4, !dbg !1147
  %xor93.i2115 = xor i32 %2162, %xor92.i2114, !dbg !1147
  store i32 %xor93.i2115, i32* %l.i1942, align 4, !dbg !1147
  %2163 = load i32, i32* %l.i1942, align 4, !dbg !1148
  %2164 = load i32*, i32** %s.i1946, align 8, !dbg !1148
  %arrayidx94.i2116 = getelementptr inbounds i32, i32* %2164, i64 2, !dbg !1148
  %2165 = load i32, i32* %arrayidx94.i2116, align 4, !dbg !1148
  %xor95.i2117 = xor i32 %2163, %2165, !dbg !1148
  store i32 %xor95.i2117, i32* %u.i1945, align 4, !dbg !1148
  %2166 = load i32, i32* %l.i1942, align 4, !dbg !1148
  %2167 = load i32*, i32** %s.i1946, align 8, !dbg !1148
  %arrayidx96.i2118 = getelementptr inbounds i32, i32* %2167, i64 3, !dbg !1148
  %2168 = load i32, i32* %arrayidx96.i2118, align 4, !dbg !1148
  %xor97.i2119 = xor i32 %2166, %2168, !dbg !1148
  store i32 %xor97.i2119, i32* %t.i1944, align 4, !dbg !1148
  %2169 = load i32, i32* %t.i1944, align 4, !dbg !747
  %2170 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2169) #7, !dbg !747, !srcloc !101
  store i32 %2170, i32* %ret98.i1954, align 4, !dbg !747
  %2171 = load i32, i32* %ret98.i1954, align 4, !dbg !747
  store i32 %2171, i32* %tmp99.i1955, align 4, !dbg !747
  %2172 = load i32, i32* %tmp99.i1955, align 4, !dbg !747
  store i32 %2172, i32* %t.i1944, align 4, !dbg !1148
  %2173 = load i32, i32* %u.i1945, align 4, !dbg !1148
  %shr100.i2120 = lshr i32 %2173, 2, !dbg !1148
  %and101.i2121 = and i32 %shr100.i2120, 63, !dbg !1148
  %idxprom102.i2122 = zext i32 %and101.i2121 to i64, !dbg !1148
  %arrayidx103.i2123 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom102.i2122, !dbg !1148
  %2174 = load i32, i32* %arrayidx103.i2123, align 4, !dbg !1148
  %2175 = load i32, i32* %u.i1945, align 4, !dbg !1148
  %shr104.i2124 = lshr i32 %2175, 10, !dbg !1148
  %and105.i2125 = and i32 %shr104.i2124, 63, !dbg !1148
  %idxprom106.i2126 = zext i32 %and105.i2125 to i64, !dbg !1148
  %arrayidx107.i2127 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom106.i2126, !dbg !1148
  %2176 = load i32, i32* %arrayidx107.i2127, align 4, !dbg !1148
  %xor108.i2128 = xor i32 %2174, %2176, !dbg !1148
  %2177 = load i32, i32* %u.i1945, align 4, !dbg !1148
  %shr109.i2129 = lshr i32 %2177, 18, !dbg !1148
  %and110.i2130 = and i32 %shr109.i2129, 63, !dbg !1148
  %idxprom111.i2131 = zext i32 %and110.i2130 to i64, !dbg !1148
  %arrayidx112.i2132 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom111.i2131, !dbg !1148
  %2178 = load i32, i32* %arrayidx112.i2132, align 4, !dbg !1148
  %xor113.i2133 = xor i32 %xor108.i2128, %2178, !dbg !1148
  %2179 = load i32, i32* %u.i1945, align 4, !dbg !1148
  %shr114.i2134 = lshr i32 %2179, 26, !dbg !1148
  %idxprom116.i2135 = zext i32 %shr114.i2134 to i64, !dbg !1148
  %arrayidx117.i2136 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom116.i2135, !dbg !1148
  %2180 = load i32, i32* %arrayidx117.i2136, align 4, !dbg !1148
  %xor118.i2137 = xor i32 %xor113.i2133, %2180, !dbg !1148
  %2181 = load i32, i32* %t.i1944, align 4, !dbg !1148
  %shr119.i2138 = lshr i32 %2181, 2, !dbg !1148
  %and120.i2139 = and i32 %shr119.i2138, 63, !dbg !1148
  %idxprom121.i2140 = zext i32 %and120.i2139 to i64, !dbg !1148
  %arrayidx122.i2141 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom121.i2140, !dbg !1148
  %2182 = load i32, i32* %arrayidx122.i2141, align 4, !dbg !1148
  %xor123.i2142 = xor i32 %xor118.i2137, %2182, !dbg !1148
  %2183 = load i32, i32* %t.i1944, align 4, !dbg !1148
  %shr124.i2143 = lshr i32 %2183, 10, !dbg !1148
  %and125.i2144 = and i32 %shr124.i2143, 63, !dbg !1148
  %idxprom126.i2145 = zext i32 %and125.i2144 to i64, !dbg !1148
  %arrayidx127.i2146 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom126.i2145, !dbg !1148
  %2184 = load i32, i32* %arrayidx127.i2146, align 4, !dbg !1148
  %xor128.i2147 = xor i32 %xor123.i2142, %2184, !dbg !1148
  %2185 = load i32, i32* %t.i1944, align 4, !dbg !1148
  %shr129.i2148 = lshr i32 %2185, 18, !dbg !1148
  %and130.i2149 = and i32 %shr129.i2148, 63, !dbg !1148
  %idxprom131.i2150 = zext i32 %and130.i2149 to i64, !dbg !1148
  %arrayidx132.i2151 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom131.i2150, !dbg !1148
  %2186 = load i32, i32* %arrayidx132.i2151, align 4, !dbg !1148
  %xor133.i2152 = xor i32 %xor128.i2147, %2186, !dbg !1148
  %2187 = load i32, i32* %t.i1944, align 4, !dbg !1148
  %shr134.i2153 = lshr i32 %2187, 26, !dbg !1148
  %idxprom136.i2154 = zext i32 %shr134.i2153 to i64, !dbg !1148
  %arrayidx137.i2155 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom136.i2154, !dbg !1148
  %2188 = load i32, i32* %arrayidx137.i2155, align 4, !dbg !1148
  %xor138.i2156 = xor i32 %xor133.i2152, %2188, !dbg !1148
  %2189 = load i32, i32* %r.i1943, align 4, !dbg !1148
  %xor139.i2157 = xor i32 %2189, %xor138.i2156, !dbg !1148
  store i32 %xor139.i2157, i32* %r.i1943, align 4, !dbg !1148
  %2190 = load i32, i32* %r.i1943, align 4, !dbg !1149
  %2191 = load i32*, i32** %s.i1946, align 8, !dbg !1149
  %arrayidx140.i2158 = getelementptr inbounds i32, i32* %2191, i64 4, !dbg !1149
  %2192 = load i32, i32* %arrayidx140.i2158, align 4, !dbg !1149
  %xor141.i2159 = xor i32 %2190, %2192, !dbg !1149
  store i32 %xor141.i2159, i32* %u.i1945, align 4, !dbg !1149
  %2193 = load i32, i32* %r.i1943, align 4, !dbg !1149
  %2194 = load i32*, i32** %s.i1946, align 8, !dbg !1149
  %arrayidx142.i2160 = getelementptr inbounds i32, i32* %2194, i64 5, !dbg !1149
  %2195 = load i32, i32* %arrayidx142.i2160, align 4, !dbg !1149
  %xor143.i2161 = xor i32 %2193, %2195, !dbg !1149
  store i32 %xor143.i2161, i32* %t.i1944, align 4, !dbg !1149
  %2196 = load i32, i32* %t.i1944, align 4, !dbg !748
  %2197 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2196) #7, !dbg !748, !srcloc !107
  store i32 %2197, i32* %ret144.i1956, align 4, !dbg !748
  %2198 = load i32, i32* %ret144.i1956, align 4, !dbg !748
  store i32 %2198, i32* %tmp145.i1957, align 4, !dbg !748
  %2199 = load i32, i32* %tmp145.i1957, align 4, !dbg !748
  store i32 %2199, i32* %t.i1944, align 4, !dbg !1149
  %2200 = load i32, i32* %u.i1945, align 4, !dbg !1149
  %shr146.i2162 = lshr i32 %2200, 2, !dbg !1149
  %and147.i2163 = and i32 %shr146.i2162, 63, !dbg !1149
  %idxprom148.i2164 = zext i32 %and147.i2163 to i64, !dbg !1149
  %arrayidx149.i2165 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom148.i2164, !dbg !1149
  %2201 = load i32, i32* %arrayidx149.i2165, align 4, !dbg !1149
  %2202 = load i32, i32* %u.i1945, align 4, !dbg !1149
  %shr150.i2166 = lshr i32 %2202, 10, !dbg !1149
  %and151.i2167 = and i32 %shr150.i2166, 63, !dbg !1149
  %idxprom152.i2168 = zext i32 %and151.i2167 to i64, !dbg !1149
  %arrayidx153.i2169 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom152.i2168, !dbg !1149
  %2203 = load i32, i32* %arrayidx153.i2169, align 4, !dbg !1149
  %xor154.i2170 = xor i32 %2201, %2203, !dbg !1149
  %2204 = load i32, i32* %u.i1945, align 4, !dbg !1149
  %shr155.i2171 = lshr i32 %2204, 18, !dbg !1149
  %and156.i2172 = and i32 %shr155.i2171, 63, !dbg !1149
  %idxprom157.i2173 = zext i32 %and156.i2172 to i64, !dbg !1149
  %arrayidx158.i2174 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom157.i2173, !dbg !1149
  %2205 = load i32, i32* %arrayidx158.i2174, align 4, !dbg !1149
  %xor159.i2175 = xor i32 %xor154.i2170, %2205, !dbg !1149
  %2206 = load i32, i32* %u.i1945, align 4, !dbg !1149
  %shr160.i2176 = lshr i32 %2206, 26, !dbg !1149
  %idxprom162.i2177 = zext i32 %shr160.i2176 to i64, !dbg !1149
  %arrayidx163.i2178 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom162.i2177, !dbg !1149
  %2207 = load i32, i32* %arrayidx163.i2178, align 4, !dbg !1149
  %xor164.i2179 = xor i32 %xor159.i2175, %2207, !dbg !1149
  %2208 = load i32, i32* %t.i1944, align 4, !dbg !1149
  %shr165.i2180 = lshr i32 %2208, 2, !dbg !1149
  %and166.i2181 = and i32 %shr165.i2180, 63, !dbg !1149
  %idxprom167.i2182 = zext i32 %and166.i2181 to i64, !dbg !1149
  %arrayidx168.i2183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom167.i2182, !dbg !1149
  %2209 = load i32, i32* %arrayidx168.i2183, align 4, !dbg !1149
  %xor169.i2184 = xor i32 %xor164.i2179, %2209, !dbg !1149
  %2210 = load i32, i32* %t.i1944, align 4, !dbg !1149
  %shr170.i2185 = lshr i32 %2210, 10, !dbg !1149
  %and171.i2186 = and i32 %shr170.i2185, 63, !dbg !1149
  %idxprom172.i2187 = zext i32 %and171.i2186 to i64, !dbg !1149
  %arrayidx173.i2188 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom172.i2187, !dbg !1149
  %2211 = load i32, i32* %arrayidx173.i2188, align 4, !dbg !1149
  %xor174.i2189 = xor i32 %xor169.i2184, %2211, !dbg !1149
  %2212 = load i32, i32* %t.i1944, align 4, !dbg !1149
  %shr175.i2190 = lshr i32 %2212, 18, !dbg !1149
  %and176.i2191 = and i32 %shr175.i2190, 63, !dbg !1149
  %idxprom177.i2192 = zext i32 %and176.i2191 to i64, !dbg !1149
  %arrayidx178.i2193 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom177.i2192, !dbg !1149
  %2213 = load i32, i32* %arrayidx178.i2193, align 4, !dbg !1149
  %xor179.i2194 = xor i32 %xor174.i2189, %2213, !dbg !1149
  %2214 = load i32, i32* %t.i1944, align 4, !dbg !1149
  %shr180.i2195 = lshr i32 %2214, 26, !dbg !1149
  %idxprom182.i2196 = zext i32 %shr180.i2195 to i64, !dbg !1149
  %arrayidx183.i2197 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom182.i2196, !dbg !1149
  %2215 = load i32, i32* %arrayidx183.i2197, align 4, !dbg !1149
  %xor184.i2198 = xor i32 %xor179.i2194, %2215, !dbg !1149
  %2216 = load i32, i32* %l.i1942, align 4, !dbg !1149
  %xor185.i2199 = xor i32 %2216, %xor184.i2198, !dbg !1149
  store i32 %xor185.i2199, i32* %l.i1942, align 4, !dbg !1149
  %2217 = load i32, i32* %l.i1942, align 4, !dbg !1150
  %2218 = load i32*, i32** %s.i1946, align 8, !dbg !1150
  %arrayidx186.i2200 = getelementptr inbounds i32, i32* %2218, i64 6, !dbg !1150
  %2219 = load i32, i32* %arrayidx186.i2200, align 4, !dbg !1150
  %xor187.i2201 = xor i32 %2217, %2219, !dbg !1150
  store i32 %xor187.i2201, i32* %u.i1945, align 4, !dbg !1150
  %2220 = load i32, i32* %l.i1942, align 4, !dbg !1150
  %2221 = load i32*, i32** %s.i1946, align 8, !dbg !1150
  %arrayidx188.i2202 = getelementptr inbounds i32, i32* %2221, i64 7, !dbg !1150
  %2222 = load i32, i32* %arrayidx188.i2202, align 4, !dbg !1150
  %xor189.i2203 = xor i32 %2220, %2222, !dbg !1150
  store i32 %xor189.i2203, i32* %t.i1944, align 4, !dbg !1150
  %2223 = load i32, i32* %t.i1944, align 4, !dbg !749
  %2224 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2223) #7, !dbg !749, !srcloc !113
  store i32 %2224, i32* %ret190.i1958, align 4, !dbg !749
  %2225 = load i32, i32* %ret190.i1958, align 4, !dbg !749
  store i32 %2225, i32* %tmp191.i1959, align 4, !dbg !749
  %2226 = load i32, i32* %tmp191.i1959, align 4, !dbg !749
  store i32 %2226, i32* %t.i1944, align 4, !dbg !1150
  %2227 = load i32, i32* %u.i1945, align 4, !dbg !1150
  %shr192.i2204 = lshr i32 %2227, 2, !dbg !1150
  %and193.i2205 = and i32 %shr192.i2204, 63, !dbg !1150
  %idxprom194.i2206 = zext i32 %and193.i2205 to i64, !dbg !1150
  %arrayidx195.i2207 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom194.i2206, !dbg !1150
  %2228 = load i32, i32* %arrayidx195.i2207, align 4, !dbg !1150
  %2229 = load i32, i32* %u.i1945, align 4, !dbg !1150
  %shr196.i2208 = lshr i32 %2229, 10, !dbg !1150
  %and197.i2209 = and i32 %shr196.i2208, 63, !dbg !1150
  %idxprom198.i2210 = zext i32 %and197.i2209 to i64, !dbg !1150
  %arrayidx199.i2211 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom198.i2210, !dbg !1150
  %2230 = load i32, i32* %arrayidx199.i2211, align 4, !dbg !1150
  %xor200.i2212 = xor i32 %2228, %2230, !dbg !1150
  %2231 = load i32, i32* %u.i1945, align 4, !dbg !1150
  %shr201.i2213 = lshr i32 %2231, 18, !dbg !1150
  %and202.i2214 = and i32 %shr201.i2213, 63, !dbg !1150
  %idxprom203.i2215 = zext i32 %and202.i2214 to i64, !dbg !1150
  %arrayidx204.i2216 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom203.i2215, !dbg !1150
  %2232 = load i32, i32* %arrayidx204.i2216, align 4, !dbg !1150
  %xor205.i2217 = xor i32 %xor200.i2212, %2232, !dbg !1150
  %2233 = load i32, i32* %u.i1945, align 4, !dbg !1150
  %shr206.i2218 = lshr i32 %2233, 26, !dbg !1150
  %idxprom208.i2219 = zext i32 %shr206.i2218 to i64, !dbg !1150
  %arrayidx209.i2220 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom208.i2219, !dbg !1150
  %2234 = load i32, i32* %arrayidx209.i2220, align 4, !dbg !1150
  %xor210.i2221 = xor i32 %xor205.i2217, %2234, !dbg !1150
  %2235 = load i32, i32* %t.i1944, align 4, !dbg !1150
  %shr211.i2222 = lshr i32 %2235, 2, !dbg !1150
  %and212.i2223 = and i32 %shr211.i2222, 63, !dbg !1150
  %idxprom213.i2224 = zext i32 %and212.i2223 to i64, !dbg !1150
  %arrayidx214.i2225 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom213.i2224, !dbg !1150
  %2236 = load i32, i32* %arrayidx214.i2225, align 4, !dbg !1150
  %xor215.i2226 = xor i32 %xor210.i2221, %2236, !dbg !1150
  %2237 = load i32, i32* %t.i1944, align 4, !dbg !1150
  %shr216.i2227 = lshr i32 %2237, 10, !dbg !1150
  %and217.i2228 = and i32 %shr216.i2227, 63, !dbg !1150
  %idxprom218.i2229 = zext i32 %and217.i2228 to i64, !dbg !1150
  %arrayidx219.i2230 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom218.i2229, !dbg !1150
  %2238 = load i32, i32* %arrayidx219.i2230, align 4, !dbg !1150
  %xor220.i2231 = xor i32 %xor215.i2226, %2238, !dbg !1150
  %2239 = load i32, i32* %t.i1944, align 4, !dbg !1150
  %shr221.i2232 = lshr i32 %2239, 18, !dbg !1150
  %and222.i2233 = and i32 %shr221.i2232, 63, !dbg !1150
  %idxprom223.i2234 = zext i32 %and222.i2233 to i64, !dbg !1150
  %arrayidx224.i2235 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom223.i2234, !dbg !1150
  %2240 = load i32, i32* %arrayidx224.i2235, align 4, !dbg !1150
  %xor225.i2236 = xor i32 %xor220.i2231, %2240, !dbg !1150
  %2241 = load i32, i32* %t.i1944, align 4, !dbg !1150
  %shr226.i2237 = lshr i32 %2241, 26, !dbg !1150
  %idxprom228.i2238 = zext i32 %shr226.i2237 to i64, !dbg !1150
  %arrayidx229.i2239 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom228.i2238, !dbg !1150
  %2242 = load i32, i32* %arrayidx229.i2239, align 4, !dbg !1150
  %xor230.i2240 = xor i32 %xor225.i2236, %2242, !dbg !1150
  %2243 = load i32, i32* %r.i1943, align 4, !dbg !1150
  %xor231.i2241 = xor i32 %2243, %xor230.i2240, !dbg !1150
  store i32 %xor231.i2241, i32* %r.i1943, align 4, !dbg !1150
  %2244 = load i32, i32* %r.i1943, align 4, !dbg !1151
  %2245 = load i32*, i32** %s.i1946, align 8, !dbg !1151
  %arrayidx232.i2242 = getelementptr inbounds i32, i32* %2245, i64 8, !dbg !1151
  %2246 = load i32, i32* %arrayidx232.i2242, align 4, !dbg !1151
  %xor233.i2243 = xor i32 %2244, %2246, !dbg !1151
  store i32 %xor233.i2243, i32* %u.i1945, align 4, !dbg !1151
  %2247 = load i32, i32* %r.i1943, align 4, !dbg !1151
  %2248 = load i32*, i32** %s.i1946, align 8, !dbg !1151
  %arrayidx234.i2244 = getelementptr inbounds i32, i32* %2248, i64 9, !dbg !1151
  %2249 = load i32, i32* %arrayidx234.i2244, align 4, !dbg !1151
  %xor235.i2245 = xor i32 %2247, %2249, !dbg !1151
  store i32 %xor235.i2245, i32* %t.i1944, align 4, !dbg !1151
  %2250 = load i32, i32* %t.i1944, align 4, !dbg !750
  %2251 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2250) #7, !dbg !750, !srcloc !119
  store i32 %2251, i32* %ret236.i1960, align 4, !dbg !750
  %2252 = load i32, i32* %ret236.i1960, align 4, !dbg !750
  store i32 %2252, i32* %tmp237.i1961, align 4, !dbg !750
  %2253 = load i32, i32* %tmp237.i1961, align 4, !dbg !750
  store i32 %2253, i32* %t.i1944, align 4, !dbg !1151
  %2254 = load i32, i32* %u.i1945, align 4, !dbg !1151
  %shr238.i2246 = lshr i32 %2254, 2, !dbg !1151
  %and239.i2247 = and i32 %shr238.i2246, 63, !dbg !1151
  %idxprom240.i2248 = zext i32 %and239.i2247 to i64, !dbg !1151
  %arrayidx241.i2249 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom240.i2248, !dbg !1151
  %2255 = load i32, i32* %arrayidx241.i2249, align 4, !dbg !1151
  %2256 = load i32, i32* %u.i1945, align 4, !dbg !1151
  %shr242.i2250 = lshr i32 %2256, 10, !dbg !1151
  %and243.i2251 = and i32 %shr242.i2250, 63, !dbg !1151
  %idxprom244.i2252 = zext i32 %and243.i2251 to i64, !dbg !1151
  %arrayidx245.i2253 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom244.i2252, !dbg !1151
  %2257 = load i32, i32* %arrayidx245.i2253, align 4, !dbg !1151
  %xor246.i2254 = xor i32 %2255, %2257, !dbg !1151
  %2258 = load i32, i32* %u.i1945, align 4, !dbg !1151
  %shr247.i2255 = lshr i32 %2258, 18, !dbg !1151
  %and248.i2256 = and i32 %shr247.i2255, 63, !dbg !1151
  %idxprom249.i2257 = zext i32 %and248.i2256 to i64, !dbg !1151
  %arrayidx250.i2258 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom249.i2257, !dbg !1151
  %2259 = load i32, i32* %arrayidx250.i2258, align 4, !dbg !1151
  %xor251.i2259 = xor i32 %xor246.i2254, %2259, !dbg !1151
  %2260 = load i32, i32* %u.i1945, align 4, !dbg !1151
  %shr252.i2260 = lshr i32 %2260, 26, !dbg !1151
  %idxprom254.i2261 = zext i32 %shr252.i2260 to i64, !dbg !1151
  %arrayidx255.i2262 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom254.i2261, !dbg !1151
  %2261 = load i32, i32* %arrayidx255.i2262, align 4, !dbg !1151
  %xor256.i2263 = xor i32 %xor251.i2259, %2261, !dbg !1151
  %2262 = load i32, i32* %t.i1944, align 4, !dbg !1151
  %shr257.i2264 = lshr i32 %2262, 2, !dbg !1151
  %and258.i2265 = and i32 %shr257.i2264, 63, !dbg !1151
  %idxprom259.i2266 = zext i32 %and258.i2265 to i64, !dbg !1151
  %arrayidx260.i2267 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom259.i2266, !dbg !1151
  %2263 = load i32, i32* %arrayidx260.i2267, align 4, !dbg !1151
  %xor261.i2268 = xor i32 %xor256.i2263, %2263, !dbg !1151
  %2264 = load i32, i32* %t.i1944, align 4, !dbg !1151
  %shr262.i2269 = lshr i32 %2264, 10, !dbg !1151
  %and263.i2270 = and i32 %shr262.i2269, 63, !dbg !1151
  %idxprom264.i2271 = zext i32 %and263.i2270 to i64, !dbg !1151
  %arrayidx265.i2272 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom264.i2271, !dbg !1151
  %2265 = load i32, i32* %arrayidx265.i2272, align 4, !dbg !1151
  %xor266.i2273 = xor i32 %xor261.i2268, %2265, !dbg !1151
  %2266 = load i32, i32* %t.i1944, align 4, !dbg !1151
  %shr267.i2274 = lshr i32 %2266, 18, !dbg !1151
  %and268.i2275 = and i32 %shr267.i2274, 63, !dbg !1151
  %idxprom269.i2276 = zext i32 %and268.i2275 to i64, !dbg !1151
  %arrayidx270.i2277 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom269.i2276, !dbg !1151
  %2267 = load i32, i32* %arrayidx270.i2277, align 4, !dbg !1151
  %xor271.i2278 = xor i32 %xor266.i2273, %2267, !dbg !1151
  %2268 = load i32, i32* %t.i1944, align 4, !dbg !1151
  %shr272.i2279 = lshr i32 %2268, 26, !dbg !1151
  %idxprom274.i2280 = zext i32 %shr272.i2279 to i64, !dbg !1151
  %arrayidx275.i2281 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom274.i2280, !dbg !1151
  %2269 = load i32, i32* %arrayidx275.i2281, align 4, !dbg !1151
  %xor276.i2282 = xor i32 %xor271.i2278, %2269, !dbg !1151
  %2270 = load i32, i32* %l.i1942, align 4, !dbg !1151
  %xor277.i2283 = xor i32 %2270, %xor276.i2282, !dbg !1151
  store i32 %xor277.i2283, i32* %l.i1942, align 4, !dbg !1151
  %2271 = load i32, i32* %l.i1942, align 4, !dbg !1152
  %2272 = load i32*, i32** %s.i1946, align 8, !dbg !1152
  %arrayidx278.i2284 = getelementptr inbounds i32, i32* %2272, i64 10, !dbg !1152
  %2273 = load i32, i32* %arrayidx278.i2284, align 4, !dbg !1152
  %xor279.i2285 = xor i32 %2271, %2273, !dbg !1152
  store i32 %xor279.i2285, i32* %u.i1945, align 4, !dbg !1152
  %2274 = load i32, i32* %l.i1942, align 4, !dbg !1152
  %2275 = load i32*, i32** %s.i1946, align 8, !dbg !1152
  %arrayidx280.i2286 = getelementptr inbounds i32, i32* %2275, i64 11, !dbg !1152
  %2276 = load i32, i32* %arrayidx280.i2286, align 4, !dbg !1152
  %xor281.i2287 = xor i32 %2274, %2276, !dbg !1152
  store i32 %xor281.i2287, i32* %t.i1944, align 4, !dbg !1152
  %2277 = load i32, i32* %t.i1944, align 4, !dbg !751
  %2278 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2277) #7, !dbg !751, !srcloc !125
  store i32 %2278, i32* %ret282.i1962, align 4, !dbg !751
  %2279 = load i32, i32* %ret282.i1962, align 4, !dbg !751
  store i32 %2279, i32* %tmp283.i1963, align 4, !dbg !751
  %2280 = load i32, i32* %tmp283.i1963, align 4, !dbg !751
  store i32 %2280, i32* %t.i1944, align 4, !dbg !1152
  %2281 = load i32, i32* %u.i1945, align 4, !dbg !1152
  %shr284.i2288 = lshr i32 %2281, 2, !dbg !1152
  %and285.i2289 = and i32 %shr284.i2288, 63, !dbg !1152
  %idxprom286.i2290 = zext i32 %and285.i2289 to i64, !dbg !1152
  %arrayidx287.i2291 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom286.i2290, !dbg !1152
  %2282 = load i32, i32* %arrayidx287.i2291, align 4, !dbg !1152
  %2283 = load i32, i32* %u.i1945, align 4, !dbg !1152
  %shr288.i2292 = lshr i32 %2283, 10, !dbg !1152
  %and289.i2293 = and i32 %shr288.i2292, 63, !dbg !1152
  %idxprom290.i2294 = zext i32 %and289.i2293 to i64, !dbg !1152
  %arrayidx291.i2295 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom290.i2294, !dbg !1152
  %2284 = load i32, i32* %arrayidx291.i2295, align 4, !dbg !1152
  %xor292.i2296 = xor i32 %2282, %2284, !dbg !1152
  %2285 = load i32, i32* %u.i1945, align 4, !dbg !1152
  %shr293.i2297 = lshr i32 %2285, 18, !dbg !1152
  %and294.i2298 = and i32 %shr293.i2297, 63, !dbg !1152
  %idxprom295.i2299 = zext i32 %and294.i2298 to i64, !dbg !1152
  %arrayidx296.i2300 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom295.i2299, !dbg !1152
  %2286 = load i32, i32* %arrayidx296.i2300, align 4, !dbg !1152
  %xor297.i2301 = xor i32 %xor292.i2296, %2286, !dbg !1152
  %2287 = load i32, i32* %u.i1945, align 4, !dbg !1152
  %shr298.i2302 = lshr i32 %2287, 26, !dbg !1152
  %idxprom300.i2303 = zext i32 %shr298.i2302 to i64, !dbg !1152
  %arrayidx301.i2304 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom300.i2303, !dbg !1152
  %2288 = load i32, i32* %arrayidx301.i2304, align 4, !dbg !1152
  %xor302.i2305 = xor i32 %xor297.i2301, %2288, !dbg !1152
  %2289 = load i32, i32* %t.i1944, align 4, !dbg !1152
  %shr303.i2306 = lshr i32 %2289, 2, !dbg !1152
  %and304.i2307 = and i32 %shr303.i2306, 63, !dbg !1152
  %idxprom305.i2308 = zext i32 %and304.i2307 to i64, !dbg !1152
  %arrayidx306.i2309 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom305.i2308, !dbg !1152
  %2290 = load i32, i32* %arrayidx306.i2309, align 4, !dbg !1152
  %xor307.i2310 = xor i32 %xor302.i2305, %2290, !dbg !1152
  %2291 = load i32, i32* %t.i1944, align 4, !dbg !1152
  %shr308.i2311 = lshr i32 %2291, 10, !dbg !1152
  %and309.i2312 = and i32 %shr308.i2311, 63, !dbg !1152
  %idxprom310.i2313 = zext i32 %and309.i2312 to i64, !dbg !1152
  %arrayidx311.i2314 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom310.i2313, !dbg !1152
  %2292 = load i32, i32* %arrayidx311.i2314, align 4, !dbg !1152
  %xor312.i2315 = xor i32 %xor307.i2310, %2292, !dbg !1152
  %2293 = load i32, i32* %t.i1944, align 4, !dbg !1152
  %shr313.i2316 = lshr i32 %2293, 18, !dbg !1152
  %and314.i2317 = and i32 %shr313.i2316, 63, !dbg !1152
  %idxprom315.i2318 = zext i32 %and314.i2317 to i64, !dbg !1152
  %arrayidx316.i2319 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom315.i2318, !dbg !1152
  %2294 = load i32, i32* %arrayidx316.i2319, align 4, !dbg !1152
  %xor317.i2320 = xor i32 %xor312.i2315, %2294, !dbg !1152
  %2295 = load i32, i32* %t.i1944, align 4, !dbg !1152
  %shr318.i2321 = lshr i32 %2295, 26, !dbg !1152
  %idxprom320.i2322 = zext i32 %shr318.i2321 to i64, !dbg !1152
  %arrayidx321.i2323 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom320.i2322, !dbg !1152
  %2296 = load i32, i32* %arrayidx321.i2323, align 4, !dbg !1152
  %xor322.i2324 = xor i32 %xor317.i2320, %2296, !dbg !1152
  %2297 = load i32, i32* %r.i1943, align 4, !dbg !1152
  %xor323.i2325 = xor i32 %2297, %xor322.i2324, !dbg !1152
  store i32 %xor323.i2325, i32* %r.i1943, align 4, !dbg !1152
  %2298 = load i32, i32* %r.i1943, align 4, !dbg !1153
  %2299 = load i32*, i32** %s.i1946, align 8, !dbg !1153
  %arrayidx324.i2326 = getelementptr inbounds i32, i32* %2299, i64 12, !dbg !1153
  %2300 = load i32, i32* %arrayidx324.i2326, align 4, !dbg !1153
  %xor325.i2327 = xor i32 %2298, %2300, !dbg !1153
  store i32 %xor325.i2327, i32* %u.i1945, align 4, !dbg !1153
  %2301 = load i32, i32* %r.i1943, align 4, !dbg !1153
  %2302 = load i32*, i32** %s.i1946, align 8, !dbg !1153
  %arrayidx326.i2328 = getelementptr inbounds i32, i32* %2302, i64 13, !dbg !1153
  %2303 = load i32, i32* %arrayidx326.i2328, align 4, !dbg !1153
  %xor327.i2329 = xor i32 %2301, %2303, !dbg !1153
  store i32 %xor327.i2329, i32* %t.i1944, align 4, !dbg !1153
  %2304 = load i32, i32* %t.i1944, align 4, !dbg !752
  %2305 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2304) #7, !dbg !752, !srcloc !131
  store i32 %2305, i32* %ret328.i1964, align 4, !dbg !752
  %2306 = load i32, i32* %ret328.i1964, align 4, !dbg !752
  store i32 %2306, i32* %tmp329.i1965, align 4, !dbg !752
  %2307 = load i32, i32* %tmp329.i1965, align 4, !dbg !752
  store i32 %2307, i32* %t.i1944, align 4, !dbg !1153
  %2308 = load i32, i32* %u.i1945, align 4, !dbg !1153
  %shr330.i2330 = lshr i32 %2308, 2, !dbg !1153
  %and331.i2331 = and i32 %shr330.i2330, 63, !dbg !1153
  %idxprom332.i2332 = zext i32 %and331.i2331 to i64, !dbg !1153
  %arrayidx333.i2333 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom332.i2332, !dbg !1153
  %2309 = load i32, i32* %arrayidx333.i2333, align 4, !dbg !1153
  %2310 = load i32, i32* %u.i1945, align 4, !dbg !1153
  %shr334.i2334 = lshr i32 %2310, 10, !dbg !1153
  %and335.i2335 = and i32 %shr334.i2334, 63, !dbg !1153
  %idxprom336.i2336 = zext i32 %and335.i2335 to i64, !dbg !1153
  %arrayidx337.i2337 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom336.i2336, !dbg !1153
  %2311 = load i32, i32* %arrayidx337.i2337, align 4, !dbg !1153
  %xor338.i2338 = xor i32 %2309, %2311, !dbg !1153
  %2312 = load i32, i32* %u.i1945, align 4, !dbg !1153
  %shr339.i2339 = lshr i32 %2312, 18, !dbg !1153
  %and340.i2340 = and i32 %shr339.i2339, 63, !dbg !1153
  %idxprom341.i2341 = zext i32 %and340.i2340 to i64, !dbg !1153
  %arrayidx342.i2342 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom341.i2341, !dbg !1153
  %2313 = load i32, i32* %arrayidx342.i2342, align 4, !dbg !1153
  %xor343.i2343 = xor i32 %xor338.i2338, %2313, !dbg !1153
  %2314 = load i32, i32* %u.i1945, align 4, !dbg !1153
  %shr344.i2344 = lshr i32 %2314, 26, !dbg !1153
  %idxprom346.i2345 = zext i32 %shr344.i2344 to i64, !dbg !1153
  %arrayidx347.i2346 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom346.i2345, !dbg !1153
  %2315 = load i32, i32* %arrayidx347.i2346, align 4, !dbg !1153
  %xor348.i2347 = xor i32 %xor343.i2343, %2315, !dbg !1153
  %2316 = load i32, i32* %t.i1944, align 4, !dbg !1153
  %shr349.i2348 = lshr i32 %2316, 2, !dbg !1153
  %and350.i2349 = and i32 %shr349.i2348, 63, !dbg !1153
  %idxprom351.i2350 = zext i32 %and350.i2349 to i64, !dbg !1153
  %arrayidx352.i2351 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom351.i2350, !dbg !1153
  %2317 = load i32, i32* %arrayidx352.i2351, align 4, !dbg !1153
  %xor353.i2352 = xor i32 %xor348.i2347, %2317, !dbg !1153
  %2318 = load i32, i32* %t.i1944, align 4, !dbg !1153
  %shr354.i2353 = lshr i32 %2318, 10, !dbg !1153
  %and355.i2354 = and i32 %shr354.i2353, 63, !dbg !1153
  %idxprom356.i2355 = zext i32 %and355.i2354 to i64, !dbg !1153
  %arrayidx357.i2356 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom356.i2355, !dbg !1153
  %2319 = load i32, i32* %arrayidx357.i2356, align 4, !dbg !1153
  %xor358.i2357 = xor i32 %xor353.i2352, %2319, !dbg !1153
  %2320 = load i32, i32* %t.i1944, align 4, !dbg !1153
  %shr359.i2358 = lshr i32 %2320, 18, !dbg !1153
  %and360.i2359 = and i32 %shr359.i2358, 63, !dbg !1153
  %idxprom361.i2360 = zext i32 %and360.i2359 to i64, !dbg !1153
  %arrayidx362.i2361 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom361.i2360, !dbg !1153
  %2321 = load i32, i32* %arrayidx362.i2361, align 4, !dbg !1153
  %xor363.i2362 = xor i32 %xor358.i2357, %2321, !dbg !1153
  %2322 = load i32, i32* %t.i1944, align 4, !dbg !1153
  %shr364.i2363 = lshr i32 %2322, 26, !dbg !1153
  %idxprom366.i2364 = zext i32 %shr364.i2363 to i64, !dbg !1153
  %arrayidx367.i2365 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom366.i2364, !dbg !1153
  %2323 = load i32, i32* %arrayidx367.i2365, align 4, !dbg !1153
  %xor368.i2366 = xor i32 %xor363.i2362, %2323, !dbg !1153
  %2324 = load i32, i32* %l.i1942, align 4, !dbg !1153
  %xor369.i2367 = xor i32 %2324, %xor368.i2366, !dbg !1153
  store i32 %xor369.i2367, i32* %l.i1942, align 4, !dbg !1153
  %2325 = load i32, i32* %l.i1942, align 4, !dbg !1154
  %2326 = load i32*, i32** %s.i1946, align 8, !dbg !1154
  %arrayidx370.i2368 = getelementptr inbounds i32, i32* %2326, i64 14, !dbg !1154
  %2327 = load i32, i32* %arrayidx370.i2368, align 4, !dbg !1154
  %xor371.i2369 = xor i32 %2325, %2327, !dbg !1154
  store i32 %xor371.i2369, i32* %u.i1945, align 4, !dbg !1154
  %2328 = load i32, i32* %l.i1942, align 4, !dbg !1154
  %2329 = load i32*, i32** %s.i1946, align 8, !dbg !1154
  %arrayidx372.i2370 = getelementptr inbounds i32, i32* %2329, i64 15, !dbg !1154
  %2330 = load i32, i32* %arrayidx372.i2370, align 4, !dbg !1154
  %xor373.i2371 = xor i32 %2328, %2330, !dbg !1154
  store i32 %xor373.i2371, i32* %t.i1944, align 4, !dbg !1154
  %2331 = load i32, i32* %t.i1944, align 4, !dbg !753
  %2332 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2331) #7, !dbg !753, !srcloc !137
  store i32 %2332, i32* %ret374.i1966, align 4, !dbg !753
  %2333 = load i32, i32* %ret374.i1966, align 4, !dbg !753
  store i32 %2333, i32* %tmp375.i1967, align 4, !dbg !753
  %2334 = load i32, i32* %tmp375.i1967, align 4, !dbg !753
  store i32 %2334, i32* %t.i1944, align 4, !dbg !1154
  %2335 = load i32, i32* %u.i1945, align 4, !dbg !1154
  %shr376.i2372 = lshr i32 %2335, 2, !dbg !1154
  %and377.i2373 = and i32 %shr376.i2372, 63, !dbg !1154
  %idxprom378.i2374 = zext i32 %and377.i2373 to i64, !dbg !1154
  %arrayidx379.i2375 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom378.i2374, !dbg !1154
  %2336 = load i32, i32* %arrayidx379.i2375, align 4, !dbg !1154
  %2337 = load i32, i32* %u.i1945, align 4, !dbg !1154
  %shr380.i2376 = lshr i32 %2337, 10, !dbg !1154
  %and381.i2377 = and i32 %shr380.i2376, 63, !dbg !1154
  %idxprom382.i2378 = zext i32 %and381.i2377 to i64, !dbg !1154
  %arrayidx383.i2379 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom382.i2378, !dbg !1154
  %2338 = load i32, i32* %arrayidx383.i2379, align 4, !dbg !1154
  %xor384.i2380 = xor i32 %2336, %2338, !dbg !1154
  %2339 = load i32, i32* %u.i1945, align 4, !dbg !1154
  %shr385.i2381 = lshr i32 %2339, 18, !dbg !1154
  %and386.i2382 = and i32 %shr385.i2381, 63, !dbg !1154
  %idxprom387.i2383 = zext i32 %and386.i2382 to i64, !dbg !1154
  %arrayidx388.i2384 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom387.i2383, !dbg !1154
  %2340 = load i32, i32* %arrayidx388.i2384, align 4, !dbg !1154
  %xor389.i2385 = xor i32 %xor384.i2380, %2340, !dbg !1154
  %2341 = load i32, i32* %u.i1945, align 4, !dbg !1154
  %shr390.i2386 = lshr i32 %2341, 26, !dbg !1154
  %idxprom392.i2387 = zext i32 %shr390.i2386 to i64, !dbg !1154
  %arrayidx393.i2388 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom392.i2387, !dbg !1154
  %2342 = load i32, i32* %arrayidx393.i2388, align 4, !dbg !1154
  %xor394.i2389 = xor i32 %xor389.i2385, %2342, !dbg !1154
  %2343 = load i32, i32* %t.i1944, align 4, !dbg !1154
  %shr395.i2390 = lshr i32 %2343, 2, !dbg !1154
  %and396.i2391 = and i32 %shr395.i2390, 63, !dbg !1154
  %idxprom397.i2392 = zext i32 %and396.i2391 to i64, !dbg !1154
  %arrayidx398.i2393 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom397.i2392, !dbg !1154
  %2344 = load i32, i32* %arrayidx398.i2393, align 4, !dbg !1154
  %xor399.i2394 = xor i32 %xor394.i2389, %2344, !dbg !1154
  %2345 = load i32, i32* %t.i1944, align 4, !dbg !1154
  %shr400.i2395 = lshr i32 %2345, 10, !dbg !1154
  %and401.i2396 = and i32 %shr400.i2395, 63, !dbg !1154
  %idxprom402.i2397 = zext i32 %and401.i2396 to i64, !dbg !1154
  %arrayidx403.i2398 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom402.i2397, !dbg !1154
  %2346 = load i32, i32* %arrayidx403.i2398, align 4, !dbg !1154
  %xor404.i2399 = xor i32 %xor399.i2394, %2346, !dbg !1154
  %2347 = load i32, i32* %t.i1944, align 4, !dbg !1154
  %shr405.i2400 = lshr i32 %2347, 18, !dbg !1154
  %and406.i2401 = and i32 %shr405.i2400, 63, !dbg !1154
  %idxprom407.i2402 = zext i32 %and406.i2401 to i64, !dbg !1154
  %arrayidx408.i2403 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom407.i2402, !dbg !1154
  %2348 = load i32, i32* %arrayidx408.i2403, align 4, !dbg !1154
  %xor409.i2404 = xor i32 %xor404.i2399, %2348, !dbg !1154
  %2349 = load i32, i32* %t.i1944, align 4, !dbg !1154
  %shr410.i2405 = lshr i32 %2349, 26, !dbg !1154
  %idxprom412.i2406 = zext i32 %shr410.i2405 to i64, !dbg !1154
  %arrayidx413.i2407 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom412.i2406, !dbg !1154
  %2350 = load i32, i32* %arrayidx413.i2407, align 4, !dbg !1154
  %xor414.i2408 = xor i32 %xor409.i2404, %2350, !dbg !1154
  %2351 = load i32, i32* %r.i1943, align 4, !dbg !1154
  %xor415.i2409 = xor i32 %2351, %xor414.i2408, !dbg !1154
  store i32 %xor415.i2409, i32* %r.i1943, align 4, !dbg !1154
  %2352 = load i32, i32* %r.i1943, align 4, !dbg !1155
  %2353 = load i32*, i32** %s.i1946, align 8, !dbg !1155
  %arrayidx416.i2410 = getelementptr inbounds i32, i32* %2353, i64 16, !dbg !1155
  %2354 = load i32, i32* %arrayidx416.i2410, align 4, !dbg !1155
  %xor417.i2411 = xor i32 %2352, %2354, !dbg !1155
  store i32 %xor417.i2411, i32* %u.i1945, align 4, !dbg !1155
  %2355 = load i32, i32* %r.i1943, align 4, !dbg !1155
  %2356 = load i32*, i32** %s.i1946, align 8, !dbg !1155
  %arrayidx418.i2412 = getelementptr inbounds i32, i32* %2356, i64 17, !dbg !1155
  %2357 = load i32, i32* %arrayidx418.i2412, align 4, !dbg !1155
  %xor419.i2413 = xor i32 %2355, %2357, !dbg !1155
  store i32 %xor419.i2413, i32* %t.i1944, align 4, !dbg !1155
  %2358 = load i32, i32* %t.i1944, align 4, !dbg !754
  %2359 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2358) #7, !dbg !754, !srcloc !143
  store i32 %2359, i32* %ret420.i1968, align 4, !dbg !754
  %2360 = load i32, i32* %ret420.i1968, align 4, !dbg !754
  store i32 %2360, i32* %tmp421.i1969, align 4, !dbg !754
  %2361 = load i32, i32* %tmp421.i1969, align 4, !dbg !754
  store i32 %2361, i32* %t.i1944, align 4, !dbg !1155
  %2362 = load i32, i32* %u.i1945, align 4, !dbg !1155
  %shr422.i2414 = lshr i32 %2362, 2, !dbg !1155
  %and423.i2415 = and i32 %shr422.i2414, 63, !dbg !1155
  %idxprom424.i2416 = zext i32 %and423.i2415 to i64, !dbg !1155
  %arrayidx425.i2417 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom424.i2416, !dbg !1155
  %2363 = load i32, i32* %arrayidx425.i2417, align 4, !dbg !1155
  %2364 = load i32, i32* %u.i1945, align 4, !dbg !1155
  %shr426.i2418 = lshr i32 %2364, 10, !dbg !1155
  %and427.i2419 = and i32 %shr426.i2418, 63, !dbg !1155
  %idxprom428.i2420 = zext i32 %and427.i2419 to i64, !dbg !1155
  %arrayidx429.i2421 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom428.i2420, !dbg !1155
  %2365 = load i32, i32* %arrayidx429.i2421, align 4, !dbg !1155
  %xor430.i2422 = xor i32 %2363, %2365, !dbg !1155
  %2366 = load i32, i32* %u.i1945, align 4, !dbg !1155
  %shr431.i2423 = lshr i32 %2366, 18, !dbg !1155
  %and432.i2424 = and i32 %shr431.i2423, 63, !dbg !1155
  %idxprom433.i2425 = zext i32 %and432.i2424 to i64, !dbg !1155
  %arrayidx434.i2426 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom433.i2425, !dbg !1155
  %2367 = load i32, i32* %arrayidx434.i2426, align 4, !dbg !1155
  %xor435.i2427 = xor i32 %xor430.i2422, %2367, !dbg !1155
  %2368 = load i32, i32* %u.i1945, align 4, !dbg !1155
  %shr436.i2428 = lshr i32 %2368, 26, !dbg !1155
  %idxprom438.i2429 = zext i32 %shr436.i2428 to i64, !dbg !1155
  %arrayidx439.i2430 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom438.i2429, !dbg !1155
  %2369 = load i32, i32* %arrayidx439.i2430, align 4, !dbg !1155
  %xor440.i2431 = xor i32 %xor435.i2427, %2369, !dbg !1155
  %2370 = load i32, i32* %t.i1944, align 4, !dbg !1155
  %shr441.i2432 = lshr i32 %2370, 2, !dbg !1155
  %and442.i2433 = and i32 %shr441.i2432, 63, !dbg !1155
  %idxprom443.i2434 = zext i32 %and442.i2433 to i64, !dbg !1155
  %arrayidx444.i2435 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom443.i2434, !dbg !1155
  %2371 = load i32, i32* %arrayidx444.i2435, align 4, !dbg !1155
  %xor445.i2436 = xor i32 %xor440.i2431, %2371, !dbg !1155
  %2372 = load i32, i32* %t.i1944, align 4, !dbg !1155
  %shr446.i2437 = lshr i32 %2372, 10, !dbg !1155
  %and447.i2438 = and i32 %shr446.i2437, 63, !dbg !1155
  %idxprom448.i2439 = zext i32 %and447.i2438 to i64, !dbg !1155
  %arrayidx449.i2440 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom448.i2439, !dbg !1155
  %2373 = load i32, i32* %arrayidx449.i2440, align 4, !dbg !1155
  %xor450.i2441 = xor i32 %xor445.i2436, %2373, !dbg !1155
  %2374 = load i32, i32* %t.i1944, align 4, !dbg !1155
  %shr451.i2442 = lshr i32 %2374, 18, !dbg !1155
  %and452.i2443 = and i32 %shr451.i2442, 63, !dbg !1155
  %idxprom453.i2444 = zext i32 %and452.i2443 to i64, !dbg !1155
  %arrayidx454.i2445 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom453.i2444, !dbg !1155
  %2375 = load i32, i32* %arrayidx454.i2445, align 4, !dbg !1155
  %xor455.i2446 = xor i32 %xor450.i2441, %2375, !dbg !1155
  %2376 = load i32, i32* %t.i1944, align 4, !dbg !1155
  %shr456.i2447 = lshr i32 %2376, 26, !dbg !1155
  %idxprom458.i2448 = zext i32 %shr456.i2447 to i64, !dbg !1155
  %arrayidx459.i2449 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom458.i2448, !dbg !1155
  %2377 = load i32, i32* %arrayidx459.i2449, align 4, !dbg !1155
  %xor460.i2450 = xor i32 %xor455.i2446, %2377, !dbg !1155
  %2378 = load i32, i32* %l.i1942, align 4, !dbg !1155
  %xor461.i2451 = xor i32 %2378, %xor460.i2450, !dbg !1155
  store i32 %xor461.i2451, i32* %l.i1942, align 4, !dbg !1155
  %2379 = load i32, i32* %l.i1942, align 4, !dbg !1156
  %2380 = load i32*, i32** %s.i1946, align 8, !dbg !1156
  %arrayidx462.i2452 = getelementptr inbounds i32, i32* %2380, i64 18, !dbg !1156
  %2381 = load i32, i32* %arrayidx462.i2452, align 4, !dbg !1156
  %xor463.i2453 = xor i32 %2379, %2381, !dbg !1156
  store i32 %xor463.i2453, i32* %u.i1945, align 4, !dbg !1156
  %2382 = load i32, i32* %l.i1942, align 4, !dbg !1156
  %2383 = load i32*, i32** %s.i1946, align 8, !dbg !1156
  %arrayidx464.i2454 = getelementptr inbounds i32, i32* %2383, i64 19, !dbg !1156
  %2384 = load i32, i32* %arrayidx464.i2454, align 4, !dbg !1156
  %xor465.i2455 = xor i32 %2382, %2384, !dbg !1156
  store i32 %xor465.i2455, i32* %t.i1944, align 4, !dbg !1156
  %2385 = load i32, i32* %t.i1944, align 4, !dbg !755
  %2386 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2385) #7, !dbg !755, !srcloc !149
  store i32 %2386, i32* %ret466.i1970, align 4, !dbg !755
  %2387 = load i32, i32* %ret466.i1970, align 4, !dbg !755
  store i32 %2387, i32* %tmp467.i1971, align 4, !dbg !755
  %2388 = load i32, i32* %tmp467.i1971, align 4, !dbg !755
  store i32 %2388, i32* %t.i1944, align 4, !dbg !1156
  %2389 = load i32, i32* %u.i1945, align 4, !dbg !1156
  %shr468.i2456 = lshr i32 %2389, 2, !dbg !1156
  %and469.i2457 = and i32 %shr468.i2456, 63, !dbg !1156
  %idxprom470.i2458 = zext i32 %and469.i2457 to i64, !dbg !1156
  %arrayidx471.i2459 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom470.i2458, !dbg !1156
  %2390 = load i32, i32* %arrayidx471.i2459, align 4, !dbg !1156
  %2391 = load i32, i32* %u.i1945, align 4, !dbg !1156
  %shr472.i2460 = lshr i32 %2391, 10, !dbg !1156
  %and473.i2461 = and i32 %shr472.i2460, 63, !dbg !1156
  %idxprom474.i2462 = zext i32 %and473.i2461 to i64, !dbg !1156
  %arrayidx475.i2463 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom474.i2462, !dbg !1156
  %2392 = load i32, i32* %arrayidx475.i2463, align 4, !dbg !1156
  %xor476.i2464 = xor i32 %2390, %2392, !dbg !1156
  %2393 = load i32, i32* %u.i1945, align 4, !dbg !1156
  %shr477.i2465 = lshr i32 %2393, 18, !dbg !1156
  %and478.i2466 = and i32 %shr477.i2465, 63, !dbg !1156
  %idxprom479.i2467 = zext i32 %and478.i2466 to i64, !dbg !1156
  %arrayidx480.i2468 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom479.i2467, !dbg !1156
  %2394 = load i32, i32* %arrayidx480.i2468, align 4, !dbg !1156
  %xor481.i2469 = xor i32 %xor476.i2464, %2394, !dbg !1156
  %2395 = load i32, i32* %u.i1945, align 4, !dbg !1156
  %shr482.i2470 = lshr i32 %2395, 26, !dbg !1156
  %idxprom484.i2471 = zext i32 %shr482.i2470 to i64, !dbg !1156
  %arrayidx485.i2472 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom484.i2471, !dbg !1156
  %2396 = load i32, i32* %arrayidx485.i2472, align 4, !dbg !1156
  %xor486.i2473 = xor i32 %xor481.i2469, %2396, !dbg !1156
  %2397 = load i32, i32* %t.i1944, align 4, !dbg !1156
  %shr487.i2474 = lshr i32 %2397, 2, !dbg !1156
  %and488.i2475 = and i32 %shr487.i2474, 63, !dbg !1156
  %idxprom489.i2476 = zext i32 %and488.i2475 to i64, !dbg !1156
  %arrayidx490.i2477 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom489.i2476, !dbg !1156
  %2398 = load i32, i32* %arrayidx490.i2477, align 4, !dbg !1156
  %xor491.i2478 = xor i32 %xor486.i2473, %2398, !dbg !1156
  %2399 = load i32, i32* %t.i1944, align 4, !dbg !1156
  %shr492.i2479 = lshr i32 %2399, 10, !dbg !1156
  %and493.i2480 = and i32 %shr492.i2479, 63, !dbg !1156
  %idxprom494.i2481 = zext i32 %and493.i2480 to i64, !dbg !1156
  %arrayidx495.i2482 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom494.i2481, !dbg !1156
  %2400 = load i32, i32* %arrayidx495.i2482, align 4, !dbg !1156
  %xor496.i2483 = xor i32 %xor491.i2478, %2400, !dbg !1156
  %2401 = load i32, i32* %t.i1944, align 4, !dbg !1156
  %shr497.i2484 = lshr i32 %2401, 18, !dbg !1156
  %and498.i2485 = and i32 %shr497.i2484, 63, !dbg !1156
  %idxprom499.i2486 = zext i32 %and498.i2485 to i64, !dbg !1156
  %arrayidx500.i2487 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom499.i2486, !dbg !1156
  %2402 = load i32, i32* %arrayidx500.i2487, align 4, !dbg !1156
  %xor501.i2488 = xor i32 %xor496.i2483, %2402, !dbg !1156
  %2403 = load i32, i32* %t.i1944, align 4, !dbg !1156
  %shr502.i2489 = lshr i32 %2403, 26, !dbg !1156
  %idxprom504.i2490 = zext i32 %shr502.i2489 to i64, !dbg !1156
  %arrayidx505.i2491 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom504.i2490, !dbg !1156
  %2404 = load i32, i32* %arrayidx505.i2491, align 4, !dbg !1156
  %xor506.i2492 = xor i32 %xor501.i2488, %2404, !dbg !1156
  %2405 = load i32, i32* %r.i1943, align 4, !dbg !1156
  %xor507.i2493 = xor i32 %2405, %xor506.i2492, !dbg !1156
  store i32 %xor507.i2493, i32* %r.i1943, align 4, !dbg !1156
  %2406 = load i32, i32* %r.i1943, align 4, !dbg !1157
  %2407 = load i32*, i32** %s.i1946, align 8, !dbg !1157
  %arrayidx508.i2494 = getelementptr inbounds i32, i32* %2407, i64 20, !dbg !1157
  %2408 = load i32, i32* %arrayidx508.i2494, align 4, !dbg !1157
  %xor509.i2495 = xor i32 %2406, %2408, !dbg !1157
  store i32 %xor509.i2495, i32* %u.i1945, align 4, !dbg !1157
  %2409 = load i32, i32* %r.i1943, align 4, !dbg !1157
  %2410 = load i32*, i32** %s.i1946, align 8, !dbg !1157
  %arrayidx510.i2496 = getelementptr inbounds i32, i32* %2410, i64 21, !dbg !1157
  %2411 = load i32, i32* %arrayidx510.i2496, align 4, !dbg !1157
  %xor511.i2497 = xor i32 %2409, %2411, !dbg !1157
  store i32 %xor511.i2497, i32* %t.i1944, align 4, !dbg !1157
  %2412 = load i32, i32* %t.i1944, align 4, !dbg !756
  %2413 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2412) #7, !dbg !756, !srcloc !155
  store i32 %2413, i32* %ret512.i1972, align 4, !dbg !756
  %2414 = load i32, i32* %ret512.i1972, align 4, !dbg !756
  store i32 %2414, i32* %tmp513.i1973, align 4, !dbg !756
  %2415 = load i32, i32* %tmp513.i1973, align 4, !dbg !756
  store i32 %2415, i32* %t.i1944, align 4, !dbg !1157
  %2416 = load i32, i32* %u.i1945, align 4, !dbg !1157
  %shr514.i2498 = lshr i32 %2416, 2, !dbg !1157
  %and515.i2499 = and i32 %shr514.i2498, 63, !dbg !1157
  %idxprom516.i2500 = zext i32 %and515.i2499 to i64, !dbg !1157
  %arrayidx517.i2501 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom516.i2500, !dbg !1157
  %2417 = load i32, i32* %arrayidx517.i2501, align 4, !dbg !1157
  %2418 = load i32, i32* %u.i1945, align 4, !dbg !1157
  %shr518.i2502 = lshr i32 %2418, 10, !dbg !1157
  %and519.i2503 = and i32 %shr518.i2502, 63, !dbg !1157
  %idxprom520.i2504 = zext i32 %and519.i2503 to i64, !dbg !1157
  %arrayidx521.i2505 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom520.i2504, !dbg !1157
  %2419 = load i32, i32* %arrayidx521.i2505, align 4, !dbg !1157
  %xor522.i2506 = xor i32 %2417, %2419, !dbg !1157
  %2420 = load i32, i32* %u.i1945, align 4, !dbg !1157
  %shr523.i2507 = lshr i32 %2420, 18, !dbg !1157
  %and524.i2508 = and i32 %shr523.i2507, 63, !dbg !1157
  %idxprom525.i2509 = zext i32 %and524.i2508 to i64, !dbg !1157
  %arrayidx526.i2510 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom525.i2509, !dbg !1157
  %2421 = load i32, i32* %arrayidx526.i2510, align 4, !dbg !1157
  %xor527.i2511 = xor i32 %xor522.i2506, %2421, !dbg !1157
  %2422 = load i32, i32* %u.i1945, align 4, !dbg !1157
  %shr528.i2512 = lshr i32 %2422, 26, !dbg !1157
  %idxprom530.i2513 = zext i32 %shr528.i2512 to i64, !dbg !1157
  %arrayidx531.i2514 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom530.i2513, !dbg !1157
  %2423 = load i32, i32* %arrayidx531.i2514, align 4, !dbg !1157
  %xor532.i2515 = xor i32 %xor527.i2511, %2423, !dbg !1157
  %2424 = load i32, i32* %t.i1944, align 4, !dbg !1157
  %shr533.i2516 = lshr i32 %2424, 2, !dbg !1157
  %and534.i2517 = and i32 %shr533.i2516, 63, !dbg !1157
  %idxprom535.i2518 = zext i32 %and534.i2517 to i64, !dbg !1157
  %arrayidx536.i2519 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom535.i2518, !dbg !1157
  %2425 = load i32, i32* %arrayidx536.i2519, align 4, !dbg !1157
  %xor537.i2520 = xor i32 %xor532.i2515, %2425, !dbg !1157
  %2426 = load i32, i32* %t.i1944, align 4, !dbg !1157
  %shr538.i2521 = lshr i32 %2426, 10, !dbg !1157
  %and539.i2522 = and i32 %shr538.i2521, 63, !dbg !1157
  %idxprom540.i2523 = zext i32 %and539.i2522 to i64, !dbg !1157
  %arrayidx541.i2524 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom540.i2523, !dbg !1157
  %2427 = load i32, i32* %arrayidx541.i2524, align 4, !dbg !1157
  %xor542.i2525 = xor i32 %xor537.i2520, %2427, !dbg !1157
  %2428 = load i32, i32* %t.i1944, align 4, !dbg !1157
  %shr543.i2526 = lshr i32 %2428, 18, !dbg !1157
  %and544.i2527 = and i32 %shr543.i2526, 63, !dbg !1157
  %idxprom545.i2528 = zext i32 %and544.i2527 to i64, !dbg !1157
  %arrayidx546.i2529 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom545.i2528, !dbg !1157
  %2429 = load i32, i32* %arrayidx546.i2529, align 4, !dbg !1157
  %xor547.i2530 = xor i32 %xor542.i2525, %2429, !dbg !1157
  %2430 = load i32, i32* %t.i1944, align 4, !dbg !1157
  %shr548.i2531 = lshr i32 %2430, 26, !dbg !1157
  %idxprom550.i2532 = zext i32 %shr548.i2531 to i64, !dbg !1157
  %arrayidx551.i2533 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom550.i2532, !dbg !1157
  %2431 = load i32, i32* %arrayidx551.i2533, align 4, !dbg !1157
  %xor552.i2534 = xor i32 %xor547.i2530, %2431, !dbg !1157
  %2432 = load i32, i32* %l.i1942, align 4, !dbg !1157
  %xor553.i2535 = xor i32 %2432, %xor552.i2534, !dbg !1157
  store i32 %xor553.i2535, i32* %l.i1942, align 4, !dbg !1157
  %2433 = load i32, i32* %l.i1942, align 4, !dbg !1158
  %2434 = load i32*, i32** %s.i1946, align 8, !dbg !1158
  %arrayidx554.i2536 = getelementptr inbounds i32, i32* %2434, i64 22, !dbg !1158
  %2435 = load i32, i32* %arrayidx554.i2536, align 4, !dbg !1158
  %xor555.i2537 = xor i32 %2433, %2435, !dbg !1158
  store i32 %xor555.i2537, i32* %u.i1945, align 4, !dbg !1158
  %2436 = load i32, i32* %l.i1942, align 4, !dbg !1158
  %2437 = load i32*, i32** %s.i1946, align 8, !dbg !1158
  %arrayidx556.i2538 = getelementptr inbounds i32, i32* %2437, i64 23, !dbg !1158
  %2438 = load i32, i32* %arrayidx556.i2538, align 4, !dbg !1158
  %xor557.i2539 = xor i32 %2436, %2438, !dbg !1158
  store i32 %xor557.i2539, i32* %t.i1944, align 4, !dbg !1158
  %2439 = load i32, i32* %t.i1944, align 4, !dbg !757
  %2440 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2439) #7, !dbg !757, !srcloc !161
  store i32 %2440, i32* %ret558.i1974, align 4, !dbg !757
  %2441 = load i32, i32* %ret558.i1974, align 4, !dbg !757
  store i32 %2441, i32* %tmp559.i1975, align 4, !dbg !757
  %2442 = load i32, i32* %tmp559.i1975, align 4, !dbg !757
  store i32 %2442, i32* %t.i1944, align 4, !dbg !1158
  %2443 = load i32, i32* %u.i1945, align 4, !dbg !1158
  %shr560.i2540 = lshr i32 %2443, 2, !dbg !1158
  %and561.i2541 = and i32 %shr560.i2540, 63, !dbg !1158
  %idxprom562.i2542 = zext i32 %and561.i2541 to i64, !dbg !1158
  %arrayidx563.i2543 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom562.i2542, !dbg !1158
  %2444 = load i32, i32* %arrayidx563.i2543, align 4, !dbg !1158
  %2445 = load i32, i32* %u.i1945, align 4, !dbg !1158
  %shr564.i2544 = lshr i32 %2445, 10, !dbg !1158
  %and565.i2545 = and i32 %shr564.i2544, 63, !dbg !1158
  %idxprom566.i2546 = zext i32 %and565.i2545 to i64, !dbg !1158
  %arrayidx567.i2547 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom566.i2546, !dbg !1158
  %2446 = load i32, i32* %arrayidx567.i2547, align 4, !dbg !1158
  %xor568.i2548 = xor i32 %2444, %2446, !dbg !1158
  %2447 = load i32, i32* %u.i1945, align 4, !dbg !1158
  %shr569.i2549 = lshr i32 %2447, 18, !dbg !1158
  %and570.i2550 = and i32 %shr569.i2549, 63, !dbg !1158
  %idxprom571.i2551 = zext i32 %and570.i2550 to i64, !dbg !1158
  %arrayidx572.i2552 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom571.i2551, !dbg !1158
  %2448 = load i32, i32* %arrayidx572.i2552, align 4, !dbg !1158
  %xor573.i2553 = xor i32 %xor568.i2548, %2448, !dbg !1158
  %2449 = load i32, i32* %u.i1945, align 4, !dbg !1158
  %shr574.i2554 = lshr i32 %2449, 26, !dbg !1158
  %idxprom576.i2555 = zext i32 %shr574.i2554 to i64, !dbg !1158
  %arrayidx577.i2556 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom576.i2555, !dbg !1158
  %2450 = load i32, i32* %arrayidx577.i2556, align 4, !dbg !1158
  %xor578.i2557 = xor i32 %xor573.i2553, %2450, !dbg !1158
  %2451 = load i32, i32* %t.i1944, align 4, !dbg !1158
  %shr579.i2558 = lshr i32 %2451, 2, !dbg !1158
  %and580.i2559 = and i32 %shr579.i2558, 63, !dbg !1158
  %idxprom581.i2560 = zext i32 %and580.i2559 to i64, !dbg !1158
  %arrayidx582.i2561 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom581.i2560, !dbg !1158
  %2452 = load i32, i32* %arrayidx582.i2561, align 4, !dbg !1158
  %xor583.i2562 = xor i32 %xor578.i2557, %2452, !dbg !1158
  %2453 = load i32, i32* %t.i1944, align 4, !dbg !1158
  %shr584.i2563 = lshr i32 %2453, 10, !dbg !1158
  %and585.i2564 = and i32 %shr584.i2563, 63, !dbg !1158
  %idxprom586.i2565 = zext i32 %and585.i2564 to i64, !dbg !1158
  %arrayidx587.i2566 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom586.i2565, !dbg !1158
  %2454 = load i32, i32* %arrayidx587.i2566, align 4, !dbg !1158
  %xor588.i2567 = xor i32 %xor583.i2562, %2454, !dbg !1158
  %2455 = load i32, i32* %t.i1944, align 4, !dbg !1158
  %shr589.i2568 = lshr i32 %2455, 18, !dbg !1158
  %and590.i2569 = and i32 %shr589.i2568, 63, !dbg !1158
  %idxprom591.i2570 = zext i32 %and590.i2569 to i64, !dbg !1158
  %arrayidx592.i2571 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom591.i2570, !dbg !1158
  %2456 = load i32, i32* %arrayidx592.i2571, align 4, !dbg !1158
  %xor593.i2572 = xor i32 %xor588.i2567, %2456, !dbg !1158
  %2457 = load i32, i32* %t.i1944, align 4, !dbg !1158
  %shr594.i2573 = lshr i32 %2457, 26, !dbg !1158
  %idxprom596.i2574 = zext i32 %shr594.i2573 to i64, !dbg !1158
  %arrayidx597.i2575 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom596.i2574, !dbg !1158
  %2458 = load i32, i32* %arrayidx597.i2575, align 4, !dbg !1158
  %xor598.i2576 = xor i32 %xor593.i2572, %2458, !dbg !1158
  %2459 = load i32, i32* %r.i1943, align 4, !dbg !1158
  %xor599.i2577 = xor i32 %2459, %xor598.i2576, !dbg !1158
  store i32 %xor599.i2577, i32* %r.i1943, align 4, !dbg !1158
  %2460 = load i32, i32* %r.i1943, align 4, !dbg !1159
  %2461 = load i32*, i32** %s.i1946, align 8, !dbg !1159
  %arrayidx600.i2578 = getelementptr inbounds i32, i32* %2461, i64 24, !dbg !1159
  %2462 = load i32, i32* %arrayidx600.i2578, align 4, !dbg !1159
  %xor601.i2579 = xor i32 %2460, %2462, !dbg !1159
  store i32 %xor601.i2579, i32* %u.i1945, align 4, !dbg !1159
  %2463 = load i32, i32* %r.i1943, align 4, !dbg !1159
  %2464 = load i32*, i32** %s.i1946, align 8, !dbg !1159
  %arrayidx602.i2580 = getelementptr inbounds i32, i32* %2464, i64 25, !dbg !1159
  %2465 = load i32, i32* %arrayidx602.i2580, align 4, !dbg !1159
  %xor603.i2581 = xor i32 %2463, %2465, !dbg !1159
  store i32 %xor603.i2581, i32* %t.i1944, align 4, !dbg !1159
  %2466 = load i32, i32* %t.i1944, align 4, !dbg !758
  %2467 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2466) #7, !dbg !758, !srcloc !167
  store i32 %2467, i32* %ret604.i1976, align 4, !dbg !758
  %2468 = load i32, i32* %ret604.i1976, align 4, !dbg !758
  store i32 %2468, i32* %tmp605.i1977, align 4, !dbg !758
  %2469 = load i32, i32* %tmp605.i1977, align 4, !dbg !758
  store i32 %2469, i32* %t.i1944, align 4, !dbg !1159
  %2470 = load i32, i32* %u.i1945, align 4, !dbg !1159
  %shr606.i2582 = lshr i32 %2470, 2, !dbg !1159
  %and607.i2583 = and i32 %shr606.i2582, 63, !dbg !1159
  %idxprom608.i2584 = zext i32 %and607.i2583 to i64, !dbg !1159
  %arrayidx609.i2585 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom608.i2584, !dbg !1159
  %2471 = load i32, i32* %arrayidx609.i2585, align 4, !dbg !1159
  %2472 = load i32, i32* %u.i1945, align 4, !dbg !1159
  %shr610.i2586 = lshr i32 %2472, 10, !dbg !1159
  %and611.i2587 = and i32 %shr610.i2586, 63, !dbg !1159
  %idxprom612.i2588 = zext i32 %and611.i2587 to i64, !dbg !1159
  %arrayidx613.i2589 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom612.i2588, !dbg !1159
  %2473 = load i32, i32* %arrayidx613.i2589, align 4, !dbg !1159
  %xor614.i2590 = xor i32 %2471, %2473, !dbg !1159
  %2474 = load i32, i32* %u.i1945, align 4, !dbg !1159
  %shr615.i2591 = lshr i32 %2474, 18, !dbg !1159
  %and616.i2592 = and i32 %shr615.i2591, 63, !dbg !1159
  %idxprom617.i2593 = zext i32 %and616.i2592 to i64, !dbg !1159
  %arrayidx618.i2594 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom617.i2593, !dbg !1159
  %2475 = load i32, i32* %arrayidx618.i2594, align 4, !dbg !1159
  %xor619.i2595 = xor i32 %xor614.i2590, %2475, !dbg !1159
  %2476 = load i32, i32* %u.i1945, align 4, !dbg !1159
  %shr620.i2596 = lshr i32 %2476, 26, !dbg !1159
  %idxprom622.i2597 = zext i32 %shr620.i2596 to i64, !dbg !1159
  %arrayidx623.i2598 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom622.i2597, !dbg !1159
  %2477 = load i32, i32* %arrayidx623.i2598, align 4, !dbg !1159
  %xor624.i2599 = xor i32 %xor619.i2595, %2477, !dbg !1159
  %2478 = load i32, i32* %t.i1944, align 4, !dbg !1159
  %shr625.i2600 = lshr i32 %2478, 2, !dbg !1159
  %and626.i2601 = and i32 %shr625.i2600, 63, !dbg !1159
  %idxprom627.i2602 = zext i32 %and626.i2601 to i64, !dbg !1159
  %arrayidx628.i2603 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom627.i2602, !dbg !1159
  %2479 = load i32, i32* %arrayidx628.i2603, align 4, !dbg !1159
  %xor629.i2604 = xor i32 %xor624.i2599, %2479, !dbg !1159
  %2480 = load i32, i32* %t.i1944, align 4, !dbg !1159
  %shr630.i2605 = lshr i32 %2480, 10, !dbg !1159
  %and631.i2606 = and i32 %shr630.i2605, 63, !dbg !1159
  %idxprom632.i2607 = zext i32 %and631.i2606 to i64, !dbg !1159
  %arrayidx633.i2608 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom632.i2607, !dbg !1159
  %2481 = load i32, i32* %arrayidx633.i2608, align 4, !dbg !1159
  %xor634.i2609 = xor i32 %xor629.i2604, %2481, !dbg !1159
  %2482 = load i32, i32* %t.i1944, align 4, !dbg !1159
  %shr635.i2610 = lshr i32 %2482, 18, !dbg !1159
  %and636.i2611 = and i32 %shr635.i2610, 63, !dbg !1159
  %idxprom637.i2612 = zext i32 %and636.i2611 to i64, !dbg !1159
  %arrayidx638.i2613 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom637.i2612, !dbg !1159
  %2483 = load i32, i32* %arrayidx638.i2613, align 4, !dbg !1159
  %xor639.i2614 = xor i32 %xor634.i2609, %2483, !dbg !1159
  %2484 = load i32, i32* %t.i1944, align 4, !dbg !1159
  %shr640.i2615 = lshr i32 %2484, 26, !dbg !1159
  %idxprom642.i2616 = zext i32 %shr640.i2615 to i64, !dbg !1159
  %arrayidx643.i2617 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom642.i2616, !dbg !1159
  %2485 = load i32, i32* %arrayidx643.i2617, align 4, !dbg !1159
  %xor644.i2618 = xor i32 %xor639.i2614, %2485, !dbg !1159
  %2486 = load i32, i32* %l.i1942, align 4, !dbg !1159
  %xor645.i2619 = xor i32 %2486, %xor644.i2618, !dbg !1159
  store i32 %xor645.i2619, i32* %l.i1942, align 4, !dbg !1159
  %2487 = load i32, i32* %l.i1942, align 4, !dbg !1160
  %2488 = load i32*, i32** %s.i1946, align 8, !dbg !1160
  %arrayidx646.i2620 = getelementptr inbounds i32, i32* %2488, i64 26, !dbg !1160
  %2489 = load i32, i32* %arrayidx646.i2620, align 4, !dbg !1160
  %xor647.i2621 = xor i32 %2487, %2489, !dbg !1160
  store i32 %xor647.i2621, i32* %u.i1945, align 4, !dbg !1160
  %2490 = load i32, i32* %l.i1942, align 4, !dbg !1160
  %2491 = load i32*, i32** %s.i1946, align 8, !dbg !1160
  %arrayidx648.i2622 = getelementptr inbounds i32, i32* %2491, i64 27, !dbg !1160
  %2492 = load i32, i32* %arrayidx648.i2622, align 4, !dbg !1160
  %xor649.i2623 = xor i32 %2490, %2492, !dbg !1160
  store i32 %xor649.i2623, i32* %t.i1944, align 4, !dbg !1160
  %2493 = load i32, i32* %t.i1944, align 4, !dbg !759
  %2494 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2493) #7, !dbg !759, !srcloc !173
  store i32 %2494, i32* %ret650.i1978, align 4, !dbg !759
  %2495 = load i32, i32* %ret650.i1978, align 4, !dbg !759
  store i32 %2495, i32* %tmp651.i1979, align 4, !dbg !759
  %2496 = load i32, i32* %tmp651.i1979, align 4, !dbg !759
  store i32 %2496, i32* %t.i1944, align 4, !dbg !1160
  %2497 = load i32, i32* %u.i1945, align 4, !dbg !1160
  %shr652.i2624 = lshr i32 %2497, 2, !dbg !1160
  %and653.i2625 = and i32 %shr652.i2624, 63, !dbg !1160
  %idxprom654.i2626 = zext i32 %and653.i2625 to i64, !dbg !1160
  %arrayidx655.i2627 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom654.i2626, !dbg !1160
  %2498 = load i32, i32* %arrayidx655.i2627, align 4, !dbg !1160
  %2499 = load i32, i32* %u.i1945, align 4, !dbg !1160
  %shr656.i2628 = lshr i32 %2499, 10, !dbg !1160
  %and657.i2629 = and i32 %shr656.i2628, 63, !dbg !1160
  %idxprom658.i2630 = zext i32 %and657.i2629 to i64, !dbg !1160
  %arrayidx659.i2631 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom658.i2630, !dbg !1160
  %2500 = load i32, i32* %arrayidx659.i2631, align 4, !dbg !1160
  %xor660.i2632 = xor i32 %2498, %2500, !dbg !1160
  %2501 = load i32, i32* %u.i1945, align 4, !dbg !1160
  %shr661.i2633 = lshr i32 %2501, 18, !dbg !1160
  %and662.i2634 = and i32 %shr661.i2633, 63, !dbg !1160
  %idxprom663.i2635 = zext i32 %and662.i2634 to i64, !dbg !1160
  %arrayidx664.i2636 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom663.i2635, !dbg !1160
  %2502 = load i32, i32* %arrayidx664.i2636, align 4, !dbg !1160
  %xor665.i2637 = xor i32 %xor660.i2632, %2502, !dbg !1160
  %2503 = load i32, i32* %u.i1945, align 4, !dbg !1160
  %shr666.i2638 = lshr i32 %2503, 26, !dbg !1160
  %idxprom668.i2639 = zext i32 %shr666.i2638 to i64, !dbg !1160
  %arrayidx669.i2640 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom668.i2639, !dbg !1160
  %2504 = load i32, i32* %arrayidx669.i2640, align 4, !dbg !1160
  %xor670.i2641 = xor i32 %xor665.i2637, %2504, !dbg !1160
  %2505 = load i32, i32* %t.i1944, align 4, !dbg !1160
  %shr671.i2642 = lshr i32 %2505, 2, !dbg !1160
  %and672.i2643 = and i32 %shr671.i2642, 63, !dbg !1160
  %idxprom673.i2644 = zext i32 %and672.i2643 to i64, !dbg !1160
  %arrayidx674.i2645 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom673.i2644, !dbg !1160
  %2506 = load i32, i32* %arrayidx674.i2645, align 4, !dbg !1160
  %xor675.i2646 = xor i32 %xor670.i2641, %2506, !dbg !1160
  %2507 = load i32, i32* %t.i1944, align 4, !dbg !1160
  %shr676.i2647 = lshr i32 %2507, 10, !dbg !1160
  %and677.i2648 = and i32 %shr676.i2647, 63, !dbg !1160
  %idxprom678.i2649 = zext i32 %and677.i2648 to i64, !dbg !1160
  %arrayidx679.i2650 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom678.i2649, !dbg !1160
  %2508 = load i32, i32* %arrayidx679.i2650, align 4, !dbg !1160
  %xor680.i2651 = xor i32 %xor675.i2646, %2508, !dbg !1160
  %2509 = load i32, i32* %t.i1944, align 4, !dbg !1160
  %shr681.i2652 = lshr i32 %2509, 18, !dbg !1160
  %and682.i2653 = and i32 %shr681.i2652, 63, !dbg !1160
  %idxprom683.i2654 = zext i32 %and682.i2653 to i64, !dbg !1160
  %arrayidx684.i2655 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom683.i2654, !dbg !1160
  %2510 = load i32, i32* %arrayidx684.i2655, align 4, !dbg !1160
  %xor685.i2656 = xor i32 %xor680.i2651, %2510, !dbg !1160
  %2511 = load i32, i32* %t.i1944, align 4, !dbg !1160
  %shr686.i2657 = lshr i32 %2511, 26, !dbg !1160
  %idxprom688.i2658 = zext i32 %shr686.i2657 to i64, !dbg !1160
  %arrayidx689.i2659 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom688.i2658, !dbg !1160
  %2512 = load i32, i32* %arrayidx689.i2659, align 4, !dbg !1160
  %xor690.i2660 = xor i32 %xor685.i2656, %2512, !dbg !1160
  %2513 = load i32, i32* %r.i1943, align 4, !dbg !1160
  %xor691.i2661 = xor i32 %2513, %xor690.i2660, !dbg !1160
  store i32 %xor691.i2661, i32* %r.i1943, align 4, !dbg !1160
  %2514 = load i32, i32* %r.i1943, align 4, !dbg !1161
  %2515 = load i32*, i32** %s.i1946, align 8, !dbg !1161
  %arrayidx692.i2662 = getelementptr inbounds i32, i32* %2515, i64 28, !dbg !1161
  %2516 = load i32, i32* %arrayidx692.i2662, align 4, !dbg !1161
  %xor693.i2663 = xor i32 %2514, %2516, !dbg !1161
  store i32 %xor693.i2663, i32* %u.i1945, align 4, !dbg !1161
  %2517 = load i32, i32* %r.i1943, align 4, !dbg !1161
  %2518 = load i32*, i32** %s.i1946, align 8, !dbg !1161
  %arrayidx694.i2664 = getelementptr inbounds i32, i32* %2518, i64 29, !dbg !1161
  %2519 = load i32, i32* %arrayidx694.i2664, align 4, !dbg !1161
  %xor695.i2665 = xor i32 %2517, %2519, !dbg !1161
  store i32 %xor695.i2665, i32* %t.i1944, align 4, !dbg !1161
  %2520 = load i32, i32* %t.i1944, align 4, !dbg !760
  %2521 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2520) #7, !dbg !760, !srcloc !179
  store i32 %2521, i32* %ret696.i1980, align 4, !dbg !760
  %2522 = load i32, i32* %ret696.i1980, align 4, !dbg !760
  store i32 %2522, i32* %tmp697.i1981, align 4, !dbg !760
  %2523 = load i32, i32* %tmp697.i1981, align 4, !dbg !760
  store i32 %2523, i32* %t.i1944, align 4, !dbg !1161
  %2524 = load i32, i32* %u.i1945, align 4, !dbg !1161
  %shr698.i2666 = lshr i32 %2524, 2, !dbg !1161
  %and699.i2667 = and i32 %shr698.i2666, 63, !dbg !1161
  %idxprom700.i2668 = zext i32 %and699.i2667 to i64, !dbg !1161
  %arrayidx701.i2669 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom700.i2668, !dbg !1161
  %2525 = load i32, i32* %arrayidx701.i2669, align 4, !dbg !1161
  %2526 = load i32, i32* %u.i1945, align 4, !dbg !1161
  %shr702.i2670 = lshr i32 %2526, 10, !dbg !1161
  %and703.i2671 = and i32 %shr702.i2670, 63, !dbg !1161
  %idxprom704.i2672 = zext i32 %and703.i2671 to i64, !dbg !1161
  %arrayidx705.i2673 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom704.i2672, !dbg !1161
  %2527 = load i32, i32* %arrayidx705.i2673, align 4, !dbg !1161
  %xor706.i2674 = xor i32 %2525, %2527, !dbg !1161
  %2528 = load i32, i32* %u.i1945, align 4, !dbg !1161
  %shr707.i2675 = lshr i32 %2528, 18, !dbg !1161
  %and708.i2676 = and i32 %shr707.i2675, 63, !dbg !1161
  %idxprom709.i2677 = zext i32 %and708.i2676 to i64, !dbg !1161
  %arrayidx710.i2678 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom709.i2677, !dbg !1161
  %2529 = load i32, i32* %arrayidx710.i2678, align 4, !dbg !1161
  %xor711.i2679 = xor i32 %xor706.i2674, %2529, !dbg !1161
  %2530 = load i32, i32* %u.i1945, align 4, !dbg !1161
  %shr712.i2680 = lshr i32 %2530, 26, !dbg !1161
  %idxprom714.i2681 = zext i32 %shr712.i2680 to i64, !dbg !1161
  %arrayidx715.i2682 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom714.i2681, !dbg !1161
  %2531 = load i32, i32* %arrayidx715.i2682, align 4, !dbg !1161
  %xor716.i2683 = xor i32 %xor711.i2679, %2531, !dbg !1161
  %2532 = load i32, i32* %t.i1944, align 4, !dbg !1161
  %shr717.i2684 = lshr i32 %2532, 2, !dbg !1161
  %and718.i2685 = and i32 %shr717.i2684, 63, !dbg !1161
  %idxprom719.i2686 = zext i32 %and718.i2685 to i64, !dbg !1161
  %arrayidx720.i2687 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom719.i2686, !dbg !1161
  %2533 = load i32, i32* %arrayidx720.i2687, align 4, !dbg !1161
  %xor721.i2688 = xor i32 %xor716.i2683, %2533, !dbg !1161
  %2534 = load i32, i32* %t.i1944, align 4, !dbg !1161
  %shr722.i2689 = lshr i32 %2534, 10, !dbg !1161
  %and723.i2690 = and i32 %shr722.i2689, 63, !dbg !1161
  %idxprom724.i2691 = zext i32 %and723.i2690 to i64, !dbg !1161
  %arrayidx725.i2692 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom724.i2691, !dbg !1161
  %2535 = load i32, i32* %arrayidx725.i2692, align 4, !dbg !1161
  %xor726.i2693 = xor i32 %xor721.i2688, %2535, !dbg !1161
  %2536 = load i32, i32* %t.i1944, align 4, !dbg !1161
  %shr727.i2694 = lshr i32 %2536, 18, !dbg !1161
  %and728.i2695 = and i32 %shr727.i2694, 63, !dbg !1161
  %idxprom729.i2696 = zext i32 %and728.i2695 to i64, !dbg !1161
  %arrayidx730.i2697 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom729.i2696, !dbg !1161
  %2537 = load i32, i32* %arrayidx730.i2697, align 4, !dbg !1161
  %xor731.i2698 = xor i32 %xor726.i2693, %2537, !dbg !1161
  %2538 = load i32, i32* %t.i1944, align 4, !dbg !1161
  %shr732.i2699 = lshr i32 %2538, 26, !dbg !1161
  %idxprom734.i2700 = zext i32 %shr732.i2699 to i64, !dbg !1161
  %arrayidx735.i2701 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom734.i2700, !dbg !1161
  %2539 = load i32, i32* %arrayidx735.i2701, align 4, !dbg !1161
  %xor736.i2702 = xor i32 %xor731.i2698, %2539, !dbg !1161
  %2540 = load i32, i32* %l.i1942, align 4, !dbg !1161
  %xor737.i2703 = xor i32 %2540, %xor736.i2702, !dbg !1161
  store i32 %xor737.i2703, i32* %l.i1942, align 4, !dbg !1161
  %2541 = load i32, i32* %l.i1942, align 4, !dbg !1162
  %2542 = load i32*, i32** %s.i1946, align 8, !dbg !1162
  %arrayidx738.i2704 = getelementptr inbounds i32, i32* %2542, i64 30, !dbg !1162
  %2543 = load i32, i32* %arrayidx738.i2704, align 4, !dbg !1162
  %xor739.i2705 = xor i32 %2541, %2543, !dbg !1162
  store i32 %xor739.i2705, i32* %u.i1945, align 4, !dbg !1162
  %2544 = load i32, i32* %l.i1942, align 4, !dbg !1162
  %2545 = load i32*, i32** %s.i1946, align 8, !dbg !1162
  %arrayidx740.i2706 = getelementptr inbounds i32, i32* %2545, i64 31, !dbg !1162
  %2546 = load i32, i32* %arrayidx740.i2706, align 4, !dbg !1162
  %xor741.i2707 = xor i32 %2544, %2546, !dbg !1162
  store i32 %xor741.i2707, i32* %t.i1944, align 4, !dbg !1162
  %2547 = load i32, i32* %t.i1944, align 4, !dbg !761
  %2548 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2547) #7, !dbg !761, !srcloc !185
  store i32 %2548, i32* %ret742.i1982, align 4, !dbg !761
  %2549 = load i32, i32* %ret742.i1982, align 4, !dbg !761
  store i32 %2549, i32* %tmp743.i1983, align 4, !dbg !761
  %2550 = load i32, i32* %tmp743.i1983, align 4, !dbg !761
  store i32 %2550, i32* %t.i1944, align 4, !dbg !1162
  %2551 = load i32, i32* %u.i1945, align 4, !dbg !1162
  %shr744.i2708 = lshr i32 %2551, 2, !dbg !1162
  %and745.i2709 = and i32 %shr744.i2708, 63, !dbg !1162
  %idxprom746.i2710 = zext i32 %and745.i2709 to i64, !dbg !1162
  %arrayidx747.i2711 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom746.i2710, !dbg !1162
  %2552 = load i32, i32* %arrayidx747.i2711, align 4, !dbg !1162
  %2553 = load i32, i32* %u.i1945, align 4, !dbg !1162
  %shr748.i2712 = lshr i32 %2553, 10, !dbg !1162
  %and749.i2713 = and i32 %shr748.i2712, 63, !dbg !1162
  %idxprom750.i2714 = zext i32 %and749.i2713 to i64, !dbg !1162
  %arrayidx751.i2715 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom750.i2714, !dbg !1162
  %2554 = load i32, i32* %arrayidx751.i2715, align 4, !dbg !1162
  %xor752.i2716 = xor i32 %2552, %2554, !dbg !1162
  %2555 = load i32, i32* %u.i1945, align 4, !dbg !1162
  %shr753.i2717 = lshr i32 %2555, 18, !dbg !1162
  %and754.i2718 = and i32 %shr753.i2717, 63, !dbg !1162
  %idxprom755.i2719 = zext i32 %and754.i2718 to i64, !dbg !1162
  %arrayidx756.i2720 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom755.i2719, !dbg !1162
  %2556 = load i32, i32* %arrayidx756.i2720, align 4, !dbg !1162
  %xor757.i2721 = xor i32 %xor752.i2716, %2556, !dbg !1162
  %2557 = load i32, i32* %u.i1945, align 4, !dbg !1162
  %shr758.i2722 = lshr i32 %2557, 26, !dbg !1162
  %idxprom760.i2723 = zext i32 %shr758.i2722 to i64, !dbg !1162
  %arrayidx761.i2724 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom760.i2723, !dbg !1162
  %2558 = load i32, i32* %arrayidx761.i2724, align 4, !dbg !1162
  %xor762.i2725 = xor i32 %xor757.i2721, %2558, !dbg !1162
  %2559 = load i32, i32* %t.i1944, align 4, !dbg !1162
  %shr763.i2726 = lshr i32 %2559, 2, !dbg !1162
  %and764.i2727 = and i32 %shr763.i2726, 63, !dbg !1162
  %idxprom765.i2728 = zext i32 %and764.i2727 to i64, !dbg !1162
  %arrayidx766.i2729 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom765.i2728, !dbg !1162
  %2560 = load i32, i32* %arrayidx766.i2729, align 4, !dbg !1162
  %xor767.i2730 = xor i32 %xor762.i2725, %2560, !dbg !1162
  %2561 = load i32, i32* %t.i1944, align 4, !dbg !1162
  %shr768.i2731 = lshr i32 %2561, 10, !dbg !1162
  %and769.i2732 = and i32 %shr768.i2731, 63, !dbg !1162
  %idxprom770.i2733 = zext i32 %and769.i2732 to i64, !dbg !1162
  %arrayidx771.i2734 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom770.i2733, !dbg !1162
  %2562 = load i32, i32* %arrayidx771.i2734, align 4, !dbg !1162
  %xor772.i2735 = xor i32 %xor767.i2730, %2562, !dbg !1162
  %2563 = load i32, i32* %t.i1944, align 4, !dbg !1162
  %shr773.i2736 = lshr i32 %2563, 18, !dbg !1162
  %and774.i2737 = and i32 %shr773.i2736, 63, !dbg !1162
  %idxprom775.i2738 = zext i32 %and774.i2737 to i64, !dbg !1162
  %arrayidx776.i2739 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom775.i2738, !dbg !1162
  %2564 = load i32, i32* %arrayidx776.i2739, align 4, !dbg !1162
  %xor777.i2740 = xor i32 %xor772.i2735, %2564, !dbg !1162
  %2565 = load i32, i32* %t.i1944, align 4, !dbg !1162
  %shr778.i2741 = lshr i32 %2565, 26, !dbg !1162
  %idxprom780.i2742 = zext i32 %shr778.i2741 to i64, !dbg !1162
  %arrayidx781.i2743 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom780.i2742, !dbg !1162
  %2566 = load i32, i32* %arrayidx781.i2743, align 4, !dbg !1162
  %xor782.i2744 = xor i32 %xor777.i2740, %2566, !dbg !1162
  %2567 = load i32, i32* %r.i1943, align 4, !dbg !1162
  %xor783.i2745 = xor i32 %2567, %xor782.i2744, !dbg !1162
  store i32 %xor783.i2745, i32* %r.i1943, align 4, !dbg !1162
  br label %DES_encrypt1.exit3466, !dbg !1163

if.else.i3418:                                    ; preds = %for.body227
  %2568 = load i32, i32* %r.i1943, align 4, !dbg !1164
  %2569 = load i32*, i32** %s.i1946, align 8, !dbg !1164
  %arrayidx784.i2747 = getelementptr inbounds i32, i32* %2569, i64 30, !dbg !1164
  %2570 = load i32, i32* %arrayidx784.i2747, align 4, !dbg !1164
  %xor785.i2748 = xor i32 %2568, %2570, !dbg !1164
  store i32 %xor785.i2748, i32* %u.i1945, align 4, !dbg !1164
  %2571 = load i32, i32* %r.i1943, align 4, !dbg !1164
  %2572 = load i32*, i32** %s.i1946, align 8, !dbg !1164
  %arrayidx786.i2749 = getelementptr inbounds i32, i32* %2572, i64 31, !dbg !1164
  %2573 = load i32, i32* %arrayidx786.i2749, align 4, !dbg !1164
  %xor787.i2750 = xor i32 %2571, %2573, !dbg !1164
  store i32 %xor787.i2750, i32* %t.i1944, align 4, !dbg !1164
  %2574 = load i32, i32* %t.i1944, align 4, !dbg !762
  %2575 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2574) #7, !dbg !762, !srcloc !193
  store i32 %2575, i32* %ret788.i1984, align 4, !dbg !762
  %2576 = load i32, i32* %ret788.i1984, align 4, !dbg !762
  store i32 %2576, i32* %tmp789.i1985, align 4, !dbg !762
  %2577 = load i32, i32* %tmp789.i1985, align 4, !dbg !762
  store i32 %2577, i32* %t.i1944, align 4, !dbg !1164
  %2578 = load i32, i32* %u.i1945, align 4, !dbg !1164
  %shr790.i2751 = lshr i32 %2578, 2, !dbg !1164
  %and791.i2752 = and i32 %shr790.i2751, 63, !dbg !1164
  %idxprom792.i2753 = zext i32 %and791.i2752 to i64, !dbg !1164
  %arrayidx793.i2754 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom792.i2753, !dbg !1164
  %2579 = load i32, i32* %arrayidx793.i2754, align 4, !dbg !1164
  %2580 = load i32, i32* %u.i1945, align 4, !dbg !1164
  %shr794.i2755 = lshr i32 %2580, 10, !dbg !1164
  %and795.i2756 = and i32 %shr794.i2755, 63, !dbg !1164
  %idxprom796.i2757 = zext i32 %and795.i2756 to i64, !dbg !1164
  %arrayidx797.i2758 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom796.i2757, !dbg !1164
  %2581 = load i32, i32* %arrayidx797.i2758, align 4, !dbg !1164
  %xor798.i2759 = xor i32 %2579, %2581, !dbg !1164
  %2582 = load i32, i32* %u.i1945, align 4, !dbg !1164
  %shr799.i2760 = lshr i32 %2582, 18, !dbg !1164
  %and800.i2761 = and i32 %shr799.i2760, 63, !dbg !1164
  %idxprom801.i2762 = zext i32 %and800.i2761 to i64, !dbg !1164
  %arrayidx802.i2763 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom801.i2762, !dbg !1164
  %2583 = load i32, i32* %arrayidx802.i2763, align 4, !dbg !1164
  %xor803.i2764 = xor i32 %xor798.i2759, %2583, !dbg !1164
  %2584 = load i32, i32* %u.i1945, align 4, !dbg !1164
  %shr804.i2765 = lshr i32 %2584, 26, !dbg !1164
  %idxprom806.i2766 = zext i32 %shr804.i2765 to i64, !dbg !1164
  %arrayidx807.i2767 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom806.i2766, !dbg !1164
  %2585 = load i32, i32* %arrayidx807.i2767, align 4, !dbg !1164
  %xor808.i2768 = xor i32 %xor803.i2764, %2585, !dbg !1164
  %2586 = load i32, i32* %t.i1944, align 4, !dbg !1164
  %shr809.i2769 = lshr i32 %2586, 2, !dbg !1164
  %and810.i2770 = and i32 %shr809.i2769, 63, !dbg !1164
  %idxprom811.i2771 = zext i32 %and810.i2770 to i64, !dbg !1164
  %arrayidx812.i2772 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom811.i2771, !dbg !1164
  %2587 = load i32, i32* %arrayidx812.i2772, align 4, !dbg !1164
  %xor813.i2773 = xor i32 %xor808.i2768, %2587, !dbg !1164
  %2588 = load i32, i32* %t.i1944, align 4, !dbg !1164
  %shr814.i2774 = lshr i32 %2588, 10, !dbg !1164
  %and815.i2775 = and i32 %shr814.i2774, 63, !dbg !1164
  %idxprom816.i2776 = zext i32 %and815.i2775 to i64, !dbg !1164
  %arrayidx817.i2777 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom816.i2776, !dbg !1164
  %2589 = load i32, i32* %arrayidx817.i2777, align 4, !dbg !1164
  %xor818.i2778 = xor i32 %xor813.i2773, %2589, !dbg !1164
  %2590 = load i32, i32* %t.i1944, align 4, !dbg !1164
  %shr819.i2779 = lshr i32 %2590, 18, !dbg !1164
  %and820.i2780 = and i32 %shr819.i2779, 63, !dbg !1164
  %idxprom821.i2781 = zext i32 %and820.i2780 to i64, !dbg !1164
  %arrayidx822.i2782 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom821.i2781, !dbg !1164
  %2591 = load i32, i32* %arrayidx822.i2782, align 4, !dbg !1164
  %xor823.i2783 = xor i32 %xor818.i2778, %2591, !dbg !1164
  %2592 = load i32, i32* %t.i1944, align 4, !dbg !1164
  %shr824.i2784 = lshr i32 %2592, 26, !dbg !1164
  %idxprom826.i2785 = zext i32 %shr824.i2784 to i64, !dbg !1164
  %arrayidx827.i2786 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom826.i2785, !dbg !1164
  %2593 = load i32, i32* %arrayidx827.i2786, align 4, !dbg !1164
  %xor828.i2787 = xor i32 %xor823.i2783, %2593, !dbg !1164
  %2594 = load i32, i32* %l.i1942, align 4, !dbg !1164
  %xor829.i2788 = xor i32 %2594, %xor828.i2787, !dbg !1164
  store i32 %xor829.i2788, i32* %l.i1942, align 4, !dbg !1164
  %2595 = load i32, i32* %l.i1942, align 4, !dbg !1165
  %2596 = load i32*, i32** %s.i1946, align 8, !dbg !1165
  %arrayidx830.i2789 = getelementptr inbounds i32, i32* %2596, i64 28, !dbg !1165
  %2597 = load i32, i32* %arrayidx830.i2789, align 4, !dbg !1165
  %xor831.i2790 = xor i32 %2595, %2597, !dbg !1165
  store i32 %xor831.i2790, i32* %u.i1945, align 4, !dbg !1165
  %2598 = load i32, i32* %l.i1942, align 4, !dbg !1165
  %2599 = load i32*, i32** %s.i1946, align 8, !dbg !1165
  %arrayidx832.i2791 = getelementptr inbounds i32, i32* %2599, i64 29, !dbg !1165
  %2600 = load i32, i32* %arrayidx832.i2791, align 4, !dbg !1165
  %xor833.i2792 = xor i32 %2598, %2600, !dbg !1165
  store i32 %xor833.i2792, i32* %t.i1944, align 4, !dbg !1165
  %2601 = load i32, i32* %t.i1944, align 4, !dbg !763
  %2602 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2601) #7, !dbg !763, !srcloc !199
  store i32 %2602, i32* %ret834.i1986, align 4, !dbg !763
  %2603 = load i32, i32* %ret834.i1986, align 4, !dbg !763
  store i32 %2603, i32* %tmp835.i1987, align 4, !dbg !763
  %2604 = load i32, i32* %tmp835.i1987, align 4, !dbg !763
  store i32 %2604, i32* %t.i1944, align 4, !dbg !1165
  %2605 = load i32, i32* %u.i1945, align 4, !dbg !1165
  %shr836.i2793 = lshr i32 %2605, 2, !dbg !1165
  %and837.i2794 = and i32 %shr836.i2793, 63, !dbg !1165
  %idxprom838.i2795 = zext i32 %and837.i2794 to i64, !dbg !1165
  %arrayidx839.i2796 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom838.i2795, !dbg !1165
  %2606 = load i32, i32* %arrayidx839.i2796, align 4, !dbg !1165
  %2607 = load i32, i32* %u.i1945, align 4, !dbg !1165
  %shr840.i2797 = lshr i32 %2607, 10, !dbg !1165
  %and841.i2798 = and i32 %shr840.i2797, 63, !dbg !1165
  %idxprom842.i2799 = zext i32 %and841.i2798 to i64, !dbg !1165
  %arrayidx843.i2800 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom842.i2799, !dbg !1165
  %2608 = load i32, i32* %arrayidx843.i2800, align 4, !dbg !1165
  %xor844.i2801 = xor i32 %2606, %2608, !dbg !1165
  %2609 = load i32, i32* %u.i1945, align 4, !dbg !1165
  %shr845.i2802 = lshr i32 %2609, 18, !dbg !1165
  %and846.i2803 = and i32 %shr845.i2802, 63, !dbg !1165
  %idxprom847.i2804 = zext i32 %and846.i2803 to i64, !dbg !1165
  %arrayidx848.i2805 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom847.i2804, !dbg !1165
  %2610 = load i32, i32* %arrayidx848.i2805, align 4, !dbg !1165
  %xor849.i2806 = xor i32 %xor844.i2801, %2610, !dbg !1165
  %2611 = load i32, i32* %u.i1945, align 4, !dbg !1165
  %shr850.i2807 = lshr i32 %2611, 26, !dbg !1165
  %idxprom852.i2808 = zext i32 %shr850.i2807 to i64, !dbg !1165
  %arrayidx853.i2809 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom852.i2808, !dbg !1165
  %2612 = load i32, i32* %arrayidx853.i2809, align 4, !dbg !1165
  %xor854.i2810 = xor i32 %xor849.i2806, %2612, !dbg !1165
  %2613 = load i32, i32* %t.i1944, align 4, !dbg !1165
  %shr855.i2811 = lshr i32 %2613, 2, !dbg !1165
  %and856.i2812 = and i32 %shr855.i2811, 63, !dbg !1165
  %idxprom857.i2813 = zext i32 %and856.i2812 to i64, !dbg !1165
  %arrayidx858.i2814 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom857.i2813, !dbg !1165
  %2614 = load i32, i32* %arrayidx858.i2814, align 4, !dbg !1165
  %xor859.i2815 = xor i32 %xor854.i2810, %2614, !dbg !1165
  %2615 = load i32, i32* %t.i1944, align 4, !dbg !1165
  %shr860.i2816 = lshr i32 %2615, 10, !dbg !1165
  %and861.i2817 = and i32 %shr860.i2816, 63, !dbg !1165
  %idxprom862.i2818 = zext i32 %and861.i2817 to i64, !dbg !1165
  %arrayidx863.i2819 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom862.i2818, !dbg !1165
  %2616 = load i32, i32* %arrayidx863.i2819, align 4, !dbg !1165
  %xor864.i2820 = xor i32 %xor859.i2815, %2616, !dbg !1165
  %2617 = load i32, i32* %t.i1944, align 4, !dbg !1165
  %shr865.i2821 = lshr i32 %2617, 18, !dbg !1165
  %and866.i2822 = and i32 %shr865.i2821, 63, !dbg !1165
  %idxprom867.i2823 = zext i32 %and866.i2822 to i64, !dbg !1165
  %arrayidx868.i2824 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom867.i2823, !dbg !1165
  %2618 = load i32, i32* %arrayidx868.i2824, align 4, !dbg !1165
  %xor869.i2825 = xor i32 %xor864.i2820, %2618, !dbg !1165
  %2619 = load i32, i32* %t.i1944, align 4, !dbg !1165
  %shr870.i2826 = lshr i32 %2619, 26, !dbg !1165
  %idxprom872.i2827 = zext i32 %shr870.i2826 to i64, !dbg !1165
  %arrayidx873.i2828 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom872.i2827, !dbg !1165
  %2620 = load i32, i32* %arrayidx873.i2828, align 4, !dbg !1165
  %xor874.i2829 = xor i32 %xor869.i2825, %2620, !dbg !1165
  %2621 = load i32, i32* %r.i1943, align 4, !dbg !1165
  %xor875.i2830 = xor i32 %2621, %xor874.i2829, !dbg !1165
  store i32 %xor875.i2830, i32* %r.i1943, align 4, !dbg !1165
  %2622 = load i32, i32* %r.i1943, align 4, !dbg !1166
  %2623 = load i32*, i32** %s.i1946, align 8, !dbg !1166
  %arrayidx876.i2831 = getelementptr inbounds i32, i32* %2623, i64 26, !dbg !1166
  %2624 = load i32, i32* %arrayidx876.i2831, align 4, !dbg !1166
  %xor877.i2832 = xor i32 %2622, %2624, !dbg !1166
  store i32 %xor877.i2832, i32* %u.i1945, align 4, !dbg !1166
  %2625 = load i32, i32* %r.i1943, align 4, !dbg !1166
  %2626 = load i32*, i32** %s.i1946, align 8, !dbg !1166
  %arrayidx878.i2833 = getelementptr inbounds i32, i32* %2626, i64 27, !dbg !1166
  %2627 = load i32, i32* %arrayidx878.i2833, align 4, !dbg !1166
  %xor879.i2834 = xor i32 %2625, %2627, !dbg !1166
  store i32 %xor879.i2834, i32* %t.i1944, align 4, !dbg !1166
  %2628 = load i32, i32* %t.i1944, align 4, !dbg !764
  %2629 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2628) #7, !dbg !764, !srcloc !205
  store i32 %2629, i32* %ret880.i1988, align 4, !dbg !764
  %2630 = load i32, i32* %ret880.i1988, align 4, !dbg !764
  store i32 %2630, i32* %tmp881.i1989, align 4, !dbg !764
  %2631 = load i32, i32* %tmp881.i1989, align 4, !dbg !764
  store i32 %2631, i32* %t.i1944, align 4, !dbg !1166
  %2632 = load i32, i32* %u.i1945, align 4, !dbg !1166
  %shr882.i2835 = lshr i32 %2632, 2, !dbg !1166
  %and883.i2836 = and i32 %shr882.i2835, 63, !dbg !1166
  %idxprom884.i2837 = zext i32 %and883.i2836 to i64, !dbg !1166
  %arrayidx885.i2838 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom884.i2837, !dbg !1166
  %2633 = load i32, i32* %arrayidx885.i2838, align 4, !dbg !1166
  %2634 = load i32, i32* %u.i1945, align 4, !dbg !1166
  %shr886.i2839 = lshr i32 %2634, 10, !dbg !1166
  %and887.i2840 = and i32 %shr886.i2839, 63, !dbg !1166
  %idxprom888.i2841 = zext i32 %and887.i2840 to i64, !dbg !1166
  %arrayidx889.i2842 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom888.i2841, !dbg !1166
  %2635 = load i32, i32* %arrayidx889.i2842, align 4, !dbg !1166
  %xor890.i2843 = xor i32 %2633, %2635, !dbg !1166
  %2636 = load i32, i32* %u.i1945, align 4, !dbg !1166
  %shr891.i2844 = lshr i32 %2636, 18, !dbg !1166
  %and892.i2845 = and i32 %shr891.i2844, 63, !dbg !1166
  %idxprom893.i2846 = zext i32 %and892.i2845 to i64, !dbg !1166
  %arrayidx894.i2847 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom893.i2846, !dbg !1166
  %2637 = load i32, i32* %arrayidx894.i2847, align 4, !dbg !1166
  %xor895.i2848 = xor i32 %xor890.i2843, %2637, !dbg !1166
  %2638 = load i32, i32* %u.i1945, align 4, !dbg !1166
  %shr896.i2849 = lshr i32 %2638, 26, !dbg !1166
  %idxprom898.i2850 = zext i32 %shr896.i2849 to i64, !dbg !1166
  %arrayidx899.i2851 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom898.i2850, !dbg !1166
  %2639 = load i32, i32* %arrayidx899.i2851, align 4, !dbg !1166
  %xor900.i2852 = xor i32 %xor895.i2848, %2639, !dbg !1166
  %2640 = load i32, i32* %t.i1944, align 4, !dbg !1166
  %shr901.i2853 = lshr i32 %2640, 2, !dbg !1166
  %and902.i2854 = and i32 %shr901.i2853, 63, !dbg !1166
  %idxprom903.i2855 = zext i32 %and902.i2854 to i64, !dbg !1166
  %arrayidx904.i2856 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom903.i2855, !dbg !1166
  %2641 = load i32, i32* %arrayidx904.i2856, align 4, !dbg !1166
  %xor905.i2857 = xor i32 %xor900.i2852, %2641, !dbg !1166
  %2642 = load i32, i32* %t.i1944, align 4, !dbg !1166
  %shr906.i2858 = lshr i32 %2642, 10, !dbg !1166
  %and907.i2859 = and i32 %shr906.i2858, 63, !dbg !1166
  %idxprom908.i2860 = zext i32 %and907.i2859 to i64, !dbg !1166
  %arrayidx909.i2861 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom908.i2860, !dbg !1166
  %2643 = load i32, i32* %arrayidx909.i2861, align 4, !dbg !1166
  %xor910.i2862 = xor i32 %xor905.i2857, %2643, !dbg !1166
  %2644 = load i32, i32* %t.i1944, align 4, !dbg !1166
  %shr911.i2863 = lshr i32 %2644, 18, !dbg !1166
  %and912.i2864 = and i32 %shr911.i2863, 63, !dbg !1166
  %idxprom913.i2865 = zext i32 %and912.i2864 to i64, !dbg !1166
  %arrayidx914.i2866 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom913.i2865, !dbg !1166
  %2645 = load i32, i32* %arrayidx914.i2866, align 4, !dbg !1166
  %xor915.i2867 = xor i32 %xor910.i2862, %2645, !dbg !1166
  %2646 = load i32, i32* %t.i1944, align 4, !dbg !1166
  %shr916.i2868 = lshr i32 %2646, 26, !dbg !1166
  %idxprom918.i2869 = zext i32 %shr916.i2868 to i64, !dbg !1166
  %arrayidx919.i2870 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom918.i2869, !dbg !1166
  %2647 = load i32, i32* %arrayidx919.i2870, align 4, !dbg !1166
  %xor920.i2871 = xor i32 %xor915.i2867, %2647, !dbg !1166
  %2648 = load i32, i32* %l.i1942, align 4, !dbg !1166
  %xor921.i2872 = xor i32 %2648, %xor920.i2871, !dbg !1166
  store i32 %xor921.i2872, i32* %l.i1942, align 4, !dbg !1166
  %2649 = load i32, i32* %l.i1942, align 4, !dbg !1167
  %2650 = load i32*, i32** %s.i1946, align 8, !dbg !1167
  %arrayidx922.i2873 = getelementptr inbounds i32, i32* %2650, i64 24, !dbg !1167
  %2651 = load i32, i32* %arrayidx922.i2873, align 4, !dbg !1167
  %xor923.i2874 = xor i32 %2649, %2651, !dbg !1167
  store i32 %xor923.i2874, i32* %u.i1945, align 4, !dbg !1167
  %2652 = load i32, i32* %l.i1942, align 4, !dbg !1167
  %2653 = load i32*, i32** %s.i1946, align 8, !dbg !1167
  %arrayidx924.i2875 = getelementptr inbounds i32, i32* %2653, i64 25, !dbg !1167
  %2654 = load i32, i32* %arrayidx924.i2875, align 4, !dbg !1167
  %xor925.i2876 = xor i32 %2652, %2654, !dbg !1167
  store i32 %xor925.i2876, i32* %t.i1944, align 4, !dbg !1167
  %2655 = load i32, i32* %t.i1944, align 4, !dbg !765
  %2656 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2655) #7, !dbg !765, !srcloc !211
  store i32 %2656, i32* %ret926.i1990, align 4, !dbg !765
  %2657 = load i32, i32* %ret926.i1990, align 4, !dbg !765
  store i32 %2657, i32* %tmp927.i1991, align 4, !dbg !765
  %2658 = load i32, i32* %tmp927.i1991, align 4, !dbg !765
  store i32 %2658, i32* %t.i1944, align 4, !dbg !1167
  %2659 = load i32, i32* %u.i1945, align 4, !dbg !1167
  %shr928.i2877 = lshr i32 %2659, 2, !dbg !1167
  %and929.i2878 = and i32 %shr928.i2877, 63, !dbg !1167
  %idxprom930.i2879 = zext i32 %and929.i2878 to i64, !dbg !1167
  %arrayidx931.i2880 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom930.i2879, !dbg !1167
  %2660 = load i32, i32* %arrayidx931.i2880, align 4, !dbg !1167
  %2661 = load i32, i32* %u.i1945, align 4, !dbg !1167
  %shr932.i2881 = lshr i32 %2661, 10, !dbg !1167
  %and933.i2882 = and i32 %shr932.i2881, 63, !dbg !1167
  %idxprom934.i2883 = zext i32 %and933.i2882 to i64, !dbg !1167
  %arrayidx935.i2884 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom934.i2883, !dbg !1167
  %2662 = load i32, i32* %arrayidx935.i2884, align 4, !dbg !1167
  %xor936.i2885 = xor i32 %2660, %2662, !dbg !1167
  %2663 = load i32, i32* %u.i1945, align 4, !dbg !1167
  %shr937.i2886 = lshr i32 %2663, 18, !dbg !1167
  %and938.i2887 = and i32 %shr937.i2886, 63, !dbg !1167
  %idxprom939.i2888 = zext i32 %and938.i2887 to i64, !dbg !1167
  %arrayidx940.i2889 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom939.i2888, !dbg !1167
  %2664 = load i32, i32* %arrayidx940.i2889, align 4, !dbg !1167
  %xor941.i2890 = xor i32 %xor936.i2885, %2664, !dbg !1167
  %2665 = load i32, i32* %u.i1945, align 4, !dbg !1167
  %shr942.i2891 = lshr i32 %2665, 26, !dbg !1167
  %idxprom944.i2892 = zext i32 %shr942.i2891 to i64, !dbg !1167
  %arrayidx945.i2893 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom944.i2892, !dbg !1167
  %2666 = load i32, i32* %arrayidx945.i2893, align 4, !dbg !1167
  %xor946.i2894 = xor i32 %xor941.i2890, %2666, !dbg !1167
  %2667 = load i32, i32* %t.i1944, align 4, !dbg !1167
  %shr947.i2895 = lshr i32 %2667, 2, !dbg !1167
  %and948.i2896 = and i32 %shr947.i2895, 63, !dbg !1167
  %idxprom949.i2897 = zext i32 %and948.i2896 to i64, !dbg !1167
  %arrayidx950.i2898 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom949.i2897, !dbg !1167
  %2668 = load i32, i32* %arrayidx950.i2898, align 4, !dbg !1167
  %xor951.i2899 = xor i32 %xor946.i2894, %2668, !dbg !1167
  %2669 = load i32, i32* %t.i1944, align 4, !dbg !1167
  %shr952.i2900 = lshr i32 %2669, 10, !dbg !1167
  %and953.i2901 = and i32 %shr952.i2900, 63, !dbg !1167
  %idxprom954.i2902 = zext i32 %and953.i2901 to i64, !dbg !1167
  %arrayidx955.i2903 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom954.i2902, !dbg !1167
  %2670 = load i32, i32* %arrayidx955.i2903, align 4, !dbg !1167
  %xor956.i2904 = xor i32 %xor951.i2899, %2670, !dbg !1167
  %2671 = load i32, i32* %t.i1944, align 4, !dbg !1167
  %shr957.i2905 = lshr i32 %2671, 18, !dbg !1167
  %and958.i2906 = and i32 %shr957.i2905, 63, !dbg !1167
  %idxprom959.i2907 = zext i32 %and958.i2906 to i64, !dbg !1167
  %arrayidx960.i2908 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom959.i2907, !dbg !1167
  %2672 = load i32, i32* %arrayidx960.i2908, align 4, !dbg !1167
  %xor961.i2909 = xor i32 %xor956.i2904, %2672, !dbg !1167
  %2673 = load i32, i32* %t.i1944, align 4, !dbg !1167
  %shr962.i2910 = lshr i32 %2673, 26, !dbg !1167
  %idxprom964.i2911 = zext i32 %shr962.i2910 to i64, !dbg !1167
  %arrayidx965.i2912 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom964.i2911, !dbg !1167
  %2674 = load i32, i32* %arrayidx965.i2912, align 4, !dbg !1167
  %xor966.i2913 = xor i32 %xor961.i2909, %2674, !dbg !1167
  %2675 = load i32, i32* %r.i1943, align 4, !dbg !1167
  %xor967.i2914 = xor i32 %2675, %xor966.i2913, !dbg !1167
  store i32 %xor967.i2914, i32* %r.i1943, align 4, !dbg !1167
  %2676 = load i32, i32* %r.i1943, align 4, !dbg !1168
  %2677 = load i32*, i32** %s.i1946, align 8, !dbg !1168
  %arrayidx968.i2915 = getelementptr inbounds i32, i32* %2677, i64 22, !dbg !1168
  %2678 = load i32, i32* %arrayidx968.i2915, align 4, !dbg !1168
  %xor969.i2916 = xor i32 %2676, %2678, !dbg !1168
  store i32 %xor969.i2916, i32* %u.i1945, align 4, !dbg !1168
  %2679 = load i32, i32* %r.i1943, align 4, !dbg !1168
  %2680 = load i32*, i32** %s.i1946, align 8, !dbg !1168
  %arrayidx970.i2917 = getelementptr inbounds i32, i32* %2680, i64 23, !dbg !1168
  %2681 = load i32, i32* %arrayidx970.i2917, align 4, !dbg !1168
  %xor971.i2918 = xor i32 %2679, %2681, !dbg !1168
  store i32 %xor971.i2918, i32* %t.i1944, align 4, !dbg !1168
  %2682 = load i32, i32* %t.i1944, align 4, !dbg !766
  %2683 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2682) #7, !dbg !766, !srcloc !217
  store i32 %2683, i32* %ret972.i1992, align 4, !dbg !766
  %2684 = load i32, i32* %ret972.i1992, align 4, !dbg !766
  store i32 %2684, i32* %tmp973.i1993, align 4, !dbg !766
  %2685 = load i32, i32* %tmp973.i1993, align 4, !dbg !766
  store i32 %2685, i32* %t.i1944, align 4, !dbg !1168
  %2686 = load i32, i32* %u.i1945, align 4, !dbg !1168
  %shr974.i2919 = lshr i32 %2686, 2, !dbg !1168
  %and975.i2920 = and i32 %shr974.i2919, 63, !dbg !1168
  %idxprom976.i2921 = zext i32 %and975.i2920 to i64, !dbg !1168
  %arrayidx977.i2922 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom976.i2921, !dbg !1168
  %2687 = load i32, i32* %arrayidx977.i2922, align 4, !dbg !1168
  %2688 = load i32, i32* %u.i1945, align 4, !dbg !1168
  %shr978.i2923 = lshr i32 %2688, 10, !dbg !1168
  %and979.i2924 = and i32 %shr978.i2923, 63, !dbg !1168
  %idxprom980.i2925 = zext i32 %and979.i2924 to i64, !dbg !1168
  %arrayidx981.i2926 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom980.i2925, !dbg !1168
  %2689 = load i32, i32* %arrayidx981.i2926, align 4, !dbg !1168
  %xor982.i2927 = xor i32 %2687, %2689, !dbg !1168
  %2690 = load i32, i32* %u.i1945, align 4, !dbg !1168
  %shr983.i2928 = lshr i32 %2690, 18, !dbg !1168
  %and984.i2929 = and i32 %shr983.i2928, 63, !dbg !1168
  %idxprom985.i2930 = zext i32 %and984.i2929 to i64, !dbg !1168
  %arrayidx986.i2931 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom985.i2930, !dbg !1168
  %2691 = load i32, i32* %arrayidx986.i2931, align 4, !dbg !1168
  %xor987.i2932 = xor i32 %xor982.i2927, %2691, !dbg !1168
  %2692 = load i32, i32* %u.i1945, align 4, !dbg !1168
  %shr988.i2933 = lshr i32 %2692, 26, !dbg !1168
  %idxprom990.i2934 = zext i32 %shr988.i2933 to i64, !dbg !1168
  %arrayidx991.i2935 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom990.i2934, !dbg !1168
  %2693 = load i32, i32* %arrayidx991.i2935, align 4, !dbg !1168
  %xor992.i2936 = xor i32 %xor987.i2932, %2693, !dbg !1168
  %2694 = load i32, i32* %t.i1944, align 4, !dbg !1168
  %shr993.i2937 = lshr i32 %2694, 2, !dbg !1168
  %and994.i2938 = and i32 %shr993.i2937, 63, !dbg !1168
  %idxprom995.i2939 = zext i32 %and994.i2938 to i64, !dbg !1168
  %arrayidx996.i2940 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom995.i2939, !dbg !1168
  %2695 = load i32, i32* %arrayidx996.i2940, align 4, !dbg !1168
  %xor997.i2941 = xor i32 %xor992.i2936, %2695, !dbg !1168
  %2696 = load i32, i32* %t.i1944, align 4, !dbg !1168
  %shr998.i2942 = lshr i32 %2696, 10, !dbg !1168
  %and999.i2943 = and i32 %shr998.i2942, 63, !dbg !1168
  %idxprom1000.i2944 = zext i32 %and999.i2943 to i64, !dbg !1168
  %arrayidx1001.i2945 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1000.i2944, !dbg !1168
  %2697 = load i32, i32* %arrayidx1001.i2945, align 4, !dbg !1168
  %xor1002.i2946 = xor i32 %xor997.i2941, %2697, !dbg !1168
  %2698 = load i32, i32* %t.i1944, align 4, !dbg !1168
  %shr1003.i2947 = lshr i32 %2698, 18, !dbg !1168
  %and1004.i2948 = and i32 %shr1003.i2947, 63, !dbg !1168
  %idxprom1005.i2949 = zext i32 %and1004.i2948 to i64, !dbg !1168
  %arrayidx1006.i2950 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1005.i2949, !dbg !1168
  %2699 = load i32, i32* %arrayidx1006.i2950, align 4, !dbg !1168
  %xor1007.i2951 = xor i32 %xor1002.i2946, %2699, !dbg !1168
  %2700 = load i32, i32* %t.i1944, align 4, !dbg !1168
  %shr1008.i2952 = lshr i32 %2700, 26, !dbg !1168
  %idxprom1010.i2953 = zext i32 %shr1008.i2952 to i64, !dbg !1168
  %arrayidx1011.i2954 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1010.i2953, !dbg !1168
  %2701 = load i32, i32* %arrayidx1011.i2954, align 4, !dbg !1168
  %xor1012.i2955 = xor i32 %xor1007.i2951, %2701, !dbg !1168
  %2702 = load i32, i32* %l.i1942, align 4, !dbg !1168
  %xor1013.i2956 = xor i32 %2702, %xor1012.i2955, !dbg !1168
  store i32 %xor1013.i2956, i32* %l.i1942, align 4, !dbg !1168
  %2703 = load i32, i32* %l.i1942, align 4, !dbg !1169
  %2704 = load i32*, i32** %s.i1946, align 8, !dbg !1169
  %arrayidx1014.i2957 = getelementptr inbounds i32, i32* %2704, i64 20, !dbg !1169
  %2705 = load i32, i32* %arrayidx1014.i2957, align 4, !dbg !1169
  %xor1015.i2958 = xor i32 %2703, %2705, !dbg !1169
  store i32 %xor1015.i2958, i32* %u.i1945, align 4, !dbg !1169
  %2706 = load i32, i32* %l.i1942, align 4, !dbg !1169
  %2707 = load i32*, i32** %s.i1946, align 8, !dbg !1169
  %arrayidx1016.i2959 = getelementptr inbounds i32, i32* %2707, i64 21, !dbg !1169
  %2708 = load i32, i32* %arrayidx1016.i2959, align 4, !dbg !1169
  %xor1017.i2960 = xor i32 %2706, %2708, !dbg !1169
  store i32 %xor1017.i2960, i32* %t.i1944, align 4, !dbg !1169
  %2709 = load i32, i32* %t.i1944, align 4, !dbg !767
  %2710 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2709) #7, !dbg !767, !srcloc !223
  store i32 %2710, i32* %ret1018.i1994, align 4, !dbg !767
  %2711 = load i32, i32* %ret1018.i1994, align 4, !dbg !767
  store i32 %2711, i32* %tmp1019.i1995, align 4, !dbg !767
  %2712 = load i32, i32* %tmp1019.i1995, align 4, !dbg !767
  store i32 %2712, i32* %t.i1944, align 4, !dbg !1169
  %2713 = load i32, i32* %u.i1945, align 4, !dbg !1169
  %shr1020.i2961 = lshr i32 %2713, 2, !dbg !1169
  %and1021.i2962 = and i32 %shr1020.i2961, 63, !dbg !1169
  %idxprom1022.i2963 = zext i32 %and1021.i2962 to i64, !dbg !1169
  %arrayidx1023.i2964 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1022.i2963, !dbg !1169
  %2714 = load i32, i32* %arrayidx1023.i2964, align 4, !dbg !1169
  %2715 = load i32, i32* %u.i1945, align 4, !dbg !1169
  %shr1024.i2965 = lshr i32 %2715, 10, !dbg !1169
  %and1025.i2966 = and i32 %shr1024.i2965, 63, !dbg !1169
  %idxprom1026.i2967 = zext i32 %and1025.i2966 to i64, !dbg !1169
  %arrayidx1027.i2968 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1026.i2967, !dbg !1169
  %2716 = load i32, i32* %arrayidx1027.i2968, align 4, !dbg !1169
  %xor1028.i2969 = xor i32 %2714, %2716, !dbg !1169
  %2717 = load i32, i32* %u.i1945, align 4, !dbg !1169
  %shr1029.i2970 = lshr i32 %2717, 18, !dbg !1169
  %and1030.i2971 = and i32 %shr1029.i2970, 63, !dbg !1169
  %idxprom1031.i2972 = zext i32 %and1030.i2971 to i64, !dbg !1169
  %arrayidx1032.i2973 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1031.i2972, !dbg !1169
  %2718 = load i32, i32* %arrayidx1032.i2973, align 4, !dbg !1169
  %xor1033.i2974 = xor i32 %xor1028.i2969, %2718, !dbg !1169
  %2719 = load i32, i32* %u.i1945, align 4, !dbg !1169
  %shr1034.i2975 = lshr i32 %2719, 26, !dbg !1169
  %idxprom1036.i2976 = zext i32 %shr1034.i2975 to i64, !dbg !1169
  %arrayidx1037.i2977 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1036.i2976, !dbg !1169
  %2720 = load i32, i32* %arrayidx1037.i2977, align 4, !dbg !1169
  %xor1038.i2978 = xor i32 %xor1033.i2974, %2720, !dbg !1169
  %2721 = load i32, i32* %t.i1944, align 4, !dbg !1169
  %shr1039.i2979 = lshr i32 %2721, 2, !dbg !1169
  %and1040.i2980 = and i32 %shr1039.i2979, 63, !dbg !1169
  %idxprom1041.i2981 = zext i32 %and1040.i2980 to i64, !dbg !1169
  %arrayidx1042.i2982 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1041.i2981, !dbg !1169
  %2722 = load i32, i32* %arrayidx1042.i2982, align 4, !dbg !1169
  %xor1043.i2983 = xor i32 %xor1038.i2978, %2722, !dbg !1169
  %2723 = load i32, i32* %t.i1944, align 4, !dbg !1169
  %shr1044.i2984 = lshr i32 %2723, 10, !dbg !1169
  %and1045.i2985 = and i32 %shr1044.i2984, 63, !dbg !1169
  %idxprom1046.i2986 = zext i32 %and1045.i2985 to i64, !dbg !1169
  %arrayidx1047.i2987 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1046.i2986, !dbg !1169
  %2724 = load i32, i32* %arrayidx1047.i2987, align 4, !dbg !1169
  %xor1048.i2988 = xor i32 %xor1043.i2983, %2724, !dbg !1169
  %2725 = load i32, i32* %t.i1944, align 4, !dbg !1169
  %shr1049.i2989 = lshr i32 %2725, 18, !dbg !1169
  %and1050.i2990 = and i32 %shr1049.i2989, 63, !dbg !1169
  %idxprom1051.i2991 = zext i32 %and1050.i2990 to i64, !dbg !1169
  %arrayidx1052.i2992 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1051.i2991, !dbg !1169
  %2726 = load i32, i32* %arrayidx1052.i2992, align 4, !dbg !1169
  %xor1053.i2993 = xor i32 %xor1048.i2988, %2726, !dbg !1169
  %2727 = load i32, i32* %t.i1944, align 4, !dbg !1169
  %shr1054.i2994 = lshr i32 %2727, 26, !dbg !1169
  %idxprom1056.i2995 = zext i32 %shr1054.i2994 to i64, !dbg !1169
  %arrayidx1057.i2996 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1056.i2995, !dbg !1169
  %2728 = load i32, i32* %arrayidx1057.i2996, align 4, !dbg !1169
  %xor1058.i2997 = xor i32 %xor1053.i2993, %2728, !dbg !1169
  %2729 = load i32, i32* %r.i1943, align 4, !dbg !1169
  %xor1059.i2998 = xor i32 %2729, %xor1058.i2997, !dbg !1169
  store i32 %xor1059.i2998, i32* %r.i1943, align 4, !dbg !1169
  %2730 = load i32, i32* %r.i1943, align 4, !dbg !1170
  %2731 = load i32*, i32** %s.i1946, align 8, !dbg !1170
  %arrayidx1060.i2999 = getelementptr inbounds i32, i32* %2731, i64 18, !dbg !1170
  %2732 = load i32, i32* %arrayidx1060.i2999, align 4, !dbg !1170
  %xor1061.i3000 = xor i32 %2730, %2732, !dbg !1170
  store i32 %xor1061.i3000, i32* %u.i1945, align 4, !dbg !1170
  %2733 = load i32, i32* %r.i1943, align 4, !dbg !1170
  %2734 = load i32*, i32** %s.i1946, align 8, !dbg !1170
  %arrayidx1062.i3001 = getelementptr inbounds i32, i32* %2734, i64 19, !dbg !1170
  %2735 = load i32, i32* %arrayidx1062.i3001, align 4, !dbg !1170
  %xor1063.i3002 = xor i32 %2733, %2735, !dbg !1170
  store i32 %xor1063.i3002, i32* %t.i1944, align 4, !dbg !1170
  %2736 = load i32, i32* %t.i1944, align 4, !dbg !768
  %2737 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2736) #7, !dbg !768, !srcloc !229
  store i32 %2737, i32* %ret1064.i1996, align 4, !dbg !768
  %2738 = load i32, i32* %ret1064.i1996, align 4, !dbg !768
  store i32 %2738, i32* %tmp1065.i1997, align 4, !dbg !768
  %2739 = load i32, i32* %tmp1065.i1997, align 4, !dbg !768
  store i32 %2739, i32* %t.i1944, align 4, !dbg !1170
  %2740 = load i32, i32* %u.i1945, align 4, !dbg !1170
  %shr1066.i3003 = lshr i32 %2740, 2, !dbg !1170
  %and1067.i3004 = and i32 %shr1066.i3003, 63, !dbg !1170
  %idxprom1068.i3005 = zext i32 %and1067.i3004 to i64, !dbg !1170
  %arrayidx1069.i3006 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1068.i3005, !dbg !1170
  %2741 = load i32, i32* %arrayidx1069.i3006, align 4, !dbg !1170
  %2742 = load i32, i32* %u.i1945, align 4, !dbg !1170
  %shr1070.i3007 = lshr i32 %2742, 10, !dbg !1170
  %and1071.i3008 = and i32 %shr1070.i3007, 63, !dbg !1170
  %idxprom1072.i3009 = zext i32 %and1071.i3008 to i64, !dbg !1170
  %arrayidx1073.i3010 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1072.i3009, !dbg !1170
  %2743 = load i32, i32* %arrayidx1073.i3010, align 4, !dbg !1170
  %xor1074.i3011 = xor i32 %2741, %2743, !dbg !1170
  %2744 = load i32, i32* %u.i1945, align 4, !dbg !1170
  %shr1075.i3012 = lshr i32 %2744, 18, !dbg !1170
  %and1076.i3013 = and i32 %shr1075.i3012, 63, !dbg !1170
  %idxprom1077.i3014 = zext i32 %and1076.i3013 to i64, !dbg !1170
  %arrayidx1078.i3015 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1077.i3014, !dbg !1170
  %2745 = load i32, i32* %arrayidx1078.i3015, align 4, !dbg !1170
  %xor1079.i3016 = xor i32 %xor1074.i3011, %2745, !dbg !1170
  %2746 = load i32, i32* %u.i1945, align 4, !dbg !1170
  %shr1080.i3017 = lshr i32 %2746, 26, !dbg !1170
  %idxprom1082.i3018 = zext i32 %shr1080.i3017 to i64, !dbg !1170
  %arrayidx1083.i3019 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1082.i3018, !dbg !1170
  %2747 = load i32, i32* %arrayidx1083.i3019, align 4, !dbg !1170
  %xor1084.i3020 = xor i32 %xor1079.i3016, %2747, !dbg !1170
  %2748 = load i32, i32* %t.i1944, align 4, !dbg !1170
  %shr1085.i3021 = lshr i32 %2748, 2, !dbg !1170
  %and1086.i3022 = and i32 %shr1085.i3021, 63, !dbg !1170
  %idxprom1087.i3023 = zext i32 %and1086.i3022 to i64, !dbg !1170
  %arrayidx1088.i3024 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1087.i3023, !dbg !1170
  %2749 = load i32, i32* %arrayidx1088.i3024, align 4, !dbg !1170
  %xor1089.i3025 = xor i32 %xor1084.i3020, %2749, !dbg !1170
  %2750 = load i32, i32* %t.i1944, align 4, !dbg !1170
  %shr1090.i3026 = lshr i32 %2750, 10, !dbg !1170
  %and1091.i3027 = and i32 %shr1090.i3026, 63, !dbg !1170
  %idxprom1092.i3028 = zext i32 %and1091.i3027 to i64, !dbg !1170
  %arrayidx1093.i3029 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1092.i3028, !dbg !1170
  %2751 = load i32, i32* %arrayidx1093.i3029, align 4, !dbg !1170
  %xor1094.i3030 = xor i32 %xor1089.i3025, %2751, !dbg !1170
  %2752 = load i32, i32* %t.i1944, align 4, !dbg !1170
  %shr1095.i3031 = lshr i32 %2752, 18, !dbg !1170
  %and1096.i3032 = and i32 %shr1095.i3031, 63, !dbg !1170
  %idxprom1097.i3033 = zext i32 %and1096.i3032 to i64, !dbg !1170
  %arrayidx1098.i3034 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1097.i3033, !dbg !1170
  %2753 = load i32, i32* %arrayidx1098.i3034, align 4, !dbg !1170
  %xor1099.i3035 = xor i32 %xor1094.i3030, %2753, !dbg !1170
  %2754 = load i32, i32* %t.i1944, align 4, !dbg !1170
  %shr1100.i3036 = lshr i32 %2754, 26, !dbg !1170
  %idxprom1102.i3037 = zext i32 %shr1100.i3036 to i64, !dbg !1170
  %arrayidx1103.i3038 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1102.i3037, !dbg !1170
  %2755 = load i32, i32* %arrayidx1103.i3038, align 4, !dbg !1170
  %xor1104.i3039 = xor i32 %xor1099.i3035, %2755, !dbg !1170
  %2756 = load i32, i32* %l.i1942, align 4, !dbg !1170
  %xor1105.i3040 = xor i32 %2756, %xor1104.i3039, !dbg !1170
  store i32 %xor1105.i3040, i32* %l.i1942, align 4, !dbg !1170
  %2757 = load i32, i32* %l.i1942, align 4, !dbg !1171
  %2758 = load i32*, i32** %s.i1946, align 8, !dbg !1171
  %arrayidx1106.i3041 = getelementptr inbounds i32, i32* %2758, i64 16, !dbg !1171
  %2759 = load i32, i32* %arrayidx1106.i3041, align 4, !dbg !1171
  %xor1107.i3042 = xor i32 %2757, %2759, !dbg !1171
  store i32 %xor1107.i3042, i32* %u.i1945, align 4, !dbg !1171
  %2760 = load i32, i32* %l.i1942, align 4, !dbg !1171
  %2761 = load i32*, i32** %s.i1946, align 8, !dbg !1171
  %arrayidx1108.i3043 = getelementptr inbounds i32, i32* %2761, i64 17, !dbg !1171
  %2762 = load i32, i32* %arrayidx1108.i3043, align 4, !dbg !1171
  %xor1109.i3044 = xor i32 %2760, %2762, !dbg !1171
  store i32 %xor1109.i3044, i32* %t.i1944, align 4, !dbg !1171
  %2763 = load i32, i32* %t.i1944, align 4, !dbg !769
  %2764 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2763) #7, !dbg !769, !srcloc !235
  store i32 %2764, i32* %ret1110.i1998, align 4, !dbg !769
  %2765 = load i32, i32* %ret1110.i1998, align 4, !dbg !769
  store i32 %2765, i32* %tmp1111.i1999, align 4, !dbg !769
  %2766 = load i32, i32* %tmp1111.i1999, align 4, !dbg !769
  store i32 %2766, i32* %t.i1944, align 4, !dbg !1171
  %2767 = load i32, i32* %u.i1945, align 4, !dbg !1171
  %shr1112.i3045 = lshr i32 %2767, 2, !dbg !1171
  %and1113.i3046 = and i32 %shr1112.i3045, 63, !dbg !1171
  %idxprom1114.i3047 = zext i32 %and1113.i3046 to i64, !dbg !1171
  %arrayidx1115.i3048 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1114.i3047, !dbg !1171
  %2768 = load i32, i32* %arrayidx1115.i3048, align 4, !dbg !1171
  %2769 = load i32, i32* %u.i1945, align 4, !dbg !1171
  %shr1116.i3049 = lshr i32 %2769, 10, !dbg !1171
  %and1117.i3050 = and i32 %shr1116.i3049, 63, !dbg !1171
  %idxprom1118.i3051 = zext i32 %and1117.i3050 to i64, !dbg !1171
  %arrayidx1119.i3052 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1118.i3051, !dbg !1171
  %2770 = load i32, i32* %arrayidx1119.i3052, align 4, !dbg !1171
  %xor1120.i3053 = xor i32 %2768, %2770, !dbg !1171
  %2771 = load i32, i32* %u.i1945, align 4, !dbg !1171
  %shr1121.i3054 = lshr i32 %2771, 18, !dbg !1171
  %and1122.i3055 = and i32 %shr1121.i3054, 63, !dbg !1171
  %idxprom1123.i3056 = zext i32 %and1122.i3055 to i64, !dbg !1171
  %arrayidx1124.i3057 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1123.i3056, !dbg !1171
  %2772 = load i32, i32* %arrayidx1124.i3057, align 4, !dbg !1171
  %xor1125.i3058 = xor i32 %xor1120.i3053, %2772, !dbg !1171
  %2773 = load i32, i32* %u.i1945, align 4, !dbg !1171
  %shr1126.i3059 = lshr i32 %2773, 26, !dbg !1171
  %idxprom1128.i3060 = zext i32 %shr1126.i3059 to i64, !dbg !1171
  %arrayidx1129.i3061 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1128.i3060, !dbg !1171
  %2774 = load i32, i32* %arrayidx1129.i3061, align 4, !dbg !1171
  %xor1130.i3062 = xor i32 %xor1125.i3058, %2774, !dbg !1171
  %2775 = load i32, i32* %t.i1944, align 4, !dbg !1171
  %shr1131.i3063 = lshr i32 %2775, 2, !dbg !1171
  %and1132.i3064 = and i32 %shr1131.i3063, 63, !dbg !1171
  %idxprom1133.i3065 = zext i32 %and1132.i3064 to i64, !dbg !1171
  %arrayidx1134.i3066 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1133.i3065, !dbg !1171
  %2776 = load i32, i32* %arrayidx1134.i3066, align 4, !dbg !1171
  %xor1135.i3067 = xor i32 %xor1130.i3062, %2776, !dbg !1171
  %2777 = load i32, i32* %t.i1944, align 4, !dbg !1171
  %shr1136.i3068 = lshr i32 %2777, 10, !dbg !1171
  %and1137.i3069 = and i32 %shr1136.i3068, 63, !dbg !1171
  %idxprom1138.i3070 = zext i32 %and1137.i3069 to i64, !dbg !1171
  %arrayidx1139.i3071 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1138.i3070, !dbg !1171
  %2778 = load i32, i32* %arrayidx1139.i3071, align 4, !dbg !1171
  %xor1140.i3072 = xor i32 %xor1135.i3067, %2778, !dbg !1171
  %2779 = load i32, i32* %t.i1944, align 4, !dbg !1171
  %shr1141.i3073 = lshr i32 %2779, 18, !dbg !1171
  %and1142.i3074 = and i32 %shr1141.i3073, 63, !dbg !1171
  %idxprom1143.i3075 = zext i32 %and1142.i3074 to i64, !dbg !1171
  %arrayidx1144.i3076 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1143.i3075, !dbg !1171
  %2780 = load i32, i32* %arrayidx1144.i3076, align 4, !dbg !1171
  %xor1145.i3077 = xor i32 %xor1140.i3072, %2780, !dbg !1171
  %2781 = load i32, i32* %t.i1944, align 4, !dbg !1171
  %shr1146.i3078 = lshr i32 %2781, 26, !dbg !1171
  %idxprom1148.i3079 = zext i32 %shr1146.i3078 to i64, !dbg !1171
  %arrayidx1149.i3080 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1148.i3079, !dbg !1171
  %2782 = load i32, i32* %arrayidx1149.i3080, align 4, !dbg !1171
  %xor1150.i3081 = xor i32 %xor1145.i3077, %2782, !dbg !1171
  %2783 = load i32, i32* %r.i1943, align 4, !dbg !1171
  %xor1151.i3082 = xor i32 %2783, %xor1150.i3081, !dbg !1171
  store i32 %xor1151.i3082, i32* %r.i1943, align 4, !dbg !1171
  %2784 = load i32, i32* %r.i1943, align 4, !dbg !1172
  %2785 = load i32*, i32** %s.i1946, align 8, !dbg !1172
  %arrayidx1152.i3083 = getelementptr inbounds i32, i32* %2785, i64 14, !dbg !1172
  %2786 = load i32, i32* %arrayidx1152.i3083, align 4, !dbg !1172
  %xor1153.i3084 = xor i32 %2784, %2786, !dbg !1172
  store i32 %xor1153.i3084, i32* %u.i1945, align 4, !dbg !1172
  %2787 = load i32, i32* %r.i1943, align 4, !dbg !1172
  %2788 = load i32*, i32** %s.i1946, align 8, !dbg !1172
  %arrayidx1154.i3085 = getelementptr inbounds i32, i32* %2788, i64 15, !dbg !1172
  %2789 = load i32, i32* %arrayidx1154.i3085, align 4, !dbg !1172
  %xor1155.i3086 = xor i32 %2787, %2789, !dbg !1172
  store i32 %xor1155.i3086, i32* %t.i1944, align 4, !dbg !1172
  %2790 = load i32, i32* %t.i1944, align 4, !dbg !770
  %2791 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2790) #7, !dbg !770, !srcloc !241
  store i32 %2791, i32* %ret1156.i2000, align 4, !dbg !770
  %2792 = load i32, i32* %ret1156.i2000, align 4, !dbg !770
  store i32 %2792, i32* %tmp1157.i2001, align 4, !dbg !770
  %2793 = load i32, i32* %tmp1157.i2001, align 4, !dbg !770
  store i32 %2793, i32* %t.i1944, align 4, !dbg !1172
  %2794 = load i32, i32* %u.i1945, align 4, !dbg !1172
  %shr1158.i3087 = lshr i32 %2794, 2, !dbg !1172
  %and1159.i3088 = and i32 %shr1158.i3087, 63, !dbg !1172
  %idxprom1160.i3089 = zext i32 %and1159.i3088 to i64, !dbg !1172
  %arrayidx1161.i3090 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1160.i3089, !dbg !1172
  %2795 = load i32, i32* %arrayidx1161.i3090, align 4, !dbg !1172
  %2796 = load i32, i32* %u.i1945, align 4, !dbg !1172
  %shr1162.i3091 = lshr i32 %2796, 10, !dbg !1172
  %and1163.i3092 = and i32 %shr1162.i3091, 63, !dbg !1172
  %idxprom1164.i3093 = zext i32 %and1163.i3092 to i64, !dbg !1172
  %arrayidx1165.i3094 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1164.i3093, !dbg !1172
  %2797 = load i32, i32* %arrayidx1165.i3094, align 4, !dbg !1172
  %xor1166.i3095 = xor i32 %2795, %2797, !dbg !1172
  %2798 = load i32, i32* %u.i1945, align 4, !dbg !1172
  %shr1167.i3096 = lshr i32 %2798, 18, !dbg !1172
  %and1168.i3097 = and i32 %shr1167.i3096, 63, !dbg !1172
  %idxprom1169.i3098 = zext i32 %and1168.i3097 to i64, !dbg !1172
  %arrayidx1170.i3099 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1169.i3098, !dbg !1172
  %2799 = load i32, i32* %arrayidx1170.i3099, align 4, !dbg !1172
  %xor1171.i3100 = xor i32 %xor1166.i3095, %2799, !dbg !1172
  %2800 = load i32, i32* %u.i1945, align 4, !dbg !1172
  %shr1172.i3101 = lshr i32 %2800, 26, !dbg !1172
  %idxprom1174.i3102 = zext i32 %shr1172.i3101 to i64, !dbg !1172
  %arrayidx1175.i3103 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1174.i3102, !dbg !1172
  %2801 = load i32, i32* %arrayidx1175.i3103, align 4, !dbg !1172
  %xor1176.i3104 = xor i32 %xor1171.i3100, %2801, !dbg !1172
  %2802 = load i32, i32* %t.i1944, align 4, !dbg !1172
  %shr1177.i3105 = lshr i32 %2802, 2, !dbg !1172
  %and1178.i3106 = and i32 %shr1177.i3105, 63, !dbg !1172
  %idxprom1179.i3107 = zext i32 %and1178.i3106 to i64, !dbg !1172
  %arrayidx1180.i3108 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1179.i3107, !dbg !1172
  %2803 = load i32, i32* %arrayidx1180.i3108, align 4, !dbg !1172
  %xor1181.i3109 = xor i32 %xor1176.i3104, %2803, !dbg !1172
  %2804 = load i32, i32* %t.i1944, align 4, !dbg !1172
  %shr1182.i3110 = lshr i32 %2804, 10, !dbg !1172
  %and1183.i3111 = and i32 %shr1182.i3110, 63, !dbg !1172
  %idxprom1184.i3112 = zext i32 %and1183.i3111 to i64, !dbg !1172
  %arrayidx1185.i3113 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1184.i3112, !dbg !1172
  %2805 = load i32, i32* %arrayidx1185.i3113, align 4, !dbg !1172
  %xor1186.i3114 = xor i32 %xor1181.i3109, %2805, !dbg !1172
  %2806 = load i32, i32* %t.i1944, align 4, !dbg !1172
  %shr1187.i3115 = lshr i32 %2806, 18, !dbg !1172
  %and1188.i3116 = and i32 %shr1187.i3115, 63, !dbg !1172
  %idxprom1189.i3117 = zext i32 %and1188.i3116 to i64, !dbg !1172
  %arrayidx1190.i3118 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1189.i3117, !dbg !1172
  %2807 = load i32, i32* %arrayidx1190.i3118, align 4, !dbg !1172
  %xor1191.i3119 = xor i32 %xor1186.i3114, %2807, !dbg !1172
  %2808 = load i32, i32* %t.i1944, align 4, !dbg !1172
  %shr1192.i3120 = lshr i32 %2808, 26, !dbg !1172
  %idxprom1194.i3121 = zext i32 %shr1192.i3120 to i64, !dbg !1172
  %arrayidx1195.i3122 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1194.i3121, !dbg !1172
  %2809 = load i32, i32* %arrayidx1195.i3122, align 4, !dbg !1172
  %xor1196.i3123 = xor i32 %xor1191.i3119, %2809, !dbg !1172
  %2810 = load i32, i32* %l.i1942, align 4, !dbg !1172
  %xor1197.i3124 = xor i32 %2810, %xor1196.i3123, !dbg !1172
  store i32 %xor1197.i3124, i32* %l.i1942, align 4, !dbg !1172
  %2811 = load i32, i32* %l.i1942, align 4, !dbg !1173
  %2812 = load i32*, i32** %s.i1946, align 8, !dbg !1173
  %arrayidx1198.i3125 = getelementptr inbounds i32, i32* %2812, i64 12, !dbg !1173
  %2813 = load i32, i32* %arrayidx1198.i3125, align 4, !dbg !1173
  %xor1199.i3126 = xor i32 %2811, %2813, !dbg !1173
  store i32 %xor1199.i3126, i32* %u.i1945, align 4, !dbg !1173
  %2814 = load i32, i32* %l.i1942, align 4, !dbg !1173
  %2815 = load i32*, i32** %s.i1946, align 8, !dbg !1173
  %arrayidx1200.i3127 = getelementptr inbounds i32, i32* %2815, i64 13, !dbg !1173
  %2816 = load i32, i32* %arrayidx1200.i3127, align 4, !dbg !1173
  %xor1201.i3128 = xor i32 %2814, %2816, !dbg !1173
  store i32 %xor1201.i3128, i32* %t.i1944, align 4, !dbg !1173
  %2817 = load i32, i32* %t.i1944, align 4, !dbg !771
  %2818 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2817) #7, !dbg !771, !srcloc !247
  store i32 %2818, i32* %ret1202.i2002, align 4, !dbg !771
  %2819 = load i32, i32* %ret1202.i2002, align 4, !dbg !771
  store i32 %2819, i32* %tmp1203.i2003, align 4, !dbg !771
  %2820 = load i32, i32* %tmp1203.i2003, align 4, !dbg !771
  store i32 %2820, i32* %t.i1944, align 4, !dbg !1173
  %2821 = load i32, i32* %u.i1945, align 4, !dbg !1173
  %shr1204.i3129 = lshr i32 %2821, 2, !dbg !1173
  %and1205.i3130 = and i32 %shr1204.i3129, 63, !dbg !1173
  %idxprom1206.i3131 = zext i32 %and1205.i3130 to i64, !dbg !1173
  %arrayidx1207.i3132 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1206.i3131, !dbg !1173
  %2822 = load i32, i32* %arrayidx1207.i3132, align 4, !dbg !1173
  %2823 = load i32, i32* %u.i1945, align 4, !dbg !1173
  %shr1208.i3133 = lshr i32 %2823, 10, !dbg !1173
  %and1209.i3134 = and i32 %shr1208.i3133, 63, !dbg !1173
  %idxprom1210.i3135 = zext i32 %and1209.i3134 to i64, !dbg !1173
  %arrayidx1211.i3136 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1210.i3135, !dbg !1173
  %2824 = load i32, i32* %arrayidx1211.i3136, align 4, !dbg !1173
  %xor1212.i3137 = xor i32 %2822, %2824, !dbg !1173
  %2825 = load i32, i32* %u.i1945, align 4, !dbg !1173
  %shr1213.i3138 = lshr i32 %2825, 18, !dbg !1173
  %and1214.i3139 = and i32 %shr1213.i3138, 63, !dbg !1173
  %idxprom1215.i3140 = zext i32 %and1214.i3139 to i64, !dbg !1173
  %arrayidx1216.i3141 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1215.i3140, !dbg !1173
  %2826 = load i32, i32* %arrayidx1216.i3141, align 4, !dbg !1173
  %xor1217.i3142 = xor i32 %xor1212.i3137, %2826, !dbg !1173
  %2827 = load i32, i32* %u.i1945, align 4, !dbg !1173
  %shr1218.i3143 = lshr i32 %2827, 26, !dbg !1173
  %idxprom1220.i3144 = zext i32 %shr1218.i3143 to i64, !dbg !1173
  %arrayidx1221.i3145 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1220.i3144, !dbg !1173
  %2828 = load i32, i32* %arrayidx1221.i3145, align 4, !dbg !1173
  %xor1222.i3146 = xor i32 %xor1217.i3142, %2828, !dbg !1173
  %2829 = load i32, i32* %t.i1944, align 4, !dbg !1173
  %shr1223.i3147 = lshr i32 %2829, 2, !dbg !1173
  %and1224.i3148 = and i32 %shr1223.i3147, 63, !dbg !1173
  %idxprom1225.i3149 = zext i32 %and1224.i3148 to i64, !dbg !1173
  %arrayidx1226.i3150 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1225.i3149, !dbg !1173
  %2830 = load i32, i32* %arrayidx1226.i3150, align 4, !dbg !1173
  %xor1227.i3151 = xor i32 %xor1222.i3146, %2830, !dbg !1173
  %2831 = load i32, i32* %t.i1944, align 4, !dbg !1173
  %shr1228.i3152 = lshr i32 %2831, 10, !dbg !1173
  %and1229.i3153 = and i32 %shr1228.i3152, 63, !dbg !1173
  %idxprom1230.i3154 = zext i32 %and1229.i3153 to i64, !dbg !1173
  %arrayidx1231.i3155 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1230.i3154, !dbg !1173
  %2832 = load i32, i32* %arrayidx1231.i3155, align 4, !dbg !1173
  %xor1232.i3156 = xor i32 %xor1227.i3151, %2832, !dbg !1173
  %2833 = load i32, i32* %t.i1944, align 4, !dbg !1173
  %shr1233.i3157 = lshr i32 %2833, 18, !dbg !1173
  %and1234.i3158 = and i32 %shr1233.i3157, 63, !dbg !1173
  %idxprom1235.i3159 = zext i32 %and1234.i3158 to i64, !dbg !1173
  %arrayidx1236.i3160 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1235.i3159, !dbg !1173
  %2834 = load i32, i32* %arrayidx1236.i3160, align 4, !dbg !1173
  %xor1237.i3161 = xor i32 %xor1232.i3156, %2834, !dbg !1173
  %2835 = load i32, i32* %t.i1944, align 4, !dbg !1173
  %shr1238.i3162 = lshr i32 %2835, 26, !dbg !1173
  %idxprom1240.i3163 = zext i32 %shr1238.i3162 to i64, !dbg !1173
  %arrayidx1241.i3164 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1240.i3163, !dbg !1173
  %2836 = load i32, i32* %arrayidx1241.i3164, align 4, !dbg !1173
  %xor1242.i3165 = xor i32 %xor1237.i3161, %2836, !dbg !1173
  %2837 = load i32, i32* %r.i1943, align 4, !dbg !1173
  %xor1243.i3166 = xor i32 %2837, %xor1242.i3165, !dbg !1173
  store i32 %xor1243.i3166, i32* %r.i1943, align 4, !dbg !1173
  %2838 = load i32, i32* %r.i1943, align 4, !dbg !1174
  %2839 = load i32*, i32** %s.i1946, align 8, !dbg !1174
  %arrayidx1244.i3167 = getelementptr inbounds i32, i32* %2839, i64 10, !dbg !1174
  %2840 = load i32, i32* %arrayidx1244.i3167, align 4, !dbg !1174
  %xor1245.i3168 = xor i32 %2838, %2840, !dbg !1174
  store i32 %xor1245.i3168, i32* %u.i1945, align 4, !dbg !1174
  %2841 = load i32, i32* %r.i1943, align 4, !dbg !1174
  %2842 = load i32*, i32** %s.i1946, align 8, !dbg !1174
  %arrayidx1246.i3169 = getelementptr inbounds i32, i32* %2842, i64 11, !dbg !1174
  %2843 = load i32, i32* %arrayidx1246.i3169, align 4, !dbg !1174
  %xor1247.i3170 = xor i32 %2841, %2843, !dbg !1174
  store i32 %xor1247.i3170, i32* %t.i1944, align 4, !dbg !1174
  %2844 = load i32, i32* %t.i1944, align 4, !dbg !772
  %2845 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2844) #7, !dbg !772, !srcloc !253
  store i32 %2845, i32* %ret1248.i2004, align 4, !dbg !772
  %2846 = load i32, i32* %ret1248.i2004, align 4, !dbg !772
  store i32 %2846, i32* %tmp1249.i2005, align 4, !dbg !772
  %2847 = load i32, i32* %tmp1249.i2005, align 4, !dbg !772
  store i32 %2847, i32* %t.i1944, align 4, !dbg !1174
  %2848 = load i32, i32* %u.i1945, align 4, !dbg !1174
  %shr1250.i3171 = lshr i32 %2848, 2, !dbg !1174
  %and1251.i3172 = and i32 %shr1250.i3171, 63, !dbg !1174
  %idxprom1252.i3173 = zext i32 %and1251.i3172 to i64, !dbg !1174
  %arrayidx1253.i3174 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1252.i3173, !dbg !1174
  %2849 = load i32, i32* %arrayidx1253.i3174, align 4, !dbg !1174
  %2850 = load i32, i32* %u.i1945, align 4, !dbg !1174
  %shr1254.i3175 = lshr i32 %2850, 10, !dbg !1174
  %and1255.i3176 = and i32 %shr1254.i3175, 63, !dbg !1174
  %idxprom1256.i3177 = zext i32 %and1255.i3176 to i64, !dbg !1174
  %arrayidx1257.i3178 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1256.i3177, !dbg !1174
  %2851 = load i32, i32* %arrayidx1257.i3178, align 4, !dbg !1174
  %xor1258.i3179 = xor i32 %2849, %2851, !dbg !1174
  %2852 = load i32, i32* %u.i1945, align 4, !dbg !1174
  %shr1259.i3180 = lshr i32 %2852, 18, !dbg !1174
  %and1260.i3181 = and i32 %shr1259.i3180, 63, !dbg !1174
  %idxprom1261.i3182 = zext i32 %and1260.i3181 to i64, !dbg !1174
  %arrayidx1262.i3183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1261.i3182, !dbg !1174
  %2853 = load i32, i32* %arrayidx1262.i3183, align 4, !dbg !1174
  %xor1263.i3184 = xor i32 %xor1258.i3179, %2853, !dbg !1174
  %2854 = load i32, i32* %u.i1945, align 4, !dbg !1174
  %shr1264.i3185 = lshr i32 %2854, 26, !dbg !1174
  %idxprom1266.i3186 = zext i32 %shr1264.i3185 to i64, !dbg !1174
  %arrayidx1267.i3187 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1266.i3186, !dbg !1174
  %2855 = load i32, i32* %arrayidx1267.i3187, align 4, !dbg !1174
  %xor1268.i3188 = xor i32 %xor1263.i3184, %2855, !dbg !1174
  %2856 = load i32, i32* %t.i1944, align 4, !dbg !1174
  %shr1269.i3189 = lshr i32 %2856, 2, !dbg !1174
  %and1270.i3190 = and i32 %shr1269.i3189, 63, !dbg !1174
  %idxprom1271.i3191 = zext i32 %and1270.i3190 to i64, !dbg !1174
  %arrayidx1272.i3192 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1271.i3191, !dbg !1174
  %2857 = load i32, i32* %arrayidx1272.i3192, align 4, !dbg !1174
  %xor1273.i3193 = xor i32 %xor1268.i3188, %2857, !dbg !1174
  %2858 = load i32, i32* %t.i1944, align 4, !dbg !1174
  %shr1274.i3194 = lshr i32 %2858, 10, !dbg !1174
  %and1275.i3195 = and i32 %shr1274.i3194, 63, !dbg !1174
  %idxprom1276.i3196 = zext i32 %and1275.i3195 to i64, !dbg !1174
  %arrayidx1277.i3197 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1276.i3196, !dbg !1174
  %2859 = load i32, i32* %arrayidx1277.i3197, align 4, !dbg !1174
  %xor1278.i3198 = xor i32 %xor1273.i3193, %2859, !dbg !1174
  %2860 = load i32, i32* %t.i1944, align 4, !dbg !1174
  %shr1279.i3199 = lshr i32 %2860, 18, !dbg !1174
  %and1280.i3200 = and i32 %shr1279.i3199, 63, !dbg !1174
  %idxprom1281.i3201 = zext i32 %and1280.i3200 to i64, !dbg !1174
  %arrayidx1282.i3202 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1281.i3201, !dbg !1174
  %2861 = load i32, i32* %arrayidx1282.i3202, align 4, !dbg !1174
  %xor1283.i3203 = xor i32 %xor1278.i3198, %2861, !dbg !1174
  %2862 = load i32, i32* %t.i1944, align 4, !dbg !1174
  %shr1284.i3204 = lshr i32 %2862, 26, !dbg !1174
  %idxprom1286.i3205 = zext i32 %shr1284.i3204 to i64, !dbg !1174
  %arrayidx1287.i3206 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1286.i3205, !dbg !1174
  %2863 = load i32, i32* %arrayidx1287.i3206, align 4, !dbg !1174
  %xor1288.i3207 = xor i32 %xor1283.i3203, %2863, !dbg !1174
  %2864 = load i32, i32* %l.i1942, align 4, !dbg !1174
  %xor1289.i3208 = xor i32 %2864, %xor1288.i3207, !dbg !1174
  store i32 %xor1289.i3208, i32* %l.i1942, align 4, !dbg !1174
  %2865 = load i32, i32* %l.i1942, align 4, !dbg !1175
  %2866 = load i32*, i32** %s.i1946, align 8, !dbg !1175
  %arrayidx1290.i3209 = getelementptr inbounds i32, i32* %2866, i64 8, !dbg !1175
  %2867 = load i32, i32* %arrayidx1290.i3209, align 4, !dbg !1175
  %xor1291.i3210 = xor i32 %2865, %2867, !dbg !1175
  store i32 %xor1291.i3210, i32* %u.i1945, align 4, !dbg !1175
  %2868 = load i32, i32* %l.i1942, align 4, !dbg !1175
  %2869 = load i32*, i32** %s.i1946, align 8, !dbg !1175
  %arrayidx1292.i3211 = getelementptr inbounds i32, i32* %2869, i64 9, !dbg !1175
  %2870 = load i32, i32* %arrayidx1292.i3211, align 4, !dbg !1175
  %xor1293.i3212 = xor i32 %2868, %2870, !dbg !1175
  store i32 %xor1293.i3212, i32* %t.i1944, align 4, !dbg !1175
  %2871 = load i32, i32* %t.i1944, align 4, !dbg !773
  %2872 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2871) #7, !dbg !773, !srcloc !259
  store i32 %2872, i32* %ret1294.i2006, align 4, !dbg !773
  %2873 = load i32, i32* %ret1294.i2006, align 4, !dbg !773
  store i32 %2873, i32* %tmp1295.i2007, align 4, !dbg !773
  %2874 = load i32, i32* %tmp1295.i2007, align 4, !dbg !773
  store i32 %2874, i32* %t.i1944, align 4, !dbg !1175
  %2875 = load i32, i32* %u.i1945, align 4, !dbg !1175
  %shr1296.i3213 = lshr i32 %2875, 2, !dbg !1175
  %and1297.i3214 = and i32 %shr1296.i3213, 63, !dbg !1175
  %idxprom1298.i3215 = zext i32 %and1297.i3214 to i64, !dbg !1175
  %arrayidx1299.i3216 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1298.i3215, !dbg !1175
  %2876 = load i32, i32* %arrayidx1299.i3216, align 4, !dbg !1175
  %2877 = load i32, i32* %u.i1945, align 4, !dbg !1175
  %shr1300.i3217 = lshr i32 %2877, 10, !dbg !1175
  %and1301.i3218 = and i32 %shr1300.i3217, 63, !dbg !1175
  %idxprom1302.i3219 = zext i32 %and1301.i3218 to i64, !dbg !1175
  %arrayidx1303.i3220 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1302.i3219, !dbg !1175
  %2878 = load i32, i32* %arrayidx1303.i3220, align 4, !dbg !1175
  %xor1304.i3221 = xor i32 %2876, %2878, !dbg !1175
  %2879 = load i32, i32* %u.i1945, align 4, !dbg !1175
  %shr1305.i3222 = lshr i32 %2879, 18, !dbg !1175
  %and1306.i3223 = and i32 %shr1305.i3222, 63, !dbg !1175
  %idxprom1307.i3224 = zext i32 %and1306.i3223 to i64, !dbg !1175
  %arrayidx1308.i3225 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1307.i3224, !dbg !1175
  %2880 = load i32, i32* %arrayidx1308.i3225, align 4, !dbg !1175
  %xor1309.i3226 = xor i32 %xor1304.i3221, %2880, !dbg !1175
  %2881 = load i32, i32* %u.i1945, align 4, !dbg !1175
  %shr1310.i3227 = lshr i32 %2881, 26, !dbg !1175
  %idxprom1312.i3228 = zext i32 %shr1310.i3227 to i64, !dbg !1175
  %arrayidx1313.i3229 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1312.i3228, !dbg !1175
  %2882 = load i32, i32* %arrayidx1313.i3229, align 4, !dbg !1175
  %xor1314.i3230 = xor i32 %xor1309.i3226, %2882, !dbg !1175
  %2883 = load i32, i32* %t.i1944, align 4, !dbg !1175
  %shr1315.i3231 = lshr i32 %2883, 2, !dbg !1175
  %and1316.i3232 = and i32 %shr1315.i3231, 63, !dbg !1175
  %idxprom1317.i3233 = zext i32 %and1316.i3232 to i64, !dbg !1175
  %arrayidx1318.i3234 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1317.i3233, !dbg !1175
  %2884 = load i32, i32* %arrayidx1318.i3234, align 4, !dbg !1175
  %xor1319.i3235 = xor i32 %xor1314.i3230, %2884, !dbg !1175
  %2885 = load i32, i32* %t.i1944, align 4, !dbg !1175
  %shr1320.i3236 = lshr i32 %2885, 10, !dbg !1175
  %and1321.i3237 = and i32 %shr1320.i3236, 63, !dbg !1175
  %idxprom1322.i3238 = zext i32 %and1321.i3237 to i64, !dbg !1175
  %arrayidx1323.i3239 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1322.i3238, !dbg !1175
  %2886 = load i32, i32* %arrayidx1323.i3239, align 4, !dbg !1175
  %xor1324.i3240 = xor i32 %xor1319.i3235, %2886, !dbg !1175
  %2887 = load i32, i32* %t.i1944, align 4, !dbg !1175
  %shr1325.i3241 = lshr i32 %2887, 18, !dbg !1175
  %and1326.i3242 = and i32 %shr1325.i3241, 63, !dbg !1175
  %idxprom1327.i3243 = zext i32 %and1326.i3242 to i64, !dbg !1175
  %arrayidx1328.i3244 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1327.i3243, !dbg !1175
  %2888 = load i32, i32* %arrayidx1328.i3244, align 4, !dbg !1175
  %xor1329.i3245 = xor i32 %xor1324.i3240, %2888, !dbg !1175
  %2889 = load i32, i32* %t.i1944, align 4, !dbg !1175
  %shr1330.i3246 = lshr i32 %2889, 26, !dbg !1175
  %idxprom1332.i3247 = zext i32 %shr1330.i3246 to i64, !dbg !1175
  %arrayidx1333.i3248 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1332.i3247, !dbg !1175
  %2890 = load i32, i32* %arrayidx1333.i3248, align 4, !dbg !1175
  %xor1334.i3249 = xor i32 %xor1329.i3245, %2890, !dbg !1175
  %2891 = load i32, i32* %r.i1943, align 4, !dbg !1175
  %xor1335.i3250 = xor i32 %2891, %xor1334.i3249, !dbg !1175
  store i32 %xor1335.i3250, i32* %r.i1943, align 4, !dbg !1175
  %2892 = load i32, i32* %r.i1943, align 4, !dbg !1176
  %2893 = load i32*, i32** %s.i1946, align 8, !dbg !1176
  %arrayidx1336.i3251 = getelementptr inbounds i32, i32* %2893, i64 6, !dbg !1176
  %2894 = load i32, i32* %arrayidx1336.i3251, align 4, !dbg !1176
  %xor1337.i3252 = xor i32 %2892, %2894, !dbg !1176
  store i32 %xor1337.i3252, i32* %u.i1945, align 4, !dbg !1176
  %2895 = load i32, i32* %r.i1943, align 4, !dbg !1176
  %2896 = load i32*, i32** %s.i1946, align 8, !dbg !1176
  %arrayidx1338.i3253 = getelementptr inbounds i32, i32* %2896, i64 7, !dbg !1176
  %2897 = load i32, i32* %arrayidx1338.i3253, align 4, !dbg !1176
  %xor1339.i3254 = xor i32 %2895, %2897, !dbg !1176
  store i32 %xor1339.i3254, i32* %t.i1944, align 4, !dbg !1176
  %2898 = load i32, i32* %t.i1944, align 4, !dbg !774
  %2899 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2898) #7, !dbg !774, !srcloc !265
  store i32 %2899, i32* %ret1340.i2008, align 4, !dbg !774
  %2900 = load i32, i32* %ret1340.i2008, align 4, !dbg !774
  store i32 %2900, i32* %tmp1341.i2009, align 4, !dbg !774
  %2901 = load i32, i32* %tmp1341.i2009, align 4, !dbg !774
  store i32 %2901, i32* %t.i1944, align 4, !dbg !1176
  %2902 = load i32, i32* %u.i1945, align 4, !dbg !1176
  %shr1342.i3255 = lshr i32 %2902, 2, !dbg !1176
  %and1343.i3256 = and i32 %shr1342.i3255, 63, !dbg !1176
  %idxprom1344.i3257 = zext i32 %and1343.i3256 to i64, !dbg !1176
  %arrayidx1345.i3258 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1344.i3257, !dbg !1176
  %2903 = load i32, i32* %arrayidx1345.i3258, align 4, !dbg !1176
  %2904 = load i32, i32* %u.i1945, align 4, !dbg !1176
  %shr1346.i3259 = lshr i32 %2904, 10, !dbg !1176
  %and1347.i3260 = and i32 %shr1346.i3259, 63, !dbg !1176
  %idxprom1348.i3261 = zext i32 %and1347.i3260 to i64, !dbg !1176
  %arrayidx1349.i3262 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1348.i3261, !dbg !1176
  %2905 = load i32, i32* %arrayidx1349.i3262, align 4, !dbg !1176
  %xor1350.i3263 = xor i32 %2903, %2905, !dbg !1176
  %2906 = load i32, i32* %u.i1945, align 4, !dbg !1176
  %shr1351.i3264 = lshr i32 %2906, 18, !dbg !1176
  %and1352.i3265 = and i32 %shr1351.i3264, 63, !dbg !1176
  %idxprom1353.i3266 = zext i32 %and1352.i3265 to i64, !dbg !1176
  %arrayidx1354.i3267 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1353.i3266, !dbg !1176
  %2907 = load i32, i32* %arrayidx1354.i3267, align 4, !dbg !1176
  %xor1355.i3268 = xor i32 %xor1350.i3263, %2907, !dbg !1176
  %2908 = load i32, i32* %u.i1945, align 4, !dbg !1176
  %shr1356.i3269 = lshr i32 %2908, 26, !dbg !1176
  %idxprom1358.i3270 = zext i32 %shr1356.i3269 to i64, !dbg !1176
  %arrayidx1359.i3271 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1358.i3270, !dbg !1176
  %2909 = load i32, i32* %arrayidx1359.i3271, align 4, !dbg !1176
  %xor1360.i3272 = xor i32 %xor1355.i3268, %2909, !dbg !1176
  %2910 = load i32, i32* %t.i1944, align 4, !dbg !1176
  %shr1361.i3273 = lshr i32 %2910, 2, !dbg !1176
  %and1362.i3274 = and i32 %shr1361.i3273, 63, !dbg !1176
  %idxprom1363.i3275 = zext i32 %and1362.i3274 to i64, !dbg !1176
  %arrayidx1364.i3276 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1363.i3275, !dbg !1176
  %2911 = load i32, i32* %arrayidx1364.i3276, align 4, !dbg !1176
  %xor1365.i3277 = xor i32 %xor1360.i3272, %2911, !dbg !1176
  %2912 = load i32, i32* %t.i1944, align 4, !dbg !1176
  %shr1366.i3278 = lshr i32 %2912, 10, !dbg !1176
  %and1367.i3279 = and i32 %shr1366.i3278, 63, !dbg !1176
  %idxprom1368.i3280 = zext i32 %and1367.i3279 to i64, !dbg !1176
  %arrayidx1369.i3281 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1368.i3280, !dbg !1176
  %2913 = load i32, i32* %arrayidx1369.i3281, align 4, !dbg !1176
  %xor1370.i3282 = xor i32 %xor1365.i3277, %2913, !dbg !1176
  %2914 = load i32, i32* %t.i1944, align 4, !dbg !1176
  %shr1371.i3283 = lshr i32 %2914, 18, !dbg !1176
  %and1372.i3284 = and i32 %shr1371.i3283, 63, !dbg !1176
  %idxprom1373.i3285 = zext i32 %and1372.i3284 to i64, !dbg !1176
  %arrayidx1374.i3286 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1373.i3285, !dbg !1176
  %2915 = load i32, i32* %arrayidx1374.i3286, align 4, !dbg !1176
  %xor1375.i3287 = xor i32 %xor1370.i3282, %2915, !dbg !1176
  %2916 = load i32, i32* %t.i1944, align 4, !dbg !1176
  %shr1376.i3288 = lshr i32 %2916, 26, !dbg !1176
  %idxprom1378.i3289 = zext i32 %shr1376.i3288 to i64, !dbg !1176
  %arrayidx1379.i3290 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1378.i3289, !dbg !1176
  %2917 = load i32, i32* %arrayidx1379.i3290, align 4, !dbg !1176
  %xor1380.i3291 = xor i32 %xor1375.i3287, %2917, !dbg !1176
  %2918 = load i32, i32* %l.i1942, align 4, !dbg !1176
  %xor1381.i3292 = xor i32 %2918, %xor1380.i3291, !dbg !1176
  store i32 %xor1381.i3292, i32* %l.i1942, align 4, !dbg !1176
  %2919 = load i32, i32* %l.i1942, align 4, !dbg !1177
  %2920 = load i32*, i32** %s.i1946, align 8, !dbg !1177
  %arrayidx1382.i3293 = getelementptr inbounds i32, i32* %2920, i64 4, !dbg !1177
  %2921 = load i32, i32* %arrayidx1382.i3293, align 4, !dbg !1177
  %xor1383.i3294 = xor i32 %2919, %2921, !dbg !1177
  store i32 %xor1383.i3294, i32* %u.i1945, align 4, !dbg !1177
  %2922 = load i32, i32* %l.i1942, align 4, !dbg !1177
  %2923 = load i32*, i32** %s.i1946, align 8, !dbg !1177
  %arrayidx1384.i3295 = getelementptr inbounds i32, i32* %2923, i64 5, !dbg !1177
  %2924 = load i32, i32* %arrayidx1384.i3295, align 4, !dbg !1177
  %xor1385.i3296 = xor i32 %2922, %2924, !dbg !1177
  store i32 %xor1385.i3296, i32* %t.i1944, align 4, !dbg !1177
  %2925 = load i32, i32* %t.i1944, align 4, !dbg !775
  %2926 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2925) #7, !dbg !775, !srcloc !271
  store i32 %2926, i32* %ret1386.i2010, align 4, !dbg !775
  %2927 = load i32, i32* %ret1386.i2010, align 4, !dbg !775
  store i32 %2927, i32* %tmp1387.i2011, align 4, !dbg !775
  %2928 = load i32, i32* %tmp1387.i2011, align 4, !dbg !775
  store i32 %2928, i32* %t.i1944, align 4, !dbg !1177
  %2929 = load i32, i32* %u.i1945, align 4, !dbg !1177
  %shr1388.i3297 = lshr i32 %2929, 2, !dbg !1177
  %and1389.i3298 = and i32 %shr1388.i3297, 63, !dbg !1177
  %idxprom1390.i3299 = zext i32 %and1389.i3298 to i64, !dbg !1177
  %arrayidx1391.i3300 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1390.i3299, !dbg !1177
  %2930 = load i32, i32* %arrayidx1391.i3300, align 4, !dbg !1177
  %2931 = load i32, i32* %u.i1945, align 4, !dbg !1177
  %shr1392.i3301 = lshr i32 %2931, 10, !dbg !1177
  %and1393.i3302 = and i32 %shr1392.i3301, 63, !dbg !1177
  %idxprom1394.i3303 = zext i32 %and1393.i3302 to i64, !dbg !1177
  %arrayidx1395.i3304 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1394.i3303, !dbg !1177
  %2932 = load i32, i32* %arrayidx1395.i3304, align 4, !dbg !1177
  %xor1396.i3305 = xor i32 %2930, %2932, !dbg !1177
  %2933 = load i32, i32* %u.i1945, align 4, !dbg !1177
  %shr1397.i3306 = lshr i32 %2933, 18, !dbg !1177
  %and1398.i3307 = and i32 %shr1397.i3306, 63, !dbg !1177
  %idxprom1399.i3308 = zext i32 %and1398.i3307 to i64, !dbg !1177
  %arrayidx1400.i3309 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1399.i3308, !dbg !1177
  %2934 = load i32, i32* %arrayidx1400.i3309, align 4, !dbg !1177
  %xor1401.i3310 = xor i32 %xor1396.i3305, %2934, !dbg !1177
  %2935 = load i32, i32* %u.i1945, align 4, !dbg !1177
  %shr1402.i3311 = lshr i32 %2935, 26, !dbg !1177
  %idxprom1404.i3312 = zext i32 %shr1402.i3311 to i64, !dbg !1177
  %arrayidx1405.i3313 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1404.i3312, !dbg !1177
  %2936 = load i32, i32* %arrayidx1405.i3313, align 4, !dbg !1177
  %xor1406.i3314 = xor i32 %xor1401.i3310, %2936, !dbg !1177
  %2937 = load i32, i32* %t.i1944, align 4, !dbg !1177
  %shr1407.i3315 = lshr i32 %2937, 2, !dbg !1177
  %and1408.i3316 = and i32 %shr1407.i3315, 63, !dbg !1177
  %idxprom1409.i3317 = zext i32 %and1408.i3316 to i64, !dbg !1177
  %arrayidx1410.i3318 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1409.i3317, !dbg !1177
  %2938 = load i32, i32* %arrayidx1410.i3318, align 4, !dbg !1177
  %xor1411.i3319 = xor i32 %xor1406.i3314, %2938, !dbg !1177
  %2939 = load i32, i32* %t.i1944, align 4, !dbg !1177
  %shr1412.i3320 = lshr i32 %2939, 10, !dbg !1177
  %and1413.i3321 = and i32 %shr1412.i3320, 63, !dbg !1177
  %idxprom1414.i3322 = zext i32 %and1413.i3321 to i64, !dbg !1177
  %arrayidx1415.i3323 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1414.i3322, !dbg !1177
  %2940 = load i32, i32* %arrayidx1415.i3323, align 4, !dbg !1177
  %xor1416.i3324 = xor i32 %xor1411.i3319, %2940, !dbg !1177
  %2941 = load i32, i32* %t.i1944, align 4, !dbg !1177
  %shr1417.i3325 = lshr i32 %2941, 18, !dbg !1177
  %and1418.i3326 = and i32 %shr1417.i3325, 63, !dbg !1177
  %idxprom1419.i3327 = zext i32 %and1418.i3326 to i64, !dbg !1177
  %arrayidx1420.i3328 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1419.i3327, !dbg !1177
  %2942 = load i32, i32* %arrayidx1420.i3328, align 4, !dbg !1177
  %xor1421.i3329 = xor i32 %xor1416.i3324, %2942, !dbg !1177
  %2943 = load i32, i32* %t.i1944, align 4, !dbg !1177
  %shr1422.i3330 = lshr i32 %2943, 26, !dbg !1177
  %idxprom1424.i3331 = zext i32 %shr1422.i3330 to i64, !dbg !1177
  %arrayidx1425.i3332 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1424.i3331, !dbg !1177
  %2944 = load i32, i32* %arrayidx1425.i3332, align 4, !dbg !1177
  %xor1426.i3333 = xor i32 %xor1421.i3329, %2944, !dbg !1177
  %2945 = load i32, i32* %r.i1943, align 4, !dbg !1177
  %xor1427.i3334 = xor i32 %2945, %xor1426.i3333, !dbg !1177
  store i32 %xor1427.i3334, i32* %r.i1943, align 4, !dbg !1177
  %2946 = load i32, i32* %r.i1943, align 4, !dbg !1178
  %2947 = load i32*, i32** %s.i1946, align 8, !dbg !1178
  %arrayidx1428.i3335 = getelementptr inbounds i32, i32* %2947, i64 2, !dbg !1178
  %2948 = load i32, i32* %arrayidx1428.i3335, align 4, !dbg !1178
  %xor1429.i3336 = xor i32 %2946, %2948, !dbg !1178
  store i32 %xor1429.i3336, i32* %u.i1945, align 4, !dbg !1178
  %2949 = load i32, i32* %r.i1943, align 4, !dbg !1178
  %2950 = load i32*, i32** %s.i1946, align 8, !dbg !1178
  %arrayidx1430.i3337 = getelementptr inbounds i32, i32* %2950, i64 3, !dbg !1178
  %2951 = load i32, i32* %arrayidx1430.i3337, align 4, !dbg !1178
  %xor1431.i3338 = xor i32 %2949, %2951, !dbg !1178
  store i32 %xor1431.i3338, i32* %t.i1944, align 4, !dbg !1178
  %2952 = load i32, i32* %t.i1944, align 4, !dbg !776
  %2953 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2952) #7, !dbg !776, !srcloc !277
  store i32 %2953, i32* %ret1432.i2012, align 4, !dbg !776
  %2954 = load i32, i32* %ret1432.i2012, align 4, !dbg !776
  store i32 %2954, i32* %tmp1433.i2013, align 4, !dbg !776
  %2955 = load i32, i32* %tmp1433.i2013, align 4, !dbg !776
  store i32 %2955, i32* %t.i1944, align 4, !dbg !1178
  %2956 = load i32, i32* %u.i1945, align 4, !dbg !1178
  %shr1434.i3339 = lshr i32 %2956, 2, !dbg !1178
  %and1435.i3340 = and i32 %shr1434.i3339, 63, !dbg !1178
  %idxprom1436.i3341 = zext i32 %and1435.i3340 to i64, !dbg !1178
  %arrayidx1437.i3342 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1436.i3341, !dbg !1178
  %2957 = load i32, i32* %arrayidx1437.i3342, align 4, !dbg !1178
  %2958 = load i32, i32* %u.i1945, align 4, !dbg !1178
  %shr1438.i3343 = lshr i32 %2958, 10, !dbg !1178
  %and1439.i3344 = and i32 %shr1438.i3343, 63, !dbg !1178
  %idxprom1440.i3345 = zext i32 %and1439.i3344 to i64, !dbg !1178
  %arrayidx1441.i3346 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1440.i3345, !dbg !1178
  %2959 = load i32, i32* %arrayidx1441.i3346, align 4, !dbg !1178
  %xor1442.i3347 = xor i32 %2957, %2959, !dbg !1178
  %2960 = load i32, i32* %u.i1945, align 4, !dbg !1178
  %shr1443.i3348 = lshr i32 %2960, 18, !dbg !1178
  %and1444.i3349 = and i32 %shr1443.i3348, 63, !dbg !1178
  %idxprom1445.i3350 = zext i32 %and1444.i3349 to i64, !dbg !1178
  %arrayidx1446.i3351 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1445.i3350, !dbg !1178
  %2961 = load i32, i32* %arrayidx1446.i3351, align 4, !dbg !1178
  %xor1447.i3352 = xor i32 %xor1442.i3347, %2961, !dbg !1178
  %2962 = load i32, i32* %u.i1945, align 4, !dbg !1178
  %shr1448.i3353 = lshr i32 %2962, 26, !dbg !1178
  %idxprom1450.i3354 = zext i32 %shr1448.i3353 to i64, !dbg !1178
  %arrayidx1451.i3355 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1450.i3354, !dbg !1178
  %2963 = load i32, i32* %arrayidx1451.i3355, align 4, !dbg !1178
  %xor1452.i3356 = xor i32 %xor1447.i3352, %2963, !dbg !1178
  %2964 = load i32, i32* %t.i1944, align 4, !dbg !1178
  %shr1453.i3357 = lshr i32 %2964, 2, !dbg !1178
  %and1454.i3358 = and i32 %shr1453.i3357, 63, !dbg !1178
  %idxprom1455.i3359 = zext i32 %and1454.i3358 to i64, !dbg !1178
  %arrayidx1456.i3360 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1455.i3359, !dbg !1178
  %2965 = load i32, i32* %arrayidx1456.i3360, align 4, !dbg !1178
  %xor1457.i3361 = xor i32 %xor1452.i3356, %2965, !dbg !1178
  %2966 = load i32, i32* %t.i1944, align 4, !dbg !1178
  %shr1458.i3362 = lshr i32 %2966, 10, !dbg !1178
  %and1459.i3363 = and i32 %shr1458.i3362, 63, !dbg !1178
  %idxprom1460.i3364 = zext i32 %and1459.i3363 to i64, !dbg !1178
  %arrayidx1461.i3365 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1460.i3364, !dbg !1178
  %2967 = load i32, i32* %arrayidx1461.i3365, align 4, !dbg !1178
  %xor1462.i3366 = xor i32 %xor1457.i3361, %2967, !dbg !1178
  %2968 = load i32, i32* %t.i1944, align 4, !dbg !1178
  %shr1463.i3367 = lshr i32 %2968, 18, !dbg !1178
  %and1464.i3368 = and i32 %shr1463.i3367, 63, !dbg !1178
  %idxprom1465.i3369 = zext i32 %and1464.i3368 to i64, !dbg !1178
  %arrayidx1466.i3370 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1465.i3369, !dbg !1178
  %2969 = load i32, i32* %arrayidx1466.i3370, align 4, !dbg !1178
  %xor1467.i3371 = xor i32 %xor1462.i3366, %2969, !dbg !1178
  %2970 = load i32, i32* %t.i1944, align 4, !dbg !1178
  %shr1468.i3372 = lshr i32 %2970, 26, !dbg !1178
  %idxprom1470.i3373 = zext i32 %shr1468.i3372 to i64, !dbg !1178
  %arrayidx1471.i3374 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1470.i3373, !dbg !1178
  %2971 = load i32, i32* %arrayidx1471.i3374, align 4, !dbg !1178
  %xor1472.i3375 = xor i32 %xor1467.i3371, %2971, !dbg !1178
  %2972 = load i32, i32* %l.i1942, align 4, !dbg !1178
  %xor1473.i3376 = xor i32 %2972, %xor1472.i3375, !dbg !1178
  store i32 %xor1473.i3376, i32* %l.i1942, align 4, !dbg !1178
  %2973 = load i32, i32* %l.i1942, align 4, !dbg !1179
  %2974 = load i32*, i32** %s.i1946, align 8, !dbg !1179
  %2975 = load i32, i32* %2974, align 4, !dbg !1179
  %xor1475.i3377 = xor i32 %2973, %2975, !dbg !1179
  store i32 %xor1475.i3377, i32* %u.i1945, align 4, !dbg !1179
  %2976 = load i32, i32* %l.i1942, align 4, !dbg !1179
  %2977 = load i32*, i32** %s.i1946, align 8, !dbg !1179
  %arrayidx1476.i3378 = getelementptr inbounds i32, i32* %2977, i64 1, !dbg !1179
  %2978 = load i32, i32* %arrayidx1476.i3378, align 4, !dbg !1179
  %xor1477.i3379 = xor i32 %2976, %2978, !dbg !1179
  store i32 %xor1477.i3379, i32* %t.i1944, align 4, !dbg !1179
  %2979 = load i32, i32* %t.i1944, align 4, !dbg !777
  %2980 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2979) #7, !dbg !777, !srcloc !283
  store i32 %2980, i32* %ret1478.i2014, align 4, !dbg !777
  %2981 = load i32, i32* %ret1478.i2014, align 4, !dbg !777
  store i32 %2981, i32* %tmp1479.i2015, align 4, !dbg !777
  %2982 = load i32, i32* %tmp1479.i2015, align 4, !dbg !777
  store i32 %2982, i32* %t.i1944, align 4, !dbg !1179
  %2983 = load i32, i32* %u.i1945, align 4, !dbg !1179
  %shr1480.i3380 = lshr i32 %2983, 2, !dbg !1179
  %and1481.i3381 = and i32 %shr1480.i3380, 63, !dbg !1179
  %idxprom1482.i3382 = zext i32 %and1481.i3381 to i64, !dbg !1179
  %arrayidx1483.i3383 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1482.i3382, !dbg !1179
  %2984 = load i32, i32* %arrayidx1483.i3383, align 4, !dbg !1179
  %2985 = load i32, i32* %u.i1945, align 4, !dbg !1179
  %shr1484.i3384 = lshr i32 %2985, 10, !dbg !1179
  %and1485.i3385 = and i32 %shr1484.i3384, 63, !dbg !1179
  %idxprom1486.i3386 = zext i32 %and1485.i3385 to i64, !dbg !1179
  %arrayidx1487.i3387 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1486.i3386, !dbg !1179
  %2986 = load i32, i32* %arrayidx1487.i3387, align 4, !dbg !1179
  %xor1488.i3388 = xor i32 %2984, %2986, !dbg !1179
  %2987 = load i32, i32* %u.i1945, align 4, !dbg !1179
  %shr1489.i3389 = lshr i32 %2987, 18, !dbg !1179
  %and1490.i3390 = and i32 %shr1489.i3389, 63, !dbg !1179
  %idxprom1491.i3391 = zext i32 %and1490.i3390 to i64, !dbg !1179
  %arrayidx1492.i3392 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1491.i3391, !dbg !1179
  %2988 = load i32, i32* %arrayidx1492.i3392, align 4, !dbg !1179
  %xor1493.i3393 = xor i32 %xor1488.i3388, %2988, !dbg !1179
  %2989 = load i32, i32* %u.i1945, align 4, !dbg !1179
  %shr1494.i3394 = lshr i32 %2989, 26, !dbg !1179
  %idxprom1496.i3395 = zext i32 %shr1494.i3394 to i64, !dbg !1179
  %arrayidx1497.i3396 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1496.i3395, !dbg !1179
  %2990 = load i32, i32* %arrayidx1497.i3396, align 4, !dbg !1179
  %xor1498.i3397 = xor i32 %xor1493.i3393, %2990, !dbg !1179
  %2991 = load i32, i32* %t.i1944, align 4, !dbg !1179
  %shr1499.i3398 = lshr i32 %2991, 2, !dbg !1179
  %and1500.i3399 = and i32 %shr1499.i3398, 63, !dbg !1179
  %idxprom1501.i3400 = zext i32 %and1500.i3399 to i64, !dbg !1179
  %arrayidx1502.i3401 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1501.i3400, !dbg !1179
  %2992 = load i32, i32* %arrayidx1502.i3401, align 4, !dbg !1179
  %xor1503.i3402 = xor i32 %xor1498.i3397, %2992, !dbg !1179
  %2993 = load i32, i32* %t.i1944, align 4, !dbg !1179
  %shr1504.i3403 = lshr i32 %2993, 10, !dbg !1179
  %and1505.i3404 = and i32 %shr1504.i3403, 63, !dbg !1179
  %idxprom1506.i3405 = zext i32 %and1505.i3404 to i64, !dbg !1179
  %arrayidx1507.i3406 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1506.i3405, !dbg !1179
  %2994 = load i32, i32* %arrayidx1507.i3406, align 4, !dbg !1179
  %xor1508.i3407 = xor i32 %xor1503.i3402, %2994, !dbg !1179
  %2995 = load i32, i32* %t.i1944, align 4, !dbg !1179
  %shr1509.i3408 = lshr i32 %2995, 18, !dbg !1179
  %and1510.i3409 = and i32 %shr1509.i3408, 63, !dbg !1179
  %idxprom1511.i3410 = zext i32 %and1510.i3409 to i64, !dbg !1179
  %arrayidx1512.i3411 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1511.i3410, !dbg !1179
  %2996 = load i32, i32* %arrayidx1512.i3411, align 4, !dbg !1179
  %xor1513.i3412 = xor i32 %xor1508.i3407, %2996, !dbg !1179
  %2997 = load i32, i32* %t.i1944, align 4, !dbg !1179
  %shr1514.i3413 = lshr i32 %2997, 26, !dbg !1179
  %idxprom1516.i3414 = zext i32 %shr1514.i3413 to i64, !dbg !1179
  %arrayidx1517.i3415 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1516.i3414, !dbg !1179
  %2998 = load i32, i32* %arrayidx1517.i3415, align 4, !dbg !1179
  %xor1518.i3416 = xor i32 %xor1513.i3412, %2998, !dbg !1179
  %2999 = load i32, i32* %r.i1943, align 4, !dbg !1179
  %xor1519.i3417 = xor i32 %2999, %xor1518.i3416, !dbg !1179
  store i32 %xor1519.i3417, i32* %r.i1943, align 4, !dbg !1179
  br label %DES_encrypt1.exit3466

DES_encrypt1.exit3466:                            ; preds = %if.then.i2746, %if.else.i3418
  %3000 = load i32, i32* %l.i1942, align 4, !dbg !778
  %3001 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %3000) #7, !dbg !778, !srcloc !287
  store i32 %3001, i32* %ret1520.i2016, align 4, !dbg !778
  %3002 = load i32, i32* %ret1520.i2016, align 4, !dbg !778
  store i32 %3002, i32* %tmp1521.i2017, align 4, !dbg !778
  %3003 = load i32, i32* %tmp1521.i2017, align 4, !dbg !778
  %conv1522.i3419 = zext i32 %3003 to i64, !dbg !1180
  %and1523.i3420 = and i64 %conv1522.i3419, 4294967295, !dbg !1181
  %conv1524.i3421 = trunc i64 %and1523.i3420 to i32, !dbg !1180
  store i32 %conv1524.i3421, i32* %l.i1942, align 4, !dbg !1182
  %3004 = load i32, i32* %r.i1943, align 4, !dbg !779
  %3005 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %3004) #7, !dbg !779, !srcloc !294
  store i32 %3005, i32* %ret1525.i2018, align 4, !dbg !779
  %3006 = load i32, i32* %ret1525.i2018, align 4, !dbg !779
  store i32 %3006, i32* %tmp1526.i2019, align 4, !dbg !779
  %3007 = load i32, i32* %tmp1526.i2019, align 4, !dbg !779
  %conv1527.i3422 = zext i32 %3007 to i64, !dbg !1183
  %and1528.i3423 = and i64 %conv1527.i3422, 4294967295, !dbg !1184
  %conv1529.i3424 = trunc i64 %and1528.i3423 to i32, !dbg !1183
  store i32 %conv1529.i3424, i32* %r.i1943, align 4, !dbg !1185
  %3008 = load i32, i32* %r.i1943, align 4, !dbg !780
  %shr1531.i3425 = lshr i32 %3008, 1, !dbg !780
  %3009 = load i32, i32* %l.i1942, align 4, !dbg !780
  %xor1532.i3426 = xor i32 %shr1531.i3425, %3009, !dbg !780
  %conv1533.i3427 = zext i32 %xor1532.i3426 to i64, !dbg !780
  %and1534.i3428 = and i64 %conv1533.i3427, 1431655765, !dbg !780
  %conv1535.i3429 = trunc i64 %and1534.i3428 to i32, !dbg !780
  store i32 %conv1535.i3429, i32* %tt1530.i2020, align 4, !dbg !780
  %3010 = load i32, i32* %tt1530.i2020, align 4, !dbg !780
  %3011 = load i32, i32* %l.i1942, align 4, !dbg !780
  %xor1536.i3430 = xor i32 %3011, %3010, !dbg !780
  store i32 %xor1536.i3430, i32* %l.i1942, align 4, !dbg !780
  %3012 = load i32, i32* %tt1530.i2020, align 4, !dbg !780
  %shl1537.i3431 = shl i32 %3012, 1, !dbg !780
  %3013 = load i32, i32* %r.i1943, align 4, !dbg !780
  %xor1538.i3432 = xor i32 %3013, %shl1537.i3431, !dbg !780
  store i32 %xor1538.i3432, i32* %r.i1943, align 4, !dbg !780
  %3014 = load i32, i32* %l.i1942, align 4, !dbg !780
  %shr1539.i3433 = lshr i32 %3014, 8, !dbg !780
  %3015 = load i32, i32* %r.i1943, align 4, !dbg !780
  %xor1540.i3434 = xor i32 %shr1539.i3433, %3015, !dbg !780
  %conv1541.i3435 = zext i32 %xor1540.i3434 to i64, !dbg !780
  %and1542.i3436 = and i64 %conv1541.i3435, 16711935, !dbg !780
  %conv1543.i3437 = trunc i64 %and1542.i3436 to i32, !dbg !780
  store i32 %conv1543.i3437, i32* %tt1530.i2020, align 4, !dbg !780
  %3016 = load i32, i32* %tt1530.i2020, align 4, !dbg !780
  %3017 = load i32, i32* %r.i1943, align 4, !dbg !780
  %xor1544.i3438 = xor i32 %3017, %3016, !dbg !780
  store i32 %xor1544.i3438, i32* %r.i1943, align 4, !dbg !780
  %3018 = load i32, i32* %tt1530.i2020, align 4, !dbg !780
  %shl1545.i3439 = shl i32 %3018, 8, !dbg !780
  %3019 = load i32, i32* %l.i1942, align 4, !dbg !780
  %xor1546.i3440 = xor i32 %3019, %shl1545.i3439, !dbg !780
  store i32 %xor1546.i3440, i32* %l.i1942, align 4, !dbg !780
  %3020 = load i32, i32* %r.i1943, align 4, !dbg !780
  %shr1547.i3441 = lshr i32 %3020, 2, !dbg !780
  %3021 = load i32, i32* %l.i1942, align 4, !dbg !780
  %xor1548.i3442 = xor i32 %shr1547.i3441, %3021, !dbg !780
  %conv1549.i3443 = zext i32 %xor1548.i3442 to i64, !dbg !780
  %and1550.i3444 = and i64 %conv1549.i3443, 858993459, !dbg !780
  %conv1551.i3445 = trunc i64 %and1550.i3444 to i32, !dbg !780
  store i32 %conv1551.i3445, i32* %tt1530.i2020, align 4, !dbg !780
  %3022 = load i32, i32* %tt1530.i2020, align 4, !dbg !780
  %3023 = load i32, i32* %l.i1942, align 4, !dbg !780
  %xor1552.i3446 = xor i32 %3023, %3022, !dbg !780
  store i32 %xor1552.i3446, i32* %l.i1942, align 4, !dbg !780
  %3024 = load i32, i32* %tt1530.i2020, align 4, !dbg !780
  %shl1553.i3447 = shl i32 %3024, 2, !dbg !780
  %3025 = load i32, i32* %r.i1943, align 4, !dbg !780
  %xor1554.i3448 = xor i32 %3025, %shl1553.i3447, !dbg !780
  store i32 %xor1554.i3448, i32* %r.i1943, align 4, !dbg !780
  %3026 = load i32, i32* %l.i1942, align 4, !dbg !780
  %shr1555.i3449 = lshr i32 %3026, 16, !dbg !780
  %3027 = load i32, i32* %r.i1943, align 4, !dbg !780
  %xor1556.i3450 = xor i32 %shr1555.i3449, %3027, !dbg !780
  %conv1557.i3451 = zext i32 %xor1556.i3450 to i64, !dbg !780
  %and1558.i3452 = and i64 %conv1557.i3451, 65535, !dbg !780
  %conv1559.i3453 = trunc i64 %and1558.i3452 to i32, !dbg !780
  store i32 %conv1559.i3453, i32* %tt1530.i2020, align 4, !dbg !780
  %3028 = load i32, i32* %tt1530.i2020, align 4, !dbg !780
  %3029 = load i32, i32* %r.i1943, align 4, !dbg !780
  %xor1560.i3454 = xor i32 %3029, %3028, !dbg !780
  store i32 %xor1560.i3454, i32* %r.i1943, align 4, !dbg !780
  %3030 = load i32, i32* %tt1530.i2020, align 4, !dbg !780
  %shl1561.i3455 = shl i32 %3030, 16, !dbg !780
  %3031 = load i32, i32* %l.i1942, align 4, !dbg !780
  %xor1562.i3456 = xor i32 %3031, %shl1561.i3455, !dbg !780
  store i32 %xor1562.i3456, i32* %l.i1942, align 4, !dbg !780
  %3032 = load i32, i32* %r.i1943, align 4, !dbg !780
  %shr1563.i3457 = lshr i32 %3032, 4, !dbg !780
  %3033 = load i32, i32* %l.i1942, align 4, !dbg !780
  %xor1564.i3458 = xor i32 %shr1563.i3457, %3033, !dbg !780
  %conv1565.i3459 = zext i32 %xor1564.i3458 to i64, !dbg !780
  %and1566.i3460 = and i64 %conv1565.i3459, 252645135, !dbg !780
  %conv1567.i3461 = trunc i64 %and1566.i3460 to i32, !dbg !780
  store i32 %conv1567.i3461, i32* %tt1530.i2020, align 4, !dbg !780
  %3034 = load i32, i32* %tt1530.i2020, align 4, !dbg !780
  %3035 = load i32, i32* %l.i1942, align 4, !dbg !780
  %xor1568.i3462 = xor i32 %3035, %3034, !dbg !780
  store i32 %xor1568.i3462, i32* %l.i1942, align 4, !dbg !780
  %3036 = load i32, i32* %tt1530.i2020, align 4, !dbg !780
  %shl1569.i3463 = shl i32 %3036, 4, !dbg !780
  %3037 = load i32, i32* %r.i1943, align 4, !dbg !780
  %xor1570.i3464 = xor i32 %3037, %shl1569.i3463, !dbg !780
  store i32 %xor1570.i3464, i32* %r.i1943, align 4, !dbg !780
  %3038 = load i32, i32* %l.i1942, align 4, !dbg !1186
  %3039 = load i32*, i32** %data.addr.i1939, align 8, !dbg !1187
  store i32 %3038, i32* %3039, align 4, !dbg !1188
  %3040 = load i32, i32* %r.i1943, align 4, !dbg !1189
  %3041 = load i32*, i32** %data.addr.i1939, align 8, !dbg !1190
  %arrayidx1572.i3465 = getelementptr inbounds i32, i32* %3041, i64 1, !dbg !1190
  store i32 %3040, i32* %arrayidx1572.i3465, align 4, !dbg !1191
  store i32 0, i32* %u.i1945, align 4, !dbg !1192
  store i32 0, i32* %t.i1944, align 4, !dbg !1193
  store i32 0, i32* %r.i1943, align 4, !dbg !1194
  store i32 0, i32* %l.i1942, align 4, !dbg !1195
  %arrayidx259 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1196
  %3042 = load i32, i32* %arrayidx259, align 4, !dbg !1196
  %3043 = load i32, i32* %xor0, align 4, !dbg !1197
  %xor260 = xor i32 %3042, %3043, !dbg !1198
  store i32 %xor260, i32* %tout0, align 4, !dbg !1199
  %arrayidx261 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1200
  %3044 = load i32, i32* %arrayidx261, align 4, !dbg !1200
  %3045 = load i32, i32* %xor1, align 4, !dbg !1201
  %xor262 = xor i32 %3044, %3045, !dbg !1202
  store i32 %xor262, i32* %tout1, align 4, !dbg !1203
  %3046 = load i32, i32* %tout0, align 4, !dbg !1204
  %and263 = and i32 %3046, 255, !dbg !1204
  %conv264 = trunc i32 %and263 to i8, !dbg !1204
  %3047 = load i8*, i8** %out.addr, align 8, !dbg !1204
  %incdec.ptr265 = getelementptr inbounds i8, i8* %3047, i32 1, !dbg !1204
  store i8* %incdec.ptr265, i8** %out.addr, align 8, !dbg !1204
  store i8 %conv264, i8* %3047, align 1, !dbg !1204
  %3048 = load i32, i32* %tout0, align 4, !dbg !1204
  %shr266 = lshr i32 %3048, 8, !dbg !1204
  %and267 = and i32 %shr266, 255, !dbg !1204
  %conv268 = trunc i32 %and267 to i8, !dbg !1204
  %3049 = load i8*, i8** %out.addr, align 8, !dbg !1204
  %incdec.ptr269 = getelementptr inbounds i8, i8* %3049, i32 1, !dbg !1204
  store i8* %incdec.ptr269, i8** %out.addr, align 8, !dbg !1204
  store i8 %conv268, i8* %3049, align 1, !dbg !1204
  %3050 = load i32, i32* %tout0, align 4, !dbg !1204
  %shr270 = lshr i32 %3050, 16, !dbg !1204
  %and271 = and i32 %shr270, 255, !dbg !1204
  %conv272 = trunc i32 %and271 to i8, !dbg !1204
  %3051 = load i8*, i8** %out.addr, align 8, !dbg !1204
  %incdec.ptr273 = getelementptr inbounds i8, i8* %3051, i32 1, !dbg !1204
  store i8* %incdec.ptr273, i8** %out.addr, align 8, !dbg !1204
  store i8 %conv272, i8* %3051, align 1, !dbg !1204
  %3052 = load i32, i32* %tout0, align 4, !dbg !1204
  %shr274 = lshr i32 %3052, 24, !dbg !1204
  %and275 = and i32 %shr274, 255, !dbg !1204
  %conv276 = trunc i32 %and275 to i8, !dbg !1204
  %3053 = load i8*, i8** %out.addr, align 8, !dbg !1204
  %incdec.ptr277 = getelementptr inbounds i8, i8* %3053, i32 1, !dbg !1204
  store i8* %incdec.ptr277, i8** %out.addr, align 8, !dbg !1204
  store i8 %conv276, i8* %3053, align 1, !dbg !1204
  %3054 = load i32, i32* %tout1, align 4, !dbg !1205
  %and278 = and i32 %3054, 255, !dbg !1205
  %conv279 = trunc i32 %and278 to i8, !dbg !1205
  %3055 = load i8*, i8** %out.addr, align 8, !dbg !1205
  %incdec.ptr280 = getelementptr inbounds i8, i8* %3055, i32 1, !dbg !1205
  store i8* %incdec.ptr280, i8** %out.addr, align 8, !dbg !1205
  store i8 %conv279, i8* %3055, align 1, !dbg !1205
  %3056 = load i32, i32* %tout1, align 4, !dbg !1205
  %shr281 = lshr i32 %3056, 8, !dbg !1205
  %and282 = and i32 %shr281, 255, !dbg !1205
  %conv283 = trunc i32 %and282 to i8, !dbg !1205
  %3057 = load i8*, i8** %out.addr, align 8, !dbg !1205
  %incdec.ptr284 = getelementptr inbounds i8, i8* %3057, i32 1, !dbg !1205
  store i8* %incdec.ptr284, i8** %out.addr, align 8, !dbg !1205
  store i8 %conv283, i8* %3057, align 1, !dbg !1205
  %3058 = load i32, i32* %tout1, align 4, !dbg !1205
  %shr285 = lshr i32 %3058, 16, !dbg !1205
  %and286 = and i32 %shr285, 255, !dbg !1205
  %conv287 = trunc i32 %and286 to i8, !dbg !1205
  %3059 = load i8*, i8** %out.addr, align 8, !dbg !1205
  %incdec.ptr288 = getelementptr inbounds i8, i8* %3059, i32 1, !dbg !1205
  store i8* %incdec.ptr288, i8** %out.addr, align 8, !dbg !1205
  store i8 %conv287, i8* %3059, align 1, !dbg !1205
  %3060 = load i32, i32* %tout1, align 4, !dbg !1205
  %shr289 = lshr i32 %3060, 24, !dbg !1205
  %and290 = and i32 %shr289, 255, !dbg !1205
  %conv291 = trunc i32 %and290 to i8, !dbg !1205
  %3061 = load i8*, i8** %out.addr, align 8, !dbg !1205
  %incdec.ptr292 = getelementptr inbounds i8, i8* %3061, i32 1, !dbg !1205
  store i8* %incdec.ptr292, i8** %out.addr, align 8, !dbg !1205
  store i8 %conv291, i8* %3061, align 1, !dbg !1205
  %3062 = load i32, i32* %tin0, align 4, !dbg !1206
  store i32 %3062, i32* %xor0, align 4, !dbg !1207
  %3063 = load i32, i32* %tin1, align 4, !dbg !1208
  store i32 %3063, i32* %xor1, align 4, !dbg !1209
  br label %for.inc293, !dbg !1210

for.inc293:                                       ; preds = %DES_encrypt1.exit3466
  %3064 = load i64, i64* %l, align 8, !dbg !1211
  %sub294 = sub nsw i64 %3064, 8, !dbg !1211
  store i64 %sub294, i64* %l, align 8, !dbg !1211
  br label %for.cond224, !dbg !1212, !llvm.loop !1213

for.end295:                                       ; preds = %for.cond224
  %3065 = load i64, i64* %l, align 8, !dbg !1215
  %cmp296 = icmp ne i64 %3065, -8, !dbg !1216
  br i1 %cmp296, label %if.then298, label %if.end376, !dbg !1217

if.then298:                                       ; preds = %for.end295
  %3066 = load i8*, i8** %in.addr, align 8, !dbg !1218
  %incdec.ptr299 = getelementptr inbounds i8, i8* %3066, i32 1, !dbg !1218
  store i8* %incdec.ptr299, i8** %in.addr, align 8, !dbg !1218
  %3067 = load i8, i8* %3066, align 1, !dbg !1218
  %conv300 = zext i8 %3067 to i32, !dbg !1218
  store i32 %conv300, i32* %tin0, align 4, !dbg !1218
  %3068 = load i8*, i8** %in.addr, align 8, !dbg !1218
  %incdec.ptr301 = getelementptr inbounds i8, i8* %3068, i32 1, !dbg !1218
  store i8* %incdec.ptr301, i8** %in.addr, align 8, !dbg !1218
  %3069 = load i8, i8* %3068, align 1, !dbg !1218
  %conv302 = zext i8 %3069 to i32, !dbg !1218
  %shl303 = shl i32 %conv302, 8, !dbg !1218
  %3070 = load i32, i32* %tin0, align 4, !dbg !1218
  %or304 = or i32 %3070, %shl303, !dbg !1218
  store i32 %or304, i32* %tin0, align 4, !dbg !1218
  %3071 = load i8*, i8** %in.addr, align 8, !dbg !1218
  %incdec.ptr305 = getelementptr inbounds i8, i8* %3071, i32 1, !dbg !1218
  store i8* %incdec.ptr305, i8** %in.addr, align 8, !dbg !1218
  %3072 = load i8, i8* %3071, align 1, !dbg !1218
  %conv306 = zext i8 %3072 to i32, !dbg !1218
  %shl307 = shl i32 %conv306, 16, !dbg !1218
  %3073 = load i32, i32* %tin0, align 4, !dbg !1218
  %or308 = or i32 %3073, %shl307, !dbg !1218
  store i32 %or308, i32* %tin0, align 4, !dbg !1218
  %3074 = load i8*, i8** %in.addr, align 8, !dbg !1218
  %incdec.ptr309 = getelementptr inbounds i8, i8* %3074, i32 1, !dbg !1218
  store i8* %incdec.ptr309, i8** %in.addr, align 8, !dbg !1218
  %3075 = load i8, i8* %3074, align 1, !dbg !1218
  %conv310 = zext i8 %3075 to i32, !dbg !1218
  %shl311 = shl i32 %conv310, 24, !dbg !1218
  %3076 = load i32, i32* %tin0, align 4, !dbg !1218
  %or312 = or i32 %3076, %shl311, !dbg !1218
  store i32 %or312, i32* %tin0, align 4, !dbg !1218
  %3077 = load i32, i32* %tin0, align 4, !dbg !1219
  %arrayidx313 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1220
  store i32 %3077, i32* %arrayidx313, align 4, !dbg !1221
  %3078 = load i8*, i8** %in.addr, align 8, !dbg !1222
  %incdec.ptr314 = getelementptr inbounds i8, i8* %3078, i32 1, !dbg !1222
  store i8* %incdec.ptr314, i8** %in.addr, align 8, !dbg !1222
  %3079 = load i8, i8* %3078, align 1, !dbg !1222
  %conv315 = zext i8 %3079 to i32, !dbg !1222
  store i32 %conv315, i32* %tin1, align 4, !dbg !1222
  %3080 = load i8*, i8** %in.addr, align 8, !dbg !1222
  %incdec.ptr316 = getelementptr inbounds i8, i8* %3080, i32 1, !dbg !1222
  store i8* %incdec.ptr316, i8** %in.addr, align 8, !dbg !1222
  %3081 = load i8, i8* %3080, align 1, !dbg !1222
  %conv317 = zext i8 %3081 to i32, !dbg !1222
  %shl318 = shl i32 %conv317, 8, !dbg !1222
  %3082 = load i32, i32* %tin1, align 4, !dbg !1222
  %or319 = or i32 %3082, %shl318, !dbg !1222
  store i32 %or319, i32* %tin1, align 4, !dbg !1222
  %3083 = load i8*, i8** %in.addr, align 8, !dbg !1222
  %incdec.ptr320 = getelementptr inbounds i8, i8* %3083, i32 1, !dbg !1222
  store i8* %incdec.ptr320, i8** %in.addr, align 8, !dbg !1222
  %3084 = load i8, i8* %3083, align 1, !dbg !1222
  %conv321 = zext i8 %3084 to i32, !dbg !1222
  %shl322 = shl i32 %conv321, 16, !dbg !1222
  %3085 = load i32, i32* %tin1, align 4, !dbg !1222
  %or323 = or i32 %3085, %shl322, !dbg !1222
  store i32 %or323, i32* %tin1, align 4, !dbg !1222
  %3086 = load i8*, i8** %in.addr, align 8, !dbg !1222
  %incdec.ptr324 = getelementptr inbounds i8, i8* %3086, i32 1, !dbg !1222
  store i8* %incdec.ptr324, i8** %in.addr, align 8, !dbg !1222
  %3087 = load i8, i8* %3086, align 1, !dbg !1222
  %conv325 = zext i8 %3087 to i32, !dbg !1222
  %shl326 = shl i32 %conv325, 24, !dbg !1222
  %3088 = load i32, i32* %tin1, align 4, !dbg !1222
  %or327 = or i32 %3088, %shl326, !dbg !1222
  store i32 %or327, i32* %tin1, align 4, !dbg !1222
  %3089 = load i32, i32* %tin1, align 4, !dbg !1223
  %arrayidx328 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1224
  store i32 %3089, i32* %arrayidx328, align 4, !dbg !1225
  %arraydecay329 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1226
  %3090 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8, !dbg !1227
  store i32* %arraydecay329, i32** %data.addr.i3467, align 8
  store %struct.DES_ks* %3090, %struct.DES_ks** %ks.addr.i3468, align 8
  %ks.addr1.i3549 = bitcast %struct.DES_ks** %ks.addr.i3468 to i8*
  call void @llvm.var.annotation(i8* %ks.addr1.i3549, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 14) #8
  store i32 0, i32* %enc.addr.i3469, align 4
  %s2.i3550 = bitcast i32** %s.i3474 to i8*, !dbg !1228
  call void @llvm.var.annotation(i8* %s2.i3550, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 17) #8, !dbg !1228
  %3091 = load i32*, i32** %data.addr.i3467, align 8, !dbg !1229
  %3092 = load i32, i32* %3091, align 4, !dbg !1229
  store i32 %3092, i32* %r.i3471, align 4, !dbg !1230
  %3093 = load i32*, i32** %data.addr.i3467, align 8, !dbg !1231
  %arrayidx3.i3551 = getelementptr inbounds i32, i32* %3093, i64 1, !dbg !1231
  %3094 = load i32, i32* %arrayidx3.i3551, align 4, !dbg !1231
  store i32 %3094, i32* %l.i3470, align 4, !dbg !1232
  %3095 = load i32, i32* %l.i3470, align 4, !dbg !693
  %shr.i3552 = lshr i32 %3095, 4, !dbg !693
  %3096 = load i32, i32* %r.i3471, align 4, !dbg !693
  %xor.i3553 = xor i32 %shr.i3552, %3096, !dbg !693
  %conv.i3554 = zext i32 %xor.i3553 to i64, !dbg !693
  %and.i3555 = and i64 %conv.i3554, 252645135, !dbg !693
  %conv4.i3556 = trunc i64 %and.i3555 to i32, !dbg !693
  store i32 %conv4.i3556, i32* %tt.i3475, align 4, !dbg !693
  %3097 = load i32, i32* %tt.i3475, align 4, !dbg !693
  %3098 = load i32, i32* %r.i3471, align 4, !dbg !693
  %xor5.i3557 = xor i32 %3098, %3097, !dbg !693
  store i32 %xor5.i3557, i32* %r.i3471, align 4, !dbg !693
  %3099 = load i32, i32* %tt.i3475, align 4, !dbg !693
  %shl.i3558 = shl i32 %3099, 4, !dbg !693
  %3100 = load i32, i32* %l.i3470, align 4, !dbg !693
  %xor6.i3559 = xor i32 %3100, %shl.i3558, !dbg !693
  store i32 %xor6.i3559, i32* %l.i3470, align 4, !dbg !693
  %3101 = load i32, i32* %r.i3471, align 4, !dbg !693
  %shr7.i3560 = lshr i32 %3101, 16, !dbg !693
  %3102 = load i32, i32* %l.i3470, align 4, !dbg !693
  %xor8.i3561 = xor i32 %shr7.i3560, %3102, !dbg !693
  %conv9.i3562 = zext i32 %xor8.i3561 to i64, !dbg !693
  %and10.i3563 = and i64 %conv9.i3562, 65535, !dbg !693
  %conv11.i3564 = trunc i64 %and10.i3563 to i32, !dbg !693
  store i32 %conv11.i3564, i32* %tt.i3475, align 4, !dbg !693
  %3103 = load i32, i32* %tt.i3475, align 4, !dbg !693
  %3104 = load i32, i32* %l.i3470, align 4, !dbg !693
  %xor12.i3565 = xor i32 %3104, %3103, !dbg !693
  store i32 %xor12.i3565, i32* %l.i3470, align 4, !dbg !693
  %3105 = load i32, i32* %tt.i3475, align 4, !dbg !693
  %shl13.i3566 = shl i32 %3105, 16, !dbg !693
  %3106 = load i32, i32* %r.i3471, align 4, !dbg !693
  %xor14.i3567 = xor i32 %3106, %shl13.i3566, !dbg !693
  store i32 %xor14.i3567, i32* %r.i3471, align 4, !dbg !693
  %3107 = load i32, i32* %l.i3470, align 4, !dbg !693
  %shr15.i3568 = lshr i32 %3107, 2, !dbg !693
  %3108 = load i32, i32* %r.i3471, align 4, !dbg !693
  %xor16.i3569 = xor i32 %shr15.i3568, %3108, !dbg !693
  %conv17.i3570 = zext i32 %xor16.i3569 to i64, !dbg !693
  %and18.i3571 = and i64 %conv17.i3570, 858993459, !dbg !693
  %conv19.i3572 = trunc i64 %and18.i3571 to i32, !dbg !693
  store i32 %conv19.i3572, i32* %tt.i3475, align 4, !dbg !693
  %3109 = load i32, i32* %tt.i3475, align 4, !dbg !693
  %3110 = load i32, i32* %r.i3471, align 4, !dbg !693
  %xor20.i3573 = xor i32 %3110, %3109, !dbg !693
  store i32 %xor20.i3573, i32* %r.i3471, align 4, !dbg !693
  %3111 = load i32, i32* %tt.i3475, align 4, !dbg !693
  %shl21.i3574 = shl i32 %3111, 2, !dbg !693
  %3112 = load i32, i32* %l.i3470, align 4, !dbg !693
  %xor22.i3575 = xor i32 %3112, %shl21.i3574, !dbg !693
  store i32 %xor22.i3575, i32* %l.i3470, align 4, !dbg !693
  %3113 = load i32, i32* %r.i3471, align 4, !dbg !693
  %shr23.i3576 = lshr i32 %3113, 8, !dbg !693
  %3114 = load i32, i32* %l.i3470, align 4, !dbg !693
  %xor24.i3577 = xor i32 %shr23.i3576, %3114, !dbg !693
  %conv25.i3578 = zext i32 %xor24.i3577 to i64, !dbg !693
  %and26.i3579 = and i64 %conv25.i3578, 16711935, !dbg !693
  %conv27.i3580 = trunc i64 %and26.i3579 to i32, !dbg !693
  store i32 %conv27.i3580, i32* %tt.i3475, align 4, !dbg !693
  %3115 = load i32, i32* %tt.i3475, align 4, !dbg !693
  %3116 = load i32, i32* %l.i3470, align 4, !dbg !693
  %xor28.i3581 = xor i32 %3116, %3115, !dbg !693
  store i32 %xor28.i3581, i32* %l.i3470, align 4, !dbg !693
  %3117 = load i32, i32* %tt.i3475, align 4, !dbg !693
  %shl29.i3582 = shl i32 %3117, 8, !dbg !693
  %3118 = load i32, i32* %r.i3471, align 4, !dbg !693
  %xor30.i3583 = xor i32 %3118, %shl29.i3582, !dbg !693
  store i32 %xor30.i3583, i32* %r.i3471, align 4, !dbg !693
  %3119 = load i32, i32* %l.i3470, align 4, !dbg !693
  %shr31.i3584 = lshr i32 %3119, 1, !dbg !693
  %3120 = load i32, i32* %r.i3471, align 4, !dbg !693
  %xor32.i3585 = xor i32 %shr31.i3584, %3120, !dbg !693
  %conv33.i3586 = zext i32 %xor32.i3585 to i64, !dbg !693
  %and34.i3587 = and i64 %conv33.i3586, 1431655765, !dbg !693
  %conv35.i3588 = trunc i64 %and34.i3587 to i32, !dbg !693
  store i32 %conv35.i3588, i32* %tt.i3475, align 4, !dbg !693
  %3121 = load i32, i32* %tt.i3475, align 4, !dbg !693
  %3122 = load i32, i32* %r.i3471, align 4, !dbg !693
  %xor36.i3589 = xor i32 %3122, %3121, !dbg !693
  store i32 %xor36.i3589, i32* %r.i3471, align 4, !dbg !693
  %3123 = load i32, i32* %tt.i3475, align 4, !dbg !693
  %shl37.i3590 = shl i32 %3123, 1, !dbg !693
  %3124 = load i32, i32* %l.i3470, align 4, !dbg !693
  %xor38.i3591 = xor i32 %3124, %shl37.i3590, !dbg !693
  store i32 %xor38.i3591, i32* %l.i3470, align 4, !dbg !693
  %3125 = load i32, i32* %r.i3471, align 4, !dbg !694
  %3126 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %3125) #7, !dbg !694, !srcloc !71
  store i32 %3126, i32* %ret.i3476, align 4, !dbg !694
  %3127 = load i32, i32* %ret.i3476, align 4, !dbg !694
  store i32 %3127, i32* %tmp.i3477, align 4, !dbg !694
  %3128 = load i32, i32* %tmp.i3477, align 4, !dbg !694
  %conv39.i3592 = zext i32 %3128 to i64, !dbg !1233
  %and40.i3593 = and i64 %conv39.i3592, 4294967295, !dbg !1234
  %conv41.i3594 = trunc i64 %and40.i3593 to i32, !dbg !1233
  store i32 %conv41.i3594, i32* %r.i3471, align 4, !dbg !1235
  %3129 = load i32, i32* %l.i3470, align 4, !dbg !695
  %3130 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %3129) #7, !dbg !695, !srcloc !78
  store i32 %3130, i32* %ret42.i3478, align 4, !dbg !695
  %3131 = load i32, i32* %ret42.i3478, align 4, !dbg !695
  store i32 %3131, i32* %tmp43.i3479, align 4, !dbg !695
  %3132 = load i32, i32* %tmp43.i3479, align 4, !dbg !695
  %conv44.i3595 = zext i32 %3132 to i64, !dbg !1236
  %and45.i3596 = and i64 %conv44.i3595, 4294967295, !dbg !1237
  %conv46.i3597 = trunc i64 %and45.i3596 to i32, !dbg !1236
  store i32 %conv46.i3597, i32* %l.i3470, align 4, !dbg !1238
  %3133 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i3468, align 8, !dbg !1239
  %ks47.i3598 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %3133, i32 0, i32 0, !dbg !1240
  %arraydecay.i3599 = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks47.i3598, i64 0, i64 0, !dbg !1241
  %deslong.i3600 = bitcast %union.anon* %arraydecay.i3599 to [2 x i32]*, !dbg !1241
  %arraydecay48.i3601 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i3600, i64 0, i64 0, !dbg !1239
  store i32* %arraydecay48.i3601, i32** %s.i3474, align 8, !dbg !1242
  %3134 = load i32, i32* %enc.addr.i3469, align 4, !dbg !1243
  %tobool.i3602 = icmp ne i32 %3134, 0, !dbg !1243
  br i1 %tobool.i3602, label %if.then.i4274, label %if.else.i4946, !dbg !1244

if.then.i4274:                                    ; preds = %if.then298
  %3135 = load i32, i32* %r.i3471, align 4, !dbg !1245
  %3136 = load i32*, i32** %s.i3474, align 8, !dbg !1245
  %3137 = load i32, i32* %3136, align 4, !dbg !1245
  %xor50.i3603 = xor i32 %3135, %3137, !dbg !1245
  store i32 %xor50.i3603, i32* %u.i3473, align 4, !dbg !1245
  %3138 = load i32, i32* %r.i3471, align 4, !dbg !1245
  %3139 = load i32*, i32** %s.i3474, align 8, !dbg !1245
  %arrayidx51.i3604 = getelementptr inbounds i32, i32* %3139, i64 1, !dbg !1245
  %3140 = load i32, i32* %arrayidx51.i3604, align 4, !dbg !1245
  %xor52.i3605 = xor i32 %3138, %3140, !dbg !1245
  store i32 %xor52.i3605, i32* %t.i3472, align 4, !dbg !1245
  %3141 = load i32, i32* %t.i3472, align 4, !dbg !696
  %3142 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3141) #7, !dbg !696, !srcloc !95
  store i32 %3142, i32* %ret53.i3480, align 4, !dbg !696
  %3143 = load i32, i32* %ret53.i3480, align 4, !dbg !696
  store i32 %3143, i32* %tmp54.i3481, align 4, !dbg !696
  %3144 = load i32, i32* %tmp54.i3481, align 4, !dbg !696
  store i32 %3144, i32* %t.i3472, align 4, !dbg !1245
  %3145 = load i32, i32* %u.i3473, align 4, !dbg !1245
  %shr55.i3606 = lshr i32 %3145, 2, !dbg !1245
  %and56.i3607 = and i32 %shr55.i3606, 63, !dbg !1245
  %idxprom.i3608 = zext i32 %and56.i3607 to i64, !dbg !1245
  %arrayidx57.i3609 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i3608, !dbg !1245
  %3146 = load i32, i32* %arrayidx57.i3609, align 4, !dbg !1245
  %3147 = load i32, i32* %u.i3473, align 4, !dbg !1245
  %shr58.i3610 = lshr i32 %3147, 10, !dbg !1245
  %and59.i3611 = and i32 %shr58.i3610, 63, !dbg !1245
  %idxprom60.i3612 = zext i32 %and59.i3611 to i64, !dbg !1245
  %arrayidx61.i3613 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom60.i3612, !dbg !1245
  %3148 = load i32, i32* %arrayidx61.i3613, align 4, !dbg !1245
  %xor62.i3614 = xor i32 %3146, %3148, !dbg !1245
  %3149 = load i32, i32* %u.i3473, align 4, !dbg !1245
  %shr63.i3615 = lshr i32 %3149, 18, !dbg !1245
  %and64.i3616 = and i32 %shr63.i3615, 63, !dbg !1245
  %idxprom65.i3617 = zext i32 %and64.i3616 to i64, !dbg !1245
  %arrayidx66.i3618 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom65.i3617, !dbg !1245
  %3150 = load i32, i32* %arrayidx66.i3618, align 4, !dbg !1245
  %xor67.i3619 = xor i32 %xor62.i3614, %3150, !dbg !1245
  %3151 = load i32, i32* %u.i3473, align 4, !dbg !1245
  %shr68.i3620 = lshr i32 %3151, 26, !dbg !1245
  %idxprom70.i3621 = zext i32 %shr68.i3620 to i64, !dbg !1245
  %arrayidx71.i3622 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom70.i3621, !dbg !1245
  %3152 = load i32, i32* %arrayidx71.i3622, align 4, !dbg !1245
  %xor72.i3623 = xor i32 %xor67.i3619, %3152, !dbg !1245
  %3153 = load i32, i32* %t.i3472, align 4, !dbg !1245
  %shr73.i3624 = lshr i32 %3153, 2, !dbg !1245
  %and74.i3625 = and i32 %shr73.i3624, 63, !dbg !1245
  %idxprom75.i3626 = zext i32 %and74.i3625 to i64, !dbg !1245
  %arrayidx76.i3627 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom75.i3626, !dbg !1245
  %3154 = load i32, i32* %arrayidx76.i3627, align 4, !dbg !1245
  %xor77.i3628 = xor i32 %xor72.i3623, %3154, !dbg !1245
  %3155 = load i32, i32* %t.i3472, align 4, !dbg !1245
  %shr78.i3629 = lshr i32 %3155, 10, !dbg !1245
  %and79.i3630 = and i32 %shr78.i3629, 63, !dbg !1245
  %idxprom80.i3631 = zext i32 %and79.i3630 to i64, !dbg !1245
  %arrayidx81.i3632 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom80.i3631, !dbg !1245
  %3156 = load i32, i32* %arrayidx81.i3632, align 4, !dbg !1245
  %xor82.i3633 = xor i32 %xor77.i3628, %3156, !dbg !1245
  %3157 = load i32, i32* %t.i3472, align 4, !dbg !1245
  %shr83.i3634 = lshr i32 %3157, 18, !dbg !1245
  %and84.i3635 = and i32 %shr83.i3634, 63, !dbg !1245
  %idxprom85.i3636 = zext i32 %and84.i3635 to i64, !dbg !1245
  %arrayidx86.i3637 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom85.i3636, !dbg !1245
  %3158 = load i32, i32* %arrayidx86.i3637, align 4, !dbg !1245
  %xor87.i3638 = xor i32 %xor82.i3633, %3158, !dbg !1245
  %3159 = load i32, i32* %t.i3472, align 4, !dbg !1245
  %shr88.i3639 = lshr i32 %3159, 26, !dbg !1245
  %idxprom90.i3640 = zext i32 %shr88.i3639 to i64, !dbg !1245
  %arrayidx91.i3641 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom90.i3640, !dbg !1245
  %3160 = load i32, i32* %arrayidx91.i3641, align 4, !dbg !1245
  %xor92.i3642 = xor i32 %xor87.i3638, %3160, !dbg !1245
  %3161 = load i32, i32* %l.i3470, align 4, !dbg !1245
  %xor93.i3643 = xor i32 %3161, %xor92.i3642, !dbg !1245
  store i32 %xor93.i3643, i32* %l.i3470, align 4, !dbg !1245
  %3162 = load i32, i32* %l.i3470, align 4, !dbg !1246
  %3163 = load i32*, i32** %s.i3474, align 8, !dbg !1246
  %arrayidx94.i3644 = getelementptr inbounds i32, i32* %3163, i64 2, !dbg !1246
  %3164 = load i32, i32* %arrayidx94.i3644, align 4, !dbg !1246
  %xor95.i3645 = xor i32 %3162, %3164, !dbg !1246
  store i32 %xor95.i3645, i32* %u.i3473, align 4, !dbg !1246
  %3165 = load i32, i32* %l.i3470, align 4, !dbg !1246
  %3166 = load i32*, i32** %s.i3474, align 8, !dbg !1246
  %arrayidx96.i3646 = getelementptr inbounds i32, i32* %3166, i64 3, !dbg !1246
  %3167 = load i32, i32* %arrayidx96.i3646, align 4, !dbg !1246
  %xor97.i3647 = xor i32 %3165, %3167, !dbg !1246
  store i32 %xor97.i3647, i32* %t.i3472, align 4, !dbg !1246
  %3168 = load i32, i32* %t.i3472, align 4, !dbg !697
  %3169 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3168) #7, !dbg !697, !srcloc !101
  store i32 %3169, i32* %ret98.i3482, align 4, !dbg !697
  %3170 = load i32, i32* %ret98.i3482, align 4, !dbg !697
  store i32 %3170, i32* %tmp99.i3483, align 4, !dbg !697
  %3171 = load i32, i32* %tmp99.i3483, align 4, !dbg !697
  store i32 %3171, i32* %t.i3472, align 4, !dbg !1246
  %3172 = load i32, i32* %u.i3473, align 4, !dbg !1246
  %shr100.i3648 = lshr i32 %3172, 2, !dbg !1246
  %and101.i3649 = and i32 %shr100.i3648, 63, !dbg !1246
  %idxprom102.i3650 = zext i32 %and101.i3649 to i64, !dbg !1246
  %arrayidx103.i3651 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom102.i3650, !dbg !1246
  %3173 = load i32, i32* %arrayidx103.i3651, align 4, !dbg !1246
  %3174 = load i32, i32* %u.i3473, align 4, !dbg !1246
  %shr104.i3652 = lshr i32 %3174, 10, !dbg !1246
  %and105.i3653 = and i32 %shr104.i3652, 63, !dbg !1246
  %idxprom106.i3654 = zext i32 %and105.i3653 to i64, !dbg !1246
  %arrayidx107.i3655 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom106.i3654, !dbg !1246
  %3175 = load i32, i32* %arrayidx107.i3655, align 4, !dbg !1246
  %xor108.i3656 = xor i32 %3173, %3175, !dbg !1246
  %3176 = load i32, i32* %u.i3473, align 4, !dbg !1246
  %shr109.i3657 = lshr i32 %3176, 18, !dbg !1246
  %and110.i3658 = and i32 %shr109.i3657, 63, !dbg !1246
  %idxprom111.i3659 = zext i32 %and110.i3658 to i64, !dbg !1246
  %arrayidx112.i3660 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom111.i3659, !dbg !1246
  %3177 = load i32, i32* %arrayidx112.i3660, align 4, !dbg !1246
  %xor113.i3661 = xor i32 %xor108.i3656, %3177, !dbg !1246
  %3178 = load i32, i32* %u.i3473, align 4, !dbg !1246
  %shr114.i3662 = lshr i32 %3178, 26, !dbg !1246
  %idxprom116.i3663 = zext i32 %shr114.i3662 to i64, !dbg !1246
  %arrayidx117.i3664 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom116.i3663, !dbg !1246
  %3179 = load i32, i32* %arrayidx117.i3664, align 4, !dbg !1246
  %xor118.i3665 = xor i32 %xor113.i3661, %3179, !dbg !1246
  %3180 = load i32, i32* %t.i3472, align 4, !dbg !1246
  %shr119.i3666 = lshr i32 %3180, 2, !dbg !1246
  %and120.i3667 = and i32 %shr119.i3666, 63, !dbg !1246
  %idxprom121.i3668 = zext i32 %and120.i3667 to i64, !dbg !1246
  %arrayidx122.i3669 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom121.i3668, !dbg !1246
  %3181 = load i32, i32* %arrayidx122.i3669, align 4, !dbg !1246
  %xor123.i3670 = xor i32 %xor118.i3665, %3181, !dbg !1246
  %3182 = load i32, i32* %t.i3472, align 4, !dbg !1246
  %shr124.i3671 = lshr i32 %3182, 10, !dbg !1246
  %and125.i3672 = and i32 %shr124.i3671, 63, !dbg !1246
  %idxprom126.i3673 = zext i32 %and125.i3672 to i64, !dbg !1246
  %arrayidx127.i3674 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom126.i3673, !dbg !1246
  %3183 = load i32, i32* %arrayidx127.i3674, align 4, !dbg !1246
  %xor128.i3675 = xor i32 %xor123.i3670, %3183, !dbg !1246
  %3184 = load i32, i32* %t.i3472, align 4, !dbg !1246
  %shr129.i3676 = lshr i32 %3184, 18, !dbg !1246
  %and130.i3677 = and i32 %shr129.i3676, 63, !dbg !1246
  %idxprom131.i3678 = zext i32 %and130.i3677 to i64, !dbg !1246
  %arrayidx132.i3679 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom131.i3678, !dbg !1246
  %3185 = load i32, i32* %arrayidx132.i3679, align 4, !dbg !1246
  %xor133.i3680 = xor i32 %xor128.i3675, %3185, !dbg !1246
  %3186 = load i32, i32* %t.i3472, align 4, !dbg !1246
  %shr134.i3681 = lshr i32 %3186, 26, !dbg !1246
  %idxprom136.i3682 = zext i32 %shr134.i3681 to i64, !dbg !1246
  %arrayidx137.i3683 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom136.i3682, !dbg !1246
  %3187 = load i32, i32* %arrayidx137.i3683, align 4, !dbg !1246
  %xor138.i3684 = xor i32 %xor133.i3680, %3187, !dbg !1246
  %3188 = load i32, i32* %r.i3471, align 4, !dbg !1246
  %xor139.i3685 = xor i32 %3188, %xor138.i3684, !dbg !1246
  store i32 %xor139.i3685, i32* %r.i3471, align 4, !dbg !1246
  %3189 = load i32, i32* %r.i3471, align 4, !dbg !1247
  %3190 = load i32*, i32** %s.i3474, align 8, !dbg !1247
  %arrayidx140.i3686 = getelementptr inbounds i32, i32* %3190, i64 4, !dbg !1247
  %3191 = load i32, i32* %arrayidx140.i3686, align 4, !dbg !1247
  %xor141.i3687 = xor i32 %3189, %3191, !dbg !1247
  store i32 %xor141.i3687, i32* %u.i3473, align 4, !dbg !1247
  %3192 = load i32, i32* %r.i3471, align 4, !dbg !1247
  %3193 = load i32*, i32** %s.i3474, align 8, !dbg !1247
  %arrayidx142.i3688 = getelementptr inbounds i32, i32* %3193, i64 5, !dbg !1247
  %3194 = load i32, i32* %arrayidx142.i3688, align 4, !dbg !1247
  %xor143.i3689 = xor i32 %3192, %3194, !dbg !1247
  store i32 %xor143.i3689, i32* %t.i3472, align 4, !dbg !1247
  %3195 = load i32, i32* %t.i3472, align 4, !dbg !698
  %3196 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3195) #7, !dbg !698, !srcloc !107
  store i32 %3196, i32* %ret144.i3484, align 4, !dbg !698
  %3197 = load i32, i32* %ret144.i3484, align 4, !dbg !698
  store i32 %3197, i32* %tmp145.i3485, align 4, !dbg !698
  %3198 = load i32, i32* %tmp145.i3485, align 4, !dbg !698
  store i32 %3198, i32* %t.i3472, align 4, !dbg !1247
  %3199 = load i32, i32* %u.i3473, align 4, !dbg !1247
  %shr146.i3690 = lshr i32 %3199, 2, !dbg !1247
  %and147.i3691 = and i32 %shr146.i3690, 63, !dbg !1247
  %idxprom148.i3692 = zext i32 %and147.i3691 to i64, !dbg !1247
  %arrayidx149.i3693 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom148.i3692, !dbg !1247
  %3200 = load i32, i32* %arrayidx149.i3693, align 4, !dbg !1247
  %3201 = load i32, i32* %u.i3473, align 4, !dbg !1247
  %shr150.i3694 = lshr i32 %3201, 10, !dbg !1247
  %and151.i3695 = and i32 %shr150.i3694, 63, !dbg !1247
  %idxprom152.i3696 = zext i32 %and151.i3695 to i64, !dbg !1247
  %arrayidx153.i3697 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom152.i3696, !dbg !1247
  %3202 = load i32, i32* %arrayidx153.i3697, align 4, !dbg !1247
  %xor154.i3698 = xor i32 %3200, %3202, !dbg !1247
  %3203 = load i32, i32* %u.i3473, align 4, !dbg !1247
  %shr155.i3699 = lshr i32 %3203, 18, !dbg !1247
  %and156.i3700 = and i32 %shr155.i3699, 63, !dbg !1247
  %idxprom157.i3701 = zext i32 %and156.i3700 to i64, !dbg !1247
  %arrayidx158.i3702 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom157.i3701, !dbg !1247
  %3204 = load i32, i32* %arrayidx158.i3702, align 4, !dbg !1247
  %xor159.i3703 = xor i32 %xor154.i3698, %3204, !dbg !1247
  %3205 = load i32, i32* %u.i3473, align 4, !dbg !1247
  %shr160.i3704 = lshr i32 %3205, 26, !dbg !1247
  %idxprom162.i3705 = zext i32 %shr160.i3704 to i64, !dbg !1247
  %arrayidx163.i3706 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom162.i3705, !dbg !1247
  %3206 = load i32, i32* %arrayidx163.i3706, align 4, !dbg !1247
  %xor164.i3707 = xor i32 %xor159.i3703, %3206, !dbg !1247
  %3207 = load i32, i32* %t.i3472, align 4, !dbg !1247
  %shr165.i3708 = lshr i32 %3207, 2, !dbg !1247
  %and166.i3709 = and i32 %shr165.i3708, 63, !dbg !1247
  %idxprom167.i3710 = zext i32 %and166.i3709 to i64, !dbg !1247
  %arrayidx168.i3711 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom167.i3710, !dbg !1247
  %3208 = load i32, i32* %arrayidx168.i3711, align 4, !dbg !1247
  %xor169.i3712 = xor i32 %xor164.i3707, %3208, !dbg !1247
  %3209 = load i32, i32* %t.i3472, align 4, !dbg !1247
  %shr170.i3713 = lshr i32 %3209, 10, !dbg !1247
  %and171.i3714 = and i32 %shr170.i3713, 63, !dbg !1247
  %idxprom172.i3715 = zext i32 %and171.i3714 to i64, !dbg !1247
  %arrayidx173.i3716 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom172.i3715, !dbg !1247
  %3210 = load i32, i32* %arrayidx173.i3716, align 4, !dbg !1247
  %xor174.i3717 = xor i32 %xor169.i3712, %3210, !dbg !1247
  %3211 = load i32, i32* %t.i3472, align 4, !dbg !1247
  %shr175.i3718 = lshr i32 %3211, 18, !dbg !1247
  %and176.i3719 = and i32 %shr175.i3718, 63, !dbg !1247
  %idxprom177.i3720 = zext i32 %and176.i3719 to i64, !dbg !1247
  %arrayidx178.i3721 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom177.i3720, !dbg !1247
  %3212 = load i32, i32* %arrayidx178.i3721, align 4, !dbg !1247
  %xor179.i3722 = xor i32 %xor174.i3717, %3212, !dbg !1247
  %3213 = load i32, i32* %t.i3472, align 4, !dbg !1247
  %shr180.i3723 = lshr i32 %3213, 26, !dbg !1247
  %idxprom182.i3724 = zext i32 %shr180.i3723 to i64, !dbg !1247
  %arrayidx183.i3725 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom182.i3724, !dbg !1247
  %3214 = load i32, i32* %arrayidx183.i3725, align 4, !dbg !1247
  %xor184.i3726 = xor i32 %xor179.i3722, %3214, !dbg !1247
  %3215 = load i32, i32* %l.i3470, align 4, !dbg !1247
  %xor185.i3727 = xor i32 %3215, %xor184.i3726, !dbg !1247
  store i32 %xor185.i3727, i32* %l.i3470, align 4, !dbg !1247
  %3216 = load i32, i32* %l.i3470, align 4, !dbg !1248
  %3217 = load i32*, i32** %s.i3474, align 8, !dbg !1248
  %arrayidx186.i3728 = getelementptr inbounds i32, i32* %3217, i64 6, !dbg !1248
  %3218 = load i32, i32* %arrayidx186.i3728, align 4, !dbg !1248
  %xor187.i3729 = xor i32 %3216, %3218, !dbg !1248
  store i32 %xor187.i3729, i32* %u.i3473, align 4, !dbg !1248
  %3219 = load i32, i32* %l.i3470, align 4, !dbg !1248
  %3220 = load i32*, i32** %s.i3474, align 8, !dbg !1248
  %arrayidx188.i3730 = getelementptr inbounds i32, i32* %3220, i64 7, !dbg !1248
  %3221 = load i32, i32* %arrayidx188.i3730, align 4, !dbg !1248
  %xor189.i3731 = xor i32 %3219, %3221, !dbg !1248
  store i32 %xor189.i3731, i32* %t.i3472, align 4, !dbg !1248
  %3222 = load i32, i32* %t.i3472, align 4, !dbg !699
  %3223 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3222) #7, !dbg !699, !srcloc !113
  store i32 %3223, i32* %ret190.i3486, align 4, !dbg !699
  %3224 = load i32, i32* %ret190.i3486, align 4, !dbg !699
  store i32 %3224, i32* %tmp191.i3487, align 4, !dbg !699
  %3225 = load i32, i32* %tmp191.i3487, align 4, !dbg !699
  store i32 %3225, i32* %t.i3472, align 4, !dbg !1248
  %3226 = load i32, i32* %u.i3473, align 4, !dbg !1248
  %shr192.i3732 = lshr i32 %3226, 2, !dbg !1248
  %and193.i3733 = and i32 %shr192.i3732, 63, !dbg !1248
  %idxprom194.i3734 = zext i32 %and193.i3733 to i64, !dbg !1248
  %arrayidx195.i3735 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom194.i3734, !dbg !1248
  %3227 = load i32, i32* %arrayidx195.i3735, align 4, !dbg !1248
  %3228 = load i32, i32* %u.i3473, align 4, !dbg !1248
  %shr196.i3736 = lshr i32 %3228, 10, !dbg !1248
  %and197.i3737 = and i32 %shr196.i3736, 63, !dbg !1248
  %idxprom198.i3738 = zext i32 %and197.i3737 to i64, !dbg !1248
  %arrayidx199.i3739 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom198.i3738, !dbg !1248
  %3229 = load i32, i32* %arrayidx199.i3739, align 4, !dbg !1248
  %xor200.i3740 = xor i32 %3227, %3229, !dbg !1248
  %3230 = load i32, i32* %u.i3473, align 4, !dbg !1248
  %shr201.i3741 = lshr i32 %3230, 18, !dbg !1248
  %and202.i3742 = and i32 %shr201.i3741, 63, !dbg !1248
  %idxprom203.i3743 = zext i32 %and202.i3742 to i64, !dbg !1248
  %arrayidx204.i3744 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom203.i3743, !dbg !1248
  %3231 = load i32, i32* %arrayidx204.i3744, align 4, !dbg !1248
  %xor205.i3745 = xor i32 %xor200.i3740, %3231, !dbg !1248
  %3232 = load i32, i32* %u.i3473, align 4, !dbg !1248
  %shr206.i3746 = lshr i32 %3232, 26, !dbg !1248
  %idxprom208.i3747 = zext i32 %shr206.i3746 to i64, !dbg !1248
  %arrayidx209.i3748 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom208.i3747, !dbg !1248
  %3233 = load i32, i32* %arrayidx209.i3748, align 4, !dbg !1248
  %xor210.i3749 = xor i32 %xor205.i3745, %3233, !dbg !1248
  %3234 = load i32, i32* %t.i3472, align 4, !dbg !1248
  %shr211.i3750 = lshr i32 %3234, 2, !dbg !1248
  %and212.i3751 = and i32 %shr211.i3750, 63, !dbg !1248
  %idxprom213.i3752 = zext i32 %and212.i3751 to i64, !dbg !1248
  %arrayidx214.i3753 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom213.i3752, !dbg !1248
  %3235 = load i32, i32* %arrayidx214.i3753, align 4, !dbg !1248
  %xor215.i3754 = xor i32 %xor210.i3749, %3235, !dbg !1248
  %3236 = load i32, i32* %t.i3472, align 4, !dbg !1248
  %shr216.i3755 = lshr i32 %3236, 10, !dbg !1248
  %and217.i3756 = and i32 %shr216.i3755, 63, !dbg !1248
  %idxprom218.i3757 = zext i32 %and217.i3756 to i64, !dbg !1248
  %arrayidx219.i3758 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom218.i3757, !dbg !1248
  %3237 = load i32, i32* %arrayidx219.i3758, align 4, !dbg !1248
  %xor220.i3759 = xor i32 %xor215.i3754, %3237, !dbg !1248
  %3238 = load i32, i32* %t.i3472, align 4, !dbg !1248
  %shr221.i3760 = lshr i32 %3238, 18, !dbg !1248
  %and222.i3761 = and i32 %shr221.i3760, 63, !dbg !1248
  %idxprom223.i3762 = zext i32 %and222.i3761 to i64, !dbg !1248
  %arrayidx224.i3763 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom223.i3762, !dbg !1248
  %3239 = load i32, i32* %arrayidx224.i3763, align 4, !dbg !1248
  %xor225.i3764 = xor i32 %xor220.i3759, %3239, !dbg !1248
  %3240 = load i32, i32* %t.i3472, align 4, !dbg !1248
  %shr226.i3765 = lshr i32 %3240, 26, !dbg !1248
  %idxprom228.i3766 = zext i32 %shr226.i3765 to i64, !dbg !1248
  %arrayidx229.i3767 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom228.i3766, !dbg !1248
  %3241 = load i32, i32* %arrayidx229.i3767, align 4, !dbg !1248
  %xor230.i3768 = xor i32 %xor225.i3764, %3241, !dbg !1248
  %3242 = load i32, i32* %r.i3471, align 4, !dbg !1248
  %xor231.i3769 = xor i32 %3242, %xor230.i3768, !dbg !1248
  store i32 %xor231.i3769, i32* %r.i3471, align 4, !dbg !1248
  %3243 = load i32, i32* %r.i3471, align 4, !dbg !1249
  %3244 = load i32*, i32** %s.i3474, align 8, !dbg !1249
  %arrayidx232.i3770 = getelementptr inbounds i32, i32* %3244, i64 8, !dbg !1249
  %3245 = load i32, i32* %arrayidx232.i3770, align 4, !dbg !1249
  %xor233.i3771 = xor i32 %3243, %3245, !dbg !1249
  store i32 %xor233.i3771, i32* %u.i3473, align 4, !dbg !1249
  %3246 = load i32, i32* %r.i3471, align 4, !dbg !1249
  %3247 = load i32*, i32** %s.i3474, align 8, !dbg !1249
  %arrayidx234.i3772 = getelementptr inbounds i32, i32* %3247, i64 9, !dbg !1249
  %3248 = load i32, i32* %arrayidx234.i3772, align 4, !dbg !1249
  %xor235.i3773 = xor i32 %3246, %3248, !dbg !1249
  store i32 %xor235.i3773, i32* %t.i3472, align 4, !dbg !1249
  %3249 = load i32, i32* %t.i3472, align 4, !dbg !700
  %3250 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3249) #7, !dbg !700, !srcloc !119
  store i32 %3250, i32* %ret236.i3488, align 4, !dbg !700
  %3251 = load i32, i32* %ret236.i3488, align 4, !dbg !700
  store i32 %3251, i32* %tmp237.i3489, align 4, !dbg !700
  %3252 = load i32, i32* %tmp237.i3489, align 4, !dbg !700
  store i32 %3252, i32* %t.i3472, align 4, !dbg !1249
  %3253 = load i32, i32* %u.i3473, align 4, !dbg !1249
  %shr238.i3774 = lshr i32 %3253, 2, !dbg !1249
  %and239.i3775 = and i32 %shr238.i3774, 63, !dbg !1249
  %idxprom240.i3776 = zext i32 %and239.i3775 to i64, !dbg !1249
  %arrayidx241.i3777 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom240.i3776, !dbg !1249
  %3254 = load i32, i32* %arrayidx241.i3777, align 4, !dbg !1249
  %3255 = load i32, i32* %u.i3473, align 4, !dbg !1249
  %shr242.i3778 = lshr i32 %3255, 10, !dbg !1249
  %and243.i3779 = and i32 %shr242.i3778, 63, !dbg !1249
  %idxprom244.i3780 = zext i32 %and243.i3779 to i64, !dbg !1249
  %arrayidx245.i3781 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom244.i3780, !dbg !1249
  %3256 = load i32, i32* %arrayidx245.i3781, align 4, !dbg !1249
  %xor246.i3782 = xor i32 %3254, %3256, !dbg !1249
  %3257 = load i32, i32* %u.i3473, align 4, !dbg !1249
  %shr247.i3783 = lshr i32 %3257, 18, !dbg !1249
  %and248.i3784 = and i32 %shr247.i3783, 63, !dbg !1249
  %idxprom249.i3785 = zext i32 %and248.i3784 to i64, !dbg !1249
  %arrayidx250.i3786 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom249.i3785, !dbg !1249
  %3258 = load i32, i32* %arrayidx250.i3786, align 4, !dbg !1249
  %xor251.i3787 = xor i32 %xor246.i3782, %3258, !dbg !1249
  %3259 = load i32, i32* %u.i3473, align 4, !dbg !1249
  %shr252.i3788 = lshr i32 %3259, 26, !dbg !1249
  %idxprom254.i3789 = zext i32 %shr252.i3788 to i64, !dbg !1249
  %arrayidx255.i3790 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom254.i3789, !dbg !1249
  %3260 = load i32, i32* %arrayidx255.i3790, align 4, !dbg !1249
  %xor256.i3791 = xor i32 %xor251.i3787, %3260, !dbg !1249
  %3261 = load i32, i32* %t.i3472, align 4, !dbg !1249
  %shr257.i3792 = lshr i32 %3261, 2, !dbg !1249
  %and258.i3793 = and i32 %shr257.i3792, 63, !dbg !1249
  %idxprom259.i3794 = zext i32 %and258.i3793 to i64, !dbg !1249
  %arrayidx260.i3795 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom259.i3794, !dbg !1249
  %3262 = load i32, i32* %arrayidx260.i3795, align 4, !dbg !1249
  %xor261.i3796 = xor i32 %xor256.i3791, %3262, !dbg !1249
  %3263 = load i32, i32* %t.i3472, align 4, !dbg !1249
  %shr262.i3797 = lshr i32 %3263, 10, !dbg !1249
  %and263.i3798 = and i32 %shr262.i3797, 63, !dbg !1249
  %idxprom264.i3799 = zext i32 %and263.i3798 to i64, !dbg !1249
  %arrayidx265.i3800 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom264.i3799, !dbg !1249
  %3264 = load i32, i32* %arrayidx265.i3800, align 4, !dbg !1249
  %xor266.i3801 = xor i32 %xor261.i3796, %3264, !dbg !1249
  %3265 = load i32, i32* %t.i3472, align 4, !dbg !1249
  %shr267.i3802 = lshr i32 %3265, 18, !dbg !1249
  %and268.i3803 = and i32 %shr267.i3802, 63, !dbg !1249
  %idxprom269.i3804 = zext i32 %and268.i3803 to i64, !dbg !1249
  %arrayidx270.i3805 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom269.i3804, !dbg !1249
  %3266 = load i32, i32* %arrayidx270.i3805, align 4, !dbg !1249
  %xor271.i3806 = xor i32 %xor266.i3801, %3266, !dbg !1249
  %3267 = load i32, i32* %t.i3472, align 4, !dbg !1249
  %shr272.i3807 = lshr i32 %3267, 26, !dbg !1249
  %idxprom274.i3808 = zext i32 %shr272.i3807 to i64, !dbg !1249
  %arrayidx275.i3809 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom274.i3808, !dbg !1249
  %3268 = load i32, i32* %arrayidx275.i3809, align 4, !dbg !1249
  %xor276.i3810 = xor i32 %xor271.i3806, %3268, !dbg !1249
  %3269 = load i32, i32* %l.i3470, align 4, !dbg !1249
  %xor277.i3811 = xor i32 %3269, %xor276.i3810, !dbg !1249
  store i32 %xor277.i3811, i32* %l.i3470, align 4, !dbg !1249
  %3270 = load i32, i32* %l.i3470, align 4, !dbg !1250
  %3271 = load i32*, i32** %s.i3474, align 8, !dbg !1250
  %arrayidx278.i3812 = getelementptr inbounds i32, i32* %3271, i64 10, !dbg !1250
  %3272 = load i32, i32* %arrayidx278.i3812, align 4, !dbg !1250
  %xor279.i3813 = xor i32 %3270, %3272, !dbg !1250
  store i32 %xor279.i3813, i32* %u.i3473, align 4, !dbg !1250
  %3273 = load i32, i32* %l.i3470, align 4, !dbg !1250
  %3274 = load i32*, i32** %s.i3474, align 8, !dbg !1250
  %arrayidx280.i3814 = getelementptr inbounds i32, i32* %3274, i64 11, !dbg !1250
  %3275 = load i32, i32* %arrayidx280.i3814, align 4, !dbg !1250
  %xor281.i3815 = xor i32 %3273, %3275, !dbg !1250
  store i32 %xor281.i3815, i32* %t.i3472, align 4, !dbg !1250
  %3276 = load i32, i32* %t.i3472, align 4, !dbg !701
  %3277 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3276) #7, !dbg !701, !srcloc !125
  store i32 %3277, i32* %ret282.i3490, align 4, !dbg !701
  %3278 = load i32, i32* %ret282.i3490, align 4, !dbg !701
  store i32 %3278, i32* %tmp283.i3491, align 4, !dbg !701
  %3279 = load i32, i32* %tmp283.i3491, align 4, !dbg !701
  store i32 %3279, i32* %t.i3472, align 4, !dbg !1250
  %3280 = load i32, i32* %u.i3473, align 4, !dbg !1250
  %shr284.i3816 = lshr i32 %3280, 2, !dbg !1250
  %and285.i3817 = and i32 %shr284.i3816, 63, !dbg !1250
  %idxprom286.i3818 = zext i32 %and285.i3817 to i64, !dbg !1250
  %arrayidx287.i3819 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom286.i3818, !dbg !1250
  %3281 = load i32, i32* %arrayidx287.i3819, align 4, !dbg !1250
  %3282 = load i32, i32* %u.i3473, align 4, !dbg !1250
  %shr288.i3820 = lshr i32 %3282, 10, !dbg !1250
  %and289.i3821 = and i32 %shr288.i3820, 63, !dbg !1250
  %idxprom290.i3822 = zext i32 %and289.i3821 to i64, !dbg !1250
  %arrayidx291.i3823 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom290.i3822, !dbg !1250
  %3283 = load i32, i32* %arrayidx291.i3823, align 4, !dbg !1250
  %xor292.i3824 = xor i32 %3281, %3283, !dbg !1250
  %3284 = load i32, i32* %u.i3473, align 4, !dbg !1250
  %shr293.i3825 = lshr i32 %3284, 18, !dbg !1250
  %and294.i3826 = and i32 %shr293.i3825, 63, !dbg !1250
  %idxprom295.i3827 = zext i32 %and294.i3826 to i64, !dbg !1250
  %arrayidx296.i3828 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom295.i3827, !dbg !1250
  %3285 = load i32, i32* %arrayidx296.i3828, align 4, !dbg !1250
  %xor297.i3829 = xor i32 %xor292.i3824, %3285, !dbg !1250
  %3286 = load i32, i32* %u.i3473, align 4, !dbg !1250
  %shr298.i3830 = lshr i32 %3286, 26, !dbg !1250
  %idxprom300.i3831 = zext i32 %shr298.i3830 to i64, !dbg !1250
  %arrayidx301.i3832 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom300.i3831, !dbg !1250
  %3287 = load i32, i32* %arrayidx301.i3832, align 4, !dbg !1250
  %xor302.i3833 = xor i32 %xor297.i3829, %3287, !dbg !1250
  %3288 = load i32, i32* %t.i3472, align 4, !dbg !1250
  %shr303.i3834 = lshr i32 %3288, 2, !dbg !1250
  %and304.i3835 = and i32 %shr303.i3834, 63, !dbg !1250
  %idxprom305.i3836 = zext i32 %and304.i3835 to i64, !dbg !1250
  %arrayidx306.i3837 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom305.i3836, !dbg !1250
  %3289 = load i32, i32* %arrayidx306.i3837, align 4, !dbg !1250
  %xor307.i3838 = xor i32 %xor302.i3833, %3289, !dbg !1250
  %3290 = load i32, i32* %t.i3472, align 4, !dbg !1250
  %shr308.i3839 = lshr i32 %3290, 10, !dbg !1250
  %and309.i3840 = and i32 %shr308.i3839, 63, !dbg !1250
  %idxprom310.i3841 = zext i32 %and309.i3840 to i64, !dbg !1250
  %arrayidx311.i3842 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom310.i3841, !dbg !1250
  %3291 = load i32, i32* %arrayidx311.i3842, align 4, !dbg !1250
  %xor312.i3843 = xor i32 %xor307.i3838, %3291, !dbg !1250
  %3292 = load i32, i32* %t.i3472, align 4, !dbg !1250
  %shr313.i3844 = lshr i32 %3292, 18, !dbg !1250
  %and314.i3845 = and i32 %shr313.i3844, 63, !dbg !1250
  %idxprom315.i3846 = zext i32 %and314.i3845 to i64, !dbg !1250
  %arrayidx316.i3847 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom315.i3846, !dbg !1250
  %3293 = load i32, i32* %arrayidx316.i3847, align 4, !dbg !1250
  %xor317.i3848 = xor i32 %xor312.i3843, %3293, !dbg !1250
  %3294 = load i32, i32* %t.i3472, align 4, !dbg !1250
  %shr318.i3849 = lshr i32 %3294, 26, !dbg !1250
  %idxprom320.i3850 = zext i32 %shr318.i3849 to i64, !dbg !1250
  %arrayidx321.i3851 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom320.i3850, !dbg !1250
  %3295 = load i32, i32* %arrayidx321.i3851, align 4, !dbg !1250
  %xor322.i3852 = xor i32 %xor317.i3848, %3295, !dbg !1250
  %3296 = load i32, i32* %r.i3471, align 4, !dbg !1250
  %xor323.i3853 = xor i32 %3296, %xor322.i3852, !dbg !1250
  store i32 %xor323.i3853, i32* %r.i3471, align 4, !dbg !1250
  %3297 = load i32, i32* %r.i3471, align 4, !dbg !1251
  %3298 = load i32*, i32** %s.i3474, align 8, !dbg !1251
  %arrayidx324.i3854 = getelementptr inbounds i32, i32* %3298, i64 12, !dbg !1251
  %3299 = load i32, i32* %arrayidx324.i3854, align 4, !dbg !1251
  %xor325.i3855 = xor i32 %3297, %3299, !dbg !1251
  store i32 %xor325.i3855, i32* %u.i3473, align 4, !dbg !1251
  %3300 = load i32, i32* %r.i3471, align 4, !dbg !1251
  %3301 = load i32*, i32** %s.i3474, align 8, !dbg !1251
  %arrayidx326.i3856 = getelementptr inbounds i32, i32* %3301, i64 13, !dbg !1251
  %3302 = load i32, i32* %arrayidx326.i3856, align 4, !dbg !1251
  %xor327.i3857 = xor i32 %3300, %3302, !dbg !1251
  store i32 %xor327.i3857, i32* %t.i3472, align 4, !dbg !1251
  %3303 = load i32, i32* %t.i3472, align 4, !dbg !702
  %3304 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3303) #7, !dbg !702, !srcloc !131
  store i32 %3304, i32* %ret328.i3492, align 4, !dbg !702
  %3305 = load i32, i32* %ret328.i3492, align 4, !dbg !702
  store i32 %3305, i32* %tmp329.i3493, align 4, !dbg !702
  %3306 = load i32, i32* %tmp329.i3493, align 4, !dbg !702
  store i32 %3306, i32* %t.i3472, align 4, !dbg !1251
  %3307 = load i32, i32* %u.i3473, align 4, !dbg !1251
  %shr330.i3858 = lshr i32 %3307, 2, !dbg !1251
  %and331.i3859 = and i32 %shr330.i3858, 63, !dbg !1251
  %idxprom332.i3860 = zext i32 %and331.i3859 to i64, !dbg !1251
  %arrayidx333.i3861 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom332.i3860, !dbg !1251
  %3308 = load i32, i32* %arrayidx333.i3861, align 4, !dbg !1251
  %3309 = load i32, i32* %u.i3473, align 4, !dbg !1251
  %shr334.i3862 = lshr i32 %3309, 10, !dbg !1251
  %and335.i3863 = and i32 %shr334.i3862, 63, !dbg !1251
  %idxprom336.i3864 = zext i32 %and335.i3863 to i64, !dbg !1251
  %arrayidx337.i3865 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom336.i3864, !dbg !1251
  %3310 = load i32, i32* %arrayidx337.i3865, align 4, !dbg !1251
  %xor338.i3866 = xor i32 %3308, %3310, !dbg !1251
  %3311 = load i32, i32* %u.i3473, align 4, !dbg !1251
  %shr339.i3867 = lshr i32 %3311, 18, !dbg !1251
  %and340.i3868 = and i32 %shr339.i3867, 63, !dbg !1251
  %idxprom341.i3869 = zext i32 %and340.i3868 to i64, !dbg !1251
  %arrayidx342.i3870 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom341.i3869, !dbg !1251
  %3312 = load i32, i32* %arrayidx342.i3870, align 4, !dbg !1251
  %xor343.i3871 = xor i32 %xor338.i3866, %3312, !dbg !1251
  %3313 = load i32, i32* %u.i3473, align 4, !dbg !1251
  %shr344.i3872 = lshr i32 %3313, 26, !dbg !1251
  %idxprom346.i3873 = zext i32 %shr344.i3872 to i64, !dbg !1251
  %arrayidx347.i3874 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom346.i3873, !dbg !1251
  %3314 = load i32, i32* %arrayidx347.i3874, align 4, !dbg !1251
  %xor348.i3875 = xor i32 %xor343.i3871, %3314, !dbg !1251
  %3315 = load i32, i32* %t.i3472, align 4, !dbg !1251
  %shr349.i3876 = lshr i32 %3315, 2, !dbg !1251
  %and350.i3877 = and i32 %shr349.i3876, 63, !dbg !1251
  %idxprom351.i3878 = zext i32 %and350.i3877 to i64, !dbg !1251
  %arrayidx352.i3879 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom351.i3878, !dbg !1251
  %3316 = load i32, i32* %arrayidx352.i3879, align 4, !dbg !1251
  %xor353.i3880 = xor i32 %xor348.i3875, %3316, !dbg !1251
  %3317 = load i32, i32* %t.i3472, align 4, !dbg !1251
  %shr354.i3881 = lshr i32 %3317, 10, !dbg !1251
  %and355.i3882 = and i32 %shr354.i3881, 63, !dbg !1251
  %idxprom356.i3883 = zext i32 %and355.i3882 to i64, !dbg !1251
  %arrayidx357.i3884 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom356.i3883, !dbg !1251
  %3318 = load i32, i32* %arrayidx357.i3884, align 4, !dbg !1251
  %xor358.i3885 = xor i32 %xor353.i3880, %3318, !dbg !1251
  %3319 = load i32, i32* %t.i3472, align 4, !dbg !1251
  %shr359.i3886 = lshr i32 %3319, 18, !dbg !1251
  %and360.i3887 = and i32 %shr359.i3886, 63, !dbg !1251
  %idxprom361.i3888 = zext i32 %and360.i3887 to i64, !dbg !1251
  %arrayidx362.i3889 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom361.i3888, !dbg !1251
  %3320 = load i32, i32* %arrayidx362.i3889, align 4, !dbg !1251
  %xor363.i3890 = xor i32 %xor358.i3885, %3320, !dbg !1251
  %3321 = load i32, i32* %t.i3472, align 4, !dbg !1251
  %shr364.i3891 = lshr i32 %3321, 26, !dbg !1251
  %idxprom366.i3892 = zext i32 %shr364.i3891 to i64, !dbg !1251
  %arrayidx367.i3893 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom366.i3892, !dbg !1251
  %3322 = load i32, i32* %arrayidx367.i3893, align 4, !dbg !1251
  %xor368.i3894 = xor i32 %xor363.i3890, %3322, !dbg !1251
  %3323 = load i32, i32* %l.i3470, align 4, !dbg !1251
  %xor369.i3895 = xor i32 %3323, %xor368.i3894, !dbg !1251
  store i32 %xor369.i3895, i32* %l.i3470, align 4, !dbg !1251
  %3324 = load i32, i32* %l.i3470, align 4, !dbg !1252
  %3325 = load i32*, i32** %s.i3474, align 8, !dbg !1252
  %arrayidx370.i3896 = getelementptr inbounds i32, i32* %3325, i64 14, !dbg !1252
  %3326 = load i32, i32* %arrayidx370.i3896, align 4, !dbg !1252
  %xor371.i3897 = xor i32 %3324, %3326, !dbg !1252
  store i32 %xor371.i3897, i32* %u.i3473, align 4, !dbg !1252
  %3327 = load i32, i32* %l.i3470, align 4, !dbg !1252
  %3328 = load i32*, i32** %s.i3474, align 8, !dbg !1252
  %arrayidx372.i3898 = getelementptr inbounds i32, i32* %3328, i64 15, !dbg !1252
  %3329 = load i32, i32* %arrayidx372.i3898, align 4, !dbg !1252
  %xor373.i3899 = xor i32 %3327, %3329, !dbg !1252
  store i32 %xor373.i3899, i32* %t.i3472, align 4, !dbg !1252
  %3330 = load i32, i32* %t.i3472, align 4, !dbg !703
  %3331 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3330) #7, !dbg !703, !srcloc !137
  store i32 %3331, i32* %ret374.i3494, align 4, !dbg !703
  %3332 = load i32, i32* %ret374.i3494, align 4, !dbg !703
  store i32 %3332, i32* %tmp375.i3495, align 4, !dbg !703
  %3333 = load i32, i32* %tmp375.i3495, align 4, !dbg !703
  store i32 %3333, i32* %t.i3472, align 4, !dbg !1252
  %3334 = load i32, i32* %u.i3473, align 4, !dbg !1252
  %shr376.i3900 = lshr i32 %3334, 2, !dbg !1252
  %and377.i3901 = and i32 %shr376.i3900, 63, !dbg !1252
  %idxprom378.i3902 = zext i32 %and377.i3901 to i64, !dbg !1252
  %arrayidx379.i3903 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom378.i3902, !dbg !1252
  %3335 = load i32, i32* %arrayidx379.i3903, align 4, !dbg !1252
  %3336 = load i32, i32* %u.i3473, align 4, !dbg !1252
  %shr380.i3904 = lshr i32 %3336, 10, !dbg !1252
  %and381.i3905 = and i32 %shr380.i3904, 63, !dbg !1252
  %idxprom382.i3906 = zext i32 %and381.i3905 to i64, !dbg !1252
  %arrayidx383.i3907 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom382.i3906, !dbg !1252
  %3337 = load i32, i32* %arrayidx383.i3907, align 4, !dbg !1252
  %xor384.i3908 = xor i32 %3335, %3337, !dbg !1252
  %3338 = load i32, i32* %u.i3473, align 4, !dbg !1252
  %shr385.i3909 = lshr i32 %3338, 18, !dbg !1252
  %and386.i3910 = and i32 %shr385.i3909, 63, !dbg !1252
  %idxprom387.i3911 = zext i32 %and386.i3910 to i64, !dbg !1252
  %arrayidx388.i3912 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom387.i3911, !dbg !1252
  %3339 = load i32, i32* %arrayidx388.i3912, align 4, !dbg !1252
  %xor389.i3913 = xor i32 %xor384.i3908, %3339, !dbg !1252
  %3340 = load i32, i32* %u.i3473, align 4, !dbg !1252
  %shr390.i3914 = lshr i32 %3340, 26, !dbg !1252
  %idxprom392.i3915 = zext i32 %shr390.i3914 to i64, !dbg !1252
  %arrayidx393.i3916 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom392.i3915, !dbg !1252
  %3341 = load i32, i32* %arrayidx393.i3916, align 4, !dbg !1252
  %xor394.i3917 = xor i32 %xor389.i3913, %3341, !dbg !1252
  %3342 = load i32, i32* %t.i3472, align 4, !dbg !1252
  %shr395.i3918 = lshr i32 %3342, 2, !dbg !1252
  %and396.i3919 = and i32 %shr395.i3918, 63, !dbg !1252
  %idxprom397.i3920 = zext i32 %and396.i3919 to i64, !dbg !1252
  %arrayidx398.i3921 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom397.i3920, !dbg !1252
  %3343 = load i32, i32* %arrayidx398.i3921, align 4, !dbg !1252
  %xor399.i3922 = xor i32 %xor394.i3917, %3343, !dbg !1252
  %3344 = load i32, i32* %t.i3472, align 4, !dbg !1252
  %shr400.i3923 = lshr i32 %3344, 10, !dbg !1252
  %and401.i3924 = and i32 %shr400.i3923, 63, !dbg !1252
  %idxprom402.i3925 = zext i32 %and401.i3924 to i64, !dbg !1252
  %arrayidx403.i3926 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom402.i3925, !dbg !1252
  %3345 = load i32, i32* %arrayidx403.i3926, align 4, !dbg !1252
  %xor404.i3927 = xor i32 %xor399.i3922, %3345, !dbg !1252
  %3346 = load i32, i32* %t.i3472, align 4, !dbg !1252
  %shr405.i3928 = lshr i32 %3346, 18, !dbg !1252
  %and406.i3929 = and i32 %shr405.i3928, 63, !dbg !1252
  %idxprom407.i3930 = zext i32 %and406.i3929 to i64, !dbg !1252
  %arrayidx408.i3931 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom407.i3930, !dbg !1252
  %3347 = load i32, i32* %arrayidx408.i3931, align 4, !dbg !1252
  %xor409.i3932 = xor i32 %xor404.i3927, %3347, !dbg !1252
  %3348 = load i32, i32* %t.i3472, align 4, !dbg !1252
  %shr410.i3933 = lshr i32 %3348, 26, !dbg !1252
  %idxprom412.i3934 = zext i32 %shr410.i3933 to i64, !dbg !1252
  %arrayidx413.i3935 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom412.i3934, !dbg !1252
  %3349 = load i32, i32* %arrayidx413.i3935, align 4, !dbg !1252
  %xor414.i3936 = xor i32 %xor409.i3932, %3349, !dbg !1252
  %3350 = load i32, i32* %r.i3471, align 4, !dbg !1252
  %xor415.i3937 = xor i32 %3350, %xor414.i3936, !dbg !1252
  store i32 %xor415.i3937, i32* %r.i3471, align 4, !dbg !1252
  %3351 = load i32, i32* %r.i3471, align 4, !dbg !1253
  %3352 = load i32*, i32** %s.i3474, align 8, !dbg !1253
  %arrayidx416.i3938 = getelementptr inbounds i32, i32* %3352, i64 16, !dbg !1253
  %3353 = load i32, i32* %arrayidx416.i3938, align 4, !dbg !1253
  %xor417.i3939 = xor i32 %3351, %3353, !dbg !1253
  store i32 %xor417.i3939, i32* %u.i3473, align 4, !dbg !1253
  %3354 = load i32, i32* %r.i3471, align 4, !dbg !1253
  %3355 = load i32*, i32** %s.i3474, align 8, !dbg !1253
  %arrayidx418.i3940 = getelementptr inbounds i32, i32* %3355, i64 17, !dbg !1253
  %3356 = load i32, i32* %arrayidx418.i3940, align 4, !dbg !1253
  %xor419.i3941 = xor i32 %3354, %3356, !dbg !1253
  store i32 %xor419.i3941, i32* %t.i3472, align 4, !dbg !1253
  %3357 = load i32, i32* %t.i3472, align 4, !dbg !704
  %3358 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3357) #7, !dbg !704, !srcloc !143
  store i32 %3358, i32* %ret420.i3496, align 4, !dbg !704
  %3359 = load i32, i32* %ret420.i3496, align 4, !dbg !704
  store i32 %3359, i32* %tmp421.i3497, align 4, !dbg !704
  %3360 = load i32, i32* %tmp421.i3497, align 4, !dbg !704
  store i32 %3360, i32* %t.i3472, align 4, !dbg !1253
  %3361 = load i32, i32* %u.i3473, align 4, !dbg !1253
  %shr422.i3942 = lshr i32 %3361, 2, !dbg !1253
  %and423.i3943 = and i32 %shr422.i3942, 63, !dbg !1253
  %idxprom424.i3944 = zext i32 %and423.i3943 to i64, !dbg !1253
  %arrayidx425.i3945 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom424.i3944, !dbg !1253
  %3362 = load i32, i32* %arrayidx425.i3945, align 4, !dbg !1253
  %3363 = load i32, i32* %u.i3473, align 4, !dbg !1253
  %shr426.i3946 = lshr i32 %3363, 10, !dbg !1253
  %and427.i3947 = and i32 %shr426.i3946, 63, !dbg !1253
  %idxprom428.i3948 = zext i32 %and427.i3947 to i64, !dbg !1253
  %arrayidx429.i3949 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom428.i3948, !dbg !1253
  %3364 = load i32, i32* %arrayidx429.i3949, align 4, !dbg !1253
  %xor430.i3950 = xor i32 %3362, %3364, !dbg !1253
  %3365 = load i32, i32* %u.i3473, align 4, !dbg !1253
  %shr431.i3951 = lshr i32 %3365, 18, !dbg !1253
  %and432.i3952 = and i32 %shr431.i3951, 63, !dbg !1253
  %idxprom433.i3953 = zext i32 %and432.i3952 to i64, !dbg !1253
  %arrayidx434.i3954 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom433.i3953, !dbg !1253
  %3366 = load i32, i32* %arrayidx434.i3954, align 4, !dbg !1253
  %xor435.i3955 = xor i32 %xor430.i3950, %3366, !dbg !1253
  %3367 = load i32, i32* %u.i3473, align 4, !dbg !1253
  %shr436.i3956 = lshr i32 %3367, 26, !dbg !1253
  %idxprom438.i3957 = zext i32 %shr436.i3956 to i64, !dbg !1253
  %arrayidx439.i3958 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom438.i3957, !dbg !1253
  %3368 = load i32, i32* %arrayidx439.i3958, align 4, !dbg !1253
  %xor440.i3959 = xor i32 %xor435.i3955, %3368, !dbg !1253
  %3369 = load i32, i32* %t.i3472, align 4, !dbg !1253
  %shr441.i3960 = lshr i32 %3369, 2, !dbg !1253
  %and442.i3961 = and i32 %shr441.i3960, 63, !dbg !1253
  %idxprom443.i3962 = zext i32 %and442.i3961 to i64, !dbg !1253
  %arrayidx444.i3963 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom443.i3962, !dbg !1253
  %3370 = load i32, i32* %arrayidx444.i3963, align 4, !dbg !1253
  %xor445.i3964 = xor i32 %xor440.i3959, %3370, !dbg !1253
  %3371 = load i32, i32* %t.i3472, align 4, !dbg !1253
  %shr446.i3965 = lshr i32 %3371, 10, !dbg !1253
  %and447.i3966 = and i32 %shr446.i3965, 63, !dbg !1253
  %idxprom448.i3967 = zext i32 %and447.i3966 to i64, !dbg !1253
  %arrayidx449.i3968 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom448.i3967, !dbg !1253
  %3372 = load i32, i32* %arrayidx449.i3968, align 4, !dbg !1253
  %xor450.i3969 = xor i32 %xor445.i3964, %3372, !dbg !1253
  %3373 = load i32, i32* %t.i3472, align 4, !dbg !1253
  %shr451.i3970 = lshr i32 %3373, 18, !dbg !1253
  %and452.i3971 = and i32 %shr451.i3970, 63, !dbg !1253
  %idxprom453.i3972 = zext i32 %and452.i3971 to i64, !dbg !1253
  %arrayidx454.i3973 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom453.i3972, !dbg !1253
  %3374 = load i32, i32* %arrayidx454.i3973, align 4, !dbg !1253
  %xor455.i3974 = xor i32 %xor450.i3969, %3374, !dbg !1253
  %3375 = load i32, i32* %t.i3472, align 4, !dbg !1253
  %shr456.i3975 = lshr i32 %3375, 26, !dbg !1253
  %idxprom458.i3976 = zext i32 %shr456.i3975 to i64, !dbg !1253
  %arrayidx459.i3977 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom458.i3976, !dbg !1253
  %3376 = load i32, i32* %arrayidx459.i3977, align 4, !dbg !1253
  %xor460.i3978 = xor i32 %xor455.i3974, %3376, !dbg !1253
  %3377 = load i32, i32* %l.i3470, align 4, !dbg !1253
  %xor461.i3979 = xor i32 %3377, %xor460.i3978, !dbg !1253
  store i32 %xor461.i3979, i32* %l.i3470, align 4, !dbg !1253
  %3378 = load i32, i32* %l.i3470, align 4, !dbg !1254
  %3379 = load i32*, i32** %s.i3474, align 8, !dbg !1254
  %arrayidx462.i3980 = getelementptr inbounds i32, i32* %3379, i64 18, !dbg !1254
  %3380 = load i32, i32* %arrayidx462.i3980, align 4, !dbg !1254
  %xor463.i3981 = xor i32 %3378, %3380, !dbg !1254
  store i32 %xor463.i3981, i32* %u.i3473, align 4, !dbg !1254
  %3381 = load i32, i32* %l.i3470, align 4, !dbg !1254
  %3382 = load i32*, i32** %s.i3474, align 8, !dbg !1254
  %arrayidx464.i3982 = getelementptr inbounds i32, i32* %3382, i64 19, !dbg !1254
  %3383 = load i32, i32* %arrayidx464.i3982, align 4, !dbg !1254
  %xor465.i3983 = xor i32 %3381, %3383, !dbg !1254
  store i32 %xor465.i3983, i32* %t.i3472, align 4, !dbg !1254
  %3384 = load i32, i32* %t.i3472, align 4, !dbg !705
  %3385 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3384) #7, !dbg !705, !srcloc !149
  store i32 %3385, i32* %ret466.i3498, align 4, !dbg !705
  %3386 = load i32, i32* %ret466.i3498, align 4, !dbg !705
  store i32 %3386, i32* %tmp467.i3499, align 4, !dbg !705
  %3387 = load i32, i32* %tmp467.i3499, align 4, !dbg !705
  store i32 %3387, i32* %t.i3472, align 4, !dbg !1254
  %3388 = load i32, i32* %u.i3473, align 4, !dbg !1254
  %shr468.i3984 = lshr i32 %3388, 2, !dbg !1254
  %and469.i3985 = and i32 %shr468.i3984, 63, !dbg !1254
  %idxprom470.i3986 = zext i32 %and469.i3985 to i64, !dbg !1254
  %arrayidx471.i3987 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom470.i3986, !dbg !1254
  %3389 = load i32, i32* %arrayidx471.i3987, align 4, !dbg !1254
  %3390 = load i32, i32* %u.i3473, align 4, !dbg !1254
  %shr472.i3988 = lshr i32 %3390, 10, !dbg !1254
  %and473.i3989 = and i32 %shr472.i3988, 63, !dbg !1254
  %idxprom474.i3990 = zext i32 %and473.i3989 to i64, !dbg !1254
  %arrayidx475.i3991 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom474.i3990, !dbg !1254
  %3391 = load i32, i32* %arrayidx475.i3991, align 4, !dbg !1254
  %xor476.i3992 = xor i32 %3389, %3391, !dbg !1254
  %3392 = load i32, i32* %u.i3473, align 4, !dbg !1254
  %shr477.i3993 = lshr i32 %3392, 18, !dbg !1254
  %and478.i3994 = and i32 %shr477.i3993, 63, !dbg !1254
  %idxprom479.i3995 = zext i32 %and478.i3994 to i64, !dbg !1254
  %arrayidx480.i3996 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom479.i3995, !dbg !1254
  %3393 = load i32, i32* %arrayidx480.i3996, align 4, !dbg !1254
  %xor481.i3997 = xor i32 %xor476.i3992, %3393, !dbg !1254
  %3394 = load i32, i32* %u.i3473, align 4, !dbg !1254
  %shr482.i3998 = lshr i32 %3394, 26, !dbg !1254
  %idxprom484.i3999 = zext i32 %shr482.i3998 to i64, !dbg !1254
  %arrayidx485.i4000 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom484.i3999, !dbg !1254
  %3395 = load i32, i32* %arrayidx485.i4000, align 4, !dbg !1254
  %xor486.i4001 = xor i32 %xor481.i3997, %3395, !dbg !1254
  %3396 = load i32, i32* %t.i3472, align 4, !dbg !1254
  %shr487.i4002 = lshr i32 %3396, 2, !dbg !1254
  %and488.i4003 = and i32 %shr487.i4002, 63, !dbg !1254
  %idxprom489.i4004 = zext i32 %and488.i4003 to i64, !dbg !1254
  %arrayidx490.i4005 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom489.i4004, !dbg !1254
  %3397 = load i32, i32* %arrayidx490.i4005, align 4, !dbg !1254
  %xor491.i4006 = xor i32 %xor486.i4001, %3397, !dbg !1254
  %3398 = load i32, i32* %t.i3472, align 4, !dbg !1254
  %shr492.i4007 = lshr i32 %3398, 10, !dbg !1254
  %and493.i4008 = and i32 %shr492.i4007, 63, !dbg !1254
  %idxprom494.i4009 = zext i32 %and493.i4008 to i64, !dbg !1254
  %arrayidx495.i4010 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom494.i4009, !dbg !1254
  %3399 = load i32, i32* %arrayidx495.i4010, align 4, !dbg !1254
  %xor496.i4011 = xor i32 %xor491.i4006, %3399, !dbg !1254
  %3400 = load i32, i32* %t.i3472, align 4, !dbg !1254
  %shr497.i4012 = lshr i32 %3400, 18, !dbg !1254
  %and498.i4013 = and i32 %shr497.i4012, 63, !dbg !1254
  %idxprom499.i4014 = zext i32 %and498.i4013 to i64, !dbg !1254
  %arrayidx500.i4015 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom499.i4014, !dbg !1254
  %3401 = load i32, i32* %arrayidx500.i4015, align 4, !dbg !1254
  %xor501.i4016 = xor i32 %xor496.i4011, %3401, !dbg !1254
  %3402 = load i32, i32* %t.i3472, align 4, !dbg !1254
  %shr502.i4017 = lshr i32 %3402, 26, !dbg !1254
  %idxprom504.i4018 = zext i32 %shr502.i4017 to i64, !dbg !1254
  %arrayidx505.i4019 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom504.i4018, !dbg !1254
  %3403 = load i32, i32* %arrayidx505.i4019, align 4, !dbg !1254
  %xor506.i4020 = xor i32 %xor501.i4016, %3403, !dbg !1254
  %3404 = load i32, i32* %r.i3471, align 4, !dbg !1254
  %xor507.i4021 = xor i32 %3404, %xor506.i4020, !dbg !1254
  store i32 %xor507.i4021, i32* %r.i3471, align 4, !dbg !1254
  %3405 = load i32, i32* %r.i3471, align 4, !dbg !1255
  %3406 = load i32*, i32** %s.i3474, align 8, !dbg !1255
  %arrayidx508.i4022 = getelementptr inbounds i32, i32* %3406, i64 20, !dbg !1255
  %3407 = load i32, i32* %arrayidx508.i4022, align 4, !dbg !1255
  %xor509.i4023 = xor i32 %3405, %3407, !dbg !1255
  store i32 %xor509.i4023, i32* %u.i3473, align 4, !dbg !1255
  %3408 = load i32, i32* %r.i3471, align 4, !dbg !1255
  %3409 = load i32*, i32** %s.i3474, align 8, !dbg !1255
  %arrayidx510.i4024 = getelementptr inbounds i32, i32* %3409, i64 21, !dbg !1255
  %3410 = load i32, i32* %arrayidx510.i4024, align 4, !dbg !1255
  %xor511.i4025 = xor i32 %3408, %3410, !dbg !1255
  store i32 %xor511.i4025, i32* %t.i3472, align 4, !dbg !1255
  %3411 = load i32, i32* %t.i3472, align 4, !dbg !706
  %3412 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3411) #7, !dbg !706, !srcloc !155
  store i32 %3412, i32* %ret512.i3500, align 4, !dbg !706
  %3413 = load i32, i32* %ret512.i3500, align 4, !dbg !706
  store i32 %3413, i32* %tmp513.i3501, align 4, !dbg !706
  %3414 = load i32, i32* %tmp513.i3501, align 4, !dbg !706
  store i32 %3414, i32* %t.i3472, align 4, !dbg !1255
  %3415 = load i32, i32* %u.i3473, align 4, !dbg !1255
  %shr514.i4026 = lshr i32 %3415, 2, !dbg !1255
  %and515.i4027 = and i32 %shr514.i4026, 63, !dbg !1255
  %idxprom516.i4028 = zext i32 %and515.i4027 to i64, !dbg !1255
  %arrayidx517.i4029 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom516.i4028, !dbg !1255
  %3416 = load i32, i32* %arrayidx517.i4029, align 4, !dbg !1255
  %3417 = load i32, i32* %u.i3473, align 4, !dbg !1255
  %shr518.i4030 = lshr i32 %3417, 10, !dbg !1255
  %and519.i4031 = and i32 %shr518.i4030, 63, !dbg !1255
  %idxprom520.i4032 = zext i32 %and519.i4031 to i64, !dbg !1255
  %arrayidx521.i4033 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom520.i4032, !dbg !1255
  %3418 = load i32, i32* %arrayidx521.i4033, align 4, !dbg !1255
  %xor522.i4034 = xor i32 %3416, %3418, !dbg !1255
  %3419 = load i32, i32* %u.i3473, align 4, !dbg !1255
  %shr523.i4035 = lshr i32 %3419, 18, !dbg !1255
  %and524.i4036 = and i32 %shr523.i4035, 63, !dbg !1255
  %idxprom525.i4037 = zext i32 %and524.i4036 to i64, !dbg !1255
  %arrayidx526.i4038 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom525.i4037, !dbg !1255
  %3420 = load i32, i32* %arrayidx526.i4038, align 4, !dbg !1255
  %xor527.i4039 = xor i32 %xor522.i4034, %3420, !dbg !1255
  %3421 = load i32, i32* %u.i3473, align 4, !dbg !1255
  %shr528.i4040 = lshr i32 %3421, 26, !dbg !1255
  %idxprom530.i4041 = zext i32 %shr528.i4040 to i64, !dbg !1255
  %arrayidx531.i4042 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom530.i4041, !dbg !1255
  %3422 = load i32, i32* %arrayidx531.i4042, align 4, !dbg !1255
  %xor532.i4043 = xor i32 %xor527.i4039, %3422, !dbg !1255
  %3423 = load i32, i32* %t.i3472, align 4, !dbg !1255
  %shr533.i4044 = lshr i32 %3423, 2, !dbg !1255
  %and534.i4045 = and i32 %shr533.i4044, 63, !dbg !1255
  %idxprom535.i4046 = zext i32 %and534.i4045 to i64, !dbg !1255
  %arrayidx536.i4047 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom535.i4046, !dbg !1255
  %3424 = load i32, i32* %arrayidx536.i4047, align 4, !dbg !1255
  %xor537.i4048 = xor i32 %xor532.i4043, %3424, !dbg !1255
  %3425 = load i32, i32* %t.i3472, align 4, !dbg !1255
  %shr538.i4049 = lshr i32 %3425, 10, !dbg !1255
  %and539.i4050 = and i32 %shr538.i4049, 63, !dbg !1255
  %idxprom540.i4051 = zext i32 %and539.i4050 to i64, !dbg !1255
  %arrayidx541.i4052 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom540.i4051, !dbg !1255
  %3426 = load i32, i32* %arrayidx541.i4052, align 4, !dbg !1255
  %xor542.i4053 = xor i32 %xor537.i4048, %3426, !dbg !1255
  %3427 = load i32, i32* %t.i3472, align 4, !dbg !1255
  %shr543.i4054 = lshr i32 %3427, 18, !dbg !1255
  %and544.i4055 = and i32 %shr543.i4054, 63, !dbg !1255
  %idxprom545.i4056 = zext i32 %and544.i4055 to i64, !dbg !1255
  %arrayidx546.i4057 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom545.i4056, !dbg !1255
  %3428 = load i32, i32* %arrayidx546.i4057, align 4, !dbg !1255
  %xor547.i4058 = xor i32 %xor542.i4053, %3428, !dbg !1255
  %3429 = load i32, i32* %t.i3472, align 4, !dbg !1255
  %shr548.i4059 = lshr i32 %3429, 26, !dbg !1255
  %idxprom550.i4060 = zext i32 %shr548.i4059 to i64, !dbg !1255
  %arrayidx551.i4061 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom550.i4060, !dbg !1255
  %3430 = load i32, i32* %arrayidx551.i4061, align 4, !dbg !1255
  %xor552.i4062 = xor i32 %xor547.i4058, %3430, !dbg !1255
  %3431 = load i32, i32* %l.i3470, align 4, !dbg !1255
  %xor553.i4063 = xor i32 %3431, %xor552.i4062, !dbg !1255
  store i32 %xor553.i4063, i32* %l.i3470, align 4, !dbg !1255
  %3432 = load i32, i32* %l.i3470, align 4, !dbg !1256
  %3433 = load i32*, i32** %s.i3474, align 8, !dbg !1256
  %arrayidx554.i4064 = getelementptr inbounds i32, i32* %3433, i64 22, !dbg !1256
  %3434 = load i32, i32* %arrayidx554.i4064, align 4, !dbg !1256
  %xor555.i4065 = xor i32 %3432, %3434, !dbg !1256
  store i32 %xor555.i4065, i32* %u.i3473, align 4, !dbg !1256
  %3435 = load i32, i32* %l.i3470, align 4, !dbg !1256
  %3436 = load i32*, i32** %s.i3474, align 8, !dbg !1256
  %arrayidx556.i4066 = getelementptr inbounds i32, i32* %3436, i64 23, !dbg !1256
  %3437 = load i32, i32* %arrayidx556.i4066, align 4, !dbg !1256
  %xor557.i4067 = xor i32 %3435, %3437, !dbg !1256
  store i32 %xor557.i4067, i32* %t.i3472, align 4, !dbg !1256
  %3438 = load i32, i32* %t.i3472, align 4, !dbg !707
  %3439 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3438) #7, !dbg !707, !srcloc !161
  store i32 %3439, i32* %ret558.i3502, align 4, !dbg !707
  %3440 = load i32, i32* %ret558.i3502, align 4, !dbg !707
  store i32 %3440, i32* %tmp559.i3503, align 4, !dbg !707
  %3441 = load i32, i32* %tmp559.i3503, align 4, !dbg !707
  store i32 %3441, i32* %t.i3472, align 4, !dbg !1256
  %3442 = load i32, i32* %u.i3473, align 4, !dbg !1256
  %shr560.i4068 = lshr i32 %3442, 2, !dbg !1256
  %and561.i4069 = and i32 %shr560.i4068, 63, !dbg !1256
  %idxprom562.i4070 = zext i32 %and561.i4069 to i64, !dbg !1256
  %arrayidx563.i4071 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom562.i4070, !dbg !1256
  %3443 = load i32, i32* %arrayidx563.i4071, align 4, !dbg !1256
  %3444 = load i32, i32* %u.i3473, align 4, !dbg !1256
  %shr564.i4072 = lshr i32 %3444, 10, !dbg !1256
  %and565.i4073 = and i32 %shr564.i4072, 63, !dbg !1256
  %idxprom566.i4074 = zext i32 %and565.i4073 to i64, !dbg !1256
  %arrayidx567.i4075 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom566.i4074, !dbg !1256
  %3445 = load i32, i32* %arrayidx567.i4075, align 4, !dbg !1256
  %xor568.i4076 = xor i32 %3443, %3445, !dbg !1256
  %3446 = load i32, i32* %u.i3473, align 4, !dbg !1256
  %shr569.i4077 = lshr i32 %3446, 18, !dbg !1256
  %and570.i4078 = and i32 %shr569.i4077, 63, !dbg !1256
  %idxprom571.i4079 = zext i32 %and570.i4078 to i64, !dbg !1256
  %arrayidx572.i4080 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom571.i4079, !dbg !1256
  %3447 = load i32, i32* %arrayidx572.i4080, align 4, !dbg !1256
  %xor573.i4081 = xor i32 %xor568.i4076, %3447, !dbg !1256
  %3448 = load i32, i32* %u.i3473, align 4, !dbg !1256
  %shr574.i4082 = lshr i32 %3448, 26, !dbg !1256
  %idxprom576.i4083 = zext i32 %shr574.i4082 to i64, !dbg !1256
  %arrayidx577.i4084 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom576.i4083, !dbg !1256
  %3449 = load i32, i32* %arrayidx577.i4084, align 4, !dbg !1256
  %xor578.i4085 = xor i32 %xor573.i4081, %3449, !dbg !1256
  %3450 = load i32, i32* %t.i3472, align 4, !dbg !1256
  %shr579.i4086 = lshr i32 %3450, 2, !dbg !1256
  %and580.i4087 = and i32 %shr579.i4086, 63, !dbg !1256
  %idxprom581.i4088 = zext i32 %and580.i4087 to i64, !dbg !1256
  %arrayidx582.i4089 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom581.i4088, !dbg !1256
  %3451 = load i32, i32* %arrayidx582.i4089, align 4, !dbg !1256
  %xor583.i4090 = xor i32 %xor578.i4085, %3451, !dbg !1256
  %3452 = load i32, i32* %t.i3472, align 4, !dbg !1256
  %shr584.i4091 = lshr i32 %3452, 10, !dbg !1256
  %and585.i4092 = and i32 %shr584.i4091, 63, !dbg !1256
  %idxprom586.i4093 = zext i32 %and585.i4092 to i64, !dbg !1256
  %arrayidx587.i4094 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom586.i4093, !dbg !1256
  %3453 = load i32, i32* %arrayidx587.i4094, align 4, !dbg !1256
  %xor588.i4095 = xor i32 %xor583.i4090, %3453, !dbg !1256
  %3454 = load i32, i32* %t.i3472, align 4, !dbg !1256
  %shr589.i4096 = lshr i32 %3454, 18, !dbg !1256
  %and590.i4097 = and i32 %shr589.i4096, 63, !dbg !1256
  %idxprom591.i4098 = zext i32 %and590.i4097 to i64, !dbg !1256
  %arrayidx592.i4099 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom591.i4098, !dbg !1256
  %3455 = load i32, i32* %arrayidx592.i4099, align 4, !dbg !1256
  %xor593.i4100 = xor i32 %xor588.i4095, %3455, !dbg !1256
  %3456 = load i32, i32* %t.i3472, align 4, !dbg !1256
  %shr594.i4101 = lshr i32 %3456, 26, !dbg !1256
  %idxprom596.i4102 = zext i32 %shr594.i4101 to i64, !dbg !1256
  %arrayidx597.i4103 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom596.i4102, !dbg !1256
  %3457 = load i32, i32* %arrayidx597.i4103, align 4, !dbg !1256
  %xor598.i4104 = xor i32 %xor593.i4100, %3457, !dbg !1256
  %3458 = load i32, i32* %r.i3471, align 4, !dbg !1256
  %xor599.i4105 = xor i32 %3458, %xor598.i4104, !dbg !1256
  store i32 %xor599.i4105, i32* %r.i3471, align 4, !dbg !1256
  %3459 = load i32, i32* %r.i3471, align 4, !dbg !1257
  %3460 = load i32*, i32** %s.i3474, align 8, !dbg !1257
  %arrayidx600.i4106 = getelementptr inbounds i32, i32* %3460, i64 24, !dbg !1257
  %3461 = load i32, i32* %arrayidx600.i4106, align 4, !dbg !1257
  %xor601.i4107 = xor i32 %3459, %3461, !dbg !1257
  store i32 %xor601.i4107, i32* %u.i3473, align 4, !dbg !1257
  %3462 = load i32, i32* %r.i3471, align 4, !dbg !1257
  %3463 = load i32*, i32** %s.i3474, align 8, !dbg !1257
  %arrayidx602.i4108 = getelementptr inbounds i32, i32* %3463, i64 25, !dbg !1257
  %3464 = load i32, i32* %arrayidx602.i4108, align 4, !dbg !1257
  %xor603.i4109 = xor i32 %3462, %3464, !dbg !1257
  store i32 %xor603.i4109, i32* %t.i3472, align 4, !dbg !1257
  %3465 = load i32, i32* %t.i3472, align 4, !dbg !708
  %3466 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3465) #7, !dbg !708, !srcloc !167
  store i32 %3466, i32* %ret604.i3504, align 4, !dbg !708
  %3467 = load i32, i32* %ret604.i3504, align 4, !dbg !708
  store i32 %3467, i32* %tmp605.i3505, align 4, !dbg !708
  %3468 = load i32, i32* %tmp605.i3505, align 4, !dbg !708
  store i32 %3468, i32* %t.i3472, align 4, !dbg !1257
  %3469 = load i32, i32* %u.i3473, align 4, !dbg !1257
  %shr606.i4110 = lshr i32 %3469, 2, !dbg !1257
  %and607.i4111 = and i32 %shr606.i4110, 63, !dbg !1257
  %idxprom608.i4112 = zext i32 %and607.i4111 to i64, !dbg !1257
  %arrayidx609.i4113 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom608.i4112, !dbg !1257
  %3470 = load i32, i32* %arrayidx609.i4113, align 4, !dbg !1257
  %3471 = load i32, i32* %u.i3473, align 4, !dbg !1257
  %shr610.i4114 = lshr i32 %3471, 10, !dbg !1257
  %and611.i4115 = and i32 %shr610.i4114, 63, !dbg !1257
  %idxprom612.i4116 = zext i32 %and611.i4115 to i64, !dbg !1257
  %arrayidx613.i4117 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom612.i4116, !dbg !1257
  %3472 = load i32, i32* %arrayidx613.i4117, align 4, !dbg !1257
  %xor614.i4118 = xor i32 %3470, %3472, !dbg !1257
  %3473 = load i32, i32* %u.i3473, align 4, !dbg !1257
  %shr615.i4119 = lshr i32 %3473, 18, !dbg !1257
  %and616.i4120 = and i32 %shr615.i4119, 63, !dbg !1257
  %idxprom617.i4121 = zext i32 %and616.i4120 to i64, !dbg !1257
  %arrayidx618.i4122 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom617.i4121, !dbg !1257
  %3474 = load i32, i32* %arrayidx618.i4122, align 4, !dbg !1257
  %xor619.i4123 = xor i32 %xor614.i4118, %3474, !dbg !1257
  %3475 = load i32, i32* %u.i3473, align 4, !dbg !1257
  %shr620.i4124 = lshr i32 %3475, 26, !dbg !1257
  %idxprom622.i4125 = zext i32 %shr620.i4124 to i64, !dbg !1257
  %arrayidx623.i4126 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom622.i4125, !dbg !1257
  %3476 = load i32, i32* %arrayidx623.i4126, align 4, !dbg !1257
  %xor624.i4127 = xor i32 %xor619.i4123, %3476, !dbg !1257
  %3477 = load i32, i32* %t.i3472, align 4, !dbg !1257
  %shr625.i4128 = lshr i32 %3477, 2, !dbg !1257
  %and626.i4129 = and i32 %shr625.i4128, 63, !dbg !1257
  %idxprom627.i4130 = zext i32 %and626.i4129 to i64, !dbg !1257
  %arrayidx628.i4131 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom627.i4130, !dbg !1257
  %3478 = load i32, i32* %arrayidx628.i4131, align 4, !dbg !1257
  %xor629.i4132 = xor i32 %xor624.i4127, %3478, !dbg !1257
  %3479 = load i32, i32* %t.i3472, align 4, !dbg !1257
  %shr630.i4133 = lshr i32 %3479, 10, !dbg !1257
  %and631.i4134 = and i32 %shr630.i4133, 63, !dbg !1257
  %idxprom632.i4135 = zext i32 %and631.i4134 to i64, !dbg !1257
  %arrayidx633.i4136 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom632.i4135, !dbg !1257
  %3480 = load i32, i32* %arrayidx633.i4136, align 4, !dbg !1257
  %xor634.i4137 = xor i32 %xor629.i4132, %3480, !dbg !1257
  %3481 = load i32, i32* %t.i3472, align 4, !dbg !1257
  %shr635.i4138 = lshr i32 %3481, 18, !dbg !1257
  %and636.i4139 = and i32 %shr635.i4138, 63, !dbg !1257
  %idxprom637.i4140 = zext i32 %and636.i4139 to i64, !dbg !1257
  %arrayidx638.i4141 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom637.i4140, !dbg !1257
  %3482 = load i32, i32* %arrayidx638.i4141, align 4, !dbg !1257
  %xor639.i4142 = xor i32 %xor634.i4137, %3482, !dbg !1257
  %3483 = load i32, i32* %t.i3472, align 4, !dbg !1257
  %shr640.i4143 = lshr i32 %3483, 26, !dbg !1257
  %idxprom642.i4144 = zext i32 %shr640.i4143 to i64, !dbg !1257
  %arrayidx643.i4145 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom642.i4144, !dbg !1257
  %3484 = load i32, i32* %arrayidx643.i4145, align 4, !dbg !1257
  %xor644.i4146 = xor i32 %xor639.i4142, %3484, !dbg !1257
  %3485 = load i32, i32* %l.i3470, align 4, !dbg !1257
  %xor645.i4147 = xor i32 %3485, %xor644.i4146, !dbg !1257
  store i32 %xor645.i4147, i32* %l.i3470, align 4, !dbg !1257
  %3486 = load i32, i32* %l.i3470, align 4, !dbg !1258
  %3487 = load i32*, i32** %s.i3474, align 8, !dbg !1258
  %arrayidx646.i4148 = getelementptr inbounds i32, i32* %3487, i64 26, !dbg !1258
  %3488 = load i32, i32* %arrayidx646.i4148, align 4, !dbg !1258
  %xor647.i4149 = xor i32 %3486, %3488, !dbg !1258
  store i32 %xor647.i4149, i32* %u.i3473, align 4, !dbg !1258
  %3489 = load i32, i32* %l.i3470, align 4, !dbg !1258
  %3490 = load i32*, i32** %s.i3474, align 8, !dbg !1258
  %arrayidx648.i4150 = getelementptr inbounds i32, i32* %3490, i64 27, !dbg !1258
  %3491 = load i32, i32* %arrayidx648.i4150, align 4, !dbg !1258
  %xor649.i4151 = xor i32 %3489, %3491, !dbg !1258
  store i32 %xor649.i4151, i32* %t.i3472, align 4, !dbg !1258
  %3492 = load i32, i32* %t.i3472, align 4, !dbg !709
  %3493 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3492) #7, !dbg !709, !srcloc !173
  store i32 %3493, i32* %ret650.i3506, align 4, !dbg !709
  %3494 = load i32, i32* %ret650.i3506, align 4, !dbg !709
  store i32 %3494, i32* %tmp651.i3507, align 4, !dbg !709
  %3495 = load i32, i32* %tmp651.i3507, align 4, !dbg !709
  store i32 %3495, i32* %t.i3472, align 4, !dbg !1258
  %3496 = load i32, i32* %u.i3473, align 4, !dbg !1258
  %shr652.i4152 = lshr i32 %3496, 2, !dbg !1258
  %and653.i4153 = and i32 %shr652.i4152, 63, !dbg !1258
  %idxprom654.i4154 = zext i32 %and653.i4153 to i64, !dbg !1258
  %arrayidx655.i4155 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom654.i4154, !dbg !1258
  %3497 = load i32, i32* %arrayidx655.i4155, align 4, !dbg !1258
  %3498 = load i32, i32* %u.i3473, align 4, !dbg !1258
  %shr656.i4156 = lshr i32 %3498, 10, !dbg !1258
  %and657.i4157 = and i32 %shr656.i4156, 63, !dbg !1258
  %idxprom658.i4158 = zext i32 %and657.i4157 to i64, !dbg !1258
  %arrayidx659.i4159 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom658.i4158, !dbg !1258
  %3499 = load i32, i32* %arrayidx659.i4159, align 4, !dbg !1258
  %xor660.i4160 = xor i32 %3497, %3499, !dbg !1258
  %3500 = load i32, i32* %u.i3473, align 4, !dbg !1258
  %shr661.i4161 = lshr i32 %3500, 18, !dbg !1258
  %and662.i4162 = and i32 %shr661.i4161, 63, !dbg !1258
  %idxprom663.i4163 = zext i32 %and662.i4162 to i64, !dbg !1258
  %arrayidx664.i4164 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom663.i4163, !dbg !1258
  %3501 = load i32, i32* %arrayidx664.i4164, align 4, !dbg !1258
  %xor665.i4165 = xor i32 %xor660.i4160, %3501, !dbg !1258
  %3502 = load i32, i32* %u.i3473, align 4, !dbg !1258
  %shr666.i4166 = lshr i32 %3502, 26, !dbg !1258
  %idxprom668.i4167 = zext i32 %shr666.i4166 to i64, !dbg !1258
  %arrayidx669.i4168 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom668.i4167, !dbg !1258
  %3503 = load i32, i32* %arrayidx669.i4168, align 4, !dbg !1258
  %xor670.i4169 = xor i32 %xor665.i4165, %3503, !dbg !1258
  %3504 = load i32, i32* %t.i3472, align 4, !dbg !1258
  %shr671.i4170 = lshr i32 %3504, 2, !dbg !1258
  %and672.i4171 = and i32 %shr671.i4170, 63, !dbg !1258
  %idxprom673.i4172 = zext i32 %and672.i4171 to i64, !dbg !1258
  %arrayidx674.i4173 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom673.i4172, !dbg !1258
  %3505 = load i32, i32* %arrayidx674.i4173, align 4, !dbg !1258
  %xor675.i4174 = xor i32 %xor670.i4169, %3505, !dbg !1258
  %3506 = load i32, i32* %t.i3472, align 4, !dbg !1258
  %shr676.i4175 = lshr i32 %3506, 10, !dbg !1258
  %and677.i4176 = and i32 %shr676.i4175, 63, !dbg !1258
  %idxprom678.i4177 = zext i32 %and677.i4176 to i64, !dbg !1258
  %arrayidx679.i4178 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom678.i4177, !dbg !1258
  %3507 = load i32, i32* %arrayidx679.i4178, align 4, !dbg !1258
  %xor680.i4179 = xor i32 %xor675.i4174, %3507, !dbg !1258
  %3508 = load i32, i32* %t.i3472, align 4, !dbg !1258
  %shr681.i4180 = lshr i32 %3508, 18, !dbg !1258
  %and682.i4181 = and i32 %shr681.i4180, 63, !dbg !1258
  %idxprom683.i4182 = zext i32 %and682.i4181 to i64, !dbg !1258
  %arrayidx684.i4183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom683.i4182, !dbg !1258
  %3509 = load i32, i32* %arrayidx684.i4183, align 4, !dbg !1258
  %xor685.i4184 = xor i32 %xor680.i4179, %3509, !dbg !1258
  %3510 = load i32, i32* %t.i3472, align 4, !dbg !1258
  %shr686.i4185 = lshr i32 %3510, 26, !dbg !1258
  %idxprom688.i4186 = zext i32 %shr686.i4185 to i64, !dbg !1258
  %arrayidx689.i4187 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom688.i4186, !dbg !1258
  %3511 = load i32, i32* %arrayidx689.i4187, align 4, !dbg !1258
  %xor690.i4188 = xor i32 %xor685.i4184, %3511, !dbg !1258
  %3512 = load i32, i32* %r.i3471, align 4, !dbg !1258
  %xor691.i4189 = xor i32 %3512, %xor690.i4188, !dbg !1258
  store i32 %xor691.i4189, i32* %r.i3471, align 4, !dbg !1258
  %3513 = load i32, i32* %r.i3471, align 4, !dbg !1259
  %3514 = load i32*, i32** %s.i3474, align 8, !dbg !1259
  %arrayidx692.i4190 = getelementptr inbounds i32, i32* %3514, i64 28, !dbg !1259
  %3515 = load i32, i32* %arrayidx692.i4190, align 4, !dbg !1259
  %xor693.i4191 = xor i32 %3513, %3515, !dbg !1259
  store i32 %xor693.i4191, i32* %u.i3473, align 4, !dbg !1259
  %3516 = load i32, i32* %r.i3471, align 4, !dbg !1259
  %3517 = load i32*, i32** %s.i3474, align 8, !dbg !1259
  %arrayidx694.i4192 = getelementptr inbounds i32, i32* %3517, i64 29, !dbg !1259
  %3518 = load i32, i32* %arrayidx694.i4192, align 4, !dbg !1259
  %xor695.i4193 = xor i32 %3516, %3518, !dbg !1259
  store i32 %xor695.i4193, i32* %t.i3472, align 4, !dbg !1259
  %3519 = load i32, i32* %t.i3472, align 4, !dbg !710
  %3520 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3519) #7, !dbg !710, !srcloc !179
  store i32 %3520, i32* %ret696.i3508, align 4, !dbg !710
  %3521 = load i32, i32* %ret696.i3508, align 4, !dbg !710
  store i32 %3521, i32* %tmp697.i3509, align 4, !dbg !710
  %3522 = load i32, i32* %tmp697.i3509, align 4, !dbg !710
  store i32 %3522, i32* %t.i3472, align 4, !dbg !1259
  %3523 = load i32, i32* %u.i3473, align 4, !dbg !1259
  %shr698.i4194 = lshr i32 %3523, 2, !dbg !1259
  %and699.i4195 = and i32 %shr698.i4194, 63, !dbg !1259
  %idxprom700.i4196 = zext i32 %and699.i4195 to i64, !dbg !1259
  %arrayidx701.i4197 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom700.i4196, !dbg !1259
  %3524 = load i32, i32* %arrayidx701.i4197, align 4, !dbg !1259
  %3525 = load i32, i32* %u.i3473, align 4, !dbg !1259
  %shr702.i4198 = lshr i32 %3525, 10, !dbg !1259
  %and703.i4199 = and i32 %shr702.i4198, 63, !dbg !1259
  %idxprom704.i4200 = zext i32 %and703.i4199 to i64, !dbg !1259
  %arrayidx705.i4201 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom704.i4200, !dbg !1259
  %3526 = load i32, i32* %arrayidx705.i4201, align 4, !dbg !1259
  %xor706.i4202 = xor i32 %3524, %3526, !dbg !1259
  %3527 = load i32, i32* %u.i3473, align 4, !dbg !1259
  %shr707.i4203 = lshr i32 %3527, 18, !dbg !1259
  %and708.i4204 = and i32 %shr707.i4203, 63, !dbg !1259
  %idxprom709.i4205 = zext i32 %and708.i4204 to i64, !dbg !1259
  %arrayidx710.i4206 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom709.i4205, !dbg !1259
  %3528 = load i32, i32* %arrayidx710.i4206, align 4, !dbg !1259
  %xor711.i4207 = xor i32 %xor706.i4202, %3528, !dbg !1259
  %3529 = load i32, i32* %u.i3473, align 4, !dbg !1259
  %shr712.i4208 = lshr i32 %3529, 26, !dbg !1259
  %idxprom714.i4209 = zext i32 %shr712.i4208 to i64, !dbg !1259
  %arrayidx715.i4210 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom714.i4209, !dbg !1259
  %3530 = load i32, i32* %arrayidx715.i4210, align 4, !dbg !1259
  %xor716.i4211 = xor i32 %xor711.i4207, %3530, !dbg !1259
  %3531 = load i32, i32* %t.i3472, align 4, !dbg !1259
  %shr717.i4212 = lshr i32 %3531, 2, !dbg !1259
  %and718.i4213 = and i32 %shr717.i4212, 63, !dbg !1259
  %idxprom719.i4214 = zext i32 %and718.i4213 to i64, !dbg !1259
  %arrayidx720.i4215 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom719.i4214, !dbg !1259
  %3532 = load i32, i32* %arrayidx720.i4215, align 4, !dbg !1259
  %xor721.i4216 = xor i32 %xor716.i4211, %3532, !dbg !1259
  %3533 = load i32, i32* %t.i3472, align 4, !dbg !1259
  %shr722.i4217 = lshr i32 %3533, 10, !dbg !1259
  %and723.i4218 = and i32 %shr722.i4217, 63, !dbg !1259
  %idxprom724.i4219 = zext i32 %and723.i4218 to i64, !dbg !1259
  %arrayidx725.i4220 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom724.i4219, !dbg !1259
  %3534 = load i32, i32* %arrayidx725.i4220, align 4, !dbg !1259
  %xor726.i4221 = xor i32 %xor721.i4216, %3534, !dbg !1259
  %3535 = load i32, i32* %t.i3472, align 4, !dbg !1259
  %shr727.i4222 = lshr i32 %3535, 18, !dbg !1259
  %and728.i4223 = and i32 %shr727.i4222, 63, !dbg !1259
  %idxprom729.i4224 = zext i32 %and728.i4223 to i64, !dbg !1259
  %arrayidx730.i4225 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom729.i4224, !dbg !1259
  %3536 = load i32, i32* %arrayidx730.i4225, align 4, !dbg !1259
  %xor731.i4226 = xor i32 %xor726.i4221, %3536, !dbg !1259
  %3537 = load i32, i32* %t.i3472, align 4, !dbg !1259
  %shr732.i4227 = lshr i32 %3537, 26, !dbg !1259
  %idxprom734.i4228 = zext i32 %shr732.i4227 to i64, !dbg !1259
  %arrayidx735.i4229 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom734.i4228, !dbg !1259
  %3538 = load i32, i32* %arrayidx735.i4229, align 4, !dbg !1259
  %xor736.i4230 = xor i32 %xor731.i4226, %3538, !dbg !1259
  %3539 = load i32, i32* %l.i3470, align 4, !dbg !1259
  %xor737.i4231 = xor i32 %3539, %xor736.i4230, !dbg !1259
  store i32 %xor737.i4231, i32* %l.i3470, align 4, !dbg !1259
  %3540 = load i32, i32* %l.i3470, align 4, !dbg !1260
  %3541 = load i32*, i32** %s.i3474, align 8, !dbg !1260
  %arrayidx738.i4232 = getelementptr inbounds i32, i32* %3541, i64 30, !dbg !1260
  %3542 = load i32, i32* %arrayidx738.i4232, align 4, !dbg !1260
  %xor739.i4233 = xor i32 %3540, %3542, !dbg !1260
  store i32 %xor739.i4233, i32* %u.i3473, align 4, !dbg !1260
  %3543 = load i32, i32* %l.i3470, align 4, !dbg !1260
  %3544 = load i32*, i32** %s.i3474, align 8, !dbg !1260
  %arrayidx740.i4234 = getelementptr inbounds i32, i32* %3544, i64 31, !dbg !1260
  %3545 = load i32, i32* %arrayidx740.i4234, align 4, !dbg !1260
  %xor741.i4235 = xor i32 %3543, %3545, !dbg !1260
  store i32 %xor741.i4235, i32* %t.i3472, align 4, !dbg !1260
  %3546 = load i32, i32* %t.i3472, align 4, !dbg !711
  %3547 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3546) #7, !dbg !711, !srcloc !185
  store i32 %3547, i32* %ret742.i3510, align 4, !dbg !711
  %3548 = load i32, i32* %ret742.i3510, align 4, !dbg !711
  store i32 %3548, i32* %tmp743.i3511, align 4, !dbg !711
  %3549 = load i32, i32* %tmp743.i3511, align 4, !dbg !711
  store i32 %3549, i32* %t.i3472, align 4, !dbg !1260
  %3550 = load i32, i32* %u.i3473, align 4, !dbg !1260
  %shr744.i4236 = lshr i32 %3550, 2, !dbg !1260
  %and745.i4237 = and i32 %shr744.i4236, 63, !dbg !1260
  %idxprom746.i4238 = zext i32 %and745.i4237 to i64, !dbg !1260
  %arrayidx747.i4239 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom746.i4238, !dbg !1260
  %3551 = load i32, i32* %arrayidx747.i4239, align 4, !dbg !1260
  %3552 = load i32, i32* %u.i3473, align 4, !dbg !1260
  %shr748.i4240 = lshr i32 %3552, 10, !dbg !1260
  %and749.i4241 = and i32 %shr748.i4240, 63, !dbg !1260
  %idxprom750.i4242 = zext i32 %and749.i4241 to i64, !dbg !1260
  %arrayidx751.i4243 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom750.i4242, !dbg !1260
  %3553 = load i32, i32* %arrayidx751.i4243, align 4, !dbg !1260
  %xor752.i4244 = xor i32 %3551, %3553, !dbg !1260
  %3554 = load i32, i32* %u.i3473, align 4, !dbg !1260
  %shr753.i4245 = lshr i32 %3554, 18, !dbg !1260
  %and754.i4246 = and i32 %shr753.i4245, 63, !dbg !1260
  %idxprom755.i4247 = zext i32 %and754.i4246 to i64, !dbg !1260
  %arrayidx756.i4248 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom755.i4247, !dbg !1260
  %3555 = load i32, i32* %arrayidx756.i4248, align 4, !dbg !1260
  %xor757.i4249 = xor i32 %xor752.i4244, %3555, !dbg !1260
  %3556 = load i32, i32* %u.i3473, align 4, !dbg !1260
  %shr758.i4250 = lshr i32 %3556, 26, !dbg !1260
  %idxprom760.i4251 = zext i32 %shr758.i4250 to i64, !dbg !1260
  %arrayidx761.i4252 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom760.i4251, !dbg !1260
  %3557 = load i32, i32* %arrayidx761.i4252, align 4, !dbg !1260
  %xor762.i4253 = xor i32 %xor757.i4249, %3557, !dbg !1260
  %3558 = load i32, i32* %t.i3472, align 4, !dbg !1260
  %shr763.i4254 = lshr i32 %3558, 2, !dbg !1260
  %and764.i4255 = and i32 %shr763.i4254, 63, !dbg !1260
  %idxprom765.i4256 = zext i32 %and764.i4255 to i64, !dbg !1260
  %arrayidx766.i4257 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom765.i4256, !dbg !1260
  %3559 = load i32, i32* %arrayidx766.i4257, align 4, !dbg !1260
  %xor767.i4258 = xor i32 %xor762.i4253, %3559, !dbg !1260
  %3560 = load i32, i32* %t.i3472, align 4, !dbg !1260
  %shr768.i4259 = lshr i32 %3560, 10, !dbg !1260
  %and769.i4260 = and i32 %shr768.i4259, 63, !dbg !1260
  %idxprom770.i4261 = zext i32 %and769.i4260 to i64, !dbg !1260
  %arrayidx771.i4262 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom770.i4261, !dbg !1260
  %3561 = load i32, i32* %arrayidx771.i4262, align 4, !dbg !1260
  %xor772.i4263 = xor i32 %xor767.i4258, %3561, !dbg !1260
  %3562 = load i32, i32* %t.i3472, align 4, !dbg !1260
  %shr773.i4264 = lshr i32 %3562, 18, !dbg !1260
  %and774.i4265 = and i32 %shr773.i4264, 63, !dbg !1260
  %idxprom775.i4266 = zext i32 %and774.i4265 to i64, !dbg !1260
  %arrayidx776.i4267 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom775.i4266, !dbg !1260
  %3563 = load i32, i32* %arrayidx776.i4267, align 4, !dbg !1260
  %xor777.i4268 = xor i32 %xor772.i4263, %3563, !dbg !1260
  %3564 = load i32, i32* %t.i3472, align 4, !dbg !1260
  %shr778.i4269 = lshr i32 %3564, 26, !dbg !1260
  %idxprom780.i4270 = zext i32 %shr778.i4269 to i64, !dbg !1260
  %arrayidx781.i4271 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom780.i4270, !dbg !1260
  %3565 = load i32, i32* %arrayidx781.i4271, align 4, !dbg !1260
  %xor782.i4272 = xor i32 %xor777.i4268, %3565, !dbg !1260
  %3566 = load i32, i32* %r.i3471, align 4, !dbg !1260
  %xor783.i4273 = xor i32 %3566, %xor782.i4272, !dbg !1260
  store i32 %xor783.i4273, i32* %r.i3471, align 4, !dbg !1260
  br label %DES_encrypt1.exit4994, !dbg !1261

if.else.i4946:                                    ; preds = %if.then298
  %3567 = load i32, i32* %r.i3471, align 4, !dbg !1262
  %3568 = load i32*, i32** %s.i3474, align 8, !dbg !1262
  %arrayidx784.i4275 = getelementptr inbounds i32, i32* %3568, i64 30, !dbg !1262
  %3569 = load i32, i32* %arrayidx784.i4275, align 4, !dbg !1262
  %xor785.i4276 = xor i32 %3567, %3569, !dbg !1262
  store i32 %xor785.i4276, i32* %u.i3473, align 4, !dbg !1262
  %3570 = load i32, i32* %r.i3471, align 4, !dbg !1262
  %3571 = load i32*, i32** %s.i3474, align 8, !dbg !1262
  %arrayidx786.i4277 = getelementptr inbounds i32, i32* %3571, i64 31, !dbg !1262
  %3572 = load i32, i32* %arrayidx786.i4277, align 4, !dbg !1262
  %xor787.i4278 = xor i32 %3570, %3572, !dbg !1262
  store i32 %xor787.i4278, i32* %t.i3472, align 4, !dbg !1262
  %3573 = load i32, i32* %t.i3472, align 4, !dbg !712
  %3574 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3573) #7, !dbg !712, !srcloc !193
  store i32 %3574, i32* %ret788.i3512, align 4, !dbg !712
  %3575 = load i32, i32* %ret788.i3512, align 4, !dbg !712
  store i32 %3575, i32* %tmp789.i3513, align 4, !dbg !712
  %3576 = load i32, i32* %tmp789.i3513, align 4, !dbg !712
  store i32 %3576, i32* %t.i3472, align 4, !dbg !1262
  %3577 = load i32, i32* %u.i3473, align 4, !dbg !1262
  %shr790.i4279 = lshr i32 %3577, 2, !dbg !1262
  %and791.i4280 = and i32 %shr790.i4279, 63, !dbg !1262
  %idxprom792.i4281 = zext i32 %and791.i4280 to i64, !dbg !1262
  %arrayidx793.i4282 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom792.i4281, !dbg !1262
  %3578 = load i32, i32* %arrayidx793.i4282, align 4, !dbg !1262
  %3579 = load i32, i32* %u.i3473, align 4, !dbg !1262
  %shr794.i4283 = lshr i32 %3579, 10, !dbg !1262
  %and795.i4284 = and i32 %shr794.i4283, 63, !dbg !1262
  %idxprom796.i4285 = zext i32 %and795.i4284 to i64, !dbg !1262
  %arrayidx797.i4286 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom796.i4285, !dbg !1262
  %3580 = load i32, i32* %arrayidx797.i4286, align 4, !dbg !1262
  %xor798.i4287 = xor i32 %3578, %3580, !dbg !1262
  %3581 = load i32, i32* %u.i3473, align 4, !dbg !1262
  %shr799.i4288 = lshr i32 %3581, 18, !dbg !1262
  %and800.i4289 = and i32 %shr799.i4288, 63, !dbg !1262
  %idxprom801.i4290 = zext i32 %and800.i4289 to i64, !dbg !1262
  %arrayidx802.i4291 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom801.i4290, !dbg !1262
  %3582 = load i32, i32* %arrayidx802.i4291, align 4, !dbg !1262
  %xor803.i4292 = xor i32 %xor798.i4287, %3582, !dbg !1262
  %3583 = load i32, i32* %u.i3473, align 4, !dbg !1262
  %shr804.i4293 = lshr i32 %3583, 26, !dbg !1262
  %idxprom806.i4294 = zext i32 %shr804.i4293 to i64, !dbg !1262
  %arrayidx807.i4295 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom806.i4294, !dbg !1262
  %3584 = load i32, i32* %arrayidx807.i4295, align 4, !dbg !1262
  %xor808.i4296 = xor i32 %xor803.i4292, %3584, !dbg !1262
  %3585 = load i32, i32* %t.i3472, align 4, !dbg !1262
  %shr809.i4297 = lshr i32 %3585, 2, !dbg !1262
  %and810.i4298 = and i32 %shr809.i4297, 63, !dbg !1262
  %idxprom811.i4299 = zext i32 %and810.i4298 to i64, !dbg !1262
  %arrayidx812.i4300 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom811.i4299, !dbg !1262
  %3586 = load i32, i32* %arrayidx812.i4300, align 4, !dbg !1262
  %xor813.i4301 = xor i32 %xor808.i4296, %3586, !dbg !1262
  %3587 = load i32, i32* %t.i3472, align 4, !dbg !1262
  %shr814.i4302 = lshr i32 %3587, 10, !dbg !1262
  %and815.i4303 = and i32 %shr814.i4302, 63, !dbg !1262
  %idxprom816.i4304 = zext i32 %and815.i4303 to i64, !dbg !1262
  %arrayidx817.i4305 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom816.i4304, !dbg !1262
  %3588 = load i32, i32* %arrayidx817.i4305, align 4, !dbg !1262
  %xor818.i4306 = xor i32 %xor813.i4301, %3588, !dbg !1262
  %3589 = load i32, i32* %t.i3472, align 4, !dbg !1262
  %shr819.i4307 = lshr i32 %3589, 18, !dbg !1262
  %and820.i4308 = and i32 %shr819.i4307, 63, !dbg !1262
  %idxprom821.i4309 = zext i32 %and820.i4308 to i64, !dbg !1262
  %arrayidx822.i4310 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom821.i4309, !dbg !1262
  %3590 = load i32, i32* %arrayidx822.i4310, align 4, !dbg !1262
  %xor823.i4311 = xor i32 %xor818.i4306, %3590, !dbg !1262
  %3591 = load i32, i32* %t.i3472, align 4, !dbg !1262
  %shr824.i4312 = lshr i32 %3591, 26, !dbg !1262
  %idxprom826.i4313 = zext i32 %shr824.i4312 to i64, !dbg !1262
  %arrayidx827.i4314 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom826.i4313, !dbg !1262
  %3592 = load i32, i32* %arrayidx827.i4314, align 4, !dbg !1262
  %xor828.i4315 = xor i32 %xor823.i4311, %3592, !dbg !1262
  %3593 = load i32, i32* %l.i3470, align 4, !dbg !1262
  %xor829.i4316 = xor i32 %3593, %xor828.i4315, !dbg !1262
  store i32 %xor829.i4316, i32* %l.i3470, align 4, !dbg !1262
  %3594 = load i32, i32* %l.i3470, align 4, !dbg !1263
  %3595 = load i32*, i32** %s.i3474, align 8, !dbg !1263
  %arrayidx830.i4317 = getelementptr inbounds i32, i32* %3595, i64 28, !dbg !1263
  %3596 = load i32, i32* %arrayidx830.i4317, align 4, !dbg !1263
  %xor831.i4318 = xor i32 %3594, %3596, !dbg !1263
  store i32 %xor831.i4318, i32* %u.i3473, align 4, !dbg !1263
  %3597 = load i32, i32* %l.i3470, align 4, !dbg !1263
  %3598 = load i32*, i32** %s.i3474, align 8, !dbg !1263
  %arrayidx832.i4319 = getelementptr inbounds i32, i32* %3598, i64 29, !dbg !1263
  %3599 = load i32, i32* %arrayidx832.i4319, align 4, !dbg !1263
  %xor833.i4320 = xor i32 %3597, %3599, !dbg !1263
  store i32 %xor833.i4320, i32* %t.i3472, align 4, !dbg !1263
  %3600 = load i32, i32* %t.i3472, align 4, !dbg !713
  %3601 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3600) #7, !dbg !713, !srcloc !199
  store i32 %3601, i32* %ret834.i3514, align 4, !dbg !713
  %3602 = load i32, i32* %ret834.i3514, align 4, !dbg !713
  store i32 %3602, i32* %tmp835.i3515, align 4, !dbg !713
  %3603 = load i32, i32* %tmp835.i3515, align 4, !dbg !713
  store i32 %3603, i32* %t.i3472, align 4, !dbg !1263
  %3604 = load i32, i32* %u.i3473, align 4, !dbg !1263
  %shr836.i4321 = lshr i32 %3604, 2, !dbg !1263
  %and837.i4322 = and i32 %shr836.i4321, 63, !dbg !1263
  %idxprom838.i4323 = zext i32 %and837.i4322 to i64, !dbg !1263
  %arrayidx839.i4324 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom838.i4323, !dbg !1263
  %3605 = load i32, i32* %arrayidx839.i4324, align 4, !dbg !1263
  %3606 = load i32, i32* %u.i3473, align 4, !dbg !1263
  %shr840.i4325 = lshr i32 %3606, 10, !dbg !1263
  %and841.i4326 = and i32 %shr840.i4325, 63, !dbg !1263
  %idxprom842.i4327 = zext i32 %and841.i4326 to i64, !dbg !1263
  %arrayidx843.i4328 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom842.i4327, !dbg !1263
  %3607 = load i32, i32* %arrayidx843.i4328, align 4, !dbg !1263
  %xor844.i4329 = xor i32 %3605, %3607, !dbg !1263
  %3608 = load i32, i32* %u.i3473, align 4, !dbg !1263
  %shr845.i4330 = lshr i32 %3608, 18, !dbg !1263
  %and846.i4331 = and i32 %shr845.i4330, 63, !dbg !1263
  %idxprom847.i4332 = zext i32 %and846.i4331 to i64, !dbg !1263
  %arrayidx848.i4333 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom847.i4332, !dbg !1263
  %3609 = load i32, i32* %arrayidx848.i4333, align 4, !dbg !1263
  %xor849.i4334 = xor i32 %xor844.i4329, %3609, !dbg !1263
  %3610 = load i32, i32* %u.i3473, align 4, !dbg !1263
  %shr850.i4335 = lshr i32 %3610, 26, !dbg !1263
  %idxprom852.i4336 = zext i32 %shr850.i4335 to i64, !dbg !1263
  %arrayidx853.i4337 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom852.i4336, !dbg !1263
  %3611 = load i32, i32* %arrayidx853.i4337, align 4, !dbg !1263
  %xor854.i4338 = xor i32 %xor849.i4334, %3611, !dbg !1263
  %3612 = load i32, i32* %t.i3472, align 4, !dbg !1263
  %shr855.i4339 = lshr i32 %3612, 2, !dbg !1263
  %and856.i4340 = and i32 %shr855.i4339, 63, !dbg !1263
  %idxprom857.i4341 = zext i32 %and856.i4340 to i64, !dbg !1263
  %arrayidx858.i4342 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom857.i4341, !dbg !1263
  %3613 = load i32, i32* %arrayidx858.i4342, align 4, !dbg !1263
  %xor859.i4343 = xor i32 %xor854.i4338, %3613, !dbg !1263
  %3614 = load i32, i32* %t.i3472, align 4, !dbg !1263
  %shr860.i4344 = lshr i32 %3614, 10, !dbg !1263
  %and861.i4345 = and i32 %shr860.i4344, 63, !dbg !1263
  %idxprom862.i4346 = zext i32 %and861.i4345 to i64, !dbg !1263
  %arrayidx863.i4347 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom862.i4346, !dbg !1263
  %3615 = load i32, i32* %arrayidx863.i4347, align 4, !dbg !1263
  %xor864.i4348 = xor i32 %xor859.i4343, %3615, !dbg !1263
  %3616 = load i32, i32* %t.i3472, align 4, !dbg !1263
  %shr865.i4349 = lshr i32 %3616, 18, !dbg !1263
  %and866.i4350 = and i32 %shr865.i4349, 63, !dbg !1263
  %idxprom867.i4351 = zext i32 %and866.i4350 to i64, !dbg !1263
  %arrayidx868.i4352 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom867.i4351, !dbg !1263
  %3617 = load i32, i32* %arrayidx868.i4352, align 4, !dbg !1263
  %xor869.i4353 = xor i32 %xor864.i4348, %3617, !dbg !1263
  %3618 = load i32, i32* %t.i3472, align 4, !dbg !1263
  %shr870.i4354 = lshr i32 %3618, 26, !dbg !1263
  %idxprom872.i4355 = zext i32 %shr870.i4354 to i64, !dbg !1263
  %arrayidx873.i4356 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom872.i4355, !dbg !1263
  %3619 = load i32, i32* %arrayidx873.i4356, align 4, !dbg !1263
  %xor874.i4357 = xor i32 %xor869.i4353, %3619, !dbg !1263
  %3620 = load i32, i32* %r.i3471, align 4, !dbg !1263
  %xor875.i4358 = xor i32 %3620, %xor874.i4357, !dbg !1263
  store i32 %xor875.i4358, i32* %r.i3471, align 4, !dbg !1263
  %3621 = load i32, i32* %r.i3471, align 4, !dbg !1264
  %3622 = load i32*, i32** %s.i3474, align 8, !dbg !1264
  %arrayidx876.i4359 = getelementptr inbounds i32, i32* %3622, i64 26, !dbg !1264
  %3623 = load i32, i32* %arrayidx876.i4359, align 4, !dbg !1264
  %xor877.i4360 = xor i32 %3621, %3623, !dbg !1264
  store i32 %xor877.i4360, i32* %u.i3473, align 4, !dbg !1264
  %3624 = load i32, i32* %r.i3471, align 4, !dbg !1264
  %3625 = load i32*, i32** %s.i3474, align 8, !dbg !1264
  %arrayidx878.i4361 = getelementptr inbounds i32, i32* %3625, i64 27, !dbg !1264
  %3626 = load i32, i32* %arrayidx878.i4361, align 4, !dbg !1264
  %xor879.i4362 = xor i32 %3624, %3626, !dbg !1264
  store i32 %xor879.i4362, i32* %t.i3472, align 4, !dbg !1264
  %3627 = load i32, i32* %t.i3472, align 4, !dbg !714
  %3628 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3627) #7, !dbg !714, !srcloc !205
  store i32 %3628, i32* %ret880.i3516, align 4, !dbg !714
  %3629 = load i32, i32* %ret880.i3516, align 4, !dbg !714
  store i32 %3629, i32* %tmp881.i3517, align 4, !dbg !714
  %3630 = load i32, i32* %tmp881.i3517, align 4, !dbg !714
  store i32 %3630, i32* %t.i3472, align 4, !dbg !1264
  %3631 = load i32, i32* %u.i3473, align 4, !dbg !1264
  %shr882.i4363 = lshr i32 %3631, 2, !dbg !1264
  %and883.i4364 = and i32 %shr882.i4363, 63, !dbg !1264
  %idxprom884.i4365 = zext i32 %and883.i4364 to i64, !dbg !1264
  %arrayidx885.i4366 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom884.i4365, !dbg !1264
  %3632 = load i32, i32* %arrayidx885.i4366, align 4, !dbg !1264
  %3633 = load i32, i32* %u.i3473, align 4, !dbg !1264
  %shr886.i4367 = lshr i32 %3633, 10, !dbg !1264
  %and887.i4368 = and i32 %shr886.i4367, 63, !dbg !1264
  %idxprom888.i4369 = zext i32 %and887.i4368 to i64, !dbg !1264
  %arrayidx889.i4370 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom888.i4369, !dbg !1264
  %3634 = load i32, i32* %arrayidx889.i4370, align 4, !dbg !1264
  %xor890.i4371 = xor i32 %3632, %3634, !dbg !1264
  %3635 = load i32, i32* %u.i3473, align 4, !dbg !1264
  %shr891.i4372 = lshr i32 %3635, 18, !dbg !1264
  %and892.i4373 = and i32 %shr891.i4372, 63, !dbg !1264
  %idxprom893.i4374 = zext i32 %and892.i4373 to i64, !dbg !1264
  %arrayidx894.i4375 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom893.i4374, !dbg !1264
  %3636 = load i32, i32* %arrayidx894.i4375, align 4, !dbg !1264
  %xor895.i4376 = xor i32 %xor890.i4371, %3636, !dbg !1264
  %3637 = load i32, i32* %u.i3473, align 4, !dbg !1264
  %shr896.i4377 = lshr i32 %3637, 26, !dbg !1264
  %idxprom898.i4378 = zext i32 %shr896.i4377 to i64, !dbg !1264
  %arrayidx899.i4379 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom898.i4378, !dbg !1264
  %3638 = load i32, i32* %arrayidx899.i4379, align 4, !dbg !1264
  %xor900.i4380 = xor i32 %xor895.i4376, %3638, !dbg !1264
  %3639 = load i32, i32* %t.i3472, align 4, !dbg !1264
  %shr901.i4381 = lshr i32 %3639, 2, !dbg !1264
  %and902.i4382 = and i32 %shr901.i4381, 63, !dbg !1264
  %idxprom903.i4383 = zext i32 %and902.i4382 to i64, !dbg !1264
  %arrayidx904.i4384 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom903.i4383, !dbg !1264
  %3640 = load i32, i32* %arrayidx904.i4384, align 4, !dbg !1264
  %xor905.i4385 = xor i32 %xor900.i4380, %3640, !dbg !1264
  %3641 = load i32, i32* %t.i3472, align 4, !dbg !1264
  %shr906.i4386 = lshr i32 %3641, 10, !dbg !1264
  %and907.i4387 = and i32 %shr906.i4386, 63, !dbg !1264
  %idxprom908.i4388 = zext i32 %and907.i4387 to i64, !dbg !1264
  %arrayidx909.i4389 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom908.i4388, !dbg !1264
  %3642 = load i32, i32* %arrayidx909.i4389, align 4, !dbg !1264
  %xor910.i4390 = xor i32 %xor905.i4385, %3642, !dbg !1264
  %3643 = load i32, i32* %t.i3472, align 4, !dbg !1264
  %shr911.i4391 = lshr i32 %3643, 18, !dbg !1264
  %and912.i4392 = and i32 %shr911.i4391, 63, !dbg !1264
  %idxprom913.i4393 = zext i32 %and912.i4392 to i64, !dbg !1264
  %arrayidx914.i4394 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom913.i4393, !dbg !1264
  %3644 = load i32, i32* %arrayidx914.i4394, align 4, !dbg !1264
  %xor915.i4395 = xor i32 %xor910.i4390, %3644, !dbg !1264
  %3645 = load i32, i32* %t.i3472, align 4, !dbg !1264
  %shr916.i4396 = lshr i32 %3645, 26, !dbg !1264
  %idxprom918.i4397 = zext i32 %shr916.i4396 to i64, !dbg !1264
  %arrayidx919.i4398 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom918.i4397, !dbg !1264
  %3646 = load i32, i32* %arrayidx919.i4398, align 4, !dbg !1264
  %xor920.i4399 = xor i32 %xor915.i4395, %3646, !dbg !1264
  %3647 = load i32, i32* %l.i3470, align 4, !dbg !1264
  %xor921.i4400 = xor i32 %3647, %xor920.i4399, !dbg !1264
  store i32 %xor921.i4400, i32* %l.i3470, align 4, !dbg !1264
  %3648 = load i32, i32* %l.i3470, align 4, !dbg !1265
  %3649 = load i32*, i32** %s.i3474, align 8, !dbg !1265
  %arrayidx922.i4401 = getelementptr inbounds i32, i32* %3649, i64 24, !dbg !1265
  %3650 = load i32, i32* %arrayidx922.i4401, align 4, !dbg !1265
  %xor923.i4402 = xor i32 %3648, %3650, !dbg !1265
  store i32 %xor923.i4402, i32* %u.i3473, align 4, !dbg !1265
  %3651 = load i32, i32* %l.i3470, align 4, !dbg !1265
  %3652 = load i32*, i32** %s.i3474, align 8, !dbg !1265
  %arrayidx924.i4403 = getelementptr inbounds i32, i32* %3652, i64 25, !dbg !1265
  %3653 = load i32, i32* %arrayidx924.i4403, align 4, !dbg !1265
  %xor925.i4404 = xor i32 %3651, %3653, !dbg !1265
  store i32 %xor925.i4404, i32* %t.i3472, align 4, !dbg !1265
  %3654 = load i32, i32* %t.i3472, align 4, !dbg !715
  %3655 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3654) #7, !dbg !715, !srcloc !211
  store i32 %3655, i32* %ret926.i3518, align 4, !dbg !715
  %3656 = load i32, i32* %ret926.i3518, align 4, !dbg !715
  store i32 %3656, i32* %tmp927.i3519, align 4, !dbg !715
  %3657 = load i32, i32* %tmp927.i3519, align 4, !dbg !715
  store i32 %3657, i32* %t.i3472, align 4, !dbg !1265
  %3658 = load i32, i32* %u.i3473, align 4, !dbg !1265
  %shr928.i4405 = lshr i32 %3658, 2, !dbg !1265
  %and929.i4406 = and i32 %shr928.i4405, 63, !dbg !1265
  %idxprom930.i4407 = zext i32 %and929.i4406 to i64, !dbg !1265
  %arrayidx931.i4408 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom930.i4407, !dbg !1265
  %3659 = load i32, i32* %arrayidx931.i4408, align 4, !dbg !1265
  %3660 = load i32, i32* %u.i3473, align 4, !dbg !1265
  %shr932.i4409 = lshr i32 %3660, 10, !dbg !1265
  %and933.i4410 = and i32 %shr932.i4409, 63, !dbg !1265
  %idxprom934.i4411 = zext i32 %and933.i4410 to i64, !dbg !1265
  %arrayidx935.i4412 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom934.i4411, !dbg !1265
  %3661 = load i32, i32* %arrayidx935.i4412, align 4, !dbg !1265
  %xor936.i4413 = xor i32 %3659, %3661, !dbg !1265
  %3662 = load i32, i32* %u.i3473, align 4, !dbg !1265
  %shr937.i4414 = lshr i32 %3662, 18, !dbg !1265
  %and938.i4415 = and i32 %shr937.i4414, 63, !dbg !1265
  %idxprom939.i4416 = zext i32 %and938.i4415 to i64, !dbg !1265
  %arrayidx940.i4417 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom939.i4416, !dbg !1265
  %3663 = load i32, i32* %arrayidx940.i4417, align 4, !dbg !1265
  %xor941.i4418 = xor i32 %xor936.i4413, %3663, !dbg !1265
  %3664 = load i32, i32* %u.i3473, align 4, !dbg !1265
  %shr942.i4419 = lshr i32 %3664, 26, !dbg !1265
  %idxprom944.i4420 = zext i32 %shr942.i4419 to i64, !dbg !1265
  %arrayidx945.i4421 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom944.i4420, !dbg !1265
  %3665 = load i32, i32* %arrayidx945.i4421, align 4, !dbg !1265
  %xor946.i4422 = xor i32 %xor941.i4418, %3665, !dbg !1265
  %3666 = load i32, i32* %t.i3472, align 4, !dbg !1265
  %shr947.i4423 = lshr i32 %3666, 2, !dbg !1265
  %and948.i4424 = and i32 %shr947.i4423, 63, !dbg !1265
  %idxprom949.i4425 = zext i32 %and948.i4424 to i64, !dbg !1265
  %arrayidx950.i4426 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom949.i4425, !dbg !1265
  %3667 = load i32, i32* %arrayidx950.i4426, align 4, !dbg !1265
  %xor951.i4427 = xor i32 %xor946.i4422, %3667, !dbg !1265
  %3668 = load i32, i32* %t.i3472, align 4, !dbg !1265
  %shr952.i4428 = lshr i32 %3668, 10, !dbg !1265
  %and953.i4429 = and i32 %shr952.i4428, 63, !dbg !1265
  %idxprom954.i4430 = zext i32 %and953.i4429 to i64, !dbg !1265
  %arrayidx955.i4431 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom954.i4430, !dbg !1265
  %3669 = load i32, i32* %arrayidx955.i4431, align 4, !dbg !1265
  %xor956.i4432 = xor i32 %xor951.i4427, %3669, !dbg !1265
  %3670 = load i32, i32* %t.i3472, align 4, !dbg !1265
  %shr957.i4433 = lshr i32 %3670, 18, !dbg !1265
  %and958.i4434 = and i32 %shr957.i4433, 63, !dbg !1265
  %idxprom959.i4435 = zext i32 %and958.i4434 to i64, !dbg !1265
  %arrayidx960.i4436 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom959.i4435, !dbg !1265
  %3671 = load i32, i32* %arrayidx960.i4436, align 4, !dbg !1265
  %xor961.i4437 = xor i32 %xor956.i4432, %3671, !dbg !1265
  %3672 = load i32, i32* %t.i3472, align 4, !dbg !1265
  %shr962.i4438 = lshr i32 %3672, 26, !dbg !1265
  %idxprom964.i4439 = zext i32 %shr962.i4438 to i64, !dbg !1265
  %arrayidx965.i4440 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom964.i4439, !dbg !1265
  %3673 = load i32, i32* %arrayidx965.i4440, align 4, !dbg !1265
  %xor966.i4441 = xor i32 %xor961.i4437, %3673, !dbg !1265
  %3674 = load i32, i32* %r.i3471, align 4, !dbg !1265
  %xor967.i4442 = xor i32 %3674, %xor966.i4441, !dbg !1265
  store i32 %xor967.i4442, i32* %r.i3471, align 4, !dbg !1265
  %3675 = load i32, i32* %r.i3471, align 4, !dbg !1266
  %3676 = load i32*, i32** %s.i3474, align 8, !dbg !1266
  %arrayidx968.i4443 = getelementptr inbounds i32, i32* %3676, i64 22, !dbg !1266
  %3677 = load i32, i32* %arrayidx968.i4443, align 4, !dbg !1266
  %xor969.i4444 = xor i32 %3675, %3677, !dbg !1266
  store i32 %xor969.i4444, i32* %u.i3473, align 4, !dbg !1266
  %3678 = load i32, i32* %r.i3471, align 4, !dbg !1266
  %3679 = load i32*, i32** %s.i3474, align 8, !dbg !1266
  %arrayidx970.i4445 = getelementptr inbounds i32, i32* %3679, i64 23, !dbg !1266
  %3680 = load i32, i32* %arrayidx970.i4445, align 4, !dbg !1266
  %xor971.i4446 = xor i32 %3678, %3680, !dbg !1266
  store i32 %xor971.i4446, i32* %t.i3472, align 4, !dbg !1266
  %3681 = load i32, i32* %t.i3472, align 4, !dbg !716
  %3682 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3681) #7, !dbg !716, !srcloc !217
  store i32 %3682, i32* %ret972.i3520, align 4, !dbg !716
  %3683 = load i32, i32* %ret972.i3520, align 4, !dbg !716
  store i32 %3683, i32* %tmp973.i3521, align 4, !dbg !716
  %3684 = load i32, i32* %tmp973.i3521, align 4, !dbg !716
  store i32 %3684, i32* %t.i3472, align 4, !dbg !1266
  %3685 = load i32, i32* %u.i3473, align 4, !dbg !1266
  %shr974.i4447 = lshr i32 %3685, 2, !dbg !1266
  %and975.i4448 = and i32 %shr974.i4447, 63, !dbg !1266
  %idxprom976.i4449 = zext i32 %and975.i4448 to i64, !dbg !1266
  %arrayidx977.i4450 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom976.i4449, !dbg !1266
  %3686 = load i32, i32* %arrayidx977.i4450, align 4, !dbg !1266
  %3687 = load i32, i32* %u.i3473, align 4, !dbg !1266
  %shr978.i4451 = lshr i32 %3687, 10, !dbg !1266
  %and979.i4452 = and i32 %shr978.i4451, 63, !dbg !1266
  %idxprom980.i4453 = zext i32 %and979.i4452 to i64, !dbg !1266
  %arrayidx981.i4454 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom980.i4453, !dbg !1266
  %3688 = load i32, i32* %arrayidx981.i4454, align 4, !dbg !1266
  %xor982.i4455 = xor i32 %3686, %3688, !dbg !1266
  %3689 = load i32, i32* %u.i3473, align 4, !dbg !1266
  %shr983.i4456 = lshr i32 %3689, 18, !dbg !1266
  %and984.i4457 = and i32 %shr983.i4456, 63, !dbg !1266
  %idxprom985.i4458 = zext i32 %and984.i4457 to i64, !dbg !1266
  %arrayidx986.i4459 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom985.i4458, !dbg !1266
  %3690 = load i32, i32* %arrayidx986.i4459, align 4, !dbg !1266
  %xor987.i4460 = xor i32 %xor982.i4455, %3690, !dbg !1266
  %3691 = load i32, i32* %u.i3473, align 4, !dbg !1266
  %shr988.i4461 = lshr i32 %3691, 26, !dbg !1266
  %idxprom990.i4462 = zext i32 %shr988.i4461 to i64, !dbg !1266
  %arrayidx991.i4463 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom990.i4462, !dbg !1266
  %3692 = load i32, i32* %arrayidx991.i4463, align 4, !dbg !1266
  %xor992.i4464 = xor i32 %xor987.i4460, %3692, !dbg !1266
  %3693 = load i32, i32* %t.i3472, align 4, !dbg !1266
  %shr993.i4465 = lshr i32 %3693, 2, !dbg !1266
  %and994.i4466 = and i32 %shr993.i4465, 63, !dbg !1266
  %idxprom995.i4467 = zext i32 %and994.i4466 to i64, !dbg !1266
  %arrayidx996.i4468 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom995.i4467, !dbg !1266
  %3694 = load i32, i32* %arrayidx996.i4468, align 4, !dbg !1266
  %xor997.i4469 = xor i32 %xor992.i4464, %3694, !dbg !1266
  %3695 = load i32, i32* %t.i3472, align 4, !dbg !1266
  %shr998.i4470 = lshr i32 %3695, 10, !dbg !1266
  %and999.i4471 = and i32 %shr998.i4470, 63, !dbg !1266
  %idxprom1000.i4472 = zext i32 %and999.i4471 to i64, !dbg !1266
  %arrayidx1001.i4473 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1000.i4472, !dbg !1266
  %3696 = load i32, i32* %arrayidx1001.i4473, align 4, !dbg !1266
  %xor1002.i4474 = xor i32 %xor997.i4469, %3696, !dbg !1266
  %3697 = load i32, i32* %t.i3472, align 4, !dbg !1266
  %shr1003.i4475 = lshr i32 %3697, 18, !dbg !1266
  %and1004.i4476 = and i32 %shr1003.i4475, 63, !dbg !1266
  %idxprom1005.i4477 = zext i32 %and1004.i4476 to i64, !dbg !1266
  %arrayidx1006.i4478 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1005.i4477, !dbg !1266
  %3698 = load i32, i32* %arrayidx1006.i4478, align 4, !dbg !1266
  %xor1007.i4479 = xor i32 %xor1002.i4474, %3698, !dbg !1266
  %3699 = load i32, i32* %t.i3472, align 4, !dbg !1266
  %shr1008.i4480 = lshr i32 %3699, 26, !dbg !1266
  %idxprom1010.i4481 = zext i32 %shr1008.i4480 to i64, !dbg !1266
  %arrayidx1011.i4482 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1010.i4481, !dbg !1266
  %3700 = load i32, i32* %arrayidx1011.i4482, align 4, !dbg !1266
  %xor1012.i4483 = xor i32 %xor1007.i4479, %3700, !dbg !1266
  %3701 = load i32, i32* %l.i3470, align 4, !dbg !1266
  %xor1013.i4484 = xor i32 %3701, %xor1012.i4483, !dbg !1266
  store i32 %xor1013.i4484, i32* %l.i3470, align 4, !dbg !1266
  %3702 = load i32, i32* %l.i3470, align 4, !dbg !1267
  %3703 = load i32*, i32** %s.i3474, align 8, !dbg !1267
  %arrayidx1014.i4485 = getelementptr inbounds i32, i32* %3703, i64 20, !dbg !1267
  %3704 = load i32, i32* %arrayidx1014.i4485, align 4, !dbg !1267
  %xor1015.i4486 = xor i32 %3702, %3704, !dbg !1267
  store i32 %xor1015.i4486, i32* %u.i3473, align 4, !dbg !1267
  %3705 = load i32, i32* %l.i3470, align 4, !dbg !1267
  %3706 = load i32*, i32** %s.i3474, align 8, !dbg !1267
  %arrayidx1016.i4487 = getelementptr inbounds i32, i32* %3706, i64 21, !dbg !1267
  %3707 = load i32, i32* %arrayidx1016.i4487, align 4, !dbg !1267
  %xor1017.i4488 = xor i32 %3705, %3707, !dbg !1267
  store i32 %xor1017.i4488, i32* %t.i3472, align 4, !dbg !1267
  %3708 = load i32, i32* %t.i3472, align 4, !dbg !717
  %3709 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3708) #7, !dbg !717, !srcloc !223
  store i32 %3709, i32* %ret1018.i3522, align 4, !dbg !717
  %3710 = load i32, i32* %ret1018.i3522, align 4, !dbg !717
  store i32 %3710, i32* %tmp1019.i3523, align 4, !dbg !717
  %3711 = load i32, i32* %tmp1019.i3523, align 4, !dbg !717
  store i32 %3711, i32* %t.i3472, align 4, !dbg !1267
  %3712 = load i32, i32* %u.i3473, align 4, !dbg !1267
  %shr1020.i4489 = lshr i32 %3712, 2, !dbg !1267
  %and1021.i4490 = and i32 %shr1020.i4489, 63, !dbg !1267
  %idxprom1022.i4491 = zext i32 %and1021.i4490 to i64, !dbg !1267
  %arrayidx1023.i4492 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1022.i4491, !dbg !1267
  %3713 = load i32, i32* %arrayidx1023.i4492, align 4, !dbg !1267
  %3714 = load i32, i32* %u.i3473, align 4, !dbg !1267
  %shr1024.i4493 = lshr i32 %3714, 10, !dbg !1267
  %and1025.i4494 = and i32 %shr1024.i4493, 63, !dbg !1267
  %idxprom1026.i4495 = zext i32 %and1025.i4494 to i64, !dbg !1267
  %arrayidx1027.i4496 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1026.i4495, !dbg !1267
  %3715 = load i32, i32* %arrayidx1027.i4496, align 4, !dbg !1267
  %xor1028.i4497 = xor i32 %3713, %3715, !dbg !1267
  %3716 = load i32, i32* %u.i3473, align 4, !dbg !1267
  %shr1029.i4498 = lshr i32 %3716, 18, !dbg !1267
  %and1030.i4499 = and i32 %shr1029.i4498, 63, !dbg !1267
  %idxprom1031.i4500 = zext i32 %and1030.i4499 to i64, !dbg !1267
  %arrayidx1032.i4501 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1031.i4500, !dbg !1267
  %3717 = load i32, i32* %arrayidx1032.i4501, align 4, !dbg !1267
  %xor1033.i4502 = xor i32 %xor1028.i4497, %3717, !dbg !1267
  %3718 = load i32, i32* %u.i3473, align 4, !dbg !1267
  %shr1034.i4503 = lshr i32 %3718, 26, !dbg !1267
  %idxprom1036.i4504 = zext i32 %shr1034.i4503 to i64, !dbg !1267
  %arrayidx1037.i4505 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1036.i4504, !dbg !1267
  %3719 = load i32, i32* %arrayidx1037.i4505, align 4, !dbg !1267
  %xor1038.i4506 = xor i32 %xor1033.i4502, %3719, !dbg !1267
  %3720 = load i32, i32* %t.i3472, align 4, !dbg !1267
  %shr1039.i4507 = lshr i32 %3720, 2, !dbg !1267
  %and1040.i4508 = and i32 %shr1039.i4507, 63, !dbg !1267
  %idxprom1041.i4509 = zext i32 %and1040.i4508 to i64, !dbg !1267
  %arrayidx1042.i4510 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1041.i4509, !dbg !1267
  %3721 = load i32, i32* %arrayidx1042.i4510, align 4, !dbg !1267
  %xor1043.i4511 = xor i32 %xor1038.i4506, %3721, !dbg !1267
  %3722 = load i32, i32* %t.i3472, align 4, !dbg !1267
  %shr1044.i4512 = lshr i32 %3722, 10, !dbg !1267
  %and1045.i4513 = and i32 %shr1044.i4512, 63, !dbg !1267
  %idxprom1046.i4514 = zext i32 %and1045.i4513 to i64, !dbg !1267
  %arrayidx1047.i4515 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1046.i4514, !dbg !1267
  %3723 = load i32, i32* %arrayidx1047.i4515, align 4, !dbg !1267
  %xor1048.i4516 = xor i32 %xor1043.i4511, %3723, !dbg !1267
  %3724 = load i32, i32* %t.i3472, align 4, !dbg !1267
  %shr1049.i4517 = lshr i32 %3724, 18, !dbg !1267
  %and1050.i4518 = and i32 %shr1049.i4517, 63, !dbg !1267
  %idxprom1051.i4519 = zext i32 %and1050.i4518 to i64, !dbg !1267
  %arrayidx1052.i4520 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1051.i4519, !dbg !1267
  %3725 = load i32, i32* %arrayidx1052.i4520, align 4, !dbg !1267
  %xor1053.i4521 = xor i32 %xor1048.i4516, %3725, !dbg !1267
  %3726 = load i32, i32* %t.i3472, align 4, !dbg !1267
  %shr1054.i4522 = lshr i32 %3726, 26, !dbg !1267
  %idxprom1056.i4523 = zext i32 %shr1054.i4522 to i64, !dbg !1267
  %arrayidx1057.i4524 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1056.i4523, !dbg !1267
  %3727 = load i32, i32* %arrayidx1057.i4524, align 4, !dbg !1267
  %xor1058.i4525 = xor i32 %xor1053.i4521, %3727, !dbg !1267
  %3728 = load i32, i32* %r.i3471, align 4, !dbg !1267
  %xor1059.i4526 = xor i32 %3728, %xor1058.i4525, !dbg !1267
  store i32 %xor1059.i4526, i32* %r.i3471, align 4, !dbg !1267
  %3729 = load i32, i32* %r.i3471, align 4, !dbg !1268
  %3730 = load i32*, i32** %s.i3474, align 8, !dbg !1268
  %arrayidx1060.i4527 = getelementptr inbounds i32, i32* %3730, i64 18, !dbg !1268
  %3731 = load i32, i32* %arrayidx1060.i4527, align 4, !dbg !1268
  %xor1061.i4528 = xor i32 %3729, %3731, !dbg !1268
  store i32 %xor1061.i4528, i32* %u.i3473, align 4, !dbg !1268
  %3732 = load i32, i32* %r.i3471, align 4, !dbg !1268
  %3733 = load i32*, i32** %s.i3474, align 8, !dbg !1268
  %arrayidx1062.i4529 = getelementptr inbounds i32, i32* %3733, i64 19, !dbg !1268
  %3734 = load i32, i32* %arrayidx1062.i4529, align 4, !dbg !1268
  %xor1063.i4530 = xor i32 %3732, %3734, !dbg !1268
  store i32 %xor1063.i4530, i32* %t.i3472, align 4, !dbg !1268
  %3735 = load i32, i32* %t.i3472, align 4, !dbg !718
  %3736 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3735) #7, !dbg !718, !srcloc !229
  store i32 %3736, i32* %ret1064.i3524, align 4, !dbg !718
  %3737 = load i32, i32* %ret1064.i3524, align 4, !dbg !718
  store i32 %3737, i32* %tmp1065.i3525, align 4, !dbg !718
  %3738 = load i32, i32* %tmp1065.i3525, align 4, !dbg !718
  store i32 %3738, i32* %t.i3472, align 4, !dbg !1268
  %3739 = load i32, i32* %u.i3473, align 4, !dbg !1268
  %shr1066.i4531 = lshr i32 %3739, 2, !dbg !1268
  %and1067.i4532 = and i32 %shr1066.i4531, 63, !dbg !1268
  %idxprom1068.i4533 = zext i32 %and1067.i4532 to i64, !dbg !1268
  %arrayidx1069.i4534 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1068.i4533, !dbg !1268
  %3740 = load i32, i32* %arrayidx1069.i4534, align 4, !dbg !1268
  %3741 = load i32, i32* %u.i3473, align 4, !dbg !1268
  %shr1070.i4535 = lshr i32 %3741, 10, !dbg !1268
  %and1071.i4536 = and i32 %shr1070.i4535, 63, !dbg !1268
  %idxprom1072.i4537 = zext i32 %and1071.i4536 to i64, !dbg !1268
  %arrayidx1073.i4538 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1072.i4537, !dbg !1268
  %3742 = load i32, i32* %arrayidx1073.i4538, align 4, !dbg !1268
  %xor1074.i4539 = xor i32 %3740, %3742, !dbg !1268
  %3743 = load i32, i32* %u.i3473, align 4, !dbg !1268
  %shr1075.i4540 = lshr i32 %3743, 18, !dbg !1268
  %and1076.i4541 = and i32 %shr1075.i4540, 63, !dbg !1268
  %idxprom1077.i4542 = zext i32 %and1076.i4541 to i64, !dbg !1268
  %arrayidx1078.i4543 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1077.i4542, !dbg !1268
  %3744 = load i32, i32* %arrayidx1078.i4543, align 4, !dbg !1268
  %xor1079.i4544 = xor i32 %xor1074.i4539, %3744, !dbg !1268
  %3745 = load i32, i32* %u.i3473, align 4, !dbg !1268
  %shr1080.i4545 = lshr i32 %3745, 26, !dbg !1268
  %idxprom1082.i4546 = zext i32 %shr1080.i4545 to i64, !dbg !1268
  %arrayidx1083.i4547 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1082.i4546, !dbg !1268
  %3746 = load i32, i32* %arrayidx1083.i4547, align 4, !dbg !1268
  %xor1084.i4548 = xor i32 %xor1079.i4544, %3746, !dbg !1268
  %3747 = load i32, i32* %t.i3472, align 4, !dbg !1268
  %shr1085.i4549 = lshr i32 %3747, 2, !dbg !1268
  %and1086.i4550 = and i32 %shr1085.i4549, 63, !dbg !1268
  %idxprom1087.i4551 = zext i32 %and1086.i4550 to i64, !dbg !1268
  %arrayidx1088.i4552 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1087.i4551, !dbg !1268
  %3748 = load i32, i32* %arrayidx1088.i4552, align 4, !dbg !1268
  %xor1089.i4553 = xor i32 %xor1084.i4548, %3748, !dbg !1268
  %3749 = load i32, i32* %t.i3472, align 4, !dbg !1268
  %shr1090.i4554 = lshr i32 %3749, 10, !dbg !1268
  %and1091.i4555 = and i32 %shr1090.i4554, 63, !dbg !1268
  %idxprom1092.i4556 = zext i32 %and1091.i4555 to i64, !dbg !1268
  %arrayidx1093.i4557 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1092.i4556, !dbg !1268
  %3750 = load i32, i32* %arrayidx1093.i4557, align 4, !dbg !1268
  %xor1094.i4558 = xor i32 %xor1089.i4553, %3750, !dbg !1268
  %3751 = load i32, i32* %t.i3472, align 4, !dbg !1268
  %shr1095.i4559 = lshr i32 %3751, 18, !dbg !1268
  %and1096.i4560 = and i32 %shr1095.i4559, 63, !dbg !1268
  %idxprom1097.i4561 = zext i32 %and1096.i4560 to i64, !dbg !1268
  %arrayidx1098.i4562 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1097.i4561, !dbg !1268
  %3752 = load i32, i32* %arrayidx1098.i4562, align 4, !dbg !1268
  %xor1099.i4563 = xor i32 %xor1094.i4558, %3752, !dbg !1268
  %3753 = load i32, i32* %t.i3472, align 4, !dbg !1268
  %shr1100.i4564 = lshr i32 %3753, 26, !dbg !1268
  %idxprom1102.i4565 = zext i32 %shr1100.i4564 to i64, !dbg !1268
  %arrayidx1103.i4566 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1102.i4565, !dbg !1268
  %3754 = load i32, i32* %arrayidx1103.i4566, align 4, !dbg !1268
  %xor1104.i4567 = xor i32 %xor1099.i4563, %3754, !dbg !1268
  %3755 = load i32, i32* %l.i3470, align 4, !dbg !1268
  %xor1105.i4568 = xor i32 %3755, %xor1104.i4567, !dbg !1268
  store i32 %xor1105.i4568, i32* %l.i3470, align 4, !dbg !1268
  %3756 = load i32, i32* %l.i3470, align 4, !dbg !1269
  %3757 = load i32*, i32** %s.i3474, align 8, !dbg !1269
  %arrayidx1106.i4569 = getelementptr inbounds i32, i32* %3757, i64 16, !dbg !1269
  %3758 = load i32, i32* %arrayidx1106.i4569, align 4, !dbg !1269
  %xor1107.i4570 = xor i32 %3756, %3758, !dbg !1269
  store i32 %xor1107.i4570, i32* %u.i3473, align 4, !dbg !1269
  %3759 = load i32, i32* %l.i3470, align 4, !dbg !1269
  %3760 = load i32*, i32** %s.i3474, align 8, !dbg !1269
  %arrayidx1108.i4571 = getelementptr inbounds i32, i32* %3760, i64 17, !dbg !1269
  %3761 = load i32, i32* %arrayidx1108.i4571, align 4, !dbg !1269
  %xor1109.i4572 = xor i32 %3759, %3761, !dbg !1269
  store i32 %xor1109.i4572, i32* %t.i3472, align 4, !dbg !1269
  %3762 = load i32, i32* %t.i3472, align 4, !dbg !719
  %3763 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3762) #7, !dbg !719, !srcloc !235
  store i32 %3763, i32* %ret1110.i3526, align 4, !dbg !719
  %3764 = load i32, i32* %ret1110.i3526, align 4, !dbg !719
  store i32 %3764, i32* %tmp1111.i3527, align 4, !dbg !719
  %3765 = load i32, i32* %tmp1111.i3527, align 4, !dbg !719
  store i32 %3765, i32* %t.i3472, align 4, !dbg !1269
  %3766 = load i32, i32* %u.i3473, align 4, !dbg !1269
  %shr1112.i4573 = lshr i32 %3766, 2, !dbg !1269
  %and1113.i4574 = and i32 %shr1112.i4573, 63, !dbg !1269
  %idxprom1114.i4575 = zext i32 %and1113.i4574 to i64, !dbg !1269
  %arrayidx1115.i4576 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1114.i4575, !dbg !1269
  %3767 = load i32, i32* %arrayidx1115.i4576, align 4, !dbg !1269
  %3768 = load i32, i32* %u.i3473, align 4, !dbg !1269
  %shr1116.i4577 = lshr i32 %3768, 10, !dbg !1269
  %and1117.i4578 = and i32 %shr1116.i4577, 63, !dbg !1269
  %idxprom1118.i4579 = zext i32 %and1117.i4578 to i64, !dbg !1269
  %arrayidx1119.i4580 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1118.i4579, !dbg !1269
  %3769 = load i32, i32* %arrayidx1119.i4580, align 4, !dbg !1269
  %xor1120.i4581 = xor i32 %3767, %3769, !dbg !1269
  %3770 = load i32, i32* %u.i3473, align 4, !dbg !1269
  %shr1121.i4582 = lshr i32 %3770, 18, !dbg !1269
  %and1122.i4583 = and i32 %shr1121.i4582, 63, !dbg !1269
  %idxprom1123.i4584 = zext i32 %and1122.i4583 to i64, !dbg !1269
  %arrayidx1124.i4585 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1123.i4584, !dbg !1269
  %3771 = load i32, i32* %arrayidx1124.i4585, align 4, !dbg !1269
  %xor1125.i4586 = xor i32 %xor1120.i4581, %3771, !dbg !1269
  %3772 = load i32, i32* %u.i3473, align 4, !dbg !1269
  %shr1126.i4587 = lshr i32 %3772, 26, !dbg !1269
  %idxprom1128.i4588 = zext i32 %shr1126.i4587 to i64, !dbg !1269
  %arrayidx1129.i4589 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1128.i4588, !dbg !1269
  %3773 = load i32, i32* %arrayidx1129.i4589, align 4, !dbg !1269
  %xor1130.i4590 = xor i32 %xor1125.i4586, %3773, !dbg !1269
  %3774 = load i32, i32* %t.i3472, align 4, !dbg !1269
  %shr1131.i4591 = lshr i32 %3774, 2, !dbg !1269
  %and1132.i4592 = and i32 %shr1131.i4591, 63, !dbg !1269
  %idxprom1133.i4593 = zext i32 %and1132.i4592 to i64, !dbg !1269
  %arrayidx1134.i4594 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1133.i4593, !dbg !1269
  %3775 = load i32, i32* %arrayidx1134.i4594, align 4, !dbg !1269
  %xor1135.i4595 = xor i32 %xor1130.i4590, %3775, !dbg !1269
  %3776 = load i32, i32* %t.i3472, align 4, !dbg !1269
  %shr1136.i4596 = lshr i32 %3776, 10, !dbg !1269
  %and1137.i4597 = and i32 %shr1136.i4596, 63, !dbg !1269
  %idxprom1138.i4598 = zext i32 %and1137.i4597 to i64, !dbg !1269
  %arrayidx1139.i4599 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1138.i4598, !dbg !1269
  %3777 = load i32, i32* %arrayidx1139.i4599, align 4, !dbg !1269
  %xor1140.i4600 = xor i32 %xor1135.i4595, %3777, !dbg !1269
  %3778 = load i32, i32* %t.i3472, align 4, !dbg !1269
  %shr1141.i4601 = lshr i32 %3778, 18, !dbg !1269
  %and1142.i4602 = and i32 %shr1141.i4601, 63, !dbg !1269
  %idxprom1143.i4603 = zext i32 %and1142.i4602 to i64, !dbg !1269
  %arrayidx1144.i4604 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1143.i4603, !dbg !1269
  %3779 = load i32, i32* %arrayidx1144.i4604, align 4, !dbg !1269
  %xor1145.i4605 = xor i32 %xor1140.i4600, %3779, !dbg !1269
  %3780 = load i32, i32* %t.i3472, align 4, !dbg !1269
  %shr1146.i4606 = lshr i32 %3780, 26, !dbg !1269
  %idxprom1148.i4607 = zext i32 %shr1146.i4606 to i64, !dbg !1269
  %arrayidx1149.i4608 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1148.i4607, !dbg !1269
  %3781 = load i32, i32* %arrayidx1149.i4608, align 4, !dbg !1269
  %xor1150.i4609 = xor i32 %xor1145.i4605, %3781, !dbg !1269
  %3782 = load i32, i32* %r.i3471, align 4, !dbg !1269
  %xor1151.i4610 = xor i32 %3782, %xor1150.i4609, !dbg !1269
  store i32 %xor1151.i4610, i32* %r.i3471, align 4, !dbg !1269
  %3783 = load i32, i32* %r.i3471, align 4, !dbg !1270
  %3784 = load i32*, i32** %s.i3474, align 8, !dbg !1270
  %arrayidx1152.i4611 = getelementptr inbounds i32, i32* %3784, i64 14, !dbg !1270
  %3785 = load i32, i32* %arrayidx1152.i4611, align 4, !dbg !1270
  %xor1153.i4612 = xor i32 %3783, %3785, !dbg !1270
  store i32 %xor1153.i4612, i32* %u.i3473, align 4, !dbg !1270
  %3786 = load i32, i32* %r.i3471, align 4, !dbg !1270
  %3787 = load i32*, i32** %s.i3474, align 8, !dbg !1270
  %arrayidx1154.i4613 = getelementptr inbounds i32, i32* %3787, i64 15, !dbg !1270
  %3788 = load i32, i32* %arrayidx1154.i4613, align 4, !dbg !1270
  %xor1155.i4614 = xor i32 %3786, %3788, !dbg !1270
  store i32 %xor1155.i4614, i32* %t.i3472, align 4, !dbg !1270
  %3789 = load i32, i32* %t.i3472, align 4, !dbg !720
  %3790 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3789) #7, !dbg !720, !srcloc !241
  store i32 %3790, i32* %ret1156.i3528, align 4, !dbg !720
  %3791 = load i32, i32* %ret1156.i3528, align 4, !dbg !720
  store i32 %3791, i32* %tmp1157.i3529, align 4, !dbg !720
  %3792 = load i32, i32* %tmp1157.i3529, align 4, !dbg !720
  store i32 %3792, i32* %t.i3472, align 4, !dbg !1270
  %3793 = load i32, i32* %u.i3473, align 4, !dbg !1270
  %shr1158.i4615 = lshr i32 %3793, 2, !dbg !1270
  %and1159.i4616 = and i32 %shr1158.i4615, 63, !dbg !1270
  %idxprom1160.i4617 = zext i32 %and1159.i4616 to i64, !dbg !1270
  %arrayidx1161.i4618 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1160.i4617, !dbg !1270
  %3794 = load i32, i32* %arrayidx1161.i4618, align 4, !dbg !1270
  %3795 = load i32, i32* %u.i3473, align 4, !dbg !1270
  %shr1162.i4619 = lshr i32 %3795, 10, !dbg !1270
  %and1163.i4620 = and i32 %shr1162.i4619, 63, !dbg !1270
  %idxprom1164.i4621 = zext i32 %and1163.i4620 to i64, !dbg !1270
  %arrayidx1165.i4622 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1164.i4621, !dbg !1270
  %3796 = load i32, i32* %arrayidx1165.i4622, align 4, !dbg !1270
  %xor1166.i4623 = xor i32 %3794, %3796, !dbg !1270
  %3797 = load i32, i32* %u.i3473, align 4, !dbg !1270
  %shr1167.i4624 = lshr i32 %3797, 18, !dbg !1270
  %and1168.i4625 = and i32 %shr1167.i4624, 63, !dbg !1270
  %idxprom1169.i4626 = zext i32 %and1168.i4625 to i64, !dbg !1270
  %arrayidx1170.i4627 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1169.i4626, !dbg !1270
  %3798 = load i32, i32* %arrayidx1170.i4627, align 4, !dbg !1270
  %xor1171.i4628 = xor i32 %xor1166.i4623, %3798, !dbg !1270
  %3799 = load i32, i32* %u.i3473, align 4, !dbg !1270
  %shr1172.i4629 = lshr i32 %3799, 26, !dbg !1270
  %idxprom1174.i4630 = zext i32 %shr1172.i4629 to i64, !dbg !1270
  %arrayidx1175.i4631 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1174.i4630, !dbg !1270
  %3800 = load i32, i32* %arrayidx1175.i4631, align 4, !dbg !1270
  %xor1176.i4632 = xor i32 %xor1171.i4628, %3800, !dbg !1270
  %3801 = load i32, i32* %t.i3472, align 4, !dbg !1270
  %shr1177.i4633 = lshr i32 %3801, 2, !dbg !1270
  %and1178.i4634 = and i32 %shr1177.i4633, 63, !dbg !1270
  %idxprom1179.i4635 = zext i32 %and1178.i4634 to i64, !dbg !1270
  %arrayidx1180.i4636 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1179.i4635, !dbg !1270
  %3802 = load i32, i32* %arrayidx1180.i4636, align 4, !dbg !1270
  %xor1181.i4637 = xor i32 %xor1176.i4632, %3802, !dbg !1270
  %3803 = load i32, i32* %t.i3472, align 4, !dbg !1270
  %shr1182.i4638 = lshr i32 %3803, 10, !dbg !1270
  %and1183.i4639 = and i32 %shr1182.i4638, 63, !dbg !1270
  %idxprom1184.i4640 = zext i32 %and1183.i4639 to i64, !dbg !1270
  %arrayidx1185.i4641 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1184.i4640, !dbg !1270
  %3804 = load i32, i32* %arrayidx1185.i4641, align 4, !dbg !1270
  %xor1186.i4642 = xor i32 %xor1181.i4637, %3804, !dbg !1270
  %3805 = load i32, i32* %t.i3472, align 4, !dbg !1270
  %shr1187.i4643 = lshr i32 %3805, 18, !dbg !1270
  %and1188.i4644 = and i32 %shr1187.i4643, 63, !dbg !1270
  %idxprom1189.i4645 = zext i32 %and1188.i4644 to i64, !dbg !1270
  %arrayidx1190.i4646 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1189.i4645, !dbg !1270
  %3806 = load i32, i32* %arrayidx1190.i4646, align 4, !dbg !1270
  %xor1191.i4647 = xor i32 %xor1186.i4642, %3806, !dbg !1270
  %3807 = load i32, i32* %t.i3472, align 4, !dbg !1270
  %shr1192.i4648 = lshr i32 %3807, 26, !dbg !1270
  %idxprom1194.i4649 = zext i32 %shr1192.i4648 to i64, !dbg !1270
  %arrayidx1195.i4650 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1194.i4649, !dbg !1270
  %3808 = load i32, i32* %arrayidx1195.i4650, align 4, !dbg !1270
  %xor1196.i4651 = xor i32 %xor1191.i4647, %3808, !dbg !1270
  %3809 = load i32, i32* %l.i3470, align 4, !dbg !1270
  %xor1197.i4652 = xor i32 %3809, %xor1196.i4651, !dbg !1270
  store i32 %xor1197.i4652, i32* %l.i3470, align 4, !dbg !1270
  %3810 = load i32, i32* %l.i3470, align 4, !dbg !1271
  %3811 = load i32*, i32** %s.i3474, align 8, !dbg !1271
  %arrayidx1198.i4653 = getelementptr inbounds i32, i32* %3811, i64 12, !dbg !1271
  %3812 = load i32, i32* %arrayidx1198.i4653, align 4, !dbg !1271
  %xor1199.i4654 = xor i32 %3810, %3812, !dbg !1271
  store i32 %xor1199.i4654, i32* %u.i3473, align 4, !dbg !1271
  %3813 = load i32, i32* %l.i3470, align 4, !dbg !1271
  %3814 = load i32*, i32** %s.i3474, align 8, !dbg !1271
  %arrayidx1200.i4655 = getelementptr inbounds i32, i32* %3814, i64 13, !dbg !1271
  %3815 = load i32, i32* %arrayidx1200.i4655, align 4, !dbg !1271
  %xor1201.i4656 = xor i32 %3813, %3815, !dbg !1271
  store i32 %xor1201.i4656, i32* %t.i3472, align 4, !dbg !1271
  %3816 = load i32, i32* %t.i3472, align 4, !dbg !721
  %3817 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3816) #7, !dbg !721, !srcloc !247
  store i32 %3817, i32* %ret1202.i3530, align 4, !dbg !721
  %3818 = load i32, i32* %ret1202.i3530, align 4, !dbg !721
  store i32 %3818, i32* %tmp1203.i3531, align 4, !dbg !721
  %3819 = load i32, i32* %tmp1203.i3531, align 4, !dbg !721
  store i32 %3819, i32* %t.i3472, align 4, !dbg !1271
  %3820 = load i32, i32* %u.i3473, align 4, !dbg !1271
  %shr1204.i4657 = lshr i32 %3820, 2, !dbg !1271
  %and1205.i4658 = and i32 %shr1204.i4657, 63, !dbg !1271
  %idxprom1206.i4659 = zext i32 %and1205.i4658 to i64, !dbg !1271
  %arrayidx1207.i4660 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1206.i4659, !dbg !1271
  %3821 = load i32, i32* %arrayidx1207.i4660, align 4, !dbg !1271
  %3822 = load i32, i32* %u.i3473, align 4, !dbg !1271
  %shr1208.i4661 = lshr i32 %3822, 10, !dbg !1271
  %and1209.i4662 = and i32 %shr1208.i4661, 63, !dbg !1271
  %idxprom1210.i4663 = zext i32 %and1209.i4662 to i64, !dbg !1271
  %arrayidx1211.i4664 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1210.i4663, !dbg !1271
  %3823 = load i32, i32* %arrayidx1211.i4664, align 4, !dbg !1271
  %xor1212.i4665 = xor i32 %3821, %3823, !dbg !1271
  %3824 = load i32, i32* %u.i3473, align 4, !dbg !1271
  %shr1213.i4666 = lshr i32 %3824, 18, !dbg !1271
  %and1214.i4667 = and i32 %shr1213.i4666, 63, !dbg !1271
  %idxprom1215.i4668 = zext i32 %and1214.i4667 to i64, !dbg !1271
  %arrayidx1216.i4669 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1215.i4668, !dbg !1271
  %3825 = load i32, i32* %arrayidx1216.i4669, align 4, !dbg !1271
  %xor1217.i4670 = xor i32 %xor1212.i4665, %3825, !dbg !1271
  %3826 = load i32, i32* %u.i3473, align 4, !dbg !1271
  %shr1218.i4671 = lshr i32 %3826, 26, !dbg !1271
  %idxprom1220.i4672 = zext i32 %shr1218.i4671 to i64, !dbg !1271
  %arrayidx1221.i4673 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1220.i4672, !dbg !1271
  %3827 = load i32, i32* %arrayidx1221.i4673, align 4, !dbg !1271
  %xor1222.i4674 = xor i32 %xor1217.i4670, %3827, !dbg !1271
  %3828 = load i32, i32* %t.i3472, align 4, !dbg !1271
  %shr1223.i4675 = lshr i32 %3828, 2, !dbg !1271
  %and1224.i4676 = and i32 %shr1223.i4675, 63, !dbg !1271
  %idxprom1225.i4677 = zext i32 %and1224.i4676 to i64, !dbg !1271
  %arrayidx1226.i4678 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1225.i4677, !dbg !1271
  %3829 = load i32, i32* %arrayidx1226.i4678, align 4, !dbg !1271
  %xor1227.i4679 = xor i32 %xor1222.i4674, %3829, !dbg !1271
  %3830 = load i32, i32* %t.i3472, align 4, !dbg !1271
  %shr1228.i4680 = lshr i32 %3830, 10, !dbg !1271
  %and1229.i4681 = and i32 %shr1228.i4680, 63, !dbg !1271
  %idxprom1230.i4682 = zext i32 %and1229.i4681 to i64, !dbg !1271
  %arrayidx1231.i4683 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1230.i4682, !dbg !1271
  %3831 = load i32, i32* %arrayidx1231.i4683, align 4, !dbg !1271
  %xor1232.i4684 = xor i32 %xor1227.i4679, %3831, !dbg !1271
  %3832 = load i32, i32* %t.i3472, align 4, !dbg !1271
  %shr1233.i4685 = lshr i32 %3832, 18, !dbg !1271
  %and1234.i4686 = and i32 %shr1233.i4685, 63, !dbg !1271
  %idxprom1235.i4687 = zext i32 %and1234.i4686 to i64, !dbg !1271
  %arrayidx1236.i4688 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1235.i4687, !dbg !1271
  %3833 = load i32, i32* %arrayidx1236.i4688, align 4, !dbg !1271
  %xor1237.i4689 = xor i32 %xor1232.i4684, %3833, !dbg !1271
  %3834 = load i32, i32* %t.i3472, align 4, !dbg !1271
  %shr1238.i4690 = lshr i32 %3834, 26, !dbg !1271
  %idxprom1240.i4691 = zext i32 %shr1238.i4690 to i64, !dbg !1271
  %arrayidx1241.i4692 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1240.i4691, !dbg !1271
  %3835 = load i32, i32* %arrayidx1241.i4692, align 4, !dbg !1271
  %xor1242.i4693 = xor i32 %xor1237.i4689, %3835, !dbg !1271
  %3836 = load i32, i32* %r.i3471, align 4, !dbg !1271
  %xor1243.i4694 = xor i32 %3836, %xor1242.i4693, !dbg !1271
  store i32 %xor1243.i4694, i32* %r.i3471, align 4, !dbg !1271
  %3837 = load i32, i32* %r.i3471, align 4, !dbg !1272
  %3838 = load i32*, i32** %s.i3474, align 8, !dbg !1272
  %arrayidx1244.i4695 = getelementptr inbounds i32, i32* %3838, i64 10, !dbg !1272
  %3839 = load i32, i32* %arrayidx1244.i4695, align 4, !dbg !1272
  %xor1245.i4696 = xor i32 %3837, %3839, !dbg !1272
  store i32 %xor1245.i4696, i32* %u.i3473, align 4, !dbg !1272
  %3840 = load i32, i32* %r.i3471, align 4, !dbg !1272
  %3841 = load i32*, i32** %s.i3474, align 8, !dbg !1272
  %arrayidx1246.i4697 = getelementptr inbounds i32, i32* %3841, i64 11, !dbg !1272
  %3842 = load i32, i32* %arrayidx1246.i4697, align 4, !dbg !1272
  %xor1247.i4698 = xor i32 %3840, %3842, !dbg !1272
  store i32 %xor1247.i4698, i32* %t.i3472, align 4, !dbg !1272
  %3843 = load i32, i32* %t.i3472, align 4, !dbg !722
  %3844 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3843) #7, !dbg !722, !srcloc !253
  store i32 %3844, i32* %ret1248.i3532, align 4, !dbg !722
  %3845 = load i32, i32* %ret1248.i3532, align 4, !dbg !722
  store i32 %3845, i32* %tmp1249.i3533, align 4, !dbg !722
  %3846 = load i32, i32* %tmp1249.i3533, align 4, !dbg !722
  store i32 %3846, i32* %t.i3472, align 4, !dbg !1272
  %3847 = load i32, i32* %u.i3473, align 4, !dbg !1272
  %shr1250.i4699 = lshr i32 %3847, 2, !dbg !1272
  %and1251.i4700 = and i32 %shr1250.i4699, 63, !dbg !1272
  %idxprom1252.i4701 = zext i32 %and1251.i4700 to i64, !dbg !1272
  %arrayidx1253.i4702 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1252.i4701, !dbg !1272
  %3848 = load i32, i32* %arrayidx1253.i4702, align 4, !dbg !1272
  %3849 = load i32, i32* %u.i3473, align 4, !dbg !1272
  %shr1254.i4703 = lshr i32 %3849, 10, !dbg !1272
  %and1255.i4704 = and i32 %shr1254.i4703, 63, !dbg !1272
  %idxprom1256.i4705 = zext i32 %and1255.i4704 to i64, !dbg !1272
  %arrayidx1257.i4706 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1256.i4705, !dbg !1272
  %3850 = load i32, i32* %arrayidx1257.i4706, align 4, !dbg !1272
  %xor1258.i4707 = xor i32 %3848, %3850, !dbg !1272
  %3851 = load i32, i32* %u.i3473, align 4, !dbg !1272
  %shr1259.i4708 = lshr i32 %3851, 18, !dbg !1272
  %and1260.i4709 = and i32 %shr1259.i4708, 63, !dbg !1272
  %idxprom1261.i4710 = zext i32 %and1260.i4709 to i64, !dbg !1272
  %arrayidx1262.i4711 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1261.i4710, !dbg !1272
  %3852 = load i32, i32* %arrayidx1262.i4711, align 4, !dbg !1272
  %xor1263.i4712 = xor i32 %xor1258.i4707, %3852, !dbg !1272
  %3853 = load i32, i32* %u.i3473, align 4, !dbg !1272
  %shr1264.i4713 = lshr i32 %3853, 26, !dbg !1272
  %idxprom1266.i4714 = zext i32 %shr1264.i4713 to i64, !dbg !1272
  %arrayidx1267.i4715 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1266.i4714, !dbg !1272
  %3854 = load i32, i32* %arrayidx1267.i4715, align 4, !dbg !1272
  %xor1268.i4716 = xor i32 %xor1263.i4712, %3854, !dbg !1272
  %3855 = load i32, i32* %t.i3472, align 4, !dbg !1272
  %shr1269.i4717 = lshr i32 %3855, 2, !dbg !1272
  %and1270.i4718 = and i32 %shr1269.i4717, 63, !dbg !1272
  %idxprom1271.i4719 = zext i32 %and1270.i4718 to i64, !dbg !1272
  %arrayidx1272.i4720 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1271.i4719, !dbg !1272
  %3856 = load i32, i32* %arrayidx1272.i4720, align 4, !dbg !1272
  %xor1273.i4721 = xor i32 %xor1268.i4716, %3856, !dbg !1272
  %3857 = load i32, i32* %t.i3472, align 4, !dbg !1272
  %shr1274.i4722 = lshr i32 %3857, 10, !dbg !1272
  %and1275.i4723 = and i32 %shr1274.i4722, 63, !dbg !1272
  %idxprom1276.i4724 = zext i32 %and1275.i4723 to i64, !dbg !1272
  %arrayidx1277.i4725 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1276.i4724, !dbg !1272
  %3858 = load i32, i32* %arrayidx1277.i4725, align 4, !dbg !1272
  %xor1278.i4726 = xor i32 %xor1273.i4721, %3858, !dbg !1272
  %3859 = load i32, i32* %t.i3472, align 4, !dbg !1272
  %shr1279.i4727 = lshr i32 %3859, 18, !dbg !1272
  %and1280.i4728 = and i32 %shr1279.i4727, 63, !dbg !1272
  %idxprom1281.i4729 = zext i32 %and1280.i4728 to i64, !dbg !1272
  %arrayidx1282.i4730 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1281.i4729, !dbg !1272
  %3860 = load i32, i32* %arrayidx1282.i4730, align 4, !dbg !1272
  %xor1283.i4731 = xor i32 %xor1278.i4726, %3860, !dbg !1272
  %3861 = load i32, i32* %t.i3472, align 4, !dbg !1272
  %shr1284.i4732 = lshr i32 %3861, 26, !dbg !1272
  %idxprom1286.i4733 = zext i32 %shr1284.i4732 to i64, !dbg !1272
  %arrayidx1287.i4734 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1286.i4733, !dbg !1272
  %3862 = load i32, i32* %arrayidx1287.i4734, align 4, !dbg !1272
  %xor1288.i4735 = xor i32 %xor1283.i4731, %3862, !dbg !1272
  %3863 = load i32, i32* %l.i3470, align 4, !dbg !1272
  %xor1289.i4736 = xor i32 %3863, %xor1288.i4735, !dbg !1272
  store i32 %xor1289.i4736, i32* %l.i3470, align 4, !dbg !1272
  %3864 = load i32, i32* %l.i3470, align 4, !dbg !1273
  %3865 = load i32*, i32** %s.i3474, align 8, !dbg !1273
  %arrayidx1290.i4737 = getelementptr inbounds i32, i32* %3865, i64 8, !dbg !1273
  %3866 = load i32, i32* %arrayidx1290.i4737, align 4, !dbg !1273
  %xor1291.i4738 = xor i32 %3864, %3866, !dbg !1273
  store i32 %xor1291.i4738, i32* %u.i3473, align 4, !dbg !1273
  %3867 = load i32, i32* %l.i3470, align 4, !dbg !1273
  %3868 = load i32*, i32** %s.i3474, align 8, !dbg !1273
  %arrayidx1292.i4739 = getelementptr inbounds i32, i32* %3868, i64 9, !dbg !1273
  %3869 = load i32, i32* %arrayidx1292.i4739, align 4, !dbg !1273
  %xor1293.i4740 = xor i32 %3867, %3869, !dbg !1273
  store i32 %xor1293.i4740, i32* %t.i3472, align 4, !dbg !1273
  %3870 = load i32, i32* %t.i3472, align 4, !dbg !723
  %3871 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3870) #7, !dbg !723, !srcloc !259
  store i32 %3871, i32* %ret1294.i3534, align 4, !dbg !723
  %3872 = load i32, i32* %ret1294.i3534, align 4, !dbg !723
  store i32 %3872, i32* %tmp1295.i3535, align 4, !dbg !723
  %3873 = load i32, i32* %tmp1295.i3535, align 4, !dbg !723
  store i32 %3873, i32* %t.i3472, align 4, !dbg !1273
  %3874 = load i32, i32* %u.i3473, align 4, !dbg !1273
  %shr1296.i4741 = lshr i32 %3874, 2, !dbg !1273
  %and1297.i4742 = and i32 %shr1296.i4741, 63, !dbg !1273
  %idxprom1298.i4743 = zext i32 %and1297.i4742 to i64, !dbg !1273
  %arrayidx1299.i4744 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1298.i4743, !dbg !1273
  %3875 = load i32, i32* %arrayidx1299.i4744, align 4, !dbg !1273
  %3876 = load i32, i32* %u.i3473, align 4, !dbg !1273
  %shr1300.i4745 = lshr i32 %3876, 10, !dbg !1273
  %and1301.i4746 = and i32 %shr1300.i4745, 63, !dbg !1273
  %idxprom1302.i4747 = zext i32 %and1301.i4746 to i64, !dbg !1273
  %arrayidx1303.i4748 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1302.i4747, !dbg !1273
  %3877 = load i32, i32* %arrayidx1303.i4748, align 4, !dbg !1273
  %xor1304.i4749 = xor i32 %3875, %3877, !dbg !1273
  %3878 = load i32, i32* %u.i3473, align 4, !dbg !1273
  %shr1305.i4750 = lshr i32 %3878, 18, !dbg !1273
  %and1306.i4751 = and i32 %shr1305.i4750, 63, !dbg !1273
  %idxprom1307.i4752 = zext i32 %and1306.i4751 to i64, !dbg !1273
  %arrayidx1308.i4753 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1307.i4752, !dbg !1273
  %3879 = load i32, i32* %arrayidx1308.i4753, align 4, !dbg !1273
  %xor1309.i4754 = xor i32 %xor1304.i4749, %3879, !dbg !1273
  %3880 = load i32, i32* %u.i3473, align 4, !dbg !1273
  %shr1310.i4755 = lshr i32 %3880, 26, !dbg !1273
  %idxprom1312.i4756 = zext i32 %shr1310.i4755 to i64, !dbg !1273
  %arrayidx1313.i4757 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1312.i4756, !dbg !1273
  %3881 = load i32, i32* %arrayidx1313.i4757, align 4, !dbg !1273
  %xor1314.i4758 = xor i32 %xor1309.i4754, %3881, !dbg !1273
  %3882 = load i32, i32* %t.i3472, align 4, !dbg !1273
  %shr1315.i4759 = lshr i32 %3882, 2, !dbg !1273
  %and1316.i4760 = and i32 %shr1315.i4759, 63, !dbg !1273
  %idxprom1317.i4761 = zext i32 %and1316.i4760 to i64, !dbg !1273
  %arrayidx1318.i4762 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1317.i4761, !dbg !1273
  %3883 = load i32, i32* %arrayidx1318.i4762, align 4, !dbg !1273
  %xor1319.i4763 = xor i32 %xor1314.i4758, %3883, !dbg !1273
  %3884 = load i32, i32* %t.i3472, align 4, !dbg !1273
  %shr1320.i4764 = lshr i32 %3884, 10, !dbg !1273
  %and1321.i4765 = and i32 %shr1320.i4764, 63, !dbg !1273
  %idxprom1322.i4766 = zext i32 %and1321.i4765 to i64, !dbg !1273
  %arrayidx1323.i4767 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1322.i4766, !dbg !1273
  %3885 = load i32, i32* %arrayidx1323.i4767, align 4, !dbg !1273
  %xor1324.i4768 = xor i32 %xor1319.i4763, %3885, !dbg !1273
  %3886 = load i32, i32* %t.i3472, align 4, !dbg !1273
  %shr1325.i4769 = lshr i32 %3886, 18, !dbg !1273
  %and1326.i4770 = and i32 %shr1325.i4769, 63, !dbg !1273
  %idxprom1327.i4771 = zext i32 %and1326.i4770 to i64, !dbg !1273
  %arrayidx1328.i4772 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1327.i4771, !dbg !1273
  %3887 = load i32, i32* %arrayidx1328.i4772, align 4, !dbg !1273
  %xor1329.i4773 = xor i32 %xor1324.i4768, %3887, !dbg !1273
  %3888 = load i32, i32* %t.i3472, align 4, !dbg !1273
  %shr1330.i4774 = lshr i32 %3888, 26, !dbg !1273
  %idxprom1332.i4775 = zext i32 %shr1330.i4774 to i64, !dbg !1273
  %arrayidx1333.i4776 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1332.i4775, !dbg !1273
  %3889 = load i32, i32* %arrayidx1333.i4776, align 4, !dbg !1273
  %xor1334.i4777 = xor i32 %xor1329.i4773, %3889, !dbg !1273
  %3890 = load i32, i32* %r.i3471, align 4, !dbg !1273
  %xor1335.i4778 = xor i32 %3890, %xor1334.i4777, !dbg !1273
  store i32 %xor1335.i4778, i32* %r.i3471, align 4, !dbg !1273
  %3891 = load i32, i32* %r.i3471, align 4, !dbg !1274
  %3892 = load i32*, i32** %s.i3474, align 8, !dbg !1274
  %arrayidx1336.i4779 = getelementptr inbounds i32, i32* %3892, i64 6, !dbg !1274
  %3893 = load i32, i32* %arrayidx1336.i4779, align 4, !dbg !1274
  %xor1337.i4780 = xor i32 %3891, %3893, !dbg !1274
  store i32 %xor1337.i4780, i32* %u.i3473, align 4, !dbg !1274
  %3894 = load i32, i32* %r.i3471, align 4, !dbg !1274
  %3895 = load i32*, i32** %s.i3474, align 8, !dbg !1274
  %arrayidx1338.i4781 = getelementptr inbounds i32, i32* %3895, i64 7, !dbg !1274
  %3896 = load i32, i32* %arrayidx1338.i4781, align 4, !dbg !1274
  %xor1339.i4782 = xor i32 %3894, %3896, !dbg !1274
  store i32 %xor1339.i4782, i32* %t.i3472, align 4, !dbg !1274
  %3897 = load i32, i32* %t.i3472, align 4, !dbg !724
  %3898 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3897) #7, !dbg !724, !srcloc !265
  store i32 %3898, i32* %ret1340.i3536, align 4, !dbg !724
  %3899 = load i32, i32* %ret1340.i3536, align 4, !dbg !724
  store i32 %3899, i32* %tmp1341.i3537, align 4, !dbg !724
  %3900 = load i32, i32* %tmp1341.i3537, align 4, !dbg !724
  store i32 %3900, i32* %t.i3472, align 4, !dbg !1274
  %3901 = load i32, i32* %u.i3473, align 4, !dbg !1274
  %shr1342.i4783 = lshr i32 %3901, 2, !dbg !1274
  %and1343.i4784 = and i32 %shr1342.i4783, 63, !dbg !1274
  %idxprom1344.i4785 = zext i32 %and1343.i4784 to i64, !dbg !1274
  %arrayidx1345.i4786 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1344.i4785, !dbg !1274
  %3902 = load i32, i32* %arrayidx1345.i4786, align 4, !dbg !1274
  %3903 = load i32, i32* %u.i3473, align 4, !dbg !1274
  %shr1346.i4787 = lshr i32 %3903, 10, !dbg !1274
  %and1347.i4788 = and i32 %shr1346.i4787, 63, !dbg !1274
  %idxprom1348.i4789 = zext i32 %and1347.i4788 to i64, !dbg !1274
  %arrayidx1349.i4790 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1348.i4789, !dbg !1274
  %3904 = load i32, i32* %arrayidx1349.i4790, align 4, !dbg !1274
  %xor1350.i4791 = xor i32 %3902, %3904, !dbg !1274
  %3905 = load i32, i32* %u.i3473, align 4, !dbg !1274
  %shr1351.i4792 = lshr i32 %3905, 18, !dbg !1274
  %and1352.i4793 = and i32 %shr1351.i4792, 63, !dbg !1274
  %idxprom1353.i4794 = zext i32 %and1352.i4793 to i64, !dbg !1274
  %arrayidx1354.i4795 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1353.i4794, !dbg !1274
  %3906 = load i32, i32* %arrayidx1354.i4795, align 4, !dbg !1274
  %xor1355.i4796 = xor i32 %xor1350.i4791, %3906, !dbg !1274
  %3907 = load i32, i32* %u.i3473, align 4, !dbg !1274
  %shr1356.i4797 = lshr i32 %3907, 26, !dbg !1274
  %idxprom1358.i4798 = zext i32 %shr1356.i4797 to i64, !dbg !1274
  %arrayidx1359.i4799 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1358.i4798, !dbg !1274
  %3908 = load i32, i32* %arrayidx1359.i4799, align 4, !dbg !1274
  %xor1360.i4800 = xor i32 %xor1355.i4796, %3908, !dbg !1274
  %3909 = load i32, i32* %t.i3472, align 4, !dbg !1274
  %shr1361.i4801 = lshr i32 %3909, 2, !dbg !1274
  %and1362.i4802 = and i32 %shr1361.i4801, 63, !dbg !1274
  %idxprom1363.i4803 = zext i32 %and1362.i4802 to i64, !dbg !1274
  %arrayidx1364.i4804 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1363.i4803, !dbg !1274
  %3910 = load i32, i32* %arrayidx1364.i4804, align 4, !dbg !1274
  %xor1365.i4805 = xor i32 %xor1360.i4800, %3910, !dbg !1274
  %3911 = load i32, i32* %t.i3472, align 4, !dbg !1274
  %shr1366.i4806 = lshr i32 %3911, 10, !dbg !1274
  %and1367.i4807 = and i32 %shr1366.i4806, 63, !dbg !1274
  %idxprom1368.i4808 = zext i32 %and1367.i4807 to i64, !dbg !1274
  %arrayidx1369.i4809 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1368.i4808, !dbg !1274
  %3912 = load i32, i32* %arrayidx1369.i4809, align 4, !dbg !1274
  %xor1370.i4810 = xor i32 %xor1365.i4805, %3912, !dbg !1274
  %3913 = load i32, i32* %t.i3472, align 4, !dbg !1274
  %shr1371.i4811 = lshr i32 %3913, 18, !dbg !1274
  %and1372.i4812 = and i32 %shr1371.i4811, 63, !dbg !1274
  %idxprom1373.i4813 = zext i32 %and1372.i4812 to i64, !dbg !1274
  %arrayidx1374.i4814 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1373.i4813, !dbg !1274
  %3914 = load i32, i32* %arrayidx1374.i4814, align 4, !dbg !1274
  %xor1375.i4815 = xor i32 %xor1370.i4810, %3914, !dbg !1274
  %3915 = load i32, i32* %t.i3472, align 4, !dbg !1274
  %shr1376.i4816 = lshr i32 %3915, 26, !dbg !1274
  %idxprom1378.i4817 = zext i32 %shr1376.i4816 to i64, !dbg !1274
  %arrayidx1379.i4818 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1378.i4817, !dbg !1274
  %3916 = load i32, i32* %arrayidx1379.i4818, align 4, !dbg !1274
  %xor1380.i4819 = xor i32 %xor1375.i4815, %3916, !dbg !1274
  %3917 = load i32, i32* %l.i3470, align 4, !dbg !1274
  %xor1381.i4820 = xor i32 %3917, %xor1380.i4819, !dbg !1274
  store i32 %xor1381.i4820, i32* %l.i3470, align 4, !dbg !1274
  %3918 = load i32, i32* %l.i3470, align 4, !dbg !1275
  %3919 = load i32*, i32** %s.i3474, align 8, !dbg !1275
  %arrayidx1382.i4821 = getelementptr inbounds i32, i32* %3919, i64 4, !dbg !1275
  %3920 = load i32, i32* %arrayidx1382.i4821, align 4, !dbg !1275
  %xor1383.i4822 = xor i32 %3918, %3920, !dbg !1275
  store i32 %xor1383.i4822, i32* %u.i3473, align 4, !dbg !1275
  %3921 = load i32, i32* %l.i3470, align 4, !dbg !1275
  %3922 = load i32*, i32** %s.i3474, align 8, !dbg !1275
  %arrayidx1384.i4823 = getelementptr inbounds i32, i32* %3922, i64 5, !dbg !1275
  %3923 = load i32, i32* %arrayidx1384.i4823, align 4, !dbg !1275
  %xor1385.i4824 = xor i32 %3921, %3923, !dbg !1275
  store i32 %xor1385.i4824, i32* %t.i3472, align 4, !dbg !1275
  %3924 = load i32, i32* %t.i3472, align 4, !dbg !725
  %3925 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3924) #7, !dbg !725, !srcloc !271
  store i32 %3925, i32* %ret1386.i3538, align 4, !dbg !725
  %3926 = load i32, i32* %ret1386.i3538, align 4, !dbg !725
  store i32 %3926, i32* %tmp1387.i3539, align 4, !dbg !725
  %3927 = load i32, i32* %tmp1387.i3539, align 4, !dbg !725
  store i32 %3927, i32* %t.i3472, align 4, !dbg !1275
  %3928 = load i32, i32* %u.i3473, align 4, !dbg !1275
  %shr1388.i4825 = lshr i32 %3928, 2, !dbg !1275
  %and1389.i4826 = and i32 %shr1388.i4825, 63, !dbg !1275
  %idxprom1390.i4827 = zext i32 %and1389.i4826 to i64, !dbg !1275
  %arrayidx1391.i4828 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1390.i4827, !dbg !1275
  %3929 = load i32, i32* %arrayidx1391.i4828, align 4, !dbg !1275
  %3930 = load i32, i32* %u.i3473, align 4, !dbg !1275
  %shr1392.i4829 = lshr i32 %3930, 10, !dbg !1275
  %and1393.i4830 = and i32 %shr1392.i4829, 63, !dbg !1275
  %idxprom1394.i4831 = zext i32 %and1393.i4830 to i64, !dbg !1275
  %arrayidx1395.i4832 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1394.i4831, !dbg !1275
  %3931 = load i32, i32* %arrayidx1395.i4832, align 4, !dbg !1275
  %xor1396.i4833 = xor i32 %3929, %3931, !dbg !1275
  %3932 = load i32, i32* %u.i3473, align 4, !dbg !1275
  %shr1397.i4834 = lshr i32 %3932, 18, !dbg !1275
  %and1398.i4835 = and i32 %shr1397.i4834, 63, !dbg !1275
  %idxprom1399.i4836 = zext i32 %and1398.i4835 to i64, !dbg !1275
  %arrayidx1400.i4837 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1399.i4836, !dbg !1275
  %3933 = load i32, i32* %arrayidx1400.i4837, align 4, !dbg !1275
  %xor1401.i4838 = xor i32 %xor1396.i4833, %3933, !dbg !1275
  %3934 = load i32, i32* %u.i3473, align 4, !dbg !1275
  %shr1402.i4839 = lshr i32 %3934, 26, !dbg !1275
  %idxprom1404.i4840 = zext i32 %shr1402.i4839 to i64, !dbg !1275
  %arrayidx1405.i4841 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1404.i4840, !dbg !1275
  %3935 = load i32, i32* %arrayidx1405.i4841, align 4, !dbg !1275
  %xor1406.i4842 = xor i32 %xor1401.i4838, %3935, !dbg !1275
  %3936 = load i32, i32* %t.i3472, align 4, !dbg !1275
  %shr1407.i4843 = lshr i32 %3936, 2, !dbg !1275
  %and1408.i4844 = and i32 %shr1407.i4843, 63, !dbg !1275
  %idxprom1409.i4845 = zext i32 %and1408.i4844 to i64, !dbg !1275
  %arrayidx1410.i4846 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1409.i4845, !dbg !1275
  %3937 = load i32, i32* %arrayidx1410.i4846, align 4, !dbg !1275
  %xor1411.i4847 = xor i32 %xor1406.i4842, %3937, !dbg !1275
  %3938 = load i32, i32* %t.i3472, align 4, !dbg !1275
  %shr1412.i4848 = lshr i32 %3938, 10, !dbg !1275
  %and1413.i4849 = and i32 %shr1412.i4848, 63, !dbg !1275
  %idxprom1414.i4850 = zext i32 %and1413.i4849 to i64, !dbg !1275
  %arrayidx1415.i4851 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1414.i4850, !dbg !1275
  %3939 = load i32, i32* %arrayidx1415.i4851, align 4, !dbg !1275
  %xor1416.i4852 = xor i32 %xor1411.i4847, %3939, !dbg !1275
  %3940 = load i32, i32* %t.i3472, align 4, !dbg !1275
  %shr1417.i4853 = lshr i32 %3940, 18, !dbg !1275
  %and1418.i4854 = and i32 %shr1417.i4853, 63, !dbg !1275
  %idxprom1419.i4855 = zext i32 %and1418.i4854 to i64, !dbg !1275
  %arrayidx1420.i4856 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1419.i4855, !dbg !1275
  %3941 = load i32, i32* %arrayidx1420.i4856, align 4, !dbg !1275
  %xor1421.i4857 = xor i32 %xor1416.i4852, %3941, !dbg !1275
  %3942 = load i32, i32* %t.i3472, align 4, !dbg !1275
  %shr1422.i4858 = lshr i32 %3942, 26, !dbg !1275
  %idxprom1424.i4859 = zext i32 %shr1422.i4858 to i64, !dbg !1275
  %arrayidx1425.i4860 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1424.i4859, !dbg !1275
  %3943 = load i32, i32* %arrayidx1425.i4860, align 4, !dbg !1275
  %xor1426.i4861 = xor i32 %xor1421.i4857, %3943, !dbg !1275
  %3944 = load i32, i32* %r.i3471, align 4, !dbg !1275
  %xor1427.i4862 = xor i32 %3944, %xor1426.i4861, !dbg !1275
  store i32 %xor1427.i4862, i32* %r.i3471, align 4, !dbg !1275
  %3945 = load i32, i32* %r.i3471, align 4, !dbg !1276
  %3946 = load i32*, i32** %s.i3474, align 8, !dbg !1276
  %arrayidx1428.i4863 = getelementptr inbounds i32, i32* %3946, i64 2, !dbg !1276
  %3947 = load i32, i32* %arrayidx1428.i4863, align 4, !dbg !1276
  %xor1429.i4864 = xor i32 %3945, %3947, !dbg !1276
  store i32 %xor1429.i4864, i32* %u.i3473, align 4, !dbg !1276
  %3948 = load i32, i32* %r.i3471, align 4, !dbg !1276
  %3949 = load i32*, i32** %s.i3474, align 8, !dbg !1276
  %arrayidx1430.i4865 = getelementptr inbounds i32, i32* %3949, i64 3, !dbg !1276
  %3950 = load i32, i32* %arrayidx1430.i4865, align 4, !dbg !1276
  %xor1431.i4866 = xor i32 %3948, %3950, !dbg !1276
  store i32 %xor1431.i4866, i32* %t.i3472, align 4, !dbg !1276
  %3951 = load i32, i32* %t.i3472, align 4, !dbg !726
  %3952 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3951) #7, !dbg !726, !srcloc !277
  store i32 %3952, i32* %ret1432.i3540, align 4, !dbg !726
  %3953 = load i32, i32* %ret1432.i3540, align 4, !dbg !726
  store i32 %3953, i32* %tmp1433.i3541, align 4, !dbg !726
  %3954 = load i32, i32* %tmp1433.i3541, align 4, !dbg !726
  store i32 %3954, i32* %t.i3472, align 4, !dbg !1276
  %3955 = load i32, i32* %u.i3473, align 4, !dbg !1276
  %shr1434.i4867 = lshr i32 %3955, 2, !dbg !1276
  %and1435.i4868 = and i32 %shr1434.i4867, 63, !dbg !1276
  %idxprom1436.i4869 = zext i32 %and1435.i4868 to i64, !dbg !1276
  %arrayidx1437.i4870 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1436.i4869, !dbg !1276
  %3956 = load i32, i32* %arrayidx1437.i4870, align 4, !dbg !1276
  %3957 = load i32, i32* %u.i3473, align 4, !dbg !1276
  %shr1438.i4871 = lshr i32 %3957, 10, !dbg !1276
  %and1439.i4872 = and i32 %shr1438.i4871, 63, !dbg !1276
  %idxprom1440.i4873 = zext i32 %and1439.i4872 to i64, !dbg !1276
  %arrayidx1441.i4874 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1440.i4873, !dbg !1276
  %3958 = load i32, i32* %arrayidx1441.i4874, align 4, !dbg !1276
  %xor1442.i4875 = xor i32 %3956, %3958, !dbg !1276
  %3959 = load i32, i32* %u.i3473, align 4, !dbg !1276
  %shr1443.i4876 = lshr i32 %3959, 18, !dbg !1276
  %and1444.i4877 = and i32 %shr1443.i4876, 63, !dbg !1276
  %idxprom1445.i4878 = zext i32 %and1444.i4877 to i64, !dbg !1276
  %arrayidx1446.i4879 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1445.i4878, !dbg !1276
  %3960 = load i32, i32* %arrayidx1446.i4879, align 4, !dbg !1276
  %xor1447.i4880 = xor i32 %xor1442.i4875, %3960, !dbg !1276
  %3961 = load i32, i32* %u.i3473, align 4, !dbg !1276
  %shr1448.i4881 = lshr i32 %3961, 26, !dbg !1276
  %idxprom1450.i4882 = zext i32 %shr1448.i4881 to i64, !dbg !1276
  %arrayidx1451.i4883 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1450.i4882, !dbg !1276
  %3962 = load i32, i32* %arrayidx1451.i4883, align 4, !dbg !1276
  %xor1452.i4884 = xor i32 %xor1447.i4880, %3962, !dbg !1276
  %3963 = load i32, i32* %t.i3472, align 4, !dbg !1276
  %shr1453.i4885 = lshr i32 %3963, 2, !dbg !1276
  %and1454.i4886 = and i32 %shr1453.i4885, 63, !dbg !1276
  %idxprom1455.i4887 = zext i32 %and1454.i4886 to i64, !dbg !1276
  %arrayidx1456.i4888 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1455.i4887, !dbg !1276
  %3964 = load i32, i32* %arrayidx1456.i4888, align 4, !dbg !1276
  %xor1457.i4889 = xor i32 %xor1452.i4884, %3964, !dbg !1276
  %3965 = load i32, i32* %t.i3472, align 4, !dbg !1276
  %shr1458.i4890 = lshr i32 %3965, 10, !dbg !1276
  %and1459.i4891 = and i32 %shr1458.i4890, 63, !dbg !1276
  %idxprom1460.i4892 = zext i32 %and1459.i4891 to i64, !dbg !1276
  %arrayidx1461.i4893 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1460.i4892, !dbg !1276
  %3966 = load i32, i32* %arrayidx1461.i4893, align 4, !dbg !1276
  %xor1462.i4894 = xor i32 %xor1457.i4889, %3966, !dbg !1276
  %3967 = load i32, i32* %t.i3472, align 4, !dbg !1276
  %shr1463.i4895 = lshr i32 %3967, 18, !dbg !1276
  %and1464.i4896 = and i32 %shr1463.i4895, 63, !dbg !1276
  %idxprom1465.i4897 = zext i32 %and1464.i4896 to i64, !dbg !1276
  %arrayidx1466.i4898 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1465.i4897, !dbg !1276
  %3968 = load i32, i32* %arrayidx1466.i4898, align 4, !dbg !1276
  %xor1467.i4899 = xor i32 %xor1462.i4894, %3968, !dbg !1276
  %3969 = load i32, i32* %t.i3472, align 4, !dbg !1276
  %shr1468.i4900 = lshr i32 %3969, 26, !dbg !1276
  %idxprom1470.i4901 = zext i32 %shr1468.i4900 to i64, !dbg !1276
  %arrayidx1471.i4902 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1470.i4901, !dbg !1276
  %3970 = load i32, i32* %arrayidx1471.i4902, align 4, !dbg !1276
  %xor1472.i4903 = xor i32 %xor1467.i4899, %3970, !dbg !1276
  %3971 = load i32, i32* %l.i3470, align 4, !dbg !1276
  %xor1473.i4904 = xor i32 %3971, %xor1472.i4903, !dbg !1276
  store i32 %xor1473.i4904, i32* %l.i3470, align 4, !dbg !1276
  %3972 = load i32, i32* %l.i3470, align 4, !dbg !1277
  %3973 = load i32*, i32** %s.i3474, align 8, !dbg !1277
  %3974 = load i32, i32* %3973, align 4, !dbg !1277
  %xor1475.i4905 = xor i32 %3972, %3974, !dbg !1277
  store i32 %xor1475.i4905, i32* %u.i3473, align 4, !dbg !1277
  %3975 = load i32, i32* %l.i3470, align 4, !dbg !1277
  %3976 = load i32*, i32** %s.i3474, align 8, !dbg !1277
  %arrayidx1476.i4906 = getelementptr inbounds i32, i32* %3976, i64 1, !dbg !1277
  %3977 = load i32, i32* %arrayidx1476.i4906, align 4, !dbg !1277
  %xor1477.i4907 = xor i32 %3975, %3977, !dbg !1277
  store i32 %xor1477.i4907, i32* %t.i3472, align 4, !dbg !1277
  %3978 = load i32, i32* %t.i3472, align 4, !dbg !727
  %3979 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3978) #7, !dbg !727, !srcloc !283
  store i32 %3979, i32* %ret1478.i3542, align 4, !dbg !727
  %3980 = load i32, i32* %ret1478.i3542, align 4, !dbg !727
  store i32 %3980, i32* %tmp1479.i3543, align 4, !dbg !727
  %3981 = load i32, i32* %tmp1479.i3543, align 4, !dbg !727
  store i32 %3981, i32* %t.i3472, align 4, !dbg !1277
  %3982 = load i32, i32* %u.i3473, align 4, !dbg !1277
  %shr1480.i4908 = lshr i32 %3982, 2, !dbg !1277
  %and1481.i4909 = and i32 %shr1480.i4908, 63, !dbg !1277
  %idxprom1482.i4910 = zext i32 %and1481.i4909 to i64, !dbg !1277
  %arrayidx1483.i4911 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1482.i4910, !dbg !1277
  %3983 = load i32, i32* %arrayidx1483.i4911, align 4, !dbg !1277
  %3984 = load i32, i32* %u.i3473, align 4, !dbg !1277
  %shr1484.i4912 = lshr i32 %3984, 10, !dbg !1277
  %and1485.i4913 = and i32 %shr1484.i4912, 63, !dbg !1277
  %idxprom1486.i4914 = zext i32 %and1485.i4913 to i64, !dbg !1277
  %arrayidx1487.i4915 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1486.i4914, !dbg !1277
  %3985 = load i32, i32* %arrayidx1487.i4915, align 4, !dbg !1277
  %xor1488.i4916 = xor i32 %3983, %3985, !dbg !1277
  %3986 = load i32, i32* %u.i3473, align 4, !dbg !1277
  %shr1489.i4917 = lshr i32 %3986, 18, !dbg !1277
  %and1490.i4918 = and i32 %shr1489.i4917, 63, !dbg !1277
  %idxprom1491.i4919 = zext i32 %and1490.i4918 to i64, !dbg !1277
  %arrayidx1492.i4920 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1491.i4919, !dbg !1277
  %3987 = load i32, i32* %arrayidx1492.i4920, align 4, !dbg !1277
  %xor1493.i4921 = xor i32 %xor1488.i4916, %3987, !dbg !1277
  %3988 = load i32, i32* %u.i3473, align 4, !dbg !1277
  %shr1494.i4922 = lshr i32 %3988, 26, !dbg !1277
  %idxprom1496.i4923 = zext i32 %shr1494.i4922 to i64, !dbg !1277
  %arrayidx1497.i4924 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1496.i4923, !dbg !1277
  %3989 = load i32, i32* %arrayidx1497.i4924, align 4, !dbg !1277
  %xor1498.i4925 = xor i32 %xor1493.i4921, %3989, !dbg !1277
  %3990 = load i32, i32* %t.i3472, align 4, !dbg !1277
  %shr1499.i4926 = lshr i32 %3990, 2, !dbg !1277
  %and1500.i4927 = and i32 %shr1499.i4926, 63, !dbg !1277
  %idxprom1501.i4928 = zext i32 %and1500.i4927 to i64, !dbg !1277
  %arrayidx1502.i4929 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1501.i4928, !dbg !1277
  %3991 = load i32, i32* %arrayidx1502.i4929, align 4, !dbg !1277
  %xor1503.i4930 = xor i32 %xor1498.i4925, %3991, !dbg !1277
  %3992 = load i32, i32* %t.i3472, align 4, !dbg !1277
  %shr1504.i4931 = lshr i32 %3992, 10, !dbg !1277
  %and1505.i4932 = and i32 %shr1504.i4931, 63, !dbg !1277
  %idxprom1506.i4933 = zext i32 %and1505.i4932 to i64, !dbg !1277
  %arrayidx1507.i4934 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1506.i4933, !dbg !1277
  %3993 = load i32, i32* %arrayidx1507.i4934, align 4, !dbg !1277
  %xor1508.i4935 = xor i32 %xor1503.i4930, %3993, !dbg !1277
  %3994 = load i32, i32* %t.i3472, align 4, !dbg !1277
  %shr1509.i4936 = lshr i32 %3994, 18, !dbg !1277
  %and1510.i4937 = and i32 %shr1509.i4936, 63, !dbg !1277
  %idxprom1511.i4938 = zext i32 %and1510.i4937 to i64, !dbg !1277
  %arrayidx1512.i4939 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1511.i4938, !dbg !1277
  %3995 = load i32, i32* %arrayidx1512.i4939, align 4, !dbg !1277
  %xor1513.i4940 = xor i32 %xor1508.i4935, %3995, !dbg !1277
  %3996 = load i32, i32* %t.i3472, align 4, !dbg !1277
  %shr1514.i4941 = lshr i32 %3996, 26, !dbg !1277
  %idxprom1516.i4942 = zext i32 %shr1514.i4941 to i64, !dbg !1277
  %arrayidx1517.i4943 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1516.i4942, !dbg !1277
  %3997 = load i32, i32* %arrayidx1517.i4943, align 4, !dbg !1277
  %xor1518.i4944 = xor i32 %xor1513.i4940, %3997, !dbg !1277
  %3998 = load i32, i32* %r.i3471, align 4, !dbg !1277
  %xor1519.i4945 = xor i32 %3998, %xor1518.i4944, !dbg !1277
  store i32 %xor1519.i4945, i32* %r.i3471, align 4, !dbg !1277
  br label %DES_encrypt1.exit4994

DES_encrypt1.exit4994:                            ; preds = %if.then.i4274, %if.else.i4946
  %3999 = load i32, i32* %l.i3470, align 4, !dbg !728
  %4000 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %3999) #7, !dbg !728, !srcloc !287
  store i32 %4000, i32* %ret1520.i3544, align 4, !dbg !728
  %4001 = load i32, i32* %ret1520.i3544, align 4, !dbg !728
  store i32 %4001, i32* %tmp1521.i3545, align 4, !dbg !728
  %4002 = load i32, i32* %tmp1521.i3545, align 4, !dbg !728
  %conv1522.i4947 = zext i32 %4002 to i64, !dbg !1278
  %and1523.i4948 = and i64 %conv1522.i4947, 4294967295, !dbg !1279
  %conv1524.i4949 = trunc i64 %and1523.i4948 to i32, !dbg !1278
  store i32 %conv1524.i4949, i32* %l.i3470, align 4, !dbg !1280
  %4003 = load i32, i32* %r.i3471, align 4, !dbg !729
  %4004 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %4003) #7, !dbg !729, !srcloc !294
  store i32 %4004, i32* %ret1525.i3546, align 4, !dbg !729
  %4005 = load i32, i32* %ret1525.i3546, align 4, !dbg !729
  store i32 %4005, i32* %tmp1526.i3547, align 4, !dbg !729
  %4006 = load i32, i32* %tmp1526.i3547, align 4, !dbg !729
  %conv1527.i4950 = zext i32 %4006 to i64, !dbg !1281
  %and1528.i4951 = and i64 %conv1527.i4950, 4294967295, !dbg !1282
  %conv1529.i4952 = trunc i64 %and1528.i4951 to i32, !dbg !1281
  store i32 %conv1529.i4952, i32* %r.i3471, align 4, !dbg !1283
  %4007 = load i32, i32* %r.i3471, align 4, !dbg !730
  %shr1531.i4953 = lshr i32 %4007, 1, !dbg !730
  %4008 = load i32, i32* %l.i3470, align 4, !dbg !730
  %xor1532.i4954 = xor i32 %shr1531.i4953, %4008, !dbg !730
  %conv1533.i4955 = zext i32 %xor1532.i4954 to i64, !dbg !730
  %and1534.i4956 = and i64 %conv1533.i4955, 1431655765, !dbg !730
  %conv1535.i4957 = trunc i64 %and1534.i4956 to i32, !dbg !730
  store i32 %conv1535.i4957, i32* %tt1530.i3548, align 4, !dbg !730
  %4009 = load i32, i32* %tt1530.i3548, align 4, !dbg !730
  %4010 = load i32, i32* %l.i3470, align 4, !dbg !730
  %xor1536.i4958 = xor i32 %4010, %4009, !dbg !730
  store i32 %xor1536.i4958, i32* %l.i3470, align 4, !dbg !730
  %4011 = load i32, i32* %tt1530.i3548, align 4, !dbg !730
  %shl1537.i4959 = shl i32 %4011, 1, !dbg !730
  %4012 = load i32, i32* %r.i3471, align 4, !dbg !730
  %xor1538.i4960 = xor i32 %4012, %shl1537.i4959, !dbg !730
  store i32 %xor1538.i4960, i32* %r.i3471, align 4, !dbg !730
  %4013 = load i32, i32* %l.i3470, align 4, !dbg !730
  %shr1539.i4961 = lshr i32 %4013, 8, !dbg !730
  %4014 = load i32, i32* %r.i3471, align 4, !dbg !730
  %xor1540.i4962 = xor i32 %shr1539.i4961, %4014, !dbg !730
  %conv1541.i4963 = zext i32 %xor1540.i4962 to i64, !dbg !730
  %and1542.i4964 = and i64 %conv1541.i4963, 16711935, !dbg !730
  %conv1543.i4965 = trunc i64 %and1542.i4964 to i32, !dbg !730
  store i32 %conv1543.i4965, i32* %tt1530.i3548, align 4, !dbg !730
  %4015 = load i32, i32* %tt1530.i3548, align 4, !dbg !730
  %4016 = load i32, i32* %r.i3471, align 4, !dbg !730
  %xor1544.i4966 = xor i32 %4016, %4015, !dbg !730
  store i32 %xor1544.i4966, i32* %r.i3471, align 4, !dbg !730
  %4017 = load i32, i32* %tt1530.i3548, align 4, !dbg !730
  %shl1545.i4967 = shl i32 %4017, 8, !dbg !730
  %4018 = load i32, i32* %l.i3470, align 4, !dbg !730
  %xor1546.i4968 = xor i32 %4018, %shl1545.i4967, !dbg !730
  store i32 %xor1546.i4968, i32* %l.i3470, align 4, !dbg !730
  %4019 = load i32, i32* %r.i3471, align 4, !dbg !730
  %shr1547.i4969 = lshr i32 %4019, 2, !dbg !730
  %4020 = load i32, i32* %l.i3470, align 4, !dbg !730
  %xor1548.i4970 = xor i32 %shr1547.i4969, %4020, !dbg !730
  %conv1549.i4971 = zext i32 %xor1548.i4970 to i64, !dbg !730
  %and1550.i4972 = and i64 %conv1549.i4971, 858993459, !dbg !730
  %conv1551.i4973 = trunc i64 %and1550.i4972 to i32, !dbg !730
  store i32 %conv1551.i4973, i32* %tt1530.i3548, align 4, !dbg !730
  %4021 = load i32, i32* %tt1530.i3548, align 4, !dbg !730
  %4022 = load i32, i32* %l.i3470, align 4, !dbg !730
  %xor1552.i4974 = xor i32 %4022, %4021, !dbg !730
  store i32 %xor1552.i4974, i32* %l.i3470, align 4, !dbg !730
  %4023 = load i32, i32* %tt1530.i3548, align 4, !dbg !730
  %shl1553.i4975 = shl i32 %4023, 2, !dbg !730
  %4024 = load i32, i32* %r.i3471, align 4, !dbg !730
  %xor1554.i4976 = xor i32 %4024, %shl1553.i4975, !dbg !730
  store i32 %xor1554.i4976, i32* %r.i3471, align 4, !dbg !730
  %4025 = load i32, i32* %l.i3470, align 4, !dbg !730
  %shr1555.i4977 = lshr i32 %4025, 16, !dbg !730
  %4026 = load i32, i32* %r.i3471, align 4, !dbg !730
  %xor1556.i4978 = xor i32 %shr1555.i4977, %4026, !dbg !730
  %conv1557.i4979 = zext i32 %xor1556.i4978 to i64, !dbg !730
  %and1558.i4980 = and i64 %conv1557.i4979, 65535, !dbg !730
  %conv1559.i4981 = trunc i64 %and1558.i4980 to i32, !dbg !730
  store i32 %conv1559.i4981, i32* %tt1530.i3548, align 4, !dbg !730
  %4027 = load i32, i32* %tt1530.i3548, align 4, !dbg !730
  %4028 = load i32, i32* %r.i3471, align 4, !dbg !730
  %xor1560.i4982 = xor i32 %4028, %4027, !dbg !730
  store i32 %xor1560.i4982, i32* %r.i3471, align 4, !dbg !730
  %4029 = load i32, i32* %tt1530.i3548, align 4, !dbg !730
  %shl1561.i4983 = shl i32 %4029, 16, !dbg !730
  %4030 = load i32, i32* %l.i3470, align 4, !dbg !730
  %xor1562.i4984 = xor i32 %4030, %shl1561.i4983, !dbg !730
  store i32 %xor1562.i4984, i32* %l.i3470, align 4, !dbg !730
  %4031 = load i32, i32* %r.i3471, align 4, !dbg !730
  %shr1563.i4985 = lshr i32 %4031, 4, !dbg !730
  %4032 = load i32, i32* %l.i3470, align 4, !dbg !730
  %xor1564.i4986 = xor i32 %shr1563.i4985, %4032, !dbg !730
  %conv1565.i4987 = zext i32 %xor1564.i4986 to i64, !dbg !730
  %and1566.i4988 = and i64 %conv1565.i4987, 252645135, !dbg !730
  %conv1567.i4989 = trunc i64 %and1566.i4988 to i32, !dbg !730
  store i32 %conv1567.i4989, i32* %tt1530.i3548, align 4, !dbg !730
  %4033 = load i32, i32* %tt1530.i3548, align 4, !dbg !730
  %4034 = load i32, i32* %l.i3470, align 4, !dbg !730
  %xor1568.i4990 = xor i32 %4034, %4033, !dbg !730
  store i32 %xor1568.i4990, i32* %l.i3470, align 4, !dbg !730
  %4035 = load i32, i32* %tt1530.i3548, align 4, !dbg !730
  %shl1569.i4991 = shl i32 %4035, 4, !dbg !730
  %4036 = load i32, i32* %r.i3471, align 4, !dbg !730
  %xor1570.i4992 = xor i32 %4036, %shl1569.i4991, !dbg !730
  store i32 %xor1570.i4992, i32* %r.i3471, align 4, !dbg !730
  %4037 = load i32, i32* %l.i3470, align 4, !dbg !1284
  %4038 = load i32*, i32** %data.addr.i3467, align 8, !dbg !1285
  store i32 %4037, i32* %4038, align 4, !dbg !1286
  %4039 = load i32, i32* %r.i3471, align 4, !dbg !1287
  %4040 = load i32*, i32** %data.addr.i3467, align 8, !dbg !1288
  %arrayidx1572.i4993 = getelementptr inbounds i32, i32* %4040, i64 1, !dbg !1288
  store i32 %4039, i32* %arrayidx1572.i4993, align 4, !dbg !1289
  store i32 0, i32* %u.i3473, align 4, !dbg !1290
  store i32 0, i32* %t.i3472, align 4, !dbg !1291
  store i32 0, i32* %r.i3471, align 4, !dbg !1292
  store i32 0, i32* %l.i3470, align 4, !dbg !1293
  %arrayidx330 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1294
  %4041 = load i32, i32* %arrayidx330, align 4, !dbg !1294
  %4042 = load i32, i32* %xor0, align 4, !dbg !1295
  %xor331 = xor i32 %4041, %4042, !dbg !1296
  store i32 %xor331, i32* %tout0, align 4, !dbg !1297
  %arrayidx332 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1298
  %4043 = load i32, i32* %arrayidx332, align 4, !dbg !1298
  %4044 = load i32, i32* %xor1, align 4, !dbg !1299
  %xor333 = xor i32 %4043, %4044, !dbg !1300
  store i32 %xor333, i32* %tout1, align 4, !dbg !1301
  %4045 = load i64, i64* %l, align 8, !dbg !1302
  %add334 = add nsw i64 %4045, 8, !dbg !1302
  %4046 = load i8*, i8** %out.addr, align 8, !dbg !1302
  %add.ptr335 = getelementptr inbounds i8, i8* %4046, i64 %add334, !dbg !1302
  store i8* %add.ptr335, i8** %out.addr, align 8, !dbg !1302
  %4047 = load i64, i64* %l, align 8, !dbg !1302
  %add336 = add nsw i64 %4047, 8, !dbg !1302
  switch i64 %add336, label %sw.epilog375 [
    i64 8, label %sw.bb337
    i64 7, label %sw.bb342
    i64 6, label %sw.bb347
    i64 5, label %sw.bb352
    i64 4, label %sw.bb356
    i64 3, label %sw.bb361
    i64 2, label %sw.bb366
    i64 1, label %sw.bb371
  ], !dbg !1302

sw.bb337:                                         ; preds = %DES_encrypt1.exit4994
  %4048 = load i32, i32* %tout1, align 4, !dbg !1304
  %shr338 = lshr i32 %4048, 24, !dbg !1304
  %and339 = and i32 %shr338, 255, !dbg !1304
  %conv340 = trunc i32 %and339 to i8, !dbg !1304
  %4049 = load i8*, i8** %out.addr, align 8, !dbg !1304
  %incdec.ptr341 = getelementptr inbounds i8, i8* %4049, i32 -1, !dbg !1304
  store i8* %incdec.ptr341, i8** %out.addr, align 8, !dbg !1304
  store i8 %conv340, i8* %incdec.ptr341, align 1, !dbg !1304
  br label %sw.bb342, !dbg !1304

sw.bb342:                                         ; preds = %DES_encrypt1.exit4994, %sw.bb337
  %4050 = load i32, i32* %tout1, align 4, !dbg !1304
  %shr343 = lshr i32 %4050, 16, !dbg !1304
  %and344 = and i32 %shr343, 255, !dbg !1304
  %conv345 = trunc i32 %and344 to i8, !dbg !1304
  %4051 = load i8*, i8** %out.addr, align 8, !dbg !1304
  %incdec.ptr346 = getelementptr inbounds i8, i8* %4051, i32 -1, !dbg !1304
  store i8* %incdec.ptr346, i8** %out.addr, align 8, !dbg !1304
  store i8 %conv345, i8* %incdec.ptr346, align 1, !dbg !1304
  br label %sw.bb347, !dbg !1304

sw.bb347:                                         ; preds = %DES_encrypt1.exit4994, %sw.bb342
  %4052 = load i32, i32* %tout1, align 4, !dbg !1304
  %shr348 = lshr i32 %4052, 8, !dbg !1304
  %and349 = and i32 %shr348, 255, !dbg !1304
  %conv350 = trunc i32 %and349 to i8, !dbg !1304
  %4053 = load i8*, i8** %out.addr, align 8, !dbg !1304
  %incdec.ptr351 = getelementptr inbounds i8, i8* %4053, i32 -1, !dbg !1304
  store i8* %incdec.ptr351, i8** %out.addr, align 8, !dbg !1304
  store i8 %conv350, i8* %incdec.ptr351, align 1, !dbg !1304
  br label %sw.bb352, !dbg !1304

sw.bb352:                                         ; preds = %DES_encrypt1.exit4994, %sw.bb347
  %4054 = load i32, i32* %tout1, align 4, !dbg !1304
  %and353 = and i32 %4054, 255, !dbg !1304
  %conv354 = trunc i32 %and353 to i8, !dbg !1304
  %4055 = load i8*, i8** %out.addr, align 8, !dbg !1304
  %incdec.ptr355 = getelementptr inbounds i8, i8* %4055, i32 -1, !dbg !1304
  store i8* %incdec.ptr355, i8** %out.addr, align 8, !dbg !1304
  store i8 %conv354, i8* %incdec.ptr355, align 1, !dbg !1304
  br label %sw.bb356, !dbg !1304

sw.bb356:                                         ; preds = %DES_encrypt1.exit4994, %sw.bb352
  %4056 = load i32, i32* %tout0, align 4, !dbg !1304
  %shr357 = lshr i32 %4056, 24, !dbg !1304
  %and358 = and i32 %shr357, 255, !dbg !1304
  %conv359 = trunc i32 %and358 to i8, !dbg !1304
  %4057 = load i8*, i8** %out.addr, align 8, !dbg !1304
  %incdec.ptr360 = getelementptr inbounds i8, i8* %4057, i32 -1, !dbg !1304
  store i8* %incdec.ptr360, i8** %out.addr, align 8, !dbg !1304
  store i8 %conv359, i8* %incdec.ptr360, align 1, !dbg !1304
  br label %sw.bb361, !dbg !1304

sw.bb361:                                         ; preds = %DES_encrypt1.exit4994, %sw.bb356
  %4058 = load i32, i32* %tout0, align 4, !dbg !1304
  %shr362 = lshr i32 %4058, 16, !dbg !1304
  %and363 = and i32 %shr362, 255, !dbg !1304
  %conv364 = trunc i32 %and363 to i8, !dbg !1304
  %4059 = load i8*, i8** %out.addr, align 8, !dbg !1304
  %incdec.ptr365 = getelementptr inbounds i8, i8* %4059, i32 -1, !dbg !1304
  store i8* %incdec.ptr365, i8** %out.addr, align 8, !dbg !1304
  store i8 %conv364, i8* %incdec.ptr365, align 1, !dbg !1304
  br label %sw.bb366, !dbg !1304

sw.bb366:                                         ; preds = %DES_encrypt1.exit4994, %sw.bb361
  %4060 = load i32, i32* %tout0, align 4, !dbg !1304
  %shr367 = lshr i32 %4060, 8, !dbg !1304
  %and368 = and i32 %shr367, 255, !dbg !1304
  %conv369 = trunc i32 %and368 to i8, !dbg !1304
  %4061 = load i8*, i8** %out.addr, align 8, !dbg !1304
  %incdec.ptr370 = getelementptr inbounds i8, i8* %4061, i32 -1, !dbg !1304
  store i8* %incdec.ptr370, i8** %out.addr, align 8, !dbg !1304
  store i8 %conv369, i8* %incdec.ptr370, align 1, !dbg !1304
  br label %sw.bb371, !dbg !1304

sw.bb371:                                         ; preds = %DES_encrypt1.exit4994, %sw.bb366
  %4062 = load i32, i32* %tout0, align 4, !dbg !1304
  %and372 = and i32 %4062, 255, !dbg !1304
  %conv373 = trunc i32 %and372 to i8, !dbg !1304
  %4063 = load i8*, i8** %out.addr, align 8, !dbg !1304
  %incdec.ptr374 = getelementptr inbounds i8, i8* %4063, i32 -1, !dbg !1304
  store i8* %incdec.ptr374, i8** %out.addr, align 8, !dbg !1304
  store i8 %conv373, i8* %incdec.ptr374, align 1, !dbg !1304
  br label %sw.epilog375, !dbg !1304

sw.epilog375:                                     ; preds = %sw.bb371, %DES_encrypt1.exit4994
  %4064 = load i32, i32* %tin0, align 4, !dbg !1306
  store i32 %4064, i32* %xor0, align 4, !dbg !1307
  %4065 = load i32, i32* %tin1, align 4, !dbg !1308
  store i32 %4065, i32* %xor1, align 4, !dbg !1309
  br label %if.end376, !dbg !1310

if.end376:                                        ; preds = %sw.epilog375, %for.end295
  %4066 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !1311
  %arrayidx377 = getelementptr inbounds [8 x i8], [8 x i8]* %4066, i64 0, i64 0, !dbg !1312
  store i8* %arrayidx377, i8** %iv, align 8, !dbg !1313
  %4067 = load i32, i32* %xor0, align 4, !dbg !1314
  %and378 = and i32 %4067, 255, !dbg !1314
  %conv379 = trunc i32 %and378 to i8, !dbg !1314
  %4068 = load i8*, i8** %iv, align 8, !dbg !1314
  %incdec.ptr380 = getelementptr inbounds i8, i8* %4068, i32 1, !dbg !1314
  store i8* %incdec.ptr380, i8** %iv, align 8, !dbg !1314
  store i8 %conv379, i8* %4068, align 1, !dbg !1314
  %4069 = load i32, i32* %xor0, align 4, !dbg !1314
  %shr381 = lshr i32 %4069, 8, !dbg !1314
  %and382 = and i32 %shr381, 255, !dbg !1314
  %conv383 = trunc i32 %and382 to i8, !dbg !1314
  %4070 = load i8*, i8** %iv, align 8, !dbg !1314
  %incdec.ptr384 = getelementptr inbounds i8, i8* %4070, i32 1, !dbg !1314
  store i8* %incdec.ptr384, i8** %iv, align 8, !dbg !1314
  store i8 %conv383, i8* %4070, align 1, !dbg !1314
  %4071 = load i32, i32* %xor0, align 4, !dbg !1314
  %shr385 = lshr i32 %4071, 16, !dbg !1314
  %and386 = and i32 %shr385, 255, !dbg !1314
  %conv387 = trunc i32 %and386 to i8, !dbg !1314
  %4072 = load i8*, i8** %iv, align 8, !dbg !1314
  %incdec.ptr388 = getelementptr inbounds i8, i8* %4072, i32 1, !dbg !1314
  store i8* %incdec.ptr388, i8** %iv, align 8, !dbg !1314
  store i8 %conv387, i8* %4072, align 1, !dbg !1314
  %4073 = load i32, i32* %xor0, align 4, !dbg !1314
  %shr389 = lshr i32 %4073, 24, !dbg !1314
  %and390 = and i32 %shr389, 255, !dbg !1314
  %conv391 = trunc i32 %and390 to i8, !dbg !1314
  %4074 = load i8*, i8** %iv, align 8, !dbg !1314
  %incdec.ptr392 = getelementptr inbounds i8, i8* %4074, i32 1, !dbg !1314
  store i8* %incdec.ptr392, i8** %iv, align 8, !dbg !1314
  store i8 %conv391, i8* %4074, align 1, !dbg !1314
  %4075 = load i32, i32* %xor1, align 4, !dbg !1315
  %and393 = and i32 %4075, 255, !dbg !1315
  %conv394 = trunc i32 %and393 to i8, !dbg !1315
  %4076 = load i8*, i8** %iv, align 8, !dbg !1315
  %incdec.ptr395 = getelementptr inbounds i8, i8* %4076, i32 1, !dbg !1315
  store i8* %incdec.ptr395, i8** %iv, align 8, !dbg !1315
  store i8 %conv394, i8* %4076, align 1, !dbg !1315
  %4077 = load i32, i32* %xor1, align 4, !dbg !1315
  %shr396 = lshr i32 %4077, 8, !dbg !1315
  %and397 = and i32 %shr396, 255, !dbg !1315
  %conv398 = trunc i32 %and397 to i8, !dbg !1315
  %4078 = load i8*, i8** %iv, align 8, !dbg !1315
  %incdec.ptr399 = getelementptr inbounds i8, i8* %4078, i32 1, !dbg !1315
  store i8* %incdec.ptr399, i8** %iv, align 8, !dbg !1315
  store i8 %conv398, i8* %4078, align 1, !dbg !1315
  %4079 = load i32, i32* %xor1, align 4, !dbg !1315
  %shr400 = lshr i32 %4079, 16, !dbg !1315
  %and401 = and i32 %shr400, 255, !dbg !1315
  %conv402 = trunc i32 %and401 to i8, !dbg !1315
  %4080 = load i8*, i8** %iv, align 8, !dbg !1315
  %incdec.ptr403 = getelementptr inbounds i8, i8* %4080, i32 1, !dbg !1315
  store i8* %incdec.ptr403, i8** %iv, align 8, !dbg !1315
  store i8 %conv402, i8* %4080, align 1, !dbg !1315
  %4081 = load i32, i32* %xor1, align 4, !dbg !1315
  %shr404 = lshr i32 %4081, 24, !dbg !1315
  %and405 = and i32 %shr404, 255, !dbg !1315
  %conv406 = trunc i32 %and405 to i8, !dbg !1315
  %4082 = load i8*, i8** %iv, align 8, !dbg !1315
  %incdec.ptr407 = getelementptr inbounds i8, i8* %4082, i32 1, !dbg !1315
  store i8* %incdec.ptr407, i8** %iv, align 8, !dbg !1315
  store i8 %conv406, i8* %4082, align 1, !dbg !1315
  br label %if.end408

if.end408:                                        ; preds = %if.end376, %if.end
  store i32 0, i32* %xor1, align 4, !dbg !1316
  store i32 0, i32* %xor0, align 4, !dbg !1317
  store i32 0, i32* %tout1, align 4, !dbg !1318
  store i32 0, i32* %tout0, align 4, !dbg !1319
  store i32 0, i32* %tin1, align 4, !dbg !1320
  store i32 0, i32* %tin0, align 4, !dbg !1321
  %arrayidx409 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1322
  store i32 0, i32* %arrayidx409, align 4, !dbg !1323
  %arrayidx410 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1324
  store i32 0, i32* %arrayidx410, align 4, !dbg !1325
  ret void, !dbg !1326
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_ede3_cbc_encrypt(i8* %input, i8* %output, i64 %length, %struct.DES_ks* %ks1, %struct.DES_ks* %ks2, %struct.DES_ks* %ks3, [8 x i8]* %ivec, i32 %enc) #3 !dbg !1327 {
entry:
  %input.addr = alloca i8*, align 8
  %output.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %ks1.addr = alloca %struct.DES_ks*, align 8
  %ks2.addr = alloca %struct.DES_ks*, align 8
  %ks3.addr = alloca %struct.DES_ks*, align 8
  %ivec.addr = alloca [8 x i8]*, align 8
  %enc.addr = alloca i32, align 4
  %tin0 = alloca i32, align 4
  %tin1 = alloca i32, align 4
  %tout0 = alloca i32, align 4
  %tout1 = alloca i32, align 4
  %xor0 = alloca i32, align 4
  %xor1 = alloca i32, align 4
  %in = alloca i8*, align 8
  %out = alloca i8*, align 8
  %l = alloca i64, align 8
  %tin = alloca [2 x i32], align 4
  %iv = alloca i8*, align 8
  %t0 = alloca i32, align 4
  %t1 = alloca i32, align 4
  store i8* %input, i8** %input.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %input.addr, metadata !1330, metadata !DIExpression()), !dbg !1331
  store i8* %output, i8** %output.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %output.addr, metadata !1332, metadata !DIExpression()), !dbg !1333
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !1334, metadata !DIExpression()), !dbg !1335
  store %struct.DES_ks* %ks1, %struct.DES_ks** %ks1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks1.addr, metadata !1336, metadata !DIExpression()), !dbg !1337
  store %struct.DES_ks* %ks2, %struct.DES_ks** %ks2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks2.addr, metadata !1338, metadata !DIExpression()), !dbg !1339
  store %struct.DES_ks* %ks3, %struct.DES_ks** %ks3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks3.addr, metadata !1340, metadata !DIExpression()), !dbg !1341
  store [8 x i8]* %ivec, [8 x i8]** %ivec.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %ivec.addr, metadata !1342, metadata !DIExpression()), !dbg !1343
  store i32 %enc, i32* %enc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr, metadata !1344, metadata !DIExpression()), !dbg !1345
  call void @llvm.dbg.declare(metadata i32* %tin0, metadata !1346, metadata !DIExpression()), !dbg !1347
  call void @llvm.dbg.declare(metadata i32* %tin1, metadata !1348, metadata !DIExpression()), !dbg !1349
  call void @llvm.dbg.declare(metadata i32* %tout0, metadata !1350, metadata !DIExpression()), !dbg !1351
  call void @llvm.dbg.declare(metadata i32* %tout1, metadata !1352, metadata !DIExpression()), !dbg !1353
  call void @llvm.dbg.declare(metadata i32* %xor0, metadata !1354, metadata !DIExpression()), !dbg !1355
  call void @llvm.dbg.declare(metadata i32* %xor1, metadata !1356, metadata !DIExpression()), !dbg !1357
  call void @llvm.dbg.declare(metadata i8** %in, metadata !1358, metadata !DIExpression()), !dbg !1359
  call void @llvm.dbg.declare(metadata i8** %out, metadata !1360, metadata !DIExpression()), !dbg !1361
  call void @llvm.dbg.declare(metadata i64* %l, metadata !1362, metadata !DIExpression()), !dbg !1363
  %0 = load i64, i64* %length.addr, align 8, !dbg !1364
  store i64 %0, i64* %l, align 8, !dbg !1363
  call void @llvm.dbg.declare(metadata [2 x i32]* %tin, metadata !1365, metadata !DIExpression()), !dbg !1366
  call void @llvm.dbg.declare(metadata i8** %iv, metadata !1367, metadata !DIExpression()), !dbg !1368
  %1 = load i8*, i8** %input.addr, align 8, !dbg !1369
  store i8* %1, i8** %in, align 8, !dbg !1370
  %2 = load i8*, i8** %output.addr, align 8, !dbg !1371
  store i8* %2, i8** %out, align 8, !dbg !1372
  %3 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !1373
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 0, !dbg !1374
  store i8* %arrayidx, i8** %iv, align 8, !dbg !1375
  %4 = load i32, i32* %enc.addr, align 4, !dbg !1376
  %tobool = icmp ne i32 %4, 0, !dbg !1376
  br i1 %tobool, label %if.then, label %if.else, !dbg !1378

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %iv, align 8, !dbg !1379
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !1379
  store i8* %incdec.ptr, i8** %iv, align 8, !dbg !1379
  %6 = load i8, i8* %5, align 1, !dbg !1379
  %conv = zext i8 %6 to i32, !dbg !1379
  store i32 %conv, i32* %tout0, align 4, !dbg !1379
  %7 = load i8*, i8** %iv, align 8, !dbg !1379
  %incdec.ptr1 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !1379
  store i8* %incdec.ptr1, i8** %iv, align 8, !dbg !1379
  %8 = load i8, i8* %7, align 1, !dbg !1379
  %conv2 = zext i8 %8 to i32, !dbg !1379
  %shl = shl i32 %conv2, 8, !dbg !1379
  %9 = load i32, i32* %tout0, align 4, !dbg !1379
  %or = or i32 %9, %shl, !dbg !1379
  store i32 %or, i32* %tout0, align 4, !dbg !1379
  %10 = load i8*, i8** %iv, align 8, !dbg !1379
  %incdec.ptr3 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !1379
  store i8* %incdec.ptr3, i8** %iv, align 8, !dbg !1379
  %11 = load i8, i8* %10, align 1, !dbg !1379
  %conv4 = zext i8 %11 to i32, !dbg !1379
  %shl5 = shl i32 %conv4, 16, !dbg !1379
  %12 = load i32, i32* %tout0, align 4, !dbg !1379
  %or6 = or i32 %12, %shl5, !dbg !1379
  store i32 %or6, i32* %tout0, align 4, !dbg !1379
  %13 = load i8*, i8** %iv, align 8, !dbg !1379
  %incdec.ptr7 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !1379
  store i8* %incdec.ptr7, i8** %iv, align 8, !dbg !1379
  %14 = load i8, i8* %13, align 1, !dbg !1379
  %conv8 = zext i8 %14 to i32, !dbg !1379
  %shl9 = shl i32 %conv8, 24, !dbg !1379
  %15 = load i32, i32* %tout0, align 4, !dbg !1379
  %or10 = or i32 %15, %shl9, !dbg !1379
  store i32 %or10, i32* %tout0, align 4, !dbg !1379
  %16 = load i8*, i8** %iv, align 8, !dbg !1381
  %incdec.ptr11 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !1381
  store i8* %incdec.ptr11, i8** %iv, align 8, !dbg !1381
  %17 = load i8, i8* %16, align 1, !dbg !1381
  %conv12 = zext i8 %17 to i32, !dbg !1381
  store i32 %conv12, i32* %tout1, align 4, !dbg !1381
  %18 = load i8*, i8** %iv, align 8, !dbg !1381
  %incdec.ptr13 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !1381
  store i8* %incdec.ptr13, i8** %iv, align 8, !dbg !1381
  %19 = load i8, i8* %18, align 1, !dbg !1381
  %conv14 = zext i8 %19 to i32, !dbg !1381
  %shl15 = shl i32 %conv14, 8, !dbg !1381
  %20 = load i32, i32* %tout1, align 4, !dbg !1381
  %or16 = or i32 %20, %shl15, !dbg !1381
  store i32 %or16, i32* %tout1, align 4, !dbg !1381
  %21 = load i8*, i8** %iv, align 8, !dbg !1381
  %incdec.ptr17 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !1381
  store i8* %incdec.ptr17, i8** %iv, align 8, !dbg !1381
  %22 = load i8, i8* %21, align 1, !dbg !1381
  %conv18 = zext i8 %22 to i32, !dbg !1381
  %shl19 = shl i32 %conv18, 16, !dbg !1381
  %23 = load i32, i32* %tout1, align 4, !dbg !1381
  %or20 = or i32 %23, %shl19, !dbg !1381
  store i32 %or20, i32* %tout1, align 4, !dbg !1381
  %24 = load i8*, i8** %iv, align 8, !dbg !1381
  %incdec.ptr21 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !1381
  store i8* %incdec.ptr21, i8** %iv, align 8, !dbg !1381
  %25 = load i8, i8* %24, align 1, !dbg !1381
  %conv22 = zext i8 %25 to i32, !dbg !1381
  %shl23 = shl i32 %conv22, 24, !dbg !1381
  %26 = load i32, i32* %tout1, align 4, !dbg !1381
  %or24 = or i32 %26, %shl23, !dbg !1381
  store i32 %or24, i32* %tout1, align 4, !dbg !1381
  %27 = load i64, i64* %l, align 8, !dbg !1382
  %sub = sub nsw i64 %27, 8, !dbg !1382
  store i64 %sub, i64* %l, align 8, !dbg !1382
  br label %for.cond, !dbg !1384

for.cond:                                         ; preds = %for.inc, %if.then
  %28 = load i64, i64* %l, align 8, !dbg !1385
  %cmp = icmp sge i64 %28, 0, !dbg !1387
  br i1 %cmp, label %for.body, label %for.end, !dbg !1388

for.body:                                         ; preds = %for.cond
  %29 = load i8*, i8** %in, align 8, !dbg !1389
  %incdec.ptr26 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !1389
  store i8* %incdec.ptr26, i8** %in, align 8, !dbg !1389
  %30 = load i8, i8* %29, align 1, !dbg !1389
  %conv27 = zext i8 %30 to i32, !dbg !1389
  store i32 %conv27, i32* %tin0, align 4, !dbg !1389
  %31 = load i8*, i8** %in, align 8, !dbg !1389
  %incdec.ptr28 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !1389
  store i8* %incdec.ptr28, i8** %in, align 8, !dbg !1389
  %32 = load i8, i8* %31, align 1, !dbg !1389
  %conv29 = zext i8 %32 to i32, !dbg !1389
  %shl30 = shl i32 %conv29, 8, !dbg !1389
  %33 = load i32, i32* %tin0, align 4, !dbg !1389
  %or31 = or i32 %33, %shl30, !dbg !1389
  store i32 %or31, i32* %tin0, align 4, !dbg !1389
  %34 = load i8*, i8** %in, align 8, !dbg !1389
  %incdec.ptr32 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !1389
  store i8* %incdec.ptr32, i8** %in, align 8, !dbg !1389
  %35 = load i8, i8* %34, align 1, !dbg !1389
  %conv33 = zext i8 %35 to i32, !dbg !1389
  %shl34 = shl i32 %conv33, 16, !dbg !1389
  %36 = load i32, i32* %tin0, align 4, !dbg !1389
  %or35 = or i32 %36, %shl34, !dbg !1389
  store i32 %or35, i32* %tin0, align 4, !dbg !1389
  %37 = load i8*, i8** %in, align 8, !dbg !1389
  %incdec.ptr36 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !1389
  store i8* %incdec.ptr36, i8** %in, align 8, !dbg !1389
  %38 = load i8, i8* %37, align 1, !dbg !1389
  %conv37 = zext i8 %38 to i32, !dbg !1389
  %shl38 = shl i32 %conv37, 24, !dbg !1389
  %39 = load i32, i32* %tin0, align 4, !dbg !1389
  %or39 = or i32 %39, %shl38, !dbg !1389
  store i32 %or39, i32* %tin0, align 4, !dbg !1389
  %40 = load i8*, i8** %in, align 8, !dbg !1391
  %incdec.ptr40 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !1391
  store i8* %incdec.ptr40, i8** %in, align 8, !dbg !1391
  %41 = load i8, i8* %40, align 1, !dbg !1391
  %conv41 = zext i8 %41 to i32, !dbg !1391
  store i32 %conv41, i32* %tin1, align 4, !dbg !1391
  %42 = load i8*, i8** %in, align 8, !dbg !1391
  %incdec.ptr42 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !1391
  store i8* %incdec.ptr42, i8** %in, align 8, !dbg !1391
  %43 = load i8, i8* %42, align 1, !dbg !1391
  %conv43 = zext i8 %43 to i32, !dbg !1391
  %shl44 = shl i32 %conv43, 8, !dbg !1391
  %44 = load i32, i32* %tin1, align 4, !dbg !1391
  %or45 = or i32 %44, %shl44, !dbg !1391
  store i32 %or45, i32* %tin1, align 4, !dbg !1391
  %45 = load i8*, i8** %in, align 8, !dbg !1391
  %incdec.ptr46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !1391
  store i8* %incdec.ptr46, i8** %in, align 8, !dbg !1391
  %46 = load i8, i8* %45, align 1, !dbg !1391
  %conv47 = zext i8 %46 to i32, !dbg !1391
  %shl48 = shl i32 %conv47, 16, !dbg !1391
  %47 = load i32, i32* %tin1, align 4, !dbg !1391
  %or49 = or i32 %47, %shl48, !dbg !1391
  store i32 %or49, i32* %tin1, align 4, !dbg !1391
  %48 = load i8*, i8** %in, align 8, !dbg !1391
  %incdec.ptr50 = getelementptr inbounds i8, i8* %48, i32 1, !dbg !1391
  store i8* %incdec.ptr50, i8** %in, align 8, !dbg !1391
  %49 = load i8, i8* %48, align 1, !dbg !1391
  %conv51 = zext i8 %49 to i32, !dbg !1391
  %shl52 = shl i32 %conv51, 24, !dbg !1391
  %50 = load i32, i32* %tin1, align 4, !dbg !1391
  %or53 = or i32 %50, %shl52, !dbg !1391
  store i32 %or53, i32* %tin1, align 4, !dbg !1391
  %51 = load i32, i32* %tout0, align 4, !dbg !1392
  %52 = load i32, i32* %tin0, align 4, !dbg !1393
  %xor = xor i32 %52, %51, !dbg !1393
  store i32 %xor, i32* %tin0, align 4, !dbg !1393
  %53 = load i32, i32* %tout1, align 4, !dbg !1394
  %54 = load i32, i32* %tin1, align 4, !dbg !1395
  %xor54 = xor i32 %54, %53, !dbg !1395
  store i32 %xor54, i32* %tin1, align 4, !dbg !1395
  %55 = load i32, i32* %tin0, align 4, !dbg !1396
  %arrayidx55 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1397
  store i32 %55, i32* %arrayidx55, align 4, !dbg !1398
  %56 = load i32, i32* %tin1, align 4, !dbg !1399
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1400
  store i32 %56, i32* %arrayidx56, align 4, !dbg !1401
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1402
  %57 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !1403
  %58 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !1404
  %59 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !1405
  call void @DES_encrypt3(i32* %arraydecay, %struct.DES_ks* %57, %struct.DES_ks* %58, %struct.DES_ks* %59), !dbg !1406
  %arrayidx57 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1407
  %60 = load i32, i32* %arrayidx57, align 4, !dbg !1407
  store i32 %60, i32* %tout0, align 4, !dbg !1408
  %arrayidx58 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1409
  %61 = load i32, i32* %arrayidx58, align 4, !dbg !1409
  store i32 %61, i32* %tout1, align 4, !dbg !1410
  %62 = load i32, i32* %tout0, align 4, !dbg !1411
  %and = and i32 %62, 255, !dbg !1411
  %conv59 = trunc i32 %and to i8, !dbg !1411
  %63 = load i8*, i8** %out, align 8, !dbg !1411
  %incdec.ptr60 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !1411
  store i8* %incdec.ptr60, i8** %out, align 8, !dbg !1411
  store i8 %conv59, i8* %63, align 1, !dbg !1411
  %64 = load i32, i32* %tout0, align 4, !dbg !1411
  %shr = lshr i32 %64, 8, !dbg !1411
  %and61 = and i32 %shr, 255, !dbg !1411
  %conv62 = trunc i32 %and61 to i8, !dbg !1411
  %65 = load i8*, i8** %out, align 8, !dbg !1411
  %incdec.ptr63 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !1411
  store i8* %incdec.ptr63, i8** %out, align 8, !dbg !1411
  store i8 %conv62, i8* %65, align 1, !dbg !1411
  %66 = load i32, i32* %tout0, align 4, !dbg !1411
  %shr64 = lshr i32 %66, 16, !dbg !1411
  %and65 = and i32 %shr64, 255, !dbg !1411
  %conv66 = trunc i32 %and65 to i8, !dbg !1411
  %67 = load i8*, i8** %out, align 8, !dbg !1411
  %incdec.ptr67 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !1411
  store i8* %incdec.ptr67, i8** %out, align 8, !dbg !1411
  store i8 %conv66, i8* %67, align 1, !dbg !1411
  %68 = load i32, i32* %tout0, align 4, !dbg !1411
  %shr68 = lshr i32 %68, 24, !dbg !1411
  %and69 = and i32 %shr68, 255, !dbg !1411
  %conv70 = trunc i32 %and69 to i8, !dbg !1411
  %69 = load i8*, i8** %out, align 8, !dbg !1411
  %incdec.ptr71 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !1411
  store i8* %incdec.ptr71, i8** %out, align 8, !dbg !1411
  store i8 %conv70, i8* %69, align 1, !dbg !1411
  %70 = load i32, i32* %tout1, align 4, !dbg !1412
  %and72 = and i32 %70, 255, !dbg !1412
  %conv73 = trunc i32 %and72 to i8, !dbg !1412
  %71 = load i8*, i8** %out, align 8, !dbg !1412
  %incdec.ptr74 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !1412
  store i8* %incdec.ptr74, i8** %out, align 8, !dbg !1412
  store i8 %conv73, i8* %71, align 1, !dbg !1412
  %72 = load i32, i32* %tout1, align 4, !dbg !1412
  %shr75 = lshr i32 %72, 8, !dbg !1412
  %and76 = and i32 %shr75, 255, !dbg !1412
  %conv77 = trunc i32 %and76 to i8, !dbg !1412
  %73 = load i8*, i8** %out, align 8, !dbg !1412
  %incdec.ptr78 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !1412
  store i8* %incdec.ptr78, i8** %out, align 8, !dbg !1412
  store i8 %conv77, i8* %73, align 1, !dbg !1412
  %74 = load i32, i32* %tout1, align 4, !dbg !1412
  %shr79 = lshr i32 %74, 16, !dbg !1412
  %and80 = and i32 %shr79, 255, !dbg !1412
  %conv81 = trunc i32 %and80 to i8, !dbg !1412
  %75 = load i8*, i8** %out, align 8, !dbg !1412
  %incdec.ptr82 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !1412
  store i8* %incdec.ptr82, i8** %out, align 8, !dbg !1412
  store i8 %conv81, i8* %75, align 1, !dbg !1412
  %76 = load i32, i32* %tout1, align 4, !dbg !1412
  %shr83 = lshr i32 %76, 24, !dbg !1412
  %and84 = and i32 %shr83, 255, !dbg !1412
  %conv85 = trunc i32 %and84 to i8, !dbg !1412
  %77 = load i8*, i8** %out, align 8, !dbg !1412
  %incdec.ptr86 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !1412
  store i8* %incdec.ptr86, i8** %out, align 8, !dbg !1412
  store i8 %conv85, i8* %77, align 1, !dbg !1412
  br label %for.inc, !dbg !1413

for.inc:                                          ; preds = %for.body
  %78 = load i64, i64* %l, align 8, !dbg !1414
  %sub87 = sub nsw i64 %78, 8, !dbg !1414
  store i64 %sub87, i64* %l, align 8, !dbg !1414
  br label %for.cond, !dbg !1415, !llvm.loop !1416

for.end:                                          ; preds = %for.cond
  %79 = load i64, i64* %l, align 8, !dbg !1418
  %cmp88 = icmp ne i64 %79, -8, !dbg !1420
  br i1 %cmp88, label %if.then90, label %if.end, !dbg !1421

if.then90:                                        ; preds = %for.end
  %80 = load i64, i64* %l, align 8, !dbg !1422
  %add = add nsw i64 %80, 8, !dbg !1422
  %81 = load i8*, i8** %in, align 8, !dbg !1422
  %add.ptr = getelementptr inbounds i8, i8* %81, i64 %add, !dbg !1422
  store i8* %add.ptr, i8** %in, align 8, !dbg !1422
  store i32 0, i32* %tin1, align 4, !dbg !1422
  store i32 0, i32* %tin0, align 4, !dbg !1422
  %82 = load i64, i64* %l, align 8, !dbg !1422
  %add91 = add nsw i64 %82, 8, !dbg !1422
  switch i64 %add91, label %sw.epilog [
    i64 8, label %sw.bb
    i64 7, label %sw.bb95
    i64 6, label %sw.bb100
    i64 5, label %sw.bb105
    i64 4, label %sw.bb109
    i64 3, label %sw.bb113
    i64 2, label %sw.bb118
    i64 1, label %sw.bb123
  ], !dbg !1422

sw.bb:                                            ; preds = %if.then90
  %83 = load i8*, i8** %in, align 8, !dbg !1425
  %incdec.ptr92 = getelementptr inbounds i8, i8* %83, i32 -1, !dbg !1425
  store i8* %incdec.ptr92, i8** %in, align 8, !dbg !1425
  %84 = load i8, i8* %incdec.ptr92, align 1, !dbg !1425
  %conv93 = zext i8 %84 to i32, !dbg !1425
  %shl94 = shl i32 %conv93, 24, !dbg !1425
  store i32 %shl94, i32* %tin1, align 4, !dbg !1425
  br label %sw.bb95, !dbg !1425

sw.bb95:                                          ; preds = %if.then90, %sw.bb
  %85 = load i8*, i8** %in, align 8, !dbg !1425
  %incdec.ptr96 = getelementptr inbounds i8, i8* %85, i32 -1, !dbg !1425
  store i8* %incdec.ptr96, i8** %in, align 8, !dbg !1425
  %86 = load i8, i8* %incdec.ptr96, align 1, !dbg !1425
  %conv97 = zext i8 %86 to i32, !dbg !1425
  %shl98 = shl i32 %conv97, 16, !dbg !1425
  %87 = load i32, i32* %tin1, align 4, !dbg !1425
  %or99 = or i32 %87, %shl98, !dbg !1425
  store i32 %or99, i32* %tin1, align 4, !dbg !1425
  br label %sw.bb100, !dbg !1425

sw.bb100:                                         ; preds = %if.then90, %sw.bb95
  %88 = load i8*, i8** %in, align 8, !dbg !1425
  %incdec.ptr101 = getelementptr inbounds i8, i8* %88, i32 -1, !dbg !1425
  store i8* %incdec.ptr101, i8** %in, align 8, !dbg !1425
  %89 = load i8, i8* %incdec.ptr101, align 1, !dbg !1425
  %conv102 = zext i8 %89 to i32, !dbg !1425
  %shl103 = shl i32 %conv102, 8, !dbg !1425
  %90 = load i32, i32* %tin1, align 4, !dbg !1425
  %or104 = or i32 %90, %shl103, !dbg !1425
  store i32 %or104, i32* %tin1, align 4, !dbg !1425
  br label %sw.bb105, !dbg !1425

sw.bb105:                                         ; preds = %if.then90, %sw.bb100
  %91 = load i8*, i8** %in, align 8, !dbg !1425
  %incdec.ptr106 = getelementptr inbounds i8, i8* %91, i32 -1, !dbg !1425
  store i8* %incdec.ptr106, i8** %in, align 8, !dbg !1425
  %92 = load i8, i8* %incdec.ptr106, align 1, !dbg !1425
  %conv107 = zext i8 %92 to i32, !dbg !1425
  %93 = load i32, i32* %tin1, align 4, !dbg !1425
  %or108 = or i32 %93, %conv107, !dbg !1425
  store i32 %or108, i32* %tin1, align 4, !dbg !1425
  br label %sw.bb109, !dbg !1425

sw.bb109:                                         ; preds = %if.then90, %sw.bb105
  %94 = load i8*, i8** %in, align 8, !dbg !1425
  %incdec.ptr110 = getelementptr inbounds i8, i8* %94, i32 -1, !dbg !1425
  store i8* %incdec.ptr110, i8** %in, align 8, !dbg !1425
  %95 = load i8, i8* %incdec.ptr110, align 1, !dbg !1425
  %conv111 = zext i8 %95 to i32, !dbg !1425
  %shl112 = shl i32 %conv111, 24, !dbg !1425
  store i32 %shl112, i32* %tin0, align 4, !dbg !1425
  br label %sw.bb113, !dbg !1425

sw.bb113:                                         ; preds = %if.then90, %sw.bb109
  %96 = load i8*, i8** %in, align 8, !dbg !1425
  %incdec.ptr114 = getelementptr inbounds i8, i8* %96, i32 -1, !dbg !1425
  store i8* %incdec.ptr114, i8** %in, align 8, !dbg !1425
  %97 = load i8, i8* %incdec.ptr114, align 1, !dbg !1425
  %conv115 = zext i8 %97 to i32, !dbg !1425
  %shl116 = shl i32 %conv115, 16, !dbg !1425
  %98 = load i32, i32* %tin0, align 4, !dbg !1425
  %or117 = or i32 %98, %shl116, !dbg !1425
  store i32 %or117, i32* %tin0, align 4, !dbg !1425
  br label %sw.bb118, !dbg !1425

sw.bb118:                                         ; preds = %if.then90, %sw.bb113
  %99 = load i8*, i8** %in, align 8, !dbg !1425
  %incdec.ptr119 = getelementptr inbounds i8, i8* %99, i32 -1, !dbg !1425
  store i8* %incdec.ptr119, i8** %in, align 8, !dbg !1425
  %100 = load i8, i8* %incdec.ptr119, align 1, !dbg !1425
  %conv120 = zext i8 %100 to i32, !dbg !1425
  %shl121 = shl i32 %conv120, 8, !dbg !1425
  %101 = load i32, i32* %tin0, align 4, !dbg !1425
  %or122 = or i32 %101, %shl121, !dbg !1425
  store i32 %or122, i32* %tin0, align 4, !dbg !1425
  br label %sw.bb123, !dbg !1425

sw.bb123:                                         ; preds = %if.then90, %sw.bb118
  %102 = load i8*, i8** %in, align 8, !dbg !1425
  %incdec.ptr124 = getelementptr inbounds i8, i8* %102, i32 -1, !dbg !1425
  store i8* %incdec.ptr124, i8** %in, align 8, !dbg !1425
  %103 = load i8, i8* %incdec.ptr124, align 1, !dbg !1425
  %conv125 = zext i8 %103 to i32, !dbg !1425
  %104 = load i32, i32* %tin0, align 4, !dbg !1425
  %or126 = or i32 %104, %conv125, !dbg !1425
  store i32 %or126, i32* %tin0, align 4, !dbg !1425
  br label %sw.epilog, !dbg !1425

sw.epilog:                                        ; preds = %sw.bb123, %if.then90
  %105 = load i32, i32* %tout0, align 4, !dbg !1427
  %106 = load i32, i32* %tin0, align 4, !dbg !1428
  %xor127 = xor i32 %106, %105, !dbg !1428
  store i32 %xor127, i32* %tin0, align 4, !dbg !1428
  %107 = load i32, i32* %tout1, align 4, !dbg !1429
  %108 = load i32, i32* %tin1, align 4, !dbg !1430
  %xor128 = xor i32 %108, %107, !dbg !1430
  store i32 %xor128, i32* %tin1, align 4, !dbg !1430
  %109 = load i32, i32* %tin0, align 4, !dbg !1431
  %arrayidx129 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1432
  store i32 %109, i32* %arrayidx129, align 4, !dbg !1433
  %110 = load i32, i32* %tin1, align 4, !dbg !1434
  %arrayidx130 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1435
  store i32 %110, i32* %arrayidx130, align 4, !dbg !1436
  %arraydecay131 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1437
  %111 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !1438
  %112 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !1439
  %113 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !1440
  call void @DES_encrypt3(i32* %arraydecay131, %struct.DES_ks* %111, %struct.DES_ks* %112, %struct.DES_ks* %113), !dbg !1441
  %arrayidx132 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1442
  %114 = load i32, i32* %arrayidx132, align 4, !dbg !1442
  store i32 %114, i32* %tout0, align 4, !dbg !1443
  %arrayidx133 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1444
  %115 = load i32, i32* %arrayidx133, align 4, !dbg !1444
  store i32 %115, i32* %tout1, align 4, !dbg !1445
  %116 = load i32, i32* %tout0, align 4, !dbg !1446
  %and134 = and i32 %116, 255, !dbg !1446
  %conv135 = trunc i32 %and134 to i8, !dbg !1446
  %117 = load i8*, i8** %out, align 8, !dbg !1446
  %incdec.ptr136 = getelementptr inbounds i8, i8* %117, i32 1, !dbg !1446
  store i8* %incdec.ptr136, i8** %out, align 8, !dbg !1446
  store i8 %conv135, i8* %117, align 1, !dbg !1446
  %118 = load i32, i32* %tout0, align 4, !dbg !1446
  %shr137 = lshr i32 %118, 8, !dbg !1446
  %and138 = and i32 %shr137, 255, !dbg !1446
  %conv139 = trunc i32 %and138 to i8, !dbg !1446
  %119 = load i8*, i8** %out, align 8, !dbg !1446
  %incdec.ptr140 = getelementptr inbounds i8, i8* %119, i32 1, !dbg !1446
  store i8* %incdec.ptr140, i8** %out, align 8, !dbg !1446
  store i8 %conv139, i8* %119, align 1, !dbg !1446
  %120 = load i32, i32* %tout0, align 4, !dbg !1446
  %shr141 = lshr i32 %120, 16, !dbg !1446
  %and142 = and i32 %shr141, 255, !dbg !1446
  %conv143 = trunc i32 %and142 to i8, !dbg !1446
  %121 = load i8*, i8** %out, align 8, !dbg !1446
  %incdec.ptr144 = getelementptr inbounds i8, i8* %121, i32 1, !dbg !1446
  store i8* %incdec.ptr144, i8** %out, align 8, !dbg !1446
  store i8 %conv143, i8* %121, align 1, !dbg !1446
  %122 = load i32, i32* %tout0, align 4, !dbg !1446
  %shr145 = lshr i32 %122, 24, !dbg !1446
  %and146 = and i32 %shr145, 255, !dbg !1446
  %conv147 = trunc i32 %and146 to i8, !dbg !1446
  %123 = load i8*, i8** %out, align 8, !dbg !1446
  %incdec.ptr148 = getelementptr inbounds i8, i8* %123, i32 1, !dbg !1446
  store i8* %incdec.ptr148, i8** %out, align 8, !dbg !1446
  store i8 %conv147, i8* %123, align 1, !dbg !1446
  %124 = load i32, i32* %tout1, align 4, !dbg !1447
  %and149 = and i32 %124, 255, !dbg !1447
  %conv150 = trunc i32 %and149 to i8, !dbg !1447
  %125 = load i8*, i8** %out, align 8, !dbg !1447
  %incdec.ptr151 = getelementptr inbounds i8, i8* %125, i32 1, !dbg !1447
  store i8* %incdec.ptr151, i8** %out, align 8, !dbg !1447
  store i8 %conv150, i8* %125, align 1, !dbg !1447
  %126 = load i32, i32* %tout1, align 4, !dbg !1447
  %shr152 = lshr i32 %126, 8, !dbg !1447
  %and153 = and i32 %shr152, 255, !dbg !1447
  %conv154 = trunc i32 %and153 to i8, !dbg !1447
  %127 = load i8*, i8** %out, align 8, !dbg !1447
  %incdec.ptr155 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !1447
  store i8* %incdec.ptr155, i8** %out, align 8, !dbg !1447
  store i8 %conv154, i8* %127, align 1, !dbg !1447
  %128 = load i32, i32* %tout1, align 4, !dbg !1447
  %shr156 = lshr i32 %128, 16, !dbg !1447
  %and157 = and i32 %shr156, 255, !dbg !1447
  %conv158 = trunc i32 %and157 to i8, !dbg !1447
  %129 = load i8*, i8** %out, align 8, !dbg !1447
  %incdec.ptr159 = getelementptr inbounds i8, i8* %129, i32 1, !dbg !1447
  store i8* %incdec.ptr159, i8** %out, align 8, !dbg !1447
  store i8 %conv158, i8* %129, align 1, !dbg !1447
  %130 = load i32, i32* %tout1, align 4, !dbg !1447
  %shr160 = lshr i32 %130, 24, !dbg !1447
  %and161 = and i32 %shr160, 255, !dbg !1447
  %conv162 = trunc i32 %and161 to i8, !dbg !1447
  %131 = load i8*, i8** %out, align 8, !dbg !1447
  %incdec.ptr163 = getelementptr inbounds i8, i8* %131, i32 1, !dbg !1447
  store i8* %incdec.ptr163, i8** %out, align 8, !dbg !1447
  store i8 %conv162, i8* %131, align 1, !dbg !1447
  br label %if.end, !dbg !1448

if.end:                                           ; preds = %sw.epilog, %for.end
  %132 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !1449
  %arrayidx164 = getelementptr inbounds [8 x i8], [8 x i8]* %132, i64 0, i64 0, !dbg !1450
  store i8* %arrayidx164, i8** %iv, align 8, !dbg !1451
  %133 = load i32, i32* %tout0, align 4, !dbg !1452
  %and165 = and i32 %133, 255, !dbg !1452
  %conv166 = trunc i32 %and165 to i8, !dbg !1452
  %134 = load i8*, i8** %iv, align 8, !dbg !1452
  %incdec.ptr167 = getelementptr inbounds i8, i8* %134, i32 1, !dbg !1452
  store i8* %incdec.ptr167, i8** %iv, align 8, !dbg !1452
  store i8 %conv166, i8* %134, align 1, !dbg !1452
  %135 = load i32, i32* %tout0, align 4, !dbg !1452
  %shr168 = lshr i32 %135, 8, !dbg !1452
  %and169 = and i32 %shr168, 255, !dbg !1452
  %conv170 = trunc i32 %and169 to i8, !dbg !1452
  %136 = load i8*, i8** %iv, align 8, !dbg !1452
  %incdec.ptr171 = getelementptr inbounds i8, i8* %136, i32 1, !dbg !1452
  store i8* %incdec.ptr171, i8** %iv, align 8, !dbg !1452
  store i8 %conv170, i8* %136, align 1, !dbg !1452
  %137 = load i32, i32* %tout0, align 4, !dbg !1452
  %shr172 = lshr i32 %137, 16, !dbg !1452
  %and173 = and i32 %shr172, 255, !dbg !1452
  %conv174 = trunc i32 %and173 to i8, !dbg !1452
  %138 = load i8*, i8** %iv, align 8, !dbg !1452
  %incdec.ptr175 = getelementptr inbounds i8, i8* %138, i32 1, !dbg !1452
  store i8* %incdec.ptr175, i8** %iv, align 8, !dbg !1452
  store i8 %conv174, i8* %138, align 1, !dbg !1452
  %139 = load i32, i32* %tout0, align 4, !dbg !1452
  %shr176 = lshr i32 %139, 24, !dbg !1452
  %and177 = and i32 %shr176, 255, !dbg !1452
  %conv178 = trunc i32 %and177 to i8, !dbg !1452
  %140 = load i8*, i8** %iv, align 8, !dbg !1452
  %incdec.ptr179 = getelementptr inbounds i8, i8* %140, i32 1, !dbg !1452
  store i8* %incdec.ptr179, i8** %iv, align 8, !dbg !1452
  store i8 %conv178, i8* %140, align 1, !dbg !1452
  %141 = load i32, i32* %tout1, align 4, !dbg !1453
  %and180 = and i32 %141, 255, !dbg !1453
  %conv181 = trunc i32 %and180 to i8, !dbg !1453
  %142 = load i8*, i8** %iv, align 8, !dbg !1453
  %incdec.ptr182 = getelementptr inbounds i8, i8* %142, i32 1, !dbg !1453
  store i8* %incdec.ptr182, i8** %iv, align 8, !dbg !1453
  store i8 %conv181, i8* %142, align 1, !dbg !1453
  %143 = load i32, i32* %tout1, align 4, !dbg !1453
  %shr183 = lshr i32 %143, 8, !dbg !1453
  %and184 = and i32 %shr183, 255, !dbg !1453
  %conv185 = trunc i32 %and184 to i8, !dbg !1453
  %144 = load i8*, i8** %iv, align 8, !dbg !1453
  %incdec.ptr186 = getelementptr inbounds i8, i8* %144, i32 1, !dbg !1453
  store i8* %incdec.ptr186, i8** %iv, align 8, !dbg !1453
  store i8 %conv185, i8* %144, align 1, !dbg !1453
  %145 = load i32, i32* %tout1, align 4, !dbg !1453
  %shr187 = lshr i32 %145, 16, !dbg !1453
  %and188 = and i32 %shr187, 255, !dbg !1453
  %conv189 = trunc i32 %and188 to i8, !dbg !1453
  %146 = load i8*, i8** %iv, align 8, !dbg !1453
  %incdec.ptr190 = getelementptr inbounds i8, i8* %146, i32 1, !dbg !1453
  store i8* %incdec.ptr190, i8** %iv, align 8, !dbg !1453
  store i8 %conv189, i8* %146, align 1, !dbg !1453
  %147 = load i32, i32* %tout1, align 4, !dbg !1453
  %shr191 = lshr i32 %147, 24, !dbg !1453
  %and192 = and i32 %shr191, 255, !dbg !1453
  %conv193 = trunc i32 %and192 to i8, !dbg !1453
  %148 = load i8*, i8** %iv, align 8, !dbg !1453
  %incdec.ptr194 = getelementptr inbounds i8, i8* %148, i32 1, !dbg !1453
  store i8* %incdec.ptr194, i8** %iv, align 8, !dbg !1453
  store i8 %conv193, i8* %148, align 1, !dbg !1453
  br label %if.end408, !dbg !1454

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %t0, metadata !1455, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !1458, metadata !DIExpression()), !dbg !1459
  %149 = load i8*, i8** %iv, align 8, !dbg !1460
  %incdec.ptr195 = getelementptr inbounds i8, i8* %149, i32 1, !dbg !1460
  store i8* %incdec.ptr195, i8** %iv, align 8, !dbg !1460
  %150 = load i8, i8* %149, align 1, !dbg !1460
  %conv196 = zext i8 %150 to i32, !dbg !1460
  store i32 %conv196, i32* %xor0, align 4, !dbg !1460
  %151 = load i8*, i8** %iv, align 8, !dbg !1460
  %incdec.ptr197 = getelementptr inbounds i8, i8* %151, i32 1, !dbg !1460
  store i8* %incdec.ptr197, i8** %iv, align 8, !dbg !1460
  %152 = load i8, i8* %151, align 1, !dbg !1460
  %conv198 = zext i8 %152 to i32, !dbg !1460
  %shl199 = shl i32 %conv198, 8, !dbg !1460
  %153 = load i32, i32* %xor0, align 4, !dbg !1460
  %or200 = or i32 %153, %shl199, !dbg !1460
  store i32 %or200, i32* %xor0, align 4, !dbg !1460
  %154 = load i8*, i8** %iv, align 8, !dbg !1460
  %incdec.ptr201 = getelementptr inbounds i8, i8* %154, i32 1, !dbg !1460
  store i8* %incdec.ptr201, i8** %iv, align 8, !dbg !1460
  %155 = load i8, i8* %154, align 1, !dbg !1460
  %conv202 = zext i8 %155 to i32, !dbg !1460
  %shl203 = shl i32 %conv202, 16, !dbg !1460
  %156 = load i32, i32* %xor0, align 4, !dbg !1460
  %or204 = or i32 %156, %shl203, !dbg !1460
  store i32 %or204, i32* %xor0, align 4, !dbg !1460
  %157 = load i8*, i8** %iv, align 8, !dbg !1460
  %incdec.ptr205 = getelementptr inbounds i8, i8* %157, i32 1, !dbg !1460
  store i8* %incdec.ptr205, i8** %iv, align 8, !dbg !1460
  %158 = load i8, i8* %157, align 1, !dbg !1460
  %conv206 = zext i8 %158 to i32, !dbg !1460
  %shl207 = shl i32 %conv206, 24, !dbg !1460
  %159 = load i32, i32* %xor0, align 4, !dbg !1460
  %or208 = or i32 %159, %shl207, !dbg !1460
  store i32 %or208, i32* %xor0, align 4, !dbg !1460
  %160 = load i8*, i8** %iv, align 8, !dbg !1461
  %incdec.ptr209 = getelementptr inbounds i8, i8* %160, i32 1, !dbg !1461
  store i8* %incdec.ptr209, i8** %iv, align 8, !dbg !1461
  %161 = load i8, i8* %160, align 1, !dbg !1461
  %conv210 = zext i8 %161 to i32, !dbg !1461
  store i32 %conv210, i32* %xor1, align 4, !dbg !1461
  %162 = load i8*, i8** %iv, align 8, !dbg !1461
  %incdec.ptr211 = getelementptr inbounds i8, i8* %162, i32 1, !dbg !1461
  store i8* %incdec.ptr211, i8** %iv, align 8, !dbg !1461
  %163 = load i8, i8* %162, align 1, !dbg !1461
  %conv212 = zext i8 %163 to i32, !dbg !1461
  %shl213 = shl i32 %conv212, 8, !dbg !1461
  %164 = load i32, i32* %xor1, align 4, !dbg !1461
  %or214 = or i32 %164, %shl213, !dbg !1461
  store i32 %or214, i32* %xor1, align 4, !dbg !1461
  %165 = load i8*, i8** %iv, align 8, !dbg !1461
  %incdec.ptr215 = getelementptr inbounds i8, i8* %165, i32 1, !dbg !1461
  store i8* %incdec.ptr215, i8** %iv, align 8, !dbg !1461
  %166 = load i8, i8* %165, align 1, !dbg !1461
  %conv216 = zext i8 %166 to i32, !dbg !1461
  %shl217 = shl i32 %conv216, 16, !dbg !1461
  %167 = load i32, i32* %xor1, align 4, !dbg !1461
  %or218 = or i32 %167, %shl217, !dbg !1461
  store i32 %or218, i32* %xor1, align 4, !dbg !1461
  %168 = load i8*, i8** %iv, align 8, !dbg !1461
  %incdec.ptr219 = getelementptr inbounds i8, i8* %168, i32 1, !dbg !1461
  store i8* %incdec.ptr219, i8** %iv, align 8, !dbg !1461
  %169 = load i8, i8* %168, align 1, !dbg !1461
  %conv220 = zext i8 %169 to i32, !dbg !1461
  %shl221 = shl i32 %conv220, 24, !dbg !1461
  %170 = load i32, i32* %xor1, align 4, !dbg !1461
  %or222 = or i32 %170, %shl221, !dbg !1461
  store i32 %or222, i32* %xor1, align 4, !dbg !1461
  %171 = load i64, i64* %l, align 8, !dbg !1462
  %sub223 = sub nsw i64 %171, 8, !dbg !1462
  store i64 %sub223, i64* %l, align 8, !dbg !1462
  br label %for.cond224, !dbg !1464

for.cond224:                                      ; preds = %for.inc293, %if.else
  %172 = load i64, i64* %l, align 8, !dbg !1465
  %cmp225 = icmp sge i64 %172, 0, !dbg !1467
  br i1 %cmp225, label %for.body227, label %for.end295, !dbg !1468

for.body227:                                      ; preds = %for.cond224
  %173 = load i8*, i8** %in, align 8, !dbg !1469
  %incdec.ptr228 = getelementptr inbounds i8, i8* %173, i32 1, !dbg !1469
  store i8* %incdec.ptr228, i8** %in, align 8, !dbg !1469
  %174 = load i8, i8* %173, align 1, !dbg !1469
  %conv229 = zext i8 %174 to i32, !dbg !1469
  store i32 %conv229, i32* %tin0, align 4, !dbg !1469
  %175 = load i8*, i8** %in, align 8, !dbg !1469
  %incdec.ptr230 = getelementptr inbounds i8, i8* %175, i32 1, !dbg !1469
  store i8* %incdec.ptr230, i8** %in, align 8, !dbg !1469
  %176 = load i8, i8* %175, align 1, !dbg !1469
  %conv231 = zext i8 %176 to i32, !dbg !1469
  %shl232 = shl i32 %conv231, 8, !dbg !1469
  %177 = load i32, i32* %tin0, align 4, !dbg !1469
  %or233 = or i32 %177, %shl232, !dbg !1469
  store i32 %or233, i32* %tin0, align 4, !dbg !1469
  %178 = load i8*, i8** %in, align 8, !dbg !1469
  %incdec.ptr234 = getelementptr inbounds i8, i8* %178, i32 1, !dbg !1469
  store i8* %incdec.ptr234, i8** %in, align 8, !dbg !1469
  %179 = load i8, i8* %178, align 1, !dbg !1469
  %conv235 = zext i8 %179 to i32, !dbg !1469
  %shl236 = shl i32 %conv235, 16, !dbg !1469
  %180 = load i32, i32* %tin0, align 4, !dbg !1469
  %or237 = or i32 %180, %shl236, !dbg !1469
  store i32 %or237, i32* %tin0, align 4, !dbg !1469
  %181 = load i8*, i8** %in, align 8, !dbg !1469
  %incdec.ptr238 = getelementptr inbounds i8, i8* %181, i32 1, !dbg !1469
  store i8* %incdec.ptr238, i8** %in, align 8, !dbg !1469
  %182 = load i8, i8* %181, align 1, !dbg !1469
  %conv239 = zext i8 %182 to i32, !dbg !1469
  %shl240 = shl i32 %conv239, 24, !dbg !1469
  %183 = load i32, i32* %tin0, align 4, !dbg !1469
  %or241 = or i32 %183, %shl240, !dbg !1469
  store i32 %or241, i32* %tin0, align 4, !dbg !1469
  %184 = load i8*, i8** %in, align 8, !dbg !1471
  %incdec.ptr242 = getelementptr inbounds i8, i8* %184, i32 1, !dbg !1471
  store i8* %incdec.ptr242, i8** %in, align 8, !dbg !1471
  %185 = load i8, i8* %184, align 1, !dbg !1471
  %conv243 = zext i8 %185 to i32, !dbg !1471
  store i32 %conv243, i32* %tin1, align 4, !dbg !1471
  %186 = load i8*, i8** %in, align 8, !dbg !1471
  %incdec.ptr244 = getelementptr inbounds i8, i8* %186, i32 1, !dbg !1471
  store i8* %incdec.ptr244, i8** %in, align 8, !dbg !1471
  %187 = load i8, i8* %186, align 1, !dbg !1471
  %conv245 = zext i8 %187 to i32, !dbg !1471
  %shl246 = shl i32 %conv245, 8, !dbg !1471
  %188 = load i32, i32* %tin1, align 4, !dbg !1471
  %or247 = or i32 %188, %shl246, !dbg !1471
  store i32 %or247, i32* %tin1, align 4, !dbg !1471
  %189 = load i8*, i8** %in, align 8, !dbg !1471
  %incdec.ptr248 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !1471
  store i8* %incdec.ptr248, i8** %in, align 8, !dbg !1471
  %190 = load i8, i8* %189, align 1, !dbg !1471
  %conv249 = zext i8 %190 to i32, !dbg !1471
  %shl250 = shl i32 %conv249, 16, !dbg !1471
  %191 = load i32, i32* %tin1, align 4, !dbg !1471
  %or251 = or i32 %191, %shl250, !dbg !1471
  store i32 %or251, i32* %tin1, align 4, !dbg !1471
  %192 = load i8*, i8** %in, align 8, !dbg !1471
  %incdec.ptr252 = getelementptr inbounds i8, i8* %192, i32 1, !dbg !1471
  store i8* %incdec.ptr252, i8** %in, align 8, !dbg !1471
  %193 = load i8, i8* %192, align 1, !dbg !1471
  %conv253 = zext i8 %193 to i32, !dbg !1471
  %shl254 = shl i32 %conv253, 24, !dbg !1471
  %194 = load i32, i32* %tin1, align 4, !dbg !1471
  %or255 = or i32 %194, %shl254, !dbg !1471
  store i32 %or255, i32* %tin1, align 4, !dbg !1471
  %195 = load i32, i32* %tin0, align 4, !dbg !1472
  store i32 %195, i32* %t0, align 4, !dbg !1473
  %196 = load i32, i32* %tin1, align 4, !dbg !1474
  store i32 %196, i32* %t1, align 4, !dbg !1475
  %197 = load i32, i32* %tin0, align 4, !dbg !1476
  %arrayidx256 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1477
  store i32 %197, i32* %arrayidx256, align 4, !dbg !1478
  %198 = load i32, i32* %tin1, align 4, !dbg !1479
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1480
  store i32 %198, i32* %arrayidx257, align 4, !dbg !1481
  %arraydecay258 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1482
  %199 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !1483
  %200 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !1484
  %201 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !1485
  call void @DES_decrypt3(i32* %arraydecay258, %struct.DES_ks* %199, %struct.DES_ks* %200, %struct.DES_ks* %201), !dbg !1486
  %arrayidx259 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1487
  %202 = load i32, i32* %arrayidx259, align 4, !dbg !1487
  store i32 %202, i32* %tout0, align 4, !dbg !1488
  %arrayidx260 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1489
  %203 = load i32, i32* %arrayidx260, align 4, !dbg !1489
  store i32 %203, i32* %tout1, align 4, !dbg !1490
  %204 = load i32, i32* %xor0, align 4, !dbg !1491
  %205 = load i32, i32* %tout0, align 4, !dbg !1492
  %xor261 = xor i32 %205, %204, !dbg !1492
  store i32 %xor261, i32* %tout0, align 4, !dbg !1492
  %206 = load i32, i32* %xor1, align 4, !dbg !1493
  %207 = load i32, i32* %tout1, align 4, !dbg !1494
  %xor262 = xor i32 %207, %206, !dbg !1494
  store i32 %xor262, i32* %tout1, align 4, !dbg !1494
  %208 = load i32, i32* %tout0, align 4, !dbg !1495
  %and263 = and i32 %208, 255, !dbg !1495
  %conv264 = trunc i32 %and263 to i8, !dbg !1495
  %209 = load i8*, i8** %out, align 8, !dbg !1495
  %incdec.ptr265 = getelementptr inbounds i8, i8* %209, i32 1, !dbg !1495
  store i8* %incdec.ptr265, i8** %out, align 8, !dbg !1495
  store i8 %conv264, i8* %209, align 1, !dbg !1495
  %210 = load i32, i32* %tout0, align 4, !dbg !1495
  %shr266 = lshr i32 %210, 8, !dbg !1495
  %and267 = and i32 %shr266, 255, !dbg !1495
  %conv268 = trunc i32 %and267 to i8, !dbg !1495
  %211 = load i8*, i8** %out, align 8, !dbg !1495
  %incdec.ptr269 = getelementptr inbounds i8, i8* %211, i32 1, !dbg !1495
  store i8* %incdec.ptr269, i8** %out, align 8, !dbg !1495
  store i8 %conv268, i8* %211, align 1, !dbg !1495
  %212 = load i32, i32* %tout0, align 4, !dbg !1495
  %shr270 = lshr i32 %212, 16, !dbg !1495
  %and271 = and i32 %shr270, 255, !dbg !1495
  %conv272 = trunc i32 %and271 to i8, !dbg !1495
  %213 = load i8*, i8** %out, align 8, !dbg !1495
  %incdec.ptr273 = getelementptr inbounds i8, i8* %213, i32 1, !dbg !1495
  store i8* %incdec.ptr273, i8** %out, align 8, !dbg !1495
  store i8 %conv272, i8* %213, align 1, !dbg !1495
  %214 = load i32, i32* %tout0, align 4, !dbg !1495
  %shr274 = lshr i32 %214, 24, !dbg !1495
  %and275 = and i32 %shr274, 255, !dbg !1495
  %conv276 = trunc i32 %and275 to i8, !dbg !1495
  %215 = load i8*, i8** %out, align 8, !dbg !1495
  %incdec.ptr277 = getelementptr inbounds i8, i8* %215, i32 1, !dbg !1495
  store i8* %incdec.ptr277, i8** %out, align 8, !dbg !1495
  store i8 %conv276, i8* %215, align 1, !dbg !1495
  %216 = load i32, i32* %tout1, align 4, !dbg !1496
  %and278 = and i32 %216, 255, !dbg !1496
  %conv279 = trunc i32 %and278 to i8, !dbg !1496
  %217 = load i8*, i8** %out, align 8, !dbg !1496
  %incdec.ptr280 = getelementptr inbounds i8, i8* %217, i32 1, !dbg !1496
  store i8* %incdec.ptr280, i8** %out, align 8, !dbg !1496
  store i8 %conv279, i8* %217, align 1, !dbg !1496
  %218 = load i32, i32* %tout1, align 4, !dbg !1496
  %shr281 = lshr i32 %218, 8, !dbg !1496
  %and282 = and i32 %shr281, 255, !dbg !1496
  %conv283 = trunc i32 %and282 to i8, !dbg !1496
  %219 = load i8*, i8** %out, align 8, !dbg !1496
  %incdec.ptr284 = getelementptr inbounds i8, i8* %219, i32 1, !dbg !1496
  store i8* %incdec.ptr284, i8** %out, align 8, !dbg !1496
  store i8 %conv283, i8* %219, align 1, !dbg !1496
  %220 = load i32, i32* %tout1, align 4, !dbg !1496
  %shr285 = lshr i32 %220, 16, !dbg !1496
  %and286 = and i32 %shr285, 255, !dbg !1496
  %conv287 = trunc i32 %and286 to i8, !dbg !1496
  %221 = load i8*, i8** %out, align 8, !dbg !1496
  %incdec.ptr288 = getelementptr inbounds i8, i8* %221, i32 1, !dbg !1496
  store i8* %incdec.ptr288, i8** %out, align 8, !dbg !1496
  store i8 %conv287, i8* %221, align 1, !dbg !1496
  %222 = load i32, i32* %tout1, align 4, !dbg !1496
  %shr289 = lshr i32 %222, 24, !dbg !1496
  %and290 = and i32 %shr289, 255, !dbg !1496
  %conv291 = trunc i32 %and290 to i8, !dbg !1496
  %223 = load i8*, i8** %out, align 8, !dbg !1496
  %incdec.ptr292 = getelementptr inbounds i8, i8* %223, i32 1, !dbg !1496
  store i8* %incdec.ptr292, i8** %out, align 8, !dbg !1496
  store i8 %conv291, i8* %223, align 1, !dbg !1496
  %224 = load i32, i32* %t0, align 4, !dbg !1497
  store i32 %224, i32* %xor0, align 4, !dbg !1498
  %225 = load i32, i32* %t1, align 4, !dbg !1499
  store i32 %225, i32* %xor1, align 4, !dbg !1500
  br label %for.inc293, !dbg !1501

for.inc293:                                       ; preds = %for.body227
  %226 = load i64, i64* %l, align 8, !dbg !1502
  %sub294 = sub nsw i64 %226, 8, !dbg !1502
  store i64 %sub294, i64* %l, align 8, !dbg !1502
  br label %for.cond224, !dbg !1503, !llvm.loop !1504

for.end295:                                       ; preds = %for.cond224
  %227 = load i64, i64* %l, align 8, !dbg !1506
  %cmp296 = icmp ne i64 %227, -8, !dbg !1508
  br i1 %cmp296, label %if.then298, label %if.end376, !dbg !1509

if.then298:                                       ; preds = %for.end295
  %228 = load i8*, i8** %in, align 8, !dbg !1510
  %incdec.ptr299 = getelementptr inbounds i8, i8* %228, i32 1, !dbg !1510
  store i8* %incdec.ptr299, i8** %in, align 8, !dbg !1510
  %229 = load i8, i8* %228, align 1, !dbg !1510
  %conv300 = zext i8 %229 to i32, !dbg !1510
  store i32 %conv300, i32* %tin0, align 4, !dbg !1510
  %230 = load i8*, i8** %in, align 8, !dbg !1510
  %incdec.ptr301 = getelementptr inbounds i8, i8* %230, i32 1, !dbg !1510
  store i8* %incdec.ptr301, i8** %in, align 8, !dbg !1510
  %231 = load i8, i8* %230, align 1, !dbg !1510
  %conv302 = zext i8 %231 to i32, !dbg !1510
  %shl303 = shl i32 %conv302, 8, !dbg !1510
  %232 = load i32, i32* %tin0, align 4, !dbg !1510
  %or304 = or i32 %232, %shl303, !dbg !1510
  store i32 %or304, i32* %tin0, align 4, !dbg !1510
  %233 = load i8*, i8** %in, align 8, !dbg !1510
  %incdec.ptr305 = getelementptr inbounds i8, i8* %233, i32 1, !dbg !1510
  store i8* %incdec.ptr305, i8** %in, align 8, !dbg !1510
  %234 = load i8, i8* %233, align 1, !dbg !1510
  %conv306 = zext i8 %234 to i32, !dbg !1510
  %shl307 = shl i32 %conv306, 16, !dbg !1510
  %235 = load i32, i32* %tin0, align 4, !dbg !1510
  %or308 = or i32 %235, %shl307, !dbg !1510
  store i32 %or308, i32* %tin0, align 4, !dbg !1510
  %236 = load i8*, i8** %in, align 8, !dbg !1510
  %incdec.ptr309 = getelementptr inbounds i8, i8* %236, i32 1, !dbg !1510
  store i8* %incdec.ptr309, i8** %in, align 8, !dbg !1510
  %237 = load i8, i8* %236, align 1, !dbg !1510
  %conv310 = zext i8 %237 to i32, !dbg !1510
  %shl311 = shl i32 %conv310, 24, !dbg !1510
  %238 = load i32, i32* %tin0, align 4, !dbg !1510
  %or312 = or i32 %238, %shl311, !dbg !1510
  store i32 %or312, i32* %tin0, align 4, !dbg !1510
  %239 = load i8*, i8** %in, align 8, !dbg !1512
  %incdec.ptr313 = getelementptr inbounds i8, i8* %239, i32 1, !dbg !1512
  store i8* %incdec.ptr313, i8** %in, align 8, !dbg !1512
  %240 = load i8, i8* %239, align 1, !dbg !1512
  %conv314 = zext i8 %240 to i32, !dbg !1512
  store i32 %conv314, i32* %tin1, align 4, !dbg !1512
  %241 = load i8*, i8** %in, align 8, !dbg !1512
  %incdec.ptr315 = getelementptr inbounds i8, i8* %241, i32 1, !dbg !1512
  store i8* %incdec.ptr315, i8** %in, align 8, !dbg !1512
  %242 = load i8, i8* %241, align 1, !dbg !1512
  %conv316 = zext i8 %242 to i32, !dbg !1512
  %shl317 = shl i32 %conv316, 8, !dbg !1512
  %243 = load i32, i32* %tin1, align 4, !dbg !1512
  %or318 = or i32 %243, %shl317, !dbg !1512
  store i32 %or318, i32* %tin1, align 4, !dbg !1512
  %244 = load i8*, i8** %in, align 8, !dbg !1512
  %incdec.ptr319 = getelementptr inbounds i8, i8* %244, i32 1, !dbg !1512
  store i8* %incdec.ptr319, i8** %in, align 8, !dbg !1512
  %245 = load i8, i8* %244, align 1, !dbg !1512
  %conv320 = zext i8 %245 to i32, !dbg !1512
  %shl321 = shl i32 %conv320, 16, !dbg !1512
  %246 = load i32, i32* %tin1, align 4, !dbg !1512
  %or322 = or i32 %246, %shl321, !dbg !1512
  store i32 %or322, i32* %tin1, align 4, !dbg !1512
  %247 = load i8*, i8** %in, align 8, !dbg !1512
  %incdec.ptr323 = getelementptr inbounds i8, i8* %247, i32 1, !dbg !1512
  store i8* %incdec.ptr323, i8** %in, align 8, !dbg !1512
  %248 = load i8, i8* %247, align 1, !dbg !1512
  %conv324 = zext i8 %248 to i32, !dbg !1512
  %shl325 = shl i32 %conv324, 24, !dbg !1512
  %249 = load i32, i32* %tin1, align 4, !dbg !1512
  %or326 = or i32 %249, %shl325, !dbg !1512
  store i32 %or326, i32* %tin1, align 4, !dbg !1512
  %250 = load i32, i32* %tin0, align 4, !dbg !1513
  store i32 %250, i32* %t0, align 4, !dbg !1514
  %251 = load i32, i32* %tin1, align 4, !dbg !1515
  store i32 %251, i32* %t1, align 4, !dbg !1516
  %252 = load i32, i32* %tin0, align 4, !dbg !1517
  %arrayidx327 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1518
  store i32 %252, i32* %arrayidx327, align 4, !dbg !1519
  %253 = load i32, i32* %tin1, align 4, !dbg !1520
  %arrayidx328 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1521
  store i32 %253, i32* %arrayidx328, align 4, !dbg !1522
  %arraydecay329 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1523
  %254 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !1524
  %255 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !1525
  %256 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !1526
  call void @DES_decrypt3(i32* %arraydecay329, %struct.DES_ks* %254, %struct.DES_ks* %255, %struct.DES_ks* %256), !dbg !1527
  %arrayidx330 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1528
  %257 = load i32, i32* %arrayidx330, align 4, !dbg !1528
  store i32 %257, i32* %tout0, align 4, !dbg !1529
  %arrayidx331 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1530
  %258 = load i32, i32* %arrayidx331, align 4, !dbg !1530
  store i32 %258, i32* %tout1, align 4, !dbg !1531
  %259 = load i32, i32* %xor0, align 4, !dbg !1532
  %260 = load i32, i32* %tout0, align 4, !dbg !1533
  %xor332 = xor i32 %260, %259, !dbg !1533
  store i32 %xor332, i32* %tout0, align 4, !dbg !1533
  %261 = load i32, i32* %xor1, align 4, !dbg !1534
  %262 = load i32, i32* %tout1, align 4, !dbg !1535
  %xor333 = xor i32 %262, %261, !dbg !1535
  store i32 %xor333, i32* %tout1, align 4, !dbg !1535
  %263 = load i64, i64* %l, align 8, !dbg !1536
  %add334 = add nsw i64 %263, 8, !dbg !1536
  %264 = load i8*, i8** %out, align 8, !dbg !1536
  %add.ptr335 = getelementptr inbounds i8, i8* %264, i64 %add334, !dbg !1536
  store i8* %add.ptr335, i8** %out, align 8, !dbg !1536
  %265 = load i64, i64* %l, align 8, !dbg !1536
  %add336 = add nsw i64 %265, 8, !dbg !1536
  switch i64 %add336, label %sw.epilog375 [
    i64 8, label %sw.bb337
    i64 7, label %sw.bb342
    i64 6, label %sw.bb347
    i64 5, label %sw.bb352
    i64 4, label %sw.bb356
    i64 3, label %sw.bb361
    i64 2, label %sw.bb366
    i64 1, label %sw.bb371
  ], !dbg !1536

sw.bb337:                                         ; preds = %if.then298
  %266 = load i32, i32* %tout1, align 4, !dbg !1538
  %shr338 = lshr i32 %266, 24, !dbg !1538
  %and339 = and i32 %shr338, 255, !dbg !1538
  %conv340 = trunc i32 %and339 to i8, !dbg !1538
  %267 = load i8*, i8** %out, align 8, !dbg !1538
  %incdec.ptr341 = getelementptr inbounds i8, i8* %267, i32 -1, !dbg !1538
  store i8* %incdec.ptr341, i8** %out, align 8, !dbg !1538
  store i8 %conv340, i8* %incdec.ptr341, align 1, !dbg !1538
  br label %sw.bb342, !dbg !1538

sw.bb342:                                         ; preds = %if.then298, %sw.bb337
  %268 = load i32, i32* %tout1, align 4, !dbg !1538
  %shr343 = lshr i32 %268, 16, !dbg !1538
  %and344 = and i32 %shr343, 255, !dbg !1538
  %conv345 = trunc i32 %and344 to i8, !dbg !1538
  %269 = load i8*, i8** %out, align 8, !dbg !1538
  %incdec.ptr346 = getelementptr inbounds i8, i8* %269, i32 -1, !dbg !1538
  store i8* %incdec.ptr346, i8** %out, align 8, !dbg !1538
  store i8 %conv345, i8* %incdec.ptr346, align 1, !dbg !1538
  br label %sw.bb347, !dbg !1538

sw.bb347:                                         ; preds = %if.then298, %sw.bb342
  %270 = load i32, i32* %tout1, align 4, !dbg !1538
  %shr348 = lshr i32 %270, 8, !dbg !1538
  %and349 = and i32 %shr348, 255, !dbg !1538
  %conv350 = trunc i32 %and349 to i8, !dbg !1538
  %271 = load i8*, i8** %out, align 8, !dbg !1538
  %incdec.ptr351 = getelementptr inbounds i8, i8* %271, i32 -1, !dbg !1538
  store i8* %incdec.ptr351, i8** %out, align 8, !dbg !1538
  store i8 %conv350, i8* %incdec.ptr351, align 1, !dbg !1538
  br label %sw.bb352, !dbg !1538

sw.bb352:                                         ; preds = %if.then298, %sw.bb347
  %272 = load i32, i32* %tout1, align 4, !dbg !1538
  %and353 = and i32 %272, 255, !dbg !1538
  %conv354 = trunc i32 %and353 to i8, !dbg !1538
  %273 = load i8*, i8** %out, align 8, !dbg !1538
  %incdec.ptr355 = getelementptr inbounds i8, i8* %273, i32 -1, !dbg !1538
  store i8* %incdec.ptr355, i8** %out, align 8, !dbg !1538
  store i8 %conv354, i8* %incdec.ptr355, align 1, !dbg !1538
  br label %sw.bb356, !dbg !1538

sw.bb356:                                         ; preds = %if.then298, %sw.bb352
  %274 = load i32, i32* %tout0, align 4, !dbg !1538
  %shr357 = lshr i32 %274, 24, !dbg !1538
  %and358 = and i32 %shr357, 255, !dbg !1538
  %conv359 = trunc i32 %and358 to i8, !dbg !1538
  %275 = load i8*, i8** %out, align 8, !dbg !1538
  %incdec.ptr360 = getelementptr inbounds i8, i8* %275, i32 -1, !dbg !1538
  store i8* %incdec.ptr360, i8** %out, align 8, !dbg !1538
  store i8 %conv359, i8* %incdec.ptr360, align 1, !dbg !1538
  br label %sw.bb361, !dbg !1538

sw.bb361:                                         ; preds = %if.then298, %sw.bb356
  %276 = load i32, i32* %tout0, align 4, !dbg !1538
  %shr362 = lshr i32 %276, 16, !dbg !1538
  %and363 = and i32 %shr362, 255, !dbg !1538
  %conv364 = trunc i32 %and363 to i8, !dbg !1538
  %277 = load i8*, i8** %out, align 8, !dbg !1538
  %incdec.ptr365 = getelementptr inbounds i8, i8* %277, i32 -1, !dbg !1538
  store i8* %incdec.ptr365, i8** %out, align 8, !dbg !1538
  store i8 %conv364, i8* %incdec.ptr365, align 1, !dbg !1538
  br label %sw.bb366, !dbg !1538

sw.bb366:                                         ; preds = %if.then298, %sw.bb361
  %278 = load i32, i32* %tout0, align 4, !dbg !1538
  %shr367 = lshr i32 %278, 8, !dbg !1538
  %and368 = and i32 %shr367, 255, !dbg !1538
  %conv369 = trunc i32 %and368 to i8, !dbg !1538
  %279 = load i8*, i8** %out, align 8, !dbg !1538
  %incdec.ptr370 = getelementptr inbounds i8, i8* %279, i32 -1, !dbg !1538
  store i8* %incdec.ptr370, i8** %out, align 8, !dbg !1538
  store i8 %conv369, i8* %incdec.ptr370, align 1, !dbg !1538
  br label %sw.bb371, !dbg !1538

sw.bb371:                                         ; preds = %if.then298, %sw.bb366
  %280 = load i32, i32* %tout0, align 4, !dbg !1538
  %and372 = and i32 %280, 255, !dbg !1538
  %conv373 = trunc i32 %and372 to i8, !dbg !1538
  %281 = load i8*, i8** %out, align 8, !dbg !1538
  %incdec.ptr374 = getelementptr inbounds i8, i8* %281, i32 -1, !dbg !1538
  store i8* %incdec.ptr374, i8** %out, align 8, !dbg !1538
  store i8 %conv373, i8* %incdec.ptr374, align 1, !dbg !1538
  br label %sw.epilog375, !dbg !1538

sw.epilog375:                                     ; preds = %sw.bb371, %if.then298
  %282 = load i32, i32* %t0, align 4, !dbg !1540
  store i32 %282, i32* %xor0, align 4, !dbg !1541
  %283 = load i32, i32* %t1, align 4, !dbg !1542
  store i32 %283, i32* %xor1, align 4, !dbg !1543
  br label %if.end376, !dbg !1544

if.end376:                                        ; preds = %sw.epilog375, %for.end295
  %284 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !1545
  %arrayidx377 = getelementptr inbounds [8 x i8], [8 x i8]* %284, i64 0, i64 0, !dbg !1546
  store i8* %arrayidx377, i8** %iv, align 8, !dbg !1547
  %285 = load i32, i32* %xor0, align 4, !dbg !1548
  %and378 = and i32 %285, 255, !dbg !1548
  %conv379 = trunc i32 %and378 to i8, !dbg !1548
  %286 = load i8*, i8** %iv, align 8, !dbg !1548
  %incdec.ptr380 = getelementptr inbounds i8, i8* %286, i32 1, !dbg !1548
  store i8* %incdec.ptr380, i8** %iv, align 8, !dbg !1548
  store i8 %conv379, i8* %286, align 1, !dbg !1548
  %287 = load i32, i32* %xor0, align 4, !dbg !1548
  %shr381 = lshr i32 %287, 8, !dbg !1548
  %and382 = and i32 %shr381, 255, !dbg !1548
  %conv383 = trunc i32 %and382 to i8, !dbg !1548
  %288 = load i8*, i8** %iv, align 8, !dbg !1548
  %incdec.ptr384 = getelementptr inbounds i8, i8* %288, i32 1, !dbg !1548
  store i8* %incdec.ptr384, i8** %iv, align 8, !dbg !1548
  store i8 %conv383, i8* %288, align 1, !dbg !1548
  %289 = load i32, i32* %xor0, align 4, !dbg !1548
  %shr385 = lshr i32 %289, 16, !dbg !1548
  %and386 = and i32 %shr385, 255, !dbg !1548
  %conv387 = trunc i32 %and386 to i8, !dbg !1548
  %290 = load i8*, i8** %iv, align 8, !dbg !1548
  %incdec.ptr388 = getelementptr inbounds i8, i8* %290, i32 1, !dbg !1548
  store i8* %incdec.ptr388, i8** %iv, align 8, !dbg !1548
  store i8 %conv387, i8* %290, align 1, !dbg !1548
  %291 = load i32, i32* %xor0, align 4, !dbg !1548
  %shr389 = lshr i32 %291, 24, !dbg !1548
  %and390 = and i32 %shr389, 255, !dbg !1548
  %conv391 = trunc i32 %and390 to i8, !dbg !1548
  %292 = load i8*, i8** %iv, align 8, !dbg !1548
  %incdec.ptr392 = getelementptr inbounds i8, i8* %292, i32 1, !dbg !1548
  store i8* %incdec.ptr392, i8** %iv, align 8, !dbg !1548
  store i8 %conv391, i8* %292, align 1, !dbg !1548
  %293 = load i32, i32* %xor1, align 4, !dbg !1549
  %and393 = and i32 %293, 255, !dbg !1549
  %conv394 = trunc i32 %and393 to i8, !dbg !1549
  %294 = load i8*, i8** %iv, align 8, !dbg !1549
  %incdec.ptr395 = getelementptr inbounds i8, i8* %294, i32 1, !dbg !1549
  store i8* %incdec.ptr395, i8** %iv, align 8, !dbg !1549
  store i8 %conv394, i8* %294, align 1, !dbg !1549
  %295 = load i32, i32* %xor1, align 4, !dbg !1549
  %shr396 = lshr i32 %295, 8, !dbg !1549
  %and397 = and i32 %shr396, 255, !dbg !1549
  %conv398 = trunc i32 %and397 to i8, !dbg !1549
  %296 = load i8*, i8** %iv, align 8, !dbg !1549
  %incdec.ptr399 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !1549
  store i8* %incdec.ptr399, i8** %iv, align 8, !dbg !1549
  store i8 %conv398, i8* %296, align 1, !dbg !1549
  %297 = load i32, i32* %xor1, align 4, !dbg !1549
  %shr400 = lshr i32 %297, 16, !dbg !1549
  %and401 = and i32 %shr400, 255, !dbg !1549
  %conv402 = trunc i32 %and401 to i8, !dbg !1549
  %298 = load i8*, i8** %iv, align 8, !dbg !1549
  %incdec.ptr403 = getelementptr inbounds i8, i8* %298, i32 1, !dbg !1549
  store i8* %incdec.ptr403, i8** %iv, align 8, !dbg !1549
  store i8 %conv402, i8* %298, align 1, !dbg !1549
  %299 = load i32, i32* %xor1, align 4, !dbg !1549
  %shr404 = lshr i32 %299, 24, !dbg !1549
  %and405 = and i32 %shr404, 255, !dbg !1549
  %conv406 = trunc i32 %and405 to i8, !dbg !1549
  %300 = load i8*, i8** %iv, align 8, !dbg !1549
  %incdec.ptr407 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !1549
  store i8* %incdec.ptr407, i8** %iv, align 8, !dbg !1549
  store i8 %conv406, i8* %300, align 1, !dbg !1549
  br label %if.end408

if.end408:                                        ; preds = %if.end376, %if.end
  store i32 0, i32* %xor1, align 4, !dbg !1550
  store i32 0, i32* %xor0, align 4, !dbg !1551
  store i32 0, i32* %tout1, align 4, !dbg !1552
  store i32 0, i32* %tout0, align 4, !dbg !1553
  store i32 0, i32* %tin1, align 4, !dbg !1554
  store i32 0, i32* %tin0, align 4, !dbg !1555
  %arrayidx409 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1556
  store i32 0, i32* %arrayidx409, align 4, !dbg !1557
  %arrayidx410 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1558
  store i32 0, i32* %arrayidx410, align 4, !dbg !1559
  ret void, !dbg !1560
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @DES_ecb_encrypt([8 x i8]* %input, [8 x i8]* %output, %struct.DES_ks* %ks, i32 %enc) #0 !dbg !1561 {
entry:
  %data.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i, metadata !44, metadata !DIExpression()), !dbg !1566
  %ks.addr.i = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i, metadata !46, metadata !DIExpression()), !dbg !1568
  %enc.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i, metadata !48, metadata !DIExpression()), !dbg !1569
  %l.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i, metadata !50, metadata !DIExpression()), !dbg !1570
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !52, metadata !DIExpression()), !dbg !1571
  %t.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i, metadata !54, metadata !DIExpression()), !dbg !1572
  %u.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i, metadata !56, metadata !DIExpression()), !dbg !1573
  %s.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i, metadata !58, metadata !DIExpression()), !dbg !1574
  %tt.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i, metadata !65, metadata !DIExpression()), !dbg !1575
  %ret.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i, metadata !68, metadata !DIExpression()), !dbg !1576
  %tmp.i = alloca i32, align 4
  %ret42.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret42.i, metadata !75, metadata !DIExpression()), !dbg !1577
  %tmp43.i = alloca i32, align 4
  %ret53.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret53.i, metadata !92, metadata !DIExpression()), !dbg !1578
  %tmp54.i = alloca i32, align 4
  %ret98.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret98.i, metadata !98, metadata !DIExpression()), !dbg !1579
  %tmp99.i = alloca i32, align 4
  %ret144.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret144.i, metadata !104, metadata !DIExpression()), !dbg !1580
  %tmp145.i = alloca i32, align 4
  %ret190.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret190.i, metadata !110, metadata !DIExpression()), !dbg !1581
  %tmp191.i = alloca i32, align 4
  %ret236.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret236.i, metadata !116, metadata !DIExpression()), !dbg !1582
  %tmp237.i = alloca i32, align 4
  %ret282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret282.i, metadata !122, metadata !DIExpression()), !dbg !1583
  %tmp283.i = alloca i32, align 4
  %ret328.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret328.i, metadata !128, metadata !DIExpression()), !dbg !1584
  %tmp329.i = alloca i32, align 4
  %ret374.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret374.i, metadata !134, metadata !DIExpression()), !dbg !1585
  %tmp375.i = alloca i32, align 4
  %ret420.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret420.i, metadata !140, metadata !DIExpression()), !dbg !1586
  %tmp421.i = alloca i32, align 4
  %ret466.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret466.i, metadata !146, metadata !DIExpression()), !dbg !1587
  %tmp467.i = alloca i32, align 4
  %ret512.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret512.i, metadata !152, metadata !DIExpression()), !dbg !1588
  %tmp513.i = alloca i32, align 4
  %ret558.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret558.i, metadata !158, metadata !DIExpression()), !dbg !1589
  %tmp559.i = alloca i32, align 4
  %ret604.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret604.i, metadata !164, metadata !DIExpression()), !dbg !1590
  %tmp605.i = alloca i32, align 4
  %ret650.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret650.i, metadata !170, metadata !DIExpression()), !dbg !1591
  %tmp651.i = alloca i32, align 4
  %ret696.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret696.i, metadata !176, metadata !DIExpression()), !dbg !1592
  %tmp697.i = alloca i32, align 4
  %ret742.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret742.i, metadata !182, metadata !DIExpression()), !dbg !1593
  %tmp743.i = alloca i32, align 4
  %ret788.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret788.i, metadata !190, metadata !DIExpression()), !dbg !1594
  %tmp789.i = alloca i32, align 4
  %ret834.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret834.i, metadata !196, metadata !DIExpression()), !dbg !1595
  %tmp835.i = alloca i32, align 4
  %ret880.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret880.i, metadata !202, metadata !DIExpression()), !dbg !1596
  %tmp881.i = alloca i32, align 4
  %ret926.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret926.i, metadata !208, metadata !DIExpression()), !dbg !1597
  %tmp927.i = alloca i32, align 4
  %ret972.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret972.i, metadata !214, metadata !DIExpression()), !dbg !1598
  %tmp973.i = alloca i32, align 4
  %ret1018.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1018.i, metadata !220, metadata !DIExpression()), !dbg !1599
  %tmp1019.i = alloca i32, align 4
  %ret1064.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1064.i, metadata !226, metadata !DIExpression()), !dbg !1600
  %tmp1065.i = alloca i32, align 4
  %ret1110.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1110.i, metadata !232, metadata !DIExpression()), !dbg !1601
  %tmp1111.i = alloca i32, align 4
  %ret1156.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1156.i, metadata !238, metadata !DIExpression()), !dbg !1602
  %tmp1157.i = alloca i32, align 4
  %ret1202.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1202.i, metadata !244, metadata !DIExpression()), !dbg !1603
  %tmp1203.i = alloca i32, align 4
  %ret1248.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1248.i, metadata !250, metadata !DIExpression()), !dbg !1604
  %tmp1249.i = alloca i32, align 4
  %ret1294.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1294.i, metadata !256, metadata !DIExpression()), !dbg !1605
  %tmp1295.i = alloca i32, align 4
  %ret1340.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1340.i, metadata !262, metadata !DIExpression()), !dbg !1606
  %tmp1341.i = alloca i32, align 4
  %ret1386.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1386.i, metadata !268, metadata !DIExpression()), !dbg !1607
  %tmp1387.i = alloca i32, align 4
  %ret1432.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1432.i, metadata !274, metadata !DIExpression()), !dbg !1608
  %tmp1433.i = alloca i32, align 4
  %ret1478.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1478.i, metadata !280, metadata !DIExpression()), !dbg !1609
  %tmp1479.i = alloca i32, align 4
  %ret1520.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1520.i, metadata !284, metadata !DIExpression()), !dbg !1610
  %tmp1521.i = alloca i32, align 4
  %ret1525.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1525.i, metadata !291, metadata !DIExpression()), !dbg !1611
  %tmp1526.i = alloca i32, align 4
  %tt1530.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1530.i, metadata !298, metadata !DIExpression()), !dbg !1612
  %input.addr = alloca [8 x i8]*, align 8
  %output.addr = alloca [8 x i8]*, align 8
  %ks.addr = alloca %struct.DES_ks*, align 8
  %enc.addr = alloca i32, align 4
  %l = alloca i32, align 4
  %ll = alloca [2 x i32], align 4
  %in = alloca i8*, align 8
  %out = alloca i8*, align 8
  store [8 x i8]* %input, [8 x i8]** %input.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %input.addr, metadata !1613, metadata !DIExpression()), !dbg !1614
  store [8 x i8]* %output, [8 x i8]** %output.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %output.addr, metadata !1615, metadata !DIExpression()), !dbg !1616
  store %struct.DES_ks* %ks, %struct.DES_ks** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr, metadata !1617, metadata !DIExpression()), !dbg !1618
  %ks.addr1 = bitcast %struct.DES_ks** %ks.addr to i8*
  call void @llvm.var.annotation(i8* %ks.addr1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 302)
  store i32 %enc, i32* %enc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr, metadata !1619, metadata !DIExpression()), !dbg !1620
  call void @llvm.dbg.declare(metadata i32* %l, metadata !1621, metadata !DIExpression()), !dbg !1622
  call void @llvm.dbg.declare(metadata [2 x i32]* %ll, metadata !1623, metadata !DIExpression()), !dbg !1624
  call void @llvm.dbg.declare(metadata i8** %in, metadata !1625, metadata !DIExpression()), !dbg !1626
  %0 = load [8 x i8]*, [8 x i8]** %input.addr, align 8, !dbg !1627
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %0, i64 0, i64 0, !dbg !1628
  store i8* %arrayidx, i8** %in, align 8, !dbg !1626
  call void @llvm.dbg.declare(metadata i8** %out, metadata !1629, metadata !DIExpression()), !dbg !1630
  %1 = load [8 x i8]*, [8 x i8]** %output.addr, align 8, !dbg !1631
  %arrayidx2 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0, !dbg !1632
  store i8* %arrayidx2, i8** %out, align 8, !dbg !1630
  %2 = load i8*, i8** %in, align 8, !dbg !1633
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !1633
  store i8* %incdec.ptr, i8** %in, align 8, !dbg !1633
  %3 = load i8, i8* %2, align 1, !dbg !1633
  %conv = zext i8 %3 to i32, !dbg !1633
  store i32 %conv, i32* %l, align 4, !dbg !1633
  %4 = load i8*, i8** %in, align 8, !dbg !1633
  %incdec.ptr3 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !1633
  store i8* %incdec.ptr3, i8** %in, align 8, !dbg !1633
  %5 = load i8, i8* %4, align 1, !dbg !1633
  %conv4 = zext i8 %5 to i32, !dbg !1633
  %shl = shl i32 %conv4, 8, !dbg !1633
  %6 = load i32, i32* %l, align 4, !dbg !1633
  %or = or i32 %6, %shl, !dbg !1633
  store i32 %or, i32* %l, align 4, !dbg !1633
  %7 = load i8*, i8** %in, align 8, !dbg !1633
  %incdec.ptr5 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !1633
  store i8* %incdec.ptr5, i8** %in, align 8, !dbg !1633
  %8 = load i8, i8* %7, align 1, !dbg !1633
  %conv6 = zext i8 %8 to i32, !dbg !1633
  %shl7 = shl i32 %conv6, 16, !dbg !1633
  %9 = load i32, i32* %l, align 4, !dbg !1633
  %or8 = or i32 %9, %shl7, !dbg !1633
  store i32 %or8, i32* %l, align 4, !dbg !1633
  %10 = load i8*, i8** %in, align 8, !dbg !1633
  %incdec.ptr9 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !1633
  store i8* %incdec.ptr9, i8** %in, align 8, !dbg !1633
  %11 = load i8, i8* %10, align 1, !dbg !1633
  %conv10 = zext i8 %11 to i32, !dbg !1633
  %shl11 = shl i32 %conv10, 24, !dbg !1633
  %12 = load i32, i32* %l, align 4, !dbg !1633
  %or12 = or i32 %12, %shl11, !dbg !1633
  store i32 %or12, i32* %l, align 4, !dbg !1633
  %13 = load i32, i32* %l, align 4, !dbg !1634
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0, !dbg !1635
  store i32 %13, i32* %arrayidx13, align 4, !dbg !1636
  %14 = load i8*, i8** %in, align 8, !dbg !1637
  %incdec.ptr14 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !1637
  store i8* %incdec.ptr14, i8** %in, align 8, !dbg !1637
  %15 = load i8, i8* %14, align 1, !dbg !1637
  %conv15 = zext i8 %15 to i32, !dbg !1637
  store i32 %conv15, i32* %l, align 4, !dbg !1637
  %16 = load i8*, i8** %in, align 8, !dbg !1637
  %incdec.ptr16 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !1637
  store i8* %incdec.ptr16, i8** %in, align 8, !dbg !1637
  %17 = load i8, i8* %16, align 1, !dbg !1637
  %conv17 = zext i8 %17 to i32, !dbg !1637
  %shl18 = shl i32 %conv17, 8, !dbg !1637
  %18 = load i32, i32* %l, align 4, !dbg !1637
  %or19 = or i32 %18, %shl18, !dbg !1637
  store i32 %or19, i32* %l, align 4, !dbg !1637
  %19 = load i8*, i8** %in, align 8, !dbg !1637
  %incdec.ptr20 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !1637
  store i8* %incdec.ptr20, i8** %in, align 8, !dbg !1637
  %20 = load i8, i8* %19, align 1, !dbg !1637
  %conv21 = zext i8 %20 to i32, !dbg !1637
  %shl22 = shl i32 %conv21, 16, !dbg !1637
  %21 = load i32, i32* %l, align 4, !dbg !1637
  %or23 = or i32 %21, %shl22, !dbg !1637
  store i32 %or23, i32* %l, align 4, !dbg !1637
  %22 = load i8*, i8** %in, align 8, !dbg !1637
  %incdec.ptr24 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !1637
  store i8* %incdec.ptr24, i8** %in, align 8, !dbg !1637
  %23 = load i8, i8* %22, align 1, !dbg !1637
  %conv25 = zext i8 %23 to i32, !dbg !1637
  %shl26 = shl i32 %conv25, 24, !dbg !1637
  %24 = load i32, i32* %l, align 4, !dbg !1637
  %or27 = or i32 %24, %shl26, !dbg !1637
  store i32 %or27, i32* %l, align 4, !dbg !1637
  %25 = load i32, i32* %l, align 4, !dbg !1638
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 1, !dbg !1639
  store i32 %25, i32* %arrayidx28, align 4, !dbg !1640
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0, !dbg !1641
  %26 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr, align 8, !dbg !1642
  %27 = load i32, i32* %enc.addr, align 4, !dbg !1643
  store i32* %arraydecay, i32** %data.addr.i, align 8
  store %struct.DES_ks* %26, %struct.DES_ks** %ks.addr.i, align 8
  %ks.addr1.i = bitcast %struct.DES_ks** %ks.addr.i to i8*
  call void @llvm.var.annotation(i8* %ks.addr1.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 14) #8
  store i32 %27, i32* %enc.addr.i, align 4
  %s2.i = bitcast i32** %s.i to i8*, !dbg !1644
  call void @llvm.var.annotation(i8* %s2.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 17) #8, !dbg !1644
  %28 = load i32*, i32** %data.addr.i, align 8, !dbg !1645
  %29 = load i32, i32* %28, align 4, !dbg !1645
  store i32 %29, i32* %r.i, align 4, !dbg !1646
  %30 = load i32*, i32** %data.addr.i, align 8, !dbg !1647
  %arrayidx3.i = getelementptr inbounds i32, i32* %30, i64 1, !dbg !1647
  %31 = load i32, i32* %arrayidx3.i, align 4, !dbg !1647
  store i32 %31, i32* %l.i, align 4, !dbg !1648
  %32 = load i32, i32* %l.i, align 4, !dbg !1575
  %shr.i = lshr i32 %32, 4, !dbg !1575
  %33 = load i32, i32* %r.i, align 4, !dbg !1575
  %xor.i = xor i32 %shr.i, %33, !dbg !1575
  %conv.i = zext i32 %xor.i to i64, !dbg !1575
  %and.i = and i64 %conv.i, 252645135, !dbg !1575
  %conv4.i = trunc i64 %and.i to i32, !dbg !1575
  store i32 %conv4.i, i32* %tt.i, align 4, !dbg !1575
  %34 = load i32, i32* %tt.i, align 4, !dbg !1575
  %35 = load i32, i32* %r.i, align 4, !dbg !1575
  %xor5.i = xor i32 %35, %34, !dbg !1575
  store i32 %xor5.i, i32* %r.i, align 4, !dbg !1575
  %36 = load i32, i32* %tt.i, align 4, !dbg !1575
  %shl.i = shl i32 %36, 4, !dbg !1575
  %37 = load i32, i32* %l.i, align 4, !dbg !1575
  %xor6.i = xor i32 %37, %shl.i, !dbg !1575
  store i32 %xor6.i, i32* %l.i, align 4, !dbg !1575
  %38 = load i32, i32* %r.i, align 4, !dbg !1575
  %shr7.i = lshr i32 %38, 16, !dbg !1575
  %39 = load i32, i32* %l.i, align 4, !dbg !1575
  %xor8.i = xor i32 %shr7.i, %39, !dbg !1575
  %conv9.i = zext i32 %xor8.i to i64, !dbg !1575
  %and10.i = and i64 %conv9.i, 65535, !dbg !1575
  %conv11.i = trunc i64 %and10.i to i32, !dbg !1575
  store i32 %conv11.i, i32* %tt.i, align 4, !dbg !1575
  %40 = load i32, i32* %tt.i, align 4, !dbg !1575
  %41 = load i32, i32* %l.i, align 4, !dbg !1575
  %xor12.i = xor i32 %41, %40, !dbg !1575
  store i32 %xor12.i, i32* %l.i, align 4, !dbg !1575
  %42 = load i32, i32* %tt.i, align 4, !dbg !1575
  %shl13.i = shl i32 %42, 16, !dbg !1575
  %43 = load i32, i32* %r.i, align 4, !dbg !1575
  %xor14.i = xor i32 %43, %shl13.i, !dbg !1575
  store i32 %xor14.i, i32* %r.i, align 4, !dbg !1575
  %44 = load i32, i32* %l.i, align 4, !dbg !1575
  %shr15.i = lshr i32 %44, 2, !dbg !1575
  %45 = load i32, i32* %r.i, align 4, !dbg !1575
  %xor16.i = xor i32 %shr15.i, %45, !dbg !1575
  %conv17.i = zext i32 %xor16.i to i64, !dbg !1575
  %and18.i = and i64 %conv17.i, 858993459, !dbg !1575
  %conv19.i = trunc i64 %and18.i to i32, !dbg !1575
  store i32 %conv19.i, i32* %tt.i, align 4, !dbg !1575
  %46 = load i32, i32* %tt.i, align 4, !dbg !1575
  %47 = load i32, i32* %r.i, align 4, !dbg !1575
  %xor20.i = xor i32 %47, %46, !dbg !1575
  store i32 %xor20.i, i32* %r.i, align 4, !dbg !1575
  %48 = load i32, i32* %tt.i, align 4, !dbg !1575
  %shl21.i = shl i32 %48, 2, !dbg !1575
  %49 = load i32, i32* %l.i, align 4, !dbg !1575
  %xor22.i = xor i32 %49, %shl21.i, !dbg !1575
  store i32 %xor22.i, i32* %l.i, align 4, !dbg !1575
  %50 = load i32, i32* %r.i, align 4, !dbg !1575
  %shr23.i = lshr i32 %50, 8, !dbg !1575
  %51 = load i32, i32* %l.i, align 4, !dbg !1575
  %xor24.i = xor i32 %shr23.i, %51, !dbg !1575
  %conv25.i = zext i32 %xor24.i to i64, !dbg !1575
  %and26.i = and i64 %conv25.i, 16711935, !dbg !1575
  %conv27.i = trunc i64 %and26.i to i32, !dbg !1575
  store i32 %conv27.i, i32* %tt.i, align 4, !dbg !1575
  %52 = load i32, i32* %tt.i, align 4, !dbg !1575
  %53 = load i32, i32* %l.i, align 4, !dbg !1575
  %xor28.i = xor i32 %53, %52, !dbg !1575
  store i32 %xor28.i, i32* %l.i, align 4, !dbg !1575
  %54 = load i32, i32* %tt.i, align 4, !dbg !1575
  %shl29.i = shl i32 %54, 8, !dbg !1575
  %55 = load i32, i32* %r.i, align 4, !dbg !1575
  %xor30.i = xor i32 %55, %shl29.i, !dbg !1575
  store i32 %xor30.i, i32* %r.i, align 4, !dbg !1575
  %56 = load i32, i32* %l.i, align 4, !dbg !1575
  %shr31.i = lshr i32 %56, 1, !dbg !1575
  %57 = load i32, i32* %r.i, align 4, !dbg !1575
  %xor32.i = xor i32 %shr31.i, %57, !dbg !1575
  %conv33.i = zext i32 %xor32.i to i64, !dbg !1575
  %and34.i = and i64 %conv33.i, 1431655765, !dbg !1575
  %conv35.i = trunc i64 %and34.i to i32, !dbg !1575
  store i32 %conv35.i, i32* %tt.i, align 4, !dbg !1575
  %58 = load i32, i32* %tt.i, align 4, !dbg !1575
  %59 = load i32, i32* %r.i, align 4, !dbg !1575
  %xor36.i = xor i32 %59, %58, !dbg !1575
  store i32 %xor36.i, i32* %r.i, align 4, !dbg !1575
  %60 = load i32, i32* %tt.i, align 4, !dbg !1575
  %shl37.i = shl i32 %60, 1, !dbg !1575
  %61 = load i32, i32* %l.i, align 4, !dbg !1575
  %xor38.i = xor i32 %61, %shl37.i, !dbg !1575
  store i32 %xor38.i, i32* %l.i, align 4, !dbg !1575
  %62 = load i32, i32* %r.i, align 4, !dbg !1576
  %63 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %62) #7, !dbg !1576, !srcloc !71
  store i32 %63, i32* %ret.i, align 4, !dbg !1576
  %64 = load i32, i32* %ret.i, align 4, !dbg !1576
  store i32 %64, i32* %tmp.i, align 4, !dbg !1576
  %65 = load i32, i32* %tmp.i, align 4, !dbg !1576
  %conv39.i = zext i32 %65 to i64, !dbg !1649
  %and40.i = and i64 %conv39.i, 4294967295, !dbg !1650
  %conv41.i = trunc i64 %and40.i to i32, !dbg !1649
  store i32 %conv41.i, i32* %r.i, align 4, !dbg !1651
  %66 = load i32, i32* %l.i, align 4, !dbg !1577
  %67 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %66) #7, !dbg !1577, !srcloc !78
  store i32 %67, i32* %ret42.i, align 4, !dbg !1577
  %68 = load i32, i32* %ret42.i, align 4, !dbg !1577
  store i32 %68, i32* %tmp43.i, align 4, !dbg !1577
  %69 = load i32, i32* %tmp43.i, align 4, !dbg !1577
  %conv44.i = zext i32 %69 to i64, !dbg !1652
  %and45.i = and i64 %conv44.i, 4294967295, !dbg !1653
  %conv46.i = trunc i64 %and45.i to i32, !dbg !1652
  store i32 %conv46.i, i32* %l.i, align 4, !dbg !1654
  %70 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i, align 8, !dbg !1655
  %ks47.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %70, i32 0, i32 0, !dbg !1656
  %arraydecay.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks47.i, i64 0, i64 0, !dbg !1657
  %deslong.i = bitcast %union.anon* %arraydecay.i to [2 x i32]*, !dbg !1657
  %arraydecay48.i = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i, i64 0, i64 0, !dbg !1655
  store i32* %arraydecay48.i, i32** %s.i, align 8, !dbg !1658
  %71 = load i32, i32* %enc.addr.i, align 4, !dbg !1659
  %tobool.i = icmp ne i32 %71, 0, !dbg !1659
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !1660

if.then.i:                                        ; preds = %entry
  %72 = load i32, i32* %r.i, align 4, !dbg !1661
  %73 = load i32*, i32** %s.i, align 8, !dbg !1661
  %74 = load i32, i32* %73, align 4, !dbg !1661
  %xor50.i = xor i32 %72, %74, !dbg !1661
  store i32 %xor50.i, i32* %u.i, align 4, !dbg !1661
  %75 = load i32, i32* %r.i, align 4, !dbg !1661
  %76 = load i32*, i32** %s.i, align 8, !dbg !1661
  %arrayidx51.i = getelementptr inbounds i32, i32* %76, i64 1, !dbg !1661
  %77 = load i32, i32* %arrayidx51.i, align 4, !dbg !1661
  %xor52.i = xor i32 %75, %77, !dbg !1661
  store i32 %xor52.i, i32* %t.i, align 4, !dbg !1661
  %78 = load i32, i32* %t.i, align 4, !dbg !1578
  %79 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %78) #7, !dbg !1578, !srcloc !95
  store i32 %79, i32* %ret53.i, align 4, !dbg !1578
  %80 = load i32, i32* %ret53.i, align 4, !dbg !1578
  store i32 %80, i32* %tmp54.i, align 4, !dbg !1578
  %81 = load i32, i32* %tmp54.i, align 4, !dbg !1578
  store i32 %81, i32* %t.i, align 4, !dbg !1661
  %82 = load i32, i32* %u.i, align 4, !dbg !1661
  %shr55.i = lshr i32 %82, 2, !dbg !1661
  %and56.i = and i32 %shr55.i, 63, !dbg !1661
  %idxprom.i = zext i32 %and56.i to i64, !dbg !1661
  %arrayidx57.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i, !dbg !1661
  %83 = load i32, i32* %arrayidx57.i, align 4, !dbg !1661
  %84 = load i32, i32* %u.i, align 4, !dbg !1661
  %shr58.i = lshr i32 %84, 10, !dbg !1661
  %and59.i = and i32 %shr58.i, 63, !dbg !1661
  %idxprom60.i = zext i32 %and59.i to i64, !dbg !1661
  %arrayidx61.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom60.i, !dbg !1661
  %85 = load i32, i32* %arrayidx61.i, align 4, !dbg !1661
  %xor62.i = xor i32 %83, %85, !dbg !1661
  %86 = load i32, i32* %u.i, align 4, !dbg !1661
  %shr63.i = lshr i32 %86, 18, !dbg !1661
  %and64.i = and i32 %shr63.i, 63, !dbg !1661
  %idxprom65.i = zext i32 %and64.i to i64, !dbg !1661
  %arrayidx66.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom65.i, !dbg !1661
  %87 = load i32, i32* %arrayidx66.i, align 4, !dbg !1661
  %xor67.i = xor i32 %xor62.i, %87, !dbg !1661
  %88 = load i32, i32* %u.i, align 4, !dbg !1661
  %shr68.i = lshr i32 %88, 26, !dbg !1661
  %idxprom70.i = zext i32 %shr68.i to i64, !dbg !1661
  %arrayidx71.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom70.i, !dbg !1661
  %89 = load i32, i32* %arrayidx71.i, align 4, !dbg !1661
  %xor72.i = xor i32 %xor67.i, %89, !dbg !1661
  %90 = load i32, i32* %t.i, align 4, !dbg !1661
  %shr73.i = lshr i32 %90, 2, !dbg !1661
  %and74.i = and i32 %shr73.i, 63, !dbg !1661
  %idxprom75.i = zext i32 %and74.i to i64, !dbg !1661
  %arrayidx76.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom75.i, !dbg !1661
  %91 = load i32, i32* %arrayidx76.i, align 4, !dbg !1661
  %xor77.i = xor i32 %xor72.i, %91, !dbg !1661
  %92 = load i32, i32* %t.i, align 4, !dbg !1661
  %shr78.i = lshr i32 %92, 10, !dbg !1661
  %and79.i = and i32 %shr78.i, 63, !dbg !1661
  %idxprom80.i = zext i32 %and79.i to i64, !dbg !1661
  %arrayidx81.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom80.i, !dbg !1661
  %93 = load i32, i32* %arrayidx81.i, align 4, !dbg !1661
  %xor82.i = xor i32 %xor77.i, %93, !dbg !1661
  %94 = load i32, i32* %t.i, align 4, !dbg !1661
  %shr83.i = lshr i32 %94, 18, !dbg !1661
  %and84.i = and i32 %shr83.i, 63, !dbg !1661
  %idxprom85.i = zext i32 %and84.i to i64, !dbg !1661
  %arrayidx86.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom85.i, !dbg !1661
  %95 = load i32, i32* %arrayidx86.i, align 4, !dbg !1661
  %xor87.i = xor i32 %xor82.i, %95, !dbg !1661
  %96 = load i32, i32* %t.i, align 4, !dbg !1661
  %shr88.i = lshr i32 %96, 26, !dbg !1661
  %idxprom90.i = zext i32 %shr88.i to i64, !dbg !1661
  %arrayidx91.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom90.i, !dbg !1661
  %97 = load i32, i32* %arrayidx91.i, align 4, !dbg !1661
  %xor92.i = xor i32 %xor87.i, %97, !dbg !1661
  %98 = load i32, i32* %l.i, align 4, !dbg !1661
  %xor93.i = xor i32 %98, %xor92.i, !dbg !1661
  store i32 %xor93.i, i32* %l.i, align 4, !dbg !1661
  %99 = load i32, i32* %l.i, align 4, !dbg !1662
  %100 = load i32*, i32** %s.i, align 8, !dbg !1662
  %arrayidx94.i = getelementptr inbounds i32, i32* %100, i64 2, !dbg !1662
  %101 = load i32, i32* %arrayidx94.i, align 4, !dbg !1662
  %xor95.i = xor i32 %99, %101, !dbg !1662
  store i32 %xor95.i, i32* %u.i, align 4, !dbg !1662
  %102 = load i32, i32* %l.i, align 4, !dbg !1662
  %103 = load i32*, i32** %s.i, align 8, !dbg !1662
  %arrayidx96.i = getelementptr inbounds i32, i32* %103, i64 3, !dbg !1662
  %104 = load i32, i32* %arrayidx96.i, align 4, !dbg !1662
  %xor97.i = xor i32 %102, %104, !dbg !1662
  store i32 %xor97.i, i32* %t.i, align 4, !dbg !1662
  %105 = load i32, i32* %t.i, align 4, !dbg !1579
  %106 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %105) #7, !dbg !1579, !srcloc !101
  store i32 %106, i32* %ret98.i, align 4, !dbg !1579
  %107 = load i32, i32* %ret98.i, align 4, !dbg !1579
  store i32 %107, i32* %tmp99.i, align 4, !dbg !1579
  %108 = load i32, i32* %tmp99.i, align 4, !dbg !1579
  store i32 %108, i32* %t.i, align 4, !dbg !1662
  %109 = load i32, i32* %u.i, align 4, !dbg !1662
  %shr100.i = lshr i32 %109, 2, !dbg !1662
  %and101.i = and i32 %shr100.i, 63, !dbg !1662
  %idxprom102.i = zext i32 %and101.i to i64, !dbg !1662
  %arrayidx103.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom102.i, !dbg !1662
  %110 = load i32, i32* %arrayidx103.i, align 4, !dbg !1662
  %111 = load i32, i32* %u.i, align 4, !dbg !1662
  %shr104.i = lshr i32 %111, 10, !dbg !1662
  %and105.i = and i32 %shr104.i, 63, !dbg !1662
  %idxprom106.i = zext i32 %and105.i to i64, !dbg !1662
  %arrayidx107.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom106.i, !dbg !1662
  %112 = load i32, i32* %arrayidx107.i, align 4, !dbg !1662
  %xor108.i = xor i32 %110, %112, !dbg !1662
  %113 = load i32, i32* %u.i, align 4, !dbg !1662
  %shr109.i = lshr i32 %113, 18, !dbg !1662
  %and110.i = and i32 %shr109.i, 63, !dbg !1662
  %idxprom111.i = zext i32 %and110.i to i64, !dbg !1662
  %arrayidx112.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom111.i, !dbg !1662
  %114 = load i32, i32* %arrayidx112.i, align 4, !dbg !1662
  %xor113.i = xor i32 %xor108.i, %114, !dbg !1662
  %115 = load i32, i32* %u.i, align 4, !dbg !1662
  %shr114.i = lshr i32 %115, 26, !dbg !1662
  %idxprom116.i = zext i32 %shr114.i to i64, !dbg !1662
  %arrayidx117.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom116.i, !dbg !1662
  %116 = load i32, i32* %arrayidx117.i, align 4, !dbg !1662
  %xor118.i = xor i32 %xor113.i, %116, !dbg !1662
  %117 = load i32, i32* %t.i, align 4, !dbg !1662
  %shr119.i = lshr i32 %117, 2, !dbg !1662
  %and120.i = and i32 %shr119.i, 63, !dbg !1662
  %idxprom121.i = zext i32 %and120.i to i64, !dbg !1662
  %arrayidx122.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom121.i, !dbg !1662
  %118 = load i32, i32* %arrayidx122.i, align 4, !dbg !1662
  %xor123.i = xor i32 %xor118.i, %118, !dbg !1662
  %119 = load i32, i32* %t.i, align 4, !dbg !1662
  %shr124.i = lshr i32 %119, 10, !dbg !1662
  %and125.i = and i32 %shr124.i, 63, !dbg !1662
  %idxprom126.i = zext i32 %and125.i to i64, !dbg !1662
  %arrayidx127.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom126.i, !dbg !1662
  %120 = load i32, i32* %arrayidx127.i, align 4, !dbg !1662
  %xor128.i = xor i32 %xor123.i, %120, !dbg !1662
  %121 = load i32, i32* %t.i, align 4, !dbg !1662
  %shr129.i = lshr i32 %121, 18, !dbg !1662
  %and130.i = and i32 %shr129.i, 63, !dbg !1662
  %idxprom131.i = zext i32 %and130.i to i64, !dbg !1662
  %arrayidx132.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom131.i, !dbg !1662
  %122 = load i32, i32* %arrayidx132.i, align 4, !dbg !1662
  %xor133.i = xor i32 %xor128.i, %122, !dbg !1662
  %123 = load i32, i32* %t.i, align 4, !dbg !1662
  %shr134.i = lshr i32 %123, 26, !dbg !1662
  %idxprom136.i = zext i32 %shr134.i to i64, !dbg !1662
  %arrayidx137.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom136.i, !dbg !1662
  %124 = load i32, i32* %arrayidx137.i, align 4, !dbg !1662
  %xor138.i = xor i32 %xor133.i, %124, !dbg !1662
  %125 = load i32, i32* %r.i, align 4, !dbg !1662
  %xor139.i = xor i32 %125, %xor138.i, !dbg !1662
  store i32 %xor139.i, i32* %r.i, align 4, !dbg !1662
  %126 = load i32, i32* %r.i, align 4, !dbg !1663
  %127 = load i32*, i32** %s.i, align 8, !dbg !1663
  %arrayidx140.i = getelementptr inbounds i32, i32* %127, i64 4, !dbg !1663
  %128 = load i32, i32* %arrayidx140.i, align 4, !dbg !1663
  %xor141.i = xor i32 %126, %128, !dbg !1663
  store i32 %xor141.i, i32* %u.i, align 4, !dbg !1663
  %129 = load i32, i32* %r.i, align 4, !dbg !1663
  %130 = load i32*, i32** %s.i, align 8, !dbg !1663
  %arrayidx142.i = getelementptr inbounds i32, i32* %130, i64 5, !dbg !1663
  %131 = load i32, i32* %arrayidx142.i, align 4, !dbg !1663
  %xor143.i = xor i32 %129, %131, !dbg !1663
  store i32 %xor143.i, i32* %t.i, align 4, !dbg !1663
  %132 = load i32, i32* %t.i, align 4, !dbg !1580
  %133 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %132) #7, !dbg !1580, !srcloc !107
  store i32 %133, i32* %ret144.i, align 4, !dbg !1580
  %134 = load i32, i32* %ret144.i, align 4, !dbg !1580
  store i32 %134, i32* %tmp145.i, align 4, !dbg !1580
  %135 = load i32, i32* %tmp145.i, align 4, !dbg !1580
  store i32 %135, i32* %t.i, align 4, !dbg !1663
  %136 = load i32, i32* %u.i, align 4, !dbg !1663
  %shr146.i = lshr i32 %136, 2, !dbg !1663
  %and147.i = and i32 %shr146.i, 63, !dbg !1663
  %idxprom148.i = zext i32 %and147.i to i64, !dbg !1663
  %arrayidx149.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom148.i, !dbg !1663
  %137 = load i32, i32* %arrayidx149.i, align 4, !dbg !1663
  %138 = load i32, i32* %u.i, align 4, !dbg !1663
  %shr150.i = lshr i32 %138, 10, !dbg !1663
  %and151.i = and i32 %shr150.i, 63, !dbg !1663
  %idxprom152.i = zext i32 %and151.i to i64, !dbg !1663
  %arrayidx153.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom152.i, !dbg !1663
  %139 = load i32, i32* %arrayidx153.i, align 4, !dbg !1663
  %xor154.i = xor i32 %137, %139, !dbg !1663
  %140 = load i32, i32* %u.i, align 4, !dbg !1663
  %shr155.i = lshr i32 %140, 18, !dbg !1663
  %and156.i = and i32 %shr155.i, 63, !dbg !1663
  %idxprom157.i = zext i32 %and156.i to i64, !dbg !1663
  %arrayidx158.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom157.i, !dbg !1663
  %141 = load i32, i32* %arrayidx158.i, align 4, !dbg !1663
  %xor159.i = xor i32 %xor154.i, %141, !dbg !1663
  %142 = load i32, i32* %u.i, align 4, !dbg !1663
  %shr160.i = lshr i32 %142, 26, !dbg !1663
  %idxprom162.i = zext i32 %shr160.i to i64, !dbg !1663
  %arrayidx163.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom162.i, !dbg !1663
  %143 = load i32, i32* %arrayidx163.i, align 4, !dbg !1663
  %xor164.i = xor i32 %xor159.i, %143, !dbg !1663
  %144 = load i32, i32* %t.i, align 4, !dbg !1663
  %shr165.i = lshr i32 %144, 2, !dbg !1663
  %and166.i = and i32 %shr165.i, 63, !dbg !1663
  %idxprom167.i = zext i32 %and166.i to i64, !dbg !1663
  %arrayidx168.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom167.i, !dbg !1663
  %145 = load i32, i32* %arrayidx168.i, align 4, !dbg !1663
  %xor169.i = xor i32 %xor164.i, %145, !dbg !1663
  %146 = load i32, i32* %t.i, align 4, !dbg !1663
  %shr170.i = lshr i32 %146, 10, !dbg !1663
  %and171.i = and i32 %shr170.i, 63, !dbg !1663
  %idxprom172.i = zext i32 %and171.i to i64, !dbg !1663
  %arrayidx173.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom172.i, !dbg !1663
  %147 = load i32, i32* %arrayidx173.i, align 4, !dbg !1663
  %xor174.i = xor i32 %xor169.i, %147, !dbg !1663
  %148 = load i32, i32* %t.i, align 4, !dbg !1663
  %shr175.i = lshr i32 %148, 18, !dbg !1663
  %and176.i = and i32 %shr175.i, 63, !dbg !1663
  %idxprom177.i = zext i32 %and176.i to i64, !dbg !1663
  %arrayidx178.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom177.i, !dbg !1663
  %149 = load i32, i32* %arrayidx178.i, align 4, !dbg !1663
  %xor179.i = xor i32 %xor174.i, %149, !dbg !1663
  %150 = load i32, i32* %t.i, align 4, !dbg !1663
  %shr180.i = lshr i32 %150, 26, !dbg !1663
  %idxprom182.i = zext i32 %shr180.i to i64, !dbg !1663
  %arrayidx183.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom182.i, !dbg !1663
  %151 = load i32, i32* %arrayidx183.i, align 4, !dbg !1663
  %xor184.i = xor i32 %xor179.i, %151, !dbg !1663
  %152 = load i32, i32* %l.i, align 4, !dbg !1663
  %xor185.i = xor i32 %152, %xor184.i, !dbg !1663
  store i32 %xor185.i, i32* %l.i, align 4, !dbg !1663
  %153 = load i32, i32* %l.i, align 4, !dbg !1664
  %154 = load i32*, i32** %s.i, align 8, !dbg !1664
  %arrayidx186.i = getelementptr inbounds i32, i32* %154, i64 6, !dbg !1664
  %155 = load i32, i32* %arrayidx186.i, align 4, !dbg !1664
  %xor187.i = xor i32 %153, %155, !dbg !1664
  store i32 %xor187.i, i32* %u.i, align 4, !dbg !1664
  %156 = load i32, i32* %l.i, align 4, !dbg !1664
  %157 = load i32*, i32** %s.i, align 8, !dbg !1664
  %arrayidx188.i = getelementptr inbounds i32, i32* %157, i64 7, !dbg !1664
  %158 = load i32, i32* %arrayidx188.i, align 4, !dbg !1664
  %xor189.i = xor i32 %156, %158, !dbg !1664
  store i32 %xor189.i, i32* %t.i, align 4, !dbg !1664
  %159 = load i32, i32* %t.i, align 4, !dbg !1581
  %160 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %159) #7, !dbg !1581, !srcloc !113
  store i32 %160, i32* %ret190.i, align 4, !dbg !1581
  %161 = load i32, i32* %ret190.i, align 4, !dbg !1581
  store i32 %161, i32* %tmp191.i, align 4, !dbg !1581
  %162 = load i32, i32* %tmp191.i, align 4, !dbg !1581
  store i32 %162, i32* %t.i, align 4, !dbg !1664
  %163 = load i32, i32* %u.i, align 4, !dbg !1664
  %shr192.i = lshr i32 %163, 2, !dbg !1664
  %and193.i = and i32 %shr192.i, 63, !dbg !1664
  %idxprom194.i = zext i32 %and193.i to i64, !dbg !1664
  %arrayidx195.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom194.i, !dbg !1664
  %164 = load i32, i32* %arrayidx195.i, align 4, !dbg !1664
  %165 = load i32, i32* %u.i, align 4, !dbg !1664
  %shr196.i = lshr i32 %165, 10, !dbg !1664
  %and197.i = and i32 %shr196.i, 63, !dbg !1664
  %idxprom198.i = zext i32 %and197.i to i64, !dbg !1664
  %arrayidx199.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom198.i, !dbg !1664
  %166 = load i32, i32* %arrayidx199.i, align 4, !dbg !1664
  %xor200.i = xor i32 %164, %166, !dbg !1664
  %167 = load i32, i32* %u.i, align 4, !dbg !1664
  %shr201.i = lshr i32 %167, 18, !dbg !1664
  %and202.i = and i32 %shr201.i, 63, !dbg !1664
  %idxprom203.i = zext i32 %and202.i to i64, !dbg !1664
  %arrayidx204.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom203.i, !dbg !1664
  %168 = load i32, i32* %arrayidx204.i, align 4, !dbg !1664
  %xor205.i = xor i32 %xor200.i, %168, !dbg !1664
  %169 = load i32, i32* %u.i, align 4, !dbg !1664
  %shr206.i = lshr i32 %169, 26, !dbg !1664
  %idxprom208.i = zext i32 %shr206.i to i64, !dbg !1664
  %arrayidx209.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom208.i, !dbg !1664
  %170 = load i32, i32* %arrayidx209.i, align 4, !dbg !1664
  %xor210.i = xor i32 %xor205.i, %170, !dbg !1664
  %171 = load i32, i32* %t.i, align 4, !dbg !1664
  %shr211.i = lshr i32 %171, 2, !dbg !1664
  %and212.i = and i32 %shr211.i, 63, !dbg !1664
  %idxprom213.i = zext i32 %and212.i to i64, !dbg !1664
  %arrayidx214.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom213.i, !dbg !1664
  %172 = load i32, i32* %arrayidx214.i, align 4, !dbg !1664
  %xor215.i = xor i32 %xor210.i, %172, !dbg !1664
  %173 = load i32, i32* %t.i, align 4, !dbg !1664
  %shr216.i = lshr i32 %173, 10, !dbg !1664
  %and217.i = and i32 %shr216.i, 63, !dbg !1664
  %idxprom218.i = zext i32 %and217.i to i64, !dbg !1664
  %arrayidx219.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom218.i, !dbg !1664
  %174 = load i32, i32* %arrayidx219.i, align 4, !dbg !1664
  %xor220.i = xor i32 %xor215.i, %174, !dbg !1664
  %175 = load i32, i32* %t.i, align 4, !dbg !1664
  %shr221.i = lshr i32 %175, 18, !dbg !1664
  %and222.i = and i32 %shr221.i, 63, !dbg !1664
  %idxprom223.i = zext i32 %and222.i to i64, !dbg !1664
  %arrayidx224.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom223.i, !dbg !1664
  %176 = load i32, i32* %arrayidx224.i, align 4, !dbg !1664
  %xor225.i = xor i32 %xor220.i, %176, !dbg !1664
  %177 = load i32, i32* %t.i, align 4, !dbg !1664
  %shr226.i = lshr i32 %177, 26, !dbg !1664
  %idxprom228.i = zext i32 %shr226.i to i64, !dbg !1664
  %arrayidx229.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom228.i, !dbg !1664
  %178 = load i32, i32* %arrayidx229.i, align 4, !dbg !1664
  %xor230.i = xor i32 %xor225.i, %178, !dbg !1664
  %179 = load i32, i32* %r.i, align 4, !dbg !1664
  %xor231.i = xor i32 %179, %xor230.i, !dbg !1664
  store i32 %xor231.i, i32* %r.i, align 4, !dbg !1664
  %180 = load i32, i32* %r.i, align 4, !dbg !1665
  %181 = load i32*, i32** %s.i, align 8, !dbg !1665
  %arrayidx232.i = getelementptr inbounds i32, i32* %181, i64 8, !dbg !1665
  %182 = load i32, i32* %arrayidx232.i, align 4, !dbg !1665
  %xor233.i = xor i32 %180, %182, !dbg !1665
  store i32 %xor233.i, i32* %u.i, align 4, !dbg !1665
  %183 = load i32, i32* %r.i, align 4, !dbg !1665
  %184 = load i32*, i32** %s.i, align 8, !dbg !1665
  %arrayidx234.i = getelementptr inbounds i32, i32* %184, i64 9, !dbg !1665
  %185 = load i32, i32* %arrayidx234.i, align 4, !dbg !1665
  %xor235.i = xor i32 %183, %185, !dbg !1665
  store i32 %xor235.i, i32* %t.i, align 4, !dbg !1665
  %186 = load i32, i32* %t.i, align 4, !dbg !1582
  %187 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %186) #7, !dbg !1582, !srcloc !119
  store i32 %187, i32* %ret236.i, align 4, !dbg !1582
  %188 = load i32, i32* %ret236.i, align 4, !dbg !1582
  store i32 %188, i32* %tmp237.i, align 4, !dbg !1582
  %189 = load i32, i32* %tmp237.i, align 4, !dbg !1582
  store i32 %189, i32* %t.i, align 4, !dbg !1665
  %190 = load i32, i32* %u.i, align 4, !dbg !1665
  %shr238.i = lshr i32 %190, 2, !dbg !1665
  %and239.i = and i32 %shr238.i, 63, !dbg !1665
  %idxprom240.i = zext i32 %and239.i to i64, !dbg !1665
  %arrayidx241.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom240.i, !dbg !1665
  %191 = load i32, i32* %arrayidx241.i, align 4, !dbg !1665
  %192 = load i32, i32* %u.i, align 4, !dbg !1665
  %shr242.i = lshr i32 %192, 10, !dbg !1665
  %and243.i = and i32 %shr242.i, 63, !dbg !1665
  %idxprom244.i = zext i32 %and243.i to i64, !dbg !1665
  %arrayidx245.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom244.i, !dbg !1665
  %193 = load i32, i32* %arrayidx245.i, align 4, !dbg !1665
  %xor246.i = xor i32 %191, %193, !dbg !1665
  %194 = load i32, i32* %u.i, align 4, !dbg !1665
  %shr247.i = lshr i32 %194, 18, !dbg !1665
  %and248.i = and i32 %shr247.i, 63, !dbg !1665
  %idxprom249.i = zext i32 %and248.i to i64, !dbg !1665
  %arrayidx250.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom249.i, !dbg !1665
  %195 = load i32, i32* %arrayidx250.i, align 4, !dbg !1665
  %xor251.i = xor i32 %xor246.i, %195, !dbg !1665
  %196 = load i32, i32* %u.i, align 4, !dbg !1665
  %shr252.i = lshr i32 %196, 26, !dbg !1665
  %idxprom254.i = zext i32 %shr252.i to i64, !dbg !1665
  %arrayidx255.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom254.i, !dbg !1665
  %197 = load i32, i32* %arrayidx255.i, align 4, !dbg !1665
  %xor256.i = xor i32 %xor251.i, %197, !dbg !1665
  %198 = load i32, i32* %t.i, align 4, !dbg !1665
  %shr257.i = lshr i32 %198, 2, !dbg !1665
  %and258.i = and i32 %shr257.i, 63, !dbg !1665
  %idxprom259.i = zext i32 %and258.i to i64, !dbg !1665
  %arrayidx260.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom259.i, !dbg !1665
  %199 = load i32, i32* %arrayidx260.i, align 4, !dbg !1665
  %xor261.i = xor i32 %xor256.i, %199, !dbg !1665
  %200 = load i32, i32* %t.i, align 4, !dbg !1665
  %shr262.i = lshr i32 %200, 10, !dbg !1665
  %and263.i = and i32 %shr262.i, 63, !dbg !1665
  %idxprom264.i = zext i32 %and263.i to i64, !dbg !1665
  %arrayidx265.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom264.i, !dbg !1665
  %201 = load i32, i32* %arrayidx265.i, align 4, !dbg !1665
  %xor266.i = xor i32 %xor261.i, %201, !dbg !1665
  %202 = load i32, i32* %t.i, align 4, !dbg !1665
  %shr267.i = lshr i32 %202, 18, !dbg !1665
  %and268.i = and i32 %shr267.i, 63, !dbg !1665
  %idxprom269.i = zext i32 %and268.i to i64, !dbg !1665
  %arrayidx270.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom269.i, !dbg !1665
  %203 = load i32, i32* %arrayidx270.i, align 4, !dbg !1665
  %xor271.i = xor i32 %xor266.i, %203, !dbg !1665
  %204 = load i32, i32* %t.i, align 4, !dbg !1665
  %shr272.i = lshr i32 %204, 26, !dbg !1665
  %idxprom274.i = zext i32 %shr272.i to i64, !dbg !1665
  %arrayidx275.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom274.i, !dbg !1665
  %205 = load i32, i32* %arrayidx275.i, align 4, !dbg !1665
  %xor276.i = xor i32 %xor271.i, %205, !dbg !1665
  %206 = load i32, i32* %l.i, align 4, !dbg !1665
  %xor277.i = xor i32 %206, %xor276.i, !dbg !1665
  store i32 %xor277.i, i32* %l.i, align 4, !dbg !1665
  %207 = load i32, i32* %l.i, align 4, !dbg !1666
  %208 = load i32*, i32** %s.i, align 8, !dbg !1666
  %arrayidx278.i = getelementptr inbounds i32, i32* %208, i64 10, !dbg !1666
  %209 = load i32, i32* %arrayidx278.i, align 4, !dbg !1666
  %xor279.i = xor i32 %207, %209, !dbg !1666
  store i32 %xor279.i, i32* %u.i, align 4, !dbg !1666
  %210 = load i32, i32* %l.i, align 4, !dbg !1666
  %211 = load i32*, i32** %s.i, align 8, !dbg !1666
  %arrayidx280.i = getelementptr inbounds i32, i32* %211, i64 11, !dbg !1666
  %212 = load i32, i32* %arrayidx280.i, align 4, !dbg !1666
  %xor281.i = xor i32 %210, %212, !dbg !1666
  store i32 %xor281.i, i32* %t.i, align 4, !dbg !1666
  %213 = load i32, i32* %t.i, align 4, !dbg !1583
  %214 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %213) #7, !dbg !1583, !srcloc !125
  store i32 %214, i32* %ret282.i, align 4, !dbg !1583
  %215 = load i32, i32* %ret282.i, align 4, !dbg !1583
  store i32 %215, i32* %tmp283.i, align 4, !dbg !1583
  %216 = load i32, i32* %tmp283.i, align 4, !dbg !1583
  store i32 %216, i32* %t.i, align 4, !dbg !1666
  %217 = load i32, i32* %u.i, align 4, !dbg !1666
  %shr284.i = lshr i32 %217, 2, !dbg !1666
  %and285.i = and i32 %shr284.i, 63, !dbg !1666
  %idxprom286.i = zext i32 %and285.i to i64, !dbg !1666
  %arrayidx287.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom286.i, !dbg !1666
  %218 = load i32, i32* %arrayidx287.i, align 4, !dbg !1666
  %219 = load i32, i32* %u.i, align 4, !dbg !1666
  %shr288.i = lshr i32 %219, 10, !dbg !1666
  %and289.i = and i32 %shr288.i, 63, !dbg !1666
  %idxprom290.i = zext i32 %and289.i to i64, !dbg !1666
  %arrayidx291.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom290.i, !dbg !1666
  %220 = load i32, i32* %arrayidx291.i, align 4, !dbg !1666
  %xor292.i = xor i32 %218, %220, !dbg !1666
  %221 = load i32, i32* %u.i, align 4, !dbg !1666
  %shr293.i = lshr i32 %221, 18, !dbg !1666
  %and294.i = and i32 %shr293.i, 63, !dbg !1666
  %idxprom295.i = zext i32 %and294.i to i64, !dbg !1666
  %arrayidx296.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom295.i, !dbg !1666
  %222 = load i32, i32* %arrayidx296.i, align 4, !dbg !1666
  %xor297.i = xor i32 %xor292.i, %222, !dbg !1666
  %223 = load i32, i32* %u.i, align 4, !dbg !1666
  %shr298.i = lshr i32 %223, 26, !dbg !1666
  %idxprom300.i = zext i32 %shr298.i to i64, !dbg !1666
  %arrayidx301.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom300.i, !dbg !1666
  %224 = load i32, i32* %arrayidx301.i, align 4, !dbg !1666
  %xor302.i = xor i32 %xor297.i, %224, !dbg !1666
  %225 = load i32, i32* %t.i, align 4, !dbg !1666
  %shr303.i = lshr i32 %225, 2, !dbg !1666
  %and304.i = and i32 %shr303.i, 63, !dbg !1666
  %idxprom305.i = zext i32 %and304.i to i64, !dbg !1666
  %arrayidx306.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom305.i, !dbg !1666
  %226 = load i32, i32* %arrayidx306.i, align 4, !dbg !1666
  %xor307.i = xor i32 %xor302.i, %226, !dbg !1666
  %227 = load i32, i32* %t.i, align 4, !dbg !1666
  %shr308.i = lshr i32 %227, 10, !dbg !1666
  %and309.i = and i32 %shr308.i, 63, !dbg !1666
  %idxprom310.i = zext i32 %and309.i to i64, !dbg !1666
  %arrayidx311.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom310.i, !dbg !1666
  %228 = load i32, i32* %arrayidx311.i, align 4, !dbg !1666
  %xor312.i = xor i32 %xor307.i, %228, !dbg !1666
  %229 = load i32, i32* %t.i, align 4, !dbg !1666
  %shr313.i = lshr i32 %229, 18, !dbg !1666
  %and314.i = and i32 %shr313.i, 63, !dbg !1666
  %idxprom315.i = zext i32 %and314.i to i64, !dbg !1666
  %arrayidx316.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom315.i, !dbg !1666
  %230 = load i32, i32* %arrayidx316.i, align 4, !dbg !1666
  %xor317.i = xor i32 %xor312.i, %230, !dbg !1666
  %231 = load i32, i32* %t.i, align 4, !dbg !1666
  %shr318.i = lshr i32 %231, 26, !dbg !1666
  %idxprom320.i = zext i32 %shr318.i to i64, !dbg !1666
  %arrayidx321.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom320.i, !dbg !1666
  %232 = load i32, i32* %arrayidx321.i, align 4, !dbg !1666
  %xor322.i = xor i32 %xor317.i, %232, !dbg !1666
  %233 = load i32, i32* %r.i, align 4, !dbg !1666
  %xor323.i = xor i32 %233, %xor322.i, !dbg !1666
  store i32 %xor323.i, i32* %r.i, align 4, !dbg !1666
  %234 = load i32, i32* %r.i, align 4, !dbg !1667
  %235 = load i32*, i32** %s.i, align 8, !dbg !1667
  %arrayidx324.i = getelementptr inbounds i32, i32* %235, i64 12, !dbg !1667
  %236 = load i32, i32* %arrayidx324.i, align 4, !dbg !1667
  %xor325.i = xor i32 %234, %236, !dbg !1667
  store i32 %xor325.i, i32* %u.i, align 4, !dbg !1667
  %237 = load i32, i32* %r.i, align 4, !dbg !1667
  %238 = load i32*, i32** %s.i, align 8, !dbg !1667
  %arrayidx326.i = getelementptr inbounds i32, i32* %238, i64 13, !dbg !1667
  %239 = load i32, i32* %arrayidx326.i, align 4, !dbg !1667
  %xor327.i = xor i32 %237, %239, !dbg !1667
  store i32 %xor327.i, i32* %t.i, align 4, !dbg !1667
  %240 = load i32, i32* %t.i, align 4, !dbg !1584
  %241 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %240) #7, !dbg !1584, !srcloc !131
  store i32 %241, i32* %ret328.i, align 4, !dbg !1584
  %242 = load i32, i32* %ret328.i, align 4, !dbg !1584
  store i32 %242, i32* %tmp329.i, align 4, !dbg !1584
  %243 = load i32, i32* %tmp329.i, align 4, !dbg !1584
  store i32 %243, i32* %t.i, align 4, !dbg !1667
  %244 = load i32, i32* %u.i, align 4, !dbg !1667
  %shr330.i = lshr i32 %244, 2, !dbg !1667
  %and331.i = and i32 %shr330.i, 63, !dbg !1667
  %idxprom332.i = zext i32 %and331.i to i64, !dbg !1667
  %arrayidx333.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom332.i, !dbg !1667
  %245 = load i32, i32* %arrayidx333.i, align 4, !dbg !1667
  %246 = load i32, i32* %u.i, align 4, !dbg !1667
  %shr334.i = lshr i32 %246, 10, !dbg !1667
  %and335.i = and i32 %shr334.i, 63, !dbg !1667
  %idxprom336.i = zext i32 %and335.i to i64, !dbg !1667
  %arrayidx337.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom336.i, !dbg !1667
  %247 = load i32, i32* %arrayidx337.i, align 4, !dbg !1667
  %xor338.i = xor i32 %245, %247, !dbg !1667
  %248 = load i32, i32* %u.i, align 4, !dbg !1667
  %shr339.i = lshr i32 %248, 18, !dbg !1667
  %and340.i = and i32 %shr339.i, 63, !dbg !1667
  %idxprom341.i = zext i32 %and340.i to i64, !dbg !1667
  %arrayidx342.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom341.i, !dbg !1667
  %249 = load i32, i32* %arrayidx342.i, align 4, !dbg !1667
  %xor343.i = xor i32 %xor338.i, %249, !dbg !1667
  %250 = load i32, i32* %u.i, align 4, !dbg !1667
  %shr344.i = lshr i32 %250, 26, !dbg !1667
  %idxprom346.i = zext i32 %shr344.i to i64, !dbg !1667
  %arrayidx347.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom346.i, !dbg !1667
  %251 = load i32, i32* %arrayidx347.i, align 4, !dbg !1667
  %xor348.i = xor i32 %xor343.i, %251, !dbg !1667
  %252 = load i32, i32* %t.i, align 4, !dbg !1667
  %shr349.i = lshr i32 %252, 2, !dbg !1667
  %and350.i = and i32 %shr349.i, 63, !dbg !1667
  %idxprom351.i = zext i32 %and350.i to i64, !dbg !1667
  %arrayidx352.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom351.i, !dbg !1667
  %253 = load i32, i32* %arrayidx352.i, align 4, !dbg !1667
  %xor353.i = xor i32 %xor348.i, %253, !dbg !1667
  %254 = load i32, i32* %t.i, align 4, !dbg !1667
  %shr354.i = lshr i32 %254, 10, !dbg !1667
  %and355.i = and i32 %shr354.i, 63, !dbg !1667
  %idxprom356.i = zext i32 %and355.i to i64, !dbg !1667
  %arrayidx357.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom356.i, !dbg !1667
  %255 = load i32, i32* %arrayidx357.i, align 4, !dbg !1667
  %xor358.i = xor i32 %xor353.i, %255, !dbg !1667
  %256 = load i32, i32* %t.i, align 4, !dbg !1667
  %shr359.i = lshr i32 %256, 18, !dbg !1667
  %and360.i = and i32 %shr359.i, 63, !dbg !1667
  %idxprom361.i = zext i32 %and360.i to i64, !dbg !1667
  %arrayidx362.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom361.i, !dbg !1667
  %257 = load i32, i32* %arrayidx362.i, align 4, !dbg !1667
  %xor363.i = xor i32 %xor358.i, %257, !dbg !1667
  %258 = load i32, i32* %t.i, align 4, !dbg !1667
  %shr364.i = lshr i32 %258, 26, !dbg !1667
  %idxprom366.i = zext i32 %shr364.i to i64, !dbg !1667
  %arrayidx367.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom366.i, !dbg !1667
  %259 = load i32, i32* %arrayidx367.i, align 4, !dbg !1667
  %xor368.i = xor i32 %xor363.i, %259, !dbg !1667
  %260 = load i32, i32* %l.i, align 4, !dbg !1667
  %xor369.i = xor i32 %260, %xor368.i, !dbg !1667
  store i32 %xor369.i, i32* %l.i, align 4, !dbg !1667
  %261 = load i32, i32* %l.i, align 4, !dbg !1668
  %262 = load i32*, i32** %s.i, align 8, !dbg !1668
  %arrayidx370.i = getelementptr inbounds i32, i32* %262, i64 14, !dbg !1668
  %263 = load i32, i32* %arrayidx370.i, align 4, !dbg !1668
  %xor371.i = xor i32 %261, %263, !dbg !1668
  store i32 %xor371.i, i32* %u.i, align 4, !dbg !1668
  %264 = load i32, i32* %l.i, align 4, !dbg !1668
  %265 = load i32*, i32** %s.i, align 8, !dbg !1668
  %arrayidx372.i = getelementptr inbounds i32, i32* %265, i64 15, !dbg !1668
  %266 = load i32, i32* %arrayidx372.i, align 4, !dbg !1668
  %xor373.i = xor i32 %264, %266, !dbg !1668
  store i32 %xor373.i, i32* %t.i, align 4, !dbg !1668
  %267 = load i32, i32* %t.i, align 4, !dbg !1585
  %268 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %267) #7, !dbg !1585, !srcloc !137
  store i32 %268, i32* %ret374.i, align 4, !dbg !1585
  %269 = load i32, i32* %ret374.i, align 4, !dbg !1585
  store i32 %269, i32* %tmp375.i, align 4, !dbg !1585
  %270 = load i32, i32* %tmp375.i, align 4, !dbg !1585
  store i32 %270, i32* %t.i, align 4, !dbg !1668
  %271 = load i32, i32* %u.i, align 4, !dbg !1668
  %shr376.i = lshr i32 %271, 2, !dbg !1668
  %and377.i = and i32 %shr376.i, 63, !dbg !1668
  %idxprom378.i = zext i32 %and377.i to i64, !dbg !1668
  %arrayidx379.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom378.i, !dbg !1668
  %272 = load i32, i32* %arrayidx379.i, align 4, !dbg !1668
  %273 = load i32, i32* %u.i, align 4, !dbg !1668
  %shr380.i = lshr i32 %273, 10, !dbg !1668
  %and381.i = and i32 %shr380.i, 63, !dbg !1668
  %idxprom382.i = zext i32 %and381.i to i64, !dbg !1668
  %arrayidx383.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom382.i, !dbg !1668
  %274 = load i32, i32* %arrayidx383.i, align 4, !dbg !1668
  %xor384.i = xor i32 %272, %274, !dbg !1668
  %275 = load i32, i32* %u.i, align 4, !dbg !1668
  %shr385.i = lshr i32 %275, 18, !dbg !1668
  %and386.i = and i32 %shr385.i, 63, !dbg !1668
  %idxprom387.i = zext i32 %and386.i to i64, !dbg !1668
  %arrayidx388.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom387.i, !dbg !1668
  %276 = load i32, i32* %arrayidx388.i, align 4, !dbg !1668
  %xor389.i = xor i32 %xor384.i, %276, !dbg !1668
  %277 = load i32, i32* %u.i, align 4, !dbg !1668
  %shr390.i = lshr i32 %277, 26, !dbg !1668
  %idxprom392.i = zext i32 %shr390.i to i64, !dbg !1668
  %arrayidx393.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom392.i, !dbg !1668
  %278 = load i32, i32* %arrayidx393.i, align 4, !dbg !1668
  %xor394.i = xor i32 %xor389.i, %278, !dbg !1668
  %279 = load i32, i32* %t.i, align 4, !dbg !1668
  %shr395.i = lshr i32 %279, 2, !dbg !1668
  %and396.i = and i32 %shr395.i, 63, !dbg !1668
  %idxprom397.i = zext i32 %and396.i to i64, !dbg !1668
  %arrayidx398.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom397.i, !dbg !1668
  %280 = load i32, i32* %arrayidx398.i, align 4, !dbg !1668
  %xor399.i = xor i32 %xor394.i, %280, !dbg !1668
  %281 = load i32, i32* %t.i, align 4, !dbg !1668
  %shr400.i = lshr i32 %281, 10, !dbg !1668
  %and401.i = and i32 %shr400.i, 63, !dbg !1668
  %idxprom402.i = zext i32 %and401.i to i64, !dbg !1668
  %arrayidx403.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom402.i, !dbg !1668
  %282 = load i32, i32* %arrayidx403.i, align 4, !dbg !1668
  %xor404.i = xor i32 %xor399.i, %282, !dbg !1668
  %283 = load i32, i32* %t.i, align 4, !dbg !1668
  %shr405.i = lshr i32 %283, 18, !dbg !1668
  %and406.i = and i32 %shr405.i, 63, !dbg !1668
  %idxprom407.i = zext i32 %and406.i to i64, !dbg !1668
  %arrayidx408.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom407.i, !dbg !1668
  %284 = load i32, i32* %arrayidx408.i, align 4, !dbg !1668
  %xor409.i = xor i32 %xor404.i, %284, !dbg !1668
  %285 = load i32, i32* %t.i, align 4, !dbg !1668
  %shr410.i = lshr i32 %285, 26, !dbg !1668
  %idxprom412.i = zext i32 %shr410.i to i64, !dbg !1668
  %arrayidx413.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom412.i, !dbg !1668
  %286 = load i32, i32* %arrayidx413.i, align 4, !dbg !1668
  %xor414.i = xor i32 %xor409.i, %286, !dbg !1668
  %287 = load i32, i32* %r.i, align 4, !dbg !1668
  %xor415.i = xor i32 %287, %xor414.i, !dbg !1668
  store i32 %xor415.i, i32* %r.i, align 4, !dbg !1668
  %288 = load i32, i32* %r.i, align 4, !dbg !1669
  %289 = load i32*, i32** %s.i, align 8, !dbg !1669
  %arrayidx416.i = getelementptr inbounds i32, i32* %289, i64 16, !dbg !1669
  %290 = load i32, i32* %arrayidx416.i, align 4, !dbg !1669
  %xor417.i = xor i32 %288, %290, !dbg !1669
  store i32 %xor417.i, i32* %u.i, align 4, !dbg !1669
  %291 = load i32, i32* %r.i, align 4, !dbg !1669
  %292 = load i32*, i32** %s.i, align 8, !dbg !1669
  %arrayidx418.i = getelementptr inbounds i32, i32* %292, i64 17, !dbg !1669
  %293 = load i32, i32* %arrayidx418.i, align 4, !dbg !1669
  %xor419.i = xor i32 %291, %293, !dbg !1669
  store i32 %xor419.i, i32* %t.i, align 4, !dbg !1669
  %294 = load i32, i32* %t.i, align 4, !dbg !1586
  %295 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %294) #7, !dbg !1586, !srcloc !143
  store i32 %295, i32* %ret420.i, align 4, !dbg !1586
  %296 = load i32, i32* %ret420.i, align 4, !dbg !1586
  store i32 %296, i32* %tmp421.i, align 4, !dbg !1586
  %297 = load i32, i32* %tmp421.i, align 4, !dbg !1586
  store i32 %297, i32* %t.i, align 4, !dbg !1669
  %298 = load i32, i32* %u.i, align 4, !dbg !1669
  %shr422.i = lshr i32 %298, 2, !dbg !1669
  %and423.i = and i32 %shr422.i, 63, !dbg !1669
  %idxprom424.i = zext i32 %and423.i to i64, !dbg !1669
  %arrayidx425.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom424.i, !dbg !1669
  %299 = load i32, i32* %arrayidx425.i, align 4, !dbg !1669
  %300 = load i32, i32* %u.i, align 4, !dbg !1669
  %shr426.i = lshr i32 %300, 10, !dbg !1669
  %and427.i = and i32 %shr426.i, 63, !dbg !1669
  %idxprom428.i = zext i32 %and427.i to i64, !dbg !1669
  %arrayidx429.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom428.i, !dbg !1669
  %301 = load i32, i32* %arrayidx429.i, align 4, !dbg !1669
  %xor430.i = xor i32 %299, %301, !dbg !1669
  %302 = load i32, i32* %u.i, align 4, !dbg !1669
  %shr431.i = lshr i32 %302, 18, !dbg !1669
  %and432.i = and i32 %shr431.i, 63, !dbg !1669
  %idxprom433.i = zext i32 %and432.i to i64, !dbg !1669
  %arrayidx434.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom433.i, !dbg !1669
  %303 = load i32, i32* %arrayidx434.i, align 4, !dbg !1669
  %xor435.i = xor i32 %xor430.i, %303, !dbg !1669
  %304 = load i32, i32* %u.i, align 4, !dbg !1669
  %shr436.i = lshr i32 %304, 26, !dbg !1669
  %idxprom438.i = zext i32 %shr436.i to i64, !dbg !1669
  %arrayidx439.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom438.i, !dbg !1669
  %305 = load i32, i32* %arrayidx439.i, align 4, !dbg !1669
  %xor440.i = xor i32 %xor435.i, %305, !dbg !1669
  %306 = load i32, i32* %t.i, align 4, !dbg !1669
  %shr441.i = lshr i32 %306, 2, !dbg !1669
  %and442.i = and i32 %shr441.i, 63, !dbg !1669
  %idxprom443.i = zext i32 %and442.i to i64, !dbg !1669
  %arrayidx444.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom443.i, !dbg !1669
  %307 = load i32, i32* %arrayidx444.i, align 4, !dbg !1669
  %xor445.i = xor i32 %xor440.i, %307, !dbg !1669
  %308 = load i32, i32* %t.i, align 4, !dbg !1669
  %shr446.i = lshr i32 %308, 10, !dbg !1669
  %and447.i = and i32 %shr446.i, 63, !dbg !1669
  %idxprom448.i = zext i32 %and447.i to i64, !dbg !1669
  %arrayidx449.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom448.i, !dbg !1669
  %309 = load i32, i32* %arrayidx449.i, align 4, !dbg !1669
  %xor450.i = xor i32 %xor445.i, %309, !dbg !1669
  %310 = load i32, i32* %t.i, align 4, !dbg !1669
  %shr451.i = lshr i32 %310, 18, !dbg !1669
  %and452.i = and i32 %shr451.i, 63, !dbg !1669
  %idxprom453.i = zext i32 %and452.i to i64, !dbg !1669
  %arrayidx454.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom453.i, !dbg !1669
  %311 = load i32, i32* %arrayidx454.i, align 4, !dbg !1669
  %xor455.i = xor i32 %xor450.i, %311, !dbg !1669
  %312 = load i32, i32* %t.i, align 4, !dbg !1669
  %shr456.i = lshr i32 %312, 26, !dbg !1669
  %idxprom458.i = zext i32 %shr456.i to i64, !dbg !1669
  %arrayidx459.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom458.i, !dbg !1669
  %313 = load i32, i32* %arrayidx459.i, align 4, !dbg !1669
  %xor460.i = xor i32 %xor455.i, %313, !dbg !1669
  %314 = load i32, i32* %l.i, align 4, !dbg !1669
  %xor461.i = xor i32 %314, %xor460.i, !dbg !1669
  store i32 %xor461.i, i32* %l.i, align 4, !dbg !1669
  %315 = load i32, i32* %l.i, align 4, !dbg !1670
  %316 = load i32*, i32** %s.i, align 8, !dbg !1670
  %arrayidx462.i = getelementptr inbounds i32, i32* %316, i64 18, !dbg !1670
  %317 = load i32, i32* %arrayidx462.i, align 4, !dbg !1670
  %xor463.i = xor i32 %315, %317, !dbg !1670
  store i32 %xor463.i, i32* %u.i, align 4, !dbg !1670
  %318 = load i32, i32* %l.i, align 4, !dbg !1670
  %319 = load i32*, i32** %s.i, align 8, !dbg !1670
  %arrayidx464.i = getelementptr inbounds i32, i32* %319, i64 19, !dbg !1670
  %320 = load i32, i32* %arrayidx464.i, align 4, !dbg !1670
  %xor465.i = xor i32 %318, %320, !dbg !1670
  store i32 %xor465.i, i32* %t.i, align 4, !dbg !1670
  %321 = load i32, i32* %t.i, align 4, !dbg !1587
  %322 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %321) #7, !dbg !1587, !srcloc !149
  store i32 %322, i32* %ret466.i, align 4, !dbg !1587
  %323 = load i32, i32* %ret466.i, align 4, !dbg !1587
  store i32 %323, i32* %tmp467.i, align 4, !dbg !1587
  %324 = load i32, i32* %tmp467.i, align 4, !dbg !1587
  store i32 %324, i32* %t.i, align 4, !dbg !1670
  %325 = load i32, i32* %u.i, align 4, !dbg !1670
  %shr468.i = lshr i32 %325, 2, !dbg !1670
  %and469.i = and i32 %shr468.i, 63, !dbg !1670
  %idxprom470.i = zext i32 %and469.i to i64, !dbg !1670
  %arrayidx471.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom470.i, !dbg !1670
  %326 = load i32, i32* %arrayidx471.i, align 4, !dbg !1670
  %327 = load i32, i32* %u.i, align 4, !dbg !1670
  %shr472.i = lshr i32 %327, 10, !dbg !1670
  %and473.i = and i32 %shr472.i, 63, !dbg !1670
  %idxprom474.i = zext i32 %and473.i to i64, !dbg !1670
  %arrayidx475.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom474.i, !dbg !1670
  %328 = load i32, i32* %arrayidx475.i, align 4, !dbg !1670
  %xor476.i = xor i32 %326, %328, !dbg !1670
  %329 = load i32, i32* %u.i, align 4, !dbg !1670
  %shr477.i = lshr i32 %329, 18, !dbg !1670
  %and478.i = and i32 %shr477.i, 63, !dbg !1670
  %idxprom479.i = zext i32 %and478.i to i64, !dbg !1670
  %arrayidx480.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom479.i, !dbg !1670
  %330 = load i32, i32* %arrayidx480.i, align 4, !dbg !1670
  %xor481.i = xor i32 %xor476.i, %330, !dbg !1670
  %331 = load i32, i32* %u.i, align 4, !dbg !1670
  %shr482.i = lshr i32 %331, 26, !dbg !1670
  %idxprom484.i = zext i32 %shr482.i to i64, !dbg !1670
  %arrayidx485.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom484.i, !dbg !1670
  %332 = load i32, i32* %arrayidx485.i, align 4, !dbg !1670
  %xor486.i = xor i32 %xor481.i, %332, !dbg !1670
  %333 = load i32, i32* %t.i, align 4, !dbg !1670
  %shr487.i = lshr i32 %333, 2, !dbg !1670
  %and488.i = and i32 %shr487.i, 63, !dbg !1670
  %idxprom489.i = zext i32 %and488.i to i64, !dbg !1670
  %arrayidx490.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom489.i, !dbg !1670
  %334 = load i32, i32* %arrayidx490.i, align 4, !dbg !1670
  %xor491.i = xor i32 %xor486.i, %334, !dbg !1670
  %335 = load i32, i32* %t.i, align 4, !dbg !1670
  %shr492.i = lshr i32 %335, 10, !dbg !1670
  %and493.i = and i32 %shr492.i, 63, !dbg !1670
  %idxprom494.i = zext i32 %and493.i to i64, !dbg !1670
  %arrayidx495.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom494.i, !dbg !1670
  %336 = load i32, i32* %arrayidx495.i, align 4, !dbg !1670
  %xor496.i = xor i32 %xor491.i, %336, !dbg !1670
  %337 = load i32, i32* %t.i, align 4, !dbg !1670
  %shr497.i = lshr i32 %337, 18, !dbg !1670
  %and498.i = and i32 %shr497.i, 63, !dbg !1670
  %idxprom499.i = zext i32 %and498.i to i64, !dbg !1670
  %arrayidx500.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom499.i, !dbg !1670
  %338 = load i32, i32* %arrayidx500.i, align 4, !dbg !1670
  %xor501.i = xor i32 %xor496.i, %338, !dbg !1670
  %339 = load i32, i32* %t.i, align 4, !dbg !1670
  %shr502.i = lshr i32 %339, 26, !dbg !1670
  %idxprom504.i = zext i32 %shr502.i to i64, !dbg !1670
  %arrayidx505.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom504.i, !dbg !1670
  %340 = load i32, i32* %arrayidx505.i, align 4, !dbg !1670
  %xor506.i = xor i32 %xor501.i, %340, !dbg !1670
  %341 = load i32, i32* %r.i, align 4, !dbg !1670
  %xor507.i = xor i32 %341, %xor506.i, !dbg !1670
  store i32 %xor507.i, i32* %r.i, align 4, !dbg !1670
  %342 = load i32, i32* %r.i, align 4, !dbg !1671
  %343 = load i32*, i32** %s.i, align 8, !dbg !1671
  %arrayidx508.i = getelementptr inbounds i32, i32* %343, i64 20, !dbg !1671
  %344 = load i32, i32* %arrayidx508.i, align 4, !dbg !1671
  %xor509.i = xor i32 %342, %344, !dbg !1671
  store i32 %xor509.i, i32* %u.i, align 4, !dbg !1671
  %345 = load i32, i32* %r.i, align 4, !dbg !1671
  %346 = load i32*, i32** %s.i, align 8, !dbg !1671
  %arrayidx510.i = getelementptr inbounds i32, i32* %346, i64 21, !dbg !1671
  %347 = load i32, i32* %arrayidx510.i, align 4, !dbg !1671
  %xor511.i = xor i32 %345, %347, !dbg !1671
  store i32 %xor511.i, i32* %t.i, align 4, !dbg !1671
  %348 = load i32, i32* %t.i, align 4, !dbg !1588
  %349 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %348) #7, !dbg !1588, !srcloc !155
  store i32 %349, i32* %ret512.i, align 4, !dbg !1588
  %350 = load i32, i32* %ret512.i, align 4, !dbg !1588
  store i32 %350, i32* %tmp513.i, align 4, !dbg !1588
  %351 = load i32, i32* %tmp513.i, align 4, !dbg !1588
  store i32 %351, i32* %t.i, align 4, !dbg !1671
  %352 = load i32, i32* %u.i, align 4, !dbg !1671
  %shr514.i = lshr i32 %352, 2, !dbg !1671
  %and515.i = and i32 %shr514.i, 63, !dbg !1671
  %idxprom516.i = zext i32 %and515.i to i64, !dbg !1671
  %arrayidx517.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom516.i, !dbg !1671
  %353 = load i32, i32* %arrayidx517.i, align 4, !dbg !1671
  %354 = load i32, i32* %u.i, align 4, !dbg !1671
  %shr518.i = lshr i32 %354, 10, !dbg !1671
  %and519.i = and i32 %shr518.i, 63, !dbg !1671
  %idxprom520.i = zext i32 %and519.i to i64, !dbg !1671
  %arrayidx521.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom520.i, !dbg !1671
  %355 = load i32, i32* %arrayidx521.i, align 4, !dbg !1671
  %xor522.i = xor i32 %353, %355, !dbg !1671
  %356 = load i32, i32* %u.i, align 4, !dbg !1671
  %shr523.i = lshr i32 %356, 18, !dbg !1671
  %and524.i = and i32 %shr523.i, 63, !dbg !1671
  %idxprom525.i = zext i32 %and524.i to i64, !dbg !1671
  %arrayidx526.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom525.i, !dbg !1671
  %357 = load i32, i32* %arrayidx526.i, align 4, !dbg !1671
  %xor527.i = xor i32 %xor522.i, %357, !dbg !1671
  %358 = load i32, i32* %u.i, align 4, !dbg !1671
  %shr528.i = lshr i32 %358, 26, !dbg !1671
  %idxprom530.i = zext i32 %shr528.i to i64, !dbg !1671
  %arrayidx531.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom530.i, !dbg !1671
  %359 = load i32, i32* %arrayidx531.i, align 4, !dbg !1671
  %xor532.i = xor i32 %xor527.i, %359, !dbg !1671
  %360 = load i32, i32* %t.i, align 4, !dbg !1671
  %shr533.i = lshr i32 %360, 2, !dbg !1671
  %and534.i = and i32 %shr533.i, 63, !dbg !1671
  %idxprom535.i = zext i32 %and534.i to i64, !dbg !1671
  %arrayidx536.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom535.i, !dbg !1671
  %361 = load i32, i32* %arrayidx536.i, align 4, !dbg !1671
  %xor537.i = xor i32 %xor532.i, %361, !dbg !1671
  %362 = load i32, i32* %t.i, align 4, !dbg !1671
  %shr538.i = lshr i32 %362, 10, !dbg !1671
  %and539.i = and i32 %shr538.i, 63, !dbg !1671
  %idxprom540.i = zext i32 %and539.i to i64, !dbg !1671
  %arrayidx541.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom540.i, !dbg !1671
  %363 = load i32, i32* %arrayidx541.i, align 4, !dbg !1671
  %xor542.i = xor i32 %xor537.i, %363, !dbg !1671
  %364 = load i32, i32* %t.i, align 4, !dbg !1671
  %shr543.i = lshr i32 %364, 18, !dbg !1671
  %and544.i = and i32 %shr543.i, 63, !dbg !1671
  %idxprom545.i = zext i32 %and544.i to i64, !dbg !1671
  %arrayidx546.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom545.i, !dbg !1671
  %365 = load i32, i32* %arrayidx546.i, align 4, !dbg !1671
  %xor547.i = xor i32 %xor542.i, %365, !dbg !1671
  %366 = load i32, i32* %t.i, align 4, !dbg !1671
  %shr548.i = lshr i32 %366, 26, !dbg !1671
  %idxprom550.i = zext i32 %shr548.i to i64, !dbg !1671
  %arrayidx551.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom550.i, !dbg !1671
  %367 = load i32, i32* %arrayidx551.i, align 4, !dbg !1671
  %xor552.i = xor i32 %xor547.i, %367, !dbg !1671
  %368 = load i32, i32* %l.i, align 4, !dbg !1671
  %xor553.i = xor i32 %368, %xor552.i, !dbg !1671
  store i32 %xor553.i, i32* %l.i, align 4, !dbg !1671
  %369 = load i32, i32* %l.i, align 4, !dbg !1672
  %370 = load i32*, i32** %s.i, align 8, !dbg !1672
  %arrayidx554.i = getelementptr inbounds i32, i32* %370, i64 22, !dbg !1672
  %371 = load i32, i32* %arrayidx554.i, align 4, !dbg !1672
  %xor555.i = xor i32 %369, %371, !dbg !1672
  store i32 %xor555.i, i32* %u.i, align 4, !dbg !1672
  %372 = load i32, i32* %l.i, align 4, !dbg !1672
  %373 = load i32*, i32** %s.i, align 8, !dbg !1672
  %arrayidx556.i = getelementptr inbounds i32, i32* %373, i64 23, !dbg !1672
  %374 = load i32, i32* %arrayidx556.i, align 4, !dbg !1672
  %xor557.i = xor i32 %372, %374, !dbg !1672
  store i32 %xor557.i, i32* %t.i, align 4, !dbg !1672
  %375 = load i32, i32* %t.i, align 4, !dbg !1589
  %376 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %375) #7, !dbg !1589, !srcloc !161
  store i32 %376, i32* %ret558.i, align 4, !dbg !1589
  %377 = load i32, i32* %ret558.i, align 4, !dbg !1589
  store i32 %377, i32* %tmp559.i, align 4, !dbg !1589
  %378 = load i32, i32* %tmp559.i, align 4, !dbg !1589
  store i32 %378, i32* %t.i, align 4, !dbg !1672
  %379 = load i32, i32* %u.i, align 4, !dbg !1672
  %shr560.i = lshr i32 %379, 2, !dbg !1672
  %and561.i = and i32 %shr560.i, 63, !dbg !1672
  %idxprom562.i = zext i32 %and561.i to i64, !dbg !1672
  %arrayidx563.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom562.i, !dbg !1672
  %380 = load i32, i32* %arrayidx563.i, align 4, !dbg !1672
  %381 = load i32, i32* %u.i, align 4, !dbg !1672
  %shr564.i = lshr i32 %381, 10, !dbg !1672
  %and565.i = and i32 %shr564.i, 63, !dbg !1672
  %idxprom566.i = zext i32 %and565.i to i64, !dbg !1672
  %arrayidx567.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom566.i, !dbg !1672
  %382 = load i32, i32* %arrayidx567.i, align 4, !dbg !1672
  %xor568.i = xor i32 %380, %382, !dbg !1672
  %383 = load i32, i32* %u.i, align 4, !dbg !1672
  %shr569.i = lshr i32 %383, 18, !dbg !1672
  %and570.i = and i32 %shr569.i, 63, !dbg !1672
  %idxprom571.i = zext i32 %and570.i to i64, !dbg !1672
  %arrayidx572.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom571.i, !dbg !1672
  %384 = load i32, i32* %arrayidx572.i, align 4, !dbg !1672
  %xor573.i = xor i32 %xor568.i, %384, !dbg !1672
  %385 = load i32, i32* %u.i, align 4, !dbg !1672
  %shr574.i = lshr i32 %385, 26, !dbg !1672
  %idxprom576.i = zext i32 %shr574.i to i64, !dbg !1672
  %arrayidx577.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom576.i, !dbg !1672
  %386 = load i32, i32* %arrayidx577.i, align 4, !dbg !1672
  %xor578.i = xor i32 %xor573.i, %386, !dbg !1672
  %387 = load i32, i32* %t.i, align 4, !dbg !1672
  %shr579.i = lshr i32 %387, 2, !dbg !1672
  %and580.i = and i32 %shr579.i, 63, !dbg !1672
  %idxprom581.i = zext i32 %and580.i to i64, !dbg !1672
  %arrayidx582.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom581.i, !dbg !1672
  %388 = load i32, i32* %arrayidx582.i, align 4, !dbg !1672
  %xor583.i = xor i32 %xor578.i, %388, !dbg !1672
  %389 = load i32, i32* %t.i, align 4, !dbg !1672
  %shr584.i = lshr i32 %389, 10, !dbg !1672
  %and585.i = and i32 %shr584.i, 63, !dbg !1672
  %idxprom586.i = zext i32 %and585.i to i64, !dbg !1672
  %arrayidx587.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom586.i, !dbg !1672
  %390 = load i32, i32* %arrayidx587.i, align 4, !dbg !1672
  %xor588.i = xor i32 %xor583.i, %390, !dbg !1672
  %391 = load i32, i32* %t.i, align 4, !dbg !1672
  %shr589.i = lshr i32 %391, 18, !dbg !1672
  %and590.i = and i32 %shr589.i, 63, !dbg !1672
  %idxprom591.i = zext i32 %and590.i to i64, !dbg !1672
  %arrayidx592.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom591.i, !dbg !1672
  %392 = load i32, i32* %arrayidx592.i, align 4, !dbg !1672
  %xor593.i = xor i32 %xor588.i, %392, !dbg !1672
  %393 = load i32, i32* %t.i, align 4, !dbg !1672
  %shr594.i = lshr i32 %393, 26, !dbg !1672
  %idxprom596.i = zext i32 %shr594.i to i64, !dbg !1672
  %arrayidx597.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom596.i, !dbg !1672
  %394 = load i32, i32* %arrayidx597.i, align 4, !dbg !1672
  %xor598.i = xor i32 %xor593.i, %394, !dbg !1672
  %395 = load i32, i32* %r.i, align 4, !dbg !1672
  %xor599.i = xor i32 %395, %xor598.i, !dbg !1672
  store i32 %xor599.i, i32* %r.i, align 4, !dbg !1672
  %396 = load i32, i32* %r.i, align 4, !dbg !1673
  %397 = load i32*, i32** %s.i, align 8, !dbg !1673
  %arrayidx600.i = getelementptr inbounds i32, i32* %397, i64 24, !dbg !1673
  %398 = load i32, i32* %arrayidx600.i, align 4, !dbg !1673
  %xor601.i = xor i32 %396, %398, !dbg !1673
  store i32 %xor601.i, i32* %u.i, align 4, !dbg !1673
  %399 = load i32, i32* %r.i, align 4, !dbg !1673
  %400 = load i32*, i32** %s.i, align 8, !dbg !1673
  %arrayidx602.i = getelementptr inbounds i32, i32* %400, i64 25, !dbg !1673
  %401 = load i32, i32* %arrayidx602.i, align 4, !dbg !1673
  %xor603.i = xor i32 %399, %401, !dbg !1673
  store i32 %xor603.i, i32* %t.i, align 4, !dbg !1673
  %402 = load i32, i32* %t.i, align 4, !dbg !1590
  %403 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %402) #7, !dbg !1590, !srcloc !167
  store i32 %403, i32* %ret604.i, align 4, !dbg !1590
  %404 = load i32, i32* %ret604.i, align 4, !dbg !1590
  store i32 %404, i32* %tmp605.i, align 4, !dbg !1590
  %405 = load i32, i32* %tmp605.i, align 4, !dbg !1590
  store i32 %405, i32* %t.i, align 4, !dbg !1673
  %406 = load i32, i32* %u.i, align 4, !dbg !1673
  %shr606.i = lshr i32 %406, 2, !dbg !1673
  %and607.i = and i32 %shr606.i, 63, !dbg !1673
  %idxprom608.i = zext i32 %and607.i to i64, !dbg !1673
  %arrayidx609.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom608.i, !dbg !1673
  %407 = load i32, i32* %arrayidx609.i, align 4, !dbg !1673
  %408 = load i32, i32* %u.i, align 4, !dbg !1673
  %shr610.i = lshr i32 %408, 10, !dbg !1673
  %and611.i = and i32 %shr610.i, 63, !dbg !1673
  %idxprom612.i = zext i32 %and611.i to i64, !dbg !1673
  %arrayidx613.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom612.i, !dbg !1673
  %409 = load i32, i32* %arrayidx613.i, align 4, !dbg !1673
  %xor614.i = xor i32 %407, %409, !dbg !1673
  %410 = load i32, i32* %u.i, align 4, !dbg !1673
  %shr615.i = lshr i32 %410, 18, !dbg !1673
  %and616.i = and i32 %shr615.i, 63, !dbg !1673
  %idxprom617.i = zext i32 %and616.i to i64, !dbg !1673
  %arrayidx618.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom617.i, !dbg !1673
  %411 = load i32, i32* %arrayidx618.i, align 4, !dbg !1673
  %xor619.i = xor i32 %xor614.i, %411, !dbg !1673
  %412 = load i32, i32* %u.i, align 4, !dbg !1673
  %shr620.i = lshr i32 %412, 26, !dbg !1673
  %idxprom622.i = zext i32 %shr620.i to i64, !dbg !1673
  %arrayidx623.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom622.i, !dbg !1673
  %413 = load i32, i32* %arrayidx623.i, align 4, !dbg !1673
  %xor624.i = xor i32 %xor619.i, %413, !dbg !1673
  %414 = load i32, i32* %t.i, align 4, !dbg !1673
  %shr625.i = lshr i32 %414, 2, !dbg !1673
  %and626.i = and i32 %shr625.i, 63, !dbg !1673
  %idxprom627.i = zext i32 %and626.i to i64, !dbg !1673
  %arrayidx628.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom627.i, !dbg !1673
  %415 = load i32, i32* %arrayidx628.i, align 4, !dbg !1673
  %xor629.i = xor i32 %xor624.i, %415, !dbg !1673
  %416 = load i32, i32* %t.i, align 4, !dbg !1673
  %shr630.i = lshr i32 %416, 10, !dbg !1673
  %and631.i = and i32 %shr630.i, 63, !dbg !1673
  %idxprom632.i = zext i32 %and631.i to i64, !dbg !1673
  %arrayidx633.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom632.i, !dbg !1673
  %417 = load i32, i32* %arrayidx633.i, align 4, !dbg !1673
  %xor634.i = xor i32 %xor629.i, %417, !dbg !1673
  %418 = load i32, i32* %t.i, align 4, !dbg !1673
  %shr635.i = lshr i32 %418, 18, !dbg !1673
  %and636.i = and i32 %shr635.i, 63, !dbg !1673
  %idxprom637.i = zext i32 %and636.i to i64, !dbg !1673
  %arrayidx638.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom637.i, !dbg !1673
  %419 = load i32, i32* %arrayidx638.i, align 4, !dbg !1673
  %xor639.i = xor i32 %xor634.i, %419, !dbg !1673
  %420 = load i32, i32* %t.i, align 4, !dbg !1673
  %shr640.i = lshr i32 %420, 26, !dbg !1673
  %idxprom642.i = zext i32 %shr640.i to i64, !dbg !1673
  %arrayidx643.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom642.i, !dbg !1673
  %421 = load i32, i32* %arrayidx643.i, align 4, !dbg !1673
  %xor644.i = xor i32 %xor639.i, %421, !dbg !1673
  %422 = load i32, i32* %l.i, align 4, !dbg !1673
  %xor645.i = xor i32 %422, %xor644.i, !dbg !1673
  store i32 %xor645.i, i32* %l.i, align 4, !dbg !1673
  %423 = load i32, i32* %l.i, align 4, !dbg !1674
  %424 = load i32*, i32** %s.i, align 8, !dbg !1674
  %arrayidx646.i = getelementptr inbounds i32, i32* %424, i64 26, !dbg !1674
  %425 = load i32, i32* %arrayidx646.i, align 4, !dbg !1674
  %xor647.i = xor i32 %423, %425, !dbg !1674
  store i32 %xor647.i, i32* %u.i, align 4, !dbg !1674
  %426 = load i32, i32* %l.i, align 4, !dbg !1674
  %427 = load i32*, i32** %s.i, align 8, !dbg !1674
  %arrayidx648.i = getelementptr inbounds i32, i32* %427, i64 27, !dbg !1674
  %428 = load i32, i32* %arrayidx648.i, align 4, !dbg !1674
  %xor649.i = xor i32 %426, %428, !dbg !1674
  store i32 %xor649.i, i32* %t.i, align 4, !dbg !1674
  %429 = load i32, i32* %t.i, align 4, !dbg !1591
  %430 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %429) #7, !dbg !1591, !srcloc !173
  store i32 %430, i32* %ret650.i, align 4, !dbg !1591
  %431 = load i32, i32* %ret650.i, align 4, !dbg !1591
  store i32 %431, i32* %tmp651.i, align 4, !dbg !1591
  %432 = load i32, i32* %tmp651.i, align 4, !dbg !1591
  store i32 %432, i32* %t.i, align 4, !dbg !1674
  %433 = load i32, i32* %u.i, align 4, !dbg !1674
  %shr652.i = lshr i32 %433, 2, !dbg !1674
  %and653.i = and i32 %shr652.i, 63, !dbg !1674
  %idxprom654.i = zext i32 %and653.i to i64, !dbg !1674
  %arrayidx655.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom654.i, !dbg !1674
  %434 = load i32, i32* %arrayidx655.i, align 4, !dbg !1674
  %435 = load i32, i32* %u.i, align 4, !dbg !1674
  %shr656.i = lshr i32 %435, 10, !dbg !1674
  %and657.i = and i32 %shr656.i, 63, !dbg !1674
  %idxprom658.i = zext i32 %and657.i to i64, !dbg !1674
  %arrayidx659.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom658.i, !dbg !1674
  %436 = load i32, i32* %arrayidx659.i, align 4, !dbg !1674
  %xor660.i = xor i32 %434, %436, !dbg !1674
  %437 = load i32, i32* %u.i, align 4, !dbg !1674
  %shr661.i = lshr i32 %437, 18, !dbg !1674
  %and662.i = and i32 %shr661.i, 63, !dbg !1674
  %idxprom663.i = zext i32 %and662.i to i64, !dbg !1674
  %arrayidx664.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom663.i, !dbg !1674
  %438 = load i32, i32* %arrayidx664.i, align 4, !dbg !1674
  %xor665.i = xor i32 %xor660.i, %438, !dbg !1674
  %439 = load i32, i32* %u.i, align 4, !dbg !1674
  %shr666.i = lshr i32 %439, 26, !dbg !1674
  %idxprom668.i = zext i32 %shr666.i to i64, !dbg !1674
  %arrayidx669.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom668.i, !dbg !1674
  %440 = load i32, i32* %arrayidx669.i, align 4, !dbg !1674
  %xor670.i = xor i32 %xor665.i, %440, !dbg !1674
  %441 = load i32, i32* %t.i, align 4, !dbg !1674
  %shr671.i = lshr i32 %441, 2, !dbg !1674
  %and672.i = and i32 %shr671.i, 63, !dbg !1674
  %idxprom673.i = zext i32 %and672.i to i64, !dbg !1674
  %arrayidx674.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom673.i, !dbg !1674
  %442 = load i32, i32* %arrayidx674.i, align 4, !dbg !1674
  %xor675.i = xor i32 %xor670.i, %442, !dbg !1674
  %443 = load i32, i32* %t.i, align 4, !dbg !1674
  %shr676.i = lshr i32 %443, 10, !dbg !1674
  %and677.i = and i32 %shr676.i, 63, !dbg !1674
  %idxprom678.i = zext i32 %and677.i to i64, !dbg !1674
  %arrayidx679.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom678.i, !dbg !1674
  %444 = load i32, i32* %arrayidx679.i, align 4, !dbg !1674
  %xor680.i = xor i32 %xor675.i, %444, !dbg !1674
  %445 = load i32, i32* %t.i, align 4, !dbg !1674
  %shr681.i = lshr i32 %445, 18, !dbg !1674
  %and682.i = and i32 %shr681.i, 63, !dbg !1674
  %idxprom683.i = zext i32 %and682.i to i64, !dbg !1674
  %arrayidx684.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom683.i, !dbg !1674
  %446 = load i32, i32* %arrayidx684.i, align 4, !dbg !1674
  %xor685.i = xor i32 %xor680.i, %446, !dbg !1674
  %447 = load i32, i32* %t.i, align 4, !dbg !1674
  %shr686.i = lshr i32 %447, 26, !dbg !1674
  %idxprom688.i = zext i32 %shr686.i to i64, !dbg !1674
  %arrayidx689.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom688.i, !dbg !1674
  %448 = load i32, i32* %arrayidx689.i, align 4, !dbg !1674
  %xor690.i = xor i32 %xor685.i, %448, !dbg !1674
  %449 = load i32, i32* %r.i, align 4, !dbg !1674
  %xor691.i = xor i32 %449, %xor690.i, !dbg !1674
  store i32 %xor691.i, i32* %r.i, align 4, !dbg !1674
  %450 = load i32, i32* %r.i, align 4, !dbg !1675
  %451 = load i32*, i32** %s.i, align 8, !dbg !1675
  %arrayidx692.i = getelementptr inbounds i32, i32* %451, i64 28, !dbg !1675
  %452 = load i32, i32* %arrayidx692.i, align 4, !dbg !1675
  %xor693.i = xor i32 %450, %452, !dbg !1675
  store i32 %xor693.i, i32* %u.i, align 4, !dbg !1675
  %453 = load i32, i32* %r.i, align 4, !dbg !1675
  %454 = load i32*, i32** %s.i, align 8, !dbg !1675
  %arrayidx694.i = getelementptr inbounds i32, i32* %454, i64 29, !dbg !1675
  %455 = load i32, i32* %arrayidx694.i, align 4, !dbg !1675
  %xor695.i = xor i32 %453, %455, !dbg !1675
  store i32 %xor695.i, i32* %t.i, align 4, !dbg !1675
  %456 = load i32, i32* %t.i, align 4, !dbg !1592
  %457 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %456) #7, !dbg !1592, !srcloc !179
  store i32 %457, i32* %ret696.i, align 4, !dbg !1592
  %458 = load i32, i32* %ret696.i, align 4, !dbg !1592
  store i32 %458, i32* %tmp697.i, align 4, !dbg !1592
  %459 = load i32, i32* %tmp697.i, align 4, !dbg !1592
  store i32 %459, i32* %t.i, align 4, !dbg !1675
  %460 = load i32, i32* %u.i, align 4, !dbg !1675
  %shr698.i = lshr i32 %460, 2, !dbg !1675
  %and699.i = and i32 %shr698.i, 63, !dbg !1675
  %idxprom700.i = zext i32 %and699.i to i64, !dbg !1675
  %arrayidx701.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom700.i, !dbg !1675
  %461 = load i32, i32* %arrayidx701.i, align 4, !dbg !1675
  %462 = load i32, i32* %u.i, align 4, !dbg !1675
  %shr702.i = lshr i32 %462, 10, !dbg !1675
  %and703.i = and i32 %shr702.i, 63, !dbg !1675
  %idxprom704.i = zext i32 %and703.i to i64, !dbg !1675
  %arrayidx705.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom704.i, !dbg !1675
  %463 = load i32, i32* %arrayidx705.i, align 4, !dbg !1675
  %xor706.i = xor i32 %461, %463, !dbg !1675
  %464 = load i32, i32* %u.i, align 4, !dbg !1675
  %shr707.i = lshr i32 %464, 18, !dbg !1675
  %and708.i = and i32 %shr707.i, 63, !dbg !1675
  %idxprom709.i = zext i32 %and708.i to i64, !dbg !1675
  %arrayidx710.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom709.i, !dbg !1675
  %465 = load i32, i32* %arrayidx710.i, align 4, !dbg !1675
  %xor711.i = xor i32 %xor706.i, %465, !dbg !1675
  %466 = load i32, i32* %u.i, align 4, !dbg !1675
  %shr712.i = lshr i32 %466, 26, !dbg !1675
  %idxprom714.i = zext i32 %shr712.i to i64, !dbg !1675
  %arrayidx715.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom714.i, !dbg !1675
  %467 = load i32, i32* %arrayidx715.i, align 4, !dbg !1675
  %xor716.i = xor i32 %xor711.i, %467, !dbg !1675
  %468 = load i32, i32* %t.i, align 4, !dbg !1675
  %shr717.i = lshr i32 %468, 2, !dbg !1675
  %and718.i = and i32 %shr717.i, 63, !dbg !1675
  %idxprom719.i = zext i32 %and718.i to i64, !dbg !1675
  %arrayidx720.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom719.i, !dbg !1675
  %469 = load i32, i32* %arrayidx720.i, align 4, !dbg !1675
  %xor721.i = xor i32 %xor716.i, %469, !dbg !1675
  %470 = load i32, i32* %t.i, align 4, !dbg !1675
  %shr722.i = lshr i32 %470, 10, !dbg !1675
  %and723.i = and i32 %shr722.i, 63, !dbg !1675
  %idxprom724.i = zext i32 %and723.i to i64, !dbg !1675
  %arrayidx725.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom724.i, !dbg !1675
  %471 = load i32, i32* %arrayidx725.i, align 4, !dbg !1675
  %xor726.i = xor i32 %xor721.i, %471, !dbg !1675
  %472 = load i32, i32* %t.i, align 4, !dbg !1675
  %shr727.i = lshr i32 %472, 18, !dbg !1675
  %and728.i = and i32 %shr727.i, 63, !dbg !1675
  %idxprom729.i = zext i32 %and728.i to i64, !dbg !1675
  %arrayidx730.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom729.i, !dbg !1675
  %473 = load i32, i32* %arrayidx730.i, align 4, !dbg !1675
  %xor731.i = xor i32 %xor726.i, %473, !dbg !1675
  %474 = load i32, i32* %t.i, align 4, !dbg !1675
  %shr732.i = lshr i32 %474, 26, !dbg !1675
  %idxprom734.i = zext i32 %shr732.i to i64, !dbg !1675
  %arrayidx735.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom734.i, !dbg !1675
  %475 = load i32, i32* %arrayidx735.i, align 4, !dbg !1675
  %xor736.i = xor i32 %xor731.i, %475, !dbg !1675
  %476 = load i32, i32* %l.i, align 4, !dbg !1675
  %xor737.i = xor i32 %476, %xor736.i, !dbg !1675
  store i32 %xor737.i, i32* %l.i, align 4, !dbg !1675
  %477 = load i32, i32* %l.i, align 4, !dbg !1676
  %478 = load i32*, i32** %s.i, align 8, !dbg !1676
  %arrayidx738.i = getelementptr inbounds i32, i32* %478, i64 30, !dbg !1676
  %479 = load i32, i32* %arrayidx738.i, align 4, !dbg !1676
  %xor739.i = xor i32 %477, %479, !dbg !1676
  store i32 %xor739.i, i32* %u.i, align 4, !dbg !1676
  %480 = load i32, i32* %l.i, align 4, !dbg !1676
  %481 = load i32*, i32** %s.i, align 8, !dbg !1676
  %arrayidx740.i = getelementptr inbounds i32, i32* %481, i64 31, !dbg !1676
  %482 = load i32, i32* %arrayidx740.i, align 4, !dbg !1676
  %xor741.i = xor i32 %480, %482, !dbg !1676
  store i32 %xor741.i, i32* %t.i, align 4, !dbg !1676
  %483 = load i32, i32* %t.i, align 4, !dbg !1593
  %484 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %483) #7, !dbg !1593, !srcloc !185
  store i32 %484, i32* %ret742.i, align 4, !dbg !1593
  %485 = load i32, i32* %ret742.i, align 4, !dbg !1593
  store i32 %485, i32* %tmp743.i, align 4, !dbg !1593
  %486 = load i32, i32* %tmp743.i, align 4, !dbg !1593
  store i32 %486, i32* %t.i, align 4, !dbg !1676
  %487 = load i32, i32* %u.i, align 4, !dbg !1676
  %shr744.i = lshr i32 %487, 2, !dbg !1676
  %and745.i = and i32 %shr744.i, 63, !dbg !1676
  %idxprom746.i = zext i32 %and745.i to i64, !dbg !1676
  %arrayidx747.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom746.i, !dbg !1676
  %488 = load i32, i32* %arrayidx747.i, align 4, !dbg !1676
  %489 = load i32, i32* %u.i, align 4, !dbg !1676
  %shr748.i = lshr i32 %489, 10, !dbg !1676
  %and749.i = and i32 %shr748.i, 63, !dbg !1676
  %idxprom750.i = zext i32 %and749.i to i64, !dbg !1676
  %arrayidx751.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom750.i, !dbg !1676
  %490 = load i32, i32* %arrayidx751.i, align 4, !dbg !1676
  %xor752.i = xor i32 %488, %490, !dbg !1676
  %491 = load i32, i32* %u.i, align 4, !dbg !1676
  %shr753.i = lshr i32 %491, 18, !dbg !1676
  %and754.i = and i32 %shr753.i, 63, !dbg !1676
  %idxprom755.i = zext i32 %and754.i to i64, !dbg !1676
  %arrayidx756.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom755.i, !dbg !1676
  %492 = load i32, i32* %arrayidx756.i, align 4, !dbg !1676
  %xor757.i = xor i32 %xor752.i, %492, !dbg !1676
  %493 = load i32, i32* %u.i, align 4, !dbg !1676
  %shr758.i = lshr i32 %493, 26, !dbg !1676
  %idxprom760.i = zext i32 %shr758.i to i64, !dbg !1676
  %arrayidx761.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom760.i, !dbg !1676
  %494 = load i32, i32* %arrayidx761.i, align 4, !dbg !1676
  %xor762.i = xor i32 %xor757.i, %494, !dbg !1676
  %495 = load i32, i32* %t.i, align 4, !dbg !1676
  %shr763.i = lshr i32 %495, 2, !dbg !1676
  %and764.i = and i32 %shr763.i, 63, !dbg !1676
  %idxprom765.i = zext i32 %and764.i to i64, !dbg !1676
  %arrayidx766.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom765.i, !dbg !1676
  %496 = load i32, i32* %arrayidx766.i, align 4, !dbg !1676
  %xor767.i = xor i32 %xor762.i, %496, !dbg !1676
  %497 = load i32, i32* %t.i, align 4, !dbg !1676
  %shr768.i = lshr i32 %497, 10, !dbg !1676
  %and769.i = and i32 %shr768.i, 63, !dbg !1676
  %idxprom770.i = zext i32 %and769.i to i64, !dbg !1676
  %arrayidx771.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom770.i, !dbg !1676
  %498 = load i32, i32* %arrayidx771.i, align 4, !dbg !1676
  %xor772.i = xor i32 %xor767.i, %498, !dbg !1676
  %499 = load i32, i32* %t.i, align 4, !dbg !1676
  %shr773.i = lshr i32 %499, 18, !dbg !1676
  %and774.i = and i32 %shr773.i, 63, !dbg !1676
  %idxprom775.i = zext i32 %and774.i to i64, !dbg !1676
  %arrayidx776.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom775.i, !dbg !1676
  %500 = load i32, i32* %arrayidx776.i, align 4, !dbg !1676
  %xor777.i = xor i32 %xor772.i, %500, !dbg !1676
  %501 = load i32, i32* %t.i, align 4, !dbg !1676
  %shr778.i = lshr i32 %501, 26, !dbg !1676
  %idxprom780.i = zext i32 %shr778.i to i64, !dbg !1676
  %arrayidx781.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom780.i, !dbg !1676
  %502 = load i32, i32* %arrayidx781.i, align 4, !dbg !1676
  %xor782.i = xor i32 %xor777.i, %502, !dbg !1676
  %503 = load i32, i32* %r.i, align 4, !dbg !1676
  %xor783.i = xor i32 %503, %xor782.i, !dbg !1676
  store i32 %xor783.i, i32* %r.i, align 4, !dbg !1676
  br label %DES_encrypt1.exit, !dbg !1677

if.else.i:                                        ; preds = %entry
  %504 = load i32, i32* %r.i, align 4, !dbg !1678
  %505 = load i32*, i32** %s.i, align 8, !dbg !1678
  %arrayidx784.i = getelementptr inbounds i32, i32* %505, i64 30, !dbg !1678
  %506 = load i32, i32* %arrayidx784.i, align 4, !dbg !1678
  %xor785.i = xor i32 %504, %506, !dbg !1678
  store i32 %xor785.i, i32* %u.i, align 4, !dbg !1678
  %507 = load i32, i32* %r.i, align 4, !dbg !1678
  %508 = load i32*, i32** %s.i, align 8, !dbg !1678
  %arrayidx786.i = getelementptr inbounds i32, i32* %508, i64 31, !dbg !1678
  %509 = load i32, i32* %arrayidx786.i, align 4, !dbg !1678
  %xor787.i = xor i32 %507, %509, !dbg !1678
  store i32 %xor787.i, i32* %t.i, align 4, !dbg !1678
  %510 = load i32, i32* %t.i, align 4, !dbg !1594
  %511 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %510) #7, !dbg !1594, !srcloc !193
  store i32 %511, i32* %ret788.i, align 4, !dbg !1594
  %512 = load i32, i32* %ret788.i, align 4, !dbg !1594
  store i32 %512, i32* %tmp789.i, align 4, !dbg !1594
  %513 = load i32, i32* %tmp789.i, align 4, !dbg !1594
  store i32 %513, i32* %t.i, align 4, !dbg !1678
  %514 = load i32, i32* %u.i, align 4, !dbg !1678
  %shr790.i = lshr i32 %514, 2, !dbg !1678
  %and791.i = and i32 %shr790.i, 63, !dbg !1678
  %idxprom792.i = zext i32 %and791.i to i64, !dbg !1678
  %arrayidx793.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom792.i, !dbg !1678
  %515 = load i32, i32* %arrayidx793.i, align 4, !dbg !1678
  %516 = load i32, i32* %u.i, align 4, !dbg !1678
  %shr794.i = lshr i32 %516, 10, !dbg !1678
  %and795.i = and i32 %shr794.i, 63, !dbg !1678
  %idxprom796.i = zext i32 %and795.i to i64, !dbg !1678
  %arrayidx797.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom796.i, !dbg !1678
  %517 = load i32, i32* %arrayidx797.i, align 4, !dbg !1678
  %xor798.i = xor i32 %515, %517, !dbg !1678
  %518 = load i32, i32* %u.i, align 4, !dbg !1678
  %shr799.i = lshr i32 %518, 18, !dbg !1678
  %and800.i = and i32 %shr799.i, 63, !dbg !1678
  %idxprom801.i = zext i32 %and800.i to i64, !dbg !1678
  %arrayidx802.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom801.i, !dbg !1678
  %519 = load i32, i32* %arrayidx802.i, align 4, !dbg !1678
  %xor803.i = xor i32 %xor798.i, %519, !dbg !1678
  %520 = load i32, i32* %u.i, align 4, !dbg !1678
  %shr804.i = lshr i32 %520, 26, !dbg !1678
  %idxprom806.i = zext i32 %shr804.i to i64, !dbg !1678
  %arrayidx807.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom806.i, !dbg !1678
  %521 = load i32, i32* %arrayidx807.i, align 4, !dbg !1678
  %xor808.i = xor i32 %xor803.i, %521, !dbg !1678
  %522 = load i32, i32* %t.i, align 4, !dbg !1678
  %shr809.i = lshr i32 %522, 2, !dbg !1678
  %and810.i = and i32 %shr809.i, 63, !dbg !1678
  %idxprom811.i = zext i32 %and810.i to i64, !dbg !1678
  %arrayidx812.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom811.i, !dbg !1678
  %523 = load i32, i32* %arrayidx812.i, align 4, !dbg !1678
  %xor813.i = xor i32 %xor808.i, %523, !dbg !1678
  %524 = load i32, i32* %t.i, align 4, !dbg !1678
  %shr814.i = lshr i32 %524, 10, !dbg !1678
  %and815.i = and i32 %shr814.i, 63, !dbg !1678
  %idxprom816.i = zext i32 %and815.i to i64, !dbg !1678
  %arrayidx817.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom816.i, !dbg !1678
  %525 = load i32, i32* %arrayidx817.i, align 4, !dbg !1678
  %xor818.i = xor i32 %xor813.i, %525, !dbg !1678
  %526 = load i32, i32* %t.i, align 4, !dbg !1678
  %shr819.i = lshr i32 %526, 18, !dbg !1678
  %and820.i = and i32 %shr819.i, 63, !dbg !1678
  %idxprom821.i = zext i32 %and820.i to i64, !dbg !1678
  %arrayidx822.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom821.i, !dbg !1678
  %527 = load i32, i32* %arrayidx822.i, align 4, !dbg !1678
  %xor823.i = xor i32 %xor818.i, %527, !dbg !1678
  %528 = load i32, i32* %t.i, align 4, !dbg !1678
  %shr824.i = lshr i32 %528, 26, !dbg !1678
  %idxprom826.i = zext i32 %shr824.i to i64, !dbg !1678
  %arrayidx827.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom826.i, !dbg !1678
  %529 = load i32, i32* %arrayidx827.i, align 4, !dbg !1678
  %xor828.i = xor i32 %xor823.i, %529, !dbg !1678
  %530 = load i32, i32* %l.i, align 4, !dbg !1678
  %xor829.i = xor i32 %530, %xor828.i, !dbg !1678
  store i32 %xor829.i, i32* %l.i, align 4, !dbg !1678
  %531 = load i32, i32* %l.i, align 4, !dbg !1679
  %532 = load i32*, i32** %s.i, align 8, !dbg !1679
  %arrayidx830.i = getelementptr inbounds i32, i32* %532, i64 28, !dbg !1679
  %533 = load i32, i32* %arrayidx830.i, align 4, !dbg !1679
  %xor831.i = xor i32 %531, %533, !dbg !1679
  store i32 %xor831.i, i32* %u.i, align 4, !dbg !1679
  %534 = load i32, i32* %l.i, align 4, !dbg !1679
  %535 = load i32*, i32** %s.i, align 8, !dbg !1679
  %arrayidx832.i = getelementptr inbounds i32, i32* %535, i64 29, !dbg !1679
  %536 = load i32, i32* %arrayidx832.i, align 4, !dbg !1679
  %xor833.i = xor i32 %534, %536, !dbg !1679
  store i32 %xor833.i, i32* %t.i, align 4, !dbg !1679
  %537 = load i32, i32* %t.i, align 4, !dbg !1595
  %538 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %537) #7, !dbg !1595, !srcloc !199
  store i32 %538, i32* %ret834.i, align 4, !dbg !1595
  %539 = load i32, i32* %ret834.i, align 4, !dbg !1595
  store i32 %539, i32* %tmp835.i, align 4, !dbg !1595
  %540 = load i32, i32* %tmp835.i, align 4, !dbg !1595
  store i32 %540, i32* %t.i, align 4, !dbg !1679
  %541 = load i32, i32* %u.i, align 4, !dbg !1679
  %shr836.i = lshr i32 %541, 2, !dbg !1679
  %and837.i = and i32 %shr836.i, 63, !dbg !1679
  %idxprom838.i = zext i32 %and837.i to i64, !dbg !1679
  %arrayidx839.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom838.i, !dbg !1679
  %542 = load i32, i32* %arrayidx839.i, align 4, !dbg !1679
  %543 = load i32, i32* %u.i, align 4, !dbg !1679
  %shr840.i = lshr i32 %543, 10, !dbg !1679
  %and841.i = and i32 %shr840.i, 63, !dbg !1679
  %idxprom842.i = zext i32 %and841.i to i64, !dbg !1679
  %arrayidx843.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom842.i, !dbg !1679
  %544 = load i32, i32* %arrayidx843.i, align 4, !dbg !1679
  %xor844.i = xor i32 %542, %544, !dbg !1679
  %545 = load i32, i32* %u.i, align 4, !dbg !1679
  %shr845.i = lshr i32 %545, 18, !dbg !1679
  %and846.i = and i32 %shr845.i, 63, !dbg !1679
  %idxprom847.i = zext i32 %and846.i to i64, !dbg !1679
  %arrayidx848.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom847.i, !dbg !1679
  %546 = load i32, i32* %arrayidx848.i, align 4, !dbg !1679
  %xor849.i = xor i32 %xor844.i, %546, !dbg !1679
  %547 = load i32, i32* %u.i, align 4, !dbg !1679
  %shr850.i = lshr i32 %547, 26, !dbg !1679
  %idxprom852.i = zext i32 %shr850.i to i64, !dbg !1679
  %arrayidx853.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom852.i, !dbg !1679
  %548 = load i32, i32* %arrayidx853.i, align 4, !dbg !1679
  %xor854.i = xor i32 %xor849.i, %548, !dbg !1679
  %549 = load i32, i32* %t.i, align 4, !dbg !1679
  %shr855.i = lshr i32 %549, 2, !dbg !1679
  %and856.i = and i32 %shr855.i, 63, !dbg !1679
  %idxprom857.i = zext i32 %and856.i to i64, !dbg !1679
  %arrayidx858.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom857.i, !dbg !1679
  %550 = load i32, i32* %arrayidx858.i, align 4, !dbg !1679
  %xor859.i = xor i32 %xor854.i, %550, !dbg !1679
  %551 = load i32, i32* %t.i, align 4, !dbg !1679
  %shr860.i = lshr i32 %551, 10, !dbg !1679
  %and861.i = and i32 %shr860.i, 63, !dbg !1679
  %idxprom862.i = zext i32 %and861.i to i64, !dbg !1679
  %arrayidx863.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom862.i, !dbg !1679
  %552 = load i32, i32* %arrayidx863.i, align 4, !dbg !1679
  %xor864.i = xor i32 %xor859.i, %552, !dbg !1679
  %553 = load i32, i32* %t.i, align 4, !dbg !1679
  %shr865.i = lshr i32 %553, 18, !dbg !1679
  %and866.i = and i32 %shr865.i, 63, !dbg !1679
  %idxprom867.i = zext i32 %and866.i to i64, !dbg !1679
  %arrayidx868.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom867.i, !dbg !1679
  %554 = load i32, i32* %arrayidx868.i, align 4, !dbg !1679
  %xor869.i = xor i32 %xor864.i, %554, !dbg !1679
  %555 = load i32, i32* %t.i, align 4, !dbg !1679
  %shr870.i = lshr i32 %555, 26, !dbg !1679
  %idxprom872.i = zext i32 %shr870.i to i64, !dbg !1679
  %arrayidx873.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom872.i, !dbg !1679
  %556 = load i32, i32* %arrayidx873.i, align 4, !dbg !1679
  %xor874.i = xor i32 %xor869.i, %556, !dbg !1679
  %557 = load i32, i32* %r.i, align 4, !dbg !1679
  %xor875.i = xor i32 %557, %xor874.i, !dbg !1679
  store i32 %xor875.i, i32* %r.i, align 4, !dbg !1679
  %558 = load i32, i32* %r.i, align 4, !dbg !1680
  %559 = load i32*, i32** %s.i, align 8, !dbg !1680
  %arrayidx876.i = getelementptr inbounds i32, i32* %559, i64 26, !dbg !1680
  %560 = load i32, i32* %arrayidx876.i, align 4, !dbg !1680
  %xor877.i = xor i32 %558, %560, !dbg !1680
  store i32 %xor877.i, i32* %u.i, align 4, !dbg !1680
  %561 = load i32, i32* %r.i, align 4, !dbg !1680
  %562 = load i32*, i32** %s.i, align 8, !dbg !1680
  %arrayidx878.i = getelementptr inbounds i32, i32* %562, i64 27, !dbg !1680
  %563 = load i32, i32* %arrayidx878.i, align 4, !dbg !1680
  %xor879.i = xor i32 %561, %563, !dbg !1680
  store i32 %xor879.i, i32* %t.i, align 4, !dbg !1680
  %564 = load i32, i32* %t.i, align 4, !dbg !1596
  %565 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %564) #7, !dbg !1596, !srcloc !205
  store i32 %565, i32* %ret880.i, align 4, !dbg !1596
  %566 = load i32, i32* %ret880.i, align 4, !dbg !1596
  store i32 %566, i32* %tmp881.i, align 4, !dbg !1596
  %567 = load i32, i32* %tmp881.i, align 4, !dbg !1596
  store i32 %567, i32* %t.i, align 4, !dbg !1680
  %568 = load i32, i32* %u.i, align 4, !dbg !1680
  %shr882.i = lshr i32 %568, 2, !dbg !1680
  %and883.i = and i32 %shr882.i, 63, !dbg !1680
  %idxprom884.i = zext i32 %and883.i to i64, !dbg !1680
  %arrayidx885.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom884.i, !dbg !1680
  %569 = load i32, i32* %arrayidx885.i, align 4, !dbg !1680
  %570 = load i32, i32* %u.i, align 4, !dbg !1680
  %shr886.i = lshr i32 %570, 10, !dbg !1680
  %and887.i = and i32 %shr886.i, 63, !dbg !1680
  %idxprom888.i = zext i32 %and887.i to i64, !dbg !1680
  %arrayidx889.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom888.i, !dbg !1680
  %571 = load i32, i32* %arrayidx889.i, align 4, !dbg !1680
  %xor890.i = xor i32 %569, %571, !dbg !1680
  %572 = load i32, i32* %u.i, align 4, !dbg !1680
  %shr891.i = lshr i32 %572, 18, !dbg !1680
  %and892.i = and i32 %shr891.i, 63, !dbg !1680
  %idxprom893.i = zext i32 %and892.i to i64, !dbg !1680
  %arrayidx894.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom893.i, !dbg !1680
  %573 = load i32, i32* %arrayidx894.i, align 4, !dbg !1680
  %xor895.i = xor i32 %xor890.i, %573, !dbg !1680
  %574 = load i32, i32* %u.i, align 4, !dbg !1680
  %shr896.i = lshr i32 %574, 26, !dbg !1680
  %idxprom898.i = zext i32 %shr896.i to i64, !dbg !1680
  %arrayidx899.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom898.i, !dbg !1680
  %575 = load i32, i32* %arrayidx899.i, align 4, !dbg !1680
  %xor900.i = xor i32 %xor895.i, %575, !dbg !1680
  %576 = load i32, i32* %t.i, align 4, !dbg !1680
  %shr901.i = lshr i32 %576, 2, !dbg !1680
  %and902.i = and i32 %shr901.i, 63, !dbg !1680
  %idxprom903.i = zext i32 %and902.i to i64, !dbg !1680
  %arrayidx904.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom903.i, !dbg !1680
  %577 = load i32, i32* %arrayidx904.i, align 4, !dbg !1680
  %xor905.i = xor i32 %xor900.i, %577, !dbg !1680
  %578 = load i32, i32* %t.i, align 4, !dbg !1680
  %shr906.i = lshr i32 %578, 10, !dbg !1680
  %and907.i = and i32 %shr906.i, 63, !dbg !1680
  %idxprom908.i = zext i32 %and907.i to i64, !dbg !1680
  %arrayidx909.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom908.i, !dbg !1680
  %579 = load i32, i32* %arrayidx909.i, align 4, !dbg !1680
  %xor910.i = xor i32 %xor905.i, %579, !dbg !1680
  %580 = load i32, i32* %t.i, align 4, !dbg !1680
  %shr911.i = lshr i32 %580, 18, !dbg !1680
  %and912.i = and i32 %shr911.i, 63, !dbg !1680
  %idxprom913.i = zext i32 %and912.i to i64, !dbg !1680
  %arrayidx914.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom913.i, !dbg !1680
  %581 = load i32, i32* %arrayidx914.i, align 4, !dbg !1680
  %xor915.i = xor i32 %xor910.i, %581, !dbg !1680
  %582 = load i32, i32* %t.i, align 4, !dbg !1680
  %shr916.i = lshr i32 %582, 26, !dbg !1680
  %idxprom918.i = zext i32 %shr916.i to i64, !dbg !1680
  %arrayidx919.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom918.i, !dbg !1680
  %583 = load i32, i32* %arrayidx919.i, align 4, !dbg !1680
  %xor920.i = xor i32 %xor915.i, %583, !dbg !1680
  %584 = load i32, i32* %l.i, align 4, !dbg !1680
  %xor921.i = xor i32 %584, %xor920.i, !dbg !1680
  store i32 %xor921.i, i32* %l.i, align 4, !dbg !1680
  %585 = load i32, i32* %l.i, align 4, !dbg !1681
  %586 = load i32*, i32** %s.i, align 8, !dbg !1681
  %arrayidx922.i = getelementptr inbounds i32, i32* %586, i64 24, !dbg !1681
  %587 = load i32, i32* %arrayidx922.i, align 4, !dbg !1681
  %xor923.i = xor i32 %585, %587, !dbg !1681
  store i32 %xor923.i, i32* %u.i, align 4, !dbg !1681
  %588 = load i32, i32* %l.i, align 4, !dbg !1681
  %589 = load i32*, i32** %s.i, align 8, !dbg !1681
  %arrayidx924.i = getelementptr inbounds i32, i32* %589, i64 25, !dbg !1681
  %590 = load i32, i32* %arrayidx924.i, align 4, !dbg !1681
  %xor925.i = xor i32 %588, %590, !dbg !1681
  store i32 %xor925.i, i32* %t.i, align 4, !dbg !1681
  %591 = load i32, i32* %t.i, align 4, !dbg !1597
  %592 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %591) #7, !dbg !1597, !srcloc !211
  store i32 %592, i32* %ret926.i, align 4, !dbg !1597
  %593 = load i32, i32* %ret926.i, align 4, !dbg !1597
  store i32 %593, i32* %tmp927.i, align 4, !dbg !1597
  %594 = load i32, i32* %tmp927.i, align 4, !dbg !1597
  store i32 %594, i32* %t.i, align 4, !dbg !1681
  %595 = load i32, i32* %u.i, align 4, !dbg !1681
  %shr928.i = lshr i32 %595, 2, !dbg !1681
  %and929.i = and i32 %shr928.i, 63, !dbg !1681
  %idxprom930.i = zext i32 %and929.i to i64, !dbg !1681
  %arrayidx931.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom930.i, !dbg !1681
  %596 = load i32, i32* %arrayidx931.i, align 4, !dbg !1681
  %597 = load i32, i32* %u.i, align 4, !dbg !1681
  %shr932.i = lshr i32 %597, 10, !dbg !1681
  %and933.i = and i32 %shr932.i, 63, !dbg !1681
  %idxprom934.i = zext i32 %and933.i to i64, !dbg !1681
  %arrayidx935.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom934.i, !dbg !1681
  %598 = load i32, i32* %arrayidx935.i, align 4, !dbg !1681
  %xor936.i = xor i32 %596, %598, !dbg !1681
  %599 = load i32, i32* %u.i, align 4, !dbg !1681
  %shr937.i = lshr i32 %599, 18, !dbg !1681
  %and938.i = and i32 %shr937.i, 63, !dbg !1681
  %idxprom939.i = zext i32 %and938.i to i64, !dbg !1681
  %arrayidx940.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom939.i, !dbg !1681
  %600 = load i32, i32* %arrayidx940.i, align 4, !dbg !1681
  %xor941.i = xor i32 %xor936.i, %600, !dbg !1681
  %601 = load i32, i32* %u.i, align 4, !dbg !1681
  %shr942.i = lshr i32 %601, 26, !dbg !1681
  %idxprom944.i = zext i32 %shr942.i to i64, !dbg !1681
  %arrayidx945.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom944.i, !dbg !1681
  %602 = load i32, i32* %arrayidx945.i, align 4, !dbg !1681
  %xor946.i = xor i32 %xor941.i, %602, !dbg !1681
  %603 = load i32, i32* %t.i, align 4, !dbg !1681
  %shr947.i = lshr i32 %603, 2, !dbg !1681
  %and948.i = and i32 %shr947.i, 63, !dbg !1681
  %idxprom949.i = zext i32 %and948.i to i64, !dbg !1681
  %arrayidx950.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom949.i, !dbg !1681
  %604 = load i32, i32* %arrayidx950.i, align 4, !dbg !1681
  %xor951.i = xor i32 %xor946.i, %604, !dbg !1681
  %605 = load i32, i32* %t.i, align 4, !dbg !1681
  %shr952.i = lshr i32 %605, 10, !dbg !1681
  %and953.i = and i32 %shr952.i, 63, !dbg !1681
  %idxprom954.i = zext i32 %and953.i to i64, !dbg !1681
  %arrayidx955.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom954.i, !dbg !1681
  %606 = load i32, i32* %arrayidx955.i, align 4, !dbg !1681
  %xor956.i = xor i32 %xor951.i, %606, !dbg !1681
  %607 = load i32, i32* %t.i, align 4, !dbg !1681
  %shr957.i = lshr i32 %607, 18, !dbg !1681
  %and958.i = and i32 %shr957.i, 63, !dbg !1681
  %idxprom959.i = zext i32 %and958.i to i64, !dbg !1681
  %arrayidx960.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom959.i, !dbg !1681
  %608 = load i32, i32* %arrayidx960.i, align 4, !dbg !1681
  %xor961.i = xor i32 %xor956.i, %608, !dbg !1681
  %609 = load i32, i32* %t.i, align 4, !dbg !1681
  %shr962.i = lshr i32 %609, 26, !dbg !1681
  %idxprom964.i = zext i32 %shr962.i to i64, !dbg !1681
  %arrayidx965.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom964.i, !dbg !1681
  %610 = load i32, i32* %arrayidx965.i, align 4, !dbg !1681
  %xor966.i = xor i32 %xor961.i, %610, !dbg !1681
  %611 = load i32, i32* %r.i, align 4, !dbg !1681
  %xor967.i = xor i32 %611, %xor966.i, !dbg !1681
  store i32 %xor967.i, i32* %r.i, align 4, !dbg !1681
  %612 = load i32, i32* %r.i, align 4, !dbg !1682
  %613 = load i32*, i32** %s.i, align 8, !dbg !1682
  %arrayidx968.i = getelementptr inbounds i32, i32* %613, i64 22, !dbg !1682
  %614 = load i32, i32* %arrayidx968.i, align 4, !dbg !1682
  %xor969.i = xor i32 %612, %614, !dbg !1682
  store i32 %xor969.i, i32* %u.i, align 4, !dbg !1682
  %615 = load i32, i32* %r.i, align 4, !dbg !1682
  %616 = load i32*, i32** %s.i, align 8, !dbg !1682
  %arrayidx970.i = getelementptr inbounds i32, i32* %616, i64 23, !dbg !1682
  %617 = load i32, i32* %arrayidx970.i, align 4, !dbg !1682
  %xor971.i = xor i32 %615, %617, !dbg !1682
  store i32 %xor971.i, i32* %t.i, align 4, !dbg !1682
  %618 = load i32, i32* %t.i, align 4, !dbg !1598
  %619 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %618) #7, !dbg !1598, !srcloc !217
  store i32 %619, i32* %ret972.i, align 4, !dbg !1598
  %620 = load i32, i32* %ret972.i, align 4, !dbg !1598
  store i32 %620, i32* %tmp973.i, align 4, !dbg !1598
  %621 = load i32, i32* %tmp973.i, align 4, !dbg !1598
  store i32 %621, i32* %t.i, align 4, !dbg !1682
  %622 = load i32, i32* %u.i, align 4, !dbg !1682
  %shr974.i = lshr i32 %622, 2, !dbg !1682
  %and975.i = and i32 %shr974.i, 63, !dbg !1682
  %idxprom976.i = zext i32 %and975.i to i64, !dbg !1682
  %arrayidx977.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom976.i, !dbg !1682
  %623 = load i32, i32* %arrayidx977.i, align 4, !dbg !1682
  %624 = load i32, i32* %u.i, align 4, !dbg !1682
  %shr978.i = lshr i32 %624, 10, !dbg !1682
  %and979.i = and i32 %shr978.i, 63, !dbg !1682
  %idxprom980.i = zext i32 %and979.i to i64, !dbg !1682
  %arrayidx981.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom980.i, !dbg !1682
  %625 = load i32, i32* %arrayidx981.i, align 4, !dbg !1682
  %xor982.i = xor i32 %623, %625, !dbg !1682
  %626 = load i32, i32* %u.i, align 4, !dbg !1682
  %shr983.i = lshr i32 %626, 18, !dbg !1682
  %and984.i = and i32 %shr983.i, 63, !dbg !1682
  %idxprom985.i = zext i32 %and984.i to i64, !dbg !1682
  %arrayidx986.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom985.i, !dbg !1682
  %627 = load i32, i32* %arrayidx986.i, align 4, !dbg !1682
  %xor987.i = xor i32 %xor982.i, %627, !dbg !1682
  %628 = load i32, i32* %u.i, align 4, !dbg !1682
  %shr988.i = lshr i32 %628, 26, !dbg !1682
  %idxprom990.i = zext i32 %shr988.i to i64, !dbg !1682
  %arrayidx991.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom990.i, !dbg !1682
  %629 = load i32, i32* %arrayidx991.i, align 4, !dbg !1682
  %xor992.i = xor i32 %xor987.i, %629, !dbg !1682
  %630 = load i32, i32* %t.i, align 4, !dbg !1682
  %shr993.i = lshr i32 %630, 2, !dbg !1682
  %and994.i = and i32 %shr993.i, 63, !dbg !1682
  %idxprom995.i = zext i32 %and994.i to i64, !dbg !1682
  %arrayidx996.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom995.i, !dbg !1682
  %631 = load i32, i32* %arrayidx996.i, align 4, !dbg !1682
  %xor997.i = xor i32 %xor992.i, %631, !dbg !1682
  %632 = load i32, i32* %t.i, align 4, !dbg !1682
  %shr998.i = lshr i32 %632, 10, !dbg !1682
  %and999.i = and i32 %shr998.i, 63, !dbg !1682
  %idxprom1000.i = zext i32 %and999.i to i64, !dbg !1682
  %arrayidx1001.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1000.i, !dbg !1682
  %633 = load i32, i32* %arrayidx1001.i, align 4, !dbg !1682
  %xor1002.i = xor i32 %xor997.i, %633, !dbg !1682
  %634 = load i32, i32* %t.i, align 4, !dbg !1682
  %shr1003.i = lshr i32 %634, 18, !dbg !1682
  %and1004.i = and i32 %shr1003.i, 63, !dbg !1682
  %idxprom1005.i = zext i32 %and1004.i to i64, !dbg !1682
  %arrayidx1006.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1005.i, !dbg !1682
  %635 = load i32, i32* %arrayidx1006.i, align 4, !dbg !1682
  %xor1007.i = xor i32 %xor1002.i, %635, !dbg !1682
  %636 = load i32, i32* %t.i, align 4, !dbg !1682
  %shr1008.i = lshr i32 %636, 26, !dbg !1682
  %idxprom1010.i = zext i32 %shr1008.i to i64, !dbg !1682
  %arrayidx1011.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1010.i, !dbg !1682
  %637 = load i32, i32* %arrayidx1011.i, align 4, !dbg !1682
  %xor1012.i = xor i32 %xor1007.i, %637, !dbg !1682
  %638 = load i32, i32* %l.i, align 4, !dbg !1682
  %xor1013.i = xor i32 %638, %xor1012.i, !dbg !1682
  store i32 %xor1013.i, i32* %l.i, align 4, !dbg !1682
  %639 = load i32, i32* %l.i, align 4, !dbg !1683
  %640 = load i32*, i32** %s.i, align 8, !dbg !1683
  %arrayidx1014.i = getelementptr inbounds i32, i32* %640, i64 20, !dbg !1683
  %641 = load i32, i32* %arrayidx1014.i, align 4, !dbg !1683
  %xor1015.i = xor i32 %639, %641, !dbg !1683
  store i32 %xor1015.i, i32* %u.i, align 4, !dbg !1683
  %642 = load i32, i32* %l.i, align 4, !dbg !1683
  %643 = load i32*, i32** %s.i, align 8, !dbg !1683
  %arrayidx1016.i = getelementptr inbounds i32, i32* %643, i64 21, !dbg !1683
  %644 = load i32, i32* %arrayidx1016.i, align 4, !dbg !1683
  %xor1017.i = xor i32 %642, %644, !dbg !1683
  store i32 %xor1017.i, i32* %t.i, align 4, !dbg !1683
  %645 = load i32, i32* %t.i, align 4, !dbg !1599
  %646 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %645) #7, !dbg !1599, !srcloc !223
  store i32 %646, i32* %ret1018.i, align 4, !dbg !1599
  %647 = load i32, i32* %ret1018.i, align 4, !dbg !1599
  store i32 %647, i32* %tmp1019.i, align 4, !dbg !1599
  %648 = load i32, i32* %tmp1019.i, align 4, !dbg !1599
  store i32 %648, i32* %t.i, align 4, !dbg !1683
  %649 = load i32, i32* %u.i, align 4, !dbg !1683
  %shr1020.i = lshr i32 %649, 2, !dbg !1683
  %and1021.i = and i32 %shr1020.i, 63, !dbg !1683
  %idxprom1022.i = zext i32 %and1021.i to i64, !dbg !1683
  %arrayidx1023.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1022.i, !dbg !1683
  %650 = load i32, i32* %arrayidx1023.i, align 4, !dbg !1683
  %651 = load i32, i32* %u.i, align 4, !dbg !1683
  %shr1024.i = lshr i32 %651, 10, !dbg !1683
  %and1025.i = and i32 %shr1024.i, 63, !dbg !1683
  %idxprom1026.i = zext i32 %and1025.i to i64, !dbg !1683
  %arrayidx1027.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1026.i, !dbg !1683
  %652 = load i32, i32* %arrayidx1027.i, align 4, !dbg !1683
  %xor1028.i = xor i32 %650, %652, !dbg !1683
  %653 = load i32, i32* %u.i, align 4, !dbg !1683
  %shr1029.i = lshr i32 %653, 18, !dbg !1683
  %and1030.i = and i32 %shr1029.i, 63, !dbg !1683
  %idxprom1031.i = zext i32 %and1030.i to i64, !dbg !1683
  %arrayidx1032.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1031.i, !dbg !1683
  %654 = load i32, i32* %arrayidx1032.i, align 4, !dbg !1683
  %xor1033.i = xor i32 %xor1028.i, %654, !dbg !1683
  %655 = load i32, i32* %u.i, align 4, !dbg !1683
  %shr1034.i = lshr i32 %655, 26, !dbg !1683
  %idxprom1036.i = zext i32 %shr1034.i to i64, !dbg !1683
  %arrayidx1037.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1036.i, !dbg !1683
  %656 = load i32, i32* %arrayidx1037.i, align 4, !dbg !1683
  %xor1038.i = xor i32 %xor1033.i, %656, !dbg !1683
  %657 = load i32, i32* %t.i, align 4, !dbg !1683
  %shr1039.i = lshr i32 %657, 2, !dbg !1683
  %and1040.i = and i32 %shr1039.i, 63, !dbg !1683
  %idxprom1041.i = zext i32 %and1040.i to i64, !dbg !1683
  %arrayidx1042.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1041.i, !dbg !1683
  %658 = load i32, i32* %arrayidx1042.i, align 4, !dbg !1683
  %xor1043.i = xor i32 %xor1038.i, %658, !dbg !1683
  %659 = load i32, i32* %t.i, align 4, !dbg !1683
  %shr1044.i = lshr i32 %659, 10, !dbg !1683
  %and1045.i = and i32 %shr1044.i, 63, !dbg !1683
  %idxprom1046.i = zext i32 %and1045.i to i64, !dbg !1683
  %arrayidx1047.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1046.i, !dbg !1683
  %660 = load i32, i32* %arrayidx1047.i, align 4, !dbg !1683
  %xor1048.i = xor i32 %xor1043.i, %660, !dbg !1683
  %661 = load i32, i32* %t.i, align 4, !dbg !1683
  %shr1049.i = lshr i32 %661, 18, !dbg !1683
  %and1050.i = and i32 %shr1049.i, 63, !dbg !1683
  %idxprom1051.i = zext i32 %and1050.i to i64, !dbg !1683
  %arrayidx1052.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1051.i, !dbg !1683
  %662 = load i32, i32* %arrayidx1052.i, align 4, !dbg !1683
  %xor1053.i = xor i32 %xor1048.i, %662, !dbg !1683
  %663 = load i32, i32* %t.i, align 4, !dbg !1683
  %shr1054.i = lshr i32 %663, 26, !dbg !1683
  %idxprom1056.i = zext i32 %shr1054.i to i64, !dbg !1683
  %arrayidx1057.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1056.i, !dbg !1683
  %664 = load i32, i32* %arrayidx1057.i, align 4, !dbg !1683
  %xor1058.i = xor i32 %xor1053.i, %664, !dbg !1683
  %665 = load i32, i32* %r.i, align 4, !dbg !1683
  %xor1059.i = xor i32 %665, %xor1058.i, !dbg !1683
  store i32 %xor1059.i, i32* %r.i, align 4, !dbg !1683
  %666 = load i32, i32* %r.i, align 4, !dbg !1684
  %667 = load i32*, i32** %s.i, align 8, !dbg !1684
  %arrayidx1060.i = getelementptr inbounds i32, i32* %667, i64 18, !dbg !1684
  %668 = load i32, i32* %arrayidx1060.i, align 4, !dbg !1684
  %xor1061.i = xor i32 %666, %668, !dbg !1684
  store i32 %xor1061.i, i32* %u.i, align 4, !dbg !1684
  %669 = load i32, i32* %r.i, align 4, !dbg !1684
  %670 = load i32*, i32** %s.i, align 8, !dbg !1684
  %arrayidx1062.i = getelementptr inbounds i32, i32* %670, i64 19, !dbg !1684
  %671 = load i32, i32* %arrayidx1062.i, align 4, !dbg !1684
  %xor1063.i = xor i32 %669, %671, !dbg !1684
  store i32 %xor1063.i, i32* %t.i, align 4, !dbg !1684
  %672 = load i32, i32* %t.i, align 4, !dbg !1600
  %673 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %672) #7, !dbg !1600, !srcloc !229
  store i32 %673, i32* %ret1064.i, align 4, !dbg !1600
  %674 = load i32, i32* %ret1064.i, align 4, !dbg !1600
  store i32 %674, i32* %tmp1065.i, align 4, !dbg !1600
  %675 = load i32, i32* %tmp1065.i, align 4, !dbg !1600
  store i32 %675, i32* %t.i, align 4, !dbg !1684
  %676 = load i32, i32* %u.i, align 4, !dbg !1684
  %shr1066.i = lshr i32 %676, 2, !dbg !1684
  %and1067.i = and i32 %shr1066.i, 63, !dbg !1684
  %idxprom1068.i = zext i32 %and1067.i to i64, !dbg !1684
  %arrayidx1069.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1068.i, !dbg !1684
  %677 = load i32, i32* %arrayidx1069.i, align 4, !dbg !1684
  %678 = load i32, i32* %u.i, align 4, !dbg !1684
  %shr1070.i = lshr i32 %678, 10, !dbg !1684
  %and1071.i = and i32 %shr1070.i, 63, !dbg !1684
  %idxprom1072.i = zext i32 %and1071.i to i64, !dbg !1684
  %arrayidx1073.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1072.i, !dbg !1684
  %679 = load i32, i32* %arrayidx1073.i, align 4, !dbg !1684
  %xor1074.i = xor i32 %677, %679, !dbg !1684
  %680 = load i32, i32* %u.i, align 4, !dbg !1684
  %shr1075.i = lshr i32 %680, 18, !dbg !1684
  %and1076.i = and i32 %shr1075.i, 63, !dbg !1684
  %idxprom1077.i = zext i32 %and1076.i to i64, !dbg !1684
  %arrayidx1078.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1077.i, !dbg !1684
  %681 = load i32, i32* %arrayidx1078.i, align 4, !dbg !1684
  %xor1079.i = xor i32 %xor1074.i, %681, !dbg !1684
  %682 = load i32, i32* %u.i, align 4, !dbg !1684
  %shr1080.i = lshr i32 %682, 26, !dbg !1684
  %idxprom1082.i = zext i32 %shr1080.i to i64, !dbg !1684
  %arrayidx1083.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1082.i, !dbg !1684
  %683 = load i32, i32* %arrayidx1083.i, align 4, !dbg !1684
  %xor1084.i = xor i32 %xor1079.i, %683, !dbg !1684
  %684 = load i32, i32* %t.i, align 4, !dbg !1684
  %shr1085.i = lshr i32 %684, 2, !dbg !1684
  %and1086.i = and i32 %shr1085.i, 63, !dbg !1684
  %idxprom1087.i = zext i32 %and1086.i to i64, !dbg !1684
  %arrayidx1088.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1087.i, !dbg !1684
  %685 = load i32, i32* %arrayidx1088.i, align 4, !dbg !1684
  %xor1089.i = xor i32 %xor1084.i, %685, !dbg !1684
  %686 = load i32, i32* %t.i, align 4, !dbg !1684
  %shr1090.i = lshr i32 %686, 10, !dbg !1684
  %and1091.i = and i32 %shr1090.i, 63, !dbg !1684
  %idxprom1092.i = zext i32 %and1091.i to i64, !dbg !1684
  %arrayidx1093.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1092.i, !dbg !1684
  %687 = load i32, i32* %arrayidx1093.i, align 4, !dbg !1684
  %xor1094.i = xor i32 %xor1089.i, %687, !dbg !1684
  %688 = load i32, i32* %t.i, align 4, !dbg !1684
  %shr1095.i = lshr i32 %688, 18, !dbg !1684
  %and1096.i = and i32 %shr1095.i, 63, !dbg !1684
  %idxprom1097.i = zext i32 %and1096.i to i64, !dbg !1684
  %arrayidx1098.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1097.i, !dbg !1684
  %689 = load i32, i32* %arrayidx1098.i, align 4, !dbg !1684
  %xor1099.i = xor i32 %xor1094.i, %689, !dbg !1684
  %690 = load i32, i32* %t.i, align 4, !dbg !1684
  %shr1100.i = lshr i32 %690, 26, !dbg !1684
  %idxprom1102.i = zext i32 %shr1100.i to i64, !dbg !1684
  %arrayidx1103.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1102.i, !dbg !1684
  %691 = load i32, i32* %arrayidx1103.i, align 4, !dbg !1684
  %xor1104.i = xor i32 %xor1099.i, %691, !dbg !1684
  %692 = load i32, i32* %l.i, align 4, !dbg !1684
  %xor1105.i = xor i32 %692, %xor1104.i, !dbg !1684
  store i32 %xor1105.i, i32* %l.i, align 4, !dbg !1684
  %693 = load i32, i32* %l.i, align 4, !dbg !1685
  %694 = load i32*, i32** %s.i, align 8, !dbg !1685
  %arrayidx1106.i = getelementptr inbounds i32, i32* %694, i64 16, !dbg !1685
  %695 = load i32, i32* %arrayidx1106.i, align 4, !dbg !1685
  %xor1107.i = xor i32 %693, %695, !dbg !1685
  store i32 %xor1107.i, i32* %u.i, align 4, !dbg !1685
  %696 = load i32, i32* %l.i, align 4, !dbg !1685
  %697 = load i32*, i32** %s.i, align 8, !dbg !1685
  %arrayidx1108.i = getelementptr inbounds i32, i32* %697, i64 17, !dbg !1685
  %698 = load i32, i32* %arrayidx1108.i, align 4, !dbg !1685
  %xor1109.i = xor i32 %696, %698, !dbg !1685
  store i32 %xor1109.i, i32* %t.i, align 4, !dbg !1685
  %699 = load i32, i32* %t.i, align 4, !dbg !1601
  %700 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %699) #7, !dbg !1601, !srcloc !235
  store i32 %700, i32* %ret1110.i, align 4, !dbg !1601
  %701 = load i32, i32* %ret1110.i, align 4, !dbg !1601
  store i32 %701, i32* %tmp1111.i, align 4, !dbg !1601
  %702 = load i32, i32* %tmp1111.i, align 4, !dbg !1601
  store i32 %702, i32* %t.i, align 4, !dbg !1685
  %703 = load i32, i32* %u.i, align 4, !dbg !1685
  %shr1112.i = lshr i32 %703, 2, !dbg !1685
  %and1113.i = and i32 %shr1112.i, 63, !dbg !1685
  %idxprom1114.i = zext i32 %and1113.i to i64, !dbg !1685
  %arrayidx1115.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1114.i, !dbg !1685
  %704 = load i32, i32* %arrayidx1115.i, align 4, !dbg !1685
  %705 = load i32, i32* %u.i, align 4, !dbg !1685
  %shr1116.i = lshr i32 %705, 10, !dbg !1685
  %and1117.i = and i32 %shr1116.i, 63, !dbg !1685
  %idxprom1118.i = zext i32 %and1117.i to i64, !dbg !1685
  %arrayidx1119.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1118.i, !dbg !1685
  %706 = load i32, i32* %arrayidx1119.i, align 4, !dbg !1685
  %xor1120.i = xor i32 %704, %706, !dbg !1685
  %707 = load i32, i32* %u.i, align 4, !dbg !1685
  %shr1121.i = lshr i32 %707, 18, !dbg !1685
  %and1122.i = and i32 %shr1121.i, 63, !dbg !1685
  %idxprom1123.i = zext i32 %and1122.i to i64, !dbg !1685
  %arrayidx1124.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1123.i, !dbg !1685
  %708 = load i32, i32* %arrayidx1124.i, align 4, !dbg !1685
  %xor1125.i = xor i32 %xor1120.i, %708, !dbg !1685
  %709 = load i32, i32* %u.i, align 4, !dbg !1685
  %shr1126.i = lshr i32 %709, 26, !dbg !1685
  %idxprom1128.i = zext i32 %shr1126.i to i64, !dbg !1685
  %arrayidx1129.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1128.i, !dbg !1685
  %710 = load i32, i32* %arrayidx1129.i, align 4, !dbg !1685
  %xor1130.i = xor i32 %xor1125.i, %710, !dbg !1685
  %711 = load i32, i32* %t.i, align 4, !dbg !1685
  %shr1131.i = lshr i32 %711, 2, !dbg !1685
  %and1132.i = and i32 %shr1131.i, 63, !dbg !1685
  %idxprom1133.i = zext i32 %and1132.i to i64, !dbg !1685
  %arrayidx1134.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1133.i, !dbg !1685
  %712 = load i32, i32* %arrayidx1134.i, align 4, !dbg !1685
  %xor1135.i = xor i32 %xor1130.i, %712, !dbg !1685
  %713 = load i32, i32* %t.i, align 4, !dbg !1685
  %shr1136.i = lshr i32 %713, 10, !dbg !1685
  %and1137.i = and i32 %shr1136.i, 63, !dbg !1685
  %idxprom1138.i = zext i32 %and1137.i to i64, !dbg !1685
  %arrayidx1139.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1138.i, !dbg !1685
  %714 = load i32, i32* %arrayidx1139.i, align 4, !dbg !1685
  %xor1140.i = xor i32 %xor1135.i, %714, !dbg !1685
  %715 = load i32, i32* %t.i, align 4, !dbg !1685
  %shr1141.i = lshr i32 %715, 18, !dbg !1685
  %and1142.i = and i32 %shr1141.i, 63, !dbg !1685
  %idxprom1143.i = zext i32 %and1142.i to i64, !dbg !1685
  %arrayidx1144.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1143.i, !dbg !1685
  %716 = load i32, i32* %arrayidx1144.i, align 4, !dbg !1685
  %xor1145.i = xor i32 %xor1140.i, %716, !dbg !1685
  %717 = load i32, i32* %t.i, align 4, !dbg !1685
  %shr1146.i = lshr i32 %717, 26, !dbg !1685
  %idxprom1148.i = zext i32 %shr1146.i to i64, !dbg !1685
  %arrayidx1149.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1148.i, !dbg !1685
  %718 = load i32, i32* %arrayidx1149.i, align 4, !dbg !1685
  %xor1150.i = xor i32 %xor1145.i, %718, !dbg !1685
  %719 = load i32, i32* %r.i, align 4, !dbg !1685
  %xor1151.i = xor i32 %719, %xor1150.i, !dbg !1685
  store i32 %xor1151.i, i32* %r.i, align 4, !dbg !1685
  %720 = load i32, i32* %r.i, align 4, !dbg !1686
  %721 = load i32*, i32** %s.i, align 8, !dbg !1686
  %arrayidx1152.i = getelementptr inbounds i32, i32* %721, i64 14, !dbg !1686
  %722 = load i32, i32* %arrayidx1152.i, align 4, !dbg !1686
  %xor1153.i = xor i32 %720, %722, !dbg !1686
  store i32 %xor1153.i, i32* %u.i, align 4, !dbg !1686
  %723 = load i32, i32* %r.i, align 4, !dbg !1686
  %724 = load i32*, i32** %s.i, align 8, !dbg !1686
  %arrayidx1154.i = getelementptr inbounds i32, i32* %724, i64 15, !dbg !1686
  %725 = load i32, i32* %arrayidx1154.i, align 4, !dbg !1686
  %xor1155.i = xor i32 %723, %725, !dbg !1686
  store i32 %xor1155.i, i32* %t.i, align 4, !dbg !1686
  %726 = load i32, i32* %t.i, align 4, !dbg !1602
  %727 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %726) #7, !dbg !1602, !srcloc !241
  store i32 %727, i32* %ret1156.i, align 4, !dbg !1602
  %728 = load i32, i32* %ret1156.i, align 4, !dbg !1602
  store i32 %728, i32* %tmp1157.i, align 4, !dbg !1602
  %729 = load i32, i32* %tmp1157.i, align 4, !dbg !1602
  store i32 %729, i32* %t.i, align 4, !dbg !1686
  %730 = load i32, i32* %u.i, align 4, !dbg !1686
  %shr1158.i = lshr i32 %730, 2, !dbg !1686
  %and1159.i = and i32 %shr1158.i, 63, !dbg !1686
  %idxprom1160.i = zext i32 %and1159.i to i64, !dbg !1686
  %arrayidx1161.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1160.i, !dbg !1686
  %731 = load i32, i32* %arrayidx1161.i, align 4, !dbg !1686
  %732 = load i32, i32* %u.i, align 4, !dbg !1686
  %shr1162.i = lshr i32 %732, 10, !dbg !1686
  %and1163.i = and i32 %shr1162.i, 63, !dbg !1686
  %idxprom1164.i = zext i32 %and1163.i to i64, !dbg !1686
  %arrayidx1165.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1164.i, !dbg !1686
  %733 = load i32, i32* %arrayidx1165.i, align 4, !dbg !1686
  %xor1166.i = xor i32 %731, %733, !dbg !1686
  %734 = load i32, i32* %u.i, align 4, !dbg !1686
  %shr1167.i = lshr i32 %734, 18, !dbg !1686
  %and1168.i = and i32 %shr1167.i, 63, !dbg !1686
  %idxprom1169.i = zext i32 %and1168.i to i64, !dbg !1686
  %arrayidx1170.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1169.i, !dbg !1686
  %735 = load i32, i32* %arrayidx1170.i, align 4, !dbg !1686
  %xor1171.i = xor i32 %xor1166.i, %735, !dbg !1686
  %736 = load i32, i32* %u.i, align 4, !dbg !1686
  %shr1172.i = lshr i32 %736, 26, !dbg !1686
  %idxprom1174.i = zext i32 %shr1172.i to i64, !dbg !1686
  %arrayidx1175.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1174.i, !dbg !1686
  %737 = load i32, i32* %arrayidx1175.i, align 4, !dbg !1686
  %xor1176.i = xor i32 %xor1171.i, %737, !dbg !1686
  %738 = load i32, i32* %t.i, align 4, !dbg !1686
  %shr1177.i = lshr i32 %738, 2, !dbg !1686
  %and1178.i = and i32 %shr1177.i, 63, !dbg !1686
  %idxprom1179.i = zext i32 %and1178.i to i64, !dbg !1686
  %arrayidx1180.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1179.i, !dbg !1686
  %739 = load i32, i32* %arrayidx1180.i, align 4, !dbg !1686
  %xor1181.i = xor i32 %xor1176.i, %739, !dbg !1686
  %740 = load i32, i32* %t.i, align 4, !dbg !1686
  %shr1182.i = lshr i32 %740, 10, !dbg !1686
  %and1183.i = and i32 %shr1182.i, 63, !dbg !1686
  %idxprom1184.i = zext i32 %and1183.i to i64, !dbg !1686
  %arrayidx1185.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1184.i, !dbg !1686
  %741 = load i32, i32* %arrayidx1185.i, align 4, !dbg !1686
  %xor1186.i = xor i32 %xor1181.i, %741, !dbg !1686
  %742 = load i32, i32* %t.i, align 4, !dbg !1686
  %shr1187.i = lshr i32 %742, 18, !dbg !1686
  %and1188.i = and i32 %shr1187.i, 63, !dbg !1686
  %idxprom1189.i = zext i32 %and1188.i to i64, !dbg !1686
  %arrayidx1190.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1189.i, !dbg !1686
  %743 = load i32, i32* %arrayidx1190.i, align 4, !dbg !1686
  %xor1191.i = xor i32 %xor1186.i, %743, !dbg !1686
  %744 = load i32, i32* %t.i, align 4, !dbg !1686
  %shr1192.i = lshr i32 %744, 26, !dbg !1686
  %idxprom1194.i = zext i32 %shr1192.i to i64, !dbg !1686
  %arrayidx1195.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1194.i, !dbg !1686
  %745 = load i32, i32* %arrayidx1195.i, align 4, !dbg !1686
  %xor1196.i = xor i32 %xor1191.i, %745, !dbg !1686
  %746 = load i32, i32* %l.i, align 4, !dbg !1686
  %xor1197.i = xor i32 %746, %xor1196.i, !dbg !1686
  store i32 %xor1197.i, i32* %l.i, align 4, !dbg !1686
  %747 = load i32, i32* %l.i, align 4, !dbg !1687
  %748 = load i32*, i32** %s.i, align 8, !dbg !1687
  %arrayidx1198.i = getelementptr inbounds i32, i32* %748, i64 12, !dbg !1687
  %749 = load i32, i32* %arrayidx1198.i, align 4, !dbg !1687
  %xor1199.i = xor i32 %747, %749, !dbg !1687
  store i32 %xor1199.i, i32* %u.i, align 4, !dbg !1687
  %750 = load i32, i32* %l.i, align 4, !dbg !1687
  %751 = load i32*, i32** %s.i, align 8, !dbg !1687
  %arrayidx1200.i = getelementptr inbounds i32, i32* %751, i64 13, !dbg !1687
  %752 = load i32, i32* %arrayidx1200.i, align 4, !dbg !1687
  %xor1201.i = xor i32 %750, %752, !dbg !1687
  store i32 %xor1201.i, i32* %t.i, align 4, !dbg !1687
  %753 = load i32, i32* %t.i, align 4, !dbg !1603
  %754 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %753) #7, !dbg !1603, !srcloc !247
  store i32 %754, i32* %ret1202.i, align 4, !dbg !1603
  %755 = load i32, i32* %ret1202.i, align 4, !dbg !1603
  store i32 %755, i32* %tmp1203.i, align 4, !dbg !1603
  %756 = load i32, i32* %tmp1203.i, align 4, !dbg !1603
  store i32 %756, i32* %t.i, align 4, !dbg !1687
  %757 = load i32, i32* %u.i, align 4, !dbg !1687
  %shr1204.i = lshr i32 %757, 2, !dbg !1687
  %and1205.i = and i32 %shr1204.i, 63, !dbg !1687
  %idxprom1206.i = zext i32 %and1205.i to i64, !dbg !1687
  %arrayidx1207.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1206.i, !dbg !1687
  %758 = load i32, i32* %arrayidx1207.i, align 4, !dbg !1687
  %759 = load i32, i32* %u.i, align 4, !dbg !1687
  %shr1208.i = lshr i32 %759, 10, !dbg !1687
  %and1209.i = and i32 %shr1208.i, 63, !dbg !1687
  %idxprom1210.i = zext i32 %and1209.i to i64, !dbg !1687
  %arrayidx1211.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1210.i, !dbg !1687
  %760 = load i32, i32* %arrayidx1211.i, align 4, !dbg !1687
  %xor1212.i = xor i32 %758, %760, !dbg !1687
  %761 = load i32, i32* %u.i, align 4, !dbg !1687
  %shr1213.i = lshr i32 %761, 18, !dbg !1687
  %and1214.i = and i32 %shr1213.i, 63, !dbg !1687
  %idxprom1215.i = zext i32 %and1214.i to i64, !dbg !1687
  %arrayidx1216.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1215.i, !dbg !1687
  %762 = load i32, i32* %arrayidx1216.i, align 4, !dbg !1687
  %xor1217.i = xor i32 %xor1212.i, %762, !dbg !1687
  %763 = load i32, i32* %u.i, align 4, !dbg !1687
  %shr1218.i = lshr i32 %763, 26, !dbg !1687
  %idxprom1220.i = zext i32 %shr1218.i to i64, !dbg !1687
  %arrayidx1221.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1220.i, !dbg !1687
  %764 = load i32, i32* %arrayidx1221.i, align 4, !dbg !1687
  %xor1222.i = xor i32 %xor1217.i, %764, !dbg !1687
  %765 = load i32, i32* %t.i, align 4, !dbg !1687
  %shr1223.i = lshr i32 %765, 2, !dbg !1687
  %and1224.i = and i32 %shr1223.i, 63, !dbg !1687
  %idxprom1225.i = zext i32 %and1224.i to i64, !dbg !1687
  %arrayidx1226.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1225.i, !dbg !1687
  %766 = load i32, i32* %arrayidx1226.i, align 4, !dbg !1687
  %xor1227.i = xor i32 %xor1222.i, %766, !dbg !1687
  %767 = load i32, i32* %t.i, align 4, !dbg !1687
  %shr1228.i = lshr i32 %767, 10, !dbg !1687
  %and1229.i = and i32 %shr1228.i, 63, !dbg !1687
  %idxprom1230.i = zext i32 %and1229.i to i64, !dbg !1687
  %arrayidx1231.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1230.i, !dbg !1687
  %768 = load i32, i32* %arrayidx1231.i, align 4, !dbg !1687
  %xor1232.i = xor i32 %xor1227.i, %768, !dbg !1687
  %769 = load i32, i32* %t.i, align 4, !dbg !1687
  %shr1233.i = lshr i32 %769, 18, !dbg !1687
  %and1234.i = and i32 %shr1233.i, 63, !dbg !1687
  %idxprom1235.i = zext i32 %and1234.i to i64, !dbg !1687
  %arrayidx1236.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1235.i, !dbg !1687
  %770 = load i32, i32* %arrayidx1236.i, align 4, !dbg !1687
  %xor1237.i = xor i32 %xor1232.i, %770, !dbg !1687
  %771 = load i32, i32* %t.i, align 4, !dbg !1687
  %shr1238.i = lshr i32 %771, 26, !dbg !1687
  %idxprom1240.i = zext i32 %shr1238.i to i64, !dbg !1687
  %arrayidx1241.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1240.i, !dbg !1687
  %772 = load i32, i32* %arrayidx1241.i, align 4, !dbg !1687
  %xor1242.i = xor i32 %xor1237.i, %772, !dbg !1687
  %773 = load i32, i32* %r.i, align 4, !dbg !1687
  %xor1243.i = xor i32 %773, %xor1242.i, !dbg !1687
  store i32 %xor1243.i, i32* %r.i, align 4, !dbg !1687
  %774 = load i32, i32* %r.i, align 4, !dbg !1688
  %775 = load i32*, i32** %s.i, align 8, !dbg !1688
  %arrayidx1244.i = getelementptr inbounds i32, i32* %775, i64 10, !dbg !1688
  %776 = load i32, i32* %arrayidx1244.i, align 4, !dbg !1688
  %xor1245.i = xor i32 %774, %776, !dbg !1688
  store i32 %xor1245.i, i32* %u.i, align 4, !dbg !1688
  %777 = load i32, i32* %r.i, align 4, !dbg !1688
  %778 = load i32*, i32** %s.i, align 8, !dbg !1688
  %arrayidx1246.i = getelementptr inbounds i32, i32* %778, i64 11, !dbg !1688
  %779 = load i32, i32* %arrayidx1246.i, align 4, !dbg !1688
  %xor1247.i = xor i32 %777, %779, !dbg !1688
  store i32 %xor1247.i, i32* %t.i, align 4, !dbg !1688
  %780 = load i32, i32* %t.i, align 4, !dbg !1604
  %781 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %780) #7, !dbg !1604, !srcloc !253
  store i32 %781, i32* %ret1248.i, align 4, !dbg !1604
  %782 = load i32, i32* %ret1248.i, align 4, !dbg !1604
  store i32 %782, i32* %tmp1249.i, align 4, !dbg !1604
  %783 = load i32, i32* %tmp1249.i, align 4, !dbg !1604
  store i32 %783, i32* %t.i, align 4, !dbg !1688
  %784 = load i32, i32* %u.i, align 4, !dbg !1688
  %shr1250.i = lshr i32 %784, 2, !dbg !1688
  %and1251.i = and i32 %shr1250.i, 63, !dbg !1688
  %idxprom1252.i = zext i32 %and1251.i to i64, !dbg !1688
  %arrayidx1253.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1252.i, !dbg !1688
  %785 = load i32, i32* %arrayidx1253.i, align 4, !dbg !1688
  %786 = load i32, i32* %u.i, align 4, !dbg !1688
  %shr1254.i = lshr i32 %786, 10, !dbg !1688
  %and1255.i = and i32 %shr1254.i, 63, !dbg !1688
  %idxprom1256.i = zext i32 %and1255.i to i64, !dbg !1688
  %arrayidx1257.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1256.i, !dbg !1688
  %787 = load i32, i32* %arrayidx1257.i, align 4, !dbg !1688
  %xor1258.i = xor i32 %785, %787, !dbg !1688
  %788 = load i32, i32* %u.i, align 4, !dbg !1688
  %shr1259.i = lshr i32 %788, 18, !dbg !1688
  %and1260.i = and i32 %shr1259.i, 63, !dbg !1688
  %idxprom1261.i = zext i32 %and1260.i to i64, !dbg !1688
  %arrayidx1262.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1261.i, !dbg !1688
  %789 = load i32, i32* %arrayidx1262.i, align 4, !dbg !1688
  %xor1263.i = xor i32 %xor1258.i, %789, !dbg !1688
  %790 = load i32, i32* %u.i, align 4, !dbg !1688
  %shr1264.i = lshr i32 %790, 26, !dbg !1688
  %idxprom1266.i = zext i32 %shr1264.i to i64, !dbg !1688
  %arrayidx1267.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1266.i, !dbg !1688
  %791 = load i32, i32* %arrayidx1267.i, align 4, !dbg !1688
  %xor1268.i = xor i32 %xor1263.i, %791, !dbg !1688
  %792 = load i32, i32* %t.i, align 4, !dbg !1688
  %shr1269.i = lshr i32 %792, 2, !dbg !1688
  %and1270.i = and i32 %shr1269.i, 63, !dbg !1688
  %idxprom1271.i = zext i32 %and1270.i to i64, !dbg !1688
  %arrayidx1272.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1271.i, !dbg !1688
  %793 = load i32, i32* %arrayidx1272.i, align 4, !dbg !1688
  %xor1273.i = xor i32 %xor1268.i, %793, !dbg !1688
  %794 = load i32, i32* %t.i, align 4, !dbg !1688
  %shr1274.i = lshr i32 %794, 10, !dbg !1688
  %and1275.i = and i32 %shr1274.i, 63, !dbg !1688
  %idxprom1276.i = zext i32 %and1275.i to i64, !dbg !1688
  %arrayidx1277.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1276.i, !dbg !1688
  %795 = load i32, i32* %arrayidx1277.i, align 4, !dbg !1688
  %xor1278.i = xor i32 %xor1273.i, %795, !dbg !1688
  %796 = load i32, i32* %t.i, align 4, !dbg !1688
  %shr1279.i = lshr i32 %796, 18, !dbg !1688
  %and1280.i = and i32 %shr1279.i, 63, !dbg !1688
  %idxprom1281.i = zext i32 %and1280.i to i64, !dbg !1688
  %arrayidx1282.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1281.i, !dbg !1688
  %797 = load i32, i32* %arrayidx1282.i, align 4, !dbg !1688
  %xor1283.i = xor i32 %xor1278.i, %797, !dbg !1688
  %798 = load i32, i32* %t.i, align 4, !dbg !1688
  %shr1284.i = lshr i32 %798, 26, !dbg !1688
  %idxprom1286.i = zext i32 %shr1284.i to i64, !dbg !1688
  %arrayidx1287.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1286.i, !dbg !1688
  %799 = load i32, i32* %arrayidx1287.i, align 4, !dbg !1688
  %xor1288.i = xor i32 %xor1283.i, %799, !dbg !1688
  %800 = load i32, i32* %l.i, align 4, !dbg !1688
  %xor1289.i = xor i32 %800, %xor1288.i, !dbg !1688
  store i32 %xor1289.i, i32* %l.i, align 4, !dbg !1688
  %801 = load i32, i32* %l.i, align 4, !dbg !1689
  %802 = load i32*, i32** %s.i, align 8, !dbg !1689
  %arrayidx1290.i = getelementptr inbounds i32, i32* %802, i64 8, !dbg !1689
  %803 = load i32, i32* %arrayidx1290.i, align 4, !dbg !1689
  %xor1291.i = xor i32 %801, %803, !dbg !1689
  store i32 %xor1291.i, i32* %u.i, align 4, !dbg !1689
  %804 = load i32, i32* %l.i, align 4, !dbg !1689
  %805 = load i32*, i32** %s.i, align 8, !dbg !1689
  %arrayidx1292.i = getelementptr inbounds i32, i32* %805, i64 9, !dbg !1689
  %806 = load i32, i32* %arrayidx1292.i, align 4, !dbg !1689
  %xor1293.i = xor i32 %804, %806, !dbg !1689
  store i32 %xor1293.i, i32* %t.i, align 4, !dbg !1689
  %807 = load i32, i32* %t.i, align 4, !dbg !1605
  %808 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %807) #7, !dbg !1605, !srcloc !259
  store i32 %808, i32* %ret1294.i, align 4, !dbg !1605
  %809 = load i32, i32* %ret1294.i, align 4, !dbg !1605
  store i32 %809, i32* %tmp1295.i, align 4, !dbg !1605
  %810 = load i32, i32* %tmp1295.i, align 4, !dbg !1605
  store i32 %810, i32* %t.i, align 4, !dbg !1689
  %811 = load i32, i32* %u.i, align 4, !dbg !1689
  %shr1296.i = lshr i32 %811, 2, !dbg !1689
  %and1297.i = and i32 %shr1296.i, 63, !dbg !1689
  %idxprom1298.i = zext i32 %and1297.i to i64, !dbg !1689
  %arrayidx1299.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1298.i, !dbg !1689
  %812 = load i32, i32* %arrayidx1299.i, align 4, !dbg !1689
  %813 = load i32, i32* %u.i, align 4, !dbg !1689
  %shr1300.i = lshr i32 %813, 10, !dbg !1689
  %and1301.i = and i32 %shr1300.i, 63, !dbg !1689
  %idxprom1302.i = zext i32 %and1301.i to i64, !dbg !1689
  %arrayidx1303.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1302.i, !dbg !1689
  %814 = load i32, i32* %arrayidx1303.i, align 4, !dbg !1689
  %xor1304.i = xor i32 %812, %814, !dbg !1689
  %815 = load i32, i32* %u.i, align 4, !dbg !1689
  %shr1305.i = lshr i32 %815, 18, !dbg !1689
  %and1306.i = and i32 %shr1305.i, 63, !dbg !1689
  %idxprom1307.i = zext i32 %and1306.i to i64, !dbg !1689
  %arrayidx1308.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1307.i, !dbg !1689
  %816 = load i32, i32* %arrayidx1308.i, align 4, !dbg !1689
  %xor1309.i = xor i32 %xor1304.i, %816, !dbg !1689
  %817 = load i32, i32* %u.i, align 4, !dbg !1689
  %shr1310.i = lshr i32 %817, 26, !dbg !1689
  %idxprom1312.i = zext i32 %shr1310.i to i64, !dbg !1689
  %arrayidx1313.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1312.i, !dbg !1689
  %818 = load i32, i32* %arrayidx1313.i, align 4, !dbg !1689
  %xor1314.i = xor i32 %xor1309.i, %818, !dbg !1689
  %819 = load i32, i32* %t.i, align 4, !dbg !1689
  %shr1315.i = lshr i32 %819, 2, !dbg !1689
  %and1316.i = and i32 %shr1315.i, 63, !dbg !1689
  %idxprom1317.i = zext i32 %and1316.i to i64, !dbg !1689
  %arrayidx1318.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1317.i, !dbg !1689
  %820 = load i32, i32* %arrayidx1318.i, align 4, !dbg !1689
  %xor1319.i = xor i32 %xor1314.i, %820, !dbg !1689
  %821 = load i32, i32* %t.i, align 4, !dbg !1689
  %shr1320.i = lshr i32 %821, 10, !dbg !1689
  %and1321.i = and i32 %shr1320.i, 63, !dbg !1689
  %idxprom1322.i = zext i32 %and1321.i to i64, !dbg !1689
  %arrayidx1323.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1322.i, !dbg !1689
  %822 = load i32, i32* %arrayidx1323.i, align 4, !dbg !1689
  %xor1324.i = xor i32 %xor1319.i, %822, !dbg !1689
  %823 = load i32, i32* %t.i, align 4, !dbg !1689
  %shr1325.i = lshr i32 %823, 18, !dbg !1689
  %and1326.i = and i32 %shr1325.i, 63, !dbg !1689
  %idxprom1327.i = zext i32 %and1326.i to i64, !dbg !1689
  %arrayidx1328.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1327.i, !dbg !1689
  %824 = load i32, i32* %arrayidx1328.i, align 4, !dbg !1689
  %xor1329.i = xor i32 %xor1324.i, %824, !dbg !1689
  %825 = load i32, i32* %t.i, align 4, !dbg !1689
  %shr1330.i = lshr i32 %825, 26, !dbg !1689
  %idxprom1332.i = zext i32 %shr1330.i to i64, !dbg !1689
  %arrayidx1333.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1332.i, !dbg !1689
  %826 = load i32, i32* %arrayidx1333.i, align 4, !dbg !1689
  %xor1334.i = xor i32 %xor1329.i, %826, !dbg !1689
  %827 = load i32, i32* %r.i, align 4, !dbg !1689
  %xor1335.i = xor i32 %827, %xor1334.i, !dbg !1689
  store i32 %xor1335.i, i32* %r.i, align 4, !dbg !1689
  %828 = load i32, i32* %r.i, align 4, !dbg !1690
  %829 = load i32*, i32** %s.i, align 8, !dbg !1690
  %arrayidx1336.i = getelementptr inbounds i32, i32* %829, i64 6, !dbg !1690
  %830 = load i32, i32* %arrayidx1336.i, align 4, !dbg !1690
  %xor1337.i = xor i32 %828, %830, !dbg !1690
  store i32 %xor1337.i, i32* %u.i, align 4, !dbg !1690
  %831 = load i32, i32* %r.i, align 4, !dbg !1690
  %832 = load i32*, i32** %s.i, align 8, !dbg !1690
  %arrayidx1338.i = getelementptr inbounds i32, i32* %832, i64 7, !dbg !1690
  %833 = load i32, i32* %arrayidx1338.i, align 4, !dbg !1690
  %xor1339.i = xor i32 %831, %833, !dbg !1690
  store i32 %xor1339.i, i32* %t.i, align 4, !dbg !1690
  %834 = load i32, i32* %t.i, align 4, !dbg !1606
  %835 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %834) #7, !dbg !1606, !srcloc !265
  store i32 %835, i32* %ret1340.i, align 4, !dbg !1606
  %836 = load i32, i32* %ret1340.i, align 4, !dbg !1606
  store i32 %836, i32* %tmp1341.i, align 4, !dbg !1606
  %837 = load i32, i32* %tmp1341.i, align 4, !dbg !1606
  store i32 %837, i32* %t.i, align 4, !dbg !1690
  %838 = load i32, i32* %u.i, align 4, !dbg !1690
  %shr1342.i = lshr i32 %838, 2, !dbg !1690
  %and1343.i = and i32 %shr1342.i, 63, !dbg !1690
  %idxprom1344.i = zext i32 %and1343.i to i64, !dbg !1690
  %arrayidx1345.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1344.i, !dbg !1690
  %839 = load i32, i32* %arrayidx1345.i, align 4, !dbg !1690
  %840 = load i32, i32* %u.i, align 4, !dbg !1690
  %shr1346.i = lshr i32 %840, 10, !dbg !1690
  %and1347.i = and i32 %shr1346.i, 63, !dbg !1690
  %idxprom1348.i = zext i32 %and1347.i to i64, !dbg !1690
  %arrayidx1349.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1348.i, !dbg !1690
  %841 = load i32, i32* %arrayidx1349.i, align 4, !dbg !1690
  %xor1350.i = xor i32 %839, %841, !dbg !1690
  %842 = load i32, i32* %u.i, align 4, !dbg !1690
  %shr1351.i = lshr i32 %842, 18, !dbg !1690
  %and1352.i = and i32 %shr1351.i, 63, !dbg !1690
  %idxprom1353.i = zext i32 %and1352.i to i64, !dbg !1690
  %arrayidx1354.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1353.i, !dbg !1690
  %843 = load i32, i32* %arrayidx1354.i, align 4, !dbg !1690
  %xor1355.i = xor i32 %xor1350.i, %843, !dbg !1690
  %844 = load i32, i32* %u.i, align 4, !dbg !1690
  %shr1356.i = lshr i32 %844, 26, !dbg !1690
  %idxprom1358.i = zext i32 %shr1356.i to i64, !dbg !1690
  %arrayidx1359.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1358.i, !dbg !1690
  %845 = load i32, i32* %arrayidx1359.i, align 4, !dbg !1690
  %xor1360.i = xor i32 %xor1355.i, %845, !dbg !1690
  %846 = load i32, i32* %t.i, align 4, !dbg !1690
  %shr1361.i = lshr i32 %846, 2, !dbg !1690
  %and1362.i = and i32 %shr1361.i, 63, !dbg !1690
  %idxprom1363.i = zext i32 %and1362.i to i64, !dbg !1690
  %arrayidx1364.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1363.i, !dbg !1690
  %847 = load i32, i32* %arrayidx1364.i, align 4, !dbg !1690
  %xor1365.i = xor i32 %xor1360.i, %847, !dbg !1690
  %848 = load i32, i32* %t.i, align 4, !dbg !1690
  %shr1366.i = lshr i32 %848, 10, !dbg !1690
  %and1367.i = and i32 %shr1366.i, 63, !dbg !1690
  %idxprom1368.i = zext i32 %and1367.i to i64, !dbg !1690
  %arrayidx1369.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1368.i, !dbg !1690
  %849 = load i32, i32* %arrayidx1369.i, align 4, !dbg !1690
  %xor1370.i = xor i32 %xor1365.i, %849, !dbg !1690
  %850 = load i32, i32* %t.i, align 4, !dbg !1690
  %shr1371.i = lshr i32 %850, 18, !dbg !1690
  %and1372.i = and i32 %shr1371.i, 63, !dbg !1690
  %idxprom1373.i = zext i32 %and1372.i to i64, !dbg !1690
  %arrayidx1374.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1373.i, !dbg !1690
  %851 = load i32, i32* %arrayidx1374.i, align 4, !dbg !1690
  %xor1375.i = xor i32 %xor1370.i, %851, !dbg !1690
  %852 = load i32, i32* %t.i, align 4, !dbg !1690
  %shr1376.i = lshr i32 %852, 26, !dbg !1690
  %idxprom1378.i = zext i32 %shr1376.i to i64, !dbg !1690
  %arrayidx1379.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1378.i, !dbg !1690
  %853 = load i32, i32* %arrayidx1379.i, align 4, !dbg !1690
  %xor1380.i = xor i32 %xor1375.i, %853, !dbg !1690
  %854 = load i32, i32* %l.i, align 4, !dbg !1690
  %xor1381.i = xor i32 %854, %xor1380.i, !dbg !1690
  store i32 %xor1381.i, i32* %l.i, align 4, !dbg !1690
  %855 = load i32, i32* %l.i, align 4, !dbg !1691
  %856 = load i32*, i32** %s.i, align 8, !dbg !1691
  %arrayidx1382.i = getelementptr inbounds i32, i32* %856, i64 4, !dbg !1691
  %857 = load i32, i32* %arrayidx1382.i, align 4, !dbg !1691
  %xor1383.i = xor i32 %855, %857, !dbg !1691
  store i32 %xor1383.i, i32* %u.i, align 4, !dbg !1691
  %858 = load i32, i32* %l.i, align 4, !dbg !1691
  %859 = load i32*, i32** %s.i, align 8, !dbg !1691
  %arrayidx1384.i = getelementptr inbounds i32, i32* %859, i64 5, !dbg !1691
  %860 = load i32, i32* %arrayidx1384.i, align 4, !dbg !1691
  %xor1385.i = xor i32 %858, %860, !dbg !1691
  store i32 %xor1385.i, i32* %t.i, align 4, !dbg !1691
  %861 = load i32, i32* %t.i, align 4, !dbg !1607
  %862 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %861) #7, !dbg !1607, !srcloc !271
  store i32 %862, i32* %ret1386.i, align 4, !dbg !1607
  %863 = load i32, i32* %ret1386.i, align 4, !dbg !1607
  store i32 %863, i32* %tmp1387.i, align 4, !dbg !1607
  %864 = load i32, i32* %tmp1387.i, align 4, !dbg !1607
  store i32 %864, i32* %t.i, align 4, !dbg !1691
  %865 = load i32, i32* %u.i, align 4, !dbg !1691
  %shr1388.i = lshr i32 %865, 2, !dbg !1691
  %and1389.i = and i32 %shr1388.i, 63, !dbg !1691
  %idxprom1390.i = zext i32 %and1389.i to i64, !dbg !1691
  %arrayidx1391.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1390.i, !dbg !1691
  %866 = load i32, i32* %arrayidx1391.i, align 4, !dbg !1691
  %867 = load i32, i32* %u.i, align 4, !dbg !1691
  %shr1392.i = lshr i32 %867, 10, !dbg !1691
  %and1393.i = and i32 %shr1392.i, 63, !dbg !1691
  %idxprom1394.i = zext i32 %and1393.i to i64, !dbg !1691
  %arrayidx1395.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1394.i, !dbg !1691
  %868 = load i32, i32* %arrayidx1395.i, align 4, !dbg !1691
  %xor1396.i = xor i32 %866, %868, !dbg !1691
  %869 = load i32, i32* %u.i, align 4, !dbg !1691
  %shr1397.i = lshr i32 %869, 18, !dbg !1691
  %and1398.i = and i32 %shr1397.i, 63, !dbg !1691
  %idxprom1399.i = zext i32 %and1398.i to i64, !dbg !1691
  %arrayidx1400.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1399.i, !dbg !1691
  %870 = load i32, i32* %arrayidx1400.i, align 4, !dbg !1691
  %xor1401.i = xor i32 %xor1396.i, %870, !dbg !1691
  %871 = load i32, i32* %u.i, align 4, !dbg !1691
  %shr1402.i = lshr i32 %871, 26, !dbg !1691
  %idxprom1404.i = zext i32 %shr1402.i to i64, !dbg !1691
  %arrayidx1405.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1404.i, !dbg !1691
  %872 = load i32, i32* %arrayidx1405.i, align 4, !dbg !1691
  %xor1406.i = xor i32 %xor1401.i, %872, !dbg !1691
  %873 = load i32, i32* %t.i, align 4, !dbg !1691
  %shr1407.i = lshr i32 %873, 2, !dbg !1691
  %and1408.i = and i32 %shr1407.i, 63, !dbg !1691
  %idxprom1409.i = zext i32 %and1408.i to i64, !dbg !1691
  %arrayidx1410.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1409.i, !dbg !1691
  %874 = load i32, i32* %arrayidx1410.i, align 4, !dbg !1691
  %xor1411.i = xor i32 %xor1406.i, %874, !dbg !1691
  %875 = load i32, i32* %t.i, align 4, !dbg !1691
  %shr1412.i = lshr i32 %875, 10, !dbg !1691
  %and1413.i = and i32 %shr1412.i, 63, !dbg !1691
  %idxprom1414.i = zext i32 %and1413.i to i64, !dbg !1691
  %arrayidx1415.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1414.i, !dbg !1691
  %876 = load i32, i32* %arrayidx1415.i, align 4, !dbg !1691
  %xor1416.i = xor i32 %xor1411.i, %876, !dbg !1691
  %877 = load i32, i32* %t.i, align 4, !dbg !1691
  %shr1417.i = lshr i32 %877, 18, !dbg !1691
  %and1418.i = and i32 %shr1417.i, 63, !dbg !1691
  %idxprom1419.i = zext i32 %and1418.i to i64, !dbg !1691
  %arrayidx1420.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1419.i, !dbg !1691
  %878 = load i32, i32* %arrayidx1420.i, align 4, !dbg !1691
  %xor1421.i = xor i32 %xor1416.i, %878, !dbg !1691
  %879 = load i32, i32* %t.i, align 4, !dbg !1691
  %shr1422.i = lshr i32 %879, 26, !dbg !1691
  %idxprom1424.i = zext i32 %shr1422.i to i64, !dbg !1691
  %arrayidx1425.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1424.i, !dbg !1691
  %880 = load i32, i32* %arrayidx1425.i, align 4, !dbg !1691
  %xor1426.i = xor i32 %xor1421.i, %880, !dbg !1691
  %881 = load i32, i32* %r.i, align 4, !dbg !1691
  %xor1427.i = xor i32 %881, %xor1426.i, !dbg !1691
  store i32 %xor1427.i, i32* %r.i, align 4, !dbg !1691
  %882 = load i32, i32* %r.i, align 4, !dbg !1692
  %883 = load i32*, i32** %s.i, align 8, !dbg !1692
  %arrayidx1428.i = getelementptr inbounds i32, i32* %883, i64 2, !dbg !1692
  %884 = load i32, i32* %arrayidx1428.i, align 4, !dbg !1692
  %xor1429.i = xor i32 %882, %884, !dbg !1692
  store i32 %xor1429.i, i32* %u.i, align 4, !dbg !1692
  %885 = load i32, i32* %r.i, align 4, !dbg !1692
  %886 = load i32*, i32** %s.i, align 8, !dbg !1692
  %arrayidx1430.i = getelementptr inbounds i32, i32* %886, i64 3, !dbg !1692
  %887 = load i32, i32* %arrayidx1430.i, align 4, !dbg !1692
  %xor1431.i = xor i32 %885, %887, !dbg !1692
  store i32 %xor1431.i, i32* %t.i, align 4, !dbg !1692
  %888 = load i32, i32* %t.i, align 4, !dbg !1608
  %889 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %888) #7, !dbg !1608, !srcloc !277
  store i32 %889, i32* %ret1432.i, align 4, !dbg !1608
  %890 = load i32, i32* %ret1432.i, align 4, !dbg !1608
  store i32 %890, i32* %tmp1433.i, align 4, !dbg !1608
  %891 = load i32, i32* %tmp1433.i, align 4, !dbg !1608
  store i32 %891, i32* %t.i, align 4, !dbg !1692
  %892 = load i32, i32* %u.i, align 4, !dbg !1692
  %shr1434.i = lshr i32 %892, 2, !dbg !1692
  %and1435.i = and i32 %shr1434.i, 63, !dbg !1692
  %idxprom1436.i = zext i32 %and1435.i to i64, !dbg !1692
  %arrayidx1437.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1436.i, !dbg !1692
  %893 = load i32, i32* %arrayidx1437.i, align 4, !dbg !1692
  %894 = load i32, i32* %u.i, align 4, !dbg !1692
  %shr1438.i = lshr i32 %894, 10, !dbg !1692
  %and1439.i = and i32 %shr1438.i, 63, !dbg !1692
  %idxprom1440.i = zext i32 %and1439.i to i64, !dbg !1692
  %arrayidx1441.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1440.i, !dbg !1692
  %895 = load i32, i32* %arrayidx1441.i, align 4, !dbg !1692
  %xor1442.i = xor i32 %893, %895, !dbg !1692
  %896 = load i32, i32* %u.i, align 4, !dbg !1692
  %shr1443.i = lshr i32 %896, 18, !dbg !1692
  %and1444.i = and i32 %shr1443.i, 63, !dbg !1692
  %idxprom1445.i = zext i32 %and1444.i to i64, !dbg !1692
  %arrayidx1446.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1445.i, !dbg !1692
  %897 = load i32, i32* %arrayidx1446.i, align 4, !dbg !1692
  %xor1447.i = xor i32 %xor1442.i, %897, !dbg !1692
  %898 = load i32, i32* %u.i, align 4, !dbg !1692
  %shr1448.i = lshr i32 %898, 26, !dbg !1692
  %idxprom1450.i = zext i32 %shr1448.i to i64, !dbg !1692
  %arrayidx1451.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1450.i, !dbg !1692
  %899 = load i32, i32* %arrayidx1451.i, align 4, !dbg !1692
  %xor1452.i = xor i32 %xor1447.i, %899, !dbg !1692
  %900 = load i32, i32* %t.i, align 4, !dbg !1692
  %shr1453.i = lshr i32 %900, 2, !dbg !1692
  %and1454.i = and i32 %shr1453.i, 63, !dbg !1692
  %idxprom1455.i = zext i32 %and1454.i to i64, !dbg !1692
  %arrayidx1456.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1455.i, !dbg !1692
  %901 = load i32, i32* %arrayidx1456.i, align 4, !dbg !1692
  %xor1457.i = xor i32 %xor1452.i, %901, !dbg !1692
  %902 = load i32, i32* %t.i, align 4, !dbg !1692
  %shr1458.i = lshr i32 %902, 10, !dbg !1692
  %and1459.i = and i32 %shr1458.i, 63, !dbg !1692
  %idxprom1460.i = zext i32 %and1459.i to i64, !dbg !1692
  %arrayidx1461.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1460.i, !dbg !1692
  %903 = load i32, i32* %arrayidx1461.i, align 4, !dbg !1692
  %xor1462.i = xor i32 %xor1457.i, %903, !dbg !1692
  %904 = load i32, i32* %t.i, align 4, !dbg !1692
  %shr1463.i = lshr i32 %904, 18, !dbg !1692
  %and1464.i = and i32 %shr1463.i, 63, !dbg !1692
  %idxprom1465.i = zext i32 %and1464.i to i64, !dbg !1692
  %arrayidx1466.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1465.i, !dbg !1692
  %905 = load i32, i32* %arrayidx1466.i, align 4, !dbg !1692
  %xor1467.i = xor i32 %xor1462.i, %905, !dbg !1692
  %906 = load i32, i32* %t.i, align 4, !dbg !1692
  %shr1468.i = lshr i32 %906, 26, !dbg !1692
  %idxprom1470.i = zext i32 %shr1468.i to i64, !dbg !1692
  %arrayidx1471.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1470.i, !dbg !1692
  %907 = load i32, i32* %arrayidx1471.i, align 4, !dbg !1692
  %xor1472.i = xor i32 %xor1467.i, %907, !dbg !1692
  %908 = load i32, i32* %l.i, align 4, !dbg !1692
  %xor1473.i = xor i32 %908, %xor1472.i, !dbg !1692
  store i32 %xor1473.i, i32* %l.i, align 4, !dbg !1692
  %909 = load i32, i32* %l.i, align 4, !dbg !1693
  %910 = load i32*, i32** %s.i, align 8, !dbg !1693
  %911 = load i32, i32* %910, align 4, !dbg !1693
  %xor1475.i = xor i32 %909, %911, !dbg !1693
  store i32 %xor1475.i, i32* %u.i, align 4, !dbg !1693
  %912 = load i32, i32* %l.i, align 4, !dbg !1693
  %913 = load i32*, i32** %s.i, align 8, !dbg !1693
  %arrayidx1476.i = getelementptr inbounds i32, i32* %913, i64 1, !dbg !1693
  %914 = load i32, i32* %arrayidx1476.i, align 4, !dbg !1693
  %xor1477.i = xor i32 %912, %914, !dbg !1693
  store i32 %xor1477.i, i32* %t.i, align 4, !dbg !1693
  %915 = load i32, i32* %t.i, align 4, !dbg !1609
  %916 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %915) #7, !dbg !1609, !srcloc !283
  store i32 %916, i32* %ret1478.i, align 4, !dbg !1609
  %917 = load i32, i32* %ret1478.i, align 4, !dbg !1609
  store i32 %917, i32* %tmp1479.i, align 4, !dbg !1609
  %918 = load i32, i32* %tmp1479.i, align 4, !dbg !1609
  store i32 %918, i32* %t.i, align 4, !dbg !1693
  %919 = load i32, i32* %u.i, align 4, !dbg !1693
  %shr1480.i = lshr i32 %919, 2, !dbg !1693
  %and1481.i = and i32 %shr1480.i, 63, !dbg !1693
  %idxprom1482.i = zext i32 %and1481.i to i64, !dbg !1693
  %arrayidx1483.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1482.i, !dbg !1693
  %920 = load i32, i32* %arrayidx1483.i, align 4, !dbg !1693
  %921 = load i32, i32* %u.i, align 4, !dbg !1693
  %shr1484.i = lshr i32 %921, 10, !dbg !1693
  %and1485.i = and i32 %shr1484.i, 63, !dbg !1693
  %idxprom1486.i = zext i32 %and1485.i to i64, !dbg !1693
  %arrayidx1487.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1486.i, !dbg !1693
  %922 = load i32, i32* %arrayidx1487.i, align 4, !dbg !1693
  %xor1488.i = xor i32 %920, %922, !dbg !1693
  %923 = load i32, i32* %u.i, align 4, !dbg !1693
  %shr1489.i = lshr i32 %923, 18, !dbg !1693
  %and1490.i = and i32 %shr1489.i, 63, !dbg !1693
  %idxprom1491.i = zext i32 %and1490.i to i64, !dbg !1693
  %arrayidx1492.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1491.i, !dbg !1693
  %924 = load i32, i32* %arrayidx1492.i, align 4, !dbg !1693
  %xor1493.i = xor i32 %xor1488.i, %924, !dbg !1693
  %925 = load i32, i32* %u.i, align 4, !dbg !1693
  %shr1494.i = lshr i32 %925, 26, !dbg !1693
  %idxprom1496.i = zext i32 %shr1494.i to i64, !dbg !1693
  %arrayidx1497.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1496.i, !dbg !1693
  %926 = load i32, i32* %arrayidx1497.i, align 4, !dbg !1693
  %xor1498.i = xor i32 %xor1493.i, %926, !dbg !1693
  %927 = load i32, i32* %t.i, align 4, !dbg !1693
  %shr1499.i = lshr i32 %927, 2, !dbg !1693
  %and1500.i = and i32 %shr1499.i, 63, !dbg !1693
  %idxprom1501.i = zext i32 %and1500.i to i64, !dbg !1693
  %arrayidx1502.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1501.i, !dbg !1693
  %928 = load i32, i32* %arrayidx1502.i, align 4, !dbg !1693
  %xor1503.i = xor i32 %xor1498.i, %928, !dbg !1693
  %929 = load i32, i32* %t.i, align 4, !dbg !1693
  %shr1504.i = lshr i32 %929, 10, !dbg !1693
  %and1505.i = and i32 %shr1504.i, 63, !dbg !1693
  %idxprom1506.i = zext i32 %and1505.i to i64, !dbg !1693
  %arrayidx1507.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1506.i, !dbg !1693
  %930 = load i32, i32* %arrayidx1507.i, align 4, !dbg !1693
  %xor1508.i = xor i32 %xor1503.i, %930, !dbg !1693
  %931 = load i32, i32* %t.i, align 4, !dbg !1693
  %shr1509.i = lshr i32 %931, 18, !dbg !1693
  %and1510.i = and i32 %shr1509.i, 63, !dbg !1693
  %idxprom1511.i = zext i32 %and1510.i to i64, !dbg !1693
  %arrayidx1512.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1511.i, !dbg !1693
  %932 = load i32, i32* %arrayidx1512.i, align 4, !dbg !1693
  %xor1513.i = xor i32 %xor1508.i, %932, !dbg !1693
  %933 = load i32, i32* %t.i, align 4, !dbg !1693
  %shr1514.i = lshr i32 %933, 26, !dbg !1693
  %idxprom1516.i = zext i32 %shr1514.i to i64, !dbg !1693
  %arrayidx1517.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1516.i, !dbg !1693
  %934 = load i32, i32* %arrayidx1517.i, align 4, !dbg !1693
  %xor1518.i = xor i32 %xor1513.i, %934, !dbg !1693
  %935 = load i32, i32* %r.i, align 4, !dbg !1693
  %xor1519.i = xor i32 %935, %xor1518.i, !dbg !1693
  store i32 %xor1519.i, i32* %r.i, align 4, !dbg !1693
  br label %DES_encrypt1.exit

DES_encrypt1.exit:                                ; preds = %if.then.i, %if.else.i
  %936 = load i32, i32* %l.i, align 4, !dbg !1610
  %937 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %936) #7, !dbg !1610, !srcloc !287
  store i32 %937, i32* %ret1520.i, align 4, !dbg !1610
  %938 = load i32, i32* %ret1520.i, align 4, !dbg !1610
  store i32 %938, i32* %tmp1521.i, align 4, !dbg !1610
  %939 = load i32, i32* %tmp1521.i, align 4, !dbg !1610
  %conv1522.i = zext i32 %939 to i64, !dbg !1694
  %and1523.i = and i64 %conv1522.i, 4294967295, !dbg !1695
  %conv1524.i = trunc i64 %and1523.i to i32, !dbg !1694
  store i32 %conv1524.i, i32* %l.i, align 4, !dbg !1696
  %940 = load i32, i32* %r.i, align 4, !dbg !1611
  %941 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %940) #7, !dbg !1611, !srcloc !294
  store i32 %941, i32* %ret1525.i, align 4, !dbg !1611
  %942 = load i32, i32* %ret1525.i, align 4, !dbg !1611
  store i32 %942, i32* %tmp1526.i, align 4, !dbg !1611
  %943 = load i32, i32* %tmp1526.i, align 4, !dbg !1611
  %conv1527.i = zext i32 %943 to i64, !dbg !1697
  %and1528.i = and i64 %conv1527.i, 4294967295, !dbg !1698
  %conv1529.i = trunc i64 %and1528.i to i32, !dbg !1697
  store i32 %conv1529.i, i32* %r.i, align 4, !dbg !1699
  %944 = load i32, i32* %r.i, align 4, !dbg !1612
  %shr1531.i = lshr i32 %944, 1, !dbg !1612
  %945 = load i32, i32* %l.i, align 4, !dbg !1612
  %xor1532.i = xor i32 %shr1531.i, %945, !dbg !1612
  %conv1533.i = zext i32 %xor1532.i to i64, !dbg !1612
  %and1534.i = and i64 %conv1533.i, 1431655765, !dbg !1612
  %conv1535.i = trunc i64 %and1534.i to i32, !dbg !1612
  store i32 %conv1535.i, i32* %tt1530.i, align 4, !dbg !1612
  %946 = load i32, i32* %tt1530.i, align 4, !dbg !1612
  %947 = load i32, i32* %l.i, align 4, !dbg !1612
  %xor1536.i = xor i32 %947, %946, !dbg !1612
  store i32 %xor1536.i, i32* %l.i, align 4, !dbg !1612
  %948 = load i32, i32* %tt1530.i, align 4, !dbg !1612
  %shl1537.i = shl i32 %948, 1, !dbg !1612
  %949 = load i32, i32* %r.i, align 4, !dbg !1612
  %xor1538.i = xor i32 %949, %shl1537.i, !dbg !1612
  store i32 %xor1538.i, i32* %r.i, align 4, !dbg !1612
  %950 = load i32, i32* %l.i, align 4, !dbg !1612
  %shr1539.i = lshr i32 %950, 8, !dbg !1612
  %951 = load i32, i32* %r.i, align 4, !dbg !1612
  %xor1540.i = xor i32 %shr1539.i, %951, !dbg !1612
  %conv1541.i = zext i32 %xor1540.i to i64, !dbg !1612
  %and1542.i = and i64 %conv1541.i, 16711935, !dbg !1612
  %conv1543.i = trunc i64 %and1542.i to i32, !dbg !1612
  store i32 %conv1543.i, i32* %tt1530.i, align 4, !dbg !1612
  %952 = load i32, i32* %tt1530.i, align 4, !dbg !1612
  %953 = load i32, i32* %r.i, align 4, !dbg !1612
  %xor1544.i = xor i32 %953, %952, !dbg !1612
  store i32 %xor1544.i, i32* %r.i, align 4, !dbg !1612
  %954 = load i32, i32* %tt1530.i, align 4, !dbg !1612
  %shl1545.i = shl i32 %954, 8, !dbg !1612
  %955 = load i32, i32* %l.i, align 4, !dbg !1612
  %xor1546.i = xor i32 %955, %shl1545.i, !dbg !1612
  store i32 %xor1546.i, i32* %l.i, align 4, !dbg !1612
  %956 = load i32, i32* %r.i, align 4, !dbg !1612
  %shr1547.i = lshr i32 %956, 2, !dbg !1612
  %957 = load i32, i32* %l.i, align 4, !dbg !1612
  %xor1548.i = xor i32 %shr1547.i, %957, !dbg !1612
  %conv1549.i = zext i32 %xor1548.i to i64, !dbg !1612
  %and1550.i = and i64 %conv1549.i, 858993459, !dbg !1612
  %conv1551.i = trunc i64 %and1550.i to i32, !dbg !1612
  store i32 %conv1551.i, i32* %tt1530.i, align 4, !dbg !1612
  %958 = load i32, i32* %tt1530.i, align 4, !dbg !1612
  %959 = load i32, i32* %l.i, align 4, !dbg !1612
  %xor1552.i = xor i32 %959, %958, !dbg !1612
  store i32 %xor1552.i, i32* %l.i, align 4, !dbg !1612
  %960 = load i32, i32* %tt1530.i, align 4, !dbg !1612
  %shl1553.i = shl i32 %960, 2, !dbg !1612
  %961 = load i32, i32* %r.i, align 4, !dbg !1612
  %xor1554.i = xor i32 %961, %shl1553.i, !dbg !1612
  store i32 %xor1554.i, i32* %r.i, align 4, !dbg !1612
  %962 = load i32, i32* %l.i, align 4, !dbg !1612
  %shr1555.i = lshr i32 %962, 16, !dbg !1612
  %963 = load i32, i32* %r.i, align 4, !dbg !1612
  %xor1556.i = xor i32 %shr1555.i, %963, !dbg !1612
  %conv1557.i = zext i32 %xor1556.i to i64, !dbg !1612
  %and1558.i = and i64 %conv1557.i, 65535, !dbg !1612
  %conv1559.i = trunc i64 %and1558.i to i32, !dbg !1612
  store i32 %conv1559.i, i32* %tt1530.i, align 4, !dbg !1612
  %964 = load i32, i32* %tt1530.i, align 4, !dbg !1612
  %965 = load i32, i32* %r.i, align 4, !dbg !1612
  %xor1560.i = xor i32 %965, %964, !dbg !1612
  store i32 %xor1560.i, i32* %r.i, align 4, !dbg !1612
  %966 = load i32, i32* %tt1530.i, align 4, !dbg !1612
  %shl1561.i = shl i32 %966, 16, !dbg !1612
  %967 = load i32, i32* %l.i, align 4, !dbg !1612
  %xor1562.i = xor i32 %967, %shl1561.i, !dbg !1612
  store i32 %xor1562.i, i32* %l.i, align 4, !dbg !1612
  %968 = load i32, i32* %r.i, align 4, !dbg !1612
  %shr1563.i = lshr i32 %968, 4, !dbg !1612
  %969 = load i32, i32* %l.i, align 4, !dbg !1612
  %xor1564.i = xor i32 %shr1563.i, %969, !dbg !1612
  %conv1565.i = zext i32 %xor1564.i to i64, !dbg !1612
  %and1566.i = and i64 %conv1565.i, 252645135, !dbg !1612
  %conv1567.i = trunc i64 %and1566.i to i32, !dbg !1612
  store i32 %conv1567.i, i32* %tt1530.i, align 4, !dbg !1612
  %970 = load i32, i32* %tt1530.i, align 4, !dbg !1612
  %971 = load i32, i32* %l.i, align 4, !dbg !1612
  %xor1568.i = xor i32 %971, %970, !dbg !1612
  store i32 %xor1568.i, i32* %l.i, align 4, !dbg !1612
  %972 = load i32, i32* %tt1530.i, align 4, !dbg !1612
  %shl1569.i = shl i32 %972, 4, !dbg !1612
  %973 = load i32, i32* %r.i, align 4, !dbg !1612
  %xor1570.i = xor i32 %973, %shl1569.i, !dbg !1612
  store i32 %xor1570.i, i32* %r.i, align 4, !dbg !1612
  %974 = load i32, i32* %l.i, align 4, !dbg !1700
  %975 = load i32*, i32** %data.addr.i, align 8, !dbg !1701
  store i32 %974, i32* %975, align 4, !dbg !1702
  %976 = load i32, i32* %r.i, align 4, !dbg !1703
  %977 = load i32*, i32** %data.addr.i, align 8, !dbg !1704
  %arrayidx1572.i = getelementptr inbounds i32, i32* %977, i64 1, !dbg !1704
  store i32 %976, i32* %arrayidx1572.i, align 4, !dbg !1705
  store i32 0, i32* %u.i, align 4, !dbg !1706
  store i32 0, i32* %t.i, align 4, !dbg !1707
  store i32 0, i32* %r.i, align 4, !dbg !1708
  store i32 0, i32* %l.i, align 4, !dbg !1709
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0, !dbg !1710
  %978 = load i32, i32* %arrayidx29, align 4, !dbg !1710
  store i32 %978, i32* %l, align 4, !dbg !1711
  %979 = load i32, i32* %l, align 4, !dbg !1712
  %and = and i32 %979, 255, !dbg !1712
  %conv30 = trunc i32 %and to i8, !dbg !1712
  %980 = load i8*, i8** %out, align 8, !dbg !1712
  %incdec.ptr31 = getelementptr inbounds i8, i8* %980, i32 1, !dbg !1712
  store i8* %incdec.ptr31, i8** %out, align 8, !dbg !1712
  store i8 %conv30, i8* %980, align 1, !dbg !1712
  %981 = load i32, i32* %l, align 4, !dbg !1712
  %shr = lshr i32 %981, 8, !dbg !1712
  %and32 = and i32 %shr, 255, !dbg !1712
  %conv33 = trunc i32 %and32 to i8, !dbg !1712
  %982 = load i8*, i8** %out, align 8, !dbg !1712
  %incdec.ptr34 = getelementptr inbounds i8, i8* %982, i32 1, !dbg !1712
  store i8* %incdec.ptr34, i8** %out, align 8, !dbg !1712
  store i8 %conv33, i8* %982, align 1, !dbg !1712
  %983 = load i32, i32* %l, align 4, !dbg !1712
  %shr35 = lshr i32 %983, 16, !dbg !1712
  %and36 = and i32 %shr35, 255, !dbg !1712
  %conv37 = trunc i32 %and36 to i8, !dbg !1712
  %984 = load i8*, i8** %out, align 8, !dbg !1712
  %incdec.ptr38 = getelementptr inbounds i8, i8* %984, i32 1, !dbg !1712
  store i8* %incdec.ptr38, i8** %out, align 8, !dbg !1712
  store i8 %conv37, i8* %984, align 1, !dbg !1712
  %985 = load i32, i32* %l, align 4, !dbg !1712
  %shr39 = lshr i32 %985, 24, !dbg !1712
  %and40 = and i32 %shr39, 255, !dbg !1712
  %conv41 = trunc i32 %and40 to i8, !dbg !1712
  %986 = load i8*, i8** %out, align 8, !dbg !1712
  %incdec.ptr42 = getelementptr inbounds i8, i8* %986, i32 1, !dbg !1712
  store i8* %incdec.ptr42, i8** %out, align 8, !dbg !1712
  store i8 %conv41, i8* %986, align 1, !dbg !1712
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 1, !dbg !1713
  %987 = load i32, i32* %arrayidx43, align 4, !dbg !1713
  store i32 %987, i32* %l, align 4, !dbg !1714
  %988 = load i32, i32* %l, align 4, !dbg !1715
  %and44 = and i32 %988, 255, !dbg !1715
  %conv45 = trunc i32 %and44 to i8, !dbg !1715
  %989 = load i8*, i8** %out, align 8, !dbg !1715
  %incdec.ptr46 = getelementptr inbounds i8, i8* %989, i32 1, !dbg !1715
  store i8* %incdec.ptr46, i8** %out, align 8, !dbg !1715
  store i8 %conv45, i8* %989, align 1, !dbg !1715
  %990 = load i32, i32* %l, align 4, !dbg !1715
  %shr47 = lshr i32 %990, 8, !dbg !1715
  %and48 = and i32 %shr47, 255, !dbg !1715
  %conv49 = trunc i32 %and48 to i8, !dbg !1715
  %991 = load i8*, i8** %out, align 8, !dbg !1715
  %incdec.ptr50 = getelementptr inbounds i8, i8* %991, i32 1, !dbg !1715
  store i8* %incdec.ptr50, i8** %out, align 8, !dbg !1715
  store i8 %conv49, i8* %991, align 1, !dbg !1715
  %992 = load i32, i32* %l, align 4, !dbg !1715
  %shr51 = lshr i32 %992, 16, !dbg !1715
  %and52 = and i32 %shr51, 255, !dbg !1715
  %conv53 = trunc i32 %and52 to i8, !dbg !1715
  %993 = load i8*, i8** %out, align 8, !dbg !1715
  %incdec.ptr54 = getelementptr inbounds i8, i8* %993, i32 1, !dbg !1715
  store i8* %incdec.ptr54, i8** %out, align 8, !dbg !1715
  store i8 %conv53, i8* %993, align 1, !dbg !1715
  %994 = load i32, i32* %l, align 4, !dbg !1715
  %shr55 = lshr i32 %994, 24, !dbg !1715
  %and56 = and i32 %shr55, 255, !dbg !1715
  %conv57 = trunc i32 %and56 to i8, !dbg !1715
  %995 = load i8*, i8** %out, align 8, !dbg !1715
  %incdec.ptr58 = getelementptr inbounds i8, i8* %995, i32 1, !dbg !1715
  store i8* %incdec.ptr58, i8** %out, align 8, !dbg !1715
  store i8 %conv57, i8* %995, align 1, !dbg !1715
  %arrayidx59 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 1, !dbg !1716
  store i32 0, i32* %arrayidx59, align 4, !dbg !1717
  %arrayidx60 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0, !dbg !1718
  store i32 0, i32* %arrayidx60, align 4, !dbg !1719
  store i32 0, i32* %l, align 4, !dbg !1720
  ret void, !dbg !1721
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #3 !dbg !1722 {
entry:
  %data.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i.i, metadata !44, metadata !DIExpression()), !dbg !1725
  %ks.addr.i.i = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i.i, metadata !46, metadata !DIExpression()), !dbg !1729
  %enc.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i.i, metadata !48, metadata !DIExpression()), !dbg !1730
  %l.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i.i, metadata !50, metadata !DIExpression()), !dbg !1731
  %r.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i.i, metadata !52, metadata !DIExpression()), !dbg !1732
  %t.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i.i, metadata !54, metadata !DIExpression()), !dbg !1733
  %u.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i.i, metadata !56, metadata !DIExpression()), !dbg !1734
  %s.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i.i, metadata !58, metadata !DIExpression()), !dbg !1735
  %tt.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i.i, metadata !65, metadata !DIExpression()), !dbg !1736
  %ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i.i, metadata !68, metadata !DIExpression()), !dbg !1737
  %tmp.i.i = alloca i32, align 4
  %ret42.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret42.i.i, metadata !75, metadata !DIExpression()), !dbg !1738
  %tmp43.i.i = alloca i32, align 4
  %ret53.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret53.i.i, metadata !92, metadata !DIExpression()), !dbg !1739
  %tmp54.i.i = alloca i32, align 4
  %ret98.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret98.i.i, metadata !98, metadata !DIExpression()), !dbg !1740
  %tmp99.i.i = alloca i32, align 4
  %ret144.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret144.i.i, metadata !104, metadata !DIExpression()), !dbg !1741
  %tmp145.i.i = alloca i32, align 4
  %ret190.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret190.i.i, metadata !110, metadata !DIExpression()), !dbg !1742
  %tmp191.i.i = alloca i32, align 4
  %ret236.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret236.i.i, metadata !116, metadata !DIExpression()), !dbg !1743
  %tmp237.i.i = alloca i32, align 4
  %ret282.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret282.i.i, metadata !122, metadata !DIExpression()), !dbg !1744
  %tmp283.i.i = alloca i32, align 4
  %ret328.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret328.i.i, metadata !128, metadata !DIExpression()), !dbg !1745
  %tmp329.i.i = alloca i32, align 4
  %ret374.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret374.i.i, metadata !134, metadata !DIExpression()), !dbg !1746
  %tmp375.i.i = alloca i32, align 4
  %ret420.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret420.i.i, metadata !140, metadata !DIExpression()), !dbg !1747
  %tmp421.i.i = alloca i32, align 4
  %ret466.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret466.i.i, metadata !146, metadata !DIExpression()), !dbg !1748
  %tmp467.i.i = alloca i32, align 4
  %ret512.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret512.i.i, metadata !152, metadata !DIExpression()), !dbg !1749
  %tmp513.i.i = alloca i32, align 4
  %ret558.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret558.i.i, metadata !158, metadata !DIExpression()), !dbg !1750
  %tmp559.i.i = alloca i32, align 4
  %ret604.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret604.i.i, metadata !164, metadata !DIExpression()), !dbg !1751
  %tmp605.i.i = alloca i32, align 4
  %ret650.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret650.i.i, metadata !170, metadata !DIExpression()), !dbg !1752
  %tmp651.i.i = alloca i32, align 4
  %ret696.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret696.i.i, metadata !176, metadata !DIExpression()), !dbg !1753
  %tmp697.i.i = alloca i32, align 4
  %ret742.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret742.i.i, metadata !182, metadata !DIExpression()), !dbg !1754
  %tmp743.i.i = alloca i32, align 4
  %ret788.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret788.i.i, metadata !190, metadata !DIExpression()), !dbg !1755
  %tmp789.i.i = alloca i32, align 4
  %ret834.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret834.i.i, metadata !196, metadata !DIExpression()), !dbg !1756
  %tmp835.i.i = alloca i32, align 4
  %ret880.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret880.i.i, metadata !202, metadata !DIExpression()), !dbg !1757
  %tmp881.i.i = alloca i32, align 4
  %ret926.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret926.i.i, metadata !208, metadata !DIExpression()), !dbg !1758
  %tmp927.i.i = alloca i32, align 4
  %ret972.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret972.i.i, metadata !214, metadata !DIExpression()), !dbg !1759
  %tmp973.i.i = alloca i32, align 4
  %ret1018.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1018.i.i, metadata !220, metadata !DIExpression()), !dbg !1760
  %tmp1019.i.i = alloca i32, align 4
  %ret1064.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1064.i.i, metadata !226, metadata !DIExpression()), !dbg !1761
  %tmp1065.i.i = alloca i32, align 4
  %ret1110.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1110.i.i, metadata !232, metadata !DIExpression()), !dbg !1762
  %tmp1111.i.i = alloca i32, align 4
  %ret1156.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1156.i.i, metadata !238, metadata !DIExpression()), !dbg !1763
  %tmp1157.i.i = alloca i32, align 4
  %ret1202.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1202.i.i, metadata !244, metadata !DIExpression()), !dbg !1764
  %tmp1203.i.i = alloca i32, align 4
  %ret1248.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1248.i.i, metadata !250, metadata !DIExpression()), !dbg !1765
  %tmp1249.i.i = alloca i32, align 4
  %ret1294.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1294.i.i, metadata !256, metadata !DIExpression()), !dbg !1766
  %tmp1295.i.i = alloca i32, align 4
  %ret1340.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1340.i.i, metadata !262, metadata !DIExpression()), !dbg !1767
  %tmp1341.i.i = alloca i32, align 4
  %ret1386.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1386.i.i, metadata !268, metadata !DIExpression()), !dbg !1768
  %tmp1387.i.i = alloca i32, align 4
  %ret1432.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1432.i.i, metadata !274, metadata !DIExpression()), !dbg !1769
  %tmp1433.i.i = alloca i32, align 4
  %ret1478.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1478.i.i, metadata !280, metadata !DIExpression()), !dbg !1770
  %tmp1479.i.i = alloca i32, align 4
  %ret1520.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1520.i.i, metadata !284, metadata !DIExpression()), !dbg !1771
  %tmp1521.i.i = alloca i32, align 4
  %ret1525.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1525.i.i, metadata !291, metadata !DIExpression()), !dbg !1772
  %tmp1526.i.i = alloca i32, align 4
  %tt1530.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1530.i.i, metadata !298, metadata !DIExpression()), !dbg !1773
  %input.addr.i = alloca [8 x i8]*, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %input.addr.i, metadata !1613, metadata !DIExpression()), !dbg !1774
  %output.addr.i = alloca [8 x i8]*, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %output.addr.i, metadata !1615, metadata !DIExpression()), !dbg !1775
  %ks.addr.i = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i, metadata !1617, metadata !DIExpression()), !dbg !1776
  %enc.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i, metadata !1619, metadata !DIExpression()), !dbg !1777
  %l.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i, metadata !1621, metadata !DIExpression()), !dbg !1778
  %ll.i = alloca [2 x i32], align 4
  call void @llvm.dbg.declare(metadata [2 x i32]* %ll.i, metadata !1623, metadata !DIExpression()), !dbg !1779
  %in.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %in.i, metadata !1625, metadata !DIExpression()), !dbg !1780
  %out.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %out.i, metadata !1629, metadata !DIExpression()), !dbg !1781
  %retval = alloca i32, align 4
  %buf = alloca [8 x i8], align 1
  %key = alloca [8 x i8], align 1
  %output = alloca [8 x i8], align 1
  %ks = alloca %struct.DES_ks, align 4
  %charset = alloca [94 x i8], align 16
  %length = alloca i64, align 8
  %size = alloca i32, align 4
  %round = alloca i64, align 8
  %i = alloca i32, align 4
  %buff = alloca i8*, align 8
  %key2 = alloca i32, align 4
  %input = alloca i8*, align 8
  %n = alloca i64, align 8
  %key16 = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !1782, metadata !DIExpression()), !dbg !1783
  %0 = bitcast [8 x i8]* %buf to i8*, !dbg !1783
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @__const.main.buf, i32 0, i32 0), i64 8, i1 false), !dbg !1783
  call void @llvm.dbg.declare(metadata [8 x i8]* %key, metadata !1784, metadata !DIExpression()), !dbg !1785
  %1 = bitcast [8 x i8]* %key to i8*, !dbg !1785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @__const.main.key, i32 0, i32 0), i64 8, i1 false), !dbg !1785
  call void @llvm.dbg.declare(metadata [8 x i8]* %output, metadata !1786, metadata !DIExpression()), !dbg !1787
  call void @llvm.dbg.declare(metadata %struct.DES_ks* %ks, metadata !1788, metadata !DIExpression()), !dbg !1789
  %call = call i32 @DES_set_key([8 x i8]* %key, %struct.DES_ks* %ks), !dbg !1790
  call void @llvm.dbg.declare(metadata [94 x i8]* %charset, metadata !1791, metadata !DIExpression()), !dbg !1797
  %2 = bitcast [94 x i8]* %charset to i8*, !dbg !1797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %2, i8* align 16 getelementptr inbounds ([94 x i8], [94 x i8]* @__const.main.charset, i32 0, i32 0), i64 94, i1 false), !dbg !1797
  call void @llvm.dbg.declare(metadata i64* %length, metadata !1798, metadata !DIExpression()), !dbg !1802
  store i64 94, i64* %length, align 8, !dbg !1802
  call void @llvm.dbg.declare(metadata i32* %size, metadata !1803, metadata !DIExpression()), !dbg !1804
  store i32 8, i32* %size, align 4, !dbg !1804
  call void @llvm.dbg.declare(metadata i64* %round, metadata !1805, metadata !DIExpression()), !dbg !1806
  store i64 10, i64* %round, align 8, !dbg !1806
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1807, metadata !DIExpression()), !dbg !1808
  call void @llvm.dbg.declare(metadata i8** %buff, metadata !1809, metadata !DIExpression()), !dbg !1811
  %call1 = call noalias i8* @malloc(i64 8192) #8, !dbg !1812
  store i8* %call1, i8** %buff, align 8, !dbg !1811
  store i32 0, i32* %i, align 4, !dbg !1813
  br label %for.cond, !dbg !1815

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !1816
  %cmp = icmp slt i32 %3, 4096, !dbg !1818
  br i1 %cmp, label %for.body, label %for.end, !dbg !1819

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %key2, metadata !1820, metadata !DIExpression()), !dbg !1822
  %call3 = call i32 @rand() #8, !dbg !1823
  %conv = sext i32 %call3 to i64, !dbg !1823
  %4 = load i64, i64* %length, align 8, !dbg !1824
  %rem = urem i64 %conv, %4, !dbg !1825
  %conv4 = trunc i64 %rem to i32, !dbg !1823
  store i32 %conv4, i32* %key2, align 4, !dbg !1822
  %5 = load i32, i32* %key2, align 4, !dbg !1826
  %idxprom = sext i32 %5 to i64, !dbg !1827
  %arrayidx = getelementptr inbounds [94 x i8], [94 x i8]* %charset, i64 0, i64 %idxprom, !dbg !1827
  %6 = load i8, i8* %arrayidx, align 1, !dbg !1827
  %7 = load i8*, i8** %buff, align 8, !dbg !1828
  %8 = load i32, i32* %i, align 4, !dbg !1829
  %idxprom5 = sext i32 %8 to i64, !dbg !1828
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 %idxprom5, !dbg !1828
  store i8 %6, i8* %arrayidx6, align 1, !dbg !1830
  br label %for.inc, !dbg !1831

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !1832
  %add = add nsw i32 %9, 64, !dbg !1832
  store i32 %add, i32* %i, align 4, !dbg !1832
  br label %for.cond, !dbg !1833, !llvm.loop !1834

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %input, metadata !1836, metadata !DIExpression()), !dbg !1837
  %10 = load i32, i32* %size, align 4, !dbg !1838
  %conv7 = sext i32 %10 to i64, !dbg !1838
  %mul = mul i64 1, %conv7, !dbg !1839
  %11 = load i64, i64* %round, align 8, !dbg !1840
  %mul8 = mul i64 %mul, %11, !dbg !1841
  %call9 = call noalias i8* @malloc(i64 %mul8) #8, !dbg !1842
  store i8* %call9, i8** %input, align 8, !dbg !1837
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1843, metadata !DIExpression()), !dbg !1845
  store i64 0, i64* %n, align 8, !dbg !1845
  br label %for.cond10, !dbg !1846

for.cond10:                                       ; preds = %for.inc24, %for.end
  %12 = load i64, i64* %n, align 8, !dbg !1847
  %13 = load i32, i32* %size, align 4, !dbg !1849
  %conv11 = sext i32 %13 to i64, !dbg !1849
  %14 = load i64, i64* %round, align 8, !dbg !1850
  %mul12 = mul i64 %conv11, %14, !dbg !1851
  %cmp13 = icmp ult i64 %12, %mul12, !dbg !1852
  br i1 %cmp13, label %for.body15, label %for.end25, !dbg !1853

for.body15:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i32* %key16, metadata !1854, metadata !DIExpression()), !dbg !1856
  %call17 = call i32 @rand() #8, !dbg !1857
  %conv18 = sext i32 %call17 to i64, !dbg !1857
  %15 = load i64, i64* %length, align 8, !dbg !1858
  %rem19 = urem i64 %conv18, %15, !dbg !1859
  %conv20 = trunc i64 %rem19 to i32, !dbg !1857
  store i32 %conv20, i32* %key16, align 4, !dbg !1856
  %16 = load i32, i32* %key16, align 4, !dbg !1860
  %idxprom21 = sext i32 %16 to i64, !dbg !1861
  %arrayidx22 = getelementptr inbounds [94 x i8], [94 x i8]* %charset, i64 0, i64 %idxprom21, !dbg !1861
  %17 = load i8, i8* %arrayidx22, align 1, !dbg !1861
  %18 = load i8*, i8** %input, align 8, !dbg !1862
  %19 = load i64, i64* %n, align 8, !dbg !1863
  %arrayidx23 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !1862
  store i8 %17, i8* %arrayidx23, align 1, !dbg !1864
  br label %for.inc24, !dbg !1865

for.inc24:                                        ; preds = %for.body15
  %20 = load i64, i64* %n, align 8, !dbg !1866
  %inc = add i64 %20, 1, !dbg !1866
  store i64 %inc, i64* %n, align 8, !dbg !1866
  br label %for.cond10, !dbg !1867, !llvm.loop !1868

for.end25:                                        ; preds = %for.cond10
  br label %while.cond, !dbg !1870

while.cond:                                       ; preds = %DES_ecb_encrypt.exit, %for.end25
  %21 = load i64, i64* %round, align 8, !dbg !1871
  %tobool = icmp ne i64 %21, 0, !dbg !1870
  br i1 %tobool, label %while.body, label %while.end, !dbg !1870

while.body:                                       ; preds = %while.cond
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !1872
  %22 = load i8*, i8** %input, align 8, !dbg !1873
  %23 = load i64, i64* %round, align 8, !dbg !1874
  %sub = sub i64 %23, 1, !dbg !1875
  %24 = load i32, i32* %size, align 4, !dbg !1876
  %conv26 = sext i32 %24 to i64, !dbg !1876
  %mul27 = mul i64 %sub, %conv26, !dbg !1877
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %mul27, !dbg !1878
  %25 = load i32, i32* %size, align 4, !dbg !1879
  %conv28 = sext i32 %25 to i64, !dbg !1879
  %call29 = call i8* @strncpy(i8* %arraydecay, i8* %add.ptr, i64 %conv28) #8, !dbg !1880
  store [8 x i8]* %buf, [8 x i8]** %input.addr.i, align 8
  store [8 x i8]* %output, [8 x i8]** %output.addr.i, align 8
  store %struct.DES_ks* %ks, %struct.DES_ks** %ks.addr.i, align 8
  %ks.addr1.i = bitcast %struct.DES_ks** %ks.addr.i to i8*
  call void @llvm.var.annotation(i8* %ks.addr1.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 302) #8
  store i32 1, i32* %enc.addr.i, align 4
  %26 = load [8 x i8]*, [8 x i8]** %input.addr.i, align 8, !dbg !1881
  %arrayidx.i = getelementptr inbounds [8 x i8], [8 x i8]* %26, i64 0, i64 0, !dbg !1882
  store i8* %arrayidx.i, i8** %in.i, align 8, !dbg !1780
  %27 = load [8 x i8]*, [8 x i8]** %output.addr.i, align 8, !dbg !1883
  %arrayidx2.i = getelementptr inbounds [8 x i8], [8 x i8]* %27, i64 0, i64 0, !dbg !1884
  store i8* %arrayidx2.i, i8** %out.i, align 8, !dbg !1781
  %28 = load i8*, i8** %in.i, align 8, !dbg !1885
  %incdec.ptr.i = getelementptr inbounds i8, i8* %28, i32 1, !dbg !1885
  store i8* %incdec.ptr.i, i8** %in.i, align 8, !dbg !1885
  %29 = load i8, i8* %28, align 1, !dbg !1885
  %conv.i = zext i8 %29 to i32, !dbg !1885
  store i32 %conv.i, i32* %l.i, align 4, !dbg !1885
  %30 = load i8*, i8** %in.i, align 8, !dbg !1885
  %incdec.ptr3.i = getelementptr inbounds i8, i8* %30, i32 1, !dbg !1885
  store i8* %incdec.ptr3.i, i8** %in.i, align 8, !dbg !1885
  %31 = load i8, i8* %30, align 1, !dbg !1885
  %conv4.i = zext i8 %31 to i32, !dbg !1885
  %shl.i = shl i32 %conv4.i, 8, !dbg !1885
  %32 = load i32, i32* %l.i, align 4, !dbg !1885
  %or.i = or i32 %32, %shl.i, !dbg !1885
  store i32 %or.i, i32* %l.i, align 4, !dbg !1885
  %33 = load i8*, i8** %in.i, align 8, !dbg !1885
  %incdec.ptr5.i = getelementptr inbounds i8, i8* %33, i32 1, !dbg !1885
  store i8* %incdec.ptr5.i, i8** %in.i, align 8, !dbg !1885
  %34 = load i8, i8* %33, align 1, !dbg !1885
  %conv6.i = zext i8 %34 to i32, !dbg !1885
  %shl7.i = shl i32 %conv6.i, 16, !dbg !1885
  %35 = load i32, i32* %l.i, align 4, !dbg !1885
  %or8.i = or i32 %35, %shl7.i, !dbg !1885
  store i32 %or8.i, i32* %l.i, align 4, !dbg !1885
  %36 = load i8*, i8** %in.i, align 8, !dbg !1885
  %incdec.ptr9.i = getelementptr inbounds i8, i8* %36, i32 1, !dbg !1885
  store i8* %incdec.ptr9.i, i8** %in.i, align 8, !dbg !1885
  %37 = load i8, i8* %36, align 1, !dbg !1885
  %conv10.i = zext i8 %37 to i32, !dbg !1885
  %shl11.i = shl i32 %conv10.i, 24, !dbg !1885
  %38 = load i32, i32* %l.i, align 4, !dbg !1885
  %or12.i = or i32 %38, %shl11.i, !dbg !1885
  store i32 %or12.i, i32* %l.i, align 4, !dbg !1885
  %39 = load i32, i32* %l.i, align 4, !dbg !1886
  %arrayidx13.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0, !dbg !1887
  store i32 %39, i32* %arrayidx13.i, align 4, !dbg !1888
  %40 = load i8*, i8** %in.i, align 8, !dbg !1889
  %incdec.ptr14.i = getelementptr inbounds i8, i8* %40, i32 1, !dbg !1889
  store i8* %incdec.ptr14.i, i8** %in.i, align 8, !dbg !1889
  %41 = load i8, i8* %40, align 1, !dbg !1889
  %conv15.i = zext i8 %41 to i32, !dbg !1889
  store i32 %conv15.i, i32* %l.i, align 4, !dbg !1889
  %42 = load i8*, i8** %in.i, align 8, !dbg !1889
  %incdec.ptr16.i = getelementptr inbounds i8, i8* %42, i32 1, !dbg !1889
  store i8* %incdec.ptr16.i, i8** %in.i, align 8, !dbg !1889
  %43 = load i8, i8* %42, align 1, !dbg !1889
  %conv17.i = zext i8 %43 to i32, !dbg !1889
  %shl18.i = shl i32 %conv17.i, 8, !dbg !1889
  %44 = load i32, i32* %l.i, align 4, !dbg !1889
  %or19.i = or i32 %44, %shl18.i, !dbg !1889
  store i32 %or19.i, i32* %l.i, align 4, !dbg !1889
  %45 = load i8*, i8** %in.i, align 8, !dbg !1889
  %incdec.ptr20.i = getelementptr inbounds i8, i8* %45, i32 1, !dbg !1889
  store i8* %incdec.ptr20.i, i8** %in.i, align 8, !dbg !1889
  %46 = load i8, i8* %45, align 1, !dbg !1889
  %conv21.i = zext i8 %46 to i32, !dbg !1889
  %shl22.i = shl i32 %conv21.i, 16, !dbg !1889
  %47 = load i32, i32* %l.i, align 4, !dbg !1889
  %or23.i = or i32 %47, %shl22.i, !dbg !1889
  store i32 %or23.i, i32* %l.i, align 4, !dbg !1889
  %48 = load i8*, i8** %in.i, align 8, !dbg !1889
  %incdec.ptr24.i = getelementptr inbounds i8, i8* %48, i32 1, !dbg !1889
  store i8* %incdec.ptr24.i, i8** %in.i, align 8, !dbg !1889
  %49 = load i8, i8* %48, align 1, !dbg !1889
  %conv25.i = zext i8 %49 to i32, !dbg !1889
  %shl26.i = shl i32 %conv25.i, 24, !dbg !1889
  %50 = load i32, i32* %l.i, align 4, !dbg !1889
  %or27.i = or i32 %50, %shl26.i, !dbg !1889
  store i32 %or27.i, i32* %l.i, align 4, !dbg !1889
  %51 = load i32, i32* %l.i, align 4, !dbg !1890
  %arrayidx28.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 1, !dbg !1891
  store i32 %51, i32* %arrayidx28.i, align 4, !dbg !1892
  %arraydecay.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0, !dbg !1893
  %52 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i, align 8, !dbg !1894
  %53 = load i32, i32* %enc.addr.i, align 4, !dbg !1895
  store i32* %arraydecay.i, i32** %data.addr.i.i, align 8
  store %struct.DES_ks* %52, %struct.DES_ks** %ks.addr.i.i, align 8
  %ks.addr1.i.i = bitcast %struct.DES_ks** %ks.addr.i.i to i8*
  call void @llvm.var.annotation(i8* %ks.addr1.i.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 14) #8
  store i32 %53, i32* %enc.addr.i.i, align 4
  %s2.i.i = bitcast i32** %s.i.i to i8*, !dbg !1896
  call void @llvm.var.annotation(i8* %s2.i.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 17) #8, !dbg !1896
  %54 = load i32*, i32** %data.addr.i.i, align 8, !dbg !1897
  %55 = load i32, i32* %54, align 4, !dbg !1897
  store i32 %55, i32* %r.i.i, align 4, !dbg !1898
  %56 = load i32*, i32** %data.addr.i.i, align 8, !dbg !1899
  %arrayidx3.i.i = getelementptr inbounds i32, i32* %56, i64 1, !dbg !1899
  %57 = load i32, i32* %arrayidx3.i.i, align 4, !dbg !1899
  store i32 %57, i32* %l.i.i, align 4, !dbg !1900
  %58 = load i32, i32* %l.i.i, align 4, !dbg !1736
  %shr.i.i = lshr i32 %58, 4, !dbg !1736
  %59 = load i32, i32* %r.i.i, align 4, !dbg !1736
  %xor.i.i = xor i32 %shr.i.i, %59, !dbg !1736
  %conv.i.i = zext i32 %xor.i.i to i64, !dbg !1736
  %and.i.i = and i64 %conv.i.i, 252645135, !dbg !1736
  %conv4.i.i = trunc i64 %and.i.i to i32, !dbg !1736
  store i32 %conv4.i.i, i32* %tt.i.i, align 4, !dbg !1736
  %60 = load i32, i32* %tt.i.i, align 4, !dbg !1736
  %61 = load i32, i32* %r.i.i, align 4, !dbg !1736
  %xor5.i.i = xor i32 %61, %60, !dbg !1736
  store i32 %xor5.i.i, i32* %r.i.i, align 4, !dbg !1736
  %62 = load i32, i32* %tt.i.i, align 4, !dbg !1736
  %shl.i.i = shl i32 %62, 4, !dbg !1736
  %63 = load i32, i32* %l.i.i, align 4, !dbg !1736
  %xor6.i.i = xor i32 %63, %shl.i.i, !dbg !1736
  store i32 %xor6.i.i, i32* %l.i.i, align 4, !dbg !1736
  %64 = load i32, i32* %r.i.i, align 4, !dbg !1736
  %shr7.i.i = lshr i32 %64, 16, !dbg !1736
  %65 = load i32, i32* %l.i.i, align 4, !dbg !1736
  %xor8.i.i = xor i32 %shr7.i.i, %65, !dbg !1736
  %conv9.i.i = zext i32 %xor8.i.i to i64, !dbg !1736
  %and10.i.i = and i64 %conv9.i.i, 65535, !dbg !1736
  %conv11.i.i = trunc i64 %and10.i.i to i32, !dbg !1736
  store i32 %conv11.i.i, i32* %tt.i.i, align 4, !dbg !1736
  %66 = load i32, i32* %tt.i.i, align 4, !dbg !1736
  %67 = load i32, i32* %l.i.i, align 4, !dbg !1736
  %xor12.i.i = xor i32 %67, %66, !dbg !1736
  store i32 %xor12.i.i, i32* %l.i.i, align 4, !dbg !1736
  %68 = load i32, i32* %tt.i.i, align 4, !dbg !1736
  %shl13.i.i = shl i32 %68, 16, !dbg !1736
  %69 = load i32, i32* %r.i.i, align 4, !dbg !1736
  %xor14.i.i = xor i32 %69, %shl13.i.i, !dbg !1736
  store i32 %xor14.i.i, i32* %r.i.i, align 4, !dbg !1736
  %70 = load i32, i32* %l.i.i, align 4, !dbg !1736
  %shr15.i.i = lshr i32 %70, 2, !dbg !1736
  %71 = load i32, i32* %r.i.i, align 4, !dbg !1736
  %xor16.i.i = xor i32 %shr15.i.i, %71, !dbg !1736
  %conv17.i.i = zext i32 %xor16.i.i to i64, !dbg !1736
  %and18.i.i = and i64 %conv17.i.i, 858993459, !dbg !1736
  %conv19.i.i = trunc i64 %and18.i.i to i32, !dbg !1736
  store i32 %conv19.i.i, i32* %tt.i.i, align 4, !dbg !1736
  %72 = load i32, i32* %tt.i.i, align 4, !dbg !1736
  %73 = load i32, i32* %r.i.i, align 4, !dbg !1736
  %xor20.i.i = xor i32 %73, %72, !dbg !1736
  store i32 %xor20.i.i, i32* %r.i.i, align 4, !dbg !1736
  %74 = load i32, i32* %tt.i.i, align 4, !dbg !1736
  %shl21.i.i = shl i32 %74, 2, !dbg !1736
  %75 = load i32, i32* %l.i.i, align 4, !dbg !1736
  %xor22.i.i = xor i32 %75, %shl21.i.i, !dbg !1736
  store i32 %xor22.i.i, i32* %l.i.i, align 4, !dbg !1736
  %76 = load i32, i32* %r.i.i, align 4, !dbg !1736
  %shr23.i.i = lshr i32 %76, 8, !dbg !1736
  %77 = load i32, i32* %l.i.i, align 4, !dbg !1736
  %xor24.i.i = xor i32 %shr23.i.i, %77, !dbg !1736
  %conv25.i.i = zext i32 %xor24.i.i to i64, !dbg !1736
  %and26.i.i = and i64 %conv25.i.i, 16711935, !dbg !1736
  %conv27.i.i = trunc i64 %and26.i.i to i32, !dbg !1736
  store i32 %conv27.i.i, i32* %tt.i.i, align 4, !dbg !1736
  %78 = load i32, i32* %tt.i.i, align 4, !dbg !1736
  %79 = load i32, i32* %l.i.i, align 4, !dbg !1736
  %xor28.i.i = xor i32 %79, %78, !dbg !1736
  store i32 %xor28.i.i, i32* %l.i.i, align 4, !dbg !1736
  %80 = load i32, i32* %tt.i.i, align 4, !dbg !1736
  %shl29.i.i = shl i32 %80, 8, !dbg !1736
  %81 = load i32, i32* %r.i.i, align 4, !dbg !1736
  %xor30.i.i = xor i32 %81, %shl29.i.i, !dbg !1736
  store i32 %xor30.i.i, i32* %r.i.i, align 4, !dbg !1736
  %82 = load i32, i32* %l.i.i, align 4, !dbg !1736
  %shr31.i.i = lshr i32 %82, 1, !dbg !1736
  %83 = load i32, i32* %r.i.i, align 4, !dbg !1736
  %xor32.i.i = xor i32 %shr31.i.i, %83, !dbg !1736
  %conv33.i.i = zext i32 %xor32.i.i to i64, !dbg !1736
  %and34.i.i = and i64 %conv33.i.i, 1431655765, !dbg !1736
  %conv35.i.i = trunc i64 %and34.i.i to i32, !dbg !1736
  store i32 %conv35.i.i, i32* %tt.i.i, align 4, !dbg !1736
  %84 = load i32, i32* %tt.i.i, align 4, !dbg !1736
  %85 = load i32, i32* %r.i.i, align 4, !dbg !1736
  %xor36.i.i = xor i32 %85, %84, !dbg !1736
  store i32 %xor36.i.i, i32* %r.i.i, align 4, !dbg !1736
  %86 = load i32, i32* %tt.i.i, align 4, !dbg !1736
  %shl37.i.i = shl i32 %86, 1, !dbg !1736
  %87 = load i32, i32* %l.i.i, align 4, !dbg !1736
  %xor38.i.i = xor i32 %87, %shl37.i.i, !dbg !1736
  store i32 %xor38.i.i, i32* %l.i.i, align 4, !dbg !1736
  %88 = load i32, i32* %r.i.i, align 4, !dbg !1737
  %89 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %88) #7, !dbg !1737, !srcloc !71
  store i32 %89, i32* %ret.i.i, align 4, !dbg !1737
  %90 = load i32, i32* %ret.i.i, align 4, !dbg !1737
  store i32 %90, i32* %tmp.i.i, align 4, !dbg !1737
  %91 = load i32, i32* %tmp.i.i, align 4, !dbg !1737
  %conv39.i.i = zext i32 %91 to i64, !dbg !1901
  %and40.i.i = and i64 %conv39.i.i, 4294967295, !dbg !1902
  %conv41.i.i = trunc i64 %and40.i.i to i32, !dbg !1901
  store i32 %conv41.i.i, i32* %r.i.i, align 4, !dbg !1903
  %92 = load i32, i32* %l.i.i, align 4, !dbg !1738
  %93 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %92) #7, !dbg !1738, !srcloc !78
  store i32 %93, i32* %ret42.i.i, align 4, !dbg !1738
  %94 = load i32, i32* %ret42.i.i, align 4, !dbg !1738
  store i32 %94, i32* %tmp43.i.i, align 4, !dbg !1738
  %95 = load i32, i32* %tmp43.i.i, align 4, !dbg !1738
  %conv44.i.i = zext i32 %95 to i64, !dbg !1904
  %and45.i.i = and i64 %conv44.i.i, 4294967295, !dbg !1905
  %conv46.i.i = trunc i64 %and45.i.i to i32, !dbg !1904
  store i32 %conv46.i.i, i32* %l.i.i, align 4, !dbg !1906
  %96 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i.i, align 8, !dbg !1907
  %ks47.i.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %96, i32 0, i32 0, !dbg !1908
  %arraydecay.i.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks47.i.i, i64 0, i64 0, !dbg !1909
  %deslong.i.i = bitcast %union.anon* %arraydecay.i.i to [2 x i32]*, !dbg !1909
  %arraydecay48.i.i = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i.i, i64 0, i64 0, !dbg !1907
  store i32* %arraydecay48.i.i, i32** %s.i.i, align 8, !dbg !1910
  %97 = load i32, i32* %enc.addr.i.i, align 4, !dbg !1911
  %tobool.i.i = icmp ne i32 %97, 0, !dbg !1911
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !1912

if.then.i.i:                                      ; preds = %while.body
  %98 = load i32, i32* %r.i.i, align 4, !dbg !1913
  %99 = load i32*, i32** %s.i.i, align 8, !dbg !1913
  %100 = load i32, i32* %99, align 4, !dbg !1913
  %xor50.i.i = xor i32 %98, %100, !dbg !1913
  store i32 %xor50.i.i, i32* %u.i.i, align 4, !dbg !1913
  %101 = load i32, i32* %r.i.i, align 4, !dbg !1913
  %102 = load i32*, i32** %s.i.i, align 8, !dbg !1913
  %arrayidx51.i.i = getelementptr inbounds i32, i32* %102, i64 1, !dbg !1913
  %103 = load i32, i32* %arrayidx51.i.i, align 4, !dbg !1913
  %xor52.i.i = xor i32 %101, %103, !dbg !1913
  store i32 %xor52.i.i, i32* %t.i.i, align 4, !dbg !1913
  %104 = load i32, i32* %t.i.i, align 4, !dbg !1739
  %105 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %104) #7, !dbg !1739, !srcloc !95
  store i32 %105, i32* %ret53.i.i, align 4, !dbg !1739
  %106 = load i32, i32* %ret53.i.i, align 4, !dbg !1739
  store i32 %106, i32* %tmp54.i.i, align 4, !dbg !1739
  %107 = load i32, i32* %tmp54.i.i, align 4, !dbg !1739
  store i32 %107, i32* %t.i.i, align 4, !dbg !1913
  %108 = load i32, i32* %u.i.i, align 4, !dbg !1913
  %shr55.i.i = lshr i32 %108, 2, !dbg !1913
  %and56.i.i = and i32 %shr55.i.i, 63, !dbg !1913
  %idxprom.i.i = zext i32 %and56.i.i to i64, !dbg !1913
  %arrayidx57.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i.i, !dbg !1913
  %109 = load i32, i32* %arrayidx57.i.i, align 4, !dbg !1913
  %110 = load i32, i32* %u.i.i, align 4, !dbg !1913
  %shr58.i.i = lshr i32 %110, 10, !dbg !1913
  %and59.i.i = and i32 %shr58.i.i, 63, !dbg !1913
  %idxprom60.i.i = zext i32 %and59.i.i to i64, !dbg !1913
  %arrayidx61.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom60.i.i, !dbg !1913
  %111 = load i32, i32* %arrayidx61.i.i, align 4, !dbg !1913
  %xor62.i.i = xor i32 %109, %111, !dbg !1913
  %112 = load i32, i32* %u.i.i, align 4, !dbg !1913
  %shr63.i.i = lshr i32 %112, 18, !dbg !1913
  %and64.i.i = and i32 %shr63.i.i, 63, !dbg !1913
  %idxprom65.i.i = zext i32 %and64.i.i to i64, !dbg !1913
  %arrayidx66.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom65.i.i, !dbg !1913
  %113 = load i32, i32* %arrayidx66.i.i, align 4, !dbg !1913
  %xor67.i.i = xor i32 %xor62.i.i, %113, !dbg !1913
  %114 = load i32, i32* %u.i.i, align 4, !dbg !1913
  %shr68.i.i = lshr i32 %114, 26, !dbg !1913
  %idxprom70.i.i = zext i32 %shr68.i.i to i64, !dbg !1913
  %arrayidx71.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom70.i.i, !dbg !1913
  %115 = load i32, i32* %arrayidx71.i.i, align 4, !dbg !1913
  %xor72.i.i = xor i32 %xor67.i.i, %115, !dbg !1913
  %116 = load i32, i32* %t.i.i, align 4, !dbg !1913
  %shr73.i.i = lshr i32 %116, 2, !dbg !1913
  %and74.i.i = and i32 %shr73.i.i, 63, !dbg !1913
  %idxprom75.i.i = zext i32 %and74.i.i to i64, !dbg !1913
  %arrayidx76.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom75.i.i, !dbg !1913
  %117 = load i32, i32* %arrayidx76.i.i, align 4, !dbg !1913
  %xor77.i.i = xor i32 %xor72.i.i, %117, !dbg !1913
  %118 = load i32, i32* %t.i.i, align 4, !dbg !1913
  %shr78.i.i = lshr i32 %118, 10, !dbg !1913
  %and79.i.i = and i32 %shr78.i.i, 63, !dbg !1913
  %idxprom80.i.i = zext i32 %and79.i.i to i64, !dbg !1913
  %arrayidx81.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom80.i.i, !dbg !1913
  %119 = load i32, i32* %arrayidx81.i.i, align 4, !dbg !1913
  %xor82.i.i = xor i32 %xor77.i.i, %119, !dbg !1913
  %120 = load i32, i32* %t.i.i, align 4, !dbg !1913
  %shr83.i.i = lshr i32 %120, 18, !dbg !1913
  %and84.i.i = and i32 %shr83.i.i, 63, !dbg !1913
  %idxprom85.i.i = zext i32 %and84.i.i to i64, !dbg !1913
  %arrayidx86.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom85.i.i, !dbg !1913
  %121 = load i32, i32* %arrayidx86.i.i, align 4, !dbg !1913
  %xor87.i.i = xor i32 %xor82.i.i, %121, !dbg !1913
  %122 = load i32, i32* %t.i.i, align 4, !dbg !1913
  %shr88.i.i = lshr i32 %122, 26, !dbg !1913
  %idxprom90.i.i = zext i32 %shr88.i.i to i64, !dbg !1913
  %arrayidx91.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom90.i.i, !dbg !1913
  %123 = load i32, i32* %arrayidx91.i.i, align 4, !dbg !1913
  %xor92.i.i = xor i32 %xor87.i.i, %123, !dbg !1913
  %124 = load i32, i32* %l.i.i, align 4, !dbg !1913
  %xor93.i.i = xor i32 %124, %xor92.i.i, !dbg !1913
  store i32 %xor93.i.i, i32* %l.i.i, align 4, !dbg !1913
  %125 = load i32, i32* %l.i.i, align 4, !dbg !1914
  %126 = load i32*, i32** %s.i.i, align 8, !dbg !1914
  %arrayidx94.i.i = getelementptr inbounds i32, i32* %126, i64 2, !dbg !1914
  %127 = load i32, i32* %arrayidx94.i.i, align 4, !dbg !1914
  %xor95.i.i = xor i32 %125, %127, !dbg !1914
  store i32 %xor95.i.i, i32* %u.i.i, align 4, !dbg !1914
  %128 = load i32, i32* %l.i.i, align 4, !dbg !1914
  %129 = load i32*, i32** %s.i.i, align 8, !dbg !1914
  %arrayidx96.i.i = getelementptr inbounds i32, i32* %129, i64 3, !dbg !1914
  %130 = load i32, i32* %arrayidx96.i.i, align 4, !dbg !1914
  %xor97.i.i = xor i32 %128, %130, !dbg !1914
  store i32 %xor97.i.i, i32* %t.i.i, align 4, !dbg !1914
  %131 = load i32, i32* %t.i.i, align 4, !dbg !1740
  %132 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %131) #7, !dbg !1740, !srcloc !101
  store i32 %132, i32* %ret98.i.i, align 4, !dbg !1740
  %133 = load i32, i32* %ret98.i.i, align 4, !dbg !1740
  store i32 %133, i32* %tmp99.i.i, align 4, !dbg !1740
  %134 = load i32, i32* %tmp99.i.i, align 4, !dbg !1740
  store i32 %134, i32* %t.i.i, align 4, !dbg !1914
  %135 = load i32, i32* %u.i.i, align 4, !dbg !1914
  %shr100.i.i = lshr i32 %135, 2, !dbg !1914
  %and101.i.i = and i32 %shr100.i.i, 63, !dbg !1914
  %idxprom102.i.i = zext i32 %and101.i.i to i64, !dbg !1914
  %arrayidx103.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom102.i.i, !dbg !1914
  %136 = load i32, i32* %arrayidx103.i.i, align 4, !dbg !1914
  %137 = load i32, i32* %u.i.i, align 4, !dbg !1914
  %shr104.i.i = lshr i32 %137, 10, !dbg !1914
  %and105.i.i = and i32 %shr104.i.i, 63, !dbg !1914
  %idxprom106.i.i = zext i32 %and105.i.i to i64, !dbg !1914
  %arrayidx107.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom106.i.i, !dbg !1914
  %138 = load i32, i32* %arrayidx107.i.i, align 4, !dbg !1914
  %xor108.i.i = xor i32 %136, %138, !dbg !1914
  %139 = load i32, i32* %u.i.i, align 4, !dbg !1914
  %shr109.i.i = lshr i32 %139, 18, !dbg !1914
  %and110.i.i = and i32 %shr109.i.i, 63, !dbg !1914
  %idxprom111.i.i = zext i32 %and110.i.i to i64, !dbg !1914
  %arrayidx112.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom111.i.i, !dbg !1914
  %140 = load i32, i32* %arrayidx112.i.i, align 4, !dbg !1914
  %xor113.i.i = xor i32 %xor108.i.i, %140, !dbg !1914
  %141 = load i32, i32* %u.i.i, align 4, !dbg !1914
  %shr114.i.i = lshr i32 %141, 26, !dbg !1914
  %idxprom116.i.i = zext i32 %shr114.i.i to i64, !dbg !1914
  %arrayidx117.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom116.i.i, !dbg !1914
  %142 = load i32, i32* %arrayidx117.i.i, align 4, !dbg !1914
  %xor118.i.i = xor i32 %xor113.i.i, %142, !dbg !1914
  %143 = load i32, i32* %t.i.i, align 4, !dbg !1914
  %shr119.i.i = lshr i32 %143, 2, !dbg !1914
  %and120.i.i = and i32 %shr119.i.i, 63, !dbg !1914
  %idxprom121.i.i = zext i32 %and120.i.i to i64, !dbg !1914
  %arrayidx122.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom121.i.i, !dbg !1914
  %144 = load i32, i32* %arrayidx122.i.i, align 4, !dbg !1914
  %xor123.i.i = xor i32 %xor118.i.i, %144, !dbg !1914
  %145 = load i32, i32* %t.i.i, align 4, !dbg !1914
  %shr124.i.i = lshr i32 %145, 10, !dbg !1914
  %and125.i.i = and i32 %shr124.i.i, 63, !dbg !1914
  %idxprom126.i.i = zext i32 %and125.i.i to i64, !dbg !1914
  %arrayidx127.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom126.i.i, !dbg !1914
  %146 = load i32, i32* %arrayidx127.i.i, align 4, !dbg !1914
  %xor128.i.i = xor i32 %xor123.i.i, %146, !dbg !1914
  %147 = load i32, i32* %t.i.i, align 4, !dbg !1914
  %shr129.i.i = lshr i32 %147, 18, !dbg !1914
  %and130.i.i = and i32 %shr129.i.i, 63, !dbg !1914
  %idxprom131.i.i = zext i32 %and130.i.i to i64, !dbg !1914
  %arrayidx132.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom131.i.i, !dbg !1914
  %148 = load i32, i32* %arrayidx132.i.i, align 4, !dbg !1914
  %xor133.i.i = xor i32 %xor128.i.i, %148, !dbg !1914
  %149 = load i32, i32* %t.i.i, align 4, !dbg !1914
  %shr134.i.i = lshr i32 %149, 26, !dbg !1914
  %idxprom136.i.i = zext i32 %shr134.i.i to i64, !dbg !1914
  %arrayidx137.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom136.i.i, !dbg !1914
  %150 = load i32, i32* %arrayidx137.i.i, align 4, !dbg !1914
  %xor138.i.i = xor i32 %xor133.i.i, %150, !dbg !1914
  %151 = load i32, i32* %r.i.i, align 4, !dbg !1914
  %xor139.i.i = xor i32 %151, %xor138.i.i, !dbg !1914
  store i32 %xor139.i.i, i32* %r.i.i, align 4, !dbg !1914
  %152 = load i32, i32* %r.i.i, align 4, !dbg !1915
  %153 = load i32*, i32** %s.i.i, align 8, !dbg !1915
  %arrayidx140.i.i = getelementptr inbounds i32, i32* %153, i64 4, !dbg !1915
  %154 = load i32, i32* %arrayidx140.i.i, align 4, !dbg !1915
  %xor141.i.i = xor i32 %152, %154, !dbg !1915
  store i32 %xor141.i.i, i32* %u.i.i, align 4, !dbg !1915
  %155 = load i32, i32* %r.i.i, align 4, !dbg !1915
  %156 = load i32*, i32** %s.i.i, align 8, !dbg !1915
  %arrayidx142.i.i = getelementptr inbounds i32, i32* %156, i64 5, !dbg !1915
  %157 = load i32, i32* %arrayidx142.i.i, align 4, !dbg !1915
  %xor143.i.i = xor i32 %155, %157, !dbg !1915
  store i32 %xor143.i.i, i32* %t.i.i, align 4, !dbg !1915
  %158 = load i32, i32* %t.i.i, align 4, !dbg !1741
  %159 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %158) #7, !dbg !1741, !srcloc !107
  store i32 %159, i32* %ret144.i.i, align 4, !dbg !1741
  %160 = load i32, i32* %ret144.i.i, align 4, !dbg !1741
  store i32 %160, i32* %tmp145.i.i, align 4, !dbg !1741
  %161 = load i32, i32* %tmp145.i.i, align 4, !dbg !1741
  store i32 %161, i32* %t.i.i, align 4, !dbg !1915
  %162 = load i32, i32* %u.i.i, align 4, !dbg !1915
  %shr146.i.i = lshr i32 %162, 2, !dbg !1915
  %and147.i.i = and i32 %shr146.i.i, 63, !dbg !1915
  %idxprom148.i.i = zext i32 %and147.i.i to i64, !dbg !1915
  %arrayidx149.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom148.i.i, !dbg !1915
  %163 = load i32, i32* %arrayidx149.i.i, align 4, !dbg !1915
  %164 = load i32, i32* %u.i.i, align 4, !dbg !1915
  %shr150.i.i = lshr i32 %164, 10, !dbg !1915
  %and151.i.i = and i32 %shr150.i.i, 63, !dbg !1915
  %idxprom152.i.i = zext i32 %and151.i.i to i64, !dbg !1915
  %arrayidx153.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom152.i.i, !dbg !1915
  %165 = load i32, i32* %arrayidx153.i.i, align 4, !dbg !1915
  %xor154.i.i = xor i32 %163, %165, !dbg !1915
  %166 = load i32, i32* %u.i.i, align 4, !dbg !1915
  %shr155.i.i = lshr i32 %166, 18, !dbg !1915
  %and156.i.i = and i32 %shr155.i.i, 63, !dbg !1915
  %idxprom157.i.i = zext i32 %and156.i.i to i64, !dbg !1915
  %arrayidx158.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom157.i.i, !dbg !1915
  %167 = load i32, i32* %arrayidx158.i.i, align 4, !dbg !1915
  %xor159.i.i = xor i32 %xor154.i.i, %167, !dbg !1915
  %168 = load i32, i32* %u.i.i, align 4, !dbg !1915
  %shr160.i.i = lshr i32 %168, 26, !dbg !1915
  %idxprom162.i.i = zext i32 %shr160.i.i to i64, !dbg !1915
  %arrayidx163.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom162.i.i, !dbg !1915
  %169 = load i32, i32* %arrayidx163.i.i, align 4, !dbg !1915
  %xor164.i.i = xor i32 %xor159.i.i, %169, !dbg !1915
  %170 = load i32, i32* %t.i.i, align 4, !dbg !1915
  %shr165.i.i = lshr i32 %170, 2, !dbg !1915
  %and166.i.i = and i32 %shr165.i.i, 63, !dbg !1915
  %idxprom167.i.i = zext i32 %and166.i.i to i64, !dbg !1915
  %arrayidx168.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom167.i.i, !dbg !1915
  %171 = load i32, i32* %arrayidx168.i.i, align 4, !dbg !1915
  %xor169.i.i = xor i32 %xor164.i.i, %171, !dbg !1915
  %172 = load i32, i32* %t.i.i, align 4, !dbg !1915
  %shr170.i.i = lshr i32 %172, 10, !dbg !1915
  %and171.i.i = and i32 %shr170.i.i, 63, !dbg !1915
  %idxprom172.i.i = zext i32 %and171.i.i to i64, !dbg !1915
  %arrayidx173.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom172.i.i, !dbg !1915
  %173 = load i32, i32* %arrayidx173.i.i, align 4, !dbg !1915
  %xor174.i.i = xor i32 %xor169.i.i, %173, !dbg !1915
  %174 = load i32, i32* %t.i.i, align 4, !dbg !1915
  %shr175.i.i = lshr i32 %174, 18, !dbg !1915
  %and176.i.i = and i32 %shr175.i.i, 63, !dbg !1915
  %idxprom177.i.i = zext i32 %and176.i.i to i64, !dbg !1915
  %arrayidx178.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom177.i.i, !dbg !1915
  %175 = load i32, i32* %arrayidx178.i.i, align 4, !dbg !1915
  %xor179.i.i = xor i32 %xor174.i.i, %175, !dbg !1915
  %176 = load i32, i32* %t.i.i, align 4, !dbg !1915
  %shr180.i.i = lshr i32 %176, 26, !dbg !1915
  %idxprom182.i.i = zext i32 %shr180.i.i to i64, !dbg !1915
  %arrayidx183.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom182.i.i, !dbg !1915
  %177 = load i32, i32* %arrayidx183.i.i, align 4, !dbg !1915
  %xor184.i.i = xor i32 %xor179.i.i, %177, !dbg !1915
  %178 = load i32, i32* %l.i.i, align 4, !dbg !1915
  %xor185.i.i = xor i32 %178, %xor184.i.i, !dbg !1915
  store i32 %xor185.i.i, i32* %l.i.i, align 4, !dbg !1915
  %179 = load i32, i32* %l.i.i, align 4, !dbg !1916
  %180 = load i32*, i32** %s.i.i, align 8, !dbg !1916
  %arrayidx186.i.i = getelementptr inbounds i32, i32* %180, i64 6, !dbg !1916
  %181 = load i32, i32* %arrayidx186.i.i, align 4, !dbg !1916
  %xor187.i.i = xor i32 %179, %181, !dbg !1916
  store i32 %xor187.i.i, i32* %u.i.i, align 4, !dbg !1916
  %182 = load i32, i32* %l.i.i, align 4, !dbg !1916
  %183 = load i32*, i32** %s.i.i, align 8, !dbg !1916
  %arrayidx188.i.i = getelementptr inbounds i32, i32* %183, i64 7, !dbg !1916
  %184 = load i32, i32* %arrayidx188.i.i, align 4, !dbg !1916
  %xor189.i.i = xor i32 %182, %184, !dbg !1916
  store i32 %xor189.i.i, i32* %t.i.i, align 4, !dbg !1916
  %185 = load i32, i32* %t.i.i, align 4, !dbg !1742
  %186 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %185) #7, !dbg !1742, !srcloc !113
  store i32 %186, i32* %ret190.i.i, align 4, !dbg !1742
  %187 = load i32, i32* %ret190.i.i, align 4, !dbg !1742
  store i32 %187, i32* %tmp191.i.i, align 4, !dbg !1742
  %188 = load i32, i32* %tmp191.i.i, align 4, !dbg !1742
  store i32 %188, i32* %t.i.i, align 4, !dbg !1916
  %189 = load i32, i32* %u.i.i, align 4, !dbg !1916
  %shr192.i.i = lshr i32 %189, 2, !dbg !1916
  %and193.i.i = and i32 %shr192.i.i, 63, !dbg !1916
  %idxprom194.i.i = zext i32 %and193.i.i to i64, !dbg !1916
  %arrayidx195.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom194.i.i, !dbg !1916
  %190 = load i32, i32* %arrayidx195.i.i, align 4, !dbg !1916
  %191 = load i32, i32* %u.i.i, align 4, !dbg !1916
  %shr196.i.i = lshr i32 %191, 10, !dbg !1916
  %and197.i.i = and i32 %shr196.i.i, 63, !dbg !1916
  %idxprom198.i.i = zext i32 %and197.i.i to i64, !dbg !1916
  %arrayidx199.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom198.i.i, !dbg !1916
  %192 = load i32, i32* %arrayidx199.i.i, align 4, !dbg !1916
  %xor200.i.i = xor i32 %190, %192, !dbg !1916
  %193 = load i32, i32* %u.i.i, align 4, !dbg !1916
  %shr201.i.i = lshr i32 %193, 18, !dbg !1916
  %and202.i.i = and i32 %shr201.i.i, 63, !dbg !1916
  %idxprom203.i.i = zext i32 %and202.i.i to i64, !dbg !1916
  %arrayidx204.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom203.i.i, !dbg !1916
  %194 = load i32, i32* %arrayidx204.i.i, align 4, !dbg !1916
  %xor205.i.i = xor i32 %xor200.i.i, %194, !dbg !1916
  %195 = load i32, i32* %u.i.i, align 4, !dbg !1916
  %shr206.i.i = lshr i32 %195, 26, !dbg !1916
  %idxprom208.i.i = zext i32 %shr206.i.i to i64, !dbg !1916
  %arrayidx209.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom208.i.i, !dbg !1916
  %196 = load i32, i32* %arrayidx209.i.i, align 4, !dbg !1916
  %xor210.i.i = xor i32 %xor205.i.i, %196, !dbg !1916
  %197 = load i32, i32* %t.i.i, align 4, !dbg !1916
  %shr211.i.i = lshr i32 %197, 2, !dbg !1916
  %and212.i.i = and i32 %shr211.i.i, 63, !dbg !1916
  %idxprom213.i.i = zext i32 %and212.i.i to i64, !dbg !1916
  %arrayidx214.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom213.i.i, !dbg !1916
  %198 = load i32, i32* %arrayidx214.i.i, align 4, !dbg !1916
  %xor215.i.i = xor i32 %xor210.i.i, %198, !dbg !1916
  %199 = load i32, i32* %t.i.i, align 4, !dbg !1916
  %shr216.i.i = lshr i32 %199, 10, !dbg !1916
  %and217.i.i = and i32 %shr216.i.i, 63, !dbg !1916
  %idxprom218.i.i = zext i32 %and217.i.i to i64, !dbg !1916
  %arrayidx219.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom218.i.i, !dbg !1916
  %200 = load i32, i32* %arrayidx219.i.i, align 4, !dbg !1916
  %xor220.i.i = xor i32 %xor215.i.i, %200, !dbg !1916
  %201 = load i32, i32* %t.i.i, align 4, !dbg !1916
  %shr221.i.i = lshr i32 %201, 18, !dbg !1916
  %and222.i.i = and i32 %shr221.i.i, 63, !dbg !1916
  %idxprom223.i.i = zext i32 %and222.i.i to i64, !dbg !1916
  %arrayidx224.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom223.i.i, !dbg !1916
  %202 = load i32, i32* %arrayidx224.i.i, align 4, !dbg !1916
  %xor225.i.i = xor i32 %xor220.i.i, %202, !dbg !1916
  %203 = load i32, i32* %t.i.i, align 4, !dbg !1916
  %shr226.i.i = lshr i32 %203, 26, !dbg !1916
  %idxprom228.i.i = zext i32 %shr226.i.i to i64, !dbg !1916
  %arrayidx229.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom228.i.i, !dbg !1916
  %204 = load i32, i32* %arrayidx229.i.i, align 4, !dbg !1916
  %xor230.i.i = xor i32 %xor225.i.i, %204, !dbg !1916
  %205 = load i32, i32* %r.i.i, align 4, !dbg !1916
  %xor231.i.i = xor i32 %205, %xor230.i.i, !dbg !1916
  store i32 %xor231.i.i, i32* %r.i.i, align 4, !dbg !1916
  %206 = load i32, i32* %r.i.i, align 4, !dbg !1917
  %207 = load i32*, i32** %s.i.i, align 8, !dbg !1917
  %arrayidx232.i.i = getelementptr inbounds i32, i32* %207, i64 8, !dbg !1917
  %208 = load i32, i32* %arrayidx232.i.i, align 4, !dbg !1917
  %xor233.i.i = xor i32 %206, %208, !dbg !1917
  store i32 %xor233.i.i, i32* %u.i.i, align 4, !dbg !1917
  %209 = load i32, i32* %r.i.i, align 4, !dbg !1917
  %210 = load i32*, i32** %s.i.i, align 8, !dbg !1917
  %arrayidx234.i.i = getelementptr inbounds i32, i32* %210, i64 9, !dbg !1917
  %211 = load i32, i32* %arrayidx234.i.i, align 4, !dbg !1917
  %xor235.i.i = xor i32 %209, %211, !dbg !1917
  store i32 %xor235.i.i, i32* %t.i.i, align 4, !dbg !1917
  %212 = load i32, i32* %t.i.i, align 4, !dbg !1743
  %213 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %212) #7, !dbg !1743, !srcloc !119
  store i32 %213, i32* %ret236.i.i, align 4, !dbg !1743
  %214 = load i32, i32* %ret236.i.i, align 4, !dbg !1743
  store i32 %214, i32* %tmp237.i.i, align 4, !dbg !1743
  %215 = load i32, i32* %tmp237.i.i, align 4, !dbg !1743
  store i32 %215, i32* %t.i.i, align 4, !dbg !1917
  %216 = load i32, i32* %u.i.i, align 4, !dbg !1917
  %shr238.i.i = lshr i32 %216, 2, !dbg !1917
  %and239.i.i = and i32 %shr238.i.i, 63, !dbg !1917
  %idxprom240.i.i = zext i32 %and239.i.i to i64, !dbg !1917
  %arrayidx241.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom240.i.i, !dbg !1917
  %217 = load i32, i32* %arrayidx241.i.i, align 4, !dbg !1917
  %218 = load i32, i32* %u.i.i, align 4, !dbg !1917
  %shr242.i.i = lshr i32 %218, 10, !dbg !1917
  %and243.i.i = and i32 %shr242.i.i, 63, !dbg !1917
  %idxprom244.i.i = zext i32 %and243.i.i to i64, !dbg !1917
  %arrayidx245.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom244.i.i, !dbg !1917
  %219 = load i32, i32* %arrayidx245.i.i, align 4, !dbg !1917
  %xor246.i.i = xor i32 %217, %219, !dbg !1917
  %220 = load i32, i32* %u.i.i, align 4, !dbg !1917
  %shr247.i.i = lshr i32 %220, 18, !dbg !1917
  %and248.i.i = and i32 %shr247.i.i, 63, !dbg !1917
  %idxprom249.i.i = zext i32 %and248.i.i to i64, !dbg !1917
  %arrayidx250.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom249.i.i, !dbg !1917
  %221 = load i32, i32* %arrayidx250.i.i, align 4, !dbg !1917
  %xor251.i.i = xor i32 %xor246.i.i, %221, !dbg !1917
  %222 = load i32, i32* %u.i.i, align 4, !dbg !1917
  %shr252.i.i = lshr i32 %222, 26, !dbg !1917
  %idxprom254.i.i = zext i32 %shr252.i.i to i64, !dbg !1917
  %arrayidx255.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom254.i.i, !dbg !1917
  %223 = load i32, i32* %arrayidx255.i.i, align 4, !dbg !1917
  %xor256.i.i = xor i32 %xor251.i.i, %223, !dbg !1917
  %224 = load i32, i32* %t.i.i, align 4, !dbg !1917
  %shr257.i.i = lshr i32 %224, 2, !dbg !1917
  %and258.i.i = and i32 %shr257.i.i, 63, !dbg !1917
  %idxprom259.i.i = zext i32 %and258.i.i to i64, !dbg !1917
  %arrayidx260.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom259.i.i, !dbg !1917
  %225 = load i32, i32* %arrayidx260.i.i, align 4, !dbg !1917
  %xor261.i.i = xor i32 %xor256.i.i, %225, !dbg !1917
  %226 = load i32, i32* %t.i.i, align 4, !dbg !1917
  %shr262.i.i = lshr i32 %226, 10, !dbg !1917
  %and263.i.i = and i32 %shr262.i.i, 63, !dbg !1917
  %idxprom264.i.i = zext i32 %and263.i.i to i64, !dbg !1917
  %arrayidx265.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom264.i.i, !dbg !1917
  %227 = load i32, i32* %arrayidx265.i.i, align 4, !dbg !1917
  %xor266.i.i = xor i32 %xor261.i.i, %227, !dbg !1917
  %228 = load i32, i32* %t.i.i, align 4, !dbg !1917
  %shr267.i.i = lshr i32 %228, 18, !dbg !1917
  %and268.i.i = and i32 %shr267.i.i, 63, !dbg !1917
  %idxprom269.i.i = zext i32 %and268.i.i to i64, !dbg !1917
  %arrayidx270.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom269.i.i, !dbg !1917
  %229 = load i32, i32* %arrayidx270.i.i, align 4, !dbg !1917
  %xor271.i.i = xor i32 %xor266.i.i, %229, !dbg !1917
  %230 = load i32, i32* %t.i.i, align 4, !dbg !1917
  %shr272.i.i = lshr i32 %230, 26, !dbg !1917
  %idxprom274.i.i = zext i32 %shr272.i.i to i64, !dbg !1917
  %arrayidx275.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom274.i.i, !dbg !1917
  %231 = load i32, i32* %arrayidx275.i.i, align 4, !dbg !1917
  %xor276.i.i = xor i32 %xor271.i.i, %231, !dbg !1917
  %232 = load i32, i32* %l.i.i, align 4, !dbg !1917
  %xor277.i.i = xor i32 %232, %xor276.i.i, !dbg !1917
  store i32 %xor277.i.i, i32* %l.i.i, align 4, !dbg !1917
  %233 = load i32, i32* %l.i.i, align 4, !dbg !1918
  %234 = load i32*, i32** %s.i.i, align 8, !dbg !1918
  %arrayidx278.i.i = getelementptr inbounds i32, i32* %234, i64 10, !dbg !1918
  %235 = load i32, i32* %arrayidx278.i.i, align 4, !dbg !1918
  %xor279.i.i = xor i32 %233, %235, !dbg !1918
  store i32 %xor279.i.i, i32* %u.i.i, align 4, !dbg !1918
  %236 = load i32, i32* %l.i.i, align 4, !dbg !1918
  %237 = load i32*, i32** %s.i.i, align 8, !dbg !1918
  %arrayidx280.i.i = getelementptr inbounds i32, i32* %237, i64 11, !dbg !1918
  %238 = load i32, i32* %arrayidx280.i.i, align 4, !dbg !1918
  %xor281.i.i = xor i32 %236, %238, !dbg !1918
  store i32 %xor281.i.i, i32* %t.i.i, align 4, !dbg !1918
  %239 = load i32, i32* %t.i.i, align 4, !dbg !1744
  %240 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %239) #7, !dbg !1744, !srcloc !125
  store i32 %240, i32* %ret282.i.i, align 4, !dbg !1744
  %241 = load i32, i32* %ret282.i.i, align 4, !dbg !1744
  store i32 %241, i32* %tmp283.i.i, align 4, !dbg !1744
  %242 = load i32, i32* %tmp283.i.i, align 4, !dbg !1744
  store i32 %242, i32* %t.i.i, align 4, !dbg !1918
  %243 = load i32, i32* %u.i.i, align 4, !dbg !1918
  %shr284.i.i = lshr i32 %243, 2, !dbg !1918
  %and285.i.i = and i32 %shr284.i.i, 63, !dbg !1918
  %idxprom286.i.i = zext i32 %and285.i.i to i64, !dbg !1918
  %arrayidx287.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom286.i.i, !dbg !1918
  %244 = load i32, i32* %arrayidx287.i.i, align 4, !dbg !1918
  %245 = load i32, i32* %u.i.i, align 4, !dbg !1918
  %shr288.i.i = lshr i32 %245, 10, !dbg !1918
  %and289.i.i = and i32 %shr288.i.i, 63, !dbg !1918
  %idxprom290.i.i = zext i32 %and289.i.i to i64, !dbg !1918
  %arrayidx291.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom290.i.i, !dbg !1918
  %246 = load i32, i32* %arrayidx291.i.i, align 4, !dbg !1918
  %xor292.i.i = xor i32 %244, %246, !dbg !1918
  %247 = load i32, i32* %u.i.i, align 4, !dbg !1918
  %shr293.i.i = lshr i32 %247, 18, !dbg !1918
  %and294.i.i = and i32 %shr293.i.i, 63, !dbg !1918
  %idxprom295.i.i = zext i32 %and294.i.i to i64, !dbg !1918
  %arrayidx296.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom295.i.i, !dbg !1918
  %248 = load i32, i32* %arrayidx296.i.i, align 4, !dbg !1918
  %xor297.i.i = xor i32 %xor292.i.i, %248, !dbg !1918
  %249 = load i32, i32* %u.i.i, align 4, !dbg !1918
  %shr298.i.i = lshr i32 %249, 26, !dbg !1918
  %idxprom300.i.i = zext i32 %shr298.i.i to i64, !dbg !1918
  %arrayidx301.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom300.i.i, !dbg !1918
  %250 = load i32, i32* %arrayidx301.i.i, align 4, !dbg !1918
  %xor302.i.i = xor i32 %xor297.i.i, %250, !dbg !1918
  %251 = load i32, i32* %t.i.i, align 4, !dbg !1918
  %shr303.i.i = lshr i32 %251, 2, !dbg !1918
  %and304.i.i = and i32 %shr303.i.i, 63, !dbg !1918
  %idxprom305.i.i = zext i32 %and304.i.i to i64, !dbg !1918
  %arrayidx306.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom305.i.i, !dbg !1918
  %252 = load i32, i32* %arrayidx306.i.i, align 4, !dbg !1918
  %xor307.i.i = xor i32 %xor302.i.i, %252, !dbg !1918
  %253 = load i32, i32* %t.i.i, align 4, !dbg !1918
  %shr308.i.i = lshr i32 %253, 10, !dbg !1918
  %and309.i.i = and i32 %shr308.i.i, 63, !dbg !1918
  %idxprom310.i.i = zext i32 %and309.i.i to i64, !dbg !1918
  %arrayidx311.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom310.i.i, !dbg !1918
  %254 = load i32, i32* %arrayidx311.i.i, align 4, !dbg !1918
  %xor312.i.i = xor i32 %xor307.i.i, %254, !dbg !1918
  %255 = load i32, i32* %t.i.i, align 4, !dbg !1918
  %shr313.i.i = lshr i32 %255, 18, !dbg !1918
  %and314.i.i = and i32 %shr313.i.i, 63, !dbg !1918
  %idxprom315.i.i = zext i32 %and314.i.i to i64, !dbg !1918
  %arrayidx316.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom315.i.i, !dbg !1918
  %256 = load i32, i32* %arrayidx316.i.i, align 4, !dbg !1918
  %xor317.i.i = xor i32 %xor312.i.i, %256, !dbg !1918
  %257 = load i32, i32* %t.i.i, align 4, !dbg !1918
  %shr318.i.i = lshr i32 %257, 26, !dbg !1918
  %idxprom320.i.i = zext i32 %shr318.i.i to i64, !dbg !1918
  %arrayidx321.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom320.i.i, !dbg !1918
  %258 = load i32, i32* %arrayidx321.i.i, align 4, !dbg !1918
  %xor322.i.i = xor i32 %xor317.i.i, %258, !dbg !1918
  %259 = load i32, i32* %r.i.i, align 4, !dbg !1918
  %xor323.i.i = xor i32 %259, %xor322.i.i, !dbg !1918
  store i32 %xor323.i.i, i32* %r.i.i, align 4, !dbg !1918
  %260 = load i32, i32* %r.i.i, align 4, !dbg !1919
  %261 = load i32*, i32** %s.i.i, align 8, !dbg !1919
  %arrayidx324.i.i = getelementptr inbounds i32, i32* %261, i64 12, !dbg !1919
  %262 = load i32, i32* %arrayidx324.i.i, align 4, !dbg !1919
  %xor325.i.i = xor i32 %260, %262, !dbg !1919
  store i32 %xor325.i.i, i32* %u.i.i, align 4, !dbg !1919
  %263 = load i32, i32* %r.i.i, align 4, !dbg !1919
  %264 = load i32*, i32** %s.i.i, align 8, !dbg !1919
  %arrayidx326.i.i = getelementptr inbounds i32, i32* %264, i64 13, !dbg !1919
  %265 = load i32, i32* %arrayidx326.i.i, align 4, !dbg !1919
  %xor327.i.i = xor i32 %263, %265, !dbg !1919
  store i32 %xor327.i.i, i32* %t.i.i, align 4, !dbg !1919
  %266 = load i32, i32* %t.i.i, align 4, !dbg !1745
  %267 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %266) #7, !dbg !1745, !srcloc !131
  store i32 %267, i32* %ret328.i.i, align 4, !dbg !1745
  %268 = load i32, i32* %ret328.i.i, align 4, !dbg !1745
  store i32 %268, i32* %tmp329.i.i, align 4, !dbg !1745
  %269 = load i32, i32* %tmp329.i.i, align 4, !dbg !1745
  store i32 %269, i32* %t.i.i, align 4, !dbg !1919
  %270 = load i32, i32* %u.i.i, align 4, !dbg !1919
  %shr330.i.i = lshr i32 %270, 2, !dbg !1919
  %and331.i.i = and i32 %shr330.i.i, 63, !dbg !1919
  %idxprom332.i.i = zext i32 %and331.i.i to i64, !dbg !1919
  %arrayidx333.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom332.i.i, !dbg !1919
  %271 = load i32, i32* %arrayidx333.i.i, align 4, !dbg !1919
  %272 = load i32, i32* %u.i.i, align 4, !dbg !1919
  %shr334.i.i = lshr i32 %272, 10, !dbg !1919
  %and335.i.i = and i32 %shr334.i.i, 63, !dbg !1919
  %idxprom336.i.i = zext i32 %and335.i.i to i64, !dbg !1919
  %arrayidx337.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom336.i.i, !dbg !1919
  %273 = load i32, i32* %arrayidx337.i.i, align 4, !dbg !1919
  %xor338.i.i = xor i32 %271, %273, !dbg !1919
  %274 = load i32, i32* %u.i.i, align 4, !dbg !1919
  %shr339.i.i = lshr i32 %274, 18, !dbg !1919
  %and340.i.i = and i32 %shr339.i.i, 63, !dbg !1919
  %idxprom341.i.i = zext i32 %and340.i.i to i64, !dbg !1919
  %arrayidx342.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom341.i.i, !dbg !1919
  %275 = load i32, i32* %arrayidx342.i.i, align 4, !dbg !1919
  %xor343.i.i = xor i32 %xor338.i.i, %275, !dbg !1919
  %276 = load i32, i32* %u.i.i, align 4, !dbg !1919
  %shr344.i.i = lshr i32 %276, 26, !dbg !1919
  %idxprom346.i.i = zext i32 %shr344.i.i to i64, !dbg !1919
  %arrayidx347.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom346.i.i, !dbg !1919
  %277 = load i32, i32* %arrayidx347.i.i, align 4, !dbg !1919
  %xor348.i.i = xor i32 %xor343.i.i, %277, !dbg !1919
  %278 = load i32, i32* %t.i.i, align 4, !dbg !1919
  %shr349.i.i = lshr i32 %278, 2, !dbg !1919
  %and350.i.i = and i32 %shr349.i.i, 63, !dbg !1919
  %idxprom351.i.i = zext i32 %and350.i.i to i64, !dbg !1919
  %arrayidx352.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom351.i.i, !dbg !1919
  %279 = load i32, i32* %arrayidx352.i.i, align 4, !dbg !1919
  %xor353.i.i = xor i32 %xor348.i.i, %279, !dbg !1919
  %280 = load i32, i32* %t.i.i, align 4, !dbg !1919
  %shr354.i.i = lshr i32 %280, 10, !dbg !1919
  %and355.i.i = and i32 %shr354.i.i, 63, !dbg !1919
  %idxprom356.i.i = zext i32 %and355.i.i to i64, !dbg !1919
  %arrayidx357.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom356.i.i, !dbg !1919
  %281 = load i32, i32* %arrayidx357.i.i, align 4, !dbg !1919
  %xor358.i.i = xor i32 %xor353.i.i, %281, !dbg !1919
  %282 = load i32, i32* %t.i.i, align 4, !dbg !1919
  %shr359.i.i = lshr i32 %282, 18, !dbg !1919
  %and360.i.i = and i32 %shr359.i.i, 63, !dbg !1919
  %idxprom361.i.i = zext i32 %and360.i.i to i64, !dbg !1919
  %arrayidx362.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom361.i.i, !dbg !1919
  %283 = load i32, i32* %arrayidx362.i.i, align 4, !dbg !1919
  %xor363.i.i = xor i32 %xor358.i.i, %283, !dbg !1919
  %284 = load i32, i32* %t.i.i, align 4, !dbg !1919
  %shr364.i.i = lshr i32 %284, 26, !dbg !1919
  %idxprom366.i.i = zext i32 %shr364.i.i to i64, !dbg !1919
  %arrayidx367.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom366.i.i, !dbg !1919
  %285 = load i32, i32* %arrayidx367.i.i, align 4, !dbg !1919
  %xor368.i.i = xor i32 %xor363.i.i, %285, !dbg !1919
  %286 = load i32, i32* %l.i.i, align 4, !dbg !1919
  %xor369.i.i = xor i32 %286, %xor368.i.i, !dbg !1919
  store i32 %xor369.i.i, i32* %l.i.i, align 4, !dbg !1919
  %287 = load i32, i32* %l.i.i, align 4, !dbg !1920
  %288 = load i32*, i32** %s.i.i, align 8, !dbg !1920
  %arrayidx370.i.i = getelementptr inbounds i32, i32* %288, i64 14, !dbg !1920
  %289 = load i32, i32* %arrayidx370.i.i, align 4, !dbg !1920
  %xor371.i.i = xor i32 %287, %289, !dbg !1920
  store i32 %xor371.i.i, i32* %u.i.i, align 4, !dbg !1920
  %290 = load i32, i32* %l.i.i, align 4, !dbg !1920
  %291 = load i32*, i32** %s.i.i, align 8, !dbg !1920
  %arrayidx372.i.i = getelementptr inbounds i32, i32* %291, i64 15, !dbg !1920
  %292 = load i32, i32* %arrayidx372.i.i, align 4, !dbg !1920
  %xor373.i.i = xor i32 %290, %292, !dbg !1920
  store i32 %xor373.i.i, i32* %t.i.i, align 4, !dbg !1920
  %293 = load i32, i32* %t.i.i, align 4, !dbg !1746
  %294 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %293) #7, !dbg !1746, !srcloc !137
  store i32 %294, i32* %ret374.i.i, align 4, !dbg !1746
  %295 = load i32, i32* %ret374.i.i, align 4, !dbg !1746
  store i32 %295, i32* %tmp375.i.i, align 4, !dbg !1746
  %296 = load i32, i32* %tmp375.i.i, align 4, !dbg !1746
  store i32 %296, i32* %t.i.i, align 4, !dbg !1920
  %297 = load i32, i32* %u.i.i, align 4, !dbg !1920
  %shr376.i.i = lshr i32 %297, 2, !dbg !1920
  %and377.i.i = and i32 %shr376.i.i, 63, !dbg !1920
  %idxprom378.i.i = zext i32 %and377.i.i to i64, !dbg !1920
  %arrayidx379.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom378.i.i, !dbg !1920
  %298 = load i32, i32* %arrayidx379.i.i, align 4, !dbg !1920
  %299 = load i32, i32* %u.i.i, align 4, !dbg !1920
  %shr380.i.i = lshr i32 %299, 10, !dbg !1920
  %and381.i.i = and i32 %shr380.i.i, 63, !dbg !1920
  %idxprom382.i.i = zext i32 %and381.i.i to i64, !dbg !1920
  %arrayidx383.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom382.i.i, !dbg !1920
  %300 = load i32, i32* %arrayidx383.i.i, align 4, !dbg !1920
  %xor384.i.i = xor i32 %298, %300, !dbg !1920
  %301 = load i32, i32* %u.i.i, align 4, !dbg !1920
  %shr385.i.i = lshr i32 %301, 18, !dbg !1920
  %and386.i.i = and i32 %shr385.i.i, 63, !dbg !1920
  %idxprom387.i.i = zext i32 %and386.i.i to i64, !dbg !1920
  %arrayidx388.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom387.i.i, !dbg !1920
  %302 = load i32, i32* %arrayidx388.i.i, align 4, !dbg !1920
  %xor389.i.i = xor i32 %xor384.i.i, %302, !dbg !1920
  %303 = load i32, i32* %u.i.i, align 4, !dbg !1920
  %shr390.i.i = lshr i32 %303, 26, !dbg !1920
  %idxprom392.i.i = zext i32 %shr390.i.i to i64, !dbg !1920
  %arrayidx393.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom392.i.i, !dbg !1920
  %304 = load i32, i32* %arrayidx393.i.i, align 4, !dbg !1920
  %xor394.i.i = xor i32 %xor389.i.i, %304, !dbg !1920
  %305 = load i32, i32* %t.i.i, align 4, !dbg !1920
  %shr395.i.i = lshr i32 %305, 2, !dbg !1920
  %and396.i.i = and i32 %shr395.i.i, 63, !dbg !1920
  %idxprom397.i.i = zext i32 %and396.i.i to i64, !dbg !1920
  %arrayidx398.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom397.i.i, !dbg !1920
  %306 = load i32, i32* %arrayidx398.i.i, align 4, !dbg !1920
  %xor399.i.i = xor i32 %xor394.i.i, %306, !dbg !1920
  %307 = load i32, i32* %t.i.i, align 4, !dbg !1920
  %shr400.i.i = lshr i32 %307, 10, !dbg !1920
  %and401.i.i = and i32 %shr400.i.i, 63, !dbg !1920
  %idxprom402.i.i = zext i32 %and401.i.i to i64, !dbg !1920
  %arrayidx403.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom402.i.i, !dbg !1920
  %308 = load i32, i32* %arrayidx403.i.i, align 4, !dbg !1920
  %xor404.i.i = xor i32 %xor399.i.i, %308, !dbg !1920
  %309 = load i32, i32* %t.i.i, align 4, !dbg !1920
  %shr405.i.i = lshr i32 %309, 18, !dbg !1920
  %and406.i.i = and i32 %shr405.i.i, 63, !dbg !1920
  %idxprom407.i.i = zext i32 %and406.i.i to i64, !dbg !1920
  %arrayidx408.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom407.i.i, !dbg !1920
  %310 = load i32, i32* %arrayidx408.i.i, align 4, !dbg !1920
  %xor409.i.i = xor i32 %xor404.i.i, %310, !dbg !1920
  %311 = load i32, i32* %t.i.i, align 4, !dbg !1920
  %shr410.i.i = lshr i32 %311, 26, !dbg !1920
  %idxprom412.i.i = zext i32 %shr410.i.i to i64, !dbg !1920
  %arrayidx413.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom412.i.i, !dbg !1920
  %312 = load i32, i32* %arrayidx413.i.i, align 4, !dbg !1920
  %xor414.i.i = xor i32 %xor409.i.i, %312, !dbg !1920
  %313 = load i32, i32* %r.i.i, align 4, !dbg !1920
  %xor415.i.i = xor i32 %313, %xor414.i.i, !dbg !1920
  store i32 %xor415.i.i, i32* %r.i.i, align 4, !dbg !1920
  %314 = load i32, i32* %r.i.i, align 4, !dbg !1921
  %315 = load i32*, i32** %s.i.i, align 8, !dbg !1921
  %arrayidx416.i.i = getelementptr inbounds i32, i32* %315, i64 16, !dbg !1921
  %316 = load i32, i32* %arrayidx416.i.i, align 4, !dbg !1921
  %xor417.i.i = xor i32 %314, %316, !dbg !1921
  store i32 %xor417.i.i, i32* %u.i.i, align 4, !dbg !1921
  %317 = load i32, i32* %r.i.i, align 4, !dbg !1921
  %318 = load i32*, i32** %s.i.i, align 8, !dbg !1921
  %arrayidx418.i.i = getelementptr inbounds i32, i32* %318, i64 17, !dbg !1921
  %319 = load i32, i32* %arrayidx418.i.i, align 4, !dbg !1921
  %xor419.i.i = xor i32 %317, %319, !dbg !1921
  store i32 %xor419.i.i, i32* %t.i.i, align 4, !dbg !1921
  %320 = load i32, i32* %t.i.i, align 4, !dbg !1747
  %321 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %320) #7, !dbg !1747, !srcloc !143
  store i32 %321, i32* %ret420.i.i, align 4, !dbg !1747
  %322 = load i32, i32* %ret420.i.i, align 4, !dbg !1747
  store i32 %322, i32* %tmp421.i.i, align 4, !dbg !1747
  %323 = load i32, i32* %tmp421.i.i, align 4, !dbg !1747
  store i32 %323, i32* %t.i.i, align 4, !dbg !1921
  %324 = load i32, i32* %u.i.i, align 4, !dbg !1921
  %shr422.i.i = lshr i32 %324, 2, !dbg !1921
  %and423.i.i = and i32 %shr422.i.i, 63, !dbg !1921
  %idxprom424.i.i = zext i32 %and423.i.i to i64, !dbg !1921
  %arrayidx425.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom424.i.i, !dbg !1921
  %325 = load i32, i32* %arrayidx425.i.i, align 4, !dbg !1921
  %326 = load i32, i32* %u.i.i, align 4, !dbg !1921
  %shr426.i.i = lshr i32 %326, 10, !dbg !1921
  %and427.i.i = and i32 %shr426.i.i, 63, !dbg !1921
  %idxprom428.i.i = zext i32 %and427.i.i to i64, !dbg !1921
  %arrayidx429.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom428.i.i, !dbg !1921
  %327 = load i32, i32* %arrayidx429.i.i, align 4, !dbg !1921
  %xor430.i.i = xor i32 %325, %327, !dbg !1921
  %328 = load i32, i32* %u.i.i, align 4, !dbg !1921
  %shr431.i.i = lshr i32 %328, 18, !dbg !1921
  %and432.i.i = and i32 %shr431.i.i, 63, !dbg !1921
  %idxprom433.i.i = zext i32 %and432.i.i to i64, !dbg !1921
  %arrayidx434.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom433.i.i, !dbg !1921
  %329 = load i32, i32* %arrayidx434.i.i, align 4, !dbg !1921
  %xor435.i.i = xor i32 %xor430.i.i, %329, !dbg !1921
  %330 = load i32, i32* %u.i.i, align 4, !dbg !1921
  %shr436.i.i = lshr i32 %330, 26, !dbg !1921
  %idxprom438.i.i = zext i32 %shr436.i.i to i64, !dbg !1921
  %arrayidx439.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom438.i.i, !dbg !1921
  %331 = load i32, i32* %arrayidx439.i.i, align 4, !dbg !1921
  %xor440.i.i = xor i32 %xor435.i.i, %331, !dbg !1921
  %332 = load i32, i32* %t.i.i, align 4, !dbg !1921
  %shr441.i.i = lshr i32 %332, 2, !dbg !1921
  %and442.i.i = and i32 %shr441.i.i, 63, !dbg !1921
  %idxprom443.i.i = zext i32 %and442.i.i to i64, !dbg !1921
  %arrayidx444.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom443.i.i, !dbg !1921
  %333 = load i32, i32* %arrayidx444.i.i, align 4, !dbg !1921
  %xor445.i.i = xor i32 %xor440.i.i, %333, !dbg !1921
  %334 = load i32, i32* %t.i.i, align 4, !dbg !1921
  %shr446.i.i = lshr i32 %334, 10, !dbg !1921
  %and447.i.i = and i32 %shr446.i.i, 63, !dbg !1921
  %idxprom448.i.i = zext i32 %and447.i.i to i64, !dbg !1921
  %arrayidx449.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom448.i.i, !dbg !1921
  %335 = load i32, i32* %arrayidx449.i.i, align 4, !dbg !1921
  %xor450.i.i = xor i32 %xor445.i.i, %335, !dbg !1921
  %336 = load i32, i32* %t.i.i, align 4, !dbg !1921
  %shr451.i.i = lshr i32 %336, 18, !dbg !1921
  %and452.i.i = and i32 %shr451.i.i, 63, !dbg !1921
  %idxprom453.i.i = zext i32 %and452.i.i to i64, !dbg !1921
  %arrayidx454.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom453.i.i, !dbg !1921
  %337 = load i32, i32* %arrayidx454.i.i, align 4, !dbg !1921
  %xor455.i.i = xor i32 %xor450.i.i, %337, !dbg !1921
  %338 = load i32, i32* %t.i.i, align 4, !dbg !1921
  %shr456.i.i = lshr i32 %338, 26, !dbg !1921
  %idxprom458.i.i = zext i32 %shr456.i.i to i64, !dbg !1921
  %arrayidx459.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom458.i.i, !dbg !1921
  %339 = load i32, i32* %arrayidx459.i.i, align 4, !dbg !1921
  %xor460.i.i = xor i32 %xor455.i.i, %339, !dbg !1921
  %340 = load i32, i32* %l.i.i, align 4, !dbg !1921
  %xor461.i.i = xor i32 %340, %xor460.i.i, !dbg !1921
  store i32 %xor461.i.i, i32* %l.i.i, align 4, !dbg !1921
  %341 = load i32, i32* %l.i.i, align 4, !dbg !1922
  %342 = load i32*, i32** %s.i.i, align 8, !dbg !1922
  %arrayidx462.i.i = getelementptr inbounds i32, i32* %342, i64 18, !dbg !1922
  %343 = load i32, i32* %arrayidx462.i.i, align 4, !dbg !1922
  %xor463.i.i = xor i32 %341, %343, !dbg !1922
  store i32 %xor463.i.i, i32* %u.i.i, align 4, !dbg !1922
  %344 = load i32, i32* %l.i.i, align 4, !dbg !1922
  %345 = load i32*, i32** %s.i.i, align 8, !dbg !1922
  %arrayidx464.i.i = getelementptr inbounds i32, i32* %345, i64 19, !dbg !1922
  %346 = load i32, i32* %arrayidx464.i.i, align 4, !dbg !1922
  %xor465.i.i = xor i32 %344, %346, !dbg !1922
  store i32 %xor465.i.i, i32* %t.i.i, align 4, !dbg !1922
  %347 = load i32, i32* %t.i.i, align 4, !dbg !1748
  %348 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %347) #7, !dbg !1748, !srcloc !149
  store i32 %348, i32* %ret466.i.i, align 4, !dbg !1748
  %349 = load i32, i32* %ret466.i.i, align 4, !dbg !1748
  store i32 %349, i32* %tmp467.i.i, align 4, !dbg !1748
  %350 = load i32, i32* %tmp467.i.i, align 4, !dbg !1748
  store i32 %350, i32* %t.i.i, align 4, !dbg !1922
  %351 = load i32, i32* %u.i.i, align 4, !dbg !1922
  %shr468.i.i = lshr i32 %351, 2, !dbg !1922
  %and469.i.i = and i32 %shr468.i.i, 63, !dbg !1922
  %idxprom470.i.i = zext i32 %and469.i.i to i64, !dbg !1922
  %arrayidx471.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom470.i.i, !dbg !1922
  %352 = load i32, i32* %arrayidx471.i.i, align 4, !dbg !1922
  %353 = load i32, i32* %u.i.i, align 4, !dbg !1922
  %shr472.i.i = lshr i32 %353, 10, !dbg !1922
  %and473.i.i = and i32 %shr472.i.i, 63, !dbg !1922
  %idxprom474.i.i = zext i32 %and473.i.i to i64, !dbg !1922
  %arrayidx475.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom474.i.i, !dbg !1922
  %354 = load i32, i32* %arrayidx475.i.i, align 4, !dbg !1922
  %xor476.i.i = xor i32 %352, %354, !dbg !1922
  %355 = load i32, i32* %u.i.i, align 4, !dbg !1922
  %shr477.i.i = lshr i32 %355, 18, !dbg !1922
  %and478.i.i = and i32 %shr477.i.i, 63, !dbg !1922
  %idxprom479.i.i = zext i32 %and478.i.i to i64, !dbg !1922
  %arrayidx480.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom479.i.i, !dbg !1922
  %356 = load i32, i32* %arrayidx480.i.i, align 4, !dbg !1922
  %xor481.i.i = xor i32 %xor476.i.i, %356, !dbg !1922
  %357 = load i32, i32* %u.i.i, align 4, !dbg !1922
  %shr482.i.i = lshr i32 %357, 26, !dbg !1922
  %idxprom484.i.i = zext i32 %shr482.i.i to i64, !dbg !1922
  %arrayidx485.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom484.i.i, !dbg !1922
  %358 = load i32, i32* %arrayidx485.i.i, align 4, !dbg !1922
  %xor486.i.i = xor i32 %xor481.i.i, %358, !dbg !1922
  %359 = load i32, i32* %t.i.i, align 4, !dbg !1922
  %shr487.i.i = lshr i32 %359, 2, !dbg !1922
  %and488.i.i = and i32 %shr487.i.i, 63, !dbg !1922
  %idxprom489.i.i = zext i32 %and488.i.i to i64, !dbg !1922
  %arrayidx490.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom489.i.i, !dbg !1922
  %360 = load i32, i32* %arrayidx490.i.i, align 4, !dbg !1922
  %xor491.i.i = xor i32 %xor486.i.i, %360, !dbg !1922
  %361 = load i32, i32* %t.i.i, align 4, !dbg !1922
  %shr492.i.i = lshr i32 %361, 10, !dbg !1922
  %and493.i.i = and i32 %shr492.i.i, 63, !dbg !1922
  %idxprom494.i.i = zext i32 %and493.i.i to i64, !dbg !1922
  %arrayidx495.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom494.i.i, !dbg !1922
  %362 = load i32, i32* %arrayidx495.i.i, align 4, !dbg !1922
  %xor496.i.i = xor i32 %xor491.i.i, %362, !dbg !1922
  %363 = load i32, i32* %t.i.i, align 4, !dbg !1922
  %shr497.i.i = lshr i32 %363, 18, !dbg !1922
  %and498.i.i = and i32 %shr497.i.i, 63, !dbg !1922
  %idxprom499.i.i = zext i32 %and498.i.i to i64, !dbg !1922
  %arrayidx500.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom499.i.i, !dbg !1922
  %364 = load i32, i32* %arrayidx500.i.i, align 4, !dbg !1922
  %xor501.i.i = xor i32 %xor496.i.i, %364, !dbg !1922
  %365 = load i32, i32* %t.i.i, align 4, !dbg !1922
  %shr502.i.i = lshr i32 %365, 26, !dbg !1922
  %idxprom504.i.i = zext i32 %shr502.i.i to i64, !dbg !1922
  %arrayidx505.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom504.i.i, !dbg !1922
  %366 = load i32, i32* %arrayidx505.i.i, align 4, !dbg !1922
  %xor506.i.i = xor i32 %xor501.i.i, %366, !dbg !1922
  %367 = load i32, i32* %r.i.i, align 4, !dbg !1922
  %xor507.i.i = xor i32 %367, %xor506.i.i, !dbg !1922
  store i32 %xor507.i.i, i32* %r.i.i, align 4, !dbg !1922
  %368 = load i32, i32* %r.i.i, align 4, !dbg !1923
  %369 = load i32*, i32** %s.i.i, align 8, !dbg !1923
  %arrayidx508.i.i = getelementptr inbounds i32, i32* %369, i64 20, !dbg !1923
  %370 = load i32, i32* %arrayidx508.i.i, align 4, !dbg !1923
  %xor509.i.i = xor i32 %368, %370, !dbg !1923
  store i32 %xor509.i.i, i32* %u.i.i, align 4, !dbg !1923
  %371 = load i32, i32* %r.i.i, align 4, !dbg !1923
  %372 = load i32*, i32** %s.i.i, align 8, !dbg !1923
  %arrayidx510.i.i = getelementptr inbounds i32, i32* %372, i64 21, !dbg !1923
  %373 = load i32, i32* %arrayidx510.i.i, align 4, !dbg !1923
  %xor511.i.i = xor i32 %371, %373, !dbg !1923
  store i32 %xor511.i.i, i32* %t.i.i, align 4, !dbg !1923
  %374 = load i32, i32* %t.i.i, align 4, !dbg !1749
  %375 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %374) #7, !dbg !1749, !srcloc !155
  store i32 %375, i32* %ret512.i.i, align 4, !dbg !1749
  %376 = load i32, i32* %ret512.i.i, align 4, !dbg !1749
  store i32 %376, i32* %tmp513.i.i, align 4, !dbg !1749
  %377 = load i32, i32* %tmp513.i.i, align 4, !dbg !1749
  store i32 %377, i32* %t.i.i, align 4, !dbg !1923
  %378 = load i32, i32* %u.i.i, align 4, !dbg !1923
  %shr514.i.i = lshr i32 %378, 2, !dbg !1923
  %and515.i.i = and i32 %shr514.i.i, 63, !dbg !1923
  %idxprom516.i.i = zext i32 %and515.i.i to i64, !dbg !1923
  %arrayidx517.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom516.i.i, !dbg !1923
  %379 = load i32, i32* %arrayidx517.i.i, align 4, !dbg !1923
  %380 = load i32, i32* %u.i.i, align 4, !dbg !1923
  %shr518.i.i = lshr i32 %380, 10, !dbg !1923
  %and519.i.i = and i32 %shr518.i.i, 63, !dbg !1923
  %idxprom520.i.i = zext i32 %and519.i.i to i64, !dbg !1923
  %arrayidx521.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom520.i.i, !dbg !1923
  %381 = load i32, i32* %arrayidx521.i.i, align 4, !dbg !1923
  %xor522.i.i = xor i32 %379, %381, !dbg !1923
  %382 = load i32, i32* %u.i.i, align 4, !dbg !1923
  %shr523.i.i = lshr i32 %382, 18, !dbg !1923
  %and524.i.i = and i32 %shr523.i.i, 63, !dbg !1923
  %idxprom525.i.i = zext i32 %and524.i.i to i64, !dbg !1923
  %arrayidx526.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom525.i.i, !dbg !1923
  %383 = load i32, i32* %arrayidx526.i.i, align 4, !dbg !1923
  %xor527.i.i = xor i32 %xor522.i.i, %383, !dbg !1923
  %384 = load i32, i32* %u.i.i, align 4, !dbg !1923
  %shr528.i.i = lshr i32 %384, 26, !dbg !1923
  %idxprom530.i.i = zext i32 %shr528.i.i to i64, !dbg !1923
  %arrayidx531.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom530.i.i, !dbg !1923
  %385 = load i32, i32* %arrayidx531.i.i, align 4, !dbg !1923
  %xor532.i.i = xor i32 %xor527.i.i, %385, !dbg !1923
  %386 = load i32, i32* %t.i.i, align 4, !dbg !1923
  %shr533.i.i = lshr i32 %386, 2, !dbg !1923
  %and534.i.i = and i32 %shr533.i.i, 63, !dbg !1923
  %idxprom535.i.i = zext i32 %and534.i.i to i64, !dbg !1923
  %arrayidx536.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom535.i.i, !dbg !1923
  %387 = load i32, i32* %arrayidx536.i.i, align 4, !dbg !1923
  %xor537.i.i = xor i32 %xor532.i.i, %387, !dbg !1923
  %388 = load i32, i32* %t.i.i, align 4, !dbg !1923
  %shr538.i.i = lshr i32 %388, 10, !dbg !1923
  %and539.i.i = and i32 %shr538.i.i, 63, !dbg !1923
  %idxprom540.i.i = zext i32 %and539.i.i to i64, !dbg !1923
  %arrayidx541.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom540.i.i, !dbg !1923
  %389 = load i32, i32* %arrayidx541.i.i, align 4, !dbg !1923
  %xor542.i.i = xor i32 %xor537.i.i, %389, !dbg !1923
  %390 = load i32, i32* %t.i.i, align 4, !dbg !1923
  %shr543.i.i = lshr i32 %390, 18, !dbg !1923
  %and544.i.i = and i32 %shr543.i.i, 63, !dbg !1923
  %idxprom545.i.i = zext i32 %and544.i.i to i64, !dbg !1923
  %arrayidx546.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom545.i.i, !dbg !1923
  %391 = load i32, i32* %arrayidx546.i.i, align 4, !dbg !1923
  %xor547.i.i = xor i32 %xor542.i.i, %391, !dbg !1923
  %392 = load i32, i32* %t.i.i, align 4, !dbg !1923
  %shr548.i.i = lshr i32 %392, 26, !dbg !1923
  %idxprom550.i.i = zext i32 %shr548.i.i to i64, !dbg !1923
  %arrayidx551.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom550.i.i, !dbg !1923
  %393 = load i32, i32* %arrayidx551.i.i, align 4, !dbg !1923
  %xor552.i.i = xor i32 %xor547.i.i, %393, !dbg !1923
  %394 = load i32, i32* %l.i.i, align 4, !dbg !1923
  %xor553.i.i = xor i32 %394, %xor552.i.i, !dbg !1923
  store i32 %xor553.i.i, i32* %l.i.i, align 4, !dbg !1923
  %395 = load i32, i32* %l.i.i, align 4, !dbg !1924
  %396 = load i32*, i32** %s.i.i, align 8, !dbg !1924
  %arrayidx554.i.i = getelementptr inbounds i32, i32* %396, i64 22, !dbg !1924
  %397 = load i32, i32* %arrayidx554.i.i, align 4, !dbg !1924
  %xor555.i.i = xor i32 %395, %397, !dbg !1924
  store i32 %xor555.i.i, i32* %u.i.i, align 4, !dbg !1924
  %398 = load i32, i32* %l.i.i, align 4, !dbg !1924
  %399 = load i32*, i32** %s.i.i, align 8, !dbg !1924
  %arrayidx556.i.i = getelementptr inbounds i32, i32* %399, i64 23, !dbg !1924
  %400 = load i32, i32* %arrayidx556.i.i, align 4, !dbg !1924
  %xor557.i.i = xor i32 %398, %400, !dbg !1924
  store i32 %xor557.i.i, i32* %t.i.i, align 4, !dbg !1924
  %401 = load i32, i32* %t.i.i, align 4, !dbg !1750
  %402 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %401) #7, !dbg !1750, !srcloc !161
  store i32 %402, i32* %ret558.i.i, align 4, !dbg !1750
  %403 = load i32, i32* %ret558.i.i, align 4, !dbg !1750
  store i32 %403, i32* %tmp559.i.i, align 4, !dbg !1750
  %404 = load i32, i32* %tmp559.i.i, align 4, !dbg !1750
  store i32 %404, i32* %t.i.i, align 4, !dbg !1924
  %405 = load i32, i32* %u.i.i, align 4, !dbg !1924
  %shr560.i.i = lshr i32 %405, 2, !dbg !1924
  %and561.i.i = and i32 %shr560.i.i, 63, !dbg !1924
  %idxprom562.i.i = zext i32 %and561.i.i to i64, !dbg !1924
  %arrayidx563.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom562.i.i, !dbg !1924
  %406 = load i32, i32* %arrayidx563.i.i, align 4, !dbg !1924
  %407 = load i32, i32* %u.i.i, align 4, !dbg !1924
  %shr564.i.i = lshr i32 %407, 10, !dbg !1924
  %and565.i.i = and i32 %shr564.i.i, 63, !dbg !1924
  %idxprom566.i.i = zext i32 %and565.i.i to i64, !dbg !1924
  %arrayidx567.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom566.i.i, !dbg !1924
  %408 = load i32, i32* %arrayidx567.i.i, align 4, !dbg !1924
  %xor568.i.i = xor i32 %406, %408, !dbg !1924
  %409 = load i32, i32* %u.i.i, align 4, !dbg !1924
  %shr569.i.i = lshr i32 %409, 18, !dbg !1924
  %and570.i.i = and i32 %shr569.i.i, 63, !dbg !1924
  %idxprom571.i.i = zext i32 %and570.i.i to i64, !dbg !1924
  %arrayidx572.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom571.i.i, !dbg !1924
  %410 = load i32, i32* %arrayidx572.i.i, align 4, !dbg !1924
  %xor573.i.i = xor i32 %xor568.i.i, %410, !dbg !1924
  %411 = load i32, i32* %u.i.i, align 4, !dbg !1924
  %shr574.i.i = lshr i32 %411, 26, !dbg !1924
  %idxprom576.i.i = zext i32 %shr574.i.i to i64, !dbg !1924
  %arrayidx577.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom576.i.i, !dbg !1924
  %412 = load i32, i32* %arrayidx577.i.i, align 4, !dbg !1924
  %xor578.i.i = xor i32 %xor573.i.i, %412, !dbg !1924
  %413 = load i32, i32* %t.i.i, align 4, !dbg !1924
  %shr579.i.i = lshr i32 %413, 2, !dbg !1924
  %and580.i.i = and i32 %shr579.i.i, 63, !dbg !1924
  %idxprom581.i.i = zext i32 %and580.i.i to i64, !dbg !1924
  %arrayidx582.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom581.i.i, !dbg !1924
  %414 = load i32, i32* %arrayidx582.i.i, align 4, !dbg !1924
  %xor583.i.i = xor i32 %xor578.i.i, %414, !dbg !1924
  %415 = load i32, i32* %t.i.i, align 4, !dbg !1924
  %shr584.i.i = lshr i32 %415, 10, !dbg !1924
  %and585.i.i = and i32 %shr584.i.i, 63, !dbg !1924
  %idxprom586.i.i = zext i32 %and585.i.i to i64, !dbg !1924
  %arrayidx587.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom586.i.i, !dbg !1924
  %416 = load i32, i32* %arrayidx587.i.i, align 4, !dbg !1924
  %xor588.i.i = xor i32 %xor583.i.i, %416, !dbg !1924
  %417 = load i32, i32* %t.i.i, align 4, !dbg !1924
  %shr589.i.i = lshr i32 %417, 18, !dbg !1924
  %and590.i.i = and i32 %shr589.i.i, 63, !dbg !1924
  %idxprom591.i.i = zext i32 %and590.i.i to i64, !dbg !1924
  %arrayidx592.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom591.i.i, !dbg !1924
  %418 = load i32, i32* %arrayidx592.i.i, align 4, !dbg !1924
  %xor593.i.i = xor i32 %xor588.i.i, %418, !dbg !1924
  %419 = load i32, i32* %t.i.i, align 4, !dbg !1924
  %shr594.i.i = lshr i32 %419, 26, !dbg !1924
  %idxprom596.i.i = zext i32 %shr594.i.i to i64, !dbg !1924
  %arrayidx597.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom596.i.i, !dbg !1924
  %420 = load i32, i32* %arrayidx597.i.i, align 4, !dbg !1924
  %xor598.i.i = xor i32 %xor593.i.i, %420, !dbg !1924
  %421 = load i32, i32* %r.i.i, align 4, !dbg !1924
  %xor599.i.i = xor i32 %421, %xor598.i.i, !dbg !1924
  store i32 %xor599.i.i, i32* %r.i.i, align 4, !dbg !1924
  %422 = load i32, i32* %r.i.i, align 4, !dbg !1925
  %423 = load i32*, i32** %s.i.i, align 8, !dbg !1925
  %arrayidx600.i.i = getelementptr inbounds i32, i32* %423, i64 24, !dbg !1925
  %424 = load i32, i32* %arrayidx600.i.i, align 4, !dbg !1925
  %xor601.i.i = xor i32 %422, %424, !dbg !1925
  store i32 %xor601.i.i, i32* %u.i.i, align 4, !dbg !1925
  %425 = load i32, i32* %r.i.i, align 4, !dbg !1925
  %426 = load i32*, i32** %s.i.i, align 8, !dbg !1925
  %arrayidx602.i.i = getelementptr inbounds i32, i32* %426, i64 25, !dbg !1925
  %427 = load i32, i32* %arrayidx602.i.i, align 4, !dbg !1925
  %xor603.i.i = xor i32 %425, %427, !dbg !1925
  store i32 %xor603.i.i, i32* %t.i.i, align 4, !dbg !1925
  %428 = load i32, i32* %t.i.i, align 4, !dbg !1751
  %429 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %428) #7, !dbg !1751, !srcloc !167
  store i32 %429, i32* %ret604.i.i, align 4, !dbg !1751
  %430 = load i32, i32* %ret604.i.i, align 4, !dbg !1751
  store i32 %430, i32* %tmp605.i.i, align 4, !dbg !1751
  %431 = load i32, i32* %tmp605.i.i, align 4, !dbg !1751
  store i32 %431, i32* %t.i.i, align 4, !dbg !1925
  %432 = load i32, i32* %u.i.i, align 4, !dbg !1925
  %shr606.i.i = lshr i32 %432, 2, !dbg !1925
  %and607.i.i = and i32 %shr606.i.i, 63, !dbg !1925
  %idxprom608.i.i = zext i32 %and607.i.i to i64, !dbg !1925
  %arrayidx609.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom608.i.i, !dbg !1925
  %433 = load i32, i32* %arrayidx609.i.i, align 4, !dbg !1925
  %434 = load i32, i32* %u.i.i, align 4, !dbg !1925
  %shr610.i.i = lshr i32 %434, 10, !dbg !1925
  %and611.i.i = and i32 %shr610.i.i, 63, !dbg !1925
  %idxprom612.i.i = zext i32 %and611.i.i to i64, !dbg !1925
  %arrayidx613.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom612.i.i, !dbg !1925
  %435 = load i32, i32* %arrayidx613.i.i, align 4, !dbg !1925
  %xor614.i.i = xor i32 %433, %435, !dbg !1925
  %436 = load i32, i32* %u.i.i, align 4, !dbg !1925
  %shr615.i.i = lshr i32 %436, 18, !dbg !1925
  %and616.i.i = and i32 %shr615.i.i, 63, !dbg !1925
  %idxprom617.i.i = zext i32 %and616.i.i to i64, !dbg !1925
  %arrayidx618.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom617.i.i, !dbg !1925
  %437 = load i32, i32* %arrayidx618.i.i, align 4, !dbg !1925
  %xor619.i.i = xor i32 %xor614.i.i, %437, !dbg !1925
  %438 = load i32, i32* %u.i.i, align 4, !dbg !1925
  %shr620.i.i = lshr i32 %438, 26, !dbg !1925
  %idxprom622.i.i = zext i32 %shr620.i.i to i64, !dbg !1925
  %arrayidx623.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom622.i.i, !dbg !1925
  %439 = load i32, i32* %arrayidx623.i.i, align 4, !dbg !1925
  %xor624.i.i = xor i32 %xor619.i.i, %439, !dbg !1925
  %440 = load i32, i32* %t.i.i, align 4, !dbg !1925
  %shr625.i.i = lshr i32 %440, 2, !dbg !1925
  %and626.i.i = and i32 %shr625.i.i, 63, !dbg !1925
  %idxprom627.i.i = zext i32 %and626.i.i to i64, !dbg !1925
  %arrayidx628.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom627.i.i, !dbg !1925
  %441 = load i32, i32* %arrayidx628.i.i, align 4, !dbg !1925
  %xor629.i.i = xor i32 %xor624.i.i, %441, !dbg !1925
  %442 = load i32, i32* %t.i.i, align 4, !dbg !1925
  %shr630.i.i = lshr i32 %442, 10, !dbg !1925
  %and631.i.i = and i32 %shr630.i.i, 63, !dbg !1925
  %idxprom632.i.i = zext i32 %and631.i.i to i64, !dbg !1925
  %arrayidx633.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom632.i.i, !dbg !1925
  %443 = load i32, i32* %arrayidx633.i.i, align 4, !dbg !1925
  %xor634.i.i = xor i32 %xor629.i.i, %443, !dbg !1925
  %444 = load i32, i32* %t.i.i, align 4, !dbg !1925
  %shr635.i.i = lshr i32 %444, 18, !dbg !1925
  %and636.i.i = and i32 %shr635.i.i, 63, !dbg !1925
  %idxprom637.i.i = zext i32 %and636.i.i to i64, !dbg !1925
  %arrayidx638.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom637.i.i, !dbg !1925
  %445 = load i32, i32* %arrayidx638.i.i, align 4, !dbg !1925
  %xor639.i.i = xor i32 %xor634.i.i, %445, !dbg !1925
  %446 = load i32, i32* %t.i.i, align 4, !dbg !1925
  %shr640.i.i = lshr i32 %446, 26, !dbg !1925
  %idxprom642.i.i = zext i32 %shr640.i.i to i64, !dbg !1925
  %arrayidx643.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom642.i.i, !dbg !1925
  %447 = load i32, i32* %arrayidx643.i.i, align 4, !dbg !1925
  %xor644.i.i = xor i32 %xor639.i.i, %447, !dbg !1925
  %448 = load i32, i32* %l.i.i, align 4, !dbg !1925
  %xor645.i.i = xor i32 %448, %xor644.i.i, !dbg !1925
  store i32 %xor645.i.i, i32* %l.i.i, align 4, !dbg !1925
  %449 = load i32, i32* %l.i.i, align 4, !dbg !1926
  %450 = load i32*, i32** %s.i.i, align 8, !dbg !1926
  %arrayidx646.i.i = getelementptr inbounds i32, i32* %450, i64 26, !dbg !1926
  %451 = load i32, i32* %arrayidx646.i.i, align 4, !dbg !1926
  %xor647.i.i = xor i32 %449, %451, !dbg !1926
  store i32 %xor647.i.i, i32* %u.i.i, align 4, !dbg !1926
  %452 = load i32, i32* %l.i.i, align 4, !dbg !1926
  %453 = load i32*, i32** %s.i.i, align 8, !dbg !1926
  %arrayidx648.i.i = getelementptr inbounds i32, i32* %453, i64 27, !dbg !1926
  %454 = load i32, i32* %arrayidx648.i.i, align 4, !dbg !1926
  %xor649.i.i = xor i32 %452, %454, !dbg !1926
  store i32 %xor649.i.i, i32* %t.i.i, align 4, !dbg !1926
  %455 = load i32, i32* %t.i.i, align 4, !dbg !1752
  %456 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %455) #7, !dbg !1752, !srcloc !173
  store i32 %456, i32* %ret650.i.i, align 4, !dbg !1752
  %457 = load i32, i32* %ret650.i.i, align 4, !dbg !1752
  store i32 %457, i32* %tmp651.i.i, align 4, !dbg !1752
  %458 = load i32, i32* %tmp651.i.i, align 4, !dbg !1752
  store i32 %458, i32* %t.i.i, align 4, !dbg !1926
  %459 = load i32, i32* %u.i.i, align 4, !dbg !1926
  %shr652.i.i = lshr i32 %459, 2, !dbg !1926
  %and653.i.i = and i32 %shr652.i.i, 63, !dbg !1926
  %idxprom654.i.i = zext i32 %and653.i.i to i64, !dbg !1926
  %arrayidx655.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom654.i.i, !dbg !1926
  %460 = load i32, i32* %arrayidx655.i.i, align 4, !dbg !1926
  %461 = load i32, i32* %u.i.i, align 4, !dbg !1926
  %shr656.i.i = lshr i32 %461, 10, !dbg !1926
  %and657.i.i = and i32 %shr656.i.i, 63, !dbg !1926
  %idxprom658.i.i = zext i32 %and657.i.i to i64, !dbg !1926
  %arrayidx659.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom658.i.i, !dbg !1926
  %462 = load i32, i32* %arrayidx659.i.i, align 4, !dbg !1926
  %xor660.i.i = xor i32 %460, %462, !dbg !1926
  %463 = load i32, i32* %u.i.i, align 4, !dbg !1926
  %shr661.i.i = lshr i32 %463, 18, !dbg !1926
  %and662.i.i = and i32 %shr661.i.i, 63, !dbg !1926
  %idxprom663.i.i = zext i32 %and662.i.i to i64, !dbg !1926
  %arrayidx664.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom663.i.i, !dbg !1926
  %464 = load i32, i32* %arrayidx664.i.i, align 4, !dbg !1926
  %xor665.i.i = xor i32 %xor660.i.i, %464, !dbg !1926
  %465 = load i32, i32* %u.i.i, align 4, !dbg !1926
  %shr666.i.i = lshr i32 %465, 26, !dbg !1926
  %idxprom668.i.i = zext i32 %shr666.i.i to i64, !dbg !1926
  %arrayidx669.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom668.i.i, !dbg !1926
  %466 = load i32, i32* %arrayidx669.i.i, align 4, !dbg !1926
  %xor670.i.i = xor i32 %xor665.i.i, %466, !dbg !1926
  %467 = load i32, i32* %t.i.i, align 4, !dbg !1926
  %shr671.i.i = lshr i32 %467, 2, !dbg !1926
  %and672.i.i = and i32 %shr671.i.i, 63, !dbg !1926
  %idxprom673.i.i = zext i32 %and672.i.i to i64, !dbg !1926
  %arrayidx674.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom673.i.i, !dbg !1926
  %468 = load i32, i32* %arrayidx674.i.i, align 4, !dbg !1926
  %xor675.i.i = xor i32 %xor670.i.i, %468, !dbg !1926
  %469 = load i32, i32* %t.i.i, align 4, !dbg !1926
  %shr676.i.i = lshr i32 %469, 10, !dbg !1926
  %and677.i.i = and i32 %shr676.i.i, 63, !dbg !1926
  %idxprom678.i.i = zext i32 %and677.i.i to i64, !dbg !1926
  %arrayidx679.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom678.i.i, !dbg !1926
  %470 = load i32, i32* %arrayidx679.i.i, align 4, !dbg !1926
  %xor680.i.i = xor i32 %xor675.i.i, %470, !dbg !1926
  %471 = load i32, i32* %t.i.i, align 4, !dbg !1926
  %shr681.i.i = lshr i32 %471, 18, !dbg !1926
  %and682.i.i = and i32 %shr681.i.i, 63, !dbg !1926
  %idxprom683.i.i = zext i32 %and682.i.i to i64, !dbg !1926
  %arrayidx684.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom683.i.i, !dbg !1926
  %472 = load i32, i32* %arrayidx684.i.i, align 4, !dbg !1926
  %xor685.i.i = xor i32 %xor680.i.i, %472, !dbg !1926
  %473 = load i32, i32* %t.i.i, align 4, !dbg !1926
  %shr686.i.i = lshr i32 %473, 26, !dbg !1926
  %idxprom688.i.i = zext i32 %shr686.i.i to i64, !dbg !1926
  %arrayidx689.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom688.i.i, !dbg !1926
  %474 = load i32, i32* %arrayidx689.i.i, align 4, !dbg !1926
  %xor690.i.i = xor i32 %xor685.i.i, %474, !dbg !1926
  %475 = load i32, i32* %r.i.i, align 4, !dbg !1926
  %xor691.i.i = xor i32 %475, %xor690.i.i, !dbg !1926
  store i32 %xor691.i.i, i32* %r.i.i, align 4, !dbg !1926
  %476 = load i32, i32* %r.i.i, align 4, !dbg !1927
  %477 = load i32*, i32** %s.i.i, align 8, !dbg !1927
  %arrayidx692.i.i = getelementptr inbounds i32, i32* %477, i64 28, !dbg !1927
  %478 = load i32, i32* %arrayidx692.i.i, align 4, !dbg !1927
  %xor693.i.i = xor i32 %476, %478, !dbg !1927
  store i32 %xor693.i.i, i32* %u.i.i, align 4, !dbg !1927
  %479 = load i32, i32* %r.i.i, align 4, !dbg !1927
  %480 = load i32*, i32** %s.i.i, align 8, !dbg !1927
  %arrayidx694.i.i = getelementptr inbounds i32, i32* %480, i64 29, !dbg !1927
  %481 = load i32, i32* %arrayidx694.i.i, align 4, !dbg !1927
  %xor695.i.i = xor i32 %479, %481, !dbg !1927
  store i32 %xor695.i.i, i32* %t.i.i, align 4, !dbg !1927
  %482 = load i32, i32* %t.i.i, align 4, !dbg !1753
  %483 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %482) #7, !dbg !1753, !srcloc !179
  store i32 %483, i32* %ret696.i.i, align 4, !dbg !1753
  %484 = load i32, i32* %ret696.i.i, align 4, !dbg !1753
  store i32 %484, i32* %tmp697.i.i, align 4, !dbg !1753
  %485 = load i32, i32* %tmp697.i.i, align 4, !dbg !1753
  store i32 %485, i32* %t.i.i, align 4, !dbg !1927
  %486 = load i32, i32* %u.i.i, align 4, !dbg !1927
  %shr698.i.i = lshr i32 %486, 2, !dbg !1927
  %and699.i.i = and i32 %shr698.i.i, 63, !dbg !1927
  %idxprom700.i.i = zext i32 %and699.i.i to i64, !dbg !1927
  %arrayidx701.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom700.i.i, !dbg !1927
  %487 = load i32, i32* %arrayidx701.i.i, align 4, !dbg !1927
  %488 = load i32, i32* %u.i.i, align 4, !dbg !1927
  %shr702.i.i = lshr i32 %488, 10, !dbg !1927
  %and703.i.i = and i32 %shr702.i.i, 63, !dbg !1927
  %idxprom704.i.i = zext i32 %and703.i.i to i64, !dbg !1927
  %arrayidx705.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom704.i.i, !dbg !1927
  %489 = load i32, i32* %arrayidx705.i.i, align 4, !dbg !1927
  %xor706.i.i = xor i32 %487, %489, !dbg !1927
  %490 = load i32, i32* %u.i.i, align 4, !dbg !1927
  %shr707.i.i = lshr i32 %490, 18, !dbg !1927
  %and708.i.i = and i32 %shr707.i.i, 63, !dbg !1927
  %idxprom709.i.i = zext i32 %and708.i.i to i64, !dbg !1927
  %arrayidx710.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom709.i.i, !dbg !1927
  %491 = load i32, i32* %arrayidx710.i.i, align 4, !dbg !1927
  %xor711.i.i = xor i32 %xor706.i.i, %491, !dbg !1927
  %492 = load i32, i32* %u.i.i, align 4, !dbg !1927
  %shr712.i.i = lshr i32 %492, 26, !dbg !1927
  %idxprom714.i.i = zext i32 %shr712.i.i to i64, !dbg !1927
  %arrayidx715.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom714.i.i, !dbg !1927
  %493 = load i32, i32* %arrayidx715.i.i, align 4, !dbg !1927
  %xor716.i.i = xor i32 %xor711.i.i, %493, !dbg !1927
  %494 = load i32, i32* %t.i.i, align 4, !dbg !1927
  %shr717.i.i = lshr i32 %494, 2, !dbg !1927
  %and718.i.i = and i32 %shr717.i.i, 63, !dbg !1927
  %idxprom719.i.i = zext i32 %and718.i.i to i64, !dbg !1927
  %arrayidx720.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom719.i.i, !dbg !1927
  %495 = load i32, i32* %arrayidx720.i.i, align 4, !dbg !1927
  %xor721.i.i = xor i32 %xor716.i.i, %495, !dbg !1927
  %496 = load i32, i32* %t.i.i, align 4, !dbg !1927
  %shr722.i.i = lshr i32 %496, 10, !dbg !1927
  %and723.i.i = and i32 %shr722.i.i, 63, !dbg !1927
  %idxprom724.i.i = zext i32 %and723.i.i to i64, !dbg !1927
  %arrayidx725.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom724.i.i, !dbg !1927
  %497 = load i32, i32* %arrayidx725.i.i, align 4, !dbg !1927
  %xor726.i.i = xor i32 %xor721.i.i, %497, !dbg !1927
  %498 = load i32, i32* %t.i.i, align 4, !dbg !1927
  %shr727.i.i = lshr i32 %498, 18, !dbg !1927
  %and728.i.i = and i32 %shr727.i.i, 63, !dbg !1927
  %idxprom729.i.i = zext i32 %and728.i.i to i64, !dbg !1927
  %arrayidx730.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom729.i.i, !dbg !1927
  %499 = load i32, i32* %arrayidx730.i.i, align 4, !dbg !1927
  %xor731.i.i = xor i32 %xor726.i.i, %499, !dbg !1927
  %500 = load i32, i32* %t.i.i, align 4, !dbg !1927
  %shr732.i.i = lshr i32 %500, 26, !dbg !1927
  %idxprom734.i.i = zext i32 %shr732.i.i to i64, !dbg !1927
  %arrayidx735.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom734.i.i, !dbg !1927
  %501 = load i32, i32* %arrayidx735.i.i, align 4, !dbg !1927
  %xor736.i.i = xor i32 %xor731.i.i, %501, !dbg !1927
  %502 = load i32, i32* %l.i.i, align 4, !dbg !1927
  %xor737.i.i = xor i32 %502, %xor736.i.i, !dbg !1927
  store i32 %xor737.i.i, i32* %l.i.i, align 4, !dbg !1927
  %503 = load i32, i32* %l.i.i, align 4, !dbg !1928
  %504 = load i32*, i32** %s.i.i, align 8, !dbg !1928
  %arrayidx738.i.i = getelementptr inbounds i32, i32* %504, i64 30, !dbg !1928
  %505 = load i32, i32* %arrayidx738.i.i, align 4, !dbg !1928
  %xor739.i.i = xor i32 %503, %505, !dbg !1928
  store i32 %xor739.i.i, i32* %u.i.i, align 4, !dbg !1928
  %506 = load i32, i32* %l.i.i, align 4, !dbg !1928
  %507 = load i32*, i32** %s.i.i, align 8, !dbg !1928
  %arrayidx740.i.i = getelementptr inbounds i32, i32* %507, i64 31, !dbg !1928
  %508 = load i32, i32* %arrayidx740.i.i, align 4, !dbg !1928
  %xor741.i.i = xor i32 %506, %508, !dbg !1928
  store i32 %xor741.i.i, i32* %t.i.i, align 4, !dbg !1928
  %509 = load i32, i32* %t.i.i, align 4, !dbg !1754
  %510 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %509) #7, !dbg !1754, !srcloc !185
  store i32 %510, i32* %ret742.i.i, align 4, !dbg !1754
  %511 = load i32, i32* %ret742.i.i, align 4, !dbg !1754
  store i32 %511, i32* %tmp743.i.i, align 4, !dbg !1754
  %512 = load i32, i32* %tmp743.i.i, align 4, !dbg !1754
  store i32 %512, i32* %t.i.i, align 4, !dbg !1928
  %513 = load i32, i32* %u.i.i, align 4, !dbg !1928
  %shr744.i.i = lshr i32 %513, 2, !dbg !1928
  %and745.i.i = and i32 %shr744.i.i, 63, !dbg !1928
  %idxprom746.i.i = zext i32 %and745.i.i to i64, !dbg !1928
  %arrayidx747.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom746.i.i, !dbg !1928
  %514 = load i32, i32* %arrayidx747.i.i, align 4, !dbg !1928
  %515 = load i32, i32* %u.i.i, align 4, !dbg !1928
  %shr748.i.i = lshr i32 %515, 10, !dbg !1928
  %and749.i.i = and i32 %shr748.i.i, 63, !dbg !1928
  %idxprom750.i.i = zext i32 %and749.i.i to i64, !dbg !1928
  %arrayidx751.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom750.i.i, !dbg !1928
  %516 = load i32, i32* %arrayidx751.i.i, align 4, !dbg !1928
  %xor752.i.i = xor i32 %514, %516, !dbg !1928
  %517 = load i32, i32* %u.i.i, align 4, !dbg !1928
  %shr753.i.i = lshr i32 %517, 18, !dbg !1928
  %and754.i.i = and i32 %shr753.i.i, 63, !dbg !1928
  %idxprom755.i.i = zext i32 %and754.i.i to i64, !dbg !1928
  %arrayidx756.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom755.i.i, !dbg !1928
  %518 = load i32, i32* %arrayidx756.i.i, align 4, !dbg !1928
  %xor757.i.i = xor i32 %xor752.i.i, %518, !dbg !1928
  %519 = load i32, i32* %u.i.i, align 4, !dbg !1928
  %shr758.i.i = lshr i32 %519, 26, !dbg !1928
  %idxprom760.i.i = zext i32 %shr758.i.i to i64, !dbg !1928
  %arrayidx761.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom760.i.i, !dbg !1928
  %520 = load i32, i32* %arrayidx761.i.i, align 4, !dbg !1928
  %xor762.i.i = xor i32 %xor757.i.i, %520, !dbg !1928
  %521 = load i32, i32* %t.i.i, align 4, !dbg !1928
  %shr763.i.i = lshr i32 %521, 2, !dbg !1928
  %and764.i.i = and i32 %shr763.i.i, 63, !dbg !1928
  %idxprom765.i.i = zext i32 %and764.i.i to i64, !dbg !1928
  %arrayidx766.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom765.i.i, !dbg !1928
  %522 = load i32, i32* %arrayidx766.i.i, align 4, !dbg !1928
  %xor767.i.i = xor i32 %xor762.i.i, %522, !dbg !1928
  %523 = load i32, i32* %t.i.i, align 4, !dbg !1928
  %shr768.i.i = lshr i32 %523, 10, !dbg !1928
  %and769.i.i = and i32 %shr768.i.i, 63, !dbg !1928
  %idxprom770.i.i = zext i32 %and769.i.i to i64, !dbg !1928
  %arrayidx771.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom770.i.i, !dbg !1928
  %524 = load i32, i32* %arrayidx771.i.i, align 4, !dbg !1928
  %xor772.i.i = xor i32 %xor767.i.i, %524, !dbg !1928
  %525 = load i32, i32* %t.i.i, align 4, !dbg !1928
  %shr773.i.i = lshr i32 %525, 18, !dbg !1928
  %and774.i.i = and i32 %shr773.i.i, 63, !dbg !1928
  %idxprom775.i.i = zext i32 %and774.i.i to i64, !dbg !1928
  %arrayidx776.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom775.i.i, !dbg !1928
  %526 = load i32, i32* %arrayidx776.i.i, align 4, !dbg !1928
  %xor777.i.i = xor i32 %xor772.i.i, %526, !dbg !1928
  %527 = load i32, i32* %t.i.i, align 4, !dbg !1928
  %shr778.i.i = lshr i32 %527, 26, !dbg !1928
  %idxprom780.i.i = zext i32 %shr778.i.i to i64, !dbg !1928
  %arrayidx781.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom780.i.i, !dbg !1928
  %528 = load i32, i32* %arrayidx781.i.i, align 4, !dbg !1928
  %xor782.i.i = xor i32 %xor777.i.i, %528, !dbg !1928
  %529 = load i32, i32* %r.i.i, align 4, !dbg !1928
  %xor783.i.i = xor i32 %529, %xor782.i.i, !dbg !1928
  store i32 %xor783.i.i, i32* %r.i.i, align 4, !dbg !1928
  br label %DES_ecb_encrypt.exit, !dbg !1929

if.else.i.i:                                      ; preds = %while.body
  %530 = load i32, i32* %r.i.i, align 4, !dbg !1930
  %531 = load i32*, i32** %s.i.i, align 8, !dbg !1930
  %arrayidx784.i.i = getelementptr inbounds i32, i32* %531, i64 30, !dbg !1930
  %532 = load i32, i32* %arrayidx784.i.i, align 4, !dbg !1930
  %xor785.i.i = xor i32 %530, %532, !dbg !1930
  store i32 %xor785.i.i, i32* %u.i.i, align 4, !dbg !1930
  %533 = load i32, i32* %r.i.i, align 4, !dbg !1930
  %534 = load i32*, i32** %s.i.i, align 8, !dbg !1930
  %arrayidx786.i.i = getelementptr inbounds i32, i32* %534, i64 31, !dbg !1930
  %535 = load i32, i32* %arrayidx786.i.i, align 4, !dbg !1930
  %xor787.i.i = xor i32 %533, %535, !dbg !1930
  store i32 %xor787.i.i, i32* %t.i.i, align 4, !dbg !1930
  %536 = load i32, i32* %t.i.i, align 4, !dbg !1755
  %537 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %536) #7, !dbg !1755, !srcloc !193
  store i32 %537, i32* %ret788.i.i, align 4, !dbg !1755
  %538 = load i32, i32* %ret788.i.i, align 4, !dbg !1755
  store i32 %538, i32* %tmp789.i.i, align 4, !dbg !1755
  %539 = load i32, i32* %tmp789.i.i, align 4, !dbg !1755
  store i32 %539, i32* %t.i.i, align 4, !dbg !1930
  %540 = load i32, i32* %u.i.i, align 4, !dbg !1930
  %shr790.i.i = lshr i32 %540, 2, !dbg !1930
  %and791.i.i = and i32 %shr790.i.i, 63, !dbg !1930
  %idxprom792.i.i = zext i32 %and791.i.i to i64, !dbg !1930
  %arrayidx793.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom792.i.i, !dbg !1930
  %541 = load i32, i32* %arrayidx793.i.i, align 4, !dbg !1930
  %542 = load i32, i32* %u.i.i, align 4, !dbg !1930
  %shr794.i.i = lshr i32 %542, 10, !dbg !1930
  %and795.i.i = and i32 %shr794.i.i, 63, !dbg !1930
  %idxprom796.i.i = zext i32 %and795.i.i to i64, !dbg !1930
  %arrayidx797.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom796.i.i, !dbg !1930
  %543 = load i32, i32* %arrayidx797.i.i, align 4, !dbg !1930
  %xor798.i.i = xor i32 %541, %543, !dbg !1930
  %544 = load i32, i32* %u.i.i, align 4, !dbg !1930
  %shr799.i.i = lshr i32 %544, 18, !dbg !1930
  %and800.i.i = and i32 %shr799.i.i, 63, !dbg !1930
  %idxprom801.i.i = zext i32 %and800.i.i to i64, !dbg !1930
  %arrayidx802.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom801.i.i, !dbg !1930
  %545 = load i32, i32* %arrayidx802.i.i, align 4, !dbg !1930
  %xor803.i.i = xor i32 %xor798.i.i, %545, !dbg !1930
  %546 = load i32, i32* %u.i.i, align 4, !dbg !1930
  %shr804.i.i = lshr i32 %546, 26, !dbg !1930
  %idxprom806.i.i = zext i32 %shr804.i.i to i64, !dbg !1930
  %arrayidx807.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom806.i.i, !dbg !1930
  %547 = load i32, i32* %arrayidx807.i.i, align 4, !dbg !1930
  %xor808.i.i = xor i32 %xor803.i.i, %547, !dbg !1930
  %548 = load i32, i32* %t.i.i, align 4, !dbg !1930
  %shr809.i.i = lshr i32 %548, 2, !dbg !1930
  %and810.i.i = and i32 %shr809.i.i, 63, !dbg !1930
  %idxprom811.i.i = zext i32 %and810.i.i to i64, !dbg !1930
  %arrayidx812.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom811.i.i, !dbg !1930
  %549 = load i32, i32* %arrayidx812.i.i, align 4, !dbg !1930
  %xor813.i.i = xor i32 %xor808.i.i, %549, !dbg !1930
  %550 = load i32, i32* %t.i.i, align 4, !dbg !1930
  %shr814.i.i = lshr i32 %550, 10, !dbg !1930
  %and815.i.i = and i32 %shr814.i.i, 63, !dbg !1930
  %idxprom816.i.i = zext i32 %and815.i.i to i64, !dbg !1930
  %arrayidx817.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom816.i.i, !dbg !1930
  %551 = load i32, i32* %arrayidx817.i.i, align 4, !dbg !1930
  %xor818.i.i = xor i32 %xor813.i.i, %551, !dbg !1930
  %552 = load i32, i32* %t.i.i, align 4, !dbg !1930
  %shr819.i.i = lshr i32 %552, 18, !dbg !1930
  %and820.i.i = and i32 %shr819.i.i, 63, !dbg !1930
  %idxprom821.i.i = zext i32 %and820.i.i to i64, !dbg !1930
  %arrayidx822.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom821.i.i, !dbg !1930
  %553 = load i32, i32* %arrayidx822.i.i, align 4, !dbg !1930
  %xor823.i.i = xor i32 %xor818.i.i, %553, !dbg !1930
  %554 = load i32, i32* %t.i.i, align 4, !dbg !1930
  %shr824.i.i = lshr i32 %554, 26, !dbg !1930
  %idxprom826.i.i = zext i32 %shr824.i.i to i64, !dbg !1930
  %arrayidx827.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom826.i.i, !dbg !1930
  %555 = load i32, i32* %arrayidx827.i.i, align 4, !dbg !1930
  %xor828.i.i = xor i32 %xor823.i.i, %555, !dbg !1930
  %556 = load i32, i32* %l.i.i, align 4, !dbg !1930
  %xor829.i.i = xor i32 %556, %xor828.i.i, !dbg !1930
  store i32 %xor829.i.i, i32* %l.i.i, align 4, !dbg !1930
  %557 = load i32, i32* %l.i.i, align 4, !dbg !1931
  %558 = load i32*, i32** %s.i.i, align 8, !dbg !1931
  %arrayidx830.i.i = getelementptr inbounds i32, i32* %558, i64 28, !dbg !1931
  %559 = load i32, i32* %arrayidx830.i.i, align 4, !dbg !1931
  %xor831.i.i = xor i32 %557, %559, !dbg !1931
  store i32 %xor831.i.i, i32* %u.i.i, align 4, !dbg !1931
  %560 = load i32, i32* %l.i.i, align 4, !dbg !1931
  %561 = load i32*, i32** %s.i.i, align 8, !dbg !1931
  %arrayidx832.i.i = getelementptr inbounds i32, i32* %561, i64 29, !dbg !1931
  %562 = load i32, i32* %arrayidx832.i.i, align 4, !dbg !1931
  %xor833.i.i = xor i32 %560, %562, !dbg !1931
  store i32 %xor833.i.i, i32* %t.i.i, align 4, !dbg !1931
  %563 = load i32, i32* %t.i.i, align 4, !dbg !1756
  %564 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %563) #7, !dbg !1756, !srcloc !199
  store i32 %564, i32* %ret834.i.i, align 4, !dbg !1756
  %565 = load i32, i32* %ret834.i.i, align 4, !dbg !1756
  store i32 %565, i32* %tmp835.i.i, align 4, !dbg !1756
  %566 = load i32, i32* %tmp835.i.i, align 4, !dbg !1756
  store i32 %566, i32* %t.i.i, align 4, !dbg !1931
  %567 = load i32, i32* %u.i.i, align 4, !dbg !1931
  %shr836.i.i = lshr i32 %567, 2, !dbg !1931
  %and837.i.i = and i32 %shr836.i.i, 63, !dbg !1931
  %idxprom838.i.i = zext i32 %and837.i.i to i64, !dbg !1931
  %arrayidx839.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom838.i.i, !dbg !1931
  %568 = load i32, i32* %arrayidx839.i.i, align 4, !dbg !1931
  %569 = load i32, i32* %u.i.i, align 4, !dbg !1931
  %shr840.i.i = lshr i32 %569, 10, !dbg !1931
  %and841.i.i = and i32 %shr840.i.i, 63, !dbg !1931
  %idxprom842.i.i = zext i32 %and841.i.i to i64, !dbg !1931
  %arrayidx843.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom842.i.i, !dbg !1931
  %570 = load i32, i32* %arrayidx843.i.i, align 4, !dbg !1931
  %xor844.i.i = xor i32 %568, %570, !dbg !1931
  %571 = load i32, i32* %u.i.i, align 4, !dbg !1931
  %shr845.i.i = lshr i32 %571, 18, !dbg !1931
  %and846.i.i = and i32 %shr845.i.i, 63, !dbg !1931
  %idxprom847.i.i = zext i32 %and846.i.i to i64, !dbg !1931
  %arrayidx848.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom847.i.i, !dbg !1931
  %572 = load i32, i32* %arrayidx848.i.i, align 4, !dbg !1931
  %xor849.i.i = xor i32 %xor844.i.i, %572, !dbg !1931
  %573 = load i32, i32* %u.i.i, align 4, !dbg !1931
  %shr850.i.i = lshr i32 %573, 26, !dbg !1931
  %idxprom852.i.i = zext i32 %shr850.i.i to i64, !dbg !1931
  %arrayidx853.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom852.i.i, !dbg !1931
  %574 = load i32, i32* %arrayidx853.i.i, align 4, !dbg !1931
  %xor854.i.i = xor i32 %xor849.i.i, %574, !dbg !1931
  %575 = load i32, i32* %t.i.i, align 4, !dbg !1931
  %shr855.i.i = lshr i32 %575, 2, !dbg !1931
  %and856.i.i = and i32 %shr855.i.i, 63, !dbg !1931
  %idxprom857.i.i = zext i32 %and856.i.i to i64, !dbg !1931
  %arrayidx858.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom857.i.i, !dbg !1931
  %576 = load i32, i32* %arrayidx858.i.i, align 4, !dbg !1931
  %xor859.i.i = xor i32 %xor854.i.i, %576, !dbg !1931
  %577 = load i32, i32* %t.i.i, align 4, !dbg !1931
  %shr860.i.i = lshr i32 %577, 10, !dbg !1931
  %and861.i.i = and i32 %shr860.i.i, 63, !dbg !1931
  %idxprom862.i.i = zext i32 %and861.i.i to i64, !dbg !1931
  %arrayidx863.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom862.i.i, !dbg !1931
  %578 = load i32, i32* %arrayidx863.i.i, align 4, !dbg !1931
  %xor864.i.i = xor i32 %xor859.i.i, %578, !dbg !1931
  %579 = load i32, i32* %t.i.i, align 4, !dbg !1931
  %shr865.i.i = lshr i32 %579, 18, !dbg !1931
  %and866.i.i = and i32 %shr865.i.i, 63, !dbg !1931
  %idxprom867.i.i = zext i32 %and866.i.i to i64, !dbg !1931
  %arrayidx868.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom867.i.i, !dbg !1931
  %580 = load i32, i32* %arrayidx868.i.i, align 4, !dbg !1931
  %xor869.i.i = xor i32 %xor864.i.i, %580, !dbg !1931
  %581 = load i32, i32* %t.i.i, align 4, !dbg !1931
  %shr870.i.i = lshr i32 %581, 26, !dbg !1931
  %idxprom872.i.i = zext i32 %shr870.i.i to i64, !dbg !1931
  %arrayidx873.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom872.i.i, !dbg !1931
  %582 = load i32, i32* %arrayidx873.i.i, align 4, !dbg !1931
  %xor874.i.i = xor i32 %xor869.i.i, %582, !dbg !1931
  %583 = load i32, i32* %r.i.i, align 4, !dbg !1931
  %xor875.i.i = xor i32 %583, %xor874.i.i, !dbg !1931
  store i32 %xor875.i.i, i32* %r.i.i, align 4, !dbg !1931
  %584 = load i32, i32* %r.i.i, align 4, !dbg !1932
  %585 = load i32*, i32** %s.i.i, align 8, !dbg !1932
  %arrayidx876.i.i = getelementptr inbounds i32, i32* %585, i64 26, !dbg !1932
  %586 = load i32, i32* %arrayidx876.i.i, align 4, !dbg !1932
  %xor877.i.i = xor i32 %584, %586, !dbg !1932
  store i32 %xor877.i.i, i32* %u.i.i, align 4, !dbg !1932
  %587 = load i32, i32* %r.i.i, align 4, !dbg !1932
  %588 = load i32*, i32** %s.i.i, align 8, !dbg !1932
  %arrayidx878.i.i = getelementptr inbounds i32, i32* %588, i64 27, !dbg !1932
  %589 = load i32, i32* %arrayidx878.i.i, align 4, !dbg !1932
  %xor879.i.i = xor i32 %587, %589, !dbg !1932
  store i32 %xor879.i.i, i32* %t.i.i, align 4, !dbg !1932
  %590 = load i32, i32* %t.i.i, align 4, !dbg !1757
  %591 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %590) #7, !dbg !1757, !srcloc !205
  store i32 %591, i32* %ret880.i.i, align 4, !dbg !1757
  %592 = load i32, i32* %ret880.i.i, align 4, !dbg !1757
  store i32 %592, i32* %tmp881.i.i, align 4, !dbg !1757
  %593 = load i32, i32* %tmp881.i.i, align 4, !dbg !1757
  store i32 %593, i32* %t.i.i, align 4, !dbg !1932
  %594 = load i32, i32* %u.i.i, align 4, !dbg !1932
  %shr882.i.i = lshr i32 %594, 2, !dbg !1932
  %and883.i.i = and i32 %shr882.i.i, 63, !dbg !1932
  %idxprom884.i.i = zext i32 %and883.i.i to i64, !dbg !1932
  %arrayidx885.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom884.i.i, !dbg !1932
  %595 = load i32, i32* %arrayidx885.i.i, align 4, !dbg !1932
  %596 = load i32, i32* %u.i.i, align 4, !dbg !1932
  %shr886.i.i = lshr i32 %596, 10, !dbg !1932
  %and887.i.i = and i32 %shr886.i.i, 63, !dbg !1932
  %idxprom888.i.i = zext i32 %and887.i.i to i64, !dbg !1932
  %arrayidx889.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom888.i.i, !dbg !1932
  %597 = load i32, i32* %arrayidx889.i.i, align 4, !dbg !1932
  %xor890.i.i = xor i32 %595, %597, !dbg !1932
  %598 = load i32, i32* %u.i.i, align 4, !dbg !1932
  %shr891.i.i = lshr i32 %598, 18, !dbg !1932
  %and892.i.i = and i32 %shr891.i.i, 63, !dbg !1932
  %idxprom893.i.i = zext i32 %and892.i.i to i64, !dbg !1932
  %arrayidx894.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom893.i.i, !dbg !1932
  %599 = load i32, i32* %arrayidx894.i.i, align 4, !dbg !1932
  %xor895.i.i = xor i32 %xor890.i.i, %599, !dbg !1932
  %600 = load i32, i32* %u.i.i, align 4, !dbg !1932
  %shr896.i.i = lshr i32 %600, 26, !dbg !1932
  %idxprom898.i.i = zext i32 %shr896.i.i to i64, !dbg !1932
  %arrayidx899.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom898.i.i, !dbg !1932
  %601 = load i32, i32* %arrayidx899.i.i, align 4, !dbg !1932
  %xor900.i.i = xor i32 %xor895.i.i, %601, !dbg !1932
  %602 = load i32, i32* %t.i.i, align 4, !dbg !1932
  %shr901.i.i = lshr i32 %602, 2, !dbg !1932
  %and902.i.i = and i32 %shr901.i.i, 63, !dbg !1932
  %idxprom903.i.i = zext i32 %and902.i.i to i64, !dbg !1932
  %arrayidx904.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom903.i.i, !dbg !1932
  %603 = load i32, i32* %arrayidx904.i.i, align 4, !dbg !1932
  %xor905.i.i = xor i32 %xor900.i.i, %603, !dbg !1932
  %604 = load i32, i32* %t.i.i, align 4, !dbg !1932
  %shr906.i.i = lshr i32 %604, 10, !dbg !1932
  %and907.i.i = and i32 %shr906.i.i, 63, !dbg !1932
  %idxprom908.i.i = zext i32 %and907.i.i to i64, !dbg !1932
  %arrayidx909.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom908.i.i, !dbg !1932
  %605 = load i32, i32* %arrayidx909.i.i, align 4, !dbg !1932
  %xor910.i.i = xor i32 %xor905.i.i, %605, !dbg !1932
  %606 = load i32, i32* %t.i.i, align 4, !dbg !1932
  %shr911.i.i = lshr i32 %606, 18, !dbg !1932
  %and912.i.i = and i32 %shr911.i.i, 63, !dbg !1932
  %idxprom913.i.i = zext i32 %and912.i.i to i64, !dbg !1932
  %arrayidx914.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom913.i.i, !dbg !1932
  %607 = load i32, i32* %arrayidx914.i.i, align 4, !dbg !1932
  %xor915.i.i = xor i32 %xor910.i.i, %607, !dbg !1932
  %608 = load i32, i32* %t.i.i, align 4, !dbg !1932
  %shr916.i.i = lshr i32 %608, 26, !dbg !1932
  %idxprom918.i.i = zext i32 %shr916.i.i to i64, !dbg !1932
  %arrayidx919.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom918.i.i, !dbg !1932
  %609 = load i32, i32* %arrayidx919.i.i, align 4, !dbg !1932
  %xor920.i.i = xor i32 %xor915.i.i, %609, !dbg !1932
  %610 = load i32, i32* %l.i.i, align 4, !dbg !1932
  %xor921.i.i = xor i32 %610, %xor920.i.i, !dbg !1932
  store i32 %xor921.i.i, i32* %l.i.i, align 4, !dbg !1932
  %611 = load i32, i32* %l.i.i, align 4, !dbg !1933
  %612 = load i32*, i32** %s.i.i, align 8, !dbg !1933
  %arrayidx922.i.i = getelementptr inbounds i32, i32* %612, i64 24, !dbg !1933
  %613 = load i32, i32* %arrayidx922.i.i, align 4, !dbg !1933
  %xor923.i.i = xor i32 %611, %613, !dbg !1933
  store i32 %xor923.i.i, i32* %u.i.i, align 4, !dbg !1933
  %614 = load i32, i32* %l.i.i, align 4, !dbg !1933
  %615 = load i32*, i32** %s.i.i, align 8, !dbg !1933
  %arrayidx924.i.i = getelementptr inbounds i32, i32* %615, i64 25, !dbg !1933
  %616 = load i32, i32* %arrayidx924.i.i, align 4, !dbg !1933
  %xor925.i.i = xor i32 %614, %616, !dbg !1933
  store i32 %xor925.i.i, i32* %t.i.i, align 4, !dbg !1933
  %617 = load i32, i32* %t.i.i, align 4, !dbg !1758
  %618 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %617) #7, !dbg !1758, !srcloc !211
  store i32 %618, i32* %ret926.i.i, align 4, !dbg !1758
  %619 = load i32, i32* %ret926.i.i, align 4, !dbg !1758
  store i32 %619, i32* %tmp927.i.i, align 4, !dbg !1758
  %620 = load i32, i32* %tmp927.i.i, align 4, !dbg !1758
  store i32 %620, i32* %t.i.i, align 4, !dbg !1933
  %621 = load i32, i32* %u.i.i, align 4, !dbg !1933
  %shr928.i.i = lshr i32 %621, 2, !dbg !1933
  %and929.i.i = and i32 %shr928.i.i, 63, !dbg !1933
  %idxprom930.i.i = zext i32 %and929.i.i to i64, !dbg !1933
  %arrayidx931.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom930.i.i, !dbg !1933
  %622 = load i32, i32* %arrayidx931.i.i, align 4, !dbg !1933
  %623 = load i32, i32* %u.i.i, align 4, !dbg !1933
  %shr932.i.i = lshr i32 %623, 10, !dbg !1933
  %and933.i.i = and i32 %shr932.i.i, 63, !dbg !1933
  %idxprom934.i.i = zext i32 %and933.i.i to i64, !dbg !1933
  %arrayidx935.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom934.i.i, !dbg !1933
  %624 = load i32, i32* %arrayidx935.i.i, align 4, !dbg !1933
  %xor936.i.i = xor i32 %622, %624, !dbg !1933
  %625 = load i32, i32* %u.i.i, align 4, !dbg !1933
  %shr937.i.i = lshr i32 %625, 18, !dbg !1933
  %and938.i.i = and i32 %shr937.i.i, 63, !dbg !1933
  %idxprom939.i.i = zext i32 %and938.i.i to i64, !dbg !1933
  %arrayidx940.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom939.i.i, !dbg !1933
  %626 = load i32, i32* %arrayidx940.i.i, align 4, !dbg !1933
  %xor941.i.i = xor i32 %xor936.i.i, %626, !dbg !1933
  %627 = load i32, i32* %u.i.i, align 4, !dbg !1933
  %shr942.i.i = lshr i32 %627, 26, !dbg !1933
  %idxprom944.i.i = zext i32 %shr942.i.i to i64, !dbg !1933
  %arrayidx945.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom944.i.i, !dbg !1933
  %628 = load i32, i32* %arrayidx945.i.i, align 4, !dbg !1933
  %xor946.i.i = xor i32 %xor941.i.i, %628, !dbg !1933
  %629 = load i32, i32* %t.i.i, align 4, !dbg !1933
  %shr947.i.i = lshr i32 %629, 2, !dbg !1933
  %and948.i.i = and i32 %shr947.i.i, 63, !dbg !1933
  %idxprom949.i.i = zext i32 %and948.i.i to i64, !dbg !1933
  %arrayidx950.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom949.i.i, !dbg !1933
  %630 = load i32, i32* %arrayidx950.i.i, align 4, !dbg !1933
  %xor951.i.i = xor i32 %xor946.i.i, %630, !dbg !1933
  %631 = load i32, i32* %t.i.i, align 4, !dbg !1933
  %shr952.i.i = lshr i32 %631, 10, !dbg !1933
  %and953.i.i = and i32 %shr952.i.i, 63, !dbg !1933
  %idxprom954.i.i = zext i32 %and953.i.i to i64, !dbg !1933
  %arrayidx955.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom954.i.i, !dbg !1933
  %632 = load i32, i32* %arrayidx955.i.i, align 4, !dbg !1933
  %xor956.i.i = xor i32 %xor951.i.i, %632, !dbg !1933
  %633 = load i32, i32* %t.i.i, align 4, !dbg !1933
  %shr957.i.i = lshr i32 %633, 18, !dbg !1933
  %and958.i.i = and i32 %shr957.i.i, 63, !dbg !1933
  %idxprom959.i.i = zext i32 %and958.i.i to i64, !dbg !1933
  %arrayidx960.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom959.i.i, !dbg !1933
  %634 = load i32, i32* %arrayidx960.i.i, align 4, !dbg !1933
  %xor961.i.i = xor i32 %xor956.i.i, %634, !dbg !1933
  %635 = load i32, i32* %t.i.i, align 4, !dbg !1933
  %shr962.i.i = lshr i32 %635, 26, !dbg !1933
  %idxprom964.i.i = zext i32 %shr962.i.i to i64, !dbg !1933
  %arrayidx965.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom964.i.i, !dbg !1933
  %636 = load i32, i32* %arrayidx965.i.i, align 4, !dbg !1933
  %xor966.i.i = xor i32 %xor961.i.i, %636, !dbg !1933
  %637 = load i32, i32* %r.i.i, align 4, !dbg !1933
  %xor967.i.i = xor i32 %637, %xor966.i.i, !dbg !1933
  store i32 %xor967.i.i, i32* %r.i.i, align 4, !dbg !1933
  %638 = load i32, i32* %r.i.i, align 4, !dbg !1934
  %639 = load i32*, i32** %s.i.i, align 8, !dbg !1934
  %arrayidx968.i.i = getelementptr inbounds i32, i32* %639, i64 22, !dbg !1934
  %640 = load i32, i32* %arrayidx968.i.i, align 4, !dbg !1934
  %xor969.i.i = xor i32 %638, %640, !dbg !1934
  store i32 %xor969.i.i, i32* %u.i.i, align 4, !dbg !1934
  %641 = load i32, i32* %r.i.i, align 4, !dbg !1934
  %642 = load i32*, i32** %s.i.i, align 8, !dbg !1934
  %arrayidx970.i.i = getelementptr inbounds i32, i32* %642, i64 23, !dbg !1934
  %643 = load i32, i32* %arrayidx970.i.i, align 4, !dbg !1934
  %xor971.i.i = xor i32 %641, %643, !dbg !1934
  store i32 %xor971.i.i, i32* %t.i.i, align 4, !dbg !1934
  %644 = load i32, i32* %t.i.i, align 4, !dbg !1759
  %645 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %644) #7, !dbg !1759, !srcloc !217
  store i32 %645, i32* %ret972.i.i, align 4, !dbg !1759
  %646 = load i32, i32* %ret972.i.i, align 4, !dbg !1759
  store i32 %646, i32* %tmp973.i.i, align 4, !dbg !1759
  %647 = load i32, i32* %tmp973.i.i, align 4, !dbg !1759
  store i32 %647, i32* %t.i.i, align 4, !dbg !1934
  %648 = load i32, i32* %u.i.i, align 4, !dbg !1934
  %shr974.i.i = lshr i32 %648, 2, !dbg !1934
  %and975.i.i = and i32 %shr974.i.i, 63, !dbg !1934
  %idxprom976.i.i = zext i32 %and975.i.i to i64, !dbg !1934
  %arrayidx977.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom976.i.i, !dbg !1934
  %649 = load i32, i32* %arrayidx977.i.i, align 4, !dbg !1934
  %650 = load i32, i32* %u.i.i, align 4, !dbg !1934
  %shr978.i.i = lshr i32 %650, 10, !dbg !1934
  %and979.i.i = and i32 %shr978.i.i, 63, !dbg !1934
  %idxprom980.i.i = zext i32 %and979.i.i to i64, !dbg !1934
  %arrayidx981.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom980.i.i, !dbg !1934
  %651 = load i32, i32* %arrayidx981.i.i, align 4, !dbg !1934
  %xor982.i.i = xor i32 %649, %651, !dbg !1934
  %652 = load i32, i32* %u.i.i, align 4, !dbg !1934
  %shr983.i.i = lshr i32 %652, 18, !dbg !1934
  %and984.i.i = and i32 %shr983.i.i, 63, !dbg !1934
  %idxprom985.i.i = zext i32 %and984.i.i to i64, !dbg !1934
  %arrayidx986.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom985.i.i, !dbg !1934
  %653 = load i32, i32* %arrayidx986.i.i, align 4, !dbg !1934
  %xor987.i.i = xor i32 %xor982.i.i, %653, !dbg !1934
  %654 = load i32, i32* %u.i.i, align 4, !dbg !1934
  %shr988.i.i = lshr i32 %654, 26, !dbg !1934
  %idxprom990.i.i = zext i32 %shr988.i.i to i64, !dbg !1934
  %arrayidx991.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom990.i.i, !dbg !1934
  %655 = load i32, i32* %arrayidx991.i.i, align 4, !dbg !1934
  %xor992.i.i = xor i32 %xor987.i.i, %655, !dbg !1934
  %656 = load i32, i32* %t.i.i, align 4, !dbg !1934
  %shr993.i.i = lshr i32 %656, 2, !dbg !1934
  %and994.i.i = and i32 %shr993.i.i, 63, !dbg !1934
  %idxprom995.i.i = zext i32 %and994.i.i to i64, !dbg !1934
  %arrayidx996.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom995.i.i, !dbg !1934
  %657 = load i32, i32* %arrayidx996.i.i, align 4, !dbg !1934
  %xor997.i.i = xor i32 %xor992.i.i, %657, !dbg !1934
  %658 = load i32, i32* %t.i.i, align 4, !dbg !1934
  %shr998.i.i = lshr i32 %658, 10, !dbg !1934
  %and999.i.i = and i32 %shr998.i.i, 63, !dbg !1934
  %idxprom1000.i.i = zext i32 %and999.i.i to i64, !dbg !1934
  %arrayidx1001.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1000.i.i, !dbg !1934
  %659 = load i32, i32* %arrayidx1001.i.i, align 4, !dbg !1934
  %xor1002.i.i = xor i32 %xor997.i.i, %659, !dbg !1934
  %660 = load i32, i32* %t.i.i, align 4, !dbg !1934
  %shr1003.i.i = lshr i32 %660, 18, !dbg !1934
  %and1004.i.i = and i32 %shr1003.i.i, 63, !dbg !1934
  %idxprom1005.i.i = zext i32 %and1004.i.i to i64, !dbg !1934
  %arrayidx1006.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1005.i.i, !dbg !1934
  %661 = load i32, i32* %arrayidx1006.i.i, align 4, !dbg !1934
  %xor1007.i.i = xor i32 %xor1002.i.i, %661, !dbg !1934
  %662 = load i32, i32* %t.i.i, align 4, !dbg !1934
  %shr1008.i.i = lshr i32 %662, 26, !dbg !1934
  %idxprom1010.i.i = zext i32 %shr1008.i.i to i64, !dbg !1934
  %arrayidx1011.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1010.i.i, !dbg !1934
  %663 = load i32, i32* %arrayidx1011.i.i, align 4, !dbg !1934
  %xor1012.i.i = xor i32 %xor1007.i.i, %663, !dbg !1934
  %664 = load i32, i32* %l.i.i, align 4, !dbg !1934
  %xor1013.i.i = xor i32 %664, %xor1012.i.i, !dbg !1934
  store i32 %xor1013.i.i, i32* %l.i.i, align 4, !dbg !1934
  %665 = load i32, i32* %l.i.i, align 4, !dbg !1935
  %666 = load i32*, i32** %s.i.i, align 8, !dbg !1935
  %arrayidx1014.i.i = getelementptr inbounds i32, i32* %666, i64 20, !dbg !1935
  %667 = load i32, i32* %arrayidx1014.i.i, align 4, !dbg !1935
  %xor1015.i.i = xor i32 %665, %667, !dbg !1935
  store i32 %xor1015.i.i, i32* %u.i.i, align 4, !dbg !1935
  %668 = load i32, i32* %l.i.i, align 4, !dbg !1935
  %669 = load i32*, i32** %s.i.i, align 8, !dbg !1935
  %arrayidx1016.i.i = getelementptr inbounds i32, i32* %669, i64 21, !dbg !1935
  %670 = load i32, i32* %arrayidx1016.i.i, align 4, !dbg !1935
  %xor1017.i.i = xor i32 %668, %670, !dbg !1935
  store i32 %xor1017.i.i, i32* %t.i.i, align 4, !dbg !1935
  %671 = load i32, i32* %t.i.i, align 4, !dbg !1760
  %672 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %671) #7, !dbg !1760, !srcloc !223
  store i32 %672, i32* %ret1018.i.i, align 4, !dbg !1760
  %673 = load i32, i32* %ret1018.i.i, align 4, !dbg !1760
  store i32 %673, i32* %tmp1019.i.i, align 4, !dbg !1760
  %674 = load i32, i32* %tmp1019.i.i, align 4, !dbg !1760
  store i32 %674, i32* %t.i.i, align 4, !dbg !1935
  %675 = load i32, i32* %u.i.i, align 4, !dbg !1935
  %shr1020.i.i = lshr i32 %675, 2, !dbg !1935
  %and1021.i.i = and i32 %shr1020.i.i, 63, !dbg !1935
  %idxprom1022.i.i = zext i32 %and1021.i.i to i64, !dbg !1935
  %arrayidx1023.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1022.i.i, !dbg !1935
  %676 = load i32, i32* %arrayidx1023.i.i, align 4, !dbg !1935
  %677 = load i32, i32* %u.i.i, align 4, !dbg !1935
  %shr1024.i.i = lshr i32 %677, 10, !dbg !1935
  %and1025.i.i = and i32 %shr1024.i.i, 63, !dbg !1935
  %idxprom1026.i.i = zext i32 %and1025.i.i to i64, !dbg !1935
  %arrayidx1027.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1026.i.i, !dbg !1935
  %678 = load i32, i32* %arrayidx1027.i.i, align 4, !dbg !1935
  %xor1028.i.i = xor i32 %676, %678, !dbg !1935
  %679 = load i32, i32* %u.i.i, align 4, !dbg !1935
  %shr1029.i.i = lshr i32 %679, 18, !dbg !1935
  %and1030.i.i = and i32 %shr1029.i.i, 63, !dbg !1935
  %idxprom1031.i.i = zext i32 %and1030.i.i to i64, !dbg !1935
  %arrayidx1032.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1031.i.i, !dbg !1935
  %680 = load i32, i32* %arrayidx1032.i.i, align 4, !dbg !1935
  %xor1033.i.i = xor i32 %xor1028.i.i, %680, !dbg !1935
  %681 = load i32, i32* %u.i.i, align 4, !dbg !1935
  %shr1034.i.i = lshr i32 %681, 26, !dbg !1935
  %idxprom1036.i.i = zext i32 %shr1034.i.i to i64, !dbg !1935
  %arrayidx1037.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1036.i.i, !dbg !1935
  %682 = load i32, i32* %arrayidx1037.i.i, align 4, !dbg !1935
  %xor1038.i.i = xor i32 %xor1033.i.i, %682, !dbg !1935
  %683 = load i32, i32* %t.i.i, align 4, !dbg !1935
  %shr1039.i.i = lshr i32 %683, 2, !dbg !1935
  %and1040.i.i = and i32 %shr1039.i.i, 63, !dbg !1935
  %idxprom1041.i.i = zext i32 %and1040.i.i to i64, !dbg !1935
  %arrayidx1042.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1041.i.i, !dbg !1935
  %684 = load i32, i32* %arrayidx1042.i.i, align 4, !dbg !1935
  %xor1043.i.i = xor i32 %xor1038.i.i, %684, !dbg !1935
  %685 = load i32, i32* %t.i.i, align 4, !dbg !1935
  %shr1044.i.i = lshr i32 %685, 10, !dbg !1935
  %and1045.i.i = and i32 %shr1044.i.i, 63, !dbg !1935
  %idxprom1046.i.i = zext i32 %and1045.i.i to i64, !dbg !1935
  %arrayidx1047.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1046.i.i, !dbg !1935
  %686 = load i32, i32* %arrayidx1047.i.i, align 4, !dbg !1935
  %xor1048.i.i = xor i32 %xor1043.i.i, %686, !dbg !1935
  %687 = load i32, i32* %t.i.i, align 4, !dbg !1935
  %shr1049.i.i = lshr i32 %687, 18, !dbg !1935
  %and1050.i.i = and i32 %shr1049.i.i, 63, !dbg !1935
  %idxprom1051.i.i = zext i32 %and1050.i.i to i64, !dbg !1935
  %arrayidx1052.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1051.i.i, !dbg !1935
  %688 = load i32, i32* %arrayidx1052.i.i, align 4, !dbg !1935
  %xor1053.i.i = xor i32 %xor1048.i.i, %688, !dbg !1935
  %689 = load i32, i32* %t.i.i, align 4, !dbg !1935
  %shr1054.i.i = lshr i32 %689, 26, !dbg !1935
  %idxprom1056.i.i = zext i32 %shr1054.i.i to i64, !dbg !1935
  %arrayidx1057.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1056.i.i, !dbg !1935
  %690 = load i32, i32* %arrayidx1057.i.i, align 4, !dbg !1935
  %xor1058.i.i = xor i32 %xor1053.i.i, %690, !dbg !1935
  %691 = load i32, i32* %r.i.i, align 4, !dbg !1935
  %xor1059.i.i = xor i32 %691, %xor1058.i.i, !dbg !1935
  store i32 %xor1059.i.i, i32* %r.i.i, align 4, !dbg !1935
  %692 = load i32, i32* %r.i.i, align 4, !dbg !1936
  %693 = load i32*, i32** %s.i.i, align 8, !dbg !1936
  %arrayidx1060.i.i = getelementptr inbounds i32, i32* %693, i64 18, !dbg !1936
  %694 = load i32, i32* %arrayidx1060.i.i, align 4, !dbg !1936
  %xor1061.i.i = xor i32 %692, %694, !dbg !1936
  store i32 %xor1061.i.i, i32* %u.i.i, align 4, !dbg !1936
  %695 = load i32, i32* %r.i.i, align 4, !dbg !1936
  %696 = load i32*, i32** %s.i.i, align 8, !dbg !1936
  %arrayidx1062.i.i = getelementptr inbounds i32, i32* %696, i64 19, !dbg !1936
  %697 = load i32, i32* %arrayidx1062.i.i, align 4, !dbg !1936
  %xor1063.i.i = xor i32 %695, %697, !dbg !1936
  store i32 %xor1063.i.i, i32* %t.i.i, align 4, !dbg !1936
  %698 = load i32, i32* %t.i.i, align 4, !dbg !1761
  %699 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %698) #7, !dbg !1761, !srcloc !229
  store i32 %699, i32* %ret1064.i.i, align 4, !dbg !1761
  %700 = load i32, i32* %ret1064.i.i, align 4, !dbg !1761
  store i32 %700, i32* %tmp1065.i.i, align 4, !dbg !1761
  %701 = load i32, i32* %tmp1065.i.i, align 4, !dbg !1761
  store i32 %701, i32* %t.i.i, align 4, !dbg !1936
  %702 = load i32, i32* %u.i.i, align 4, !dbg !1936
  %shr1066.i.i = lshr i32 %702, 2, !dbg !1936
  %and1067.i.i = and i32 %shr1066.i.i, 63, !dbg !1936
  %idxprom1068.i.i = zext i32 %and1067.i.i to i64, !dbg !1936
  %arrayidx1069.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1068.i.i, !dbg !1936
  %703 = load i32, i32* %arrayidx1069.i.i, align 4, !dbg !1936
  %704 = load i32, i32* %u.i.i, align 4, !dbg !1936
  %shr1070.i.i = lshr i32 %704, 10, !dbg !1936
  %and1071.i.i = and i32 %shr1070.i.i, 63, !dbg !1936
  %idxprom1072.i.i = zext i32 %and1071.i.i to i64, !dbg !1936
  %arrayidx1073.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1072.i.i, !dbg !1936
  %705 = load i32, i32* %arrayidx1073.i.i, align 4, !dbg !1936
  %xor1074.i.i = xor i32 %703, %705, !dbg !1936
  %706 = load i32, i32* %u.i.i, align 4, !dbg !1936
  %shr1075.i.i = lshr i32 %706, 18, !dbg !1936
  %and1076.i.i = and i32 %shr1075.i.i, 63, !dbg !1936
  %idxprom1077.i.i = zext i32 %and1076.i.i to i64, !dbg !1936
  %arrayidx1078.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1077.i.i, !dbg !1936
  %707 = load i32, i32* %arrayidx1078.i.i, align 4, !dbg !1936
  %xor1079.i.i = xor i32 %xor1074.i.i, %707, !dbg !1936
  %708 = load i32, i32* %u.i.i, align 4, !dbg !1936
  %shr1080.i.i = lshr i32 %708, 26, !dbg !1936
  %idxprom1082.i.i = zext i32 %shr1080.i.i to i64, !dbg !1936
  %arrayidx1083.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1082.i.i, !dbg !1936
  %709 = load i32, i32* %arrayidx1083.i.i, align 4, !dbg !1936
  %xor1084.i.i = xor i32 %xor1079.i.i, %709, !dbg !1936
  %710 = load i32, i32* %t.i.i, align 4, !dbg !1936
  %shr1085.i.i = lshr i32 %710, 2, !dbg !1936
  %and1086.i.i = and i32 %shr1085.i.i, 63, !dbg !1936
  %idxprom1087.i.i = zext i32 %and1086.i.i to i64, !dbg !1936
  %arrayidx1088.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1087.i.i, !dbg !1936
  %711 = load i32, i32* %arrayidx1088.i.i, align 4, !dbg !1936
  %xor1089.i.i = xor i32 %xor1084.i.i, %711, !dbg !1936
  %712 = load i32, i32* %t.i.i, align 4, !dbg !1936
  %shr1090.i.i = lshr i32 %712, 10, !dbg !1936
  %and1091.i.i = and i32 %shr1090.i.i, 63, !dbg !1936
  %idxprom1092.i.i = zext i32 %and1091.i.i to i64, !dbg !1936
  %arrayidx1093.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1092.i.i, !dbg !1936
  %713 = load i32, i32* %arrayidx1093.i.i, align 4, !dbg !1936
  %xor1094.i.i = xor i32 %xor1089.i.i, %713, !dbg !1936
  %714 = load i32, i32* %t.i.i, align 4, !dbg !1936
  %shr1095.i.i = lshr i32 %714, 18, !dbg !1936
  %and1096.i.i = and i32 %shr1095.i.i, 63, !dbg !1936
  %idxprom1097.i.i = zext i32 %and1096.i.i to i64, !dbg !1936
  %arrayidx1098.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1097.i.i, !dbg !1936
  %715 = load i32, i32* %arrayidx1098.i.i, align 4, !dbg !1936
  %xor1099.i.i = xor i32 %xor1094.i.i, %715, !dbg !1936
  %716 = load i32, i32* %t.i.i, align 4, !dbg !1936
  %shr1100.i.i = lshr i32 %716, 26, !dbg !1936
  %idxprom1102.i.i = zext i32 %shr1100.i.i to i64, !dbg !1936
  %arrayidx1103.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1102.i.i, !dbg !1936
  %717 = load i32, i32* %arrayidx1103.i.i, align 4, !dbg !1936
  %xor1104.i.i = xor i32 %xor1099.i.i, %717, !dbg !1936
  %718 = load i32, i32* %l.i.i, align 4, !dbg !1936
  %xor1105.i.i = xor i32 %718, %xor1104.i.i, !dbg !1936
  store i32 %xor1105.i.i, i32* %l.i.i, align 4, !dbg !1936
  %719 = load i32, i32* %l.i.i, align 4, !dbg !1937
  %720 = load i32*, i32** %s.i.i, align 8, !dbg !1937
  %arrayidx1106.i.i = getelementptr inbounds i32, i32* %720, i64 16, !dbg !1937
  %721 = load i32, i32* %arrayidx1106.i.i, align 4, !dbg !1937
  %xor1107.i.i = xor i32 %719, %721, !dbg !1937
  store i32 %xor1107.i.i, i32* %u.i.i, align 4, !dbg !1937
  %722 = load i32, i32* %l.i.i, align 4, !dbg !1937
  %723 = load i32*, i32** %s.i.i, align 8, !dbg !1937
  %arrayidx1108.i.i = getelementptr inbounds i32, i32* %723, i64 17, !dbg !1937
  %724 = load i32, i32* %arrayidx1108.i.i, align 4, !dbg !1937
  %xor1109.i.i = xor i32 %722, %724, !dbg !1937
  store i32 %xor1109.i.i, i32* %t.i.i, align 4, !dbg !1937
  %725 = load i32, i32* %t.i.i, align 4, !dbg !1762
  %726 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %725) #7, !dbg !1762, !srcloc !235
  store i32 %726, i32* %ret1110.i.i, align 4, !dbg !1762
  %727 = load i32, i32* %ret1110.i.i, align 4, !dbg !1762
  store i32 %727, i32* %tmp1111.i.i, align 4, !dbg !1762
  %728 = load i32, i32* %tmp1111.i.i, align 4, !dbg !1762
  store i32 %728, i32* %t.i.i, align 4, !dbg !1937
  %729 = load i32, i32* %u.i.i, align 4, !dbg !1937
  %shr1112.i.i = lshr i32 %729, 2, !dbg !1937
  %and1113.i.i = and i32 %shr1112.i.i, 63, !dbg !1937
  %idxprom1114.i.i = zext i32 %and1113.i.i to i64, !dbg !1937
  %arrayidx1115.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1114.i.i, !dbg !1937
  %730 = load i32, i32* %arrayidx1115.i.i, align 4, !dbg !1937
  %731 = load i32, i32* %u.i.i, align 4, !dbg !1937
  %shr1116.i.i = lshr i32 %731, 10, !dbg !1937
  %and1117.i.i = and i32 %shr1116.i.i, 63, !dbg !1937
  %idxprom1118.i.i = zext i32 %and1117.i.i to i64, !dbg !1937
  %arrayidx1119.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1118.i.i, !dbg !1937
  %732 = load i32, i32* %arrayidx1119.i.i, align 4, !dbg !1937
  %xor1120.i.i = xor i32 %730, %732, !dbg !1937
  %733 = load i32, i32* %u.i.i, align 4, !dbg !1937
  %shr1121.i.i = lshr i32 %733, 18, !dbg !1937
  %and1122.i.i = and i32 %shr1121.i.i, 63, !dbg !1937
  %idxprom1123.i.i = zext i32 %and1122.i.i to i64, !dbg !1937
  %arrayidx1124.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1123.i.i, !dbg !1937
  %734 = load i32, i32* %arrayidx1124.i.i, align 4, !dbg !1937
  %xor1125.i.i = xor i32 %xor1120.i.i, %734, !dbg !1937
  %735 = load i32, i32* %u.i.i, align 4, !dbg !1937
  %shr1126.i.i = lshr i32 %735, 26, !dbg !1937
  %idxprom1128.i.i = zext i32 %shr1126.i.i to i64, !dbg !1937
  %arrayidx1129.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1128.i.i, !dbg !1937
  %736 = load i32, i32* %arrayidx1129.i.i, align 4, !dbg !1937
  %xor1130.i.i = xor i32 %xor1125.i.i, %736, !dbg !1937
  %737 = load i32, i32* %t.i.i, align 4, !dbg !1937
  %shr1131.i.i = lshr i32 %737, 2, !dbg !1937
  %and1132.i.i = and i32 %shr1131.i.i, 63, !dbg !1937
  %idxprom1133.i.i = zext i32 %and1132.i.i to i64, !dbg !1937
  %arrayidx1134.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1133.i.i, !dbg !1937
  %738 = load i32, i32* %arrayidx1134.i.i, align 4, !dbg !1937
  %xor1135.i.i = xor i32 %xor1130.i.i, %738, !dbg !1937
  %739 = load i32, i32* %t.i.i, align 4, !dbg !1937
  %shr1136.i.i = lshr i32 %739, 10, !dbg !1937
  %and1137.i.i = and i32 %shr1136.i.i, 63, !dbg !1937
  %idxprom1138.i.i = zext i32 %and1137.i.i to i64, !dbg !1937
  %arrayidx1139.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1138.i.i, !dbg !1937
  %740 = load i32, i32* %arrayidx1139.i.i, align 4, !dbg !1937
  %xor1140.i.i = xor i32 %xor1135.i.i, %740, !dbg !1937
  %741 = load i32, i32* %t.i.i, align 4, !dbg !1937
  %shr1141.i.i = lshr i32 %741, 18, !dbg !1937
  %and1142.i.i = and i32 %shr1141.i.i, 63, !dbg !1937
  %idxprom1143.i.i = zext i32 %and1142.i.i to i64, !dbg !1937
  %arrayidx1144.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1143.i.i, !dbg !1937
  %742 = load i32, i32* %arrayidx1144.i.i, align 4, !dbg !1937
  %xor1145.i.i = xor i32 %xor1140.i.i, %742, !dbg !1937
  %743 = load i32, i32* %t.i.i, align 4, !dbg !1937
  %shr1146.i.i = lshr i32 %743, 26, !dbg !1937
  %idxprom1148.i.i = zext i32 %shr1146.i.i to i64, !dbg !1937
  %arrayidx1149.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1148.i.i, !dbg !1937
  %744 = load i32, i32* %arrayidx1149.i.i, align 4, !dbg !1937
  %xor1150.i.i = xor i32 %xor1145.i.i, %744, !dbg !1937
  %745 = load i32, i32* %r.i.i, align 4, !dbg !1937
  %xor1151.i.i = xor i32 %745, %xor1150.i.i, !dbg !1937
  store i32 %xor1151.i.i, i32* %r.i.i, align 4, !dbg !1937
  %746 = load i32, i32* %r.i.i, align 4, !dbg !1938
  %747 = load i32*, i32** %s.i.i, align 8, !dbg !1938
  %arrayidx1152.i.i = getelementptr inbounds i32, i32* %747, i64 14, !dbg !1938
  %748 = load i32, i32* %arrayidx1152.i.i, align 4, !dbg !1938
  %xor1153.i.i = xor i32 %746, %748, !dbg !1938
  store i32 %xor1153.i.i, i32* %u.i.i, align 4, !dbg !1938
  %749 = load i32, i32* %r.i.i, align 4, !dbg !1938
  %750 = load i32*, i32** %s.i.i, align 8, !dbg !1938
  %arrayidx1154.i.i = getelementptr inbounds i32, i32* %750, i64 15, !dbg !1938
  %751 = load i32, i32* %arrayidx1154.i.i, align 4, !dbg !1938
  %xor1155.i.i = xor i32 %749, %751, !dbg !1938
  store i32 %xor1155.i.i, i32* %t.i.i, align 4, !dbg !1938
  %752 = load i32, i32* %t.i.i, align 4, !dbg !1763
  %753 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %752) #7, !dbg !1763, !srcloc !241
  store i32 %753, i32* %ret1156.i.i, align 4, !dbg !1763
  %754 = load i32, i32* %ret1156.i.i, align 4, !dbg !1763
  store i32 %754, i32* %tmp1157.i.i, align 4, !dbg !1763
  %755 = load i32, i32* %tmp1157.i.i, align 4, !dbg !1763
  store i32 %755, i32* %t.i.i, align 4, !dbg !1938
  %756 = load i32, i32* %u.i.i, align 4, !dbg !1938
  %shr1158.i.i = lshr i32 %756, 2, !dbg !1938
  %and1159.i.i = and i32 %shr1158.i.i, 63, !dbg !1938
  %idxprom1160.i.i = zext i32 %and1159.i.i to i64, !dbg !1938
  %arrayidx1161.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1160.i.i, !dbg !1938
  %757 = load i32, i32* %arrayidx1161.i.i, align 4, !dbg !1938
  %758 = load i32, i32* %u.i.i, align 4, !dbg !1938
  %shr1162.i.i = lshr i32 %758, 10, !dbg !1938
  %and1163.i.i = and i32 %shr1162.i.i, 63, !dbg !1938
  %idxprom1164.i.i = zext i32 %and1163.i.i to i64, !dbg !1938
  %arrayidx1165.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1164.i.i, !dbg !1938
  %759 = load i32, i32* %arrayidx1165.i.i, align 4, !dbg !1938
  %xor1166.i.i = xor i32 %757, %759, !dbg !1938
  %760 = load i32, i32* %u.i.i, align 4, !dbg !1938
  %shr1167.i.i = lshr i32 %760, 18, !dbg !1938
  %and1168.i.i = and i32 %shr1167.i.i, 63, !dbg !1938
  %idxprom1169.i.i = zext i32 %and1168.i.i to i64, !dbg !1938
  %arrayidx1170.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1169.i.i, !dbg !1938
  %761 = load i32, i32* %arrayidx1170.i.i, align 4, !dbg !1938
  %xor1171.i.i = xor i32 %xor1166.i.i, %761, !dbg !1938
  %762 = load i32, i32* %u.i.i, align 4, !dbg !1938
  %shr1172.i.i = lshr i32 %762, 26, !dbg !1938
  %idxprom1174.i.i = zext i32 %shr1172.i.i to i64, !dbg !1938
  %arrayidx1175.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1174.i.i, !dbg !1938
  %763 = load i32, i32* %arrayidx1175.i.i, align 4, !dbg !1938
  %xor1176.i.i = xor i32 %xor1171.i.i, %763, !dbg !1938
  %764 = load i32, i32* %t.i.i, align 4, !dbg !1938
  %shr1177.i.i = lshr i32 %764, 2, !dbg !1938
  %and1178.i.i = and i32 %shr1177.i.i, 63, !dbg !1938
  %idxprom1179.i.i = zext i32 %and1178.i.i to i64, !dbg !1938
  %arrayidx1180.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1179.i.i, !dbg !1938
  %765 = load i32, i32* %arrayidx1180.i.i, align 4, !dbg !1938
  %xor1181.i.i = xor i32 %xor1176.i.i, %765, !dbg !1938
  %766 = load i32, i32* %t.i.i, align 4, !dbg !1938
  %shr1182.i.i = lshr i32 %766, 10, !dbg !1938
  %and1183.i.i = and i32 %shr1182.i.i, 63, !dbg !1938
  %idxprom1184.i.i = zext i32 %and1183.i.i to i64, !dbg !1938
  %arrayidx1185.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1184.i.i, !dbg !1938
  %767 = load i32, i32* %arrayidx1185.i.i, align 4, !dbg !1938
  %xor1186.i.i = xor i32 %xor1181.i.i, %767, !dbg !1938
  %768 = load i32, i32* %t.i.i, align 4, !dbg !1938
  %shr1187.i.i = lshr i32 %768, 18, !dbg !1938
  %and1188.i.i = and i32 %shr1187.i.i, 63, !dbg !1938
  %idxprom1189.i.i = zext i32 %and1188.i.i to i64, !dbg !1938
  %arrayidx1190.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1189.i.i, !dbg !1938
  %769 = load i32, i32* %arrayidx1190.i.i, align 4, !dbg !1938
  %xor1191.i.i = xor i32 %xor1186.i.i, %769, !dbg !1938
  %770 = load i32, i32* %t.i.i, align 4, !dbg !1938
  %shr1192.i.i = lshr i32 %770, 26, !dbg !1938
  %idxprom1194.i.i = zext i32 %shr1192.i.i to i64, !dbg !1938
  %arrayidx1195.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1194.i.i, !dbg !1938
  %771 = load i32, i32* %arrayidx1195.i.i, align 4, !dbg !1938
  %xor1196.i.i = xor i32 %xor1191.i.i, %771, !dbg !1938
  %772 = load i32, i32* %l.i.i, align 4, !dbg !1938
  %xor1197.i.i = xor i32 %772, %xor1196.i.i, !dbg !1938
  store i32 %xor1197.i.i, i32* %l.i.i, align 4, !dbg !1938
  %773 = load i32, i32* %l.i.i, align 4, !dbg !1939
  %774 = load i32*, i32** %s.i.i, align 8, !dbg !1939
  %arrayidx1198.i.i = getelementptr inbounds i32, i32* %774, i64 12, !dbg !1939
  %775 = load i32, i32* %arrayidx1198.i.i, align 4, !dbg !1939
  %xor1199.i.i = xor i32 %773, %775, !dbg !1939
  store i32 %xor1199.i.i, i32* %u.i.i, align 4, !dbg !1939
  %776 = load i32, i32* %l.i.i, align 4, !dbg !1939
  %777 = load i32*, i32** %s.i.i, align 8, !dbg !1939
  %arrayidx1200.i.i = getelementptr inbounds i32, i32* %777, i64 13, !dbg !1939
  %778 = load i32, i32* %arrayidx1200.i.i, align 4, !dbg !1939
  %xor1201.i.i = xor i32 %776, %778, !dbg !1939
  store i32 %xor1201.i.i, i32* %t.i.i, align 4, !dbg !1939
  %779 = load i32, i32* %t.i.i, align 4, !dbg !1764
  %780 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %779) #7, !dbg !1764, !srcloc !247
  store i32 %780, i32* %ret1202.i.i, align 4, !dbg !1764
  %781 = load i32, i32* %ret1202.i.i, align 4, !dbg !1764
  store i32 %781, i32* %tmp1203.i.i, align 4, !dbg !1764
  %782 = load i32, i32* %tmp1203.i.i, align 4, !dbg !1764
  store i32 %782, i32* %t.i.i, align 4, !dbg !1939
  %783 = load i32, i32* %u.i.i, align 4, !dbg !1939
  %shr1204.i.i = lshr i32 %783, 2, !dbg !1939
  %and1205.i.i = and i32 %shr1204.i.i, 63, !dbg !1939
  %idxprom1206.i.i = zext i32 %and1205.i.i to i64, !dbg !1939
  %arrayidx1207.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1206.i.i, !dbg !1939
  %784 = load i32, i32* %arrayidx1207.i.i, align 4, !dbg !1939
  %785 = load i32, i32* %u.i.i, align 4, !dbg !1939
  %shr1208.i.i = lshr i32 %785, 10, !dbg !1939
  %and1209.i.i = and i32 %shr1208.i.i, 63, !dbg !1939
  %idxprom1210.i.i = zext i32 %and1209.i.i to i64, !dbg !1939
  %arrayidx1211.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1210.i.i, !dbg !1939
  %786 = load i32, i32* %arrayidx1211.i.i, align 4, !dbg !1939
  %xor1212.i.i = xor i32 %784, %786, !dbg !1939
  %787 = load i32, i32* %u.i.i, align 4, !dbg !1939
  %shr1213.i.i = lshr i32 %787, 18, !dbg !1939
  %and1214.i.i = and i32 %shr1213.i.i, 63, !dbg !1939
  %idxprom1215.i.i = zext i32 %and1214.i.i to i64, !dbg !1939
  %arrayidx1216.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1215.i.i, !dbg !1939
  %788 = load i32, i32* %arrayidx1216.i.i, align 4, !dbg !1939
  %xor1217.i.i = xor i32 %xor1212.i.i, %788, !dbg !1939
  %789 = load i32, i32* %u.i.i, align 4, !dbg !1939
  %shr1218.i.i = lshr i32 %789, 26, !dbg !1939
  %idxprom1220.i.i = zext i32 %shr1218.i.i to i64, !dbg !1939
  %arrayidx1221.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1220.i.i, !dbg !1939
  %790 = load i32, i32* %arrayidx1221.i.i, align 4, !dbg !1939
  %xor1222.i.i = xor i32 %xor1217.i.i, %790, !dbg !1939
  %791 = load i32, i32* %t.i.i, align 4, !dbg !1939
  %shr1223.i.i = lshr i32 %791, 2, !dbg !1939
  %and1224.i.i = and i32 %shr1223.i.i, 63, !dbg !1939
  %idxprom1225.i.i = zext i32 %and1224.i.i to i64, !dbg !1939
  %arrayidx1226.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1225.i.i, !dbg !1939
  %792 = load i32, i32* %arrayidx1226.i.i, align 4, !dbg !1939
  %xor1227.i.i = xor i32 %xor1222.i.i, %792, !dbg !1939
  %793 = load i32, i32* %t.i.i, align 4, !dbg !1939
  %shr1228.i.i = lshr i32 %793, 10, !dbg !1939
  %and1229.i.i = and i32 %shr1228.i.i, 63, !dbg !1939
  %idxprom1230.i.i = zext i32 %and1229.i.i to i64, !dbg !1939
  %arrayidx1231.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1230.i.i, !dbg !1939
  %794 = load i32, i32* %arrayidx1231.i.i, align 4, !dbg !1939
  %xor1232.i.i = xor i32 %xor1227.i.i, %794, !dbg !1939
  %795 = load i32, i32* %t.i.i, align 4, !dbg !1939
  %shr1233.i.i = lshr i32 %795, 18, !dbg !1939
  %and1234.i.i = and i32 %shr1233.i.i, 63, !dbg !1939
  %idxprom1235.i.i = zext i32 %and1234.i.i to i64, !dbg !1939
  %arrayidx1236.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1235.i.i, !dbg !1939
  %796 = load i32, i32* %arrayidx1236.i.i, align 4, !dbg !1939
  %xor1237.i.i = xor i32 %xor1232.i.i, %796, !dbg !1939
  %797 = load i32, i32* %t.i.i, align 4, !dbg !1939
  %shr1238.i.i = lshr i32 %797, 26, !dbg !1939
  %idxprom1240.i.i = zext i32 %shr1238.i.i to i64, !dbg !1939
  %arrayidx1241.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1240.i.i, !dbg !1939
  %798 = load i32, i32* %arrayidx1241.i.i, align 4, !dbg !1939
  %xor1242.i.i = xor i32 %xor1237.i.i, %798, !dbg !1939
  %799 = load i32, i32* %r.i.i, align 4, !dbg !1939
  %xor1243.i.i = xor i32 %799, %xor1242.i.i, !dbg !1939
  store i32 %xor1243.i.i, i32* %r.i.i, align 4, !dbg !1939
  %800 = load i32, i32* %r.i.i, align 4, !dbg !1940
  %801 = load i32*, i32** %s.i.i, align 8, !dbg !1940
  %arrayidx1244.i.i = getelementptr inbounds i32, i32* %801, i64 10, !dbg !1940
  %802 = load i32, i32* %arrayidx1244.i.i, align 4, !dbg !1940
  %xor1245.i.i = xor i32 %800, %802, !dbg !1940
  store i32 %xor1245.i.i, i32* %u.i.i, align 4, !dbg !1940
  %803 = load i32, i32* %r.i.i, align 4, !dbg !1940
  %804 = load i32*, i32** %s.i.i, align 8, !dbg !1940
  %arrayidx1246.i.i = getelementptr inbounds i32, i32* %804, i64 11, !dbg !1940
  %805 = load i32, i32* %arrayidx1246.i.i, align 4, !dbg !1940
  %xor1247.i.i = xor i32 %803, %805, !dbg !1940
  store i32 %xor1247.i.i, i32* %t.i.i, align 4, !dbg !1940
  %806 = load i32, i32* %t.i.i, align 4, !dbg !1765
  %807 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %806) #7, !dbg !1765, !srcloc !253
  store i32 %807, i32* %ret1248.i.i, align 4, !dbg !1765
  %808 = load i32, i32* %ret1248.i.i, align 4, !dbg !1765
  store i32 %808, i32* %tmp1249.i.i, align 4, !dbg !1765
  %809 = load i32, i32* %tmp1249.i.i, align 4, !dbg !1765
  store i32 %809, i32* %t.i.i, align 4, !dbg !1940
  %810 = load i32, i32* %u.i.i, align 4, !dbg !1940
  %shr1250.i.i = lshr i32 %810, 2, !dbg !1940
  %and1251.i.i = and i32 %shr1250.i.i, 63, !dbg !1940
  %idxprom1252.i.i = zext i32 %and1251.i.i to i64, !dbg !1940
  %arrayidx1253.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1252.i.i, !dbg !1940
  %811 = load i32, i32* %arrayidx1253.i.i, align 4, !dbg !1940
  %812 = load i32, i32* %u.i.i, align 4, !dbg !1940
  %shr1254.i.i = lshr i32 %812, 10, !dbg !1940
  %and1255.i.i = and i32 %shr1254.i.i, 63, !dbg !1940
  %idxprom1256.i.i = zext i32 %and1255.i.i to i64, !dbg !1940
  %arrayidx1257.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1256.i.i, !dbg !1940
  %813 = load i32, i32* %arrayidx1257.i.i, align 4, !dbg !1940
  %xor1258.i.i = xor i32 %811, %813, !dbg !1940
  %814 = load i32, i32* %u.i.i, align 4, !dbg !1940
  %shr1259.i.i = lshr i32 %814, 18, !dbg !1940
  %and1260.i.i = and i32 %shr1259.i.i, 63, !dbg !1940
  %idxprom1261.i.i = zext i32 %and1260.i.i to i64, !dbg !1940
  %arrayidx1262.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1261.i.i, !dbg !1940
  %815 = load i32, i32* %arrayidx1262.i.i, align 4, !dbg !1940
  %xor1263.i.i = xor i32 %xor1258.i.i, %815, !dbg !1940
  %816 = load i32, i32* %u.i.i, align 4, !dbg !1940
  %shr1264.i.i = lshr i32 %816, 26, !dbg !1940
  %idxprom1266.i.i = zext i32 %shr1264.i.i to i64, !dbg !1940
  %arrayidx1267.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1266.i.i, !dbg !1940
  %817 = load i32, i32* %arrayidx1267.i.i, align 4, !dbg !1940
  %xor1268.i.i = xor i32 %xor1263.i.i, %817, !dbg !1940
  %818 = load i32, i32* %t.i.i, align 4, !dbg !1940
  %shr1269.i.i = lshr i32 %818, 2, !dbg !1940
  %and1270.i.i = and i32 %shr1269.i.i, 63, !dbg !1940
  %idxprom1271.i.i = zext i32 %and1270.i.i to i64, !dbg !1940
  %arrayidx1272.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1271.i.i, !dbg !1940
  %819 = load i32, i32* %arrayidx1272.i.i, align 4, !dbg !1940
  %xor1273.i.i = xor i32 %xor1268.i.i, %819, !dbg !1940
  %820 = load i32, i32* %t.i.i, align 4, !dbg !1940
  %shr1274.i.i = lshr i32 %820, 10, !dbg !1940
  %and1275.i.i = and i32 %shr1274.i.i, 63, !dbg !1940
  %idxprom1276.i.i = zext i32 %and1275.i.i to i64, !dbg !1940
  %arrayidx1277.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1276.i.i, !dbg !1940
  %821 = load i32, i32* %arrayidx1277.i.i, align 4, !dbg !1940
  %xor1278.i.i = xor i32 %xor1273.i.i, %821, !dbg !1940
  %822 = load i32, i32* %t.i.i, align 4, !dbg !1940
  %shr1279.i.i = lshr i32 %822, 18, !dbg !1940
  %and1280.i.i = and i32 %shr1279.i.i, 63, !dbg !1940
  %idxprom1281.i.i = zext i32 %and1280.i.i to i64, !dbg !1940
  %arrayidx1282.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1281.i.i, !dbg !1940
  %823 = load i32, i32* %arrayidx1282.i.i, align 4, !dbg !1940
  %xor1283.i.i = xor i32 %xor1278.i.i, %823, !dbg !1940
  %824 = load i32, i32* %t.i.i, align 4, !dbg !1940
  %shr1284.i.i = lshr i32 %824, 26, !dbg !1940
  %idxprom1286.i.i = zext i32 %shr1284.i.i to i64, !dbg !1940
  %arrayidx1287.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1286.i.i, !dbg !1940
  %825 = load i32, i32* %arrayidx1287.i.i, align 4, !dbg !1940
  %xor1288.i.i = xor i32 %xor1283.i.i, %825, !dbg !1940
  %826 = load i32, i32* %l.i.i, align 4, !dbg !1940
  %xor1289.i.i = xor i32 %826, %xor1288.i.i, !dbg !1940
  store i32 %xor1289.i.i, i32* %l.i.i, align 4, !dbg !1940
  %827 = load i32, i32* %l.i.i, align 4, !dbg !1941
  %828 = load i32*, i32** %s.i.i, align 8, !dbg !1941
  %arrayidx1290.i.i = getelementptr inbounds i32, i32* %828, i64 8, !dbg !1941
  %829 = load i32, i32* %arrayidx1290.i.i, align 4, !dbg !1941
  %xor1291.i.i = xor i32 %827, %829, !dbg !1941
  store i32 %xor1291.i.i, i32* %u.i.i, align 4, !dbg !1941
  %830 = load i32, i32* %l.i.i, align 4, !dbg !1941
  %831 = load i32*, i32** %s.i.i, align 8, !dbg !1941
  %arrayidx1292.i.i = getelementptr inbounds i32, i32* %831, i64 9, !dbg !1941
  %832 = load i32, i32* %arrayidx1292.i.i, align 4, !dbg !1941
  %xor1293.i.i = xor i32 %830, %832, !dbg !1941
  store i32 %xor1293.i.i, i32* %t.i.i, align 4, !dbg !1941
  %833 = load i32, i32* %t.i.i, align 4, !dbg !1766
  %834 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %833) #7, !dbg !1766, !srcloc !259
  store i32 %834, i32* %ret1294.i.i, align 4, !dbg !1766
  %835 = load i32, i32* %ret1294.i.i, align 4, !dbg !1766
  store i32 %835, i32* %tmp1295.i.i, align 4, !dbg !1766
  %836 = load i32, i32* %tmp1295.i.i, align 4, !dbg !1766
  store i32 %836, i32* %t.i.i, align 4, !dbg !1941
  %837 = load i32, i32* %u.i.i, align 4, !dbg !1941
  %shr1296.i.i = lshr i32 %837, 2, !dbg !1941
  %and1297.i.i = and i32 %shr1296.i.i, 63, !dbg !1941
  %idxprom1298.i.i = zext i32 %and1297.i.i to i64, !dbg !1941
  %arrayidx1299.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1298.i.i, !dbg !1941
  %838 = load i32, i32* %arrayidx1299.i.i, align 4, !dbg !1941
  %839 = load i32, i32* %u.i.i, align 4, !dbg !1941
  %shr1300.i.i = lshr i32 %839, 10, !dbg !1941
  %and1301.i.i = and i32 %shr1300.i.i, 63, !dbg !1941
  %idxprom1302.i.i = zext i32 %and1301.i.i to i64, !dbg !1941
  %arrayidx1303.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1302.i.i, !dbg !1941
  %840 = load i32, i32* %arrayidx1303.i.i, align 4, !dbg !1941
  %xor1304.i.i = xor i32 %838, %840, !dbg !1941
  %841 = load i32, i32* %u.i.i, align 4, !dbg !1941
  %shr1305.i.i = lshr i32 %841, 18, !dbg !1941
  %and1306.i.i = and i32 %shr1305.i.i, 63, !dbg !1941
  %idxprom1307.i.i = zext i32 %and1306.i.i to i64, !dbg !1941
  %arrayidx1308.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1307.i.i, !dbg !1941
  %842 = load i32, i32* %arrayidx1308.i.i, align 4, !dbg !1941
  %xor1309.i.i = xor i32 %xor1304.i.i, %842, !dbg !1941
  %843 = load i32, i32* %u.i.i, align 4, !dbg !1941
  %shr1310.i.i = lshr i32 %843, 26, !dbg !1941
  %idxprom1312.i.i = zext i32 %shr1310.i.i to i64, !dbg !1941
  %arrayidx1313.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1312.i.i, !dbg !1941
  %844 = load i32, i32* %arrayidx1313.i.i, align 4, !dbg !1941
  %xor1314.i.i = xor i32 %xor1309.i.i, %844, !dbg !1941
  %845 = load i32, i32* %t.i.i, align 4, !dbg !1941
  %shr1315.i.i = lshr i32 %845, 2, !dbg !1941
  %and1316.i.i = and i32 %shr1315.i.i, 63, !dbg !1941
  %idxprom1317.i.i = zext i32 %and1316.i.i to i64, !dbg !1941
  %arrayidx1318.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1317.i.i, !dbg !1941
  %846 = load i32, i32* %arrayidx1318.i.i, align 4, !dbg !1941
  %xor1319.i.i = xor i32 %xor1314.i.i, %846, !dbg !1941
  %847 = load i32, i32* %t.i.i, align 4, !dbg !1941
  %shr1320.i.i = lshr i32 %847, 10, !dbg !1941
  %and1321.i.i = and i32 %shr1320.i.i, 63, !dbg !1941
  %idxprom1322.i.i = zext i32 %and1321.i.i to i64, !dbg !1941
  %arrayidx1323.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1322.i.i, !dbg !1941
  %848 = load i32, i32* %arrayidx1323.i.i, align 4, !dbg !1941
  %xor1324.i.i = xor i32 %xor1319.i.i, %848, !dbg !1941
  %849 = load i32, i32* %t.i.i, align 4, !dbg !1941
  %shr1325.i.i = lshr i32 %849, 18, !dbg !1941
  %and1326.i.i = and i32 %shr1325.i.i, 63, !dbg !1941
  %idxprom1327.i.i = zext i32 %and1326.i.i to i64, !dbg !1941
  %arrayidx1328.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1327.i.i, !dbg !1941
  %850 = load i32, i32* %arrayidx1328.i.i, align 4, !dbg !1941
  %xor1329.i.i = xor i32 %xor1324.i.i, %850, !dbg !1941
  %851 = load i32, i32* %t.i.i, align 4, !dbg !1941
  %shr1330.i.i = lshr i32 %851, 26, !dbg !1941
  %idxprom1332.i.i = zext i32 %shr1330.i.i to i64, !dbg !1941
  %arrayidx1333.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1332.i.i, !dbg !1941
  %852 = load i32, i32* %arrayidx1333.i.i, align 4, !dbg !1941
  %xor1334.i.i = xor i32 %xor1329.i.i, %852, !dbg !1941
  %853 = load i32, i32* %r.i.i, align 4, !dbg !1941
  %xor1335.i.i = xor i32 %853, %xor1334.i.i, !dbg !1941
  store i32 %xor1335.i.i, i32* %r.i.i, align 4, !dbg !1941
  %854 = load i32, i32* %r.i.i, align 4, !dbg !1942
  %855 = load i32*, i32** %s.i.i, align 8, !dbg !1942
  %arrayidx1336.i.i = getelementptr inbounds i32, i32* %855, i64 6, !dbg !1942
  %856 = load i32, i32* %arrayidx1336.i.i, align 4, !dbg !1942
  %xor1337.i.i = xor i32 %854, %856, !dbg !1942
  store i32 %xor1337.i.i, i32* %u.i.i, align 4, !dbg !1942
  %857 = load i32, i32* %r.i.i, align 4, !dbg !1942
  %858 = load i32*, i32** %s.i.i, align 8, !dbg !1942
  %arrayidx1338.i.i = getelementptr inbounds i32, i32* %858, i64 7, !dbg !1942
  %859 = load i32, i32* %arrayidx1338.i.i, align 4, !dbg !1942
  %xor1339.i.i = xor i32 %857, %859, !dbg !1942
  store i32 %xor1339.i.i, i32* %t.i.i, align 4, !dbg !1942
  %860 = load i32, i32* %t.i.i, align 4, !dbg !1767
  %861 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %860) #7, !dbg !1767, !srcloc !265
  store i32 %861, i32* %ret1340.i.i, align 4, !dbg !1767
  %862 = load i32, i32* %ret1340.i.i, align 4, !dbg !1767
  store i32 %862, i32* %tmp1341.i.i, align 4, !dbg !1767
  %863 = load i32, i32* %tmp1341.i.i, align 4, !dbg !1767
  store i32 %863, i32* %t.i.i, align 4, !dbg !1942
  %864 = load i32, i32* %u.i.i, align 4, !dbg !1942
  %shr1342.i.i = lshr i32 %864, 2, !dbg !1942
  %and1343.i.i = and i32 %shr1342.i.i, 63, !dbg !1942
  %idxprom1344.i.i = zext i32 %and1343.i.i to i64, !dbg !1942
  %arrayidx1345.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1344.i.i, !dbg !1942
  %865 = load i32, i32* %arrayidx1345.i.i, align 4, !dbg !1942
  %866 = load i32, i32* %u.i.i, align 4, !dbg !1942
  %shr1346.i.i = lshr i32 %866, 10, !dbg !1942
  %and1347.i.i = and i32 %shr1346.i.i, 63, !dbg !1942
  %idxprom1348.i.i = zext i32 %and1347.i.i to i64, !dbg !1942
  %arrayidx1349.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1348.i.i, !dbg !1942
  %867 = load i32, i32* %arrayidx1349.i.i, align 4, !dbg !1942
  %xor1350.i.i = xor i32 %865, %867, !dbg !1942
  %868 = load i32, i32* %u.i.i, align 4, !dbg !1942
  %shr1351.i.i = lshr i32 %868, 18, !dbg !1942
  %and1352.i.i = and i32 %shr1351.i.i, 63, !dbg !1942
  %idxprom1353.i.i = zext i32 %and1352.i.i to i64, !dbg !1942
  %arrayidx1354.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1353.i.i, !dbg !1942
  %869 = load i32, i32* %arrayidx1354.i.i, align 4, !dbg !1942
  %xor1355.i.i = xor i32 %xor1350.i.i, %869, !dbg !1942
  %870 = load i32, i32* %u.i.i, align 4, !dbg !1942
  %shr1356.i.i = lshr i32 %870, 26, !dbg !1942
  %idxprom1358.i.i = zext i32 %shr1356.i.i to i64, !dbg !1942
  %arrayidx1359.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1358.i.i, !dbg !1942
  %871 = load i32, i32* %arrayidx1359.i.i, align 4, !dbg !1942
  %xor1360.i.i = xor i32 %xor1355.i.i, %871, !dbg !1942
  %872 = load i32, i32* %t.i.i, align 4, !dbg !1942
  %shr1361.i.i = lshr i32 %872, 2, !dbg !1942
  %and1362.i.i = and i32 %shr1361.i.i, 63, !dbg !1942
  %idxprom1363.i.i = zext i32 %and1362.i.i to i64, !dbg !1942
  %arrayidx1364.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1363.i.i, !dbg !1942
  %873 = load i32, i32* %arrayidx1364.i.i, align 4, !dbg !1942
  %xor1365.i.i = xor i32 %xor1360.i.i, %873, !dbg !1942
  %874 = load i32, i32* %t.i.i, align 4, !dbg !1942
  %shr1366.i.i = lshr i32 %874, 10, !dbg !1942
  %and1367.i.i = and i32 %shr1366.i.i, 63, !dbg !1942
  %idxprom1368.i.i = zext i32 %and1367.i.i to i64, !dbg !1942
  %arrayidx1369.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1368.i.i, !dbg !1942
  %875 = load i32, i32* %arrayidx1369.i.i, align 4, !dbg !1942
  %xor1370.i.i = xor i32 %xor1365.i.i, %875, !dbg !1942
  %876 = load i32, i32* %t.i.i, align 4, !dbg !1942
  %shr1371.i.i = lshr i32 %876, 18, !dbg !1942
  %and1372.i.i = and i32 %shr1371.i.i, 63, !dbg !1942
  %idxprom1373.i.i = zext i32 %and1372.i.i to i64, !dbg !1942
  %arrayidx1374.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1373.i.i, !dbg !1942
  %877 = load i32, i32* %arrayidx1374.i.i, align 4, !dbg !1942
  %xor1375.i.i = xor i32 %xor1370.i.i, %877, !dbg !1942
  %878 = load i32, i32* %t.i.i, align 4, !dbg !1942
  %shr1376.i.i = lshr i32 %878, 26, !dbg !1942
  %idxprom1378.i.i = zext i32 %shr1376.i.i to i64, !dbg !1942
  %arrayidx1379.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1378.i.i, !dbg !1942
  %879 = load i32, i32* %arrayidx1379.i.i, align 4, !dbg !1942
  %xor1380.i.i = xor i32 %xor1375.i.i, %879, !dbg !1942
  %880 = load i32, i32* %l.i.i, align 4, !dbg !1942
  %xor1381.i.i = xor i32 %880, %xor1380.i.i, !dbg !1942
  store i32 %xor1381.i.i, i32* %l.i.i, align 4, !dbg !1942
  %881 = load i32, i32* %l.i.i, align 4, !dbg !1943
  %882 = load i32*, i32** %s.i.i, align 8, !dbg !1943
  %arrayidx1382.i.i = getelementptr inbounds i32, i32* %882, i64 4, !dbg !1943
  %883 = load i32, i32* %arrayidx1382.i.i, align 4, !dbg !1943
  %xor1383.i.i = xor i32 %881, %883, !dbg !1943
  store i32 %xor1383.i.i, i32* %u.i.i, align 4, !dbg !1943
  %884 = load i32, i32* %l.i.i, align 4, !dbg !1943
  %885 = load i32*, i32** %s.i.i, align 8, !dbg !1943
  %arrayidx1384.i.i = getelementptr inbounds i32, i32* %885, i64 5, !dbg !1943
  %886 = load i32, i32* %arrayidx1384.i.i, align 4, !dbg !1943
  %xor1385.i.i = xor i32 %884, %886, !dbg !1943
  store i32 %xor1385.i.i, i32* %t.i.i, align 4, !dbg !1943
  %887 = load i32, i32* %t.i.i, align 4, !dbg !1768
  %888 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %887) #7, !dbg !1768, !srcloc !271
  store i32 %888, i32* %ret1386.i.i, align 4, !dbg !1768
  %889 = load i32, i32* %ret1386.i.i, align 4, !dbg !1768
  store i32 %889, i32* %tmp1387.i.i, align 4, !dbg !1768
  %890 = load i32, i32* %tmp1387.i.i, align 4, !dbg !1768
  store i32 %890, i32* %t.i.i, align 4, !dbg !1943
  %891 = load i32, i32* %u.i.i, align 4, !dbg !1943
  %shr1388.i.i = lshr i32 %891, 2, !dbg !1943
  %and1389.i.i = and i32 %shr1388.i.i, 63, !dbg !1943
  %idxprom1390.i.i = zext i32 %and1389.i.i to i64, !dbg !1943
  %arrayidx1391.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1390.i.i, !dbg !1943
  %892 = load i32, i32* %arrayidx1391.i.i, align 4, !dbg !1943
  %893 = load i32, i32* %u.i.i, align 4, !dbg !1943
  %shr1392.i.i = lshr i32 %893, 10, !dbg !1943
  %and1393.i.i = and i32 %shr1392.i.i, 63, !dbg !1943
  %idxprom1394.i.i = zext i32 %and1393.i.i to i64, !dbg !1943
  %arrayidx1395.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1394.i.i, !dbg !1943
  %894 = load i32, i32* %arrayidx1395.i.i, align 4, !dbg !1943
  %xor1396.i.i = xor i32 %892, %894, !dbg !1943
  %895 = load i32, i32* %u.i.i, align 4, !dbg !1943
  %shr1397.i.i = lshr i32 %895, 18, !dbg !1943
  %and1398.i.i = and i32 %shr1397.i.i, 63, !dbg !1943
  %idxprom1399.i.i = zext i32 %and1398.i.i to i64, !dbg !1943
  %arrayidx1400.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1399.i.i, !dbg !1943
  %896 = load i32, i32* %arrayidx1400.i.i, align 4, !dbg !1943
  %xor1401.i.i = xor i32 %xor1396.i.i, %896, !dbg !1943
  %897 = load i32, i32* %u.i.i, align 4, !dbg !1943
  %shr1402.i.i = lshr i32 %897, 26, !dbg !1943
  %idxprom1404.i.i = zext i32 %shr1402.i.i to i64, !dbg !1943
  %arrayidx1405.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1404.i.i, !dbg !1943
  %898 = load i32, i32* %arrayidx1405.i.i, align 4, !dbg !1943
  %xor1406.i.i = xor i32 %xor1401.i.i, %898, !dbg !1943
  %899 = load i32, i32* %t.i.i, align 4, !dbg !1943
  %shr1407.i.i = lshr i32 %899, 2, !dbg !1943
  %and1408.i.i = and i32 %shr1407.i.i, 63, !dbg !1943
  %idxprom1409.i.i = zext i32 %and1408.i.i to i64, !dbg !1943
  %arrayidx1410.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1409.i.i, !dbg !1943
  %900 = load i32, i32* %arrayidx1410.i.i, align 4, !dbg !1943
  %xor1411.i.i = xor i32 %xor1406.i.i, %900, !dbg !1943
  %901 = load i32, i32* %t.i.i, align 4, !dbg !1943
  %shr1412.i.i = lshr i32 %901, 10, !dbg !1943
  %and1413.i.i = and i32 %shr1412.i.i, 63, !dbg !1943
  %idxprom1414.i.i = zext i32 %and1413.i.i to i64, !dbg !1943
  %arrayidx1415.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1414.i.i, !dbg !1943
  %902 = load i32, i32* %arrayidx1415.i.i, align 4, !dbg !1943
  %xor1416.i.i = xor i32 %xor1411.i.i, %902, !dbg !1943
  %903 = load i32, i32* %t.i.i, align 4, !dbg !1943
  %shr1417.i.i = lshr i32 %903, 18, !dbg !1943
  %and1418.i.i = and i32 %shr1417.i.i, 63, !dbg !1943
  %idxprom1419.i.i = zext i32 %and1418.i.i to i64, !dbg !1943
  %arrayidx1420.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1419.i.i, !dbg !1943
  %904 = load i32, i32* %arrayidx1420.i.i, align 4, !dbg !1943
  %xor1421.i.i = xor i32 %xor1416.i.i, %904, !dbg !1943
  %905 = load i32, i32* %t.i.i, align 4, !dbg !1943
  %shr1422.i.i = lshr i32 %905, 26, !dbg !1943
  %idxprom1424.i.i = zext i32 %shr1422.i.i to i64, !dbg !1943
  %arrayidx1425.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1424.i.i, !dbg !1943
  %906 = load i32, i32* %arrayidx1425.i.i, align 4, !dbg !1943
  %xor1426.i.i = xor i32 %xor1421.i.i, %906, !dbg !1943
  %907 = load i32, i32* %r.i.i, align 4, !dbg !1943
  %xor1427.i.i = xor i32 %907, %xor1426.i.i, !dbg !1943
  store i32 %xor1427.i.i, i32* %r.i.i, align 4, !dbg !1943
  %908 = load i32, i32* %r.i.i, align 4, !dbg !1944
  %909 = load i32*, i32** %s.i.i, align 8, !dbg !1944
  %arrayidx1428.i.i = getelementptr inbounds i32, i32* %909, i64 2, !dbg !1944
  %910 = load i32, i32* %arrayidx1428.i.i, align 4, !dbg !1944
  %xor1429.i.i = xor i32 %908, %910, !dbg !1944
  store i32 %xor1429.i.i, i32* %u.i.i, align 4, !dbg !1944
  %911 = load i32, i32* %r.i.i, align 4, !dbg !1944
  %912 = load i32*, i32** %s.i.i, align 8, !dbg !1944
  %arrayidx1430.i.i = getelementptr inbounds i32, i32* %912, i64 3, !dbg !1944
  %913 = load i32, i32* %arrayidx1430.i.i, align 4, !dbg !1944
  %xor1431.i.i = xor i32 %911, %913, !dbg !1944
  store i32 %xor1431.i.i, i32* %t.i.i, align 4, !dbg !1944
  %914 = load i32, i32* %t.i.i, align 4, !dbg !1769
  %915 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %914) #7, !dbg !1769, !srcloc !277
  store i32 %915, i32* %ret1432.i.i, align 4, !dbg !1769
  %916 = load i32, i32* %ret1432.i.i, align 4, !dbg !1769
  store i32 %916, i32* %tmp1433.i.i, align 4, !dbg !1769
  %917 = load i32, i32* %tmp1433.i.i, align 4, !dbg !1769
  store i32 %917, i32* %t.i.i, align 4, !dbg !1944
  %918 = load i32, i32* %u.i.i, align 4, !dbg !1944
  %shr1434.i.i = lshr i32 %918, 2, !dbg !1944
  %and1435.i.i = and i32 %shr1434.i.i, 63, !dbg !1944
  %idxprom1436.i.i = zext i32 %and1435.i.i to i64, !dbg !1944
  %arrayidx1437.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1436.i.i, !dbg !1944
  %919 = load i32, i32* %arrayidx1437.i.i, align 4, !dbg !1944
  %920 = load i32, i32* %u.i.i, align 4, !dbg !1944
  %shr1438.i.i = lshr i32 %920, 10, !dbg !1944
  %and1439.i.i = and i32 %shr1438.i.i, 63, !dbg !1944
  %idxprom1440.i.i = zext i32 %and1439.i.i to i64, !dbg !1944
  %arrayidx1441.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1440.i.i, !dbg !1944
  %921 = load i32, i32* %arrayidx1441.i.i, align 4, !dbg !1944
  %xor1442.i.i = xor i32 %919, %921, !dbg !1944
  %922 = load i32, i32* %u.i.i, align 4, !dbg !1944
  %shr1443.i.i = lshr i32 %922, 18, !dbg !1944
  %and1444.i.i = and i32 %shr1443.i.i, 63, !dbg !1944
  %idxprom1445.i.i = zext i32 %and1444.i.i to i64, !dbg !1944
  %arrayidx1446.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1445.i.i, !dbg !1944
  %923 = load i32, i32* %arrayidx1446.i.i, align 4, !dbg !1944
  %xor1447.i.i = xor i32 %xor1442.i.i, %923, !dbg !1944
  %924 = load i32, i32* %u.i.i, align 4, !dbg !1944
  %shr1448.i.i = lshr i32 %924, 26, !dbg !1944
  %idxprom1450.i.i = zext i32 %shr1448.i.i to i64, !dbg !1944
  %arrayidx1451.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1450.i.i, !dbg !1944
  %925 = load i32, i32* %arrayidx1451.i.i, align 4, !dbg !1944
  %xor1452.i.i = xor i32 %xor1447.i.i, %925, !dbg !1944
  %926 = load i32, i32* %t.i.i, align 4, !dbg !1944
  %shr1453.i.i = lshr i32 %926, 2, !dbg !1944
  %and1454.i.i = and i32 %shr1453.i.i, 63, !dbg !1944
  %idxprom1455.i.i = zext i32 %and1454.i.i to i64, !dbg !1944
  %arrayidx1456.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1455.i.i, !dbg !1944
  %927 = load i32, i32* %arrayidx1456.i.i, align 4, !dbg !1944
  %xor1457.i.i = xor i32 %xor1452.i.i, %927, !dbg !1944
  %928 = load i32, i32* %t.i.i, align 4, !dbg !1944
  %shr1458.i.i = lshr i32 %928, 10, !dbg !1944
  %and1459.i.i = and i32 %shr1458.i.i, 63, !dbg !1944
  %idxprom1460.i.i = zext i32 %and1459.i.i to i64, !dbg !1944
  %arrayidx1461.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1460.i.i, !dbg !1944
  %929 = load i32, i32* %arrayidx1461.i.i, align 4, !dbg !1944
  %xor1462.i.i = xor i32 %xor1457.i.i, %929, !dbg !1944
  %930 = load i32, i32* %t.i.i, align 4, !dbg !1944
  %shr1463.i.i = lshr i32 %930, 18, !dbg !1944
  %and1464.i.i = and i32 %shr1463.i.i, 63, !dbg !1944
  %idxprom1465.i.i = zext i32 %and1464.i.i to i64, !dbg !1944
  %arrayidx1466.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1465.i.i, !dbg !1944
  %931 = load i32, i32* %arrayidx1466.i.i, align 4, !dbg !1944
  %xor1467.i.i = xor i32 %xor1462.i.i, %931, !dbg !1944
  %932 = load i32, i32* %t.i.i, align 4, !dbg !1944
  %shr1468.i.i = lshr i32 %932, 26, !dbg !1944
  %idxprom1470.i.i = zext i32 %shr1468.i.i to i64, !dbg !1944
  %arrayidx1471.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1470.i.i, !dbg !1944
  %933 = load i32, i32* %arrayidx1471.i.i, align 4, !dbg !1944
  %xor1472.i.i = xor i32 %xor1467.i.i, %933, !dbg !1944
  %934 = load i32, i32* %l.i.i, align 4, !dbg !1944
  %xor1473.i.i = xor i32 %934, %xor1472.i.i, !dbg !1944
  store i32 %xor1473.i.i, i32* %l.i.i, align 4, !dbg !1944
  %935 = load i32, i32* %l.i.i, align 4, !dbg !1945
  %936 = load i32*, i32** %s.i.i, align 8, !dbg !1945
  %937 = load i32, i32* %936, align 4, !dbg !1945
  %xor1475.i.i = xor i32 %935, %937, !dbg !1945
  store i32 %xor1475.i.i, i32* %u.i.i, align 4, !dbg !1945
  %938 = load i32, i32* %l.i.i, align 4, !dbg !1945
  %939 = load i32*, i32** %s.i.i, align 8, !dbg !1945
  %arrayidx1476.i.i = getelementptr inbounds i32, i32* %939, i64 1, !dbg !1945
  %940 = load i32, i32* %arrayidx1476.i.i, align 4, !dbg !1945
  %xor1477.i.i = xor i32 %938, %940, !dbg !1945
  store i32 %xor1477.i.i, i32* %t.i.i, align 4, !dbg !1945
  %941 = load i32, i32* %t.i.i, align 4, !dbg !1770
  %942 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %941) #7, !dbg !1770, !srcloc !283
  store i32 %942, i32* %ret1478.i.i, align 4, !dbg !1770
  %943 = load i32, i32* %ret1478.i.i, align 4, !dbg !1770
  store i32 %943, i32* %tmp1479.i.i, align 4, !dbg !1770
  %944 = load i32, i32* %tmp1479.i.i, align 4, !dbg !1770
  store i32 %944, i32* %t.i.i, align 4, !dbg !1945
  %945 = load i32, i32* %u.i.i, align 4, !dbg !1945
  %shr1480.i.i = lshr i32 %945, 2, !dbg !1945
  %and1481.i.i = and i32 %shr1480.i.i, 63, !dbg !1945
  %idxprom1482.i.i = zext i32 %and1481.i.i to i64, !dbg !1945
  %arrayidx1483.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1482.i.i, !dbg !1945
  %946 = load i32, i32* %arrayidx1483.i.i, align 4, !dbg !1945
  %947 = load i32, i32* %u.i.i, align 4, !dbg !1945
  %shr1484.i.i = lshr i32 %947, 10, !dbg !1945
  %and1485.i.i = and i32 %shr1484.i.i, 63, !dbg !1945
  %idxprom1486.i.i = zext i32 %and1485.i.i to i64, !dbg !1945
  %arrayidx1487.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1486.i.i, !dbg !1945
  %948 = load i32, i32* %arrayidx1487.i.i, align 4, !dbg !1945
  %xor1488.i.i = xor i32 %946, %948, !dbg !1945
  %949 = load i32, i32* %u.i.i, align 4, !dbg !1945
  %shr1489.i.i = lshr i32 %949, 18, !dbg !1945
  %and1490.i.i = and i32 %shr1489.i.i, 63, !dbg !1945
  %idxprom1491.i.i = zext i32 %and1490.i.i to i64, !dbg !1945
  %arrayidx1492.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1491.i.i, !dbg !1945
  %950 = load i32, i32* %arrayidx1492.i.i, align 4, !dbg !1945
  %xor1493.i.i = xor i32 %xor1488.i.i, %950, !dbg !1945
  %951 = load i32, i32* %u.i.i, align 4, !dbg !1945
  %shr1494.i.i = lshr i32 %951, 26, !dbg !1945
  %idxprom1496.i.i = zext i32 %shr1494.i.i to i64, !dbg !1945
  %arrayidx1497.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1496.i.i, !dbg !1945
  %952 = load i32, i32* %arrayidx1497.i.i, align 4, !dbg !1945
  %xor1498.i.i = xor i32 %xor1493.i.i, %952, !dbg !1945
  %953 = load i32, i32* %t.i.i, align 4, !dbg !1945
  %shr1499.i.i = lshr i32 %953, 2, !dbg !1945
  %and1500.i.i = and i32 %shr1499.i.i, 63, !dbg !1945
  %idxprom1501.i.i = zext i32 %and1500.i.i to i64, !dbg !1945
  %arrayidx1502.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1501.i.i, !dbg !1945
  %954 = load i32, i32* %arrayidx1502.i.i, align 4, !dbg !1945
  %xor1503.i.i = xor i32 %xor1498.i.i, %954, !dbg !1945
  %955 = load i32, i32* %t.i.i, align 4, !dbg !1945
  %shr1504.i.i = lshr i32 %955, 10, !dbg !1945
  %and1505.i.i = and i32 %shr1504.i.i, 63, !dbg !1945
  %idxprom1506.i.i = zext i32 %and1505.i.i to i64, !dbg !1945
  %arrayidx1507.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1506.i.i, !dbg !1945
  %956 = load i32, i32* %arrayidx1507.i.i, align 4, !dbg !1945
  %xor1508.i.i = xor i32 %xor1503.i.i, %956, !dbg !1945
  %957 = load i32, i32* %t.i.i, align 4, !dbg !1945
  %shr1509.i.i = lshr i32 %957, 18, !dbg !1945
  %and1510.i.i = and i32 %shr1509.i.i, 63, !dbg !1945
  %idxprom1511.i.i = zext i32 %and1510.i.i to i64, !dbg !1945
  %arrayidx1512.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1511.i.i, !dbg !1945
  %958 = load i32, i32* %arrayidx1512.i.i, align 4, !dbg !1945
  %xor1513.i.i = xor i32 %xor1508.i.i, %958, !dbg !1945
  %959 = load i32, i32* %t.i.i, align 4, !dbg !1945
  %shr1514.i.i = lshr i32 %959, 26, !dbg !1945
  %idxprom1516.i.i = zext i32 %shr1514.i.i to i64, !dbg !1945
  %arrayidx1517.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1516.i.i, !dbg !1945
  %960 = load i32, i32* %arrayidx1517.i.i, align 4, !dbg !1945
  %xor1518.i.i = xor i32 %xor1513.i.i, %960, !dbg !1945
  %961 = load i32, i32* %r.i.i, align 4, !dbg !1945
  %xor1519.i.i = xor i32 %961, %xor1518.i.i, !dbg !1945
  store i32 %xor1519.i.i, i32* %r.i.i, align 4, !dbg !1945
  br label %DES_ecb_encrypt.exit

DES_ecb_encrypt.exit:                             ; preds = %if.then.i.i, %if.else.i.i
  %962 = load i32, i32* %l.i.i, align 4, !dbg !1771
  %963 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %962) #7, !dbg !1771, !srcloc !287
  store i32 %963, i32* %ret1520.i.i, align 4, !dbg !1771
  %964 = load i32, i32* %ret1520.i.i, align 4, !dbg !1771
  store i32 %964, i32* %tmp1521.i.i, align 4, !dbg !1771
  %965 = load i32, i32* %tmp1521.i.i, align 4, !dbg !1771
  %conv1522.i.i = zext i32 %965 to i64, !dbg !1946
  %and1523.i.i = and i64 %conv1522.i.i, 4294967295, !dbg !1947
  %conv1524.i.i = trunc i64 %and1523.i.i to i32, !dbg !1946
  store i32 %conv1524.i.i, i32* %l.i.i, align 4, !dbg !1948
  %966 = load i32, i32* %r.i.i, align 4, !dbg !1772
  %967 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %966) #7, !dbg !1772, !srcloc !294
  store i32 %967, i32* %ret1525.i.i, align 4, !dbg !1772
  %968 = load i32, i32* %ret1525.i.i, align 4, !dbg !1772
  store i32 %968, i32* %tmp1526.i.i, align 4, !dbg !1772
  %969 = load i32, i32* %tmp1526.i.i, align 4, !dbg !1772
  %conv1527.i.i = zext i32 %969 to i64, !dbg !1949
  %and1528.i.i = and i64 %conv1527.i.i, 4294967295, !dbg !1950
  %conv1529.i.i = trunc i64 %and1528.i.i to i32, !dbg !1949
  store i32 %conv1529.i.i, i32* %r.i.i, align 4, !dbg !1951
  %970 = load i32, i32* %r.i.i, align 4, !dbg !1773
  %shr1531.i.i = lshr i32 %970, 1, !dbg !1773
  %971 = load i32, i32* %l.i.i, align 4, !dbg !1773
  %xor1532.i.i = xor i32 %shr1531.i.i, %971, !dbg !1773
  %conv1533.i.i = zext i32 %xor1532.i.i to i64, !dbg !1773
  %and1534.i.i = and i64 %conv1533.i.i, 1431655765, !dbg !1773
  %conv1535.i.i = trunc i64 %and1534.i.i to i32, !dbg !1773
  store i32 %conv1535.i.i, i32* %tt1530.i.i, align 4, !dbg !1773
  %972 = load i32, i32* %tt1530.i.i, align 4, !dbg !1773
  %973 = load i32, i32* %l.i.i, align 4, !dbg !1773
  %xor1536.i.i = xor i32 %973, %972, !dbg !1773
  store i32 %xor1536.i.i, i32* %l.i.i, align 4, !dbg !1773
  %974 = load i32, i32* %tt1530.i.i, align 4, !dbg !1773
  %shl1537.i.i = shl i32 %974, 1, !dbg !1773
  %975 = load i32, i32* %r.i.i, align 4, !dbg !1773
  %xor1538.i.i = xor i32 %975, %shl1537.i.i, !dbg !1773
  store i32 %xor1538.i.i, i32* %r.i.i, align 4, !dbg !1773
  %976 = load i32, i32* %l.i.i, align 4, !dbg !1773
  %shr1539.i.i = lshr i32 %976, 8, !dbg !1773
  %977 = load i32, i32* %r.i.i, align 4, !dbg !1773
  %xor1540.i.i = xor i32 %shr1539.i.i, %977, !dbg !1773
  %conv1541.i.i = zext i32 %xor1540.i.i to i64, !dbg !1773
  %and1542.i.i = and i64 %conv1541.i.i, 16711935, !dbg !1773
  %conv1543.i.i = trunc i64 %and1542.i.i to i32, !dbg !1773
  store i32 %conv1543.i.i, i32* %tt1530.i.i, align 4, !dbg !1773
  %978 = load i32, i32* %tt1530.i.i, align 4, !dbg !1773
  %979 = load i32, i32* %r.i.i, align 4, !dbg !1773
  %xor1544.i.i = xor i32 %979, %978, !dbg !1773
  store i32 %xor1544.i.i, i32* %r.i.i, align 4, !dbg !1773
  %980 = load i32, i32* %tt1530.i.i, align 4, !dbg !1773
  %shl1545.i.i = shl i32 %980, 8, !dbg !1773
  %981 = load i32, i32* %l.i.i, align 4, !dbg !1773
  %xor1546.i.i = xor i32 %981, %shl1545.i.i, !dbg !1773
  store i32 %xor1546.i.i, i32* %l.i.i, align 4, !dbg !1773
  %982 = load i32, i32* %r.i.i, align 4, !dbg !1773
  %shr1547.i.i = lshr i32 %982, 2, !dbg !1773
  %983 = load i32, i32* %l.i.i, align 4, !dbg !1773
  %xor1548.i.i = xor i32 %shr1547.i.i, %983, !dbg !1773
  %conv1549.i.i = zext i32 %xor1548.i.i to i64, !dbg !1773
  %and1550.i.i = and i64 %conv1549.i.i, 858993459, !dbg !1773
  %conv1551.i.i = trunc i64 %and1550.i.i to i32, !dbg !1773
  store i32 %conv1551.i.i, i32* %tt1530.i.i, align 4, !dbg !1773
  %984 = load i32, i32* %tt1530.i.i, align 4, !dbg !1773
  %985 = load i32, i32* %l.i.i, align 4, !dbg !1773
  %xor1552.i.i = xor i32 %985, %984, !dbg !1773
  store i32 %xor1552.i.i, i32* %l.i.i, align 4, !dbg !1773
  %986 = load i32, i32* %tt1530.i.i, align 4, !dbg !1773
  %shl1553.i.i = shl i32 %986, 2, !dbg !1773
  %987 = load i32, i32* %r.i.i, align 4, !dbg !1773
  %xor1554.i.i = xor i32 %987, %shl1553.i.i, !dbg !1773
  store i32 %xor1554.i.i, i32* %r.i.i, align 4, !dbg !1773
  %988 = load i32, i32* %l.i.i, align 4, !dbg !1773
  %shr1555.i.i = lshr i32 %988, 16, !dbg !1773
  %989 = load i32, i32* %r.i.i, align 4, !dbg !1773
  %xor1556.i.i = xor i32 %shr1555.i.i, %989, !dbg !1773
  %conv1557.i.i = zext i32 %xor1556.i.i to i64, !dbg !1773
  %and1558.i.i = and i64 %conv1557.i.i, 65535, !dbg !1773
  %conv1559.i.i = trunc i64 %and1558.i.i to i32, !dbg !1773
  store i32 %conv1559.i.i, i32* %tt1530.i.i, align 4, !dbg !1773
  %990 = load i32, i32* %tt1530.i.i, align 4, !dbg !1773
  %991 = load i32, i32* %r.i.i, align 4, !dbg !1773
  %xor1560.i.i = xor i32 %991, %990, !dbg !1773
  store i32 %xor1560.i.i, i32* %r.i.i, align 4, !dbg !1773
  %992 = load i32, i32* %tt1530.i.i, align 4, !dbg !1773
  %shl1561.i.i = shl i32 %992, 16, !dbg !1773
  %993 = load i32, i32* %l.i.i, align 4, !dbg !1773
  %xor1562.i.i = xor i32 %993, %shl1561.i.i, !dbg !1773
  store i32 %xor1562.i.i, i32* %l.i.i, align 4, !dbg !1773
  %994 = load i32, i32* %r.i.i, align 4, !dbg !1773
  %shr1563.i.i = lshr i32 %994, 4, !dbg !1773
  %995 = load i32, i32* %l.i.i, align 4, !dbg !1773
  %xor1564.i.i = xor i32 %shr1563.i.i, %995, !dbg !1773
  %conv1565.i.i = zext i32 %xor1564.i.i to i64, !dbg !1773
  %and1566.i.i = and i64 %conv1565.i.i, 252645135, !dbg !1773
  %conv1567.i.i = trunc i64 %and1566.i.i to i32, !dbg !1773
  store i32 %conv1567.i.i, i32* %tt1530.i.i, align 4, !dbg !1773
  %996 = load i32, i32* %tt1530.i.i, align 4, !dbg !1773
  %997 = load i32, i32* %l.i.i, align 4, !dbg !1773
  %xor1568.i.i = xor i32 %997, %996, !dbg !1773
  store i32 %xor1568.i.i, i32* %l.i.i, align 4, !dbg !1773
  %998 = load i32, i32* %tt1530.i.i, align 4, !dbg !1773
  %shl1569.i.i = shl i32 %998, 4, !dbg !1773
  %999 = load i32, i32* %r.i.i, align 4, !dbg !1773
  %xor1570.i.i = xor i32 %999, %shl1569.i.i, !dbg !1773
  store i32 %xor1570.i.i, i32* %r.i.i, align 4, !dbg !1773
  %1000 = load i32, i32* %l.i.i, align 4, !dbg !1952
  %1001 = load i32*, i32** %data.addr.i.i, align 8, !dbg !1953
  store i32 %1000, i32* %1001, align 4, !dbg !1954
  %1002 = load i32, i32* %r.i.i, align 4, !dbg !1955
  %1003 = load i32*, i32** %data.addr.i.i, align 8, !dbg !1956
  %arrayidx1572.i.i = getelementptr inbounds i32, i32* %1003, i64 1, !dbg !1956
  store i32 %1002, i32* %arrayidx1572.i.i, align 4, !dbg !1957
  store i32 0, i32* %u.i.i, align 4, !dbg !1958
  store i32 0, i32* %t.i.i, align 4, !dbg !1959
  store i32 0, i32* %r.i.i, align 4, !dbg !1960
  store i32 0, i32* %l.i.i, align 4, !dbg !1961
  %arrayidx29.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0, !dbg !1962
  %1004 = load i32, i32* %arrayidx29.i, align 4, !dbg !1962
  store i32 %1004, i32* %l.i, align 4, !dbg !1963
  %1005 = load i32, i32* %l.i, align 4, !dbg !1964
  %and.i = and i32 %1005, 255, !dbg !1964
  %conv30.i = trunc i32 %and.i to i8, !dbg !1964
  %1006 = load i8*, i8** %out.i, align 8, !dbg !1964
  %incdec.ptr31.i = getelementptr inbounds i8, i8* %1006, i32 1, !dbg !1964
  store i8* %incdec.ptr31.i, i8** %out.i, align 8, !dbg !1964
  store i8 %conv30.i, i8* %1006, align 1, !dbg !1964
  %1007 = load i32, i32* %l.i, align 4, !dbg !1964
  %shr.i = lshr i32 %1007, 8, !dbg !1964
  %and32.i = and i32 %shr.i, 255, !dbg !1964
  %conv33.i = trunc i32 %and32.i to i8, !dbg !1964
  %1008 = load i8*, i8** %out.i, align 8, !dbg !1964
  %incdec.ptr34.i = getelementptr inbounds i8, i8* %1008, i32 1, !dbg !1964
  store i8* %incdec.ptr34.i, i8** %out.i, align 8, !dbg !1964
  store i8 %conv33.i, i8* %1008, align 1, !dbg !1964
  %1009 = load i32, i32* %l.i, align 4, !dbg !1964
  %shr35.i = lshr i32 %1009, 16, !dbg !1964
  %and36.i = and i32 %shr35.i, 255, !dbg !1964
  %conv37.i = trunc i32 %and36.i to i8, !dbg !1964
  %1010 = load i8*, i8** %out.i, align 8, !dbg !1964
  %incdec.ptr38.i = getelementptr inbounds i8, i8* %1010, i32 1, !dbg !1964
  store i8* %incdec.ptr38.i, i8** %out.i, align 8, !dbg !1964
  store i8 %conv37.i, i8* %1010, align 1, !dbg !1964
  %1011 = load i32, i32* %l.i, align 4, !dbg !1964
  %shr39.i = lshr i32 %1011, 24, !dbg !1964
  %conv41.i = trunc i32 %shr39.i to i8, !dbg !1964
  %1012 = load i8*, i8** %out.i, align 8, !dbg !1964
  %incdec.ptr42.i = getelementptr inbounds i8, i8* %1012, i32 1, !dbg !1964
  store i8* %incdec.ptr42.i, i8** %out.i, align 8, !dbg !1964
  store i8 %conv41.i, i8* %1012, align 1, !dbg !1964
  %arrayidx43.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 1, !dbg !1965
  %1013 = load i32, i32* %arrayidx43.i, align 4, !dbg !1965
  store i32 %1013, i32* %l.i, align 4, !dbg !1966
  %1014 = load i32, i32* %l.i, align 4, !dbg !1967
  %and44.i = and i32 %1014, 255, !dbg !1967
  %conv45.i = trunc i32 %and44.i to i8, !dbg !1967
  %1015 = load i8*, i8** %out.i, align 8, !dbg !1967
  %incdec.ptr46.i = getelementptr inbounds i8, i8* %1015, i32 1, !dbg !1967
  store i8* %incdec.ptr46.i, i8** %out.i, align 8, !dbg !1967
  store i8 %conv45.i, i8* %1015, align 1, !dbg !1967
  %1016 = load i32, i32* %l.i, align 4, !dbg !1967
  %shr47.i = lshr i32 %1016, 8, !dbg !1967
  %and48.i = and i32 %shr47.i, 255, !dbg !1967
  %conv49.i = trunc i32 %and48.i to i8, !dbg !1967
  %1017 = load i8*, i8** %out.i, align 8, !dbg !1967
  %incdec.ptr50.i = getelementptr inbounds i8, i8* %1017, i32 1, !dbg !1967
  store i8* %incdec.ptr50.i, i8** %out.i, align 8, !dbg !1967
  store i8 %conv49.i, i8* %1017, align 1, !dbg !1967
  %1018 = load i32, i32* %l.i, align 4, !dbg !1967
  %shr51.i = lshr i32 %1018, 16, !dbg !1967
  %and52.i = and i32 %shr51.i, 255, !dbg !1967
  %conv53.i = trunc i32 %and52.i to i8, !dbg !1967
  %1019 = load i8*, i8** %out.i, align 8, !dbg !1967
  %incdec.ptr54.i = getelementptr inbounds i8, i8* %1019, i32 1, !dbg !1967
  store i8* %incdec.ptr54.i, i8** %out.i, align 8, !dbg !1967
  store i8 %conv53.i, i8* %1019, align 1, !dbg !1967
  %1020 = load i32, i32* %l.i, align 4, !dbg !1967
  %shr55.i = lshr i32 %1020, 24, !dbg !1967
  %conv57.i = trunc i32 %shr55.i to i8, !dbg !1967
  %1021 = load i8*, i8** %out.i, align 8, !dbg !1967
  %incdec.ptr58.i = getelementptr inbounds i8, i8* %1021, i32 1, !dbg !1967
  store i8* %incdec.ptr58.i, i8** %out.i, align 8, !dbg !1967
  store i8 %conv57.i, i8* %1021, align 1, !dbg !1967
  %arrayidx59.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 1, !dbg !1968
  store i32 0, i32* %arrayidx59.i, align 4, !dbg !1969
  %arrayidx60.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0, !dbg !1970
  store i32 0, i32* %arrayidx60.i, align 4, !dbg !1971
  store i32 0, i32* %l.i, align 4, !dbg !1972
  %1022 = load i64, i64* %round, align 8, !dbg !1973
  %dec = add i64 %1022, -1, !dbg !1973
  store i64 %dec, i64* %round, align 8, !dbg !1973
  br label %while.cond, !dbg !1870, !llvm.loop !1974

while.end:                                        ; preds = %while.cond
  %1023 = load i32, i32* %retval, align 4, !dbg !1976
  ret i32 %1023, !dbg !1976
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local i32 @DES_set_key([8 x i8]*, %struct.DES_ks*) #5

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #6

; Function Attrs: nounwind
declare dso_local i32 @rand() #6

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #6

attributes #0 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind willreturn }
attributes #3 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!18, !19, !20}
!llvm.ident = !{!21}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "DES_SPtrans", scope: !2, file: !12, line: 10, type: !13, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !11, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "Cipher/des_enc.c", directory: "/home/phil/Documents/github/cache-symbolic/crypto_test")
!4 = !{}
!5 = !{!6, !7, !10}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "DES_LONG", file: !8, line: 21, baseType: !9)
!8 = !DIFile(filename: "/usr/local/include/openssl/des.h", directory: "")
!9 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!10 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!11 = !{!0}
!12 = !DIFile(filename: "Cipher/spr.h", directory: "/home/phil/Documents/github/cache-symbolic/crypto_test")
!13 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 16384, elements: !15)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!15 = !{!16, !17}
!16 = !DISubrange(count: 8)
!17 = !DISubrange(count: 64)
!18 = !{i32 7, !"Dwarf Version", i32 4}
!19 = !{i32 2, !"Debug Info Version", i32 3}
!20 = !{i32 1, !"wchar_size", i32 4}
!21 = !{!"clang version 10.0.0 "}
!22 = distinct !DISubprogram(name: "DES_encrypt1", scope: !3, file: !3, line: 14, type: !23, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!23 = !DISubroutineType(types: !24)
!24 = !{null, !6, !25, !43}
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "DES_key_schedule", file: !8, line: 43, baseType: !27)
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DES_ks", file: !8, line: 35, size: 1024, elements: !28)
!28 = !{!29}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "ks", scope: !27, file: !8, line: 42, baseType: !30, size: 1024)
!30 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 1024, elements: !41)
!31 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !27, file: !8, line: 36, size: 64, elements: !32)
!32 = !{!33, !37}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "cblock", scope: !31, file: !8, line: 37, baseType: !34, size: 64)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "DES_cblock", file: !8, line: 28, baseType: !35)
!35 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 64, elements: !36)
!36 = !{!16}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "deslong", scope: !31, file: !8, line: 41, baseType: !38, size: 64)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !39)
!39 = !{!40}
!40 = !DISubrange(count: 2)
!41 = !{!42}
!42 = !DISubrange(count: 16)
!43 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!44 = !DILocalVariable(name: "data", arg: 1, scope: !22, file: !3, line: 14, type: !6)
!45 = !DILocation(line: 14, column: 29, scope: !22)
!46 = !DILocalVariable(name: "ks", arg: 2, scope: !22, file: !3, line: 14, type: !25)
!47 = !DILocation(line: 14, column: 53, scope: !22)
!48 = !DILocalVariable(name: "enc", arg: 3, scope: !22, file: !3, line: 14, type: !43)
!49 = !DILocation(line: 14, column: 95, scope: !22)
!50 = !DILocalVariable(name: "l", scope: !22, file: !3, line: 16, type: !7)
!51 = !DILocation(line: 16, column: 23, scope: !22)
!52 = !DILocalVariable(name: "r", scope: !22, file: !3, line: 16, type: !7)
!53 = !DILocation(line: 16, column: 26, scope: !22)
!54 = !DILocalVariable(name: "t", scope: !22, file: !3, line: 16, type: !7)
!55 = !DILocation(line: 16, column: 29, scope: !22)
!56 = !DILocalVariable(name: "u", scope: !22, file: !3, line: 16, type: !7)
!57 = !DILocation(line: 16, column: 32, scope: !22)
!58 = !DILocalVariable(name: "s", scope: !22, file: !3, line: 17, type: !6)
!59 = !DILocation(line: 17, column: 24, scope: !22)
!60 = !DILocation(line: 17, column: 5, scope: !22)
!61 = !DILocation(line: 19, column: 9, scope: !22)
!62 = !DILocation(line: 19, column: 7, scope: !22)
!63 = !DILocation(line: 20, column: 9, scope: !22)
!64 = !DILocation(line: 20, column: 7, scope: !22)
!65 = !DILocalVariable(name: "tt", scope: !66, file: !3, line: 22, type: !7)
!66 = distinct !DILexicalBlock(scope: !22, file: !3, line: 22, column: 5)
!67 = !DILocation(line: 22, column: 5, scope: !66)
!68 = !DILocalVariable(name: "ret", scope: !69, file: !3, line: 31, type: !9)
!69 = distinct !DILexicalBlock(scope: !22, file: !3, line: 31, column: 9)
!70 = !DILocation(line: 31, column: 9, scope: !69)
!71 = !{i32 -2146886957}
!72 = !DILocation(line: 31, column: 9, scope: !22)
!73 = !DILocation(line: 31, column: 23, scope: !22)
!74 = !DILocation(line: 31, column: 7, scope: !22)
!75 = !DILocalVariable(name: "ret", scope: !76, file: !3, line: 32, type: !9)
!76 = distinct !DILexicalBlock(scope: !22, file: !3, line: 32, column: 9)
!77 = !DILocation(line: 32, column: 9, scope: !76)
!78 = !{i32 -2146886601}
!79 = !DILocation(line: 32, column: 9, scope: !22)
!80 = !DILocation(line: 32, column: 23, scope: !22)
!81 = !DILocation(line: 32, column: 7, scope: !22)
!82 = !DILocation(line: 34, column: 9, scope: !22)
!83 = !DILocation(line: 34, column: 13, scope: !22)
!84 = !DILocation(line: 34, column: 17, scope: !22)
!85 = !DILocation(line: 34, column: 7, scope: !22)
!86 = !DILocation(line: 39, column: 9, scope: !87)
!87 = distinct !DILexicalBlock(scope: !22, file: !3, line: 39, column: 9)
!88 = !DILocation(line: 39, column: 9, scope: !22)
!89 = !DILocation(line: 40, column: 9, scope: !90)
!90 = distinct !DILexicalBlock(scope: !91, file: !3, line: 40, column: 9)
!91 = distinct !DILexicalBlock(scope: !87, file: !3, line: 39, column: 14)
!92 = !DILocalVariable(name: "ret", scope: !93, file: !3, line: 40, type: !9)
!93 = distinct !DILexicalBlock(scope: !90, file: !3, line: 40, column: 9)
!94 = !DILocation(line: 40, column: 9, scope: !93)
!95 = !{i32 -2146885711}
!96 = !DILocation(line: 41, column: 9, scope: !97)
!97 = distinct !DILexicalBlock(scope: !91, file: !3, line: 41, column: 9)
!98 = !DILocalVariable(name: "ret", scope: !99, file: !3, line: 41, type: !9)
!99 = distinct !DILexicalBlock(scope: !97, file: !3, line: 41, column: 9)
!100 = !DILocation(line: 41, column: 9, scope: !99)
!101 = !{i32 -2146884822}
!102 = !DILocation(line: 42, column: 9, scope: !103)
!103 = distinct !DILexicalBlock(scope: !91, file: !3, line: 42, column: 9)
!104 = !DILocalVariable(name: "ret", scope: !105, file: !3, line: 42, type: !9)
!105 = distinct !DILexicalBlock(scope: !103, file: !3, line: 42, column: 9)
!106 = !DILocation(line: 42, column: 9, scope: !105)
!107 = !{i32 -2146883933}
!108 = !DILocation(line: 43, column: 9, scope: !109)
!109 = distinct !DILexicalBlock(scope: !91, file: !3, line: 43, column: 9)
!110 = !DILocalVariable(name: "ret", scope: !111, file: !3, line: 43, type: !9)
!111 = distinct !DILexicalBlock(scope: !109, file: !3, line: 43, column: 9)
!112 = !DILocation(line: 43, column: 9, scope: !111)
!113 = !{i32 -2146883044}
!114 = !DILocation(line: 44, column: 9, scope: !115)
!115 = distinct !DILexicalBlock(scope: !91, file: !3, line: 44, column: 9)
!116 = !DILocalVariable(name: "ret", scope: !117, file: !3, line: 44, type: !9)
!117 = distinct !DILexicalBlock(scope: !115, file: !3, line: 44, column: 9)
!118 = !DILocation(line: 44, column: 9, scope: !117)
!119 = !{i32 -2146882155}
!120 = !DILocation(line: 45, column: 9, scope: !121)
!121 = distinct !DILexicalBlock(scope: !91, file: !3, line: 45, column: 9)
!122 = !DILocalVariable(name: "ret", scope: !123, file: !3, line: 45, type: !9)
!123 = distinct !DILexicalBlock(scope: !121, file: !3, line: 45, column: 9)
!124 = !DILocation(line: 45, column: 9, scope: !123)
!125 = !{i32 -2146881262}
!126 = !DILocation(line: 46, column: 9, scope: !127)
!127 = distinct !DILexicalBlock(scope: !91, file: !3, line: 46, column: 9)
!128 = !DILocalVariable(name: "ret", scope: !129, file: !3, line: 46, type: !9)
!129 = distinct !DILexicalBlock(scope: !127, file: !3, line: 46, column: 9)
!130 = !DILocation(line: 46, column: 9, scope: !129)
!131 = !{i32 -2146880369}
!132 = !DILocation(line: 47, column: 9, scope: !133)
!133 = distinct !DILexicalBlock(scope: !91, file: !3, line: 47, column: 9)
!134 = !DILocalVariable(name: "ret", scope: !135, file: !3, line: 47, type: !9)
!135 = distinct !DILexicalBlock(scope: !133, file: !3, line: 47, column: 9)
!136 = !DILocation(line: 47, column: 9, scope: !135)
!137 = !{i32 -2146879476}
!138 = !DILocation(line: 48, column: 9, scope: !139)
!139 = distinct !DILexicalBlock(scope: !91, file: !3, line: 48, column: 9)
!140 = !DILocalVariable(name: "ret", scope: !141, file: !3, line: 48, type: !9)
!141 = distinct !DILexicalBlock(scope: !139, file: !3, line: 48, column: 9)
!142 = !DILocation(line: 48, column: 9, scope: !141)
!143 = !{i32 -2146878583}
!144 = !DILocation(line: 49, column: 9, scope: !145)
!145 = distinct !DILexicalBlock(scope: !91, file: !3, line: 49, column: 9)
!146 = !DILocalVariable(name: "ret", scope: !147, file: !3, line: 49, type: !9)
!147 = distinct !DILexicalBlock(scope: !145, file: !3, line: 49, column: 9)
!148 = !DILocation(line: 49, column: 9, scope: !147)
!149 = !{i32 -2146877690}
!150 = !DILocation(line: 50, column: 9, scope: !151)
!151 = distinct !DILexicalBlock(scope: !91, file: !3, line: 50, column: 9)
!152 = !DILocalVariable(name: "ret", scope: !153, file: !3, line: 50, type: !9)
!153 = distinct !DILexicalBlock(scope: !151, file: !3, line: 50, column: 9)
!154 = !DILocation(line: 50, column: 9, scope: !153)
!155 = !{i32 -2146876797}
!156 = !DILocation(line: 51, column: 9, scope: !157)
!157 = distinct !DILexicalBlock(scope: !91, file: !3, line: 51, column: 9)
!158 = !DILocalVariable(name: "ret", scope: !159, file: !3, line: 51, type: !9)
!159 = distinct !DILexicalBlock(scope: !157, file: !3, line: 51, column: 9)
!160 = !DILocation(line: 51, column: 9, scope: !159)
!161 = !{i32 -2146875904}
!162 = !DILocation(line: 52, column: 9, scope: !163)
!163 = distinct !DILexicalBlock(scope: !91, file: !3, line: 52, column: 9)
!164 = !DILocalVariable(name: "ret", scope: !165, file: !3, line: 52, type: !9)
!165 = distinct !DILexicalBlock(scope: !163, file: !3, line: 52, column: 9)
!166 = !DILocation(line: 52, column: 9, scope: !165)
!167 = !{i32 -2146875011}
!168 = !DILocation(line: 53, column: 9, scope: !169)
!169 = distinct !DILexicalBlock(scope: !91, file: !3, line: 53, column: 9)
!170 = !DILocalVariable(name: "ret", scope: !171, file: !3, line: 53, type: !9)
!171 = distinct !DILexicalBlock(scope: !169, file: !3, line: 53, column: 9)
!172 = !DILocation(line: 53, column: 9, scope: !171)
!173 = !{i32 -2146874118}
!174 = !DILocation(line: 54, column: 9, scope: !175)
!175 = distinct !DILexicalBlock(scope: !91, file: !3, line: 54, column: 9)
!176 = !DILocalVariable(name: "ret", scope: !177, file: !3, line: 54, type: !9)
!177 = distinct !DILexicalBlock(scope: !175, file: !3, line: 54, column: 9)
!178 = !DILocation(line: 54, column: 9, scope: !177)
!179 = !{i32 -2146873225}
!180 = !DILocation(line: 55, column: 9, scope: !181)
!181 = distinct !DILexicalBlock(scope: !91, file: !3, line: 55, column: 9)
!182 = !DILocalVariable(name: "ret", scope: !183, file: !3, line: 55, type: !9)
!183 = distinct !DILexicalBlock(scope: !181, file: !3, line: 55, column: 9)
!184 = !DILocation(line: 55, column: 9, scope: !183)
!185 = !{i32 -2146872332}
!186 = !DILocation(line: 56, column: 5, scope: !91)
!187 = !DILocation(line: 57, column: 9, scope: !188)
!188 = distinct !DILexicalBlock(scope: !189, file: !3, line: 57, column: 9)
!189 = distinct !DILexicalBlock(scope: !87, file: !3, line: 56, column: 12)
!190 = !DILocalVariable(name: "ret", scope: !191, file: !3, line: 57, type: !9)
!191 = distinct !DILexicalBlock(scope: !188, file: !3, line: 57, column: 9)
!192 = !DILocation(line: 57, column: 9, scope: !191)
!193 = !{i32 -2146871439}
!194 = !DILocation(line: 58, column: 9, scope: !195)
!195 = distinct !DILexicalBlock(scope: !189, file: !3, line: 58, column: 9)
!196 = !DILocalVariable(name: "ret", scope: !197, file: !3, line: 58, type: !9)
!197 = distinct !DILexicalBlock(scope: !195, file: !3, line: 58, column: 9)
!198 = !DILocation(line: 58, column: 9, scope: !197)
!199 = !{i32 -2146870546}
!200 = !DILocation(line: 59, column: 9, scope: !201)
!201 = distinct !DILexicalBlock(scope: !189, file: !3, line: 59, column: 9)
!202 = !DILocalVariable(name: "ret", scope: !203, file: !3, line: 59, type: !9)
!203 = distinct !DILexicalBlock(scope: !201, file: !3, line: 59, column: 9)
!204 = !DILocation(line: 59, column: 9, scope: !203)
!205 = !{i32 -2146869653}
!206 = !DILocation(line: 60, column: 9, scope: !207)
!207 = distinct !DILexicalBlock(scope: !189, file: !3, line: 60, column: 9)
!208 = !DILocalVariable(name: "ret", scope: !209, file: !3, line: 60, type: !9)
!209 = distinct !DILexicalBlock(scope: !207, file: !3, line: 60, column: 9)
!210 = !DILocation(line: 60, column: 9, scope: !209)
!211 = !{i32 -2146868760}
!212 = !DILocation(line: 61, column: 9, scope: !213)
!213 = distinct !DILexicalBlock(scope: !189, file: !3, line: 61, column: 9)
!214 = !DILocalVariable(name: "ret", scope: !215, file: !3, line: 61, type: !9)
!215 = distinct !DILexicalBlock(scope: !213, file: !3, line: 61, column: 9)
!216 = !DILocation(line: 61, column: 9, scope: !215)
!217 = !{i32 -2146867867}
!218 = !DILocation(line: 62, column: 9, scope: !219)
!219 = distinct !DILexicalBlock(scope: !189, file: !3, line: 62, column: 9)
!220 = !DILocalVariable(name: "ret", scope: !221, file: !3, line: 62, type: !9)
!221 = distinct !DILexicalBlock(scope: !219, file: !3, line: 62, column: 9)
!222 = !DILocation(line: 62, column: 9, scope: !221)
!223 = !{i32 -2146866974}
!224 = !DILocation(line: 63, column: 9, scope: !225)
!225 = distinct !DILexicalBlock(scope: !189, file: !3, line: 63, column: 9)
!226 = !DILocalVariable(name: "ret", scope: !227, file: !3, line: 63, type: !9)
!227 = distinct !DILexicalBlock(scope: !225, file: !3, line: 63, column: 9)
!228 = !DILocation(line: 63, column: 9, scope: !227)
!229 = !{i32 -2146866081}
!230 = !DILocation(line: 64, column: 9, scope: !231)
!231 = distinct !DILexicalBlock(scope: !189, file: !3, line: 64, column: 9)
!232 = !DILocalVariable(name: "ret", scope: !233, file: !3, line: 64, type: !9)
!233 = distinct !DILexicalBlock(scope: !231, file: !3, line: 64, column: 9)
!234 = !DILocation(line: 64, column: 9, scope: !233)
!235 = !{i32 -2146865188}
!236 = !DILocation(line: 65, column: 9, scope: !237)
!237 = distinct !DILexicalBlock(scope: !189, file: !3, line: 65, column: 9)
!238 = !DILocalVariable(name: "ret", scope: !239, file: !3, line: 65, type: !9)
!239 = distinct !DILexicalBlock(scope: !237, file: !3, line: 65, column: 9)
!240 = !DILocation(line: 65, column: 9, scope: !239)
!241 = !{i32 -2146864295}
!242 = !DILocation(line: 66, column: 9, scope: !243)
!243 = distinct !DILexicalBlock(scope: !189, file: !3, line: 66, column: 9)
!244 = !DILocalVariable(name: "ret", scope: !245, file: !3, line: 66, type: !9)
!245 = distinct !DILexicalBlock(scope: !243, file: !3, line: 66, column: 9)
!246 = !DILocation(line: 66, column: 9, scope: !245)
!247 = !{i32 -2146863402}
!248 = !DILocation(line: 67, column: 9, scope: !249)
!249 = distinct !DILexicalBlock(scope: !189, file: !3, line: 67, column: 9)
!250 = !DILocalVariable(name: "ret", scope: !251, file: !3, line: 67, type: !9)
!251 = distinct !DILexicalBlock(scope: !249, file: !3, line: 67, column: 9)
!252 = !DILocation(line: 67, column: 9, scope: !251)
!253 = !{i32 -2146862509}
!254 = !DILocation(line: 68, column: 9, scope: !255)
!255 = distinct !DILexicalBlock(scope: !189, file: !3, line: 68, column: 9)
!256 = !DILocalVariable(name: "ret", scope: !257, file: !3, line: 68, type: !9)
!257 = distinct !DILexicalBlock(scope: !255, file: !3, line: 68, column: 9)
!258 = !DILocation(line: 68, column: 9, scope: !257)
!259 = !{i32 -2146861620}
!260 = !DILocation(line: 69, column: 9, scope: !261)
!261 = distinct !DILexicalBlock(scope: !189, file: !3, line: 69, column: 9)
!262 = !DILocalVariable(name: "ret", scope: !263, file: !3, line: 69, type: !9)
!263 = distinct !DILexicalBlock(scope: !261, file: !3, line: 69, column: 9)
!264 = !DILocation(line: 69, column: 9, scope: !263)
!265 = !{i32 -2146860731}
!266 = !DILocation(line: 70, column: 9, scope: !267)
!267 = distinct !DILexicalBlock(scope: !189, file: !3, line: 70, column: 9)
!268 = !DILocalVariable(name: "ret", scope: !269, file: !3, line: 70, type: !9)
!269 = distinct !DILexicalBlock(scope: !267, file: !3, line: 70, column: 9)
!270 = !DILocation(line: 70, column: 9, scope: !269)
!271 = !{i32 -2146859842}
!272 = !DILocation(line: 71, column: 9, scope: !273)
!273 = distinct !DILexicalBlock(scope: !189, file: !3, line: 71, column: 9)
!274 = !DILocalVariable(name: "ret", scope: !275, file: !3, line: 71, type: !9)
!275 = distinct !DILexicalBlock(scope: !273, file: !3, line: 71, column: 9)
!276 = !DILocation(line: 71, column: 9, scope: !275)
!277 = !{i32 -2146858953}
!278 = !DILocation(line: 72, column: 9, scope: !279)
!279 = distinct !DILexicalBlock(scope: !189, file: !3, line: 72, column: 9)
!280 = !DILocalVariable(name: "ret", scope: !281, file: !3, line: 72, type: !9)
!281 = distinct !DILexicalBlock(scope: !279, file: !3, line: 72, column: 9)
!282 = !DILocation(line: 72, column: 9, scope: !281)
!283 = !{i32 -2146858064}
!284 = !DILocalVariable(name: "ret", scope: !285, file: !3, line: 76, type: !9)
!285 = distinct !DILexicalBlock(scope: !22, file: !3, line: 76, column: 9)
!286 = !DILocation(line: 76, column: 9, scope: !285)
!287 = !{i32 -2146857709}
!288 = !DILocation(line: 76, column: 9, scope: !22)
!289 = !DILocation(line: 76, column: 22, scope: !22)
!290 = !DILocation(line: 76, column: 7, scope: !22)
!291 = !DILocalVariable(name: "ret", scope: !292, file: !3, line: 77, type: !9)
!292 = distinct !DILexicalBlock(scope: !22, file: !3, line: 77, column: 9)
!293 = !DILocation(line: 77, column: 9, scope: !292)
!294 = !{i32 -2146857354}
!295 = !DILocation(line: 77, column: 9, scope: !22)
!296 = !DILocation(line: 77, column: 22, scope: !22)
!297 = !DILocation(line: 77, column: 7, scope: !22)
!298 = !DILocalVariable(name: "tt", scope: !299, file: !3, line: 79, type: !7)
!299 = distinct !DILexicalBlock(scope: !22, file: !3, line: 79, column: 5)
!300 = !DILocation(line: 79, column: 5, scope: !299)
!301 = !DILocation(line: 80, column: 15, scope: !22)
!302 = !DILocation(line: 80, column: 5, scope: !22)
!303 = !DILocation(line: 80, column: 13, scope: !22)
!304 = !DILocation(line: 81, column: 15, scope: !22)
!305 = !DILocation(line: 81, column: 5, scope: !22)
!306 = !DILocation(line: 81, column: 13, scope: !22)
!307 = !DILocation(line: 82, column: 19, scope: !22)
!308 = !DILocation(line: 82, column: 15, scope: !22)
!309 = !DILocation(line: 82, column: 11, scope: !22)
!310 = !DILocation(line: 82, column: 7, scope: !22)
!311 = !DILocation(line: 83, column: 1, scope: !22)
!312 = distinct !DISubprogram(name: "DES_encrypt2", scope: !3, file: !3, line: 85, type: !23, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!313 = !DILocalVariable(name: "data", arg: 1, scope: !312, file: !3, line: 85, type: !6)
!314 = !DILocation(line: 85, column: 29, scope: !312)
!315 = !DILocalVariable(name: "ks", arg: 2, scope: !312, file: !3, line: 85, type: !25)
!316 = !DILocation(line: 85, column: 53, scope: !312)
!317 = !DILocalVariable(name: "enc", arg: 3, scope: !312, file: !3, line: 85, type: !43)
!318 = !DILocation(line: 85, column: 95, scope: !312)
!319 = !DILocalVariable(name: "l", scope: !312, file: !3, line: 87, type: !7)
!320 = !DILocation(line: 87, column: 23, scope: !312)
!321 = !DILocalVariable(name: "r", scope: !312, file: !3, line: 87, type: !7)
!322 = !DILocation(line: 87, column: 26, scope: !312)
!323 = !DILocalVariable(name: "t", scope: !312, file: !3, line: 87, type: !7)
!324 = !DILocation(line: 87, column: 29, scope: !312)
!325 = !DILocalVariable(name: "u", scope: !312, file: !3, line: 87, type: !7)
!326 = !DILocation(line: 87, column: 32, scope: !312)
!327 = !DILocalVariable(name: "s", scope: !312, file: !3, line: 88, type: !6)
!328 = !DILocation(line: 88, column: 24, scope: !312)
!329 = !DILocation(line: 88, column: 5, scope: !312)
!330 = !DILocation(line: 90, column: 9, scope: !312)
!331 = !DILocation(line: 90, column: 7, scope: !312)
!332 = !DILocation(line: 91, column: 9, scope: !312)
!333 = !DILocation(line: 91, column: 7, scope: !312)
!334 = !DILocalVariable(name: "ret", scope: !335, file: !3, line: 100, type: !9)
!335 = distinct !DILexicalBlock(scope: !312, file: !3, line: 100, column: 9)
!336 = !DILocation(line: 100, column: 9, scope: !335)
!337 = !{i32 -2146856186}
!338 = !DILocation(line: 100, column: 9, scope: !312)
!339 = !DILocation(line: 100, column: 23, scope: !312)
!340 = !DILocation(line: 100, column: 7, scope: !312)
!341 = !DILocalVariable(name: "ret", scope: !342, file: !3, line: 101, type: !9)
!342 = distinct !DILexicalBlock(scope: !312, file: !3, line: 101, column: 9)
!343 = !DILocation(line: 101, column: 9, scope: !342)
!344 = !{i32 -2146855830}
!345 = !DILocation(line: 101, column: 9, scope: !312)
!346 = !DILocation(line: 101, column: 23, scope: !312)
!347 = !DILocation(line: 101, column: 7, scope: !312)
!348 = !DILocation(line: 103, column: 9, scope: !312)
!349 = !DILocation(line: 103, column: 13, scope: !312)
!350 = !DILocation(line: 103, column: 17, scope: !312)
!351 = !DILocation(line: 103, column: 7, scope: !312)
!352 = !DILocation(line: 108, column: 9, scope: !353)
!353 = distinct !DILexicalBlock(scope: !312, file: !3, line: 108, column: 9)
!354 = !DILocation(line: 108, column: 9, scope: !312)
!355 = !DILocation(line: 109, column: 9, scope: !356)
!356 = distinct !DILexicalBlock(scope: !357, file: !3, line: 109, column: 9)
!357 = distinct !DILexicalBlock(scope: !353, file: !3, line: 108, column: 14)
!358 = !DILocalVariable(name: "ret", scope: !359, file: !3, line: 109, type: !9)
!359 = distinct !DILexicalBlock(scope: !356, file: !3, line: 109, column: 9)
!360 = !DILocation(line: 109, column: 9, scope: !359)
!361 = !{i32 -2146854940}
!362 = !DILocation(line: 110, column: 9, scope: !363)
!363 = distinct !DILexicalBlock(scope: !357, file: !3, line: 110, column: 9)
!364 = !DILocalVariable(name: "ret", scope: !365, file: !3, line: 110, type: !9)
!365 = distinct !DILexicalBlock(scope: !363, file: !3, line: 110, column: 9)
!366 = !DILocation(line: 110, column: 9, scope: !365)
!367 = !{i32 -2146854051}
!368 = !DILocation(line: 111, column: 9, scope: !369)
!369 = distinct !DILexicalBlock(scope: !357, file: !3, line: 111, column: 9)
!370 = !DILocalVariable(name: "ret", scope: !371, file: !3, line: 111, type: !9)
!371 = distinct !DILexicalBlock(scope: !369, file: !3, line: 111, column: 9)
!372 = !DILocation(line: 111, column: 9, scope: !371)
!373 = !{i32 -2146853162}
!374 = !DILocation(line: 112, column: 9, scope: !375)
!375 = distinct !DILexicalBlock(scope: !357, file: !3, line: 112, column: 9)
!376 = !DILocalVariable(name: "ret", scope: !377, file: !3, line: 112, type: !9)
!377 = distinct !DILexicalBlock(scope: !375, file: !3, line: 112, column: 9)
!378 = !DILocation(line: 112, column: 9, scope: !377)
!379 = !{i32 -2146852273}
!380 = !DILocation(line: 113, column: 9, scope: !381)
!381 = distinct !DILexicalBlock(scope: !357, file: !3, line: 113, column: 9)
!382 = !DILocalVariable(name: "ret", scope: !383, file: !3, line: 113, type: !9)
!383 = distinct !DILexicalBlock(scope: !381, file: !3, line: 113, column: 9)
!384 = !DILocation(line: 113, column: 9, scope: !383)
!385 = !{i32 -2146851384}
!386 = !DILocation(line: 114, column: 9, scope: !387)
!387 = distinct !DILexicalBlock(scope: !357, file: !3, line: 114, column: 9)
!388 = !DILocalVariable(name: "ret", scope: !389, file: !3, line: 114, type: !9)
!389 = distinct !DILexicalBlock(scope: !387, file: !3, line: 114, column: 9)
!390 = !DILocation(line: 114, column: 9, scope: !389)
!391 = !{i32 -2146850491}
!392 = !DILocation(line: 115, column: 9, scope: !393)
!393 = distinct !DILexicalBlock(scope: !357, file: !3, line: 115, column: 9)
!394 = !DILocalVariable(name: "ret", scope: !395, file: !3, line: 115, type: !9)
!395 = distinct !DILexicalBlock(scope: !393, file: !3, line: 115, column: 9)
!396 = !DILocation(line: 115, column: 9, scope: !395)
!397 = !{i32 -2146849598}
!398 = !DILocation(line: 116, column: 9, scope: !399)
!399 = distinct !DILexicalBlock(scope: !357, file: !3, line: 116, column: 9)
!400 = !DILocalVariable(name: "ret", scope: !401, file: !3, line: 116, type: !9)
!401 = distinct !DILexicalBlock(scope: !399, file: !3, line: 116, column: 9)
!402 = !DILocation(line: 116, column: 9, scope: !401)
!403 = !{i32 -2146848705}
!404 = !DILocation(line: 117, column: 9, scope: !405)
!405 = distinct !DILexicalBlock(scope: !357, file: !3, line: 117, column: 9)
!406 = !DILocalVariable(name: "ret", scope: !407, file: !3, line: 117, type: !9)
!407 = distinct !DILexicalBlock(scope: !405, file: !3, line: 117, column: 9)
!408 = !DILocation(line: 117, column: 9, scope: !407)
!409 = !{i32 -2146847812}
!410 = !DILocation(line: 118, column: 9, scope: !411)
!411 = distinct !DILexicalBlock(scope: !357, file: !3, line: 118, column: 9)
!412 = !DILocalVariable(name: "ret", scope: !413, file: !3, line: 118, type: !9)
!413 = distinct !DILexicalBlock(scope: !411, file: !3, line: 118, column: 9)
!414 = !DILocation(line: 118, column: 9, scope: !413)
!415 = !{i32 -2146846919}
!416 = !DILocation(line: 119, column: 9, scope: !417)
!417 = distinct !DILexicalBlock(scope: !357, file: !3, line: 119, column: 9)
!418 = !DILocalVariable(name: "ret", scope: !419, file: !3, line: 119, type: !9)
!419 = distinct !DILexicalBlock(scope: !417, file: !3, line: 119, column: 9)
!420 = !DILocation(line: 119, column: 9, scope: !419)
!421 = !{i32 -2146846026}
!422 = !DILocation(line: 120, column: 9, scope: !423)
!423 = distinct !DILexicalBlock(scope: !357, file: !3, line: 120, column: 9)
!424 = !DILocalVariable(name: "ret", scope: !425, file: !3, line: 120, type: !9)
!425 = distinct !DILexicalBlock(scope: !423, file: !3, line: 120, column: 9)
!426 = !DILocation(line: 120, column: 9, scope: !425)
!427 = !{i32 -2146845133}
!428 = !DILocation(line: 121, column: 9, scope: !429)
!429 = distinct !DILexicalBlock(scope: !357, file: !3, line: 121, column: 9)
!430 = !DILocalVariable(name: "ret", scope: !431, file: !3, line: 121, type: !9)
!431 = distinct !DILexicalBlock(scope: !429, file: !3, line: 121, column: 9)
!432 = !DILocation(line: 121, column: 9, scope: !431)
!433 = !{i32 -2146844240}
!434 = !DILocation(line: 122, column: 9, scope: !435)
!435 = distinct !DILexicalBlock(scope: !357, file: !3, line: 122, column: 9)
!436 = !DILocalVariable(name: "ret", scope: !437, file: !3, line: 122, type: !9)
!437 = distinct !DILexicalBlock(scope: !435, file: !3, line: 122, column: 9)
!438 = !DILocation(line: 122, column: 9, scope: !437)
!439 = !{i32 -2146843347}
!440 = !DILocation(line: 123, column: 9, scope: !441)
!441 = distinct !DILexicalBlock(scope: !357, file: !3, line: 123, column: 9)
!442 = !DILocalVariable(name: "ret", scope: !443, file: !3, line: 123, type: !9)
!443 = distinct !DILexicalBlock(scope: !441, file: !3, line: 123, column: 9)
!444 = !DILocation(line: 123, column: 9, scope: !443)
!445 = !{i32 -2146842454}
!446 = !DILocation(line: 124, column: 9, scope: !447)
!447 = distinct !DILexicalBlock(scope: !357, file: !3, line: 124, column: 9)
!448 = !DILocalVariable(name: "ret", scope: !449, file: !3, line: 124, type: !9)
!449 = distinct !DILexicalBlock(scope: !447, file: !3, line: 124, column: 9)
!450 = !DILocation(line: 124, column: 9, scope: !449)
!451 = !{i32 -2146841561}
!452 = !DILocation(line: 125, column: 5, scope: !357)
!453 = !DILocation(line: 126, column: 9, scope: !454)
!454 = distinct !DILexicalBlock(scope: !455, file: !3, line: 126, column: 9)
!455 = distinct !DILexicalBlock(scope: !353, file: !3, line: 125, column: 12)
!456 = !DILocalVariable(name: "ret", scope: !457, file: !3, line: 126, type: !9)
!457 = distinct !DILexicalBlock(scope: !454, file: !3, line: 126, column: 9)
!458 = !DILocation(line: 126, column: 9, scope: !457)
!459 = !{i32 -2146840668}
!460 = !DILocation(line: 127, column: 9, scope: !461)
!461 = distinct !DILexicalBlock(scope: !455, file: !3, line: 127, column: 9)
!462 = !DILocalVariable(name: "ret", scope: !463, file: !3, line: 127, type: !9)
!463 = distinct !DILexicalBlock(scope: !461, file: !3, line: 127, column: 9)
!464 = !DILocation(line: 127, column: 9, scope: !463)
!465 = !{i32 -2146839775}
!466 = !DILocation(line: 128, column: 9, scope: !467)
!467 = distinct !DILexicalBlock(scope: !455, file: !3, line: 128, column: 9)
!468 = !DILocalVariable(name: "ret", scope: !469, file: !3, line: 128, type: !9)
!469 = distinct !DILexicalBlock(scope: !467, file: !3, line: 128, column: 9)
!470 = !DILocation(line: 128, column: 9, scope: !469)
!471 = !{i32 -2146838882}
!472 = !DILocation(line: 129, column: 9, scope: !473)
!473 = distinct !DILexicalBlock(scope: !455, file: !3, line: 129, column: 9)
!474 = !DILocalVariable(name: "ret", scope: !475, file: !3, line: 129, type: !9)
!475 = distinct !DILexicalBlock(scope: !473, file: !3, line: 129, column: 9)
!476 = !DILocation(line: 129, column: 9, scope: !475)
!477 = !{i32 -2146837989}
!478 = !DILocation(line: 130, column: 9, scope: !479)
!479 = distinct !DILexicalBlock(scope: !455, file: !3, line: 130, column: 9)
!480 = !DILocalVariable(name: "ret", scope: !481, file: !3, line: 130, type: !9)
!481 = distinct !DILexicalBlock(scope: !479, file: !3, line: 130, column: 9)
!482 = !DILocation(line: 130, column: 9, scope: !481)
!483 = !{i32 -2146837096}
!484 = !DILocation(line: 131, column: 9, scope: !485)
!485 = distinct !DILexicalBlock(scope: !455, file: !3, line: 131, column: 9)
!486 = !DILocalVariable(name: "ret", scope: !487, file: !3, line: 131, type: !9)
!487 = distinct !DILexicalBlock(scope: !485, file: !3, line: 131, column: 9)
!488 = !DILocation(line: 131, column: 9, scope: !487)
!489 = !{i32 -2146836203}
!490 = !DILocation(line: 132, column: 9, scope: !491)
!491 = distinct !DILexicalBlock(scope: !455, file: !3, line: 132, column: 9)
!492 = !DILocalVariable(name: "ret", scope: !493, file: !3, line: 132, type: !9)
!493 = distinct !DILexicalBlock(scope: !491, file: !3, line: 132, column: 9)
!494 = !DILocation(line: 132, column: 9, scope: !493)
!495 = !{i32 -2146835310}
!496 = !DILocation(line: 133, column: 9, scope: !497)
!497 = distinct !DILexicalBlock(scope: !455, file: !3, line: 133, column: 9)
!498 = !DILocalVariable(name: "ret", scope: !499, file: !3, line: 133, type: !9)
!499 = distinct !DILexicalBlock(scope: !497, file: !3, line: 133, column: 9)
!500 = !DILocation(line: 133, column: 9, scope: !499)
!501 = !{i32 -2146834417}
!502 = !DILocation(line: 134, column: 9, scope: !503)
!503 = distinct !DILexicalBlock(scope: !455, file: !3, line: 134, column: 9)
!504 = !DILocalVariable(name: "ret", scope: !505, file: !3, line: 134, type: !9)
!505 = distinct !DILexicalBlock(scope: !503, file: !3, line: 134, column: 9)
!506 = !DILocation(line: 134, column: 9, scope: !505)
!507 = !{i32 -2146833524}
!508 = !DILocation(line: 135, column: 9, scope: !509)
!509 = distinct !DILexicalBlock(scope: !455, file: !3, line: 135, column: 9)
!510 = !DILocalVariable(name: "ret", scope: !511, file: !3, line: 135, type: !9)
!511 = distinct !DILexicalBlock(scope: !509, file: !3, line: 135, column: 9)
!512 = !DILocation(line: 135, column: 9, scope: !511)
!513 = !{i32 -2146832631}
!514 = !DILocation(line: 136, column: 9, scope: !515)
!515 = distinct !DILexicalBlock(scope: !455, file: !3, line: 136, column: 9)
!516 = !DILocalVariable(name: "ret", scope: !517, file: !3, line: 136, type: !9)
!517 = distinct !DILexicalBlock(scope: !515, file: !3, line: 136, column: 9)
!518 = !DILocation(line: 136, column: 9, scope: !517)
!519 = !{i32 -2146831738}
!520 = !DILocation(line: 137, column: 9, scope: !521)
!521 = distinct !DILexicalBlock(scope: !455, file: !3, line: 137, column: 9)
!522 = !DILocalVariable(name: "ret", scope: !523, file: !3, line: 137, type: !9)
!523 = distinct !DILexicalBlock(scope: !521, file: !3, line: 137, column: 9)
!524 = !DILocation(line: 137, column: 9, scope: !523)
!525 = !{i32 -2146830849}
!526 = !DILocation(line: 138, column: 9, scope: !527)
!527 = distinct !DILexicalBlock(scope: !455, file: !3, line: 138, column: 9)
!528 = !DILocalVariable(name: "ret", scope: !529, file: !3, line: 138, type: !9)
!529 = distinct !DILexicalBlock(scope: !527, file: !3, line: 138, column: 9)
!530 = !DILocation(line: 138, column: 9, scope: !529)
!531 = !{i32 -2146829960}
!532 = !DILocation(line: 139, column: 9, scope: !533)
!533 = distinct !DILexicalBlock(scope: !455, file: !3, line: 139, column: 9)
!534 = !DILocalVariable(name: "ret", scope: !535, file: !3, line: 139, type: !9)
!535 = distinct !DILexicalBlock(scope: !533, file: !3, line: 139, column: 9)
!536 = !DILocation(line: 139, column: 9, scope: !535)
!537 = !{i32 -2146829071}
!538 = !DILocation(line: 140, column: 9, scope: !539)
!539 = distinct !DILexicalBlock(scope: !455, file: !3, line: 140, column: 9)
!540 = !DILocalVariable(name: "ret", scope: !541, file: !3, line: 140, type: !9)
!541 = distinct !DILexicalBlock(scope: !539, file: !3, line: 140, column: 9)
!542 = !DILocation(line: 140, column: 9, scope: !541)
!543 = !{i32 -2146828182}
!544 = !DILocation(line: 141, column: 9, scope: !545)
!545 = distinct !DILexicalBlock(scope: !455, file: !3, line: 141, column: 9)
!546 = !DILocalVariable(name: "ret", scope: !547, file: !3, line: 141, type: !9)
!547 = distinct !DILexicalBlock(scope: !545, file: !3, line: 141, column: 9)
!548 = !DILocation(line: 141, column: 9, scope: !547)
!549 = !{i32 -2146827293}
!550 = !DILocalVariable(name: "ret", scope: !551, file: !3, line: 144, type: !9)
!551 = distinct !DILexicalBlock(scope: !312, file: !3, line: 144, column: 15)
!552 = !DILocation(line: 144, column: 15, scope: !551)
!553 = !{i32 -2146826938}
!554 = !DILocation(line: 144, column: 15, scope: !312)
!555 = !DILocation(line: 144, column: 28, scope: !312)
!556 = !DILocation(line: 144, column: 5, scope: !312)
!557 = !DILocation(line: 144, column: 13, scope: !312)
!558 = !DILocalVariable(name: "ret", scope: !559, file: !3, line: 145, type: !9)
!559 = distinct !DILexicalBlock(scope: !312, file: !3, line: 145, column: 15)
!560 = !DILocation(line: 145, column: 15, scope: !559)
!561 = !{i32 -2146826583}
!562 = !DILocation(line: 145, column: 15, scope: !312)
!563 = !DILocation(line: 145, column: 28, scope: !312)
!564 = !DILocation(line: 145, column: 5, scope: !312)
!565 = !DILocation(line: 145, column: 13, scope: !312)
!566 = !DILocation(line: 146, column: 19, scope: !312)
!567 = !DILocation(line: 146, column: 15, scope: !312)
!568 = !DILocation(line: 146, column: 11, scope: !312)
!569 = !DILocation(line: 146, column: 7, scope: !312)
!570 = !DILocation(line: 147, column: 1, scope: !312)
!571 = distinct !DISubprogram(name: "DES_encrypt3", scope: !3, file: !3, line: 149, type: !572, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!572 = !DISubroutineType(types: !573)
!573 = !{null, !6, !25, !25, !25}
!574 = !DILocalVariable(name: "data", arg: 1, scope: !571, file: !3, line: 149, type: !6)
!575 = !DILocation(line: 149, column: 29, scope: !571)
!576 = !DILocalVariable(name: "ks1", arg: 2, scope: !571, file: !3, line: 149, type: !25)
!577 = !DILocation(line: 149, column: 53, scope: !571)
!578 = !DILocalVariable(name: "ks2", arg: 3, scope: !571, file: !3, line: 150, type: !25)
!579 = !DILocation(line: 150, column: 37, scope: !571)
!580 = !DILocalVariable(name: "ks3", arg: 4, scope: !571, file: !3, line: 150, type: !25)
!581 = !DILocation(line: 150, column: 60, scope: !571)
!582 = !DILocalVariable(name: "l", scope: !571, file: !3, line: 152, type: !7)
!583 = !DILocation(line: 152, column: 23, scope: !571)
!584 = !DILocalVariable(name: "r", scope: !571, file: !3, line: 152, type: !7)
!585 = !DILocation(line: 152, column: 26, scope: !571)
!586 = !DILocation(line: 154, column: 9, scope: !571)
!587 = !DILocation(line: 154, column: 7, scope: !571)
!588 = !DILocation(line: 155, column: 9, scope: !571)
!589 = !DILocation(line: 155, column: 7, scope: !571)
!590 = !DILocalVariable(name: "tt", scope: !591, file: !3, line: 156, type: !7)
!591 = distinct !DILexicalBlock(scope: !571, file: !3, line: 156, column: 5)
!592 = !DILocation(line: 156, column: 5, scope: !591)
!593 = !DILocation(line: 157, column: 15, scope: !571)
!594 = !DILocation(line: 157, column: 5, scope: !571)
!595 = !DILocation(line: 157, column: 13, scope: !571)
!596 = !DILocation(line: 158, column: 15, scope: !571)
!597 = !DILocation(line: 158, column: 5, scope: !571)
!598 = !DILocation(line: 158, column: 13, scope: !571)
!599 = !DILocation(line: 159, column: 30, scope: !571)
!600 = !DILocation(line: 159, column: 36, scope: !571)
!601 = !DILocation(line: 159, column: 5, scope: !571)
!602 = !DILocation(line: 160, column: 30, scope: !571)
!603 = !DILocation(line: 160, column: 36, scope: !571)
!604 = !DILocation(line: 160, column: 5, scope: !571)
!605 = !DILocation(line: 161, column: 30, scope: !571)
!606 = !DILocation(line: 161, column: 36, scope: !571)
!607 = !DILocation(line: 161, column: 5, scope: !571)
!608 = !DILocation(line: 162, column: 9, scope: !571)
!609 = !DILocation(line: 162, column: 7, scope: !571)
!610 = !DILocation(line: 163, column: 9, scope: !571)
!611 = !DILocation(line: 163, column: 7, scope: !571)
!612 = !DILocalVariable(name: "tt", scope: !613, file: !3, line: 164, type: !7)
!613 = distinct !DILexicalBlock(scope: !571, file: !3, line: 164, column: 5)
!614 = !DILocation(line: 164, column: 5, scope: !613)
!615 = !DILocation(line: 165, column: 15, scope: !571)
!616 = !DILocation(line: 165, column: 5, scope: !571)
!617 = !DILocation(line: 165, column: 13, scope: !571)
!618 = !DILocation(line: 166, column: 15, scope: !571)
!619 = !DILocation(line: 166, column: 5, scope: !571)
!620 = !DILocation(line: 166, column: 13, scope: !571)
!621 = !DILocation(line: 167, column: 1, scope: !571)
!622 = distinct !DISubprogram(name: "DES_decrypt3", scope: !3, file: !3, line: 169, type: !572, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!623 = !DILocalVariable(name: "data", arg: 1, scope: !622, file: !3, line: 169, type: !6)
!624 = !DILocation(line: 169, column: 29, scope: !622)
!625 = !DILocalVariable(name: "ks1", arg: 2, scope: !622, file: !3, line: 169, type: !25)
!626 = !DILocation(line: 169, column: 53, scope: !622)
!627 = !DILocalVariable(name: "ks2", arg: 3, scope: !622, file: !3, line: 170, type: !25)
!628 = !DILocation(line: 170, column: 37, scope: !622)
!629 = !DILocalVariable(name: "ks3", arg: 4, scope: !622, file: !3, line: 170, type: !25)
!630 = !DILocation(line: 170, column: 60, scope: !622)
!631 = !DILocalVariable(name: "l", scope: !622, file: !3, line: 172, type: !7)
!632 = !DILocation(line: 172, column: 23, scope: !622)
!633 = !DILocalVariable(name: "r", scope: !622, file: !3, line: 172, type: !7)
!634 = !DILocation(line: 172, column: 26, scope: !622)
!635 = !DILocation(line: 174, column: 9, scope: !622)
!636 = !DILocation(line: 174, column: 7, scope: !622)
!637 = !DILocation(line: 175, column: 9, scope: !622)
!638 = !DILocation(line: 175, column: 7, scope: !622)
!639 = !DILocalVariable(name: "tt", scope: !640, file: !3, line: 176, type: !7)
!640 = distinct !DILexicalBlock(scope: !622, file: !3, line: 176, column: 5)
!641 = !DILocation(line: 176, column: 5, scope: !640)
!642 = !DILocation(line: 177, column: 15, scope: !622)
!643 = !DILocation(line: 177, column: 5, scope: !622)
!644 = !DILocation(line: 177, column: 13, scope: !622)
!645 = !DILocation(line: 178, column: 15, scope: !622)
!646 = !DILocation(line: 178, column: 5, scope: !622)
!647 = !DILocation(line: 178, column: 13, scope: !622)
!648 = !DILocation(line: 179, column: 30, scope: !622)
!649 = !DILocation(line: 179, column: 36, scope: !622)
!650 = !DILocation(line: 179, column: 5, scope: !622)
!651 = !DILocation(line: 180, column: 30, scope: !622)
!652 = !DILocation(line: 180, column: 36, scope: !622)
!653 = !DILocation(line: 180, column: 5, scope: !622)
!654 = !DILocation(line: 181, column: 30, scope: !622)
!655 = !DILocation(line: 181, column: 36, scope: !622)
!656 = !DILocation(line: 181, column: 5, scope: !622)
!657 = !DILocation(line: 182, column: 9, scope: !622)
!658 = !DILocation(line: 182, column: 7, scope: !622)
!659 = !DILocation(line: 183, column: 9, scope: !622)
!660 = !DILocation(line: 183, column: 7, scope: !622)
!661 = !DILocalVariable(name: "tt", scope: !662, file: !3, line: 184, type: !7)
!662 = distinct !DILexicalBlock(scope: !622, file: !3, line: 184, column: 5)
!663 = !DILocation(line: 184, column: 5, scope: !662)
!664 = !DILocation(line: 185, column: 15, scope: !622)
!665 = !DILocation(line: 185, column: 5, scope: !622)
!666 = !DILocation(line: 185, column: 13, scope: !622)
!667 = !DILocation(line: 186, column: 15, scope: !622)
!668 = !DILocation(line: 186, column: 5, scope: !622)
!669 = !DILocation(line: 186, column: 13, scope: !622)
!670 = !DILocation(line: 187, column: 1, scope: !622)
!671 = distinct !DISubprogram(name: "DES_ncbc_encrypt", scope: !672, file: !672, line: 22, type: !673, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!672 = !DIFile(filename: "Cipher/ncbc_enc.c", directory: "/home/phil/Documents/github/cache-symbolic/crypto_test")
!673 = !DISubroutineType(types: !674)
!674 = !{null, !675, !677, !678, !25, !679, !43}
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!678 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!680 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !681)
!681 = distinct !DILocation(line: 89, column: 13, scope: !682)
!682 = distinct !DILexicalBlock(scope: !683, file: !672, line: 84, column: 22)
!683 = distinct !DILexicalBlock(scope: !684, file: !672, line: 84, column: 13)
!684 = distinct !DILexicalBlock(scope: !685, file: !672, line: 68, column: 12)
!685 = distinct !DILexicalBlock(scope: !671, file: !672, line: 35, column: 9)
!686 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !681)
!687 = !DILocation(line: 14, column: 95, scope: !22, inlinedAt: !681)
!688 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !681)
!689 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !681)
!690 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !681)
!691 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !681)
!692 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !681)
!693 = !DILocation(line: 22, column: 5, scope: !66, inlinedAt: !681)
!694 = !DILocation(line: 31, column: 9, scope: !69, inlinedAt: !681)
!695 = !DILocation(line: 32, column: 9, scope: !76, inlinedAt: !681)
!696 = !DILocation(line: 40, column: 9, scope: !93, inlinedAt: !681)
!697 = !DILocation(line: 41, column: 9, scope: !99, inlinedAt: !681)
!698 = !DILocation(line: 42, column: 9, scope: !105, inlinedAt: !681)
!699 = !DILocation(line: 43, column: 9, scope: !111, inlinedAt: !681)
!700 = !DILocation(line: 44, column: 9, scope: !117, inlinedAt: !681)
!701 = !DILocation(line: 45, column: 9, scope: !123, inlinedAt: !681)
!702 = !DILocation(line: 46, column: 9, scope: !129, inlinedAt: !681)
!703 = !DILocation(line: 47, column: 9, scope: !135, inlinedAt: !681)
!704 = !DILocation(line: 48, column: 9, scope: !141, inlinedAt: !681)
!705 = !DILocation(line: 49, column: 9, scope: !147, inlinedAt: !681)
!706 = !DILocation(line: 50, column: 9, scope: !153, inlinedAt: !681)
!707 = !DILocation(line: 51, column: 9, scope: !159, inlinedAt: !681)
!708 = !DILocation(line: 52, column: 9, scope: !165, inlinedAt: !681)
!709 = !DILocation(line: 53, column: 9, scope: !171, inlinedAt: !681)
!710 = !DILocation(line: 54, column: 9, scope: !177, inlinedAt: !681)
!711 = !DILocation(line: 55, column: 9, scope: !183, inlinedAt: !681)
!712 = !DILocation(line: 57, column: 9, scope: !191, inlinedAt: !681)
!713 = !DILocation(line: 58, column: 9, scope: !197, inlinedAt: !681)
!714 = !DILocation(line: 59, column: 9, scope: !203, inlinedAt: !681)
!715 = !DILocation(line: 60, column: 9, scope: !209, inlinedAt: !681)
!716 = !DILocation(line: 61, column: 9, scope: !215, inlinedAt: !681)
!717 = !DILocation(line: 62, column: 9, scope: !221, inlinedAt: !681)
!718 = !DILocation(line: 63, column: 9, scope: !227, inlinedAt: !681)
!719 = !DILocation(line: 64, column: 9, scope: !233, inlinedAt: !681)
!720 = !DILocation(line: 65, column: 9, scope: !239, inlinedAt: !681)
!721 = !DILocation(line: 66, column: 9, scope: !245, inlinedAt: !681)
!722 = !DILocation(line: 67, column: 9, scope: !251, inlinedAt: !681)
!723 = !DILocation(line: 68, column: 9, scope: !257, inlinedAt: !681)
!724 = !DILocation(line: 69, column: 9, scope: !263, inlinedAt: !681)
!725 = !DILocation(line: 70, column: 9, scope: !269, inlinedAt: !681)
!726 = !DILocation(line: 71, column: 9, scope: !275, inlinedAt: !681)
!727 = !DILocation(line: 72, column: 9, scope: !281, inlinedAt: !681)
!728 = !DILocation(line: 76, column: 9, scope: !285, inlinedAt: !681)
!729 = !DILocation(line: 77, column: 9, scope: !292, inlinedAt: !681)
!730 = !DILocation(line: 79, column: 5, scope: !299, inlinedAt: !681)
!731 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !732)
!732 = distinct !DILocation(line: 76, column: 13, scope: !733)
!733 = distinct !DILexicalBlock(scope: !734, file: !672, line: 71, column: 38)
!734 = distinct !DILexicalBlock(scope: !735, file: !672, line: 71, column: 9)
!735 = distinct !DILexicalBlock(scope: !684, file: !672, line: 71, column: 9)
!736 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !732)
!737 = !DILocation(line: 14, column: 95, scope: !22, inlinedAt: !732)
!738 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !732)
!739 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !732)
!740 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !732)
!741 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !732)
!742 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !732)
!743 = !DILocation(line: 22, column: 5, scope: !66, inlinedAt: !732)
!744 = !DILocation(line: 31, column: 9, scope: !69, inlinedAt: !732)
!745 = !DILocation(line: 32, column: 9, scope: !76, inlinedAt: !732)
!746 = !DILocation(line: 40, column: 9, scope: !93, inlinedAt: !732)
!747 = !DILocation(line: 41, column: 9, scope: !99, inlinedAt: !732)
!748 = !DILocation(line: 42, column: 9, scope: !105, inlinedAt: !732)
!749 = !DILocation(line: 43, column: 9, scope: !111, inlinedAt: !732)
!750 = !DILocation(line: 44, column: 9, scope: !117, inlinedAt: !732)
!751 = !DILocation(line: 45, column: 9, scope: !123, inlinedAt: !732)
!752 = !DILocation(line: 46, column: 9, scope: !129, inlinedAt: !732)
!753 = !DILocation(line: 47, column: 9, scope: !135, inlinedAt: !732)
!754 = !DILocation(line: 48, column: 9, scope: !141, inlinedAt: !732)
!755 = !DILocation(line: 49, column: 9, scope: !147, inlinedAt: !732)
!756 = !DILocation(line: 50, column: 9, scope: !153, inlinedAt: !732)
!757 = !DILocation(line: 51, column: 9, scope: !159, inlinedAt: !732)
!758 = !DILocation(line: 52, column: 9, scope: !165, inlinedAt: !732)
!759 = !DILocation(line: 53, column: 9, scope: !171, inlinedAt: !732)
!760 = !DILocation(line: 54, column: 9, scope: !177, inlinedAt: !732)
!761 = !DILocation(line: 55, column: 9, scope: !183, inlinedAt: !732)
!762 = !DILocation(line: 57, column: 9, scope: !191, inlinedAt: !732)
!763 = !DILocation(line: 58, column: 9, scope: !197, inlinedAt: !732)
!764 = !DILocation(line: 59, column: 9, scope: !203, inlinedAt: !732)
!765 = !DILocation(line: 60, column: 9, scope: !209, inlinedAt: !732)
!766 = !DILocation(line: 61, column: 9, scope: !215, inlinedAt: !732)
!767 = !DILocation(line: 62, column: 9, scope: !221, inlinedAt: !732)
!768 = !DILocation(line: 63, column: 9, scope: !227, inlinedAt: !732)
!769 = !DILocation(line: 64, column: 9, scope: !233, inlinedAt: !732)
!770 = !DILocation(line: 65, column: 9, scope: !239, inlinedAt: !732)
!771 = !DILocation(line: 66, column: 9, scope: !245, inlinedAt: !732)
!772 = !DILocation(line: 67, column: 9, scope: !251, inlinedAt: !732)
!773 = !DILocation(line: 68, column: 9, scope: !257, inlinedAt: !732)
!774 = !DILocation(line: 69, column: 9, scope: !263, inlinedAt: !732)
!775 = !DILocation(line: 70, column: 9, scope: !269, inlinedAt: !732)
!776 = !DILocation(line: 71, column: 9, scope: !275, inlinedAt: !732)
!777 = !DILocation(line: 72, column: 9, scope: !281, inlinedAt: !732)
!778 = !DILocation(line: 76, column: 9, scope: !285, inlinedAt: !732)
!779 = !DILocation(line: 77, column: 9, scope: !292, inlinedAt: !732)
!780 = !DILocation(line: 79, column: 5, scope: !299, inlinedAt: !732)
!781 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !782)
!782 = distinct !DILocation(line: 57, column: 13, scope: !783)
!783 = distinct !DILexicalBlock(scope: !784, file: !672, line: 51, column: 22)
!784 = distinct !DILexicalBlock(scope: !785, file: !672, line: 51, column: 13)
!785 = distinct !DILexicalBlock(scope: !685, file: !672, line: 35, column: 14)
!786 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !782)
!787 = !DILocation(line: 14, column: 95, scope: !22, inlinedAt: !782)
!788 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !782)
!789 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !782)
!790 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !782)
!791 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !782)
!792 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !782)
!793 = !DILocation(line: 22, column: 5, scope: !66, inlinedAt: !782)
!794 = !DILocation(line: 31, column: 9, scope: !69, inlinedAt: !782)
!795 = !DILocation(line: 32, column: 9, scope: !76, inlinedAt: !782)
!796 = !DILocation(line: 40, column: 9, scope: !93, inlinedAt: !782)
!797 = !DILocation(line: 41, column: 9, scope: !99, inlinedAt: !782)
!798 = !DILocation(line: 42, column: 9, scope: !105, inlinedAt: !782)
!799 = !DILocation(line: 43, column: 9, scope: !111, inlinedAt: !782)
!800 = !DILocation(line: 44, column: 9, scope: !117, inlinedAt: !782)
!801 = !DILocation(line: 45, column: 9, scope: !123, inlinedAt: !782)
!802 = !DILocation(line: 46, column: 9, scope: !129, inlinedAt: !782)
!803 = !DILocation(line: 47, column: 9, scope: !135, inlinedAt: !782)
!804 = !DILocation(line: 48, column: 9, scope: !141, inlinedAt: !782)
!805 = !DILocation(line: 49, column: 9, scope: !147, inlinedAt: !782)
!806 = !DILocation(line: 50, column: 9, scope: !153, inlinedAt: !782)
!807 = !DILocation(line: 51, column: 9, scope: !159, inlinedAt: !782)
!808 = !DILocation(line: 52, column: 9, scope: !165, inlinedAt: !782)
!809 = !DILocation(line: 53, column: 9, scope: !171, inlinedAt: !782)
!810 = !DILocation(line: 54, column: 9, scope: !177, inlinedAt: !782)
!811 = !DILocation(line: 55, column: 9, scope: !183, inlinedAt: !782)
!812 = !DILocation(line: 57, column: 9, scope: !191, inlinedAt: !782)
!813 = !DILocation(line: 58, column: 9, scope: !197, inlinedAt: !782)
!814 = !DILocation(line: 59, column: 9, scope: !203, inlinedAt: !782)
!815 = !DILocation(line: 60, column: 9, scope: !209, inlinedAt: !782)
!816 = !DILocation(line: 61, column: 9, scope: !215, inlinedAt: !782)
!817 = !DILocation(line: 62, column: 9, scope: !221, inlinedAt: !782)
!818 = !DILocation(line: 63, column: 9, scope: !227, inlinedAt: !782)
!819 = !DILocation(line: 64, column: 9, scope: !233, inlinedAt: !782)
!820 = !DILocation(line: 65, column: 9, scope: !239, inlinedAt: !782)
!821 = !DILocation(line: 66, column: 9, scope: !245, inlinedAt: !782)
!822 = !DILocation(line: 67, column: 9, scope: !251, inlinedAt: !782)
!823 = !DILocation(line: 68, column: 9, scope: !257, inlinedAt: !782)
!824 = !DILocation(line: 69, column: 9, scope: !263, inlinedAt: !782)
!825 = !DILocation(line: 70, column: 9, scope: !269, inlinedAt: !782)
!826 = !DILocation(line: 71, column: 9, scope: !275, inlinedAt: !782)
!827 = !DILocation(line: 72, column: 9, scope: !281, inlinedAt: !782)
!828 = !DILocation(line: 76, column: 9, scope: !285, inlinedAt: !782)
!829 = !DILocation(line: 77, column: 9, scope: !292, inlinedAt: !782)
!830 = !DILocation(line: 79, column: 5, scope: !299, inlinedAt: !782)
!831 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !832)
!832 = distinct !DILocation(line: 45, column: 13, scope: !833)
!833 = distinct !DILexicalBlock(scope: !834, file: !672, line: 38, column: 38)
!834 = distinct !DILexicalBlock(scope: !835, file: !672, line: 38, column: 9)
!835 = distinct !DILexicalBlock(scope: !785, file: !672, line: 38, column: 9)
!836 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !832)
!837 = !DILocation(line: 14, column: 95, scope: !22, inlinedAt: !832)
!838 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !832)
!839 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !832)
!840 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !832)
!841 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !832)
!842 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !832)
!843 = !DILocation(line: 22, column: 5, scope: !66, inlinedAt: !832)
!844 = !DILocation(line: 31, column: 9, scope: !69, inlinedAt: !832)
!845 = !DILocation(line: 32, column: 9, scope: !76, inlinedAt: !832)
!846 = !DILocation(line: 40, column: 9, scope: !93, inlinedAt: !832)
!847 = !DILocation(line: 41, column: 9, scope: !99, inlinedAt: !832)
!848 = !DILocation(line: 42, column: 9, scope: !105, inlinedAt: !832)
!849 = !DILocation(line: 43, column: 9, scope: !111, inlinedAt: !832)
!850 = !DILocation(line: 44, column: 9, scope: !117, inlinedAt: !832)
!851 = !DILocation(line: 45, column: 9, scope: !123, inlinedAt: !832)
!852 = !DILocation(line: 46, column: 9, scope: !129, inlinedAt: !832)
!853 = !DILocation(line: 47, column: 9, scope: !135, inlinedAt: !832)
!854 = !DILocation(line: 48, column: 9, scope: !141, inlinedAt: !832)
!855 = !DILocation(line: 49, column: 9, scope: !147, inlinedAt: !832)
!856 = !DILocation(line: 50, column: 9, scope: !153, inlinedAt: !832)
!857 = !DILocation(line: 51, column: 9, scope: !159, inlinedAt: !832)
!858 = !DILocation(line: 52, column: 9, scope: !165, inlinedAt: !832)
!859 = !DILocation(line: 53, column: 9, scope: !171, inlinedAt: !832)
!860 = !DILocation(line: 54, column: 9, scope: !177, inlinedAt: !832)
!861 = !DILocation(line: 55, column: 9, scope: !183, inlinedAt: !832)
!862 = !DILocation(line: 57, column: 9, scope: !191, inlinedAt: !832)
!863 = !DILocation(line: 58, column: 9, scope: !197, inlinedAt: !832)
!864 = !DILocation(line: 59, column: 9, scope: !203, inlinedAt: !832)
!865 = !DILocation(line: 60, column: 9, scope: !209, inlinedAt: !832)
!866 = !DILocation(line: 61, column: 9, scope: !215, inlinedAt: !832)
!867 = !DILocation(line: 62, column: 9, scope: !221, inlinedAt: !832)
!868 = !DILocation(line: 63, column: 9, scope: !227, inlinedAt: !832)
!869 = !DILocation(line: 64, column: 9, scope: !233, inlinedAt: !832)
!870 = !DILocation(line: 65, column: 9, scope: !239, inlinedAt: !832)
!871 = !DILocation(line: 66, column: 9, scope: !245, inlinedAt: !832)
!872 = !DILocation(line: 67, column: 9, scope: !251, inlinedAt: !832)
!873 = !DILocation(line: 68, column: 9, scope: !257, inlinedAt: !832)
!874 = !DILocation(line: 69, column: 9, scope: !263, inlinedAt: !832)
!875 = !DILocation(line: 70, column: 9, scope: !269, inlinedAt: !832)
!876 = !DILocation(line: 71, column: 9, scope: !275, inlinedAt: !832)
!877 = !DILocation(line: 72, column: 9, scope: !281, inlinedAt: !832)
!878 = !DILocation(line: 76, column: 9, scope: !285, inlinedAt: !832)
!879 = !DILocation(line: 77, column: 9, scope: !292, inlinedAt: !832)
!880 = !DILocation(line: 79, column: 5, scope: !299, inlinedAt: !832)
!881 = !DILocalVariable(name: "in", arg: 1, scope: !671, file: !672, line: 22, type: !675)
!882 = !DILocation(line: 22, column: 44, scope: !671)
!883 = !DILocalVariable(name: "out", arg: 2, scope: !671, file: !672, line: 22, type: !677)
!884 = !DILocation(line: 22, column: 63, scope: !671)
!885 = !DILocalVariable(name: "length", arg: 3, scope: !671, file: !672, line: 23, type: !678)
!886 = !DILocation(line: 23, column: 28, scope: !671)
!887 = !DILocalVariable(name: "_schedule", arg: 4, scope: !671, file: !672, line: 23, type: !25)
!888 = !DILocation(line: 23, column: 54, scope: !671)
!889 = !DILocalVariable(name: "ivec", arg: 5, scope: !671, file: !672, line: 24, type: !679)
!890 = !DILocation(line: 24, column: 35, scope: !671)
!891 = !DILocalVariable(name: "enc", arg: 6, scope: !671, file: !672, line: 24, type: !43)
!892 = !DILocation(line: 24, column: 45, scope: !671)
!893 = !DILocalVariable(name: "tin0", scope: !671, file: !672, line: 27, type: !7)
!894 = !DILocation(line: 27, column: 23, scope: !671)
!895 = !DILocalVariable(name: "tin1", scope: !671, file: !672, line: 27, type: !7)
!896 = !DILocation(line: 27, column: 29, scope: !671)
!897 = !DILocalVariable(name: "tout0", scope: !671, file: !672, line: 28, type: !7)
!898 = !DILocation(line: 28, column: 23, scope: !671)
!899 = !DILocalVariable(name: "tout1", scope: !671, file: !672, line: 28, type: !7)
!900 = !DILocation(line: 28, column: 30, scope: !671)
!901 = !DILocalVariable(name: "xor0", scope: !671, file: !672, line: 28, type: !7)
!902 = !DILocation(line: 28, column: 37, scope: !671)
!903 = !DILocalVariable(name: "xor1", scope: !671, file: !672, line: 28, type: !7)
!904 = !DILocation(line: 28, column: 43, scope: !671)
!905 = !DILocalVariable(name: "l", scope: !671, file: !672, line: 29, type: !678)
!906 = !DILocation(line: 29, column: 19, scope: !671)
!907 = !DILocation(line: 29, column: 23, scope: !671)
!908 = !DILocalVariable(name: "tin", scope: !671, file: !672, line: 30, type: !38)
!909 = !DILocation(line: 30, column: 14, scope: !671)
!910 = !DILocalVariable(name: "iv", scope: !671, file: !672, line: 31, type: !677)
!911 = !DILocation(line: 31, column: 20, scope: !671)
!912 = !DILocation(line: 33, column: 13, scope: !671)
!913 = !DILocation(line: 33, column: 11, scope: !671)
!914 = !DILocation(line: 33, column: 8, scope: !671)
!915 = !DILocation(line: 35, column: 9, scope: !685)
!916 = !DILocation(line: 35, column: 9, scope: !671)
!917 = !DILocation(line: 36, column: 9, scope: !785)
!918 = !DILocation(line: 37, column: 9, scope: !785)
!919 = !DILocation(line: 38, column: 16, scope: !835)
!920 = !DILocation(line: 38, column: 14, scope: !835)
!921 = !DILocation(line: 38, column: 22, scope: !834)
!922 = !DILocation(line: 38, column: 24, scope: !834)
!923 = !DILocation(line: 38, column: 9, scope: !835)
!924 = !DILocation(line: 39, column: 13, scope: !833)
!925 = !DILocation(line: 40, column: 13, scope: !833)
!926 = !DILocation(line: 41, column: 21, scope: !833)
!927 = !DILocation(line: 41, column: 18, scope: !833)
!928 = !DILocation(line: 42, column: 22, scope: !833)
!929 = !DILocation(line: 42, column: 13, scope: !833)
!930 = !DILocation(line: 42, column: 20, scope: !833)
!931 = !DILocation(line: 43, column: 21, scope: !833)
!932 = !DILocation(line: 43, column: 18, scope: !833)
!933 = !DILocation(line: 44, column: 22, scope: !833)
!934 = !DILocation(line: 44, column: 13, scope: !833)
!935 = !DILocation(line: 44, column: 20, scope: !833)
!936 = !DILocation(line: 45, column: 38, scope: !833)
!937 = !DILocation(line: 45, column: 43, scope: !833)
!938 = !DILocation(line: 17, column: 5, scope: !22, inlinedAt: !832)
!939 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !832)
!940 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !832)
!941 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !832)
!942 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !832)
!943 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !832)
!944 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !832)
!945 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !832)
!946 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !832)
!947 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !832)
!948 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !832)
!949 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !832)
!950 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !832)
!951 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !832)
!952 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !832)
!953 = !DILocation(line: 39, column: 9, scope: !87, inlinedAt: !832)
!954 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !832)
!955 = !DILocation(line: 40, column: 9, scope: !90, inlinedAt: !832)
!956 = !DILocation(line: 41, column: 9, scope: !97, inlinedAt: !832)
!957 = !DILocation(line: 42, column: 9, scope: !103, inlinedAt: !832)
!958 = !DILocation(line: 43, column: 9, scope: !109, inlinedAt: !832)
!959 = !DILocation(line: 44, column: 9, scope: !115, inlinedAt: !832)
!960 = !DILocation(line: 45, column: 9, scope: !121, inlinedAt: !832)
!961 = !DILocation(line: 46, column: 9, scope: !127, inlinedAt: !832)
!962 = !DILocation(line: 47, column: 9, scope: !133, inlinedAt: !832)
!963 = !DILocation(line: 48, column: 9, scope: !139, inlinedAt: !832)
!964 = !DILocation(line: 49, column: 9, scope: !145, inlinedAt: !832)
!965 = !DILocation(line: 50, column: 9, scope: !151, inlinedAt: !832)
!966 = !DILocation(line: 51, column: 9, scope: !157, inlinedAt: !832)
!967 = !DILocation(line: 52, column: 9, scope: !163, inlinedAt: !832)
!968 = !DILocation(line: 53, column: 9, scope: !169, inlinedAt: !832)
!969 = !DILocation(line: 54, column: 9, scope: !175, inlinedAt: !832)
!970 = !DILocation(line: 55, column: 9, scope: !181, inlinedAt: !832)
!971 = !DILocation(line: 56, column: 5, scope: !91, inlinedAt: !832)
!972 = !DILocation(line: 57, column: 9, scope: !188, inlinedAt: !832)
!973 = !DILocation(line: 58, column: 9, scope: !195, inlinedAt: !832)
!974 = !DILocation(line: 59, column: 9, scope: !201, inlinedAt: !832)
!975 = !DILocation(line: 60, column: 9, scope: !207, inlinedAt: !832)
!976 = !DILocation(line: 61, column: 9, scope: !213, inlinedAt: !832)
!977 = !DILocation(line: 62, column: 9, scope: !219, inlinedAt: !832)
!978 = !DILocation(line: 63, column: 9, scope: !225, inlinedAt: !832)
!979 = !DILocation(line: 64, column: 9, scope: !231, inlinedAt: !832)
!980 = !DILocation(line: 65, column: 9, scope: !237, inlinedAt: !832)
!981 = !DILocation(line: 66, column: 9, scope: !243, inlinedAt: !832)
!982 = !DILocation(line: 67, column: 9, scope: !249, inlinedAt: !832)
!983 = !DILocation(line: 68, column: 9, scope: !255, inlinedAt: !832)
!984 = !DILocation(line: 69, column: 9, scope: !261, inlinedAt: !832)
!985 = !DILocation(line: 70, column: 9, scope: !267, inlinedAt: !832)
!986 = !DILocation(line: 71, column: 9, scope: !273, inlinedAt: !832)
!987 = !DILocation(line: 72, column: 9, scope: !279, inlinedAt: !832)
!988 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !832)
!989 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !832)
!990 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !832)
!991 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !832)
!992 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !832)
!993 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !832)
!994 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !832)
!995 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !832)
!996 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !832)
!997 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !832)
!998 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !832)
!999 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !832)
!1000 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !832)
!1001 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !832)
!1002 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !832)
!1003 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !832)
!1004 = !DILocation(line: 46, column: 21, scope: !833)
!1005 = !DILocation(line: 46, column: 19, scope: !833)
!1006 = !DILocation(line: 47, column: 13, scope: !833)
!1007 = !DILocation(line: 48, column: 21, scope: !833)
!1008 = !DILocation(line: 48, column: 19, scope: !833)
!1009 = !DILocation(line: 49, column: 13, scope: !833)
!1010 = !DILocation(line: 50, column: 9, scope: !833)
!1011 = !DILocation(line: 38, column: 32, scope: !834)
!1012 = !DILocation(line: 38, column: 9, scope: !834)
!1013 = distinct !{!1013, !923, !1014}
!1014 = !DILocation(line: 50, column: 9, scope: !835)
!1015 = !DILocation(line: 51, column: 13, scope: !784)
!1016 = !DILocation(line: 51, column: 15, scope: !784)
!1017 = !DILocation(line: 51, column: 13, scope: !785)
!1018 = !DILocation(line: 52, column: 13, scope: !1019)
!1019 = distinct !DILexicalBlock(scope: !783, file: !672, line: 52, column: 13)
!1020 = !DILocation(line: 52, column: 13, scope: !1021)
!1021 = distinct !DILexicalBlock(scope: !1019, file: !672, line: 52, column: 13)
!1022 = !DILocation(line: 53, column: 21, scope: !783)
!1023 = !DILocation(line: 53, column: 18, scope: !783)
!1024 = !DILocation(line: 54, column: 22, scope: !783)
!1025 = !DILocation(line: 54, column: 13, scope: !783)
!1026 = !DILocation(line: 54, column: 20, scope: !783)
!1027 = !DILocation(line: 55, column: 21, scope: !783)
!1028 = !DILocation(line: 55, column: 18, scope: !783)
!1029 = !DILocation(line: 56, column: 22, scope: !783)
!1030 = !DILocation(line: 56, column: 13, scope: !783)
!1031 = !DILocation(line: 56, column: 20, scope: !783)
!1032 = !DILocation(line: 57, column: 38, scope: !783)
!1033 = !DILocation(line: 57, column: 43, scope: !783)
!1034 = !DILocation(line: 17, column: 5, scope: !22, inlinedAt: !782)
!1035 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !782)
!1036 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !782)
!1037 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !782)
!1038 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !782)
!1039 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !782)
!1040 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !782)
!1041 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !782)
!1042 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !782)
!1043 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !782)
!1044 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !782)
!1045 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !782)
!1046 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !782)
!1047 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !782)
!1048 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !782)
!1049 = !DILocation(line: 39, column: 9, scope: !87, inlinedAt: !782)
!1050 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !782)
!1051 = !DILocation(line: 40, column: 9, scope: !90, inlinedAt: !782)
!1052 = !DILocation(line: 41, column: 9, scope: !97, inlinedAt: !782)
!1053 = !DILocation(line: 42, column: 9, scope: !103, inlinedAt: !782)
!1054 = !DILocation(line: 43, column: 9, scope: !109, inlinedAt: !782)
!1055 = !DILocation(line: 44, column: 9, scope: !115, inlinedAt: !782)
!1056 = !DILocation(line: 45, column: 9, scope: !121, inlinedAt: !782)
!1057 = !DILocation(line: 46, column: 9, scope: !127, inlinedAt: !782)
!1058 = !DILocation(line: 47, column: 9, scope: !133, inlinedAt: !782)
!1059 = !DILocation(line: 48, column: 9, scope: !139, inlinedAt: !782)
!1060 = !DILocation(line: 49, column: 9, scope: !145, inlinedAt: !782)
!1061 = !DILocation(line: 50, column: 9, scope: !151, inlinedAt: !782)
!1062 = !DILocation(line: 51, column: 9, scope: !157, inlinedAt: !782)
!1063 = !DILocation(line: 52, column: 9, scope: !163, inlinedAt: !782)
!1064 = !DILocation(line: 53, column: 9, scope: !169, inlinedAt: !782)
!1065 = !DILocation(line: 54, column: 9, scope: !175, inlinedAt: !782)
!1066 = !DILocation(line: 55, column: 9, scope: !181, inlinedAt: !782)
!1067 = !DILocation(line: 56, column: 5, scope: !91, inlinedAt: !782)
!1068 = !DILocation(line: 57, column: 9, scope: !188, inlinedAt: !782)
!1069 = !DILocation(line: 58, column: 9, scope: !195, inlinedAt: !782)
!1070 = !DILocation(line: 59, column: 9, scope: !201, inlinedAt: !782)
!1071 = !DILocation(line: 60, column: 9, scope: !207, inlinedAt: !782)
!1072 = !DILocation(line: 61, column: 9, scope: !213, inlinedAt: !782)
!1073 = !DILocation(line: 62, column: 9, scope: !219, inlinedAt: !782)
!1074 = !DILocation(line: 63, column: 9, scope: !225, inlinedAt: !782)
!1075 = !DILocation(line: 64, column: 9, scope: !231, inlinedAt: !782)
!1076 = !DILocation(line: 65, column: 9, scope: !237, inlinedAt: !782)
!1077 = !DILocation(line: 66, column: 9, scope: !243, inlinedAt: !782)
!1078 = !DILocation(line: 67, column: 9, scope: !249, inlinedAt: !782)
!1079 = !DILocation(line: 68, column: 9, scope: !255, inlinedAt: !782)
!1080 = !DILocation(line: 69, column: 9, scope: !261, inlinedAt: !782)
!1081 = !DILocation(line: 70, column: 9, scope: !267, inlinedAt: !782)
!1082 = !DILocation(line: 71, column: 9, scope: !273, inlinedAt: !782)
!1083 = !DILocation(line: 72, column: 9, scope: !279, inlinedAt: !782)
!1084 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !782)
!1085 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !782)
!1086 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !782)
!1087 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !782)
!1088 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !782)
!1089 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !782)
!1090 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !782)
!1091 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !782)
!1092 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !782)
!1093 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !782)
!1094 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !782)
!1095 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !782)
!1096 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !782)
!1097 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !782)
!1098 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !782)
!1099 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !782)
!1100 = !DILocation(line: 58, column: 21, scope: !783)
!1101 = !DILocation(line: 58, column: 19, scope: !783)
!1102 = !DILocation(line: 59, column: 13, scope: !783)
!1103 = !DILocation(line: 60, column: 21, scope: !783)
!1104 = !DILocation(line: 60, column: 19, scope: !783)
!1105 = !DILocation(line: 61, column: 13, scope: !783)
!1106 = !DILocation(line: 62, column: 9, scope: !783)
!1107 = !DILocation(line: 64, column: 17, scope: !785)
!1108 = !DILocation(line: 64, column: 15, scope: !785)
!1109 = !DILocation(line: 64, column: 12, scope: !785)
!1110 = !DILocation(line: 65, column: 9, scope: !785)
!1111 = !DILocation(line: 66, column: 9, scope: !785)
!1112 = !DILocation(line: 68, column: 5, scope: !785)
!1113 = !DILocation(line: 69, column: 9, scope: !684)
!1114 = !DILocation(line: 70, column: 9, scope: !684)
!1115 = !DILocation(line: 71, column: 16, scope: !735)
!1116 = !DILocation(line: 71, column: 14, scope: !735)
!1117 = !DILocation(line: 71, column: 22, scope: !734)
!1118 = !DILocation(line: 71, column: 24, scope: !734)
!1119 = !DILocation(line: 71, column: 9, scope: !735)
!1120 = !DILocation(line: 72, column: 13, scope: !733)
!1121 = !DILocation(line: 73, column: 22, scope: !733)
!1122 = !DILocation(line: 73, column: 13, scope: !733)
!1123 = !DILocation(line: 73, column: 20, scope: !733)
!1124 = !DILocation(line: 74, column: 13, scope: !733)
!1125 = !DILocation(line: 75, column: 22, scope: !733)
!1126 = !DILocation(line: 75, column: 13, scope: !733)
!1127 = !DILocation(line: 75, column: 20, scope: !733)
!1128 = !DILocation(line: 76, column: 38, scope: !733)
!1129 = !DILocation(line: 76, column: 43, scope: !733)
!1130 = !DILocation(line: 17, column: 5, scope: !22, inlinedAt: !732)
!1131 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !732)
!1132 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !732)
!1133 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !732)
!1134 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !732)
!1135 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !732)
!1136 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !732)
!1137 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !732)
!1138 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !732)
!1139 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !732)
!1140 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !732)
!1141 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !732)
!1142 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !732)
!1143 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !732)
!1144 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !732)
!1145 = !DILocation(line: 39, column: 9, scope: !87, inlinedAt: !732)
!1146 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !732)
!1147 = !DILocation(line: 40, column: 9, scope: !90, inlinedAt: !732)
!1148 = !DILocation(line: 41, column: 9, scope: !97, inlinedAt: !732)
!1149 = !DILocation(line: 42, column: 9, scope: !103, inlinedAt: !732)
!1150 = !DILocation(line: 43, column: 9, scope: !109, inlinedAt: !732)
!1151 = !DILocation(line: 44, column: 9, scope: !115, inlinedAt: !732)
!1152 = !DILocation(line: 45, column: 9, scope: !121, inlinedAt: !732)
!1153 = !DILocation(line: 46, column: 9, scope: !127, inlinedAt: !732)
!1154 = !DILocation(line: 47, column: 9, scope: !133, inlinedAt: !732)
!1155 = !DILocation(line: 48, column: 9, scope: !139, inlinedAt: !732)
!1156 = !DILocation(line: 49, column: 9, scope: !145, inlinedAt: !732)
!1157 = !DILocation(line: 50, column: 9, scope: !151, inlinedAt: !732)
!1158 = !DILocation(line: 51, column: 9, scope: !157, inlinedAt: !732)
!1159 = !DILocation(line: 52, column: 9, scope: !163, inlinedAt: !732)
!1160 = !DILocation(line: 53, column: 9, scope: !169, inlinedAt: !732)
!1161 = !DILocation(line: 54, column: 9, scope: !175, inlinedAt: !732)
!1162 = !DILocation(line: 55, column: 9, scope: !181, inlinedAt: !732)
!1163 = !DILocation(line: 56, column: 5, scope: !91, inlinedAt: !732)
!1164 = !DILocation(line: 57, column: 9, scope: !188, inlinedAt: !732)
!1165 = !DILocation(line: 58, column: 9, scope: !195, inlinedAt: !732)
!1166 = !DILocation(line: 59, column: 9, scope: !201, inlinedAt: !732)
!1167 = !DILocation(line: 60, column: 9, scope: !207, inlinedAt: !732)
!1168 = !DILocation(line: 61, column: 9, scope: !213, inlinedAt: !732)
!1169 = !DILocation(line: 62, column: 9, scope: !219, inlinedAt: !732)
!1170 = !DILocation(line: 63, column: 9, scope: !225, inlinedAt: !732)
!1171 = !DILocation(line: 64, column: 9, scope: !231, inlinedAt: !732)
!1172 = !DILocation(line: 65, column: 9, scope: !237, inlinedAt: !732)
!1173 = !DILocation(line: 66, column: 9, scope: !243, inlinedAt: !732)
!1174 = !DILocation(line: 67, column: 9, scope: !249, inlinedAt: !732)
!1175 = !DILocation(line: 68, column: 9, scope: !255, inlinedAt: !732)
!1176 = !DILocation(line: 69, column: 9, scope: !261, inlinedAt: !732)
!1177 = !DILocation(line: 70, column: 9, scope: !267, inlinedAt: !732)
!1178 = !DILocation(line: 71, column: 9, scope: !273, inlinedAt: !732)
!1179 = !DILocation(line: 72, column: 9, scope: !279, inlinedAt: !732)
!1180 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !732)
!1181 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !732)
!1182 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !732)
!1183 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !732)
!1184 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !732)
!1185 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !732)
!1186 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !732)
!1187 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !732)
!1188 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !732)
!1189 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !732)
!1190 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !732)
!1191 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !732)
!1192 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !732)
!1193 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !732)
!1194 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !732)
!1195 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !732)
!1196 = !DILocation(line: 77, column: 21, scope: !733)
!1197 = !DILocation(line: 77, column: 30, scope: !733)
!1198 = !DILocation(line: 77, column: 28, scope: !733)
!1199 = !DILocation(line: 77, column: 19, scope: !733)
!1200 = !DILocation(line: 78, column: 21, scope: !733)
!1201 = !DILocation(line: 78, column: 30, scope: !733)
!1202 = !DILocation(line: 78, column: 28, scope: !733)
!1203 = !DILocation(line: 78, column: 19, scope: !733)
!1204 = !DILocation(line: 79, column: 13, scope: !733)
!1205 = !DILocation(line: 80, column: 13, scope: !733)
!1206 = !DILocation(line: 81, column: 20, scope: !733)
!1207 = !DILocation(line: 81, column: 18, scope: !733)
!1208 = !DILocation(line: 82, column: 20, scope: !733)
!1209 = !DILocation(line: 82, column: 18, scope: !733)
!1210 = !DILocation(line: 83, column: 9, scope: !733)
!1211 = !DILocation(line: 71, column: 32, scope: !734)
!1212 = !DILocation(line: 71, column: 9, scope: !734)
!1213 = distinct !{!1213, !1119, !1214}
!1214 = !DILocation(line: 83, column: 9, scope: !735)
!1215 = !DILocation(line: 84, column: 13, scope: !683)
!1216 = !DILocation(line: 84, column: 15, scope: !683)
!1217 = !DILocation(line: 84, column: 13, scope: !684)
!1218 = !DILocation(line: 85, column: 13, scope: !682)
!1219 = !DILocation(line: 86, column: 22, scope: !682)
!1220 = !DILocation(line: 86, column: 13, scope: !682)
!1221 = !DILocation(line: 86, column: 20, scope: !682)
!1222 = !DILocation(line: 87, column: 13, scope: !682)
!1223 = !DILocation(line: 88, column: 22, scope: !682)
!1224 = !DILocation(line: 88, column: 13, scope: !682)
!1225 = !DILocation(line: 88, column: 20, scope: !682)
!1226 = !DILocation(line: 89, column: 38, scope: !682)
!1227 = !DILocation(line: 89, column: 43, scope: !682)
!1228 = !DILocation(line: 17, column: 5, scope: !22, inlinedAt: !681)
!1229 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !681)
!1230 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !681)
!1231 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !681)
!1232 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !681)
!1233 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !681)
!1234 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !681)
!1235 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !681)
!1236 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !681)
!1237 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !681)
!1238 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !681)
!1239 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !681)
!1240 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !681)
!1241 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !681)
!1242 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !681)
!1243 = !DILocation(line: 39, column: 9, scope: !87, inlinedAt: !681)
!1244 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !681)
!1245 = !DILocation(line: 40, column: 9, scope: !90, inlinedAt: !681)
!1246 = !DILocation(line: 41, column: 9, scope: !97, inlinedAt: !681)
!1247 = !DILocation(line: 42, column: 9, scope: !103, inlinedAt: !681)
!1248 = !DILocation(line: 43, column: 9, scope: !109, inlinedAt: !681)
!1249 = !DILocation(line: 44, column: 9, scope: !115, inlinedAt: !681)
!1250 = !DILocation(line: 45, column: 9, scope: !121, inlinedAt: !681)
!1251 = !DILocation(line: 46, column: 9, scope: !127, inlinedAt: !681)
!1252 = !DILocation(line: 47, column: 9, scope: !133, inlinedAt: !681)
!1253 = !DILocation(line: 48, column: 9, scope: !139, inlinedAt: !681)
!1254 = !DILocation(line: 49, column: 9, scope: !145, inlinedAt: !681)
!1255 = !DILocation(line: 50, column: 9, scope: !151, inlinedAt: !681)
!1256 = !DILocation(line: 51, column: 9, scope: !157, inlinedAt: !681)
!1257 = !DILocation(line: 52, column: 9, scope: !163, inlinedAt: !681)
!1258 = !DILocation(line: 53, column: 9, scope: !169, inlinedAt: !681)
!1259 = !DILocation(line: 54, column: 9, scope: !175, inlinedAt: !681)
!1260 = !DILocation(line: 55, column: 9, scope: !181, inlinedAt: !681)
!1261 = !DILocation(line: 56, column: 5, scope: !91, inlinedAt: !681)
!1262 = !DILocation(line: 57, column: 9, scope: !188, inlinedAt: !681)
!1263 = !DILocation(line: 58, column: 9, scope: !195, inlinedAt: !681)
!1264 = !DILocation(line: 59, column: 9, scope: !201, inlinedAt: !681)
!1265 = !DILocation(line: 60, column: 9, scope: !207, inlinedAt: !681)
!1266 = !DILocation(line: 61, column: 9, scope: !213, inlinedAt: !681)
!1267 = !DILocation(line: 62, column: 9, scope: !219, inlinedAt: !681)
!1268 = !DILocation(line: 63, column: 9, scope: !225, inlinedAt: !681)
!1269 = !DILocation(line: 64, column: 9, scope: !231, inlinedAt: !681)
!1270 = !DILocation(line: 65, column: 9, scope: !237, inlinedAt: !681)
!1271 = !DILocation(line: 66, column: 9, scope: !243, inlinedAt: !681)
!1272 = !DILocation(line: 67, column: 9, scope: !249, inlinedAt: !681)
!1273 = !DILocation(line: 68, column: 9, scope: !255, inlinedAt: !681)
!1274 = !DILocation(line: 69, column: 9, scope: !261, inlinedAt: !681)
!1275 = !DILocation(line: 70, column: 9, scope: !267, inlinedAt: !681)
!1276 = !DILocation(line: 71, column: 9, scope: !273, inlinedAt: !681)
!1277 = !DILocation(line: 72, column: 9, scope: !279, inlinedAt: !681)
!1278 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !681)
!1279 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !681)
!1280 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !681)
!1281 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !681)
!1282 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !681)
!1283 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !681)
!1284 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !681)
!1285 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !681)
!1286 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !681)
!1287 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !681)
!1288 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !681)
!1289 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !681)
!1290 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !681)
!1291 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !681)
!1292 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !681)
!1293 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !681)
!1294 = !DILocation(line: 90, column: 21, scope: !682)
!1295 = !DILocation(line: 90, column: 30, scope: !682)
!1296 = !DILocation(line: 90, column: 28, scope: !682)
!1297 = !DILocation(line: 90, column: 19, scope: !682)
!1298 = !DILocation(line: 91, column: 21, scope: !682)
!1299 = !DILocation(line: 91, column: 30, scope: !682)
!1300 = !DILocation(line: 91, column: 28, scope: !682)
!1301 = !DILocation(line: 91, column: 19, scope: !682)
!1302 = !DILocation(line: 92, column: 13, scope: !1303)
!1303 = distinct !DILexicalBlock(scope: !682, file: !672, line: 92, column: 13)
!1304 = !DILocation(line: 92, column: 13, scope: !1305)
!1305 = distinct !DILexicalBlock(scope: !1303, file: !672, line: 92, column: 13)
!1306 = !DILocation(line: 94, column: 20, scope: !682)
!1307 = !DILocation(line: 94, column: 18, scope: !682)
!1308 = !DILocation(line: 95, column: 20, scope: !682)
!1309 = !DILocation(line: 95, column: 18, scope: !682)
!1310 = !DILocation(line: 97, column: 9, scope: !682)
!1311 = !DILocation(line: 99, column: 17, scope: !684)
!1312 = !DILocation(line: 99, column: 15, scope: !684)
!1313 = !DILocation(line: 99, column: 12, scope: !684)
!1314 = !DILocation(line: 100, column: 9, scope: !684)
!1315 = !DILocation(line: 101, column: 9, scope: !684)
!1316 = !DILocation(line: 104, column: 47, scope: !671)
!1317 = !DILocation(line: 104, column: 40, scope: !671)
!1318 = !DILocation(line: 104, column: 33, scope: !671)
!1319 = !DILocation(line: 104, column: 25, scope: !671)
!1320 = !DILocation(line: 104, column: 17, scope: !671)
!1321 = !DILocation(line: 104, column: 10, scope: !671)
!1322 = !DILocation(line: 105, column: 14, scope: !671)
!1323 = !DILocation(line: 105, column: 21, scope: !671)
!1324 = !DILocation(line: 105, column: 5, scope: !671)
!1325 = !DILocation(line: 105, column: 12, scope: !671)
!1326 = !DILocation(line: 106, column: 1, scope: !671)
!1327 = distinct !DISubprogram(name: "DES_ede3_cbc_encrypt", scope: !3, file: !3, line: 194, type: !1328, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{null, !675, !677, !678, !25, !25, !25, !679, !43}
!1330 = !DILocalVariable(name: "input", arg: 1, scope: !1327, file: !3, line: 194, type: !675)
!1331 = !DILocation(line: 194, column: 48, scope: !1327)
!1332 = !DILocalVariable(name: "output", arg: 2, scope: !1327, file: !3, line: 194, type: !677)
!1333 = !DILocation(line: 194, column: 70, scope: !1327)
!1334 = !DILocalVariable(name: "length", arg: 3, scope: !1327, file: !3, line: 195, type: !678)
!1335 = !DILocation(line: 195, column: 32, scope: !1327)
!1336 = !DILocalVariable(name: "ks1", arg: 4, scope: !1327, file: !3, line: 195, type: !25)
!1337 = !DILocation(line: 195, column: 58, scope: !1327)
!1338 = !DILocalVariable(name: "ks2", arg: 5, scope: !1327, file: !3, line: 196, type: !25)
!1339 = !DILocation(line: 196, column: 45, scope: !1327)
!1340 = !DILocalVariable(name: "ks3", arg: 6, scope: !1327, file: !3, line: 196, type: !25)
!1341 = !DILocation(line: 196, column: 68, scope: !1327)
!1342 = !DILocalVariable(name: "ivec", arg: 7, scope: !1327, file: !3, line: 197, type: !679)
!1343 = !DILocation(line: 197, column: 39, scope: !1327)
!1344 = !DILocalVariable(name: "enc", arg: 8, scope: !1327, file: !3, line: 197, type: !43)
!1345 = !DILocation(line: 197, column: 49, scope: !1327)
!1346 = !DILocalVariable(name: "tin0", scope: !1327, file: !3, line: 199, type: !7)
!1347 = !DILocation(line: 199, column: 23, scope: !1327)
!1348 = !DILocalVariable(name: "tin1", scope: !1327, file: !3, line: 199, type: !7)
!1349 = !DILocation(line: 199, column: 29, scope: !1327)
!1350 = !DILocalVariable(name: "tout0", scope: !1327, file: !3, line: 200, type: !7)
!1351 = !DILocation(line: 200, column: 23, scope: !1327)
!1352 = !DILocalVariable(name: "tout1", scope: !1327, file: !3, line: 200, type: !7)
!1353 = !DILocation(line: 200, column: 30, scope: !1327)
!1354 = !DILocalVariable(name: "xor0", scope: !1327, file: !3, line: 200, type: !7)
!1355 = !DILocation(line: 200, column: 37, scope: !1327)
!1356 = !DILocalVariable(name: "xor1", scope: !1327, file: !3, line: 200, type: !7)
!1357 = !DILocation(line: 200, column: 43, scope: !1327)
!1358 = !DILocalVariable(name: "in", scope: !1327, file: !3, line: 201, type: !675)
!1359 = !DILocation(line: 201, column: 35, scope: !1327)
!1360 = !DILocalVariable(name: "out", scope: !1327, file: !3, line: 202, type: !677)
!1361 = !DILocation(line: 202, column: 20, scope: !1327)
!1362 = !DILocalVariable(name: "l", scope: !1327, file: !3, line: 203, type: !678)
!1363 = !DILocation(line: 203, column: 19, scope: !1327)
!1364 = !DILocation(line: 203, column: 23, scope: !1327)
!1365 = !DILocalVariable(name: "tin", scope: !1327, file: !3, line: 204, type: !38)
!1366 = !DILocation(line: 204, column: 14, scope: !1327)
!1367 = !DILocalVariable(name: "iv", scope: !1327, file: !3, line: 205, type: !677)
!1368 = !DILocation(line: 205, column: 20, scope: !1327)
!1369 = !DILocation(line: 207, column: 10, scope: !1327)
!1370 = !DILocation(line: 207, column: 8, scope: !1327)
!1371 = !DILocation(line: 208, column: 11, scope: !1327)
!1372 = !DILocation(line: 208, column: 9, scope: !1327)
!1373 = !DILocation(line: 209, column: 13, scope: !1327)
!1374 = !DILocation(line: 209, column: 11, scope: !1327)
!1375 = !DILocation(line: 209, column: 8, scope: !1327)
!1376 = !DILocation(line: 211, column: 9, scope: !1377)
!1377 = distinct !DILexicalBlock(scope: !1327, file: !3, line: 211, column: 9)
!1378 = !DILocation(line: 211, column: 9, scope: !1327)
!1379 = !DILocation(line: 212, column: 9, scope: !1380)
!1380 = distinct !DILexicalBlock(scope: !1377, file: !3, line: 211, column: 14)
!1381 = !DILocation(line: 213, column: 9, scope: !1380)
!1382 = !DILocation(line: 214, column: 16, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1380, file: !3, line: 214, column: 9)
!1384 = !DILocation(line: 214, column: 14, scope: !1383)
!1385 = !DILocation(line: 214, column: 22, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1383, file: !3, line: 214, column: 9)
!1387 = !DILocation(line: 214, column: 24, scope: !1386)
!1388 = !DILocation(line: 214, column: 9, scope: !1383)
!1389 = !DILocation(line: 215, column: 13, scope: !1390)
!1390 = distinct !DILexicalBlock(scope: !1386, file: !3, line: 214, column: 38)
!1391 = !DILocation(line: 216, column: 13, scope: !1390)
!1392 = !DILocation(line: 217, column: 21, scope: !1390)
!1393 = !DILocation(line: 217, column: 18, scope: !1390)
!1394 = !DILocation(line: 218, column: 21, scope: !1390)
!1395 = !DILocation(line: 218, column: 18, scope: !1390)
!1396 = !DILocation(line: 220, column: 22, scope: !1390)
!1397 = !DILocation(line: 220, column: 13, scope: !1390)
!1398 = !DILocation(line: 220, column: 20, scope: !1390)
!1399 = !DILocation(line: 221, column: 22, scope: !1390)
!1400 = !DILocation(line: 221, column: 13, scope: !1390)
!1401 = !DILocation(line: 221, column: 20, scope: !1390)
!1402 = !DILocation(line: 222, column: 38, scope: !1390)
!1403 = !DILocation(line: 222, column: 43, scope: !1390)
!1404 = !DILocation(line: 222, column: 48, scope: !1390)
!1405 = !DILocation(line: 222, column: 53, scope: !1390)
!1406 = !DILocation(line: 222, column: 13, scope: !1390)
!1407 = !DILocation(line: 223, column: 21, scope: !1390)
!1408 = !DILocation(line: 223, column: 19, scope: !1390)
!1409 = !DILocation(line: 224, column: 21, scope: !1390)
!1410 = !DILocation(line: 224, column: 19, scope: !1390)
!1411 = !DILocation(line: 226, column: 13, scope: !1390)
!1412 = !DILocation(line: 227, column: 13, scope: !1390)
!1413 = !DILocation(line: 228, column: 9, scope: !1390)
!1414 = !DILocation(line: 214, column: 32, scope: !1386)
!1415 = !DILocation(line: 214, column: 9, scope: !1386)
!1416 = distinct !{!1416, !1388, !1417}
!1417 = !DILocation(line: 228, column: 9, scope: !1383)
!1418 = !DILocation(line: 229, column: 13, scope: !1419)
!1419 = distinct !DILexicalBlock(scope: !1380, file: !3, line: 229, column: 13)
!1420 = !DILocation(line: 229, column: 15, scope: !1419)
!1421 = !DILocation(line: 229, column: 13, scope: !1380)
!1422 = !DILocation(line: 230, column: 13, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1424, file: !3, line: 230, column: 13)
!1424 = distinct !DILexicalBlock(scope: !1419, file: !3, line: 229, column: 22)
!1425 = !DILocation(line: 230, column: 13, scope: !1426)
!1426 = distinct !DILexicalBlock(scope: !1423, file: !3, line: 230, column: 13)
!1427 = !DILocation(line: 231, column: 21, scope: !1424)
!1428 = !DILocation(line: 231, column: 18, scope: !1424)
!1429 = !DILocation(line: 232, column: 21, scope: !1424)
!1430 = !DILocation(line: 232, column: 18, scope: !1424)
!1431 = !DILocation(line: 234, column: 22, scope: !1424)
!1432 = !DILocation(line: 234, column: 13, scope: !1424)
!1433 = !DILocation(line: 234, column: 20, scope: !1424)
!1434 = !DILocation(line: 235, column: 22, scope: !1424)
!1435 = !DILocation(line: 235, column: 13, scope: !1424)
!1436 = !DILocation(line: 235, column: 20, scope: !1424)
!1437 = !DILocation(line: 236, column: 38, scope: !1424)
!1438 = !DILocation(line: 236, column: 43, scope: !1424)
!1439 = !DILocation(line: 236, column: 48, scope: !1424)
!1440 = !DILocation(line: 236, column: 53, scope: !1424)
!1441 = !DILocation(line: 236, column: 13, scope: !1424)
!1442 = !DILocation(line: 237, column: 21, scope: !1424)
!1443 = !DILocation(line: 237, column: 19, scope: !1424)
!1444 = !DILocation(line: 238, column: 21, scope: !1424)
!1445 = !DILocation(line: 238, column: 19, scope: !1424)
!1446 = !DILocation(line: 240, column: 13, scope: !1424)
!1447 = !DILocation(line: 241, column: 13, scope: !1424)
!1448 = !DILocation(line: 242, column: 9, scope: !1424)
!1449 = !DILocation(line: 243, column: 17, scope: !1380)
!1450 = !DILocation(line: 243, column: 15, scope: !1380)
!1451 = !DILocation(line: 243, column: 12, scope: !1380)
!1452 = !DILocation(line: 244, column: 9, scope: !1380)
!1453 = !DILocation(line: 245, column: 9, scope: !1380)
!1454 = !DILocation(line: 246, column: 5, scope: !1380)
!1455 = !DILocalVariable(name: "t0", scope: !1456, file: !3, line: 247, type: !7)
!1456 = distinct !DILexicalBlock(scope: !1377, file: !3, line: 246, column: 12)
!1457 = !DILocation(line: 247, column: 27, scope: !1456)
!1458 = !DILocalVariable(name: "t1", scope: !1456, file: !3, line: 247, type: !7)
!1459 = !DILocation(line: 247, column: 31, scope: !1456)
!1460 = !DILocation(line: 249, column: 9, scope: !1456)
!1461 = !DILocation(line: 250, column: 9, scope: !1456)
!1462 = !DILocation(line: 251, column: 16, scope: !1463)
!1463 = distinct !DILexicalBlock(scope: !1456, file: !3, line: 251, column: 9)
!1464 = !DILocation(line: 251, column: 14, scope: !1463)
!1465 = !DILocation(line: 251, column: 22, scope: !1466)
!1466 = distinct !DILexicalBlock(scope: !1463, file: !3, line: 251, column: 9)
!1467 = !DILocation(line: 251, column: 24, scope: !1466)
!1468 = !DILocation(line: 251, column: 9, scope: !1463)
!1469 = !DILocation(line: 252, column: 13, scope: !1470)
!1470 = distinct !DILexicalBlock(scope: !1466, file: !3, line: 251, column: 38)
!1471 = !DILocation(line: 253, column: 13, scope: !1470)
!1472 = !DILocation(line: 255, column: 18, scope: !1470)
!1473 = !DILocation(line: 255, column: 16, scope: !1470)
!1474 = !DILocation(line: 256, column: 18, scope: !1470)
!1475 = !DILocation(line: 256, column: 16, scope: !1470)
!1476 = !DILocation(line: 258, column: 22, scope: !1470)
!1477 = !DILocation(line: 258, column: 13, scope: !1470)
!1478 = !DILocation(line: 258, column: 20, scope: !1470)
!1479 = !DILocation(line: 259, column: 22, scope: !1470)
!1480 = !DILocation(line: 259, column: 13, scope: !1470)
!1481 = !DILocation(line: 259, column: 20, scope: !1470)
!1482 = !DILocation(line: 260, column: 38, scope: !1470)
!1483 = !DILocation(line: 260, column: 43, scope: !1470)
!1484 = !DILocation(line: 260, column: 48, scope: !1470)
!1485 = !DILocation(line: 260, column: 53, scope: !1470)
!1486 = !DILocation(line: 260, column: 13, scope: !1470)
!1487 = !DILocation(line: 261, column: 21, scope: !1470)
!1488 = !DILocation(line: 261, column: 19, scope: !1470)
!1489 = !DILocation(line: 262, column: 21, scope: !1470)
!1490 = !DILocation(line: 262, column: 19, scope: !1470)
!1491 = !DILocation(line: 264, column: 22, scope: !1470)
!1492 = !DILocation(line: 264, column: 19, scope: !1470)
!1493 = !DILocation(line: 265, column: 22, scope: !1470)
!1494 = !DILocation(line: 265, column: 19, scope: !1470)
!1495 = !DILocation(line: 266, column: 13, scope: !1470)
!1496 = !DILocation(line: 267, column: 13, scope: !1470)
!1497 = !DILocation(line: 268, column: 20, scope: !1470)
!1498 = !DILocation(line: 268, column: 18, scope: !1470)
!1499 = !DILocation(line: 269, column: 20, scope: !1470)
!1500 = !DILocation(line: 269, column: 18, scope: !1470)
!1501 = !DILocation(line: 270, column: 9, scope: !1470)
!1502 = !DILocation(line: 251, column: 32, scope: !1466)
!1503 = !DILocation(line: 251, column: 9, scope: !1466)
!1504 = distinct !{!1504, !1468, !1505}
!1505 = !DILocation(line: 270, column: 9, scope: !1463)
!1506 = !DILocation(line: 271, column: 13, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1456, file: !3, line: 271, column: 13)
!1508 = !DILocation(line: 271, column: 15, scope: !1507)
!1509 = !DILocation(line: 271, column: 13, scope: !1456)
!1510 = !DILocation(line: 272, column: 13, scope: !1511)
!1511 = distinct !DILexicalBlock(scope: !1507, file: !3, line: 271, column: 22)
!1512 = !DILocation(line: 273, column: 13, scope: !1511)
!1513 = !DILocation(line: 275, column: 18, scope: !1511)
!1514 = !DILocation(line: 275, column: 16, scope: !1511)
!1515 = !DILocation(line: 276, column: 18, scope: !1511)
!1516 = !DILocation(line: 276, column: 16, scope: !1511)
!1517 = !DILocation(line: 278, column: 22, scope: !1511)
!1518 = !DILocation(line: 278, column: 13, scope: !1511)
!1519 = !DILocation(line: 278, column: 20, scope: !1511)
!1520 = !DILocation(line: 279, column: 22, scope: !1511)
!1521 = !DILocation(line: 279, column: 13, scope: !1511)
!1522 = !DILocation(line: 279, column: 20, scope: !1511)
!1523 = !DILocation(line: 280, column: 38, scope: !1511)
!1524 = !DILocation(line: 280, column: 43, scope: !1511)
!1525 = !DILocation(line: 280, column: 48, scope: !1511)
!1526 = !DILocation(line: 280, column: 53, scope: !1511)
!1527 = !DILocation(line: 280, column: 13, scope: !1511)
!1528 = !DILocation(line: 281, column: 21, scope: !1511)
!1529 = !DILocation(line: 281, column: 19, scope: !1511)
!1530 = !DILocation(line: 282, column: 21, scope: !1511)
!1531 = !DILocation(line: 282, column: 19, scope: !1511)
!1532 = !DILocation(line: 284, column: 22, scope: !1511)
!1533 = !DILocation(line: 284, column: 19, scope: !1511)
!1534 = !DILocation(line: 285, column: 22, scope: !1511)
!1535 = !DILocation(line: 285, column: 19, scope: !1511)
!1536 = !DILocation(line: 286, column: 13, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !1511, file: !3, line: 286, column: 13)
!1538 = !DILocation(line: 286, column: 13, scope: !1539)
!1539 = distinct !DILexicalBlock(scope: !1537, file: !3, line: 286, column: 13)
!1540 = !DILocation(line: 287, column: 20, scope: !1511)
!1541 = !DILocation(line: 287, column: 18, scope: !1511)
!1542 = !DILocation(line: 288, column: 20, scope: !1511)
!1543 = !DILocation(line: 288, column: 18, scope: !1511)
!1544 = !DILocation(line: 289, column: 9, scope: !1511)
!1545 = !DILocation(line: 291, column: 17, scope: !1456)
!1546 = !DILocation(line: 291, column: 15, scope: !1456)
!1547 = !DILocation(line: 291, column: 12, scope: !1456)
!1548 = !DILocation(line: 292, column: 9, scope: !1456)
!1549 = !DILocation(line: 293, column: 9, scope: !1456)
!1550 = !DILocation(line: 295, column: 47, scope: !1327)
!1551 = !DILocation(line: 295, column: 40, scope: !1327)
!1552 = !DILocation(line: 295, column: 33, scope: !1327)
!1553 = !DILocation(line: 295, column: 25, scope: !1327)
!1554 = !DILocation(line: 295, column: 17, scope: !1327)
!1555 = !DILocation(line: 295, column: 10, scope: !1327)
!1556 = !DILocation(line: 296, column: 14, scope: !1327)
!1557 = !DILocation(line: 296, column: 21, scope: !1327)
!1558 = !DILocation(line: 296, column: 5, scope: !1327)
!1559 = !DILocation(line: 296, column: 12, scope: !1327)
!1560 = !DILocation(line: 297, column: 1, scope: !1327)
!1561 = distinct !DISubprogram(name: "DES_ecb_encrypt", scope: !3, file: !3, line: 301, type: !1562, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{null, !1564, !679, !25, !43}
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_DES_cblock", file: !8, line: 29, baseType: !35)
!1566 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !1567)
!1567 = distinct !DILocation(line: 313, column: 5, scope: !1561)
!1568 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !1567)
!1569 = !DILocation(line: 14, column: 95, scope: !22, inlinedAt: !1567)
!1570 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !1567)
!1571 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !1567)
!1572 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !1567)
!1573 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !1567)
!1574 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !1567)
!1575 = !DILocation(line: 22, column: 5, scope: !66, inlinedAt: !1567)
!1576 = !DILocation(line: 31, column: 9, scope: !69, inlinedAt: !1567)
!1577 = !DILocation(line: 32, column: 9, scope: !76, inlinedAt: !1567)
!1578 = !DILocation(line: 40, column: 9, scope: !93, inlinedAt: !1567)
!1579 = !DILocation(line: 41, column: 9, scope: !99, inlinedAt: !1567)
!1580 = !DILocation(line: 42, column: 9, scope: !105, inlinedAt: !1567)
!1581 = !DILocation(line: 43, column: 9, scope: !111, inlinedAt: !1567)
!1582 = !DILocation(line: 44, column: 9, scope: !117, inlinedAt: !1567)
!1583 = !DILocation(line: 45, column: 9, scope: !123, inlinedAt: !1567)
!1584 = !DILocation(line: 46, column: 9, scope: !129, inlinedAt: !1567)
!1585 = !DILocation(line: 47, column: 9, scope: !135, inlinedAt: !1567)
!1586 = !DILocation(line: 48, column: 9, scope: !141, inlinedAt: !1567)
!1587 = !DILocation(line: 49, column: 9, scope: !147, inlinedAt: !1567)
!1588 = !DILocation(line: 50, column: 9, scope: !153, inlinedAt: !1567)
!1589 = !DILocation(line: 51, column: 9, scope: !159, inlinedAt: !1567)
!1590 = !DILocation(line: 52, column: 9, scope: !165, inlinedAt: !1567)
!1591 = !DILocation(line: 53, column: 9, scope: !171, inlinedAt: !1567)
!1592 = !DILocation(line: 54, column: 9, scope: !177, inlinedAt: !1567)
!1593 = !DILocation(line: 55, column: 9, scope: !183, inlinedAt: !1567)
!1594 = !DILocation(line: 57, column: 9, scope: !191, inlinedAt: !1567)
!1595 = !DILocation(line: 58, column: 9, scope: !197, inlinedAt: !1567)
!1596 = !DILocation(line: 59, column: 9, scope: !203, inlinedAt: !1567)
!1597 = !DILocation(line: 60, column: 9, scope: !209, inlinedAt: !1567)
!1598 = !DILocation(line: 61, column: 9, scope: !215, inlinedAt: !1567)
!1599 = !DILocation(line: 62, column: 9, scope: !221, inlinedAt: !1567)
!1600 = !DILocation(line: 63, column: 9, scope: !227, inlinedAt: !1567)
!1601 = !DILocation(line: 64, column: 9, scope: !233, inlinedAt: !1567)
!1602 = !DILocation(line: 65, column: 9, scope: !239, inlinedAt: !1567)
!1603 = !DILocation(line: 66, column: 9, scope: !245, inlinedAt: !1567)
!1604 = !DILocation(line: 67, column: 9, scope: !251, inlinedAt: !1567)
!1605 = !DILocation(line: 68, column: 9, scope: !257, inlinedAt: !1567)
!1606 = !DILocation(line: 69, column: 9, scope: !263, inlinedAt: !1567)
!1607 = !DILocation(line: 70, column: 9, scope: !269, inlinedAt: !1567)
!1608 = !DILocation(line: 71, column: 9, scope: !275, inlinedAt: !1567)
!1609 = !DILocation(line: 72, column: 9, scope: !281, inlinedAt: !1567)
!1610 = !DILocation(line: 76, column: 9, scope: !285, inlinedAt: !1567)
!1611 = !DILocation(line: 77, column: 9, scope: !292, inlinedAt: !1567)
!1612 = !DILocation(line: 79, column: 5, scope: !299, inlinedAt: !1567)
!1613 = !DILocalVariable(name: "input", arg: 1, scope: !1561, file: !3, line: 301, type: !1564)
!1614 = !DILocation(line: 301, column: 40, scope: !1561)
!1615 = !DILocalVariable(name: "output", arg: 2, scope: !1561, file: !3, line: 301, type: !679)
!1616 = !DILocation(line: 301, column: 59, scope: !1561)
!1617 = !DILocalVariable(name: "ks", arg: 3, scope: !1561, file: !3, line: 302, type: !25)
!1618 = !DILocation(line: 302, column: 40, scope: !1561)
!1619 = !DILocalVariable(name: "enc", arg: 4, scope: !1561, file: !3, line: 302, type: !43)
!1620 = !DILocation(line: 302, column: 82, scope: !1561)
!1621 = !DILocalVariable(name: "l", scope: !1561, file: !3, line: 304, type: !7)
!1622 = !DILocation(line: 304, column: 23, scope: !1561)
!1623 = !DILocalVariable(name: "ll", scope: !1561, file: !3, line: 305, type: !38)
!1624 = !DILocation(line: 305, column: 14, scope: !1561)
!1625 = !DILocalVariable(name: "in", scope: !1561, file: !3, line: 306, type: !675)
!1626 = !DILocation(line: 306, column: 26, scope: !1561)
!1627 = !DILocation(line: 306, column: 34, scope: !1561)
!1628 = !DILocation(line: 306, column: 32, scope: !1561)
!1629 = !DILocalVariable(name: "out", scope: !1561, file: !3, line: 307, type: !677)
!1630 = !DILocation(line: 307, column: 20, scope: !1561)
!1631 = !DILocation(line: 307, column: 29, scope: !1561)
!1632 = !DILocation(line: 307, column: 27, scope: !1561)
!1633 = !DILocation(line: 309, column: 5, scope: !1561)
!1634 = !DILocation(line: 310, column: 13, scope: !1561)
!1635 = !DILocation(line: 310, column: 5, scope: !1561)
!1636 = !DILocation(line: 310, column: 11, scope: !1561)
!1637 = !DILocation(line: 311, column: 5, scope: !1561)
!1638 = !DILocation(line: 312, column: 13, scope: !1561)
!1639 = !DILocation(line: 312, column: 5, scope: !1561)
!1640 = !DILocation(line: 312, column: 11, scope: !1561)
!1641 = !DILocation(line: 313, column: 18, scope: !1561)
!1642 = !DILocation(line: 313, column: 22, scope: !1561)
!1643 = !DILocation(line: 313, column: 26, scope: !1561)
!1644 = !DILocation(line: 17, column: 5, scope: !22, inlinedAt: !1567)
!1645 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !1567)
!1646 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !1567)
!1647 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !1567)
!1648 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !1567)
!1649 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !1567)
!1650 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !1567)
!1651 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !1567)
!1652 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !1567)
!1653 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !1567)
!1654 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !1567)
!1655 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !1567)
!1656 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !1567)
!1657 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !1567)
!1658 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !1567)
!1659 = !DILocation(line: 39, column: 9, scope: !87, inlinedAt: !1567)
!1660 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !1567)
!1661 = !DILocation(line: 40, column: 9, scope: !90, inlinedAt: !1567)
!1662 = !DILocation(line: 41, column: 9, scope: !97, inlinedAt: !1567)
!1663 = !DILocation(line: 42, column: 9, scope: !103, inlinedAt: !1567)
!1664 = !DILocation(line: 43, column: 9, scope: !109, inlinedAt: !1567)
!1665 = !DILocation(line: 44, column: 9, scope: !115, inlinedAt: !1567)
!1666 = !DILocation(line: 45, column: 9, scope: !121, inlinedAt: !1567)
!1667 = !DILocation(line: 46, column: 9, scope: !127, inlinedAt: !1567)
!1668 = !DILocation(line: 47, column: 9, scope: !133, inlinedAt: !1567)
!1669 = !DILocation(line: 48, column: 9, scope: !139, inlinedAt: !1567)
!1670 = !DILocation(line: 49, column: 9, scope: !145, inlinedAt: !1567)
!1671 = !DILocation(line: 50, column: 9, scope: !151, inlinedAt: !1567)
!1672 = !DILocation(line: 51, column: 9, scope: !157, inlinedAt: !1567)
!1673 = !DILocation(line: 52, column: 9, scope: !163, inlinedAt: !1567)
!1674 = !DILocation(line: 53, column: 9, scope: !169, inlinedAt: !1567)
!1675 = !DILocation(line: 54, column: 9, scope: !175, inlinedAt: !1567)
!1676 = !DILocation(line: 55, column: 9, scope: !181, inlinedAt: !1567)
!1677 = !DILocation(line: 56, column: 5, scope: !91, inlinedAt: !1567)
!1678 = !DILocation(line: 57, column: 9, scope: !188, inlinedAt: !1567)
!1679 = !DILocation(line: 58, column: 9, scope: !195, inlinedAt: !1567)
!1680 = !DILocation(line: 59, column: 9, scope: !201, inlinedAt: !1567)
!1681 = !DILocation(line: 60, column: 9, scope: !207, inlinedAt: !1567)
!1682 = !DILocation(line: 61, column: 9, scope: !213, inlinedAt: !1567)
!1683 = !DILocation(line: 62, column: 9, scope: !219, inlinedAt: !1567)
!1684 = !DILocation(line: 63, column: 9, scope: !225, inlinedAt: !1567)
!1685 = !DILocation(line: 64, column: 9, scope: !231, inlinedAt: !1567)
!1686 = !DILocation(line: 65, column: 9, scope: !237, inlinedAt: !1567)
!1687 = !DILocation(line: 66, column: 9, scope: !243, inlinedAt: !1567)
!1688 = !DILocation(line: 67, column: 9, scope: !249, inlinedAt: !1567)
!1689 = !DILocation(line: 68, column: 9, scope: !255, inlinedAt: !1567)
!1690 = !DILocation(line: 69, column: 9, scope: !261, inlinedAt: !1567)
!1691 = !DILocation(line: 70, column: 9, scope: !267, inlinedAt: !1567)
!1692 = !DILocation(line: 71, column: 9, scope: !273, inlinedAt: !1567)
!1693 = !DILocation(line: 72, column: 9, scope: !279, inlinedAt: !1567)
!1694 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !1567)
!1695 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !1567)
!1696 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !1567)
!1697 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !1567)
!1698 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !1567)
!1699 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !1567)
!1700 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !1567)
!1701 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !1567)
!1702 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !1567)
!1703 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !1567)
!1704 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !1567)
!1705 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !1567)
!1706 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !1567)
!1707 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !1567)
!1708 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !1567)
!1709 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !1567)
!1710 = !DILocation(line: 314, column: 9, scope: !1561)
!1711 = !DILocation(line: 314, column: 7, scope: !1561)
!1712 = !DILocation(line: 315, column: 5, scope: !1561)
!1713 = !DILocation(line: 316, column: 9, scope: !1561)
!1714 = !DILocation(line: 316, column: 7, scope: !1561)
!1715 = !DILocation(line: 317, column: 5, scope: !1561)
!1716 = !DILocation(line: 318, column: 17, scope: !1561)
!1717 = !DILocation(line: 318, column: 23, scope: !1561)
!1718 = !DILocation(line: 318, column: 9, scope: !1561)
!1719 = !DILocation(line: 318, column: 15, scope: !1561)
!1720 = !DILocation(line: 318, column: 7, scope: !1561)
!1721 = !DILocation(line: 319, column: 1, scope: !1561)
!1722 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 321, type: !1723, scopeLine: 322, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{!43}
!1725 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !1726)
!1726 = distinct !DILocation(line: 313, column: 5, scope: !1561, inlinedAt: !1727)
!1727 = distinct !DILocation(line: 349, column: 7, scope: !1728)
!1728 = distinct !DILexicalBlock(scope: !1722, file: !3, line: 346, column: 18)
!1729 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !1726)
!1730 = !DILocation(line: 14, column: 95, scope: !22, inlinedAt: !1726)
!1731 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !1726)
!1732 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !1726)
!1733 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !1726)
!1734 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !1726)
!1735 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !1726)
!1736 = !DILocation(line: 22, column: 5, scope: !66, inlinedAt: !1726)
!1737 = !DILocation(line: 31, column: 9, scope: !69, inlinedAt: !1726)
!1738 = !DILocation(line: 32, column: 9, scope: !76, inlinedAt: !1726)
!1739 = !DILocation(line: 40, column: 9, scope: !93, inlinedAt: !1726)
!1740 = !DILocation(line: 41, column: 9, scope: !99, inlinedAt: !1726)
!1741 = !DILocation(line: 42, column: 9, scope: !105, inlinedAt: !1726)
!1742 = !DILocation(line: 43, column: 9, scope: !111, inlinedAt: !1726)
!1743 = !DILocation(line: 44, column: 9, scope: !117, inlinedAt: !1726)
!1744 = !DILocation(line: 45, column: 9, scope: !123, inlinedAt: !1726)
!1745 = !DILocation(line: 46, column: 9, scope: !129, inlinedAt: !1726)
!1746 = !DILocation(line: 47, column: 9, scope: !135, inlinedAt: !1726)
!1747 = !DILocation(line: 48, column: 9, scope: !141, inlinedAt: !1726)
!1748 = !DILocation(line: 49, column: 9, scope: !147, inlinedAt: !1726)
!1749 = !DILocation(line: 50, column: 9, scope: !153, inlinedAt: !1726)
!1750 = !DILocation(line: 51, column: 9, scope: !159, inlinedAt: !1726)
!1751 = !DILocation(line: 52, column: 9, scope: !165, inlinedAt: !1726)
!1752 = !DILocation(line: 53, column: 9, scope: !171, inlinedAt: !1726)
!1753 = !DILocation(line: 54, column: 9, scope: !177, inlinedAt: !1726)
!1754 = !DILocation(line: 55, column: 9, scope: !183, inlinedAt: !1726)
!1755 = !DILocation(line: 57, column: 9, scope: !191, inlinedAt: !1726)
!1756 = !DILocation(line: 58, column: 9, scope: !197, inlinedAt: !1726)
!1757 = !DILocation(line: 59, column: 9, scope: !203, inlinedAt: !1726)
!1758 = !DILocation(line: 60, column: 9, scope: !209, inlinedAt: !1726)
!1759 = !DILocation(line: 61, column: 9, scope: !215, inlinedAt: !1726)
!1760 = !DILocation(line: 62, column: 9, scope: !221, inlinedAt: !1726)
!1761 = !DILocation(line: 63, column: 9, scope: !227, inlinedAt: !1726)
!1762 = !DILocation(line: 64, column: 9, scope: !233, inlinedAt: !1726)
!1763 = !DILocation(line: 65, column: 9, scope: !239, inlinedAt: !1726)
!1764 = !DILocation(line: 66, column: 9, scope: !245, inlinedAt: !1726)
!1765 = !DILocation(line: 67, column: 9, scope: !251, inlinedAt: !1726)
!1766 = !DILocation(line: 68, column: 9, scope: !257, inlinedAt: !1726)
!1767 = !DILocation(line: 69, column: 9, scope: !263, inlinedAt: !1726)
!1768 = !DILocation(line: 70, column: 9, scope: !269, inlinedAt: !1726)
!1769 = !DILocation(line: 71, column: 9, scope: !275, inlinedAt: !1726)
!1770 = !DILocation(line: 72, column: 9, scope: !281, inlinedAt: !1726)
!1771 = !DILocation(line: 76, column: 9, scope: !285, inlinedAt: !1726)
!1772 = !DILocation(line: 77, column: 9, scope: !292, inlinedAt: !1726)
!1773 = !DILocation(line: 79, column: 5, scope: !299, inlinedAt: !1726)
!1774 = !DILocation(line: 301, column: 40, scope: !1561, inlinedAt: !1727)
!1775 = !DILocation(line: 301, column: 59, scope: !1561, inlinedAt: !1727)
!1776 = !DILocation(line: 302, column: 40, scope: !1561, inlinedAt: !1727)
!1777 = !DILocation(line: 302, column: 82, scope: !1561, inlinedAt: !1727)
!1778 = !DILocation(line: 304, column: 23, scope: !1561, inlinedAt: !1727)
!1779 = !DILocation(line: 305, column: 14, scope: !1561, inlinedAt: !1727)
!1780 = !DILocation(line: 306, column: 26, scope: !1561, inlinedAt: !1727)
!1781 = !DILocation(line: 307, column: 20, scope: !1561, inlinedAt: !1727)
!1782 = !DILocalVariable(name: "buf", scope: !1722, file: !3, line: 323, type: !1565)
!1783 = !DILocation(line: 323, column: 22, scope: !1722)
!1784 = !DILocalVariable(name: "key", scope: !1722, file: !3, line: 324, type: !1565)
!1785 = !DILocation(line: 324, column: 22, scope: !1722)
!1786 = !DILocalVariable(name: "output", scope: !1722, file: !3, line: 325, type: !34)
!1787 = !DILocation(line: 325, column: 16, scope: !1722)
!1788 = !DILocalVariable(name: "ks", scope: !1722, file: !3, line: 326, type: !26)
!1789 = !DILocation(line: 326, column: 22, scope: !1722)
!1790 = !DILocation(line: 327, column: 5, scope: !1722)
!1791 = !DILocalVariable(name: "charset", scope: !1722, file: !3, line: 329, type: !1792)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1793, size: 752, elements: !1795)
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!1794 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1795 = !{!1796}
!1796 = !DISubrange(count: 94)
!1797 = !DILocation(line: 329, column: 16, scope: !1722)
!1798 = !DILocalVariable(name: "length", scope: !1722, file: !3, line: 330, type: !1799)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1800, line: 46, baseType: !1801)
!1800 = !DIFile(filename: "Tools/llvm-10.0.0/build/lib/clang/10.0.0/include/stddef.h", directory: "/home/phil")
!1801 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1802 = !DILocation(line: 330, column: 12, scope: !1722)
!1803 = !DILocalVariable(name: "size", scope: !1722, file: !3, line: 331, type: !43)
!1804 = !DILocation(line: 331, column: 9, scope: !1722)
!1805 = !DILocalVariable(name: "round", scope: !1722, file: !3, line: 332, type: !1799)
!1806 = !DILocation(line: 332, column: 12, scope: !1722)
!1807 = !DILocalVariable(name: "i", scope: !1722, file: !3, line: 333, type: !43)
!1808 = !DILocation(line: 333, column: 9, scope: !1722)
!1809 = !DILocalVariable(name: "buff", scope: !1722, file: !3, line: 334, type: !1810)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1811 = !DILocation(line: 334, column: 11, scope: !1722)
!1812 = !DILocation(line: 334, column: 18, scope: !1722)
!1813 = !DILocation(line: 335, column: 12, scope: !1814)
!1814 = distinct !DILexicalBlock(scope: !1722, file: !3, line: 335, column: 5)
!1815 = !DILocation(line: 335, column: 10, scope: !1814)
!1816 = !DILocation(line: 335, column: 17, scope: !1817)
!1817 = distinct !DILexicalBlock(scope: !1814, file: !3, line: 335, column: 5)
!1818 = !DILocation(line: 335, column: 19, scope: !1817)
!1819 = !DILocation(line: 335, column: 5, scope: !1814)
!1820 = !DILocalVariable(name: "key", scope: !1821, file: !3, line: 336, type: !43)
!1821 = distinct !DILexicalBlock(scope: !1817, file: !3, line: 335, column: 35)
!1822 = !DILocation(line: 336, column: 11, scope: !1821)
!1823 = !DILocation(line: 336, column: 17, scope: !1821)
!1824 = !DILocation(line: 336, column: 26, scope: !1821)
!1825 = !DILocation(line: 336, column: 24, scope: !1821)
!1826 = !DILocation(line: 337, column: 25, scope: !1821)
!1827 = !DILocation(line: 337, column: 17, scope: !1821)
!1828 = !DILocation(line: 337, column: 7, scope: !1821)
!1829 = !DILocation(line: 337, column: 12, scope: !1821)
!1830 = !DILocation(line: 337, column: 15, scope: !1821)
!1831 = !DILocation(line: 338, column: 5, scope: !1821)
!1832 = !DILocation(line: 335, column: 28, scope: !1817)
!1833 = !DILocation(line: 335, column: 5, scope: !1817)
!1834 = distinct !{!1834, !1819, !1835}
!1835 = !DILocation(line: 338, column: 5, scope: !1814)
!1836 = !DILocalVariable(name: "input", scope: !1722, file: !3, line: 340, type: !1810)
!1837 = !DILocation(line: 340, column: 11, scope: !1722)
!1838 = !DILocation(line: 340, column: 41, scope: !1722)
!1839 = !DILocation(line: 340, column: 39, scope: !1722)
!1840 = !DILocation(line: 340, column: 48, scope: !1722)
!1841 = !DILocation(line: 340, column: 46, scope: !1722)
!1842 = !DILocation(line: 340, column: 19, scope: !1722)
!1843 = !DILocalVariable(name: "n", scope: !1844, file: !3, line: 341, type: !1799)
!1844 = distinct !DILexicalBlock(scope: !1722, file: !3, line: 341, column: 5)
!1845 = !DILocation(line: 341, column: 17, scope: !1844)
!1846 = !DILocation(line: 341, column: 10, scope: !1844)
!1847 = !DILocation(line: 341, column: 24, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1844, file: !3, line: 341, column: 5)
!1849 = !DILocation(line: 341, column: 28, scope: !1848)
!1850 = !DILocation(line: 341, column: 35, scope: !1848)
!1851 = !DILocation(line: 341, column: 33, scope: !1848)
!1852 = !DILocation(line: 341, column: 26, scope: !1848)
!1853 = !DILocation(line: 341, column: 5, scope: !1844)
!1854 = !DILocalVariable(name: "key", scope: !1855, file: !3, line: 342, type: !43)
!1855 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 341, column: 47)
!1856 = !DILocation(line: 342, column: 13, scope: !1855)
!1857 = !DILocation(line: 342, column: 19, scope: !1855)
!1858 = !DILocation(line: 342, column: 28, scope: !1855)
!1859 = !DILocation(line: 342, column: 26, scope: !1855)
!1860 = !DILocation(line: 343, column: 28, scope: !1855)
!1861 = !DILocation(line: 343, column: 20, scope: !1855)
!1862 = !DILocation(line: 343, column: 9, scope: !1855)
!1863 = !DILocation(line: 343, column: 15, scope: !1855)
!1864 = !DILocation(line: 343, column: 18, scope: !1855)
!1865 = !DILocation(line: 344, column: 5, scope: !1855)
!1866 = !DILocation(line: 341, column: 43, scope: !1848)
!1867 = !DILocation(line: 341, column: 5, scope: !1848)
!1868 = distinct !{!1868, !1853, !1869}
!1869 = !DILocation(line: 344, column: 5, scope: !1844)
!1870 = !DILocation(line: 346, column: 5, scope: !1722)
!1871 = !DILocation(line: 346, column: 11, scope: !1722)
!1872 = !DILocation(line: 348, column: 15, scope: !1728)
!1873 = !DILocation(line: 348, column: 20, scope: !1728)
!1874 = !DILocation(line: 348, column: 27, scope: !1728)
!1875 = !DILocation(line: 348, column: 32, scope: !1728)
!1876 = !DILocation(line: 348, column: 36, scope: !1728)
!1877 = !DILocation(line: 348, column: 35, scope: !1728)
!1878 = !DILocation(line: 348, column: 25, scope: !1728)
!1879 = !DILocation(line: 348, column: 42, scope: !1728)
!1880 = !DILocation(line: 348, column: 7, scope: !1728)
!1881 = !DILocation(line: 306, column: 34, scope: !1561, inlinedAt: !1727)
!1882 = !DILocation(line: 306, column: 32, scope: !1561, inlinedAt: !1727)
!1883 = !DILocation(line: 307, column: 29, scope: !1561, inlinedAt: !1727)
!1884 = !DILocation(line: 307, column: 27, scope: !1561, inlinedAt: !1727)
!1885 = !DILocation(line: 309, column: 5, scope: !1561, inlinedAt: !1727)
!1886 = !DILocation(line: 310, column: 13, scope: !1561, inlinedAt: !1727)
!1887 = !DILocation(line: 310, column: 5, scope: !1561, inlinedAt: !1727)
!1888 = !DILocation(line: 310, column: 11, scope: !1561, inlinedAt: !1727)
!1889 = !DILocation(line: 311, column: 5, scope: !1561, inlinedAt: !1727)
!1890 = !DILocation(line: 312, column: 13, scope: !1561, inlinedAt: !1727)
!1891 = !DILocation(line: 312, column: 5, scope: !1561, inlinedAt: !1727)
!1892 = !DILocation(line: 312, column: 11, scope: !1561, inlinedAt: !1727)
!1893 = !DILocation(line: 313, column: 18, scope: !1561, inlinedAt: !1727)
!1894 = !DILocation(line: 313, column: 22, scope: !1561, inlinedAt: !1727)
!1895 = !DILocation(line: 313, column: 26, scope: !1561, inlinedAt: !1727)
!1896 = !DILocation(line: 17, column: 5, scope: !22, inlinedAt: !1726)
!1897 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !1726)
!1898 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !1726)
!1899 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !1726)
!1900 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !1726)
!1901 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !1726)
!1902 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !1726)
!1903 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !1726)
!1904 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !1726)
!1905 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !1726)
!1906 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !1726)
!1907 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !1726)
!1908 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !1726)
!1909 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !1726)
!1910 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !1726)
!1911 = !DILocation(line: 39, column: 9, scope: !87, inlinedAt: !1726)
!1912 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !1726)
!1913 = !DILocation(line: 40, column: 9, scope: !90, inlinedAt: !1726)
!1914 = !DILocation(line: 41, column: 9, scope: !97, inlinedAt: !1726)
!1915 = !DILocation(line: 42, column: 9, scope: !103, inlinedAt: !1726)
!1916 = !DILocation(line: 43, column: 9, scope: !109, inlinedAt: !1726)
!1917 = !DILocation(line: 44, column: 9, scope: !115, inlinedAt: !1726)
!1918 = !DILocation(line: 45, column: 9, scope: !121, inlinedAt: !1726)
!1919 = !DILocation(line: 46, column: 9, scope: !127, inlinedAt: !1726)
!1920 = !DILocation(line: 47, column: 9, scope: !133, inlinedAt: !1726)
!1921 = !DILocation(line: 48, column: 9, scope: !139, inlinedAt: !1726)
!1922 = !DILocation(line: 49, column: 9, scope: !145, inlinedAt: !1726)
!1923 = !DILocation(line: 50, column: 9, scope: !151, inlinedAt: !1726)
!1924 = !DILocation(line: 51, column: 9, scope: !157, inlinedAt: !1726)
!1925 = !DILocation(line: 52, column: 9, scope: !163, inlinedAt: !1726)
!1926 = !DILocation(line: 53, column: 9, scope: !169, inlinedAt: !1726)
!1927 = !DILocation(line: 54, column: 9, scope: !175, inlinedAt: !1726)
!1928 = !DILocation(line: 55, column: 9, scope: !181, inlinedAt: !1726)
!1929 = !DILocation(line: 56, column: 5, scope: !91, inlinedAt: !1726)
!1930 = !DILocation(line: 57, column: 9, scope: !188, inlinedAt: !1726)
!1931 = !DILocation(line: 58, column: 9, scope: !195, inlinedAt: !1726)
!1932 = !DILocation(line: 59, column: 9, scope: !201, inlinedAt: !1726)
!1933 = !DILocation(line: 60, column: 9, scope: !207, inlinedAt: !1726)
!1934 = !DILocation(line: 61, column: 9, scope: !213, inlinedAt: !1726)
!1935 = !DILocation(line: 62, column: 9, scope: !219, inlinedAt: !1726)
!1936 = !DILocation(line: 63, column: 9, scope: !225, inlinedAt: !1726)
!1937 = !DILocation(line: 64, column: 9, scope: !231, inlinedAt: !1726)
!1938 = !DILocation(line: 65, column: 9, scope: !237, inlinedAt: !1726)
!1939 = !DILocation(line: 66, column: 9, scope: !243, inlinedAt: !1726)
!1940 = !DILocation(line: 67, column: 9, scope: !249, inlinedAt: !1726)
!1941 = !DILocation(line: 68, column: 9, scope: !255, inlinedAt: !1726)
!1942 = !DILocation(line: 69, column: 9, scope: !261, inlinedAt: !1726)
!1943 = !DILocation(line: 70, column: 9, scope: !267, inlinedAt: !1726)
!1944 = !DILocation(line: 71, column: 9, scope: !273, inlinedAt: !1726)
!1945 = !DILocation(line: 72, column: 9, scope: !279, inlinedAt: !1726)
!1946 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !1726)
!1947 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !1726)
!1948 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !1726)
!1949 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !1726)
!1950 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !1726)
!1951 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !1726)
!1952 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !1726)
!1953 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !1726)
!1954 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !1726)
!1955 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !1726)
!1956 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !1726)
!1957 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !1726)
!1958 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !1726)
!1959 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !1726)
!1960 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !1726)
!1961 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !1726)
!1962 = !DILocation(line: 314, column: 9, scope: !1561, inlinedAt: !1727)
!1963 = !DILocation(line: 314, column: 7, scope: !1561, inlinedAt: !1727)
!1964 = !DILocation(line: 315, column: 5, scope: !1561, inlinedAt: !1727)
!1965 = !DILocation(line: 316, column: 9, scope: !1561, inlinedAt: !1727)
!1966 = !DILocation(line: 316, column: 7, scope: !1561, inlinedAt: !1727)
!1967 = !DILocation(line: 317, column: 5, scope: !1561, inlinedAt: !1727)
!1968 = !DILocation(line: 318, column: 17, scope: !1561, inlinedAt: !1727)
!1969 = !DILocation(line: 318, column: 23, scope: !1561, inlinedAt: !1727)
!1970 = !DILocation(line: 318, column: 9, scope: !1561, inlinedAt: !1727)
!1971 = !DILocation(line: 318, column: 15, scope: !1561, inlinedAt: !1727)
!1972 = !DILocation(line: 318, column: 7, scope: !1561, inlinedAt: !1727)
!1973 = !DILocation(line: 351, column: 12, scope: !1728)
!1974 = distinct !{!1974, !1870, !1975}
!1975 = !DILocation(line: 352, column: 5, scope: !1722)
!1976 = !DILocation(line: 355, column: 1, scope: !1722)
