; ModuleID = 'bc/Cipher/des_ecb-trace_instru.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.DES_ks = type { [16 x %union.anon] }
%union.anon = type { [2 x i32] }

@DES_SPtrans = dso_local constant [8 x [64 x i32]] [[64 x i32] [i32 34080768, i32 524288, i32 33554434, i32 34080770, i32 33554432, i32 526338, i32 524290, i32 33554434, i32 526338, i32 34080768, i32 34078720, i32 2050, i32 33556482, i32 33554432, i32 0, i32 524290, i32 524288, i32 2, i32 33556480, i32 526336, i32 34080770, i32 34078720, i32 2050, i32 33556480, i32 2, i32 2048, i32 526336, i32 34078722, i32 2048, i32 33556482, i32 34078722, i32 0, i32 0, i32 34080770, i32 33556480, i32 524290, i32 34080768, i32 524288, i32 2050, i32 33556480, i32 34078722, i32 2048, i32 526336, i32 33554434, i32 526338, i32 2, i32 33554434, i32 34078720, i32 34080770, i32 526336, i32 34078720, i32 33556482, i32 33554432, i32 2050, i32 524290, i32 0, i32 524288, i32 33554432, i32 33556482, i32 34080768, i32 2, i32 34078722, i32 2048, i32 526338], [64 x i32] [i32 1074823184, i32 0, i32 1081344, i32 1074790400, i32 1073741840, i32 32784, i32 1073774592, i32 1081344, i32 32768, i32 1074790416, i32 16, i32 1073774592, i32 1048592, i32 1074823168, i32 1074790400, i32 16, i32 1048576, i32 1073774608, i32 1074790416, i32 32768, i32 1081360, i32 1073741824, i32 0, i32 1048592, i32 1073774608, i32 1081360, i32 1074823168, i32 1073741840, i32 1073741824, i32 1048576, i32 32784, i32 1074823184, i32 1048592, i32 1074823168, i32 1073774592, i32 1081360, i32 1074823184, i32 1048592, i32 1073741840, i32 0, i32 1073741824, i32 32784, i32 1048576, i32 1074790416, i32 32768, i32 1073741824, i32 1081360, i32 1073774608, i32 1074823168, i32 32768, i32 0, i32 1073741840, i32 16, i32 1074823184, i32 1081344, i32 1074790400, i32 1074790416, i32 1048576, i32 32784, i32 1073774592, i32 1073774608, i32 16, i32 1074790400, i32 1081344], [64 x i32] [i32 67108865, i32 67371264, i32 256, i32 67109121, i32 262145, i32 67108864, i32 67109121, i32 262400, i32 67109120, i32 262144, i32 67371008, i32 1, i32 67371265, i32 257, i32 1, i32 67371009, i32 0, i32 262145, i32 67371264, i32 256, i32 257, i32 67371265, i32 262144, i32 67108865, i32 67371009, i32 67109120, i32 262401, i32 67371008, i32 262400, i32 0, i32 67108864, i32 262401, i32 67371264, i32 256, i32 1, i32 262144, i32 257, i32 262145, i32 67371008, i32 67109121, i32 0, i32 67371264, i32 262400, i32 67371009, i32 262145, i32 67108864, i32 67371265, i32 1, i32 262401, i32 67108865, i32 67108864, i32 67371265, i32 262144, i32 67109120, i32 67109121, i32 262400, i32 67109120, i32 0, i32 67371009, i32 257, i32 67108865, i32 262401, i32 256, i32 67371008], [64 x i32] [i32 4198408, i32 268439552, i32 8, i32 272633864, i32 0, i32 272629760, i32 268439560, i32 4194312, i32 272633856, i32 268435464, i32 268435456, i32 4104, i32 268435464, i32 4198408, i32 4194304, i32 268435456, i32 272629768, i32 4198400, i32 4096, i32 8, i32 4198400, i32 268439560, i32 272629760, i32 4096, i32 4104, i32 0, i32 4194312, i32 272633856, i32 268439552, i32 272629768, i32 272633864, i32 4194304, i32 272629768, i32 4104, i32 4194304, i32 268435464, i32 4198400, i32 268439552, i32 8, i32 272629760, i32 268439560, i32 0, i32 4096, i32 4194312, i32 0, i32 272629768, i32 272633856, i32 4096, i32 268435456, i32 272633864, i32 4198408, i32 4194304, i32 272633864, i32 8, i32 268439552, i32 4198408, i32 4194312, i32 4198400, i32 272629760, i32 268439560, i32 4104, i32 268435456, i32 268435464, i32 272633856], [64 x i32] [i32 134217728, i32 65536, i32 1024, i32 134284320, i32 134283296, i32 134218752, i32 66592, i32 134283264, i32 65536, i32 32, i32 134217760, i32 66560, i32 134218784, i32 134283296, i32 134284288, i32 0, i32 66560, i32 134217728, i32 65568, i32 1056, i32 134218752, i32 66592, i32 0, i32 134217760, i32 32, i32 134218784, i32 134284320, i32 65568, i32 134283264, i32 1024, i32 1056, i32 134284288, i32 134284288, i32 134218784, i32 65568, i32 134283264, i32 65536, i32 32, i32 134217760, i32 134218752, i32 134217728, i32 66560, i32 134284320, i32 0, i32 66592, i32 134217728, i32 1024, i32 65568, i32 134218784, i32 1024, i32 0, i32 134284320, i32 134283296, i32 134284288, i32 1056, i32 65536, i32 66560, i32 134283296, i32 134218752, i32 1056, i32 32, i32 66592, i32 134283264, i32 134217760], [64 x i32] [i32 -2147483584, i32 2097216, i32 0, i32 -2145378304, i32 2097216, i32 8192, i32 -2147475392, i32 2097152, i32 8256, i32 -2145378240, i32 2105344, i32 -2147483648, i32 -2147475456, i32 -2147483584, i32 -2145386496, i32 2105408, i32 2097152, i32 -2147475392, i32 -2145386432, i32 0, i32 8192, i32 64, i32 -2145378304, i32 -2145386432, i32 -2145378240, i32 -2145386496, i32 -2147483648, i32 8256, i32 64, i32 2105344, i32 2105408, i32 -2147475456, i32 8256, i32 -2147483648, i32 -2147475456, i32 2105408, i32 -2145378304, i32 2097216, i32 0, i32 -2147475456, i32 -2147483648, i32 8192, i32 -2145386432, i32 2097152, i32 2097216, i32 -2145378240, i32 2105344, i32 64, i32 -2145378240, i32 2105344, i32 2097152, i32 -2147475392, i32 -2147483584, i32 -2145386496, i32 2105408, i32 0, i32 8192, i32 -2147483584, i32 -2147475392, i32 -2145378304, i32 -2145386496, i32 8256, i32 64, i32 -2145386432], [64 x i32] [i32 16384, i32 512, i32 16777728, i32 16777220, i32 16794116, i32 16388, i32 16896, i32 0, i32 16777216, i32 16777732, i32 516, i32 16793600, i32 4, i32 16794112, i32 16793600, i32 516, i32 16777732, i32 16384, i32 16388, i32 16794116, i32 0, i32 16777728, i32 16777220, i32 16896, i32 16793604, i32 16900, i32 16794112, i32 4, i32 16900, i32 16793604, i32 512, i32 16777216, i32 16900, i32 16793600, i32 16793604, i32 516, i32 16384, i32 512, i32 16777216, i32 16793604, i32 16777732, i32 16900, i32 16896, i32 0, i32 512, i32 16777220, i32 4, i32 16777728, i32 0, i32 16777732, i32 16777728, i32 16896, i32 516, i32 16384, i32 16794116, i32 16777216, i32 16794112, i32 4, i32 16388, i32 16794116, i32 16777220, i32 16794112, i32 16793600, i32 16388], [64 x i32] [i32 545259648, i32 545390592, i32 131200, i32 0, i32 537001984, i32 8388736, i32 545259520, i32 545390720, i32 128, i32 536870912, i32 8519680, i32 131200, i32 8519808, i32 537002112, i32 536871040, i32 545259520, i32 131072, i32 8519808, i32 8388736, i32 537001984, i32 545390720, i32 536871040, i32 0, i32 8519680, i32 536870912, i32 8388608, i32 537002112, i32 545259648, i32 8388608, i32 131072, i32 545390592, i32 128, i32 8388608, i32 131072, i32 536871040, i32 545390720, i32 131200, i32 536870912, i32 0, i32 8519680, i32 545259648, i32 537002112, i32 537001984, i32 8388736, i32 545390592, i32 128, i32 8388736, i32 537001984, i32 545390720, i32 8388608, i32 545259520, i32 536871040, i32 8519680, i32 131200, i32 537002112, i32 545259520, i32 128, i32 545390592, i32 8519808, i32 0, i32 536870912, i32 545259648, i32 131072, i32 8519808]], align 16
@__const.main.buf = private unnamed_addr constant [8 x i8] c"01234567", align 1
@__const.main.key = private unnamed_addr constant [8 x i8] c"0E329232", align 1
@_shadow_DES_check_key = dso_local global i32 0, align 4
@odd_parity = internal constant [256 x i8] c"\01\01\02\02\04\04\07\07\08\08\0B\0B\0D\0D\0E\0E\10\10\13\13\15\15\16\16\19\19\1A\1A\1C\1C\1F\1F  ##%%&&))**,,//1122447788;;==>>@@CCEEFFIIJJLLOOQQRRTTWWXX[[]]^^aabbddgghhkkmmnnppssuuvvyyzz||\7F\7F\80\80\83\83\85\85\86\86\89\89\8A\8A\8C\8C\8F\8F\91\91\92\92\94\94\97\97\98\98\9B\9B\9D\9D\9E\9E\A1\A1\A2\A2\A4\A4\A7\A7\A8\A8\AB\AB\AD\AD\AE\AE\B0\B0\B3\B3\B5\B5\B6\B6\B9\B9\BA\BA\BC\BC\BF\BF\C1\C1\C2\C2\C4\C4\C7\C7\C8\C8\CB\CB\CD\CD\CE\CE\D0\D0\D3\D3\D5\D5\D6\D6\D9\D9\DA\DA\DC\DC\DF\DF\E0\E0\E3\E3\E5\E5\E6\E6\E9\E9\EA\EA\EC\EC\EF\EF\F1\F1\F2\F2\F4\F4\F7\F7\F8\F8\FB\FB\FD\FD\FE\FE", align 16
@weak_keys = internal constant [16 x [8 x i8]] [[8 x i8] c"\01\01\01\01\01\01\01\01", [8 x i8] c"\FE\FE\FE\FE\FE\FE\FE\FE", [8 x i8] c"\1F\1F\1F\1F\0E\0E\0E\0E", [8 x i8] c"\E0\E0\E0\E0\F1\F1\F1\F1", [8 x i8] c"\01\FE\01\FE\01\FE\01\FE", [8 x i8] c"\FE\01\FE\01\FE\01\FE\01", [8 x i8] c"\1F\E0\1F\E0\0E\F1\0E\F1", [8 x i8] c"\E0\1F\E0\1F\F1\0E\F1\0E", [8 x i8] c"\01\E0\01\E0\01\F1\01\F1", [8 x i8] c"\E0\01\E0\01\F1\01\F1\01", [8 x i8] c"\1F\FE\1F\FE\0E\FE\0E\FE", [8 x i8] c"\FE\1F\FE\1F\FE\0E\FE\0E", [8 x i8] c"\01\1F\01\1F\01\0E\01\0E", [8 x i8] c"\1F\01\1F\01\0E\01\0E\01", [8 x i8] c"\E0\FE\E0\FE\F1\FE\F1\FE", [8 x i8] c"\FE\E0\FE\E0\FE\F1\FE\F1"], align 16
@DES_set_key_unchecked.shifts2 = internal constant [16 x i32] [i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 0], align 16
@des_skb = internal constant [8 x [64 x i32]] [[64 x i32] [i32 0, i32 16, i32 536870912, i32 536870928, i32 65536, i32 65552, i32 536936448, i32 536936464, i32 2048, i32 2064, i32 536872960, i32 536872976, i32 67584, i32 67600, i32 536938496, i32 536938512, i32 32, i32 48, i32 536870944, i32 536870960, i32 65568, i32 65584, i32 536936480, i32 536936496, i32 2080, i32 2096, i32 536872992, i32 536873008, i32 67616, i32 67632, i32 536938528, i32 536938544, i32 524288, i32 524304, i32 537395200, i32 537395216, i32 589824, i32 589840, i32 537460736, i32 537460752, i32 526336, i32 526352, i32 537397248, i32 537397264, i32 591872, i32 591888, i32 537462784, i32 537462800, i32 524320, i32 524336, i32 537395232, i32 537395248, i32 589856, i32 589872, i32 537460768, i32 537460784, i32 526368, i32 526384, i32 537397280, i32 537397296, i32 591904, i32 591920, i32 537462816, i32 537462832], [64 x i32] [i32 0, i32 33554432, i32 8192, i32 33562624, i32 2097152, i32 35651584, i32 2105344, i32 35659776, i32 4, i32 33554436, i32 8196, i32 33562628, i32 2097156, i32 35651588, i32 2105348, i32 35659780, i32 1024, i32 33555456, i32 9216, i32 33563648, i32 2098176, i32 35652608, i32 2106368, i32 35660800, i32 1028, i32 33555460, i32 9220, i32 33563652, i32 2098180, i32 35652612, i32 2106372, i32 35660804, i32 268435456, i32 301989888, i32 268443648, i32 301998080, i32 270532608, i32 304087040, i32 270540800, i32 304095232, i32 268435460, i32 301989892, i32 268443652, i32 301998084, i32 270532612, i32 304087044, i32 270540804, i32 304095236, i32 268436480, i32 301990912, i32 268444672, i32 301999104, i32 270533632, i32 304088064, i32 270541824, i32 304096256, i32 268436484, i32 301990916, i32 268444676, i32 301999108, i32 270533636, i32 304088068, i32 270541828, i32 304096260], [64 x i32] [i32 0, i32 1, i32 262144, i32 262145, i32 16777216, i32 16777217, i32 17039360, i32 17039361, i32 2, i32 3, i32 262146, i32 262147, i32 16777218, i32 16777219, i32 17039362, i32 17039363, i32 512, i32 513, i32 262656, i32 262657, i32 16777728, i32 16777729, i32 17039872, i32 17039873, i32 514, i32 515, i32 262658, i32 262659, i32 16777730, i32 16777731, i32 17039874, i32 17039875, i32 134217728, i32 134217729, i32 134479872, i32 134479873, i32 150994944, i32 150994945, i32 151257088, i32 151257089, i32 134217730, i32 134217731, i32 134479874, i32 134479875, i32 150994946, i32 150994947, i32 151257090, i32 151257091, i32 134218240, i32 134218241, i32 134480384, i32 134480385, i32 150995456, i32 150995457, i32 151257600, i32 151257601, i32 134218242, i32 134218243, i32 134480386, i32 134480387, i32 150995458, i32 150995459, i32 151257602, i32 151257603], [64 x i32] [i32 0, i32 1048576, i32 256, i32 1048832, i32 8, i32 1048584, i32 264, i32 1048840, i32 4096, i32 1052672, i32 4352, i32 1052928, i32 4104, i32 1052680, i32 4360, i32 1052936, i32 67108864, i32 68157440, i32 67109120, i32 68157696, i32 67108872, i32 68157448, i32 67109128, i32 68157704, i32 67112960, i32 68161536, i32 67113216, i32 68161792, i32 67112968, i32 68161544, i32 67113224, i32 68161800, i32 131072, i32 1179648, i32 131328, i32 1179904, i32 131080, i32 1179656, i32 131336, i32 1179912, i32 135168, i32 1183744, i32 135424, i32 1184000, i32 135176, i32 1183752, i32 135432, i32 1184008, i32 67239936, i32 68288512, i32 67240192, i32 68288768, i32 67239944, i32 68288520, i32 67240200, i32 68288776, i32 67244032, i32 68292608, i32 67244288, i32 68292864, i32 67244040, i32 68292616, i32 67244296, i32 68292872], [64 x i32] [i32 0, i32 268435456, i32 65536, i32 268500992, i32 4, i32 268435460, i32 65540, i32 268500996, i32 536870912, i32 805306368, i32 536936448, i32 805371904, i32 536870916, i32 805306372, i32 536936452, i32 805371908, i32 1048576, i32 269484032, i32 1114112, i32 269549568, i32 1048580, i32 269484036, i32 1114116, i32 269549572, i32 537919488, i32 806354944, i32 537985024, i32 806420480, i32 537919492, i32 806354948, i32 537985028, i32 806420484, i32 4096, i32 268439552, i32 69632, i32 268505088, i32 4100, i32 268439556, i32 69636, i32 268505092, i32 536875008, i32 805310464, i32 536940544, i32 805376000, i32 536875012, i32 805310468, i32 536940548, i32 805376004, i32 1052672, i32 269488128, i32 1118208, i32 269553664, i32 1052676, i32 269488132, i32 1118212, i32 269553668, i32 537923584, i32 806359040, i32 537989120, i32 806424576, i32 537923588, i32 806359044, i32 537989124, i32 806424580], [64 x i32] [i32 0, i32 134217728, i32 8, i32 134217736, i32 1024, i32 134218752, i32 1032, i32 134218760, i32 131072, i32 134348800, i32 131080, i32 134348808, i32 132096, i32 134349824, i32 132104, i32 134349832, i32 1, i32 134217729, i32 9, i32 134217737, i32 1025, i32 134218753, i32 1033, i32 134218761, i32 131073, i32 134348801, i32 131081, i32 134348809, i32 132097, i32 134349825, i32 132105, i32 134349833, i32 33554432, i32 167772160, i32 33554440, i32 167772168, i32 33555456, i32 167773184, i32 33555464, i32 167773192, i32 33685504, i32 167903232, i32 33685512, i32 167903240, i32 33686528, i32 167904256, i32 33686536, i32 167904264, i32 33554433, i32 167772161, i32 33554441, i32 167772169, i32 33555457, i32 167773185, i32 33555465, i32 167773193, i32 33685505, i32 167903233, i32 33685513, i32 167903241, i32 33686529, i32 167904257, i32 33686537, i32 167904265], [64 x i32] [i32 0, i32 256, i32 524288, i32 524544, i32 16777216, i32 16777472, i32 17301504, i32 17301760, i32 16, i32 272, i32 524304, i32 524560, i32 16777232, i32 16777488, i32 17301520, i32 17301776, i32 2097152, i32 2097408, i32 2621440, i32 2621696, i32 18874368, i32 18874624, i32 19398656, i32 19398912, i32 2097168, i32 2097424, i32 2621456, i32 2621712, i32 18874384, i32 18874640, i32 19398672, i32 19398928, i32 512, i32 768, i32 524800, i32 525056, i32 16777728, i32 16777984, i32 17302016, i32 17302272, i32 528, i32 784, i32 524816, i32 525072, i32 16777744, i32 16778000, i32 17302032, i32 17302288, i32 2097664, i32 2097920, i32 2621952, i32 2622208, i32 18874880, i32 18875136, i32 19399168, i32 19399424, i32 2097680, i32 2097936, i32 2621968, i32 2622224, i32 18874896, i32 18875152, i32 19399184, i32 19399440], [64 x i32] [i32 0, i32 67108864, i32 262144, i32 67371008, i32 2, i32 67108866, i32 262146, i32 67371010, i32 8192, i32 67117056, i32 270336, i32 67379200, i32 8194, i32 67117058, i32 270338, i32 67379202, i32 32, i32 67108896, i32 262176, i32 67371040, i32 34, i32 67108898, i32 262178, i32 67371042, i32 8224, i32 67117088, i32 270368, i32 67379232, i32 8226, i32 67117090, i32 270370, i32 67379234, i32 2048, i32 67110912, i32 264192, i32 67373056, i32 2050, i32 67110914, i32 264194, i32 67373058, i32 10240, i32 67119104, i32 272384, i32 67381248, i32 10242, i32 67119106, i32 272386, i32 67381250, i32 2080, i32 67110944, i32 264224, i32 67373088, i32 2082, i32 67110946, i32 264226, i32 67373090, i32 10272, i32 67119136, i32 272416, i32 67381280, i32 10274, i32 67119138, i32 272418, i32 67381282]], align 16
@.str = private unnamed_addr constant [28 x i8] c"DDEP: SrcID: %d DestID: %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"CDEP: SrcID: %d DestID: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"Store: %lu ID: %d @Ln,Col: %d,%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Load: %lu ID: %d @Ln,Col: %d,%d\0A\00", align 1

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @DES_encrypt1(i32* %data, %struct.DES_ks* %ks, i32 %enc) #0 {
entry:
  %data.addr = alloca i32*, align 8
  %ks.addr = alloca %struct.DES_ks*, align 8
  %enc.addr = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %t = alloca i32, align 4
  %u = alloca i32, align 4
  %s = alloca i32*, align 8
  %tt = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ret40 = alloca i32, align 4
  %tmp41 = alloca i32, align 4
  %ret51 = alloca i32, align 4
  %tmp52 = alloca i32, align 4
  %ret96 = alloca i32, align 4
  %tmp97 = alloca i32, align 4
  %ret142 = alloca i32, align 4
  %tmp143 = alloca i32, align 4
  %ret188 = alloca i32, align 4
  %tmp189 = alloca i32, align 4
  %ret234 = alloca i32, align 4
  %tmp235 = alloca i32, align 4
  %ret280 = alloca i32, align 4
  %tmp281 = alloca i32, align 4
  %ret326 = alloca i32, align 4
  %tmp327 = alloca i32, align 4
  %ret372 = alloca i32, align 4
  %tmp373 = alloca i32, align 4
  %ret418 = alloca i32, align 4
  %tmp419 = alloca i32, align 4
  %ret464 = alloca i32, align 4
  %tmp465 = alloca i32, align 4
  %ret510 = alloca i32, align 4
  %tmp511 = alloca i32, align 4
  %ret556 = alloca i32, align 4
  %tmp557 = alloca i32, align 4
  %ret602 = alloca i32, align 4
  %tmp603 = alloca i32, align 4
  %ret648 = alloca i32, align 4
  %tmp649 = alloca i32, align 4
  %ret694 = alloca i32, align 4
  %tmp695 = alloca i32, align 4
  %ret740 = alloca i32, align 4
  %tmp741 = alloca i32, align 4
  %ret786 = alloca i32, align 4
  %tmp787 = alloca i32, align 4
  %ret832 = alloca i32, align 4
  %tmp833 = alloca i32, align 4
  %ret878 = alloca i32, align 4
  %tmp879 = alloca i32, align 4
  %ret924 = alloca i32, align 4
  %tmp925 = alloca i32, align 4
  %ret970 = alloca i32, align 4
  %tmp971 = alloca i32, align 4
  %ret1016 = alloca i32, align 4
  %tmp1017 = alloca i32, align 4
  %ret1062 = alloca i32, align 4
  %tmp1063 = alloca i32, align 4
  %ret1108 = alloca i32, align 4
  %tmp1109 = alloca i32, align 4
  %ret1154 = alloca i32, align 4
  %tmp1155 = alloca i32, align 4
  %ret1200 = alloca i32, align 4
  %tmp1201 = alloca i32, align 4
  %ret1246 = alloca i32, align 4
  %tmp1247 = alloca i32, align 4
  %ret1292 = alloca i32, align 4
  %tmp1293 = alloca i32, align 4
  %ret1338 = alloca i32, align 4
  %tmp1339 = alloca i32, align 4
  %ret1384 = alloca i32, align 4
  %tmp1385 = alloca i32, align 4
  %ret1430 = alloca i32, align 4
  %tmp1431 = alloca i32, align 4
  %ret1476 = alloca i32, align 4
  %tmp1477 = alloca i32, align 4
  %ret1518 = alloca i32, align 4
  %tmp1519 = alloca i32, align 4
  %ret1523 = alloca i32, align 4
  %tmp1524 = alloca i32, align 4
  %tt1528 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  store %struct.DES_ks* %ks, %struct.DES_ks** %ks.addr, align 8
  store i32 %enc, i32* %enc.addr, align 4
  %0 = load i32*, i32** %data.addr, align 8
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0
  %1 = load i32, i32* %arrayidx, align 4
  store i32 %1, i32* %r, align 4
  %2 = load i32*, i32** %data.addr, align 8
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1
  %3 = load i32, i32* %arrayidx1, align 4
  store i32 %3, i32* %l, align 4
  %4 = load i32, i32* %l, align 4
  %shr = lshr i32 %4, 4
  %5 = load i32, i32* %r, align 4
  %xor = xor i32 %shr, %5
  %conv = zext i32 %xor to i64
  %and = and i64 %conv, 252645135
  %conv2 = trunc i64 %and to i32
  store i32 %conv2, i32* %tt, align 4
  %6 = load i32, i32* %tt, align 4
  %7 = load i32, i32* %r, align 4
  %xor3 = xor i32 %7, %6
  store i32 %xor3, i32* %r, align 4
  %8 = load i32, i32* %tt, align 4
  %shl = shl i32 %8, 4
  %9 = load i32, i32* %l, align 4
  %xor4 = xor i32 %9, %shl
  store i32 %xor4, i32* %l, align 4
  %10 = load i32, i32* %r, align 4
  %shr5 = lshr i32 %10, 16
  %11 = load i32, i32* %l, align 4
  %xor6 = xor i32 %shr5, %11
  %conv7 = zext i32 %xor6 to i64
  %and8 = and i64 %conv7, 65535
  %conv9 = trunc i64 %and8 to i32
  store i32 %conv9, i32* %tt, align 4
  %12 = load i32, i32* %tt, align 4
  %13 = load i32, i32* %l, align 4
  %xor10 = xor i32 %13, %12
  store i32 %xor10, i32* %l, align 4
  %14 = load i32, i32* %tt, align 4
  %shl11 = shl i32 %14, 16
  %15 = load i32, i32* %r, align 4
  %xor12 = xor i32 %15, %shl11
  store i32 %xor12, i32* %r, align 4
  %16 = load i32, i32* %l, align 4
  %shr13 = lshr i32 %16, 2
  %17 = load i32, i32* %r, align 4
  %xor14 = xor i32 %shr13, %17
  %conv15 = zext i32 %xor14 to i64
  %and16 = and i64 %conv15, 858993459
  %conv17 = trunc i64 %and16 to i32
  store i32 %conv17, i32* %tt, align 4
  %18 = load i32, i32* %tt, align 4
  %19 = load i32, i32* %r, align 4
  %xor18 = xor i32 %19, %18
  store i32 %xor18, i32* %r, align 4
  %20 = load i32, i32* %tt, align 4
  %shl19 = shl i32 %20, 2
  %21 = load i32, i32* %l, align 4
  %xor20 = xor i32 %21, %shl19
  store i32 %xor20, i32* %l, align 4
  %22 = load i32, i32* %r, align 4
  %shr21 = lshr i32 %22, 8
  %23 = load i32, i32* %l, align 4
  %xor22 = xor i32 %shr21, %23
  %conv23 = zext i32 %xor22 to i64
  %and24 = and i64 %conv23, 16711935
  %conv25 = trunc i64 %and24 to i32
  store i32 %conv25, i32* %tt, align 4
  %24 = load i32, i32* %tt, align 4
  %25 = load i32, i32* %l, align 4
  %xor26 = xor i32 %25, %24
  store i32 %xor26, i32* %l, align 4
  %26 = load i32, i32* %tt, align 4
  %shl27 = shl i32 %26, 8
  %27 = load i32, i32* %r, align 4
  %xor28 = xor i32 %27, %shl27
  store i32 %xor28, i32* %r, align 4
  %28 = load i32, i32* %l, align 4
  %shr29 = lshr i32 %28, 1
  %29 = load i32, i32* %r, align 4
  %xor30 = xor i32 %shr29, %29
  %conv31 = zext i32 %xor30 to i64
  %and32 = and i64 %conv31, 1431655765
  %conv33 = trunc i64 %and32 to i32
  store i32 %conv33, i32* %tt, align 4
  %30 = load i32, i32* %tt, align 4
  %31 = load i32, i32* %r, align 4
  %xor34 = xor i32 %31, %30
  store i32 %xor34, i32* %r, align 4
  %32 = load i32, i32* %tt, align 4
  %shl35 = shl i32 %32, 1
  %33 = load i32, i32* %l, align 4
  %xor36 = xor i32 %33, %shl35
  store i32 %xor36, i32* %l, align 4
  %34 = load i32, i32* %r, align 4
  %35 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %34) #5, !srcloc !2
  store i32 %35, i32* %ret, align 4
  %36 = load i32, i32* %ret, align 4
  store i32 %36, i32* %tmp, align 4
  %37 = load i32, i32* %tmp, align 4
  %conv37 = zext i32 %37 to i64
  %and38 = and i64 %conv37, 4294967295
  %conv39 = trunc i64 %and38 to i32
  store i32 %conv39, i32* %r, align 4
  %38 = load i32, i32* %l, align 4
  %39 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %38) #5, !srcloc !3
  store i32 %39, i32* %ret40, align 4
  %40 = load i32, i32* %ret40, align 4
  store i32 %40, i32* %tmp41, align 4
  %41 = load i32, i32* %tmp41, align 4
  %conv42 = zext i32 %41 to i64
  %and43 = and i64 %conv42, 4294967295
  %conv44 = trunc i64 %and43 to i32
  store i32 %conv44, i32* %l, align 4
  %42 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr, align 8
  %ks45 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %42, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45, i64 0, i64 0
  %deslong = bitcast %union.anon* %arraydecay to [2 x i32]*
  %arraydecay46 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong, i64 0, i64 0
  store i32* %arraydecay46, i32** %s, align 8
  %43 = load i32, i32* %enc.addr, align 4
  %tobool = icmp ne i32 %43, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %44 = load i32, i32* %r, align 4
  %45 = load i32*, i32** %s, align 8
  %arrayidx47 = getelementptr inbounds i32, i32* %45, i64 0
  %46 = load i32, i32* %arrayidx47, align 4
  %xor48 = xor i32 %44, %46
  store i32 %xor48, i32* %u, align 4
  %47 = load i32, i32* %r, align 4
  %48 = load i32*, i32** %s, align 8
  %arrayidx49 = getelementptr inbounds i32, i32* %48, i64 1
  %49 = load i32, i32* %arrayidx49, align 4
  %xor50 = xor i32 %47, %49
  store i32 %xor50, i32* %t, align 4
  %50 = load i32, i32* %t, align 4
  %51 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %50) #5, !srcloc !4
  store i32 %51, i32* %ret51, align 4
  %52 = load i32, i32* %ret51, align 4
  store i32 %52, i32* %tmp52, align 4
  %53 = load i32, i32* %tmp52, align 4
  store i32 %53, i32* %t, align 4
  %54 = load i32, i32* %u, align 4
  %shr53 = lshr i32 %54, 2
  %and54 = and i32 %shr53, 63
  %idxprom = zext i32 %and54 to i64
  %arrayidx55 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom
  %55 = load i32, i32* %arrayidx55, align 4
  %56 = load i32, i32* %u, align 4
  %shr56 = lshr i32 %56, 10
  %and57 = and i32 %shr56, 63
  %idxprom58 = zext i32 %and57 to i64
  %arrayidx59 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58
  %57 = load i32, i32* %arrayidx59, align 4
  %xor60 = xor i32 %55, %57
  %58 = load i32, i32* %u, align 4
  %shr61 = lshr i32 %58, 18
  %and62 = and i32 %shr61, 63
  %idxprom63 = zext i32 %and62 to i64
  %arrayidx64 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63
  %59 = load i32, i32* %arrayidx64, align 4
  %xor65 = xor i32 %xor60, %59
  %60 = load i32, i32* %u, align 4
  %shr66 = lshr i32 %60, 26
  %and67 = and i32 %shr66, 63
  %idxprom68 = zext i32 %and67 to i64
  %arrayidx69 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68
  %61 = load i32, i32* %arrayidx69, align 4
  %xor70 = xor i32 %xor65, %61
  %62 = load i32, i32* %t, align 4
  %shr71 = lshr i32 %62, 2
  %and72 = and i32 %shr71, 63
  %idxprom73 = zext i32 %and72 to i64
  %arrayidx74 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73
  %63 = load i32, i32* %arrayidx74, align 4
  %xor75 = xor i32 %xor70, %63
  %64 = load i32, i32* %t, align 4
  %shr76 = lshr i32 %64, 10
  %and77 = and i32 %shr76, 63
  %idxprom78 = zext i32 %and77 to i64
  %arrayidx79 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78
  %65 = load i32, i32* %arrayidx79, align 4
  %xor80 = xor i32 %xor75, %65
  %66 = load i32, i32* %t, align 4
  %shr81 = lshr i32 %66, 18
  %and82 = and i32 %shr81, 63
  %idxprom83 = zext i32 %and82 to i64
  %arrayidx84 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83
  %67 = load i32, i32* %arrayidx84, align 4
  %xor85 = xor i32 %xor80, %67
  %68 = load i32, i32* %t, align 4
  %shr86 = lshr i32 %68, 26
  %and87 = and i32 %shr86, 63
  %idxprom88 = zext i32 %and87 to i64
  %arrayidx89 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88
  %69 = load i32, i32* %arrayidx89, align 4
  %xor90 = xor i32 %xor85, %69
  %70 = load i32, i32* %l, align 4
  %xor91 = xor i32 %70, %xor90
  store i32 %xor91, i32* %l, align 4
  %71 = load i32, i32* %l, align 4
  %72 = load i32*, i32** %s, align 8
  %arrayidx92 = getelementptr inbounds i32, i32* %72, i64 2
  %73 = load i32, i32* %arrayidx92, align 4
  %xor93 = xor i32 %71, %73
  store i32 %xor93, i32* %u, align 4
  %74 = load i32, i32* %l, align 4
  %75 = load i32*, i32** %s, align 8
  %arrayidx94 = getelementptr inbounds i32, i32* %75, i64 3
  %76 = load i32, i32* %arrayidx94, align 4
  %xor95 = xor i32 %74, %76
  store i32 %xor95, i32* %t, align 4
  %77 = load i32, i32* %t, align 4
  %78 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %77) #5, !srcloc !5
  store i32 %78, i32* %ret96, align 4
  %79 = load i32, i32* %ret96, align 4
  store i32 %79, i32* %tmp97, align 4
  %80 = load i32, i32* %tmp97, align 4
  store i32 %80, i32* %t, align 4
  %81 = load i32, i32* %u, align 4
  %shr98 = lshr i32 %81, 2
  %and99 = and i32 %shr98, 63
  %idxprom100 = zext i32 %and99 to i64
  %arrayidx101 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100
  %82 = load i32, i32* %arrayidx101, align 4
  %83 = load i32, i32* %u, align 4
  %shr102 = lshr i32 %83, 10
  %and103 = and i32 %shr102, 63
  %idxprom104 = zext i32 %and103 to i64
  %arrayidx105 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104
  %84 = load i32, i32* %arrayidx105, align 4
  %xor106 = xor i32 %82, %84
  %85 = load i32, i32* %u, align 4
  %shr107 = lshr i32 %85, 18
  %and108 = and i32 %shr107, 63
  %idxprom109 = zext i32 %and108 to i64
  %arrayidx110 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109
  %86 = load i32, i32* %arrayidx110, align 4
  %xor111 = xor i32 %xor106, %86
  %87 = load i32, i32* %u, align 4
  %shr112 = lshr i32 %87, 26
  %and113 = and i32 %shr112, 63
  %idxprom114 = zext i32 %and113 to i64
  %arrayidx115 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114
  %88 = load i32, i32* %arrayidx115, align 4
  %xor116 = xor i32 %xor111, %88
  %89 = load i32, i32* %t, align 4
  %shr117 = lshr i32 %89, 2
  %and118 = and i32 %shr117, 63
  %idxprom119 = zext i32 %and118 to i64
  %arrayidx120 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119
  %90 = load i32, i32* %arrayidx120, align 4
  %xor121 = xor i32 %xor116, %90
  %91 = load i32, i32* %t, align 4
  %shr122 = lshr i32 %91, 10
  %and123 = and i32 %shr122, 63
  %idxprom124 = zext i32 %and123 to i64
  %arrayidx125 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124
  %92 = load i32, i32* %arrayidx125, align 4
  %xor126 = xor i32 %xor121, %92
  %93 = load i32, i32* %t, align 4
  %shr127 = lshr i32 %93, 18
  %and128 = and i32 %shr127, 63
  %idxprom129 = zext i32 %and128 to i64
  %arrayidx130 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129
  %94 = load i32, i32* %arrayidx130, align 4
  %xor131 = xor i32 %xor126, %94
  %95 = load i32, i32* %t, align 4
  %shr132 = lshr i32 %95, 26
  %and133 = and i32 %shr132, 63
  %idxprom134 = zext i32 %and133 to i64
  %arrayidx135 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134
  %96 = load i32, i32* %arrayidx135, align 4
  %xor136 = xor i32 %xor131, %96
  %97 = load i32, i32* %r, align 4
  %xor137 = xor i32 %97, %xor136
  store i32 %xor137, i32* %r, align 4
  %98 = load i32, i32* %r, align 4
  %99 = load i32*, i32** %s, align 8
  %arrayidx138 = getelementptr inbounds i32, i32* %99, i64 4
  %100 = load i32, i32* %arrayidx138, align 4
  %xor139 = xor i32 %98, %100
  store i32 %xor139, i32* %u, align 4
  %101 = load i32, i32* %r, align 4
  %102 = load i32*, i32** %s, align 8
  %arrayidx140 = getelementptr inbounds i32, i32* %102, i64 5
  %103 = load i32, i32* %arrayidx140, align 4
  %xor141 = xor i32 %101, %103
  store i32 %xor141, i32* %t, align 4
  %104 = load i32, i32* %t, align 4
  %105 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %104) #5, !srcloc !6
  store i32 %105, i32* %ret142, align 4
  %106 = load i32, i32* %ret142, align 4
  store i32 %106, i32* %tmp143, align 4
  %107 = load i32, i32* %tmp143, align 4
  store i32 %107, i32* %t, align 4
  %108 = load i32, i32* %u, align 4
  %shr144 = lshr i32 %108, 2
  %and145 = and i32 %shr144, 63
  %idxprom146 = zext i32 %and145 to i64
  %arrayidx147 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146
  %109 = load i32, i32* %arrayidx147, align 4
  %110 = load i32, i32* %u, align 4
  %shr148 = lshr i32 %110, 10
  %and149 = and i32 %shr148, 63
  %idxprom150 = zext i32 %and149 to i64
  %arrayidx151 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150
  %111 = load i32, i32* %arrayidx151, align 4
  %xor152 = xor i32 %109, %111
  %112 = load i32, i32* %u, align 4
  %shr153 = lshr i32 %112, 18
  %and154 = and i32 %shr153, 63
  %idxprom155 = zext i32 %and154 to i64
  %arrayidx156 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155
  %113 = load i32, i32* %arrayidx156, align 4
  %xor157 = xor i32 %xor152, %113
  %114 = load i32, i32* %u, align 4
  %shr158 = lshr i32 %114, 26
  %and159 = and i32 %shr158, 63
  %idxprom160 = zext i32 %and159 to i64
  %arrayidx161 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160
  %115 = load i32, i32* %arrayidx161, align 4
  %xor162 = xor i32 %xor157, %115
  %116 = load i32, i32* %t, align 4
  %shr163 = lshr i32 %116, 2
  %and164 = and i32 %shr163, 63
  %idxprom165 = zext i32 %and164 to i64
  %arrayidx166 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165
  %117 = load i32, i32* %arrayidx166, align 4
  %xor167 = xor i32 %xor162, %117
  %118 = load i32, i32* %t, align 4
  %shr168 = lshr i32 %118, 10
  %and169 = and i32 %shr168, 63
  %idxprom170 = zext i32 %and169 to i64
  %arrayidx171 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170
  %119 = load i32, i32* %arrayidx171, align 4
  %xor172 = xor i32 %xor167, %119
  %120 = load i32, i32* %t, align 4
  %shr173 = lshr i32 %120, 18
  %and174 = and i32 %shr173, 63
  %idxprom175 = zext i32 %and174 to i64
  %arrayidx176 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175
  %121 = load i32, i32* %arrayidx176, align 4
  %xor177 = xor i32 %xor172, %121
  %122 = load i32, i32* %t, align 4
  %shr178 = lshr i32 %122, 26
  %and179 = and i32 %shr178, 63
  %idxprom180 = zext i32 %and179 to i64
  %arrayidx181 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180
  %123 = load i32, i32* %arrayidx181, align 4
  %xor182 = xor i32 %xor177, %123
  %124 = load i32, i32* %l, align 4
  %xor183 = xor i32 %124, %xor182
  store i32 %xor183, i32* %l, align 4
  %125 = load i32, i32* %l, align 4
  %126 = load i32*, i32** %s, align 8
  %arrayidx184 = getelementptr inbounds i32, i32* %126, i64 6
  %127 = load i32, i32* %arrayidx184, align 4
  %xor185 = xor i32 %125, %127
  store i32 %xor185, i32* %u, align 4
  %128 = load i32, i32* %l, align 4
  %129 = load i32*, i32** %s, align 8
  %arrayidx186 = getelementptr inbounds i32, i32* %129, i64 7
  %130 = load i32, i32* %arrayidx186, align 4
  %xor187 = xor i32 %128, %130
  store i32 %xor187, i32* %t, align 4
  %131 = load i32, i32* %t, align 4
  %132 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %131) #5, !srcloc !7
  store i32 %132, i32* %ret188, align 4
  %133 = load i32, i32* %ret188, align 4
  store i32 %133, i32* %tmp189, align 4
  %134 = load i32, i32* %tmp189, align 4
  store i32 %134, i32* %t, align 4
  %135 = load i32, i32* %u, align 4
  %shr190 = lshr i32 %135, 2
  %and191 = and i32 %shr190, 63
  %idxprom192 = zext i32 %and191 to i64
  %arrayidx193 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192
  %136 = load i32, i32* %arrayidx193, align 4
  %137 = load i32, i32* %u, align 4
  %shr194 = lshr i32 %137, 10
  %and195 = and i32 %shr194, 63
  %idxprom196 = zext i32 %and195 to i64
  %arrayidx197 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196
  %138 = load i32, i32* %arrayidx197, align 4
  %xor198 = xor i32 %136, %138
  %139 = load i32, i32* %u, align 4
  %shr199 = lshr i32 %139, 18
  %and200 = and i32 %shr199, 63
  %idxprom201 = zext i32 %and200 to i64
  %arrayidx202 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201
  %140 = load i32, i32* %arrayidx202, align 4
  %xor203 = xor i32 %xor198, %140
  %141 = load i32, i32* %u, align 4
  %shr204 = lshr i32 %141, 26
  %and205 = and i32 %shr204, 63
  %idxprom206 = zext i32 %and205 to i64
  %arrayidx207 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206
  %142 = load i32, i32* %arrayidx207, align 4
  %xor208 = xor i32 %xor203, %142
  %143 = load i32, i32* %t, align 4
  %shr209 = lshr i32 %143, 2
  %and210 = and i32 %shr209, 63
  %idxprom211 = zext i32 %and210 to i64
  %arrayidx212 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211
  %144 = load i32, i32* %arrayidx212, align 4
  %xor213 = xor i32 %xor208, %144
  %145 = load i32, i32* %t, align 4
  %shr214 = lshr i32 %145, 10
  %and215 = and i32 %shr214, 63
  %idxprom216 = zext i32 %and215 to i64
  %arrayidx217 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216
  %146 = load i32, i32* %arrayidx217, align 4
  %xor218 = xor i32 %xor213, %146
  %147 = load i32, i32* %t, align 4
  %shr219 = lshr i32 %147, 18
  %and220 = and i32 %shr219, 63
  %idxprom221 = zext i32 %and220 to i64
  %arrayidx222 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221
  %148 = load i32, i32* %arrayidx222, align 4
  %xor223 = xor i32 %xor218, %148
  %149 = load i32, i32* %t, align 4
  %shr224 = lshr i32 %149, 26
  %and225 = and i32 %shr224, 63
  %idxprom226 = zext i32 %and225 to i64
  %arrayidx227 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226
  %150 = load i32, i32* %arrayidx227, align 4
  %xor228 = xor i32 %xor223, %150
  %151 = load i32, i32* %r, align 4
  %xor229 = xor i32 %151, %xor228
  store i32 %xor229, i32* %r, align 4
  %152 = load i32, i32* %r, align 4
  %153 = load i32*, i32** %s, align 8
  %arrayidx230 = getelementptr inbounds i32, i32* %153, i64 8
  %154 = load i32, i32* %arrayidx230, align 4
  %xor231 = xor i32 %152, %154
  store i32 %xor231, i32* %u, align 4
  %155 = load i32, i32* %r, align 4
  %156 = load i32*, i32** %s, align 8
  %arrayidx232 = getelementptr inbounds i32, i32* %156, i64 9
  %157 = load i32, i32* %arrayidx232, align 4
  %xor233 = xor i32 %155, %157
  store i32 %xor233, i32* %t, align 4
  %158 = load i32, i32* %t, align 4
  %159 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %158) #5, !srcloc !8
  store i32 %159, i32* %ret234, align 4
  %160 = load i32, i32* %ret234, align 4
  store i32 %160, i32* %tmp235, align 4
  %161 = load i32, i32* %tmp235, align 4
  store i32 %161, i32* %t, align 4
  %162 = load i32, i32* %u, align 4
  %shr236 = lshr i32 %162, 2
  %and237 = and i32 %shr236, 63
  %idxprom238 = zext i32 %and237 to i64
  %arrayidx239 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238
  %163 = load i32, i32* %arrayidx239, align 4
  %164 = load i32, i32* %u, align 4
  %shr240 = lshr i32 %164, 10
  %and241 = and i32 %shr240, 63
  %idxprom242 = zext i32 %and241 to i64
  %arrayidx243 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242
  %165 = load i32, i32* %arrayidx243, align 4
  %xor244 = xor i32 %163, %165
  %166 = load i32, i32* %u, align 4
  %shr245 = lshr i32 %166, 18
  %and246 = and i32 %shr245, 63
  %idxprom247 = zext i32 %and246 to i64
  %arrayidx248 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247
  %167 = load i32, i32* %arrayidx248, align 4
  %xor249 = xor i32 %xor244, %167
  %168 = load i32, i32* %u, align 4
  %shr250 = lshr i32 %168, 26
  %and251 = and i32 %shr250, 63
  %idxprom252 = zext i32 %and251 to i64
  %arrayidx253 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252
  %169 = load i32, i32* %arrayidx253, align 4
  %xor254 = xor i32 %xor249, %169
  %170 = load i32, i32* %t, align 4
  %shr255 = lshr i32 %170, 2
  %and256 = and i32 %shr255, 63
  %idxprom257 = zext i32 %and256 to i64
  %arrayidx258 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257
  %171 = load i32, i32* %arrayidx258, align 4
  %xor259 = xor i32 %xor254, %171
  %172 = load i32, i32* %t, align 4
  %shr260 = lshr i32 %172, 10
  %and261 = and i32 %shr260, 63
  %idxprom262 = zext i32 %and261 to i64
  %arrayidx263 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262
  %173 = load i32, i32* %arrayidx263, align 4
  %xor264 = xor i32 %xor259, %173
  %174 = load i32, i32* %t, align 4
  %shr265 = lshr i32 %174, 18
  %and266 = and i32 %shr265, 63
  %idxprom267 = zext i32 %and266 to i64
  %arrayidx268 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267
  %175 = load i32, i32* %arrayidx268, align 4
  %xor269 = xor i32 %xor264, %175
  %176 = load i32, i32* %t, align 4
  %shr270 = lshr i32 %176, 26
  %and271 = and i32 %shr270, 63
  %idxprom272 = zext i32 %and271 to i64
  %arrayidx273 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272
  %177 = load i32, i32* %arrayidx273, align 4
  %xor274 = xor i32 %xor269, %177
  %178 = load i32, i32* %l, align 4
  %xor275 = xor i32 %178, %xor274
  store i32 %xor275, i32* %l, align 4
  %179 = load i32, i32* %l, align 4
  %180 = load i32*, i32** %s, align 8
  %arrayidx276 = getelementptr inbounds i32, i32* %180, i64 10
  %181 = load i32, i32* %arrayidx276, align 4
  %xor277 = xor i32 %179, %181
  store i32 %xor277, i32* %u, align 4
  %182 = load i32, i32* %l, align 4
  %183 = load i32*, i32** %s, align 8
  %arrayidx278 = getelementptr inbounds i32, i32* %183, i64 11
  %184 = load i32, i32* %arrayidx278, align 4
  %xor279 = xor i32 %182, %184
  store i32 %xor279, i32* %t, align 4
  %185 = load i32, i32* %t, align 4
  %186 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %185) #5, !srcloc !9
  store i32 %186, i32* %ret280, align 4
  %187 = load i32, i32* %ret280, align 4
  store i32 %187, i32* %tmp281, align 4
  %188 = load i32, i32* %tmp281, align 4
  store i32 %188, i32* %t, align 4
  %189 = load i32, i32* %u, align 4
  %shr282 = lshr i32 %189, 2
  %and283 = and i32 %shr282, 63
  %idxprom284 = zext i32 %and283 to i64
  %arrayidx285 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284
  %190 = load i32, i32* %arrayidx285, align 4
  %191 = load i32, i32* %u, align 4
  %shr286 = lshr i32 %191, 10
  %and287 = and i32 %shr286, 63
  %idxprom288 = zext i32 %and287 to i64
  %arrayidx289 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288
  %192 = load i32, i32* %arrayidx289, align 4
  %xor290 = xor i32 %190, %192
  %193 = load i32, i32* %u, align 4
  %shr291 = lshr i32 %193, 18
  %and292 = and i32 %shr291, 63
  %idxprom293 = zext i32 %and292 to i64
  %arrayidx294 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293
  %194 = load i32, i32* %arrayidx294, align 4
  %xor295 = xor i32 %xor290, %194
  %195 = load i32, i32* %u, align 4
  %shr296 = lshr i32 %195, 26
  %and297 = and i32 %shr296, 63
  %idxprom298 = zext i32 %and297 to i64
  %arrayidx299 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298
  %196 = load i32, i32* %arrayidx299, align 4
  %xor300 = xor i32 %xor295, %196
  %197 = load i32, i32* %t, align 4
  %shr301 = lshr i32 %197, 2
  %and302 = and i32 %shr301, 63
  %idxprom303 = zext i32 %and302 to i64
  %arrayidx304 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303
  %198 = load i32, i32* %arrayidx304, align 4
  %xor305 = xor i32 %xor300, %198
  %199 = load i32, i32* %t, align 4
  %shr306 = lshr i32 %199, 10
  %and307 = and i32 %shr306, 63
  %idxprom308 = zext i32 %and307 to i64
  %arrayidx309 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308
  %200 = load i32, i32* %arrayidx309, align 4
  %xor310 = xor i32 %xor305, %200
  %201 = load i32, i32* %t, align 4
  %shr311 = lshr i32 %201, 18
  %and312 = and i32 %shr311, 63
  %idxprom313 = zext i32 %and312 to i64
  %arrayidx314 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313
  %202 = load i32, i32* %arrayidx314, align 4
  %xor315 = xor i32 %xor310, %202
  %203 = load i32, i32* %t, align 4
  %shr316 = lshr i32 %203, 26
  %and317 = and i32 %shr316, 63
  %idxprom318 = zext i32 %and317 to i64
  %arrayidx319 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318
  %204 = load i32, i32* %arrayidx319, align 4
  %xor320 = xor i32 %xor315, %204
  %205 = load i32, i32* %r, align 4
  %xor321 = xor i32 %205, %xor320
  store i32 %xor321, i32* %r, align 4
  %206 = load i32, i32* %r, align 4
  %207 = load i32*, i32** %s, align 8
  %arrayidx322 = getelementptr inbounds i32, i32* %207, i64 12
  %208 = load i32, i32* %arrayidx322, align 4
  %xor323 = xor i32 %206, %208
  store i32 %xor323, i32* %u, align 4
  %209 = load i32, i32* %r, align 4
  %210 = load i32*, i32** %s, align 8
  %arrayidx324 = getelementptr inbounds i32, i32* %210, i64 13
  %211 = load i32, i32* %arrayidx324, align 4
  %xor325 = xor i32 %209, %211
  store i32 %xor325, i32* %t, align 4
  %212 = load i32, i32* %t, align 4
  %213 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %212) #5, !srcloc !10
  store i32 %213, i32* %ret326, align 4
  %214 = load i32, i32* %ret326, align 4
  store i32 %214, i32* %tmp327, align 4
  %215 = load i32, i32* %tmp327, align 4
  store i32 %215, i32* %t, align 4
  %216 = load i32, i32* %u, align 4
  %shr328 = lshr i32 %216, 2
  %and329 = and i32 %shr328, 63
  %idxprom330 = zext i32 %and329 to i64
  %arrayidx331 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330
  %217 = load i32, i32* %arrayidx331, align 4
  %218 = load i32, i32* %u, align 4
  %shr332 = lshr i32 %218, 10
  %and333 = and i32 %shr332, 63
  %idxprom334 = zext i32 %and333 to i64
  %arrayidx335 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334
  %219 = load i32, i32* %arrayidx335, align 4
  %xor336 = xor i32 %217, %219
  %220 = load i32, i32* %u, align 4
  %shr337 = lshr i32 %220, 18
  %and338 = and i32 %shr337, 63
  %idxprom339 = zext i32 %and338 to i64
  %arrayidx340 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339
  %221 = load i32, i32* %arrayidx340, align 4
  %xor341 = xor i32 %xor336, %221
  %222 = load i32, i32* %u, align 4
  %shr342 = lshr i32 %222, 26
  %and343 = and i32 %shr342, 63
  %idxprom344 = zext i32 %and343 to i64
  %arrayidx345 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344
  %223 = load i32, i32* %arrayidx345, align 4
  %xor346 = xor i32 %xor341, %223
  %224 = load i32, i32* %t, align 4
  %shr347 = lshr i32 %224, 2
  %and348 = and i32 %shr347, 63
  %idxprom349 = zext i32 %and348 to i64
  %arrayidx350 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349
  %225 = load i32, i32* %arrayidx350, align 4
  %xor351 = xor i32 %xor346, %225
  %226 = load i32, i32* %t, align 4
  %shr352 = lshr i32 %226, 10
  %and353 = and i32 %shr352, 63
  %idxprom354 = zext i32 %and353 to i64
  %arrayidx355 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354
  %227 = load i32, i32* %arrayidx355, align 4
  %xor356 = xor i32 %xor351, %227
  %228 = load i32, i32* %t, align 4
  %shr357 = lshr i32 %228, 18
  %and358 = and i32 %shr357, 63
  %idxprom359 = zext i32 %and358 to i64
  %arrayidx360 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359
  %229 = load i32, i32* %arrayidx360, align 4
  %xor361 = xor i32 %xor356, %229
  %230 = load i32, i32* %t, align 4
  %shr362 = lshr i32 %230, 26
  %and363 = and i32 %shr362, 63
  %idxprom364 = zext i32 %and363 to i64
  %arrayidx365 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364
  %231 = load i32, i32* %arrayidx365, align 4
  %xor366 = xor i32 %xor361, %231
  %232 = load i32, i32* %l, align 4
  %xor367 = xor i32 %232, %xor366
  store i32 %xor367, i32* %l, align 4
  %233 = load i32, i32* %l, align 4
  %234 = load i32*, i32** %s, align 8
  %arrayidx368 = getelementptr inbounds i32, i32* %234, i64 14
  %235 = load i32, i32* %arrayidx368, align 4
  %xor369 = xor i32 %233, %235
  store i32 %xor369, i32* %u, align 4
  %236 = load i32, i32* %l, align 4
  %237 = load i32*, i32** %s, align 8
  %arrayidx370 = getelementptr inbounds i32, i32* %237, i64 15
  %238 = load i32, i32* %arrayidx370, align 4
  %xor371 = xor i32 %236, %238
  store i32 %xor371, i32* %t, align 4
  %239 = load i32, i32* %t, align 4
  %240 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %239) #5, !srcloc !11
  store i32 %240, i32* %ret372, align 4
  %241 = load i32, i32* %ret372, align 4
  store i32 %241, i32* %tmp373, align 4
  %242 = load i32, i32* %tmp373, align 4
  store i32 %242, i32* %t, align 4
  %243 = load i32, i32* %u, align 4
  %shr374 = lshr i32 %243, 2
  %and375 = and i32 %shr374, 63
  %idxprom376 = zext i32 %and375 to i64
  %arrayidx377 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376
  %244 = load i32, i32* %arrayidx377, align 4
  %245 = load i32, i32* %u, align 4
  %shr378 = lshr i32 %245, 10
  %and379 = and i32 %shr378, 63
  %idxprom380 = zext i32 %and379 to i64
  %arrayidx381 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380
  %246 = load i32, i32* %arrayidx381, align 4
  %xor382 = xor i32 %244, %246
  %247 = load i32, i32* %u, align 4
  %shr383 = lshr i32 %247, 18
  %and384 = and i32 %shr383, 63
  %idxprom385 = zext i32 %and384 to i64
  %arrayidx386 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385
  %248 = load i32, i32* %arrayidx386, align 4
  %xor387 = xor i32 %xor382, %248
  %249 = load i32, i32* %u, align 4
  %shr388 = lshr i32 %249, 26
  %and389 = and i32 %shr388, 63
  %idxprom390 = zext i32 %and389 to i64
  %arrayidx391 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390
  %250 = load i32, i32* %arrayidx391, align 4
  %xor392 = xor i32 %xor387, %250
  %251 = load i32, i32* %t, align 4
  %shr393 = lshr i32 %251, 2
  %and394 = and i32 %shr393, 63
  %idxprom395 = zext i32 %and394 to i64
  %arrayidx396 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395
  %252 = load i32, i32* %arrayidx396, align 4
  %xor397 = xor i32 %xor392, %252
  %253 = load i32, i32* %t, align 4
  %shr398 = lshr i32 %253, 10
  %and399 = and i32 %shr398, 63
  %idxprom400 = zext i32 %and399 to i64
  %arrayidx401 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400
  %254 = load i32, i32* %arrayidx401, align 4
  %xor402 = xor i32 %xor397, %254
  %255 = load i32, i32* %t, align 4
  %shr403 = lshr i32 %255, 18
  %and404 = and i32 %shr403, 63
  %idxprom405 = zext i32 %and404 to i64
  %arrayidx406 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405
  %256 = load i32, i32* %arrayidx406, align 4
  %xor407 = xor i32 %xor402, %256
  %257 = load i32, i32* %t, align 4
  %shr408 = lshr i32 %257, 26
  %and409 = and i32 %shr408, 63
  %idxprom410 = zext i32 %and409 to i64
  %arrayidx411 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410
  %258 = load i32, i32* %arrayidx411, align 4
  %xor412 = xor i32 %xor407, %258
  %259 = load i32, i32* %r, align 4
  %xor413 = xor i32 %259, %xor412
  store i32 %xor413, i32* %r, align 4
  %260 = load i32, i32* %r, align 4
  %261 = load i32*, i32** %s, align 8
  %arrayidx414 = getelementptr inbounds i32, i32* %261, i64 16
  %262 = load i32, i32* %arrayidx414, align 4
  %xor415 = xor i32 %260, %262
  store i32 %xor415, i32* %u, align 4
  %263 = load i32, i32* %r, align 4
  %264 = load i32*, i32** %s, align 8
  %arrayidx416 = getelementptr inbounds i32, i32* %264, i64 17
  %265 = load i32, i32* %arrayidx416, align 4
  %xor417 = xor i32 %263, %265
  store i32 %xor417, i32* %t, align 4
  %266 = load i32, i32* %t, align 4
  %267 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %266) #5, !srcloc !12
  store i32 %267, i32* %ret418, align 4
  %268 = load i32, i32* %ret418, align 4
  store i32 %268, i32* %tmp419, align 4
  %269 = load i32, i32* %tmp419, align 4
  store i32 %269, i32* %t, align 4
  %270 = load i32, i32* %u, align 4
  %shr420 = lshr i32 %270, 2
  %and421 = and i32 %shr420, 63
  %idxprom422 = zext i32 %and421 to i64
  %arrayidx423 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422
  %271 = load i32, i32* %arrayidx423, align 4
  %272 = load i32, i32* %u, align 4
  %shr424 = lshr i32 %272, 10
  %and425 = and i32 %shr424, 63
  %idxprom426 = zext i32 %and425 to i64
  %arrayidx427 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426
  %273 = load i32, i32* %arrayidx427, align 4
  %xor428 = xor i32 %271, %273
  %274 = load i32, i32* %u, align 4
  %shr429 = lshr i32 %274, 18
  %and430 = and i32 %shr429, 63
  %idxprom431 = zext i32 %and430 to i64
  %arrayidx432 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431
  %275 = load i32, i32* %arrayidx432, align 4
  %xor433 = xor i32 %xor428, %275
  %276 = load i32, i32* %u, align 4
  %shr434 = lshr i32 %276, 26
  %and435 = and i32 %shr434, 63
  %idxprom436 = zext i32 %and435 to i64
  %arrayidx437 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436
  %277 = load i32, i32* %arrayidx437, align 4
  %xor438 = xor i32 %xor433, %277
  %278 = load i32, i32* %t, align 4
  %shr439 = lshr i32 %278, 2
  %and440 = and i32 %shr439, 63
  %idxprom441 = zext i32 %and440 to i64
  %arrayidx442 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441
  %279 = load i32, i32* %arrayidx442, align 4
  %xor443 = xor i32 %xor438, %279
  %280 = load i32, i32* %t, align 4
  %shr444 = lshr i32 %280, 10
  %and445 = and i32 %shr444, 63
  %idxprom446 = zext i32 %and445 to i64
  %arrayidx447 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446
  %281 = load i32, i32* %arrayidx447, align 4
  %xor448 = xor i32 %xor443, %281
  %282 = load i32, i32* %t, align 4
  %shr449 = lshr i32 %282, 18
  %and450 = and i32 %shr449, 63
  %idxprom451 = zext i32 %and450 to i64
  %arrayidx452 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451
  %283 = load i32, i32* %arrayidx452, align 4
  %xor453 = xor i32 %xor448, %283
  %284 = load i32, i32* %t, align 4
  %shr454 = lshr i32 %284, 26
  %and455 = and i32 %shr454, 63
  %idxprom456 = zext i32 %and455 to i64
  %arrayidx457 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456
  %285 = load i32, i32* %arrayidx457, align 4
  %xor458 = xor i32 %xor453, %285
  %286 = load i32, i32* %l, align 4
  %xor459 = xor i32 %286, %xor458
  store i32 %xor459, i32* %l, align 4
  %287 = load i32, i32* %l, align 4
  %288 = load i32*, i32** %s, align 8
  %arrayidx460 = getelementptr inbounds i32, i32* %288, i64 18
  %289 = load i32, i32* %arrayidx460, align 4
  %xor461 = xor i32 %287, %289
  store i32 %xor461, i32* %u, align 4
  %290 = load i32, i32* %l, align 4
  %291 = load i32*, i32** %s, align 8
  %arrayidx462 = getelementptr inbounds i32, i32* %291, i64 19
  %292 = load i32, i32* %arrayidx462, align 4
  %xor463 = xor i32 %290, %292
  store i32 %xor463, i32* %t, align 4
  %293 = load i32, i32* %t, align 4
  %294 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %293) #5, !srcloc !13
  store i32 %294, i32* %ret464, align 4
  %295 = load i32, i32* %ret464, align 4
  store i32 %295, i32* %tmp465, align 4
  %296 = load i32, i32* %tmp465, align 4
  store i32 %296, i32* %t, align 4
  %297 = load i32, i32* %u, align 4
  %shr466 = lshr i32 %297, 2
  %and467 = and i32 %shr466, 63
  %idxprom468 = zext i32 %and467 to i64
  %arrayidx469 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468
  %298 = load i32, i32* %arrayidx469, align 4
  %299 = load i32, i32* %u, align 4
  %shr470 = lshr i32 %299, 10
  %and471 = and i32 %shr470, 63
  %idxprom472 = zext i32 %and471 to i64
  %arrayidx473 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472
  %300 = load i32, i32* %arrayidx473, align 4
  %xor474 = xor i32 %298, %300
  %301 = load i32, i32* %u, align 4
  %shr475 = lshr i32 %301, 18
  %and476 = and i32 %shr475, 63
  %idxprom477 = zext i32 %and476 to i64
  %arrayidx478 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477
  %302 = load i32, i32* %arrayidx478, align 4
  %xor479 = xor i32 %xor474, %302
  %303 = load i32, i32* %u, align 4
  %shr480 = lshr i32 %303, 26
  %and481 = and i32 %shr480, 63
  %idxprom482 = zext i32 %and481 to i64
  %arrayidx483 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482
  %304 = load i32, i32* %arrayidx483, align 4
  %xor484 = xor i32 %xor479, %304
  %305 = load i32, i32* %t, align 4
  %shr485 = lshr i32 %305, 2
  %and486 = and i32 %shr485, 63
  %idxprom487 = zext i32 %and486 to i64
  %arrayidx488 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487
  %306 = load i32, i32* %arrayidx488, align 4
  %xor489 = xor i32 %xor484, %306
  %307 = load i32, i32* %t, align 4
  %shr490 = lshr i32 %307, 10
  %and491 = and i32 %shr490, 63
  %idxprom492 = zext i32 %and491 to i64
  %arrayidx493 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492
  %308 = load i32, i32* %arrayidx493, align 4
  %xor494 = xor i32 %xor489, %308
  %309 = load i32, i32* %t, align 4
  %shr495 = lshr i32 %309, 18
  %and496 = and i32 %shr495, 63
  %idxprom497 = zext i32 %and496 to i64
  %arrayidx498 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497
  %310 = load i32, i32* %arrayidx498, align 4
  %xor499 = xor i32 %xor494, %310
  %311 = load i32, i32* %t, align 4
  %shr500 = lshr i32 %311, 26
  %and501 = and i32 %shr500, 63
  %idxprom502 = zext i32 %and501 to i64
  %arrayidx503 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502
  %312 = load i32, i32* %arrayidx503, align 4
  %xor504 = xor i32 %xor499, %312
  %313 = load i32, i32* %r, align 4
  %xor505 = xor i32 %313, %xor504
  store i32 %xor505, i32* %r, align 4
  %314 = load i32, i32* %r, align 4
  %315 = load i32*, i32** %s, align 8
  %arrayidx506 = getelementptr inbounds i32, i32* %315, i64 20
  %316 = load i32, i32* %arrayidx506, align 4
  %xor507 = xor i32 %314, %316
  store i32 %xor507, i32* %u, align 4
  %317 = load i32, i32* %r, align 4
  %318 = load i32*, i32** %s, align 8
  %arrayidx508 = getelementptr inbounds i32, i32* %318, i64 21
  %319 = load i32, i32* %arrayidx508, align 4
  %xor509 = xor i32 %317, %319
  store i32 %xor509, i32* %t, align 4
  %320 = load i32, i32* %t, align 4
  %321 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %320) #5, !srcloc !14
  store i32 %321, i32* %ret510, align 4
  %322 = load i32, i32* %ret510, align 4
  store i32 %322, i32* %tmp511, align 4
  %323 = load i32, i32* %tmp511, align 4
  store i32 %323, i32* %t, align 4
  %324 = load i32, i32* %u, align 4
  %shr512 = lshr i32 %324, 2
  %and513 = and i32 %shr512, 63
  %idxprom514 = zext i32 %and513 to i64
  %arrayidx515 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514
  %325 = load i32, i32* %arrayidx515, align 4
  %326 = load i32, i32* %u, align 4
  %shr516 = lshr i32 %326, 10
  %and517 = and i32 %shr516, 63
  %idxprom518 = zext i32 %and517 to i64
  %arrayidx519 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518
  %327 = load i32, i32* %arrayidx519, align 4
  %xor520 = xor i32 %325, %327
  %328 = load i32, i32* %u, align 4
  %shr521 = lshr i32 %328, 18
  %and522 = and i32 %shr521, 63
  %idxprom523 = zext i32 %and522 to i64
  %arrayidx524 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523
  %329 = load i32, i32* %arrayidx524, align 4
  %xor525 = xor i32 %xor520, %329
  %330 = load i32, i32* %u, align 4
  %shr526 = lshr i32 %330, 26
  %and527 = and i32 %shr526, 63
  %idxprom528 = zext i32 %and527 to i64
  %arrayidx529 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528
  %331 = load i32, i32* %arrayidx529, align 4
  %xor530 = xor i32 %xor525, %331
  %332 = load i32, i32* %t, align 4
  %shr531 = lshr i32 %332, 2
  %and532 = and i32 %shr531, 63
  %idxprom533 = zext i32 %and532 to i64
  %arrayidx534 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533
  %333 = load i32, i32* %arrayidx534, align 4
  %xor535 = xor i32 %xor530, %333
  %334 = load i32, i32* %t, align 4
  %shr536 = lshr i32 %334, 10
  %and537 = and i32 %shr536, 63
  %idxprom538 = zext i32 %and537 to i64
  %arrayidx539 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538
  %335 = load i32, i32* %arrayidx539, align 4
  %xor540 = xor i32 %xor535, %335
  %336 = load i32, i32* %t, align 4
  %shr541 = lshr i32 %336, 18
  %and542 = and i32 %shr541, 63
  %idxprom543 = zext i32 %and542 to i64
  %arrayidx544 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543
  %337 = load i32, i32* %arrayidx544, align 4
  %xor545 = xor i32 %xor540, %337
  %338 = load i32, i32* %t, align 4
  %shr546 = lshr i32 %338, 26
  %and547 = and i32 %shr546, 63
  %idxprom548 = zext i32 %and547 to i64
  %arrayidx549 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548
  %339 = load i32, i32* %arrayidx549, align 4
  %xor550 = xor i32 %xor545, %339
  %340 = load i32, i32* %l, align 4
  %xor551 = xor i32 %340, %xor550
  store i32 %xor551, i32* %l, align 4
  %341 = load i32, i32* %l, align 4
  %342 = load i32*, i32** %s, align 8
  %arrayidx552 = getelementptr inbounds i32, i32* %342, i64 22
  %343 = load i32, i32* %arrayidx552, align 4
  %xor553 = xor i32 %341, %343
  store i32 %xor553, i32* %u, align 4
  %344 = load i32, i32* %l, align 4
  %345 = load i32*, i32** %s, align 8
  %arrayidx554 = getelementptr inbounds i32, i32* %345, i64 23
  %346 = load i32, i32* %arrayidx554, align 4
  %xor555 = xor i32 %344, %346
  store i32 %xor555, i32* %t, align 4
  %347 = load i32, i32* %t, align 4
  %348 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %347) #5, !srcloc !15
  store i32 %348, i32* %ret556, align 4
  %349 = load i32, i32* %ret556, align 4
  store i32 %349, i32* %tmp557, align 4
  %350 = load i32, i32* %tmp557, align 4
  store i32 %350, i32* %t, align 4
  %351 = load i32, i32* %u, align 4
  %shr558 = lshr i32 %351, 2
  %and559 = and i32 %shr558, 63
  %idxprom560 = zext i32 %and559 to i64
  %arrayidx561 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560
  %352 = load i32, i32* %arrayidx561, align 4
  %353 = load i32, i32* %u, align 4
  %shr562 = lshr i32 %353, 10
  %and563 = and i32 %shr562, 63
  %idxprom564 = zext i32 %and563 to i64
  %arrayidx565 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564
  %354 = load i32, i32* %arrayidx565, align 4
  %xor566 = xor i32 %352, %354
  %355 = load i32, i32* %u, align 4
  %shr567 = lshr i32 %355, 18
  %and568 = and i32 %shr567, 63
  %idxprom569 = zext i32 %and568 to i64
  %arrayidx570 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569
  %356 = load i32, i32* %arrayidx570, align 4
  %xor571 = xor i32 %xor566, %356
  %357 = load i32, i32* %u, align 4
  %shr572 = lshr i32 %357, 26
  %and573 = and i32 %shr572, 63
  %idxprom574 = zext i32 %and573 to i64
  %arrayidx575 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574
  %358 = load i32, i32* %arrayidx575, align 4
  %xor576 = xor i32 %xor571, %358
  %359 = load i32, i32* %t, align 4
  %shr577 = lshr i32 %359, 2
  %and578 = and i32 %shr577, 63
  %idxprom579 = zext i32 %and578 to i64
  %arrayidx580 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579
  %360 = load i32, i32* %arrayidx580, align 4
  %xor581 = xor i32 %xor576, %360
  %361 = load i32, i32* %t, align 4
  %shr582 = lshr i32 %361, 10
  %and583 = and i32 %shr582, 63
  %idxprom584 = zext i32 %and583 to i64
  %arrayidx585 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584
  %362 = load i32, i32* %arrayidx585, align 4
  %xor586 = xor i32 %xor581, %362
  %363 = load i32, i32* %t, align 4
  %shr587 = lshr i32 %363, 18
  %and588 = and i32 %shr587, 63
  %idxprom589 = zext i32 %and588 to i64
  %arrayidx590 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589
  %364 = load i32, i32* %arrayidx590, align 4
  %xor591 = xor i32 %xor586, %364
  %365 = load i32, i32* %t, align 4
  %shr592 = lshr i32 %365, 26
  %and593 = and i32 %shr592, 63
  %idxprom594 = zext i32 %and593 to i64
  %arrayidx595 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594
  %366 = load i32, i32* %arrayidx595, align 4
  %xor596 = xor i32 %xor591, %366
  %367 = load i32, i32* %r, align 4
  %xor597 = xor i32 %367, %xor596
  store i32 %xor597, i32* %r, align 4
  %368 = load i32, i32* %r, align 4
  %369 = load i32*, i32** %s, align 8
  %arrayidx598 = getelementptr inbounds i32, i32* %369, i64 24
  %370 = load i32, i32* %arrayidx598, align 4
  %xor599 = xor i32 %368, %370
  store i32 %xor599, i32* %u, align 4
  %371 = load i32, i32* %r, align 4
  %372 = load i32*, i32** %s, align 8
  %arrayidx600 = getelementptr inbounds i32, i32* %372, i64 25
  %373 = load i32, i32* %arrayidx600, align 4
  %xor601 = xor i32 %371, %373
  store i32 %xor601, i32* %t, align 4
  %374 = load i32, i32* %t, align 4
  %375 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %374) #5, !srcloc !16
  store i32 %375, i32* %ret602, align 4
  %376 = load i32, i32* %ret602, align 4
  store i32 %376, i32* %tmp603, align 4
  %377 = load i32, i32* %tmp603, align 4
  store i32 %377, i32* %t, align 4
  %378 = load i32, i32* %u, align 4
  %shr604 = lshr i32 %378, 2
  %and605 = and i32 %shr604, 63
  %idxprom606 = zext i32 %and605 to i64
  %arrayidx607 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606
  %379 = load i32, i32* %arrayidx607, align 4
  %380 = load i32, i32* %u, align 4
  %shr608 = lshr i32 %380, 10
  %and609 = and i32 %shr608, 63
  %idxprom610 = zext i32 %and609 to i64
  %arrayidx611 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610
  %381 = load i32, i32* %arrayidx611, align 4
  %xor612 = xor i32 %379, %381
  %382 = load i32, i32* %u, align 4
  %shr613 = lshr i32 %382, 18
  %and614 = and i32 %shr613, 63
  %idxprom615 = zext i32 %and614 to i64
  %arrayidx616 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615
  %383 = load i32, i32* %arrayidx616, align 4
  %xor617 = xor i32 %xor612, %383
  %384 = load i32, i32* %u, align 4
  %shr618 = lshr i32 %384, 26
  %and619 = and i32 %shr618, 63
  %idxprom620 = zext i32 %and619 to i64
  %arrayidx621 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620
  %385 = load i32, i32* %arrayidx621, align 4
  %xor622 = xor i32 %xor617, %385
  %386 = load i32, i32* %t, align 4
  %shr623 = lshr i32 %386, 2
  %and624 = and i32 %shr623, 63
  %idxprom625 = zext i32 %and624 to i64
  %arrayidx626 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625
  %387 = load i32, i32* %arrayidx626, align 4
  %xor627 = xor i32 %xor622, %387
  %388 = load i32, i32* %t, align 4
  %shr628 = lshr i32 %388, 10
  %and629 = and i32 %shr628, 63
  %idxprom630 = zext i32 %and629 to i64
  %arrayidx631 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630
  %389 = load i32, i32* %arrayidx631, align 4
  %xor632 = xor i32 %xor627, %389
  %390 = load i32, i32* %t, align 4
  %shr633 = lshr i32 %390, 18
  %and634 = and i32 %shr633, 63
  %idxprom635 = zext i32 %and634 to i64
  %arrayidx636 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635
  %391 = load i32, i32* %arrayidx636, align 4
  %xor637 = xor i32 %xor632, %391
  %392 = load i32, i32* %t, align 4
  %shr638 = lshr i32 %392, 26
  %and639 = and i32 %shr638, 63
  %idxprom640 = zext i32 %and639 to i64
  %arrayidx641 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640
  %393 = load i32, i32* %arrayidx641, align 4
  %xor642 = xor i32 %xor637, %393
  %394 = load i32, i32* %l, align 4
  %xor643 = xor i32 %394, %xor642
  store i32 %xor643, i32* %l, align 4
  %395 = load i32, i32* %l, align 4
  %396 = load i32*, i32** %s, align 8
  %arrayidx644 = getelementptr inbounds i32, i32* %396, i64 26
  %397 = load i32, i32* %arrayidx644, align 4
  %xor645 = xor i32 %395, %397
  store i32 %xor645, i32* %u, align 4
  %398 = load i32, i32* %l, align 4
  %399 = load i32*, i32** %s, align 8
  %arrayidx646 = getelementptr inbounds i32, i32* %399, i64 27
  %400 = load i32, i32* %arrayidx646, align 4
  %xor647 = xor i32 %398, %400
  store i32 %xor647, i32* %t, align 4
  %401 = load i32, i32* %t, align 4
  %402 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %401) #5, !srcloc !17
  store i32 %402, i32* %ret648, align 4
  %403 = load i32, i32* %ret648, align 4
  store i32 %403, i32* %tmp649, align 4
  %404 = load i32, i32* %tmp649, align 4
  store i32 %404, i32* %t, align 4
  %405 = load i32, i32* %u, align 4
  %shr650 = lshr i32 %405, 2
  %and651 = and i32 %shr650, 63
  %idxprom652 = zext i32 %and651 to i64
  %arrayidx653 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652
  %406 = load i32, i32* %arrayidx653, align 4
  %407 = load i32, i32* %u, align 4
  %shr654 = lshr i32 %407, 10
  %and655 = and i32 %shr654, 63
  %idxprom656 = zext i32 %and655 to i64
  %arrayidx657 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656
  %408 = load i32, i32* %arrayidx657, align 4
  %xor658 = xor i32 %406, %408
  %409 = load i32, i32* %u, align 4
  %shr659 = lshr i32 %409, 18
  %and660 = and i32 %shr659, 63
  %idxprom661 = zext i32 %and660 to i64
  %arrayidx662 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661
  %410 = load i32, i32* %arrayidx662, align 4
  %xor663 = xor i32 %xor658, %410
  %411 = load i32, i32* %u, align 4
  %shr664 = lshr i32 %411, 26
  %and665 = and i32 %shr664, 63
  %idxprom666 = zext i32 %and665 to i64
  %arrayidx667 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666
  %412 = load i32, i32* %arrayidx667, align 4
  %xor668 = xor i32 %xor663, %412
  %413 = load i32, i32* %t, align 4
  %shr669 = lshr i32 %413, 2
  %and670 = and i32 %shr669, 63
  %idxprom671 = zext i32 %and670 to i64
  %arrayidx672 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671
  %414 = load i32, i32* %arrayidx672, align 4
  %xor673 = xor i32 %xor668, %414
  %415 = load i32, i32* %t, align 4
  %shr674 = lshr i32 %415, 10
  %and675 = and i32 %shr674, 63
  %idxprom676 = zext i32 %and675 to i64
  %arrayidx677 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676
  %416 = load i32, i32* %arrayidx677, align 4
  %xor678 = xor i32 %xor673, %416
  %417 = load i32, i32* %t, align 4
  %shr679 = lshr i32 %417, 18
  %and680 = and i32 %shr679, 63
  %idxprom681 = zext i32 %and680 to i64
  %arrayidx682 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681
  %418 = load i32, i32* %arrayidx682, align 4
  %xor683 = xor i32 %xor678, %418
  %419 = load i32, i32* %t, align 4
  %shr684 = lshr i32 %419, 26
  %and685 = and i32 %shr684, 63
  %idxprom686 = zext i32 %and685 to i64
  %arrayidx687 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686
  %420 = load i32, i32* %arrayidx687, align 4
  %xor688 = xor i32 %xor683, %420
  %421 = load i32, i32* %r, align 4
  %xor689 = xor i32 %421, %xor688
  store i32 %xor689, i32* %r, align 4
  %422 = load i32, i32* %r, align 4
  %423 = load i32*, i32** %s, align 8
  %arrayidx690 = getelementptr inbounds i32, i32* %423, i64 28
  %424 = load i32, i32* %arrayidx690, align 4
  %xor691 = xor i32 %422, %424
  store i32 %xor691, i32* %u, align 4
  %425 = load i32, i32* %r, align 4
  %426 = load i32*, i32** %s, align 8
  %arrayidx692 = getelementptr inbounds i32, i32* %426, i64 29
  %427 = load i32, i32* %arrayidx692, align 4
  %xor693 = xor i32 %425, %427
  store i32 %xor693, i32* %t, align 4
  %428 = load i32, i32* %t, align 4
  %429 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %428) #5, !srcloc !18
  store i32 %429, i32* %ret694, align 4
  %430 = load i32, i32* %ret694, align 4
  store i32 %430, i32* %tmp695, align 4
  %431 = load i32, i32* %tmp695, align 4
  store i32 %431, i32* %t, align 4
  %432 = load i32, i32* %u, align 4
  %shr696 = lshr i32 %432, 2
  %and697 = and i32 %shr696, 63
  %idxprom698 = zext i32 %and697 to i64
  %arrayidx699 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698
  %433 = load i32, i32* %arrayidx699, align 4
  %434 = load i32, i32* %u, align 4
  %shr700 = lshr i32 %434, 10
  %and701 = and i32 %shr700, 63
  %idxprom702 = zext i32 %and701 to i64
  %arrayidx703 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702
  %435 = load i32, i32* %arrayidx703, align 4
  %xor704 = xor i32 %433, %435
  %436 = load i32, i32* %u, align 4
  %shr705 = lshr i32 %436, 18
  %and706 = and i32 %shr705, 63
  %idxprom707 = zext i32 %and706 to i64
  %arrayidx708 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707
  %437 = load i32, i32* %arrayidx708, align 4
  %xor709 = xor i32 %xor704, %437
  %438 = load i32, i32* %u, align 4
  %shr710 = lshr i32 %438, 26
  %and711 = and i32 %shr710, 63
  %idxprom712 = zext i32 %and711 to i64
  %arrayidx713 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712
  %439 = load i32, i32* %arrayidx713, align 4
  %xor714 = xor i32 %xor709, %439
  %440 = load i32, i32* %t, align 4
  %shr715 = lshr i32 %440, 2
  %and716 = and i32 %shr715, 63
  %idxprom717 = zext i32 %and716 to i64
  %arrayidx718 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717
  %441 = load i32, i32* %arrayidx718, align 4
  %xor719 = xor i32 %xor714, %441
  %442 = load i32, i32* %t, align 4
  %shr720 = lshr i32 %442, 10
  %and721 = and i32 %shr720, 63
  %idxprom722 = zext i32 %and721 to i64
  %arrayidx723 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722
  %443 = load i32, i32* %arrayidx723, align 4
  %xor724 = xor i32 %xor719, %443
  %444 = load i32, i32* %t, align 4
  %shr725 = lshr i32 %444, 18
  %and726 = and i32 %shr725, 63
  %idxprom727 = zext i32 %and726 to i64
  %arrayidx728 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727
  %445 = load i32, i32* %arrayidx728, align 4
  %xor729 = xor i32 %xor724, %445
  %446 = load i32, i32* %t, align 4
  %shr730 = lshr i32 %446, 26
  %and731 = and i32 %shr730, 63
  %idxprom732 = zext i32 %and731 to i64
  %arrayidx733 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732
  %447 = load i32, i32* %arrayidx733, align 4
  %xor734 = xor i32 %xor729, %447
  %448 = load i32, i32* %l, align 4
  %xor735 = xor i32 %448, %xor734
  store i32 %xor735, i32* %l, align 4
  %449 = load i32, i32* %l, align 4
  %450 = load i32*, i32** %s, align 8
  %arrayidx736 = getelementptr inbounds i32, i32* %450, i64 30
  %451 = load i32, i32* %arrayidx736, align 4
  %xor737 = xor i32 %449, %451
  store i32 %xor737, i32* %u, align 4
  %452 = load i32, i32* %l, align 4
  %453 = load i32*, i32** %s, align 8
  %arrayidx738 = getelementptr inbounds i32, i32* %453, i64 31
  %454 = load i32, i32* %arrayidx738, align 4
  %xor739 = xor i32 %452, %454
  store i32 %xor739, i32* %t, align 4
  %455 = load i32, i32* %t, align 4
  %456 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %455) #5, !srcloc !19
  store i32 %456, i32* %ret740, align 4
  %457 = load i32, i32* %ret740, align 4
  store i32 %457, i32* %tmp741, align 4
  %458 = load i32, i32* %tmp741, align 4
  store i32 %458, i32* %t, align 4
  %459 = load i32, i32* %u, align 4
  %shr742 = lshr i32 %459, 2
  %and743 = and i32 %shr742, 63
  %idxprom744 = zext i32 %and743 to i64
  %arrayidx745 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744
  %460 = load i32, i32* %arrayidx745, align 4
  %461 = load i32, i32* %u, align 4
  %shr746 = lshr i32 %461, 10
  %and747 = and i32 %shr746, 63
  %idxprom748 = zext i32 %and747 to i64
  %arrayidx749 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748
  %462 = load i32, i32* %arrayidx749, align 4
  %xor750 = xor i32 %460, %462
  %463 = load i32, i32* %u, align 4
  %shr751 = lshr i32 %463, 18
  %and752 = and i32 %shr751, 63
  %idxprom753 = zext i32 %and752 to i64
  %arrayidx754 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753
  %464 = load i32, i32* %arrayidx754, align 4
  %xor755 = xor i32 %xor750, %464
  %465 = load i32, i32* %u, align 4
  %shr756 = lshr i32 %465, 26
  %and757 = and i32 %shr756, 63
  %idxprom758 = zext i32 %and757 to i64
  %arrayidx759 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758
  %466 = load i32, i32* %arrayidx759, align 4
  %xor760 = xor i32 %xor755, %466
  %467 = load i32, i32* %t, align 4
  %shr761 = lshr i32 %467, 2
  %and762 = and i32 %shr761, 63
  %idxprom763 = zext i32 %and762 to i64
  %arrayidx764 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763
  %468 = load i32, i32* %arrayidx764, align 4
  %xor765 = xor i32 %xor760, %468
  %469 = load i32, i32* %t, align 4
  %shr766 = lshr i32 %469, 10
  %and767 = and i32 %shr766, 63
  %idxprom768 = zext i32 %and767 to i64
  %arrayidx769 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768
  %470 = load i32, i32* %arrayidx769, align 4
  %xor770 = xor i32 %xor765, %470
  %471 = load i32, i32* %t, align 4
  %shr771 = lshr i32 %471, 18
  %and772 = and i32 %shr771, 63
  %idxprom773 = zext i32 %and772 to i64
  %arrayidx774 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773
  %472 = load i32, i32* %arrayidx774, align 4
  %xor775 = xor i32 %xor770, %472
  %473 = load i32, i32* %t, align 4
  %shr776 = lshr i32 %473, 26
  %and777 = and i32 %shr776, 63
  %idxprom778 = zext i32 %and777 to i64
  %arrayidx779 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778
  %474 = load i32, i32* %arrayidx779, align 4
  %xor780 = xor i32 %xor775, %474
  %475 = load i32, i32* %r, align 4
  %xor781 = xor i32 %475, %xor780
  store i32 %xor781, i32* %r, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %476 = load i32, i32* %r, align 4
  %477 = load i32*, i32** %s, align 8
  %arrayidx782 = getelementptr inbounds i32, i32* %477, i64 30
  %478 = load i32, i32* %arrayidx782, align 4
  %xor783 = xor i32 %476, %478
  store i32 %xor783, i32* %u, align 4
  %479 = load i32, i32* %r, align 4
  %480 = load i32*, i32** %s, align 8
  %arrayidx784 = getelementptr inbounds i32, i32* %480, i64 31
  %481 = load i32, i32* %arrayidx784, align 4
  %xor785 = xor i32 %479, %481
  store i32 %xor785, i32* %t, align 4
  %482 = load i32, i32* %t, align 4
  %483 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %482) #5, !srcloc !20
  store i32 %483, i32* %ret786, align 4
  %484 = load i32, i32* %ret786, align 4
  store i32 %484, i32* %tmp787, align 4
  %485 = load i32, i32* %tmp787, align 4
  store i32 %485, i32* %t, align 4
  %486 = load i32, i32* %u, align 4
  %shr788 = lshr i32 %486, 2
  %and789 = and i32 %shr788, 63
  %idxprom790 = zext i32 %and789 to i64
  %arrayidx791 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790
  %487 = load i32, i32* %arrayidx791, align 4
  %488 = load i32, i32* %u, align 4
  %shr792 = lshr i32 %488, 10
  %and793 = and i32 %shr792, 63
  %idxprom794 = zext i32 %and793 to i64
  %arrayidx795 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794
  %489 = load i32, i32* %arrayidx795, align 4
  %xor796 = xor i32 %487, %489
  %490 = load i32, i32* %u, align 4
  %shr797 = lshr i32 %490, 18
  %and798 = and i32 %shr797, 63
  %idxprom799 = zext i32 %and798 to i64
  %arrayidx800 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799
  %491 = load i32, i32* %arrayidx800, align 4
  %xor801 = xor i32 %xor796, %491
  %492 = load i32, i32* %u, align 4
  %shr802 = lshr i32 %492, 26
  %and803 = and i32 %shr802, 63
  %idxprom804 = zext i32 %and803 to i64
  %arrayidx805 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804
  %493 = load i32, i32* %arrayidx805, align 4
  %xor806 = xor i32 %xor801, %493
  %494 = load i32, i32* %t, align 4
  %shr807 = lshr i32 %494, 2
  %and808 = and i32 %shr807, 63
  %idxprom809 = zext i32 %and808 to i64
  %arrayidx810 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809
  %495 = load i32, i32* %arrayidx810, align 4
  %xor811 = xor i32 %xor806, %495
  %496 = load i32, i32* %t, align 4
  %shr812 = lshr i32 %496, 10
  %and813 = and i32 %shr812, 63
  %idxprom814 = zext i32 %and813 to i64
  %arrayidx815 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814
  %497 = load i32, i32* %arrayidx815, align 4
  %xor816 = xor i32 %xor811, %497
  %498 = load i32, i32* %t, align 4
  %shr817 = lshr i32 %498, 18
  %and818 = and i32 %shr817, 63
  %idxprom819 = zext i32 %and818 to i64
  %arrayidx820 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819
  %499 = load i32, i32* %arrayidx820, align 4
  %xor821 = xor i32 %xor816, %499
  %500 = load i32, i32* %t, align 4
  %shr822 = lshr i32 %500, 26
  %and823 = and i32 %shr822, 63
  %idxprom824 = zext i32 %and823 to i64
  %arrayidx825 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824
  %501 = load i32, i32* %arrayidx825, align 4
  %xor826 = xor i32 %xor821, %501
  %502 = load i32, i32* %l, align 4
  %xor827 = xor i32 %502, %xor826
  store i32 %xor827, i32* %l, align 4
  %503 = load i32, i32* %l, align 4
  %504 = load i32*, i32** %s, align 8
  %arrayidx828 = getelementptr inbounds i32, i32* %504, i64 28
  %505 = load i32, i32* %arrayidx828, align 4
  %xor829 = xor i32 %503, %505
  store i32 %xor829, i32* %u, align 4
  %506 = load i32, i32* %l, align 4
  %507 = load i32*, i32** %s, align 8
  %arrayidx830 = getelementptr inbounds i32, i32* %507, i64 29
  %508 = load i32, i32* %arrayidx830, align 4
  %xor831 = xor i32 %506, %508
  store i32 %xor831, i32* %t, align 4
  %509 = load i32, i32* %t, align 4
  %510 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %509) #5, !srcloc !21
  store i32 %510, i32* %ret832, align 4
  %511 = load i32, i32* %ret832, align 4
  store i32 %511, i32* %tmp833, align 4
  %512 = load i32, i32* %tmp833, align 4
  store i32 %512, i32* %t, align 4
  %513 = load i32, i32* %u, align 4
  %shr834 = lshr i32 %513, 2
  %and835 = and i32 %shr834, 63
  %idxprom836 = zext i32 %and835 to i64
  %arrayidx837 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836
  %514 = load i32, i32* %arrayidx837, align 4
  %515 = load i32, i32* %u, align 4
  %shr838 = lshr i32 %515, 10
  %and839 = and i32 %shr838, 63
  %idxprom840 = zext i32 %and839 to i64
  %arrayidx841 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840
  %516 = load i32, i32* %arrayidx841, align 4
  %xor842 = xor i32 %514, %516
  %517 = load i32, i32* %u, align 4
  %shr843 = lshr i32 %517, 18
  %and844 = and i32 %shr843, 63
  %idxprom845 = zext i32 %and844 to i64
  %arrayidx846 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845
  %518 = load i32, i32* %arrayidx846, align 4
  %xor847 = xor i32 %xor842, %518
  %519 = load i32, i32* %u, align 4
  %shr848 = lshr i32 %519, 26
  %and849 = and i32 %shr848, 63
  %idxprom850 = zext i32 %and849 to i64
  %arrayidx851 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850
  %520 = load i32, i32* %arrayidx851, align 4
  %xor852 = xor i32 %xor847, %520
  %521 = load i32, i32* %t, align 4
  %shr853 = lshr i32 %521, 2
  %and854 = and i32 %shr853, 63
  %idxprom855 = zext i32 %and854 to i64
  %arrayidx856 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855
  %522 = load i32, i32* %arrayidx856, align 4
  %xor857 = xor i32 %xor852, %522
  %523 = load i32, i32* %t, align 4
  %shr858 = lshr i32 %523, 10
  %and859 = and i32 %shr858, 63
  %idxprom860 = zext i32 %and859 to i64
  %arrayidx861 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860
  %524 = load i32, i32* %arrayidx861, align 4
  %xor862 = xor i32 %xor857, %524
  %525 = load i32, i32* %t, align 4
  %shr863 = lshr i32 %525, 18
  %and864 = and i32 %shr863, 63
  %idxprom865 = zext i32 %and864 to i64
  %arrayidx866 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865
  %526 = load i32, i32* %arrayidx866, align 4
  %xor867 = xor i32 %xor862, %526
  %527 = load i32, i32* %t, align 4
  %shr868 = lshr i32 %527, 26
  %and869 = and i32 %shr868, 63
  %idxprom870 = zext i32 %and869 to i64
  %arrayidx871 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870
  %528 = load i32, i32* %arrayidx871, align 4
  %xor872 = xor i32 %xor867, %528
  %529 = load i32, i32* %r, align 4
  %xor873 = xor i32 %529, %xor872
  store i32 %xor873, i32* %r, align 4
  %530 = load i32, i32* %r, align 4
  %531 = load i32*, i32** %s, align 8
  %arrayidx874 = getelementptr inbounds i32, i32* %531, i64 26
  %532 = load i32, i32* %arrayidx874, align 4
  %xor875 = xor i32 %530, %532
  store i32 %xor875, i32* %u, align 4
  %533 = load i32, i32* %r, align 4
  %534 = load i32*, i32** %s, align 8
  %arrayidx876 = getelementptr inbounds i32, i32* %534, i64 27
  %535 = load i32, i32* %arrayidx876, align 4
  %xor877 = xor i32 %533, %535
  store i32 %xor877, i32* %t, align 4
  %536 = load i32, i32* %t, align 4
  %537 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %536) #5, !srcloc !22
  store i32 %537, i32* %ret878, align 4
  %538 = load i32, i32* %ret878, align 4
  store i32 %538, i32* %tmp879, align 4
  %539 = load i32, i32* %tmp879, align 4
  store i32 %539, i32* %t, align 4
  %540 = load i32, i32* %u, align 4
  %shr880 = lshr i32 %540, 2
  %and881 = and i32 %shr880, 63
  %idxprom882 = zext i32 %and881 to i64
  %arrayidx883 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882
  %541 = load i32, i32* %arrayidx883, align 4
  %542 = load i32, i32* %u, align 4
  %shr884 = lshr i32 %542, 10
  %and885 = and i32 %shr884, 63
  %idxprom886 = zext i32 %and885 to i64
  %arrayidx887 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886
  %543 = load i32, i32* %arrayidx887, align 4
  %xor888 = xor i32 %541, %543
  %544 = load i32, i32* %u, align 4
  %shr889 = lshr i32 %544, 18
  %and890 = and i32 %shr889, 63
  %idxprom891 = zext i32 %and890 to i64
  %arrayidx892 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891
  %545 = load i32, i32* %arrayidx892, align 4
  %xor893 = xor i32 %xor888, %545
  %546 = load i32, i32* %u, align 4
  %shr894 = lshr i32 %546, 26
  %and895 = and i32 %shr894, 63
  %idxprom896 = zext i32 %and895 to i64
  %arrayidx897 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896
  %547 = load i32, i32* %arrayidx897, align 4
  %xor898 = xor i32 %xor893, %547
  %548 = load i32, i32* %t, align 4
  %shr899 = lshr i32 %548, 2
  %and900 = and i32 %shr899, 63
  %idxprom901 = zext i32 %and900 to i64
  %arrayidx902 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901
  %549 = load i32, i32* %arrayidx902, align 4
  %xor903 = xor i32 %xor898, %549
  %550 = load i32, i32* %t, align 4
  %shr904 = lshr i32 %550, 10
  %and905 = and i32 %shr904, 63
  %idxprom906 = zext i32 %and905 to i64
  %arrayidx907 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906
  %551 = load i32, i32* %arrayidx907, align 4
  %xor908 = xor i32 %xor903, %551
  %552 = load i32, i32* %t, align 4
  %shr909 = lshr i32 %552, 18
  %and910 = and i32 %shr909, 63
  %idxprom911 = zext i32 %and910 to i64
  %arrayidx912 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911
  %553 = load i32, i32* %arrayidx912, align 4
  %xor913 = xor i32 %xor908, %553
  %554 = load i32, i32* %t, align 4
  %shr914 = lshr i32 %554, 26
  %and915 = and i32 %shr914, 63
  %idxprom916 = zext i32 %and915 to i64
  %arrayidx917 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916
  %555 = load i32, i32* %arrayidx917, align 4
  %xor918 = xor i32 %xor913, %555
  %556 = load i32, i32* %l, align 4
  %xor919 = xor i32 %556, %xor918
  store i32 %xor919, i32* %l, align 4
  %557 = load i32, i32* %l, align 4
  %558 = load i32*, i32** %s, align 8
  %arrayidx920 = getelementptr inbounds i32, i32* %558, i64 24
  %559 = load i32, i32* %arrayidx920, align 4
  %xor921 = xor i32 %557, %559
  store i32 %xor921, i32* %u, align 4
  %560 = load i32, i32* %l, align 4
  %561 = load i32*, i32** %s, align 8
  %arrayidx922 = getelementptr inbounds i32, i32* %561, i64 25
  %562 = load i32, i32* %arrayidx922, align 4
  %xor923 = xor i32 %560, %562
  store i32 %xor923, i32* %t, align 4
  %563 = load i32, i32* %t, align 4
  %564 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %563) #5, !srcloc !23
  store i32 %564, i32* %ret924, align 4
  %565 = load i32, i32* %ret924, align 4
  store i32 %565, i32* %tmp925, align 4
  %566 = load i32, i32* %tmp925, align 4
  store i32 %566, i32* %t, align 4
  %567 = load i32, i32* %u, align 4
  %shr926 = lshr i32 %567, 2
  %and927 = and i32 %shr926, 63
  %idxprom928 = zext i32 %and927 to i64
  %arrayidx929 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928
  %568 = load i32, i32* %arrayidx929, align 4
  %569 = load i32, i32* %u, align 4
  %shr930 = lshr i32 %569, 10
  %and931 = and i32 %shr930, 63
  %idxprom932 = zext i32 %and931 to i64
  %arrayidx933 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932
  %570 = load i32, i32* %arrayidx933, align 4
  %xor934 = xor i32 %568, %570
  %571 = load i32, i32* %u, align 4
  %shr935 = lshr i32 %571, 18
  %and936 = and i32 %shr935, 63
  %idxprom937 = zext i32 %and936 to i64
  %arrayidx938 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937
  %572 = load i32, i32* %arrayidx938, align 4
  %xor939 = xor i32 %xor934, %572
  %573 = load i32, i32* %u, align 4
  %shr940 = lshr i32 %573, 26
  %and941 = and i32 %shr940, 63
  %idxprom942 = zext i32 %and941 to i64
  %arrayidx943 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942
  %574 = load i32, i32* %arrayidx943, align 4
  %xor944 = xor i32 %xor939, %574
  %575 = load i32, i32* %t, align 4
  %shr945 = lshr i32 %575, 2
  %and946 = and i32 %shr945, 63
  %idxprom947 = zext i32 %and946 to i64
  %arrayidx948 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947
  %576 = load i32, i32* %arrayidx948, align 4
  %xor949 = xor i32 %xor944, %576
  %577 = load i32, i32* %t, align 4
  %shr950 = lshr i32 %577, 10
  %and951 = and i32 %shr950, 63
  %idxprom952 = zext i32 %and951 to i64
  %arrayidx953 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952
  %578 = load i32, i32* %arrayidx953, align 4
  %xor954 = xor i32 %xor949, %578
  %579 = load i32, i32* %t, align 4
  %shr955 = lshr i32 %579, 18
  %and956 = and i32 %shr955, 63
  %idxprom957 = zext i32 %and956 to i64
  %arrayidx958 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957
  %580 = load i32, i32* %arrayidx958, align 4
  %xor959 = xor i32 %xor954, %580
  %581 = load i32, i32* %t, align 4
  %shr960 = lshr i32 %581, 26
  %and961 = and i32 %shr960, 63
  %idxprom962 = zext i32 %and961 to i64
  %arrayidx963 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962
  %582 = load i32, i32* %arrayidx963, align 4
  %xor964 = xor i32 %xor959, %582
  %583 = load i32, i32* %r, align 4
  %xor965 = xor i32 %583, %xor964
  store i32 %xor965, i32* %r, align 4
  %584 = load i32, i32* %r, align 4
  %585 = load i32*, i32** %s, align 8
  %arrayidx966 = getelementptr inbounds i32, i32* %585, i64 22
  %586 = load i32, i32* %arrayidx966, align 4
  %xor967 = xor i32 %584, %586
  store i32 %xor967, i32* %u, align 4
  %587 = load i32, i32* %r, align 4
  %588 = load i32*, i32** %s, align 8
  %arrayidx968 = getelementptr inbounds i32, i32* %588, i64 23
  %589 = load i32, i32* %arrayidx968, align 4
  %xor969 = xor i32 %587, %589
  store i32 %xor969, i32* %t, align 4
  %590 = load i32, i32* %t, align 4
  %591 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %590) #5, !srcloc !24
  store i32 %591, i32* %ret970, align 4
  %592 = load i32, i32* %ret970, align 4
  store i32 %592, i32* %tmp971, align 4
  %593 = load i32, i32* %tmp971, align 4
  store i32 %593, i32* %t, align 4
  %594 = load i32, i32* %u, align 4
  %shr972 = lshr i32 %594, 2
  %and973 = and i32 %shr972, 63
  %idxprom974 = zext i32 %and973 to i64
  %arrayidx975 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974
  %595 = load i32, i32* %arrayidx975, align 4
  %596 = load i32, i32* %u, align 4
  %shr976 = lshr i32 %596, 10
  %and977 = and i32 %shr976, 63
  %idxprom978 = zext i32 %and977 to i64
  %arrayidx979 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978
  %597 = load i32, i32* %arrayidx979, align 4
  %xor980 = xor i32 %595, %597
  %598 = load i32, i32* %u, align 4
  %shr981 = lshr i32 %598, 18
  %and982 = and i32 %shr981, 63
  %idxprom983 = zext i32 %and982 to i64
  %arrayidx984 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983
  %599 = load i32, i32* %arrayidx984, align 4
  %xor985 = xor i32 %xor980, %599
  %600 = load i32, i32* %u, align 4
  %shr986 = lshr i32 %600, 26
  %and987 = and i32 %shr986, 63
  %idxprom988 = zext i32 %and987 to i64
  %arrayidx989 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988
  %601 = load i32, i32* %arrayidx989, align 4
  %xor990 = xor i32 %xor985, %601
  %602 = load i32, i32* %t, align 4
  %shr991 = lshr i32 %602, 2
  %and992 = and i32 %shr991, 63
  %idxprom993 = zext i32 %and992 to i64
  %arrayidx994 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993
  %603 = load i32, i32* %arrayidx994, align 4
  %xor995 = xor i32 %xor990, %603
  %604 = load i32, i32* %t, align 4
  %shr996 = lshr i32 %604, 10
  %and997 = and i32 %shr996, 63
  %idxprom998 = zext i32 %and997 to i64
  %arrayidx999 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998
  %605 = load i32, i32* %arrayidx999, align 4
  %xor1000 = xor i32 %xor995, %605
  %606 = load i32, i32* %t, align 4
  %shr1001 = lshr i32 %606, 18
  %and1002 = and i32 %shr1001, 63
  %idxprom1003 = zext i32 %and1002 to i64
  %arrayidx1004 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003
  %607 = load i32, i32* %arrayidx1004, align 4
  %xor1005 = xor i32 %xor1000, %607
  %608 = load i32, i32* %t, align 4
  %shr1006 = lshr i32 %608, 26
  %and1007 = and i32 %shr1006, 63
  %idxprom1008 = zext i32 %and1007 to i64
  %arrayidx1009 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008
  %609 = load i32, i32* %arrayidx1009, align 4
  %xor1010 = xor i32 %xor1005, %609
  %610 = load i32, i32* %l, align 4
  %xor1011 = xor i32 %610, %xor1010
  store i32 %xor1011, i32* %l, align 4
  %611 = load i32, i32* %l, align 4
  %612 = load i32*, i32** %s, align 8
  %arrayidx1012 = getelementptr inbounds i32, i32* %612, i64 20
  %613 = load i32, i32* %arrayidx1012, align 4
  %xor1013 = xor i32 %611, %613
  store i32 %xor1013, i32* %u, align 4
  %614 = load i32, i32* %l, align 4
  %615 = load i32*, i32** %s, align 8
  %arrayidx1014 = getelementptr inbounds i32, i32* %615, i64 21
  %616 = load i32, i32* %arrayidx1014, align 4
  %xor1015 = xor i32 %614, %616
  store i32 %xor1015, i32* %t, align 4
  %617 = load i32, i32* %t, align 4
  %618 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %617) #5, !srcloc !25
  store i32 %618, i32* %ret1016, align 4
  %619 = load i32, i32* %ret1016, align 4
  store i32 %619, i32* %tmp1017, align 4
  %620 = load i32, i32* %tmp1017, align 4
  store i32 %620, i32* %t, align 4
  %621 = load i32, i32* %u, align 4
  %shr1018 = lshr i32 %621, 2
  %and1019 = and i32 %shr1018, 63
  %idxprom1020 = zext i32 %and1019 to i64
  %arrayidx1021 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020
  %622 = load i32, i32* %arrayidx1021, align 4
  %623 = load i32, i32* %u, align 4
  %shr1022 = lshr i32 %623, 10
  %and1023 = and i32 %shr1022, 63
  %idxprom1024 = zext i32 %and1023 to i64
  %arrayidx1025 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024
  %624 = load i32, i32* %arrayidx1025, align 4
  %xor1026 = xor i32 %622, %624
  %625 = load i32, i32* %u, align 4
  %shr1027 = lshr i32 %625, 18
  %and1028 = and i32 %shr1027, 63
  %idxprom1029 = zext i32 %and1028 to i64
  %arrayidx1030 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029
  %626 = load i32, i32* %arrayidx1030, align 4
  %xor1031 = xor i32 %xor1026, %626
  %627 = load i32, i32* %u, align 4
  %shr1032 = lshr i32 %627, 26
  %and1033 = and i32 %shr1032, 63
  %idxprom1034 = zext i32 %and1033 to i64
  %arrayidx1035 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034
  %628 = load i32, i32* %arrayidx1035, align 4
  %xor1036 = xor i32 %xor1031, %628
  %629 = load i32, i32* %t, align 4
  %shr1037 = lshr i32 %629, 2
  %and1038 = and i32 %shr1037, 63
  %idxprom1039 = zext i32 %and1038 to i64
  %arrayidx1040 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039
  %630 = load i32, i32* %arrayidx1040, align 4
  %xor1041 = xor i32 %xor1036, %630
  %631 = load i32, i32* %t, align 4
  %shr1042 = lshr i32 %631, 10
  %and1043 = and i32 %shr1042, 63
  %idxprom1044 = zext i32 %and1043 to i64
  %arrayidx1045 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044
  %632 = load i32, i32* %arrayidx1045, align 4
  %xor1046 = xor i32 %xor1041, %632
  %633 = load i32, i32* %t, align 4
  %shr1047 = lshr i32 %633, 18
  %and1048 = and i32 %shr1047, 63
  %idxprom1049 = zext i32 %and1048 to i64
  %arrayidx1050 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049
  %634 = load i32, i32* %arrayidx1050, align 4
  %xor1051 = xor i32 %xor1046, %634
  %635 = load i32, i32* %t, align 4
  %shr1052 = lshr i32 %635, 26
  %and1053 = and i32 %shr1052, 63
  %idxprom1054 = zext i32 %and1053 to i64
  %arrayidx1055 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054
  %636 = load i32, i32* %arrayidx1055, align 4
  %xor1056 = xor i32 %xor1051, %636
  %637 = load i32, i32* %r, align 4
  %xor1057 = xor i32 %637, %xor1056
  store i32 %xor1057, i32* %r, align 4
  %638 = load i32, i32* %r, align 4
  %639 = load i32*, i32** %s, align 8
  %arrayidx1058 = getelementptr inbounds i32, i32* %639, i64 18
  %640 = load i32, i32* %arrayidx1058, align 4
  %xor1059 = xor i32 %638, %640
  store i32 %xor1059, i32* %u, align 4
  %641 = load i32, i32* %r, align 4
  %642 = load i32*, i32** %s, align 8
  %arrayidx1060 = getelementptr inbounds i32, i32* %642, i64 19
  %643 = load i32, i32* %arrayidx1060, align 4
  %xor1061 = xor i32 %641, %643
  store i32 %xor1061, i32* %t, align 4
  %644 = load i32, i32* %t, align 4
  %645 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %644) #5, !srcloc !26
  store i32 %645, i32* %ret1062, align 4
  %646 = load i32, i32* %ret1062, align 4
  store i32 %646, i32* %tmp1063, align 4
  %647 = load i32, i32* %tmp1063, align 4
  store i32 %647, i32* %t, align 4
  %648 = load i32, i32* %u, align 4
  %shr1064 = lshr i32 %648, 2
  %and1065 = and i32 %shr1064, 63
  %idxprom1066 = zext i32 %and1065 to i64
  %arrayidx1067 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066
  %649 = load i32, i32* %arrayidx1067, align 4
  %650 = load i32, i32* %u, align 4
  %shr1068 = lshr i32 %650, 10
  %and1069 = and i32 %shr1068, 63
  %idxprom1070 = zext i32 %and1069 to i64
  %arrayidx1071 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070
  %651 = load i32, i32* %arrayidx1071, align 4
  %xor1072 = xor i32 %649, %651
  %652 = load i32, i32* %u, align 4
  %shr1073 = lshr i32 %652, 18
  %and1074 = and i32 %shr1073, 63
  %idxprom1075 = zext i32 %and1074 to i64
  %arrayidx1076 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075
  %653 = load i32, i32* %arrayidx1076, align 4
  %xor1077 = xor i32 %xor1072, %653
  %654 = load i32, i32* %u, align 4
  %shr1078 = lshr i32 %654, 26
  %and1079 = and i32 %shr1078, 63
  %idxprom1080 = zext i32 %and1079 to i64
  %arrayidx1081 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080
  %655 = load i32, i32* %arrayidx1081, align 4
  %xor1082 = xor i32 %xor1077, %655
  %656 = load i32, i32* %t, align 4
  %shr1083 = lshr i32 %656, 2
  %and1084 = and i32 %shr1083, 63
  %idxprom1085 = zext i32 %and1084 to i64
  %arrayidx1086 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085
  %657 = load i32, i32* %arrayidx1086, align 4
  %xor1087 = xor i32 %xor1082, %657
  %658 = load i32, i32* %t, align 4
  %shr1088 = lshr i32 %658, 10
  %and1089 = and i32 %shr1088, 63
  %idxprom1090 = zext i32 %and1089 to i64
  %arrayidx1091 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090
  %659 = load i32, i32* %arrayidx1091, align 4
  %xor1092 = xor i32 %xor1087, %659
  %660 = load i32, i32* %t, align 4
  %shr1093 = lshr i32 %660, 18
  %and1094 = and i32 %shr1093, 63
  %idxprom1095 = zext i32 %and1094 to i64
  %arrayidx1096 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095
  %661 = load i32, i32* %arrayidx1096, align 4
  %xor1097 = xor i32 %xor1092, %661
  %662 = load i32, i32* %t, align 4
  %shr1098 = lshr i32 %662, 26
  %and1099 = and i32 %shr1098, 63
  %idxprom1100 = zext i32 %and1099 to i64
  %arrayidx1101 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100
  %663 = load i32, i32* %arrayidx1101, align 4
  %xor1102 = xor i32 %xor1097, %663
  %664 = load i32, i32* %l, align 4
  %xor1103 = xor i32 %664, %xor1102
  store i32 %xor1103, i32* %l, align 4
  %665 = load i32, i32* %l, align 4
  %666 = load i32*, i32** %s, align 8
  %arrayidx1104 = getelementptr inbounds i32, i32* %666, i64 16
  %667 = load i32, i32* %arrayidx1104, align 4
  %xor1105 = xor i32 %665, %667
  store i32 %xor1105, i32* %u, align 4
  %668 = load i32, i32* %l, align 4
  %669 = load i32*, i32** %s, align 8
  %arrayidx1106 = getelementptr inbounds i32, i32* %669, i64 17
  %670 = load i32, i32* %arrayidx1106, align 4
  %xor1107 = xor i32 %668, %670
  store i32 %xor1107, i32* %t, align 4
  %671 = load i32, i32* %t, align 4
  %672 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %671) #5, !srcloc !27
  store i32 %672, i32* %ret1108, align 4
  %673 = load i32, i32* %ret1108, align 4
  store i32 %673, i32* %tmp1109, align 4
  %674 = load i32, i32* %tmp1109, align 4
  store i32 %674, i32* %t, align 4
  %675 = load i32, i32* %u, align 4
  %shr1110 = lshr i32 %675, 2
  %and1111 = and i32 %shr1110, 63
  %idxprom1112 = zext i32 %and1111 to i64
  %arrayidx1113 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112
  %676 = load i32, i32* %arrayidx1113, align 4
  %677 = load i32, i32* %u, align 4
  %shr1114 = lshr i32 %677, 10
  %and1115 = and i32 %shr1114, 63
  %idxprom1116 = zext i32 %and1115 to i64
  %arrayidx1117 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116
  %678 = load i32, i32* %arrayidx1117, align 4
  %xor1118 = xor i32 %676, %678
  %679 = load i32, i32* %u, align 4
  %shr1119 = lshr i32 %679, 18
  %and1120 = and i32 %shr1119, 63
  %idxprom1121 = zext i32 %and1120 to i64
  %arrayidx1122 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121
  %680 = load i32, i32* %arrayidx1122, align 4
  %xor1123 = xor i32 %xor1118, %680
  %681 = load i32, i32* %u, align 4
  %shr1124 = lshr i32 %681, 26
  %and1125 = and i32 %shr1124, 63
  %idxprom1126 = zext i32 %and1125 to i64
  %arrayidx1127 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126
  %682 = load i32, i32* %arrayidx1127, align 4
  %xor1128 = xor i32 %xor1123, %682
  %683 = load i32, i32* %t, align 4
  %shr1129 = lshr i32 %683, 2
  %and1130 = and i32 %shr1129, 63
  %idxprom1131 = zext i32 %and1130 to i64
  %arrayidx1132 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131
  %684 = load i32, i32* %arrayidx1132, align 4
  %xor1133 = xor i32 %xor1128, %684
  %685 = load i32, i32* %t, align 4
  %shr1134 = lshr i32 %685, 10
  %and1135 = and i32 %shr1134, 63
  %idxprom1136 = zext i32 %and1135 to i64
  %arrayidx1137 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136
  %686 = load i32, i32* %arrayidx1137, align 4
  %xor1138 = xor i32 %xor1133, %686
  %687 = load i32, i32* %t, align 4
  %shr1139 = lshr i32 %687, 18
  %and1140 = and i32 %shr1139, 63
  %idxprom1141 = zext i32 %and1140 to i64
  %arrayidx1142 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141
  %688 = load i32, i32* %arrayidx1142, align 4
  %xor1143 = xor i32 %xor1138, %688
  %689 = load i32, i32* %t, align 4
  %shr1144 = lshr i32 %689, 26
  %and1145 = and i32 %shr1144, 63
  %idxprom1146 = zext i32 %and1145 to i64
  %arrayidx1147 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146
  %690 = load i32, i32* %arrayidx1147, align 4
  %xor1148 = xor i32 %xor1143, %690
  %691 = load i32, i32* %r, align 4
  %xor1149 = xor i32 %691, %xor1148
  store i32 %xor1149, i32* %r, align 4
  %692 = load i32, i32* %r, align 4
  %693 = load i32*, i32** %s, align 8
  %arrayidx1150 = getelementptr inbounds i32, i32* %693, i64 14
  %694 = load i32, i32* %arrayidx1150, align 4
  %xor1151 = xor i32 %692, %694
  store i32 %xor1151, i32* %u, align 4
  %695 = load i32, i32* %r, align 4
  %696 = load i32*, i32** %s, align 8
  %arrayidx1152 = getelementptr inbounds i32, i32* %696, i64 15
  %697 = load i32, i32* %arrayidx1152, align 4
  %xor1153 = xor i32 %695, %697
  store i32 %xor1153, i32* %t, align 4
  %698 = load i32, i32* %t, align 4
  %699 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %698) #5, !srcloc !28
  store i32 %699, i32* %ret1154, align 4
  %700 = load i32, i32* %ret1154, align 4
  store i32 %700, i32* %tmp1155, align 4
  %701 = load i32, i32* %tmp1155, align 4
  store i32 %701, i32* %t, align 4
  %702 = load i32, i32* %u, align 4
  %shr1156 = lshr i32 %702, 2
  %and1157 = and i32 %shr1156, 63
  %idxprom1158 = zext i32 %and1157 to i64
  %arrayidx1159 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158
  %703 = load i32, i32* %arrayidx1159, align 4
  %704 = load i32, i32* %u, align 4
  %shr1160 = lshr i32 %704, 10
  %and1161 = and i32 %shr1160, 63
  %idxprom1162 = zext i32 %and1161 to i64
  %arrayidx1163 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162
  %705 = load i32, i32* %arrayidx1163, align 4
  %xor1164 = xor i32 %703, %705
  %706 = load i32, i32* %u, align 4
  %shr1165 = lshr i32 %706, 18
  %and1166 = and i32 %shr1165, 63
  %idxprom1167 = zext i32 %and1166 to i64
  %arrayidx1168 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167
  %707 = load i32, i32* %arrayidx1168, align 4
  %xor1169 = xor i32 %xor1164, %707
  %708 = load i32, i32* %u, align 4
  %shr1170 = lshr i32 %708, 26
  %and1171 = and i32 %shr1170, 63
  %idxprom1172 = zext i32 %and1171 to i64
  %arrayidx1173 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172
  %709 = load i32, i32* %arrayidx1173, align 4
  %xor1174 = xor i32 %xor1169, %709
  %710 = load i32, i32* %t, align 4
  %shr1175 = lshr i32 %710, 2
  %and1176 = and i32 %shr1175, 63
  %idxprom1177 = zext i32 %and1176 to i64
  %arrayidx1178 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177
  %711 = load i32, i32* %arrayidx1178, align 4
  %xor1179 = xor i32 %xor1174, %711
  %712 = load i32, i32* %t, align 4
  %shr1180 = lshr i32 %712, 10
  %and1181 = and i32 %shr1180, 63
  %idxprom1182 = zext i32 %and1181 to i64
  %arrayidx1183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182
  %713 = load i32, i32* %arrayidx1183, align 4
  %xor1184 = xor i32 %xor1179, %713
  %714 = load i32, i32* %t, align 4
  %shr1185 = lshr i32 %714, 18
  %and1186 = and i32 %shr1185, 63
  %idxprom1187 = zext i32 %and1186 to i64
  %arrayidx1188 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187
  %715 = load i32, i32* %arrayidx1188, align 4
  %xor1189 = xor i32 %xor1184, %715
  %716 = load i32, i32* %t, align 4
  %shr1190 = lshr i32 %716, 26
  %and1191 = and i32 %shr1190, 63
  %idxprom1192 = zext i32 %and1191 to i64
  %arrayidx1193 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192
  %717 = load i32, i32* %arrayidx1193, align 4
  %xor1194 = xor i32 %xor1189, %717
  %718 = load i32, i32* %l, align 4
  %xor1195 = xor i32 %718, %xor1194
  store i32 %xor1195, i32* %l, align 4
  %719 = load i32, i32* %l, align 4
  %720 = load i32*, i32** %s, align 8
  %arrayidx1196 = getelementptr inbounds i32, i32* %720, i64 12
  %721 = load i32, i32* %arrayidx1196, align 4
  %xor1197 = xor i32 %719, %721
  store i32 %xor1197, i32* %u, align 4
  %722 = load i32, i32* %l, align 4
  %723 = load i32*, i32** %s, align 8
  %arrayidx1198 = getelementptr inbounds i32, i32* %723, i64 13
  %724 = load i32, i32* %arrayidx1198, align 4
  %xor1199 = xor i32 %722, %724
  store i32 %xor1199, i32* %t, align 4
  %725 = load i32, i32* %t, align 4
  %726 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %725) #5, !srcloc !29
  store i32 %726, i32* %ret1200, align 4
  %727 = load i32, i32* %ret1200, align 4
  store i32 %727, i32* %tmp1201, align 4
  %728 = load i32, i32* %tmp1201, align 4
  store i32 %728, i32* %t, align 4
  %729 = load i32, i32* %u, align 4
  %shr1202 = lshr i32 %729, 2
  %and1203 = and i32 %shr1202, 63
  %idxprom1204 = zext i32 %and1203 to i64
  %arrayidx1205 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204
  %730 = load i32, i32* %arrayidx1205, align 4
  %731 = load i32, i32* %u, align 4
  %shr1206 = lshr i32 %731, 10
  %and1207 = and i32 %shr1206, 63
  %idxprom1208 = zext i32 %and1207 to i64
  %arrayidx1209 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208
  %732 = load i32, i32* %arrayidx1209, align 4
  %xor1210 = xor i32 %730, %732
  %733 = load i32, i32* %u, align 4
  %shr1211 = lshr i32 %733, 18
  %and1212 = and i32 %shr1211, 63
  %idxprom1213 = zext i32 %and1212 to i64
  %arrayidx1214 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213
  %734 = load i32, i32* %arrayidx1214, align 4
  %xor1215 = xor i32 %xor1210, %734
  %735 = load i32, i32* %u, align 4
  %shr1216 = lshr i32 %735, 26
  %and1217 = and i32 %shr1216, 63
  %idxprom1218 = zext i32 %and1217 to i64
  %arrayidx1219 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218
  %736 = load i32, i32* %arrayidx1219, align 4
  %xor1220 = xor i32 %xor1215, %736
  %737 = load i32, i32* %t, align 4
  %shr1221 = lshr i32 %737, 2
  %and1222 = and i32 %shr1221, 63
  %idxprom1223 = zext i32 %and1222 to i64
  %arrayidx1224 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223
  %738 = load i32, i32* %arrayidx1224, align 4
  %xor1225 = xor i32 %xor1220, %738
  %739 = load i32, i32* %t, align 4
  %shr1226 = lshr i32 %739, 10
  %and1227 = and i32 %shr1226, 63
  %idxprom1228 = zext i32 %and1227 to i64
  %arrayidx1229 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228
  %740 = load i32, i32* %arrayidx1229, align 4
  %xor1230 = xor i32 %xor1225, %740
  %741 = load i32, i32* %t, align 4
  %shr1231 = lshr i32 %741, 18
  %and1232 = and i32 %shr1231, 63
  %idxprom1233 = zext i32 %and1232 to i64
  %arrayidx1234 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233
  %742 = load i32, i32* %arrayidx1234, align 4
  %xor1235 = xor i32 %xor1230, %742
  %743 = load i32, i32* %t, align 4
  %shr1236 = lshr i32 %743, 26
  %and1237 = and i32 %shr1236, 63
  %idxprom1238 = zext i32 %and1237 to i64
  %arrayidx1239 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238
  %744 = load i32, i32* %arrayidx1239, align 4
  %xor1240 = xor i32 %xor1235, %744
  %745 = load i32, i32* %r, align 4
  %xor1241 = xor i32 %745, %xor1240
  store i32 %xor1241, i32* %r, align 4
  %746 = load i32, i32* %r, align 4
  %747 = load i32*, i32** %s, align 8
  %arrayidx1242 = getelementptr inbounds i32, i32* %747, i64 10
  %748 = load i32, i32* %arrayidx1242, align 4
  %xor1243 = xor i32 %746, %748
  store i32 %xor1243, i32* %u, align 4
  %749 = load i32, i32* %r, align 4
  %750 = load i32*, i32** %s, align 8
  %arrayidx1244 = getelementptr inbounds i32, i32* %750, i64 11
  %751 = load i32, i32* %arrayidx1244, align 4
  %xor1245 = xor i32 %749, %751
  store i32 %xor1245, i32* %t, align 4
  %752 = load i32, i32* %t, align 4
  %753 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %752) #5, !srcloc !30
  store i32 %753, i32* %ret1246, align 4
  %754 = load i32, i32* %ret1246, align 4
  store i32 %754, i32* %tmp1247, align 4
  %755 = load i32, i32* %tmp1247, align 4
  store i32 %755, i32* %t, align 4
  %756 = load i32, i32* %u, align 4
  %shr1248 = lshr i32 %756, 2
  %and1249 = and i32 %shr1248, 63
  %idxprom1250 = zext i32 %and1249 to i64
  %arrayidx1251 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250
  %757 = load i32, i32* %arrayidx1251, align 4
  %758 = load i32, i32* %u, align 4
  %shr1252 = lshr i32 %758, 10
  %and1253 = and i32 %shr1252, 63
  %idxprom1254 = zext i32 %and1253 to i64
  %arrayidx1255 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254
  %759 = load i32, i32* %arrayidx1255, align 4
  %xor1256 = xor i32 %757, %759
  %760 = load i32, i32* %u, align 4
  %shr1257 = lshr i32 %760, 18
  %and1258 = and i32 %shr1257, 63
  %idxprom1259 = zext i32 %and1258 to i64
  %arrayidx1260 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259
  %761 = load i32, i32* %arrayidx1260, align 4
  %xor1261 = xor i32 %xor1256, %761
  %762 = load i32, i32* %u, align 4
  %shr1262 = lshr i32 %762, 26
  %and1263 = and i32 %shr1262, 63
  %idxprom1264 = zext i32 %and1263 to i64
  %arrayidx1265 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264
  %763 = load i32, i32* %arrayidx1265, align 4
  %xor1266 = xor i32 %xor1261, %763
  %764 = load i32, i32* %t, align 4
  %shr1267 = lshr i32 %764, 2
  %and1268 = and i32 %shr1267, 63
  %idxprom1269 = zext i32 %and1268 to i64
  %arrayidx1270 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269
  %765 = load i32, i32* %arrayidx1270, align 4
  %xor1271 = xor i32 %xor1266, %765
  %766 = load i32, i32* %t, align 4
  %shr1272 = lshr i32 %766, 10
  %and1273 = and i32 %shr1272, 63
  %idxprom1274 = zext i32 %and1273 to i64
  %arrayidx1275 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274
  %767 = load i32, i32* %arrayidx1275, align 4
  %xor1276 = xor i32 %xor1271, %767
  %768 = load i32, i32* %t, align 4
  %shr1277 = lshr i32 %768, 18
  %and1278 = and i32 %shr1277, 63
  %idxprom1279 = zext i32 %and1278 to i64
  %arrayidx1280 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279
  %769 = load i32, i32* %arrayidx1280, align 4
  %xor1281 = xor i32 %xor1276, %769
  %770 = load i32, i32* %t, align 4
  %shr1282 = lshr i32 %770, 26
  %and1283 = and i32 %shr1282, 63
  %idxprom1284 = zext i32 %and1283 to i64
  %arrayidx1285 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284
  %771 = load i32, i32* %arrayidx1285, align 4
  %xor1286 = xor i32 %xor1281, %771
  %772 = load i32, i32* %l, align 4
  %xor1287 = xor i32 %772, %xor1286
  store i32 %xor1287, i32* %l, align 4
  %773 = load i32, i32* %l, align 4
  %774 = load i32*, i32** %s, align 8
  %arrayidx1288 = getelementptr inbounds i32, i32* %774, i64 8
  %775 = load i32, i32* %arrayidx1288, align 4
  %xor1289 = xor i32 %773, %775
  store i32 %xor1289, i32* %u, align 4
  %776 = load i32, i32* %l, align 4
  %777 = load i32*, i32** %s, align 8
  %arrayidx1290 = getelementptr inbounds i32, i32* %777, i64 9
  %778 = load i32, i32* %arrayidx1290, align 4
  %xor1291 = xor i32 %776, %778
  store i32 %xor1291, i32* %t, align 4
  %779 = load i32, i32* %t, align 4
  %780 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %779) #5, !srcloc !31
  store i32 %780, i32* %ret1292, align 4
  %781 = load i32, i32* %ret1292, align 4
  store i32 %781, i32* %tmp1293, align 4
  %782 = load i32, i32* %tmp1293, align 4
  store i32 %782, i32* %t, align 4
  %783 = load i32, i32* %u, align 4
  %shr1294 = lshr i32 %783, 2
  %and1295 = and i32 %shr1294, 63
  %idxprom1296 = zext i32 %and1295 to i64
  %arrayidx1297 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296
  %784 = load i32, i32* %arrayidx1297, align 4
  %785 = load i32, i32* %u, align 4
  %shr1298 = lshr i32 %785, 10
  %and1299 = and i32 %shr1298, 63
  %idxprom1300 = zext i32 %and1299 to i64
  %arrayidx1301 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300
  %786 = load i32, i32* %arrayidx1301, align 4
  %xor1302 = xor i32 %784, %786
  %787 = load i32, i32* %u, align 4
  %shr1303 = lshr i32 %787, 18
  %and1304 = and i32 %shr1303, 63
  %idxprom1305 = zext i32 %and1304 to i64
  %arrayidx1306 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305
  %788 = load i32, i32* %arrayidx1306, align 4
  %xor1307 = xor i32 %xor1302, %788
  %789 = load i32, i32* %u, align 4
  %shr1308 = lshr i32 %789, 26
  %and1309 = and i32 %shr1308, 63
  %idxprom1310 = zext i32 %and1309 to i64
  %arrayidx1311 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310
  %790 = load i32, i32* %arrayidx1311, align 4
  %xor1312 = xor i32 %xor1307, %790
  %791 = load i32, i32* %t, align 4
  %shr1313 = lshr i32 %791, 2
  %and1314 = and i32 %shr1313, 63
  %idxprom1315 = zext i32 %and1314 to i64
  %arrayidx1316 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315
  %792 = load i32, i32* %arrayidx1316, align 4
  %xor1317 = xor i32 %xor1312, %792
  %793 = load i32, i32* %t, align 4
  %shr1318 = lshr i32 %793, 10
  %and1319 = and i32 %shr1318, 63
  %idxprom1320 = zext i32 %and1319 to i64
  %arrayidx1321 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320
  %794 = load i32, i32* %arrayidx1321, align 4
  %xor1322 = xor i32 %xor1317, %794
  %795 = load i32, i32* %t, align 4
  %shr1323 = lshr i32 %795, 18
  %and1324 = and i32 %shr1323, 63
  %idxprom1325 = zext i32 %and1324 to i64
  %arrayidx1326 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325
  %796 = load i32, i32* %arrayidx1326, align 4
  %xor1327 = xor i32 %xor1322, %796
  %797 = load i32, i32* %t, align 4
  %shr1328 = lshr i32 %797, 26
  %and1329 = and i32 %shr1328, 63
  %idxprom1330 = zext i32 %and1329 to i64
  %arrayidx1331 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330
  %798 = load i32, i32* %arrayidx1331, align 4
  %xor1332 = xor i32 %xor1327, %798
  %799 = load i32, i32* %r, align 4
  %xor1333 = xor i32 %799, %xor1332
  store i32 %xor1333, i32* %r, align 4
  %800 = load i32, i32* %r, align 4
  %801 = load i32*, i32** %s, align 8
  %arrayidx1334 = getelementptr inbounds i32, i32* %801, i64 6
  %802 = load i32, i32* %arrayidx1334, align 4
  %xor1335 = xor i32 %800, %802
  store i32 %xor1335, i32* %u, align 4
  %803 = load i32, i32* %r, align 4
  %804 = load i32*, i32** %s, align 8
  %arrayidx1336 = getelementptr inbounds i32, i32* %804, i64 7
  %805 = load i32, i32* %arrayidx1336, align 4
  %xor1337 = xor i32 %803, %805
  store i32 %xor1337, i32* %t, align 4
  %806 = load i32, i32* %t, align 4
  %807 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %806) #5, !srcloc !32
  store i32 %807, i32* %ret1338, align 4
  %808 = load i32, i32* %ret1338, align 4
  store i32 %808, i32* %tmp1339, align 4
  %809 = load i32, i32* %tmp1339, align 4
  store i32 %809, i32* %t, align 4
  %810 = load i32, i32* %u, align 4
  %shr1340 = lshr i32 %810, 2
  %and1341 = and i32 %shr1340, 63
  %idxprom1342 = zext i32 %and1341 to i64
  %arrayidx1343 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342
  %811 = load i32, i32* %arrayidx1343, align 4
  %812 = load i32, i32* %u, align 4
  %shr1344 = lshr i32 %812, 10
  %and1345 = and i32 %shr1344, 63
  %idxprom1346 = zext i32 %and1345 to i64
  %arrayidx1347 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346
  %813 = load i32, i32* %arrayidx1347, align 4
  %xor1348 = xor i32 %811, %813
  %814 = load i32, i32* %u, align 4
  %shr1349 = lshr i32 %814, 18
  %and1350 = and i32 %shr1349, 63
  %idxprom1351 = zext i32 %and1350 to i64
  %arrayidx1352 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351
  %815 = load i32, i32* %arrayidx1352, align 4
  %xor1353 = xor i32 %xor1348, %815
  %816 = load i32, i32* %u, align 4
  %shr1354 = lshr i32 %816, 26
  %and1355 = and i32 %shr1354, 63
  %idxprom1356 = zext i32 %and1355 to i64
  %arrayidx1357 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356
  %817 = load i32, i32* %arrayidx1357, align 4
  %xor1358 = xor i32 %xor1353, %817
  %818 = load i32, i32* %t, align 4
  %shr1359 = lshr i32 %818, 2
  %and1360 = and i32 %shr1359, 63
  %idxprom1361 = zext i32 %and1360 to i64
  %arrayidx1362 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361
  %819 = load i32, i32* %arrayidx1362, align 4
  %xor1363 = xor i32 %xor1358, %819
  %820 = load i32, i32* %t, align 4
  %shr1364 = lshr i32 %820, 10
  %and1365 = and i32 %shr1364, 63
  %idxprom1366 = zext i32 %and1365 to i64
  %arrayidx1367 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366
  %821 = load i32, i32* %arrayidx1367, align 4
  %xor1368 = xor i32 %xor1363, %821
  %822 = load i32, i32* %t, align 4
  %shr1369 = lshr i32 %822, 18
  %and1370 = and i32 %shr1369, 63
  %idxprom1371 = zext i32 %and1370 to i64
  %arrayidx1372 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371
  %823 = load i32, i32* %arrayidx1372, align 4
  %xor1373 = xor i32 %xor1368, %823
  %824 = load i32, i32* %t, align 4
  %shr1374 = lshr i32 %824, 26
  %and1375 = and i32 %shr1374, 63
  %idxprom1376 = zext i32 %and1375 to i64
  %arrayidx1377 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376
  %825 = load i32, i32* %arrayidx1377, align 4
  %xor1378 = xor i32 %xor1373, %825
  %826 = load i32, i32* %l, align 4
  %xor1379 = xor i32 %826, %xor1378
  store i32 %xor1379, i32* %l, align 4
  %827 = load i32, i32* %l, align 4
  %828 = load i32*, i32** %s, align 8
  %arrayidx1380 = getelementptr inbounds i32, i32* %828, i64 4
  %829 = load i32, i32* %arrayidx1380, align 4
  %xor1381 = xor i32 %827, %829
  store i32 %xor1381, i32* %u, align 4
  %830 = load i32, i32* %l, align 4
  %831 = load i32*, i32** %s, align 8
  %arrayidx1382 = getelementptr inbounds i32, i32* %831, i64 5
  %832 = load i32, i32* %arrayidx1382, align 4
  %xor1383 = xor i32 %830, %832
  store i32 %xor1383, i32* %t, align 4
  %833 = load i32, i32* %t, align 4
  %834 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %833) #5, !srcloc !33
  store i32 %834, i32* %ret1384, align 4
  %835 = load i32, i32* %ret1384, align 4
  store i32 %835, i32* %tmp1385, align 4
  %836 = load i32, i32* %tmp1385, align 4
  store i32 %836, i32* %t, align 4
  %837 = load i32, i32* %u, align 4
  %shr1386 = lshr i32 %837, 2
  %and1387 = and i32 %shr1386, 63
  %idxprom1388 = zext i32 %and1387 to i64
  %arrayidx1389 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388
  %838 = load i32, i32* %arrayidx1389, align 4
  %839 = load i32, i32* %u, align 4
  %shr1390 = lshr i32 %839, 10
  %and1391 = and i32 %shr1390, 63
  %idxprom1392 = zext i32 %and1391 to i64
  %arrayidx1393 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392
  %840 = load i32, i32* %arrayidx1393, align 4
  %xor1394 = xor i32 %838, %840
  %841 = load i32, i32* %u, align 4
  %shr1395 = lshr i32 %841, 18
  %and1396 = and i32 %shr1395, 63
  %idxprom1397 = zext i32 %and1396 to i64
  %arrayidx1398 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397
  %842 = load i32, i32* %arrayidx1398, align 4
  %xor1399 = xor i32 %xor1394, %842
  %843 = load i32, i32* %u, align 4
  %shr1400 = lshr i32 %843, 26
  %and1401 = and i32 %shr1400, 63
  %idxprom1402 = zext i32 %and1401 to i64
  %arrayidx1403 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402
  %844 = load i32, i32* %arrayidx1403, align 4
  %xor1404 = xor i32 %xor1399, %844
  %845 = load i32, i32* %t, align 4
  %shr1405 = lshr i32 %845, 2
  %and1406 = and i32 %shr1405, 63
  %idxprom1407 = zext i32 %and1406 to i64
  %arrayidx1408 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407
  %846 = load i32, i32* %arrayidx1408, align 4
  %xor1409 = xor i32 %xor1404, %846
  %847 = load i32, i32* %t, align 4
  %shr1410 = lshr i32 %847, 10
  %and1411 = and i32 %shr1410, 63
  %idxprom1412 = zext i32 %and1411 to i64
  %arrayidx1413 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412
  %848 = load i32, i32* %arrayidx1413, align 4
  %xor1414 = xor i32 %xor1409, %848
  %849 = load i32, i32* %t, align 4
  %shr1415 = lshr i32 %849, 18
  %and1416 = and i32 %shr1415, 63
  %idxprom1417 = zext i32 %and1416 to i64
  %arrayidx1418 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417
  %850 = load i32, i32* %arrayidx1418, align 4
  %xor1419 = xor i32 %xor1414, %850
  %851 = load i32, i32* %t, align 4
  %shr1420 = lshr i32 %851, 26
  %and1421 = and i32 %shr1420, 63
  %idxprom1422 = zext i32 %and1421 to i64
  %arrayidx1423 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422
  %852 = load i32, i32* %arrayidx1423, align 4
  %xor1424 = xor i32 %xor1419, %852
  %853 = load i32, i32* %r, align 4
  %xor1425 = xor i32 %853, %xor1424
  store i32 %xor1425, i32* %r, align 4
  %854 = load i32, i32* %r, align 4
  %855 = load i32*, i32** %s, align 8
  %arrayidx1426 = getelementptr inbounds i32, i32* %855, i64 2
  %856 = load i32, i32* %arrayidx1426, align 4
  %xor1427 = xor i32 %854, %856
  store i32 %xor1427, i32* %u, align 4
  %857 = load i32, i32* %r, align 4
  %858 = load i32*, i32** %s, align 8
  %arrayidx1428 = getelementptr inbounds i32, i32* %858, i64 3
  %859 = load i32, i32* %arrayidx1428, align 4
  %xor1429 = xor i32 %857, %859
  store i32 %xor1429, i32* %t, align 4
  %860 = load i32, i32* %t, align 4
  %861 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %860) #5, !srcloc !34
  store i32 %861, i32* %ret1430, align 4
  %862 = load i32, i32* %ret1430, align 4
  store i32 %862, i32* %tmp1431, align 4
  %863 = load i32, i32* %tmp1431, align 4
  store i32 %863, i32* %t, align 4
  %864 = load i32, i32* %u, align 4
  %shr1432 = lshr i32 %864, 2
  %and1433 = and i32 %shr1432, 63
  %idxprom1434 = zext i32 %and1433 to i64
  %arrayidx1435 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434
  %865 = load i32, i32* %arrayidx1435, align 4
  %866 = load i32, i32* %u, align 4
  %shr1436 = lshr i32 %866, 10
  %and1437 = and i32 %shr1436, 63
  %idxprom1438 = zext i32 %and1437 to i64
  %arrayidx1439 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438
  %867 = load i32, i32* %arrayidx1439, align 4
  %xor1440 = xor i32 %865, %867
  %868 = load i32, i32* %u, align 4
  %shr1441 = lshr i32 %868, 18
  %and1442 = and i32 %shr1441, 63
  %idxprom1443 = zext i32 %and1442 to i64
  %arrayidx1444 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443
  %869 = load i32, i32* %arrayidx1444, align 4
  %xor1445 = xor i32 %xor1440, %869
  %870 = load i32, i32* %u, align 4
  %shr1446 = lshr i32 %870, 26
  %and1447 = and i32 %shr1446, 63
  %idxprom1448 = zext i32 %and1447 to i64
  %arrayidx1449 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448
  %871 = load i32, i32* %arrayidx1449, align 4
  %xor1450 = xor i32 %xor1445, %871
  %872 = load i32, i32* %t, align 4
  %shr1451 = lshr i32 %872, 2
  %and1452 = and i32 %shr1451, 63
  %idxprom1453 = zext i32 %and1452 to i64
  %arrayidx1454 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453
  %873 = load i32, i32* %arrayidx1454, align 4
  %xor1455 = xor i32 %xor1450, %873
  %874 = load i32, i32* %t, align 4
  %shr1456 = lshr i32 %874, 10
  %and1457 = and i32 %shr1456, 63
  %idxprom1458 = zext i32 %and1457 to i64
  %arrayidx1459 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458
  %875 = load i32, i32* %arrayidx1459, align 4
  %xor1460 = xor i32 %xor1455, %875
  %876 = load i32, i32* %t, align 4
  %shr1461 = lshr i32 %876, 18
  %and1462 = and i32 %shr1461, 63
  %idxprom1463 = zext i32 %and1462 to i64
  %arrayidx1464 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463
  %877 = load i32, i32* %arrayidx1464, align 4
  %xor1465 = xor i32 %xor1460, %877
  %878 = load i32, i32* %t, align 4
  %shr1466 = lshr i32 %878, 26
  %and1467 = and i32 %shr1466, 63
  %idxprom1468 = zext i32 %and1467 to i64
  %arrayidx1469 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468
  %879 = load i32, i32* %arrayidx1469, align 4
  %xor1470 = xor i32 %xor1465, %879
  %880 = load i32, i32* %l, align 4
  %xor1471 = xor i32 %880, %xor1470
  store i32 %xor1471, i32* %l, align 4
  %881 = load i32, i32* %l, align 4
  %882 = load i32*, i32** %s, align 8
  %arrayidx1472 = getelementptr inbounds i32, i32* %882, i64 0
  %883 = load i32, i32* %arrayidx1472, align 4
  %xor1473 = xor i32 %881, %883
  store i32 %xor1473, i32* %u, align 4
  %884 = load i32, i32* %l, align 4
  %885 = load i32*, i32** %s, align 8
  %arrayidx1474 = getelementptr inbounds i32, i32* %885, i64 1
  %886 = load i32, i32* %arrayidx1474, align 4
  %xor1475 = xor i32 %884, %886
  store i32 %xor1475, i32* %t, align 4
  %887 = load i32, i32* %t, align 4
  %888 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %887) #5, !srcloc !35
  store i32 %888, i32* %ret1476, align 4
  %889 = load i32, i32* %ret1476, align 4
  store i32 %889, i32* %tmp1477, align 4
  %890 = load i32, i32* %tmp1477, align 4
  store i32 %890, i32* %t, align 4
  %891 = load i32, i32* %u, align 4
  %shr1478 = lshr i32 %891, 2
  %and1479 = and i32 %shr1478, 63
  %idxprom1480 = zext i32 %and1479 to i64
  %arrayidx1481 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480
  %892 = load i32, i32* %arrayidx1481, align 4
  %893 = load i32, i32* %u, align 4
  %shr1482 = lshr i32 %893, 10
  %and1483 = and i32 %shr1482, 63
  %idxprom1484 = zext i32 %and1483 to i64
  %arrayidx1485 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484
  %894 = load i32, i32* %arrayidx1485, align 4
  %xor1486 = xor i32 %892, %894
  %895 = load i32, i32* %u, align 4
  %shr1487 = lshr i32 %895, 18
  %and1488 = and i32 %shr1487, 63
  %idxprom1489 = zext i32 %and1488 to i64
  %arrayidx1490 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489
  %896 = load i32, i32* %arrayidx1490, align 4
  %xor1491 = xor i32 %xor1486, %896
  %897 = load i32, i32* %u, align 4
  %shr1492 = lshr i32 %897, 26
  %and1493 = and i32 %shr1492, 63
  %idxprom1494 = zext i32 %and1493 to i64
  %arrayidx1495 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494
  %898 = load i32, i32* %arrayidx1495, align 4
  %xor1496 = xor i32 %xor1491, %898
  %899 = load i32, i32* %t, align 4
  %shr1497 = lshr i32 %899, 2
  %and1498 = and i32 %shr1497, 63
  %idxprom1499 = zext i32 %and1498 to i64
  %arrayidx1500 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499
  %900 = load i32, i32* %arrayidx1500, align 4
  %xor1501 = xor i32 %xor1496, %900
  %901 = load i32, i32* %t, align 4
  %shr1502 = lshr i32 %901, 10
  %and1503 = and i32 %shr1502, 63
  %idxprom1504 = zext i32 %and1503 to i64
  %arrayidx1505 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504
  %902 = load i32, i32* %arrayidx1505, align 4
  %xor1506 = xor i32 %xor1501, %902
  %903 = load i32, i32* %t, align 4
  %shr1507 = lshr i32 %903, 18
  %and1508 = and i32 %shr1507, 63
  %idxprom1509 = zext i32 %and1508 to i64
  %arrayidx1510 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509
  %904 = load i32, i32* %arrayidx1510, align 4
  %xor1511 = xor i32 %xor1506, %904
  %905 = load i32, i32* %t, align 4
  %shr1512 = lshr i32 %905, 26
  %and1513 = and i32 %shr1512, 63
  %idxprom1514 = zext i32 %and1513 to i64
  %arrayidx1515 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514
  %906 = load i32, i32* %arrayidx1515, align 4
  %xor1516 = xor i32 %xor1511, %906
  %907 = load i32, i32* %r, align 4
  %xor1517 = xor i32 %907, %xor1516
  store i32 %xor1517, i32* %r, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %908 = load i32, i32* %l, align 4
  %909 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %908) #5, !srcloc !36
  store i32 %909, i32* %ret1518, align 4
  %910 = load i32, i32* %ret1518, align 4
  store i32 %910, i32* %tmp1519, align 4
  %911 = load i32, i32* %tmp1519, align 4
  %conv1520 = zext i32 %911 to i64
  %and1521 = and i64 %conv1520, 4294967295
  %conv1522 = trunc i64 %and1521 to i32
  store i32 %conv1522, i32* %l, align 4
  %912 = load i32, i32* %r, align 4
  %913 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %912) #5, !srcloc !37
  store i32 %913, i32* %ret1523, align 4
  %914 = load i32, i32* %ret1523, align 4
  store i32 %914, i32* %tmp1524, align 4
  %915 = load i32, i32* %tmp1524, align 4
  %conv1525 = zext i32 %915 to i64
  %and1526 = and i64 %conv1525, 4294967295
  %conv1527 = trunc i64 %and1526 to i32
  store i32 %conv1527, i32* %r, align 4
  %916 = load i32, i32* %r, align 4
  %shr1529 = lshr i32 %916, 1
  %917 = load i32, i32* %l, align 4
  %xor1530 = xor i32 %shr1529, %917
  %conv1531 = zext i32 %xor1530 to i64
  %and1532 = and i64 %conv1531, 1431655765
  %conv1533 = trunc i64 %and1532 to i32
  store i32 %conv1533, i32* %tt1528, align 4
  %918 = load i32, i32* %tt1528, align 4
  %919 = load i32, i32* %l, align 4
  %xor1534 = xor i32 %919, %918
  store i32 %xor1534, i32* %l, align 4
  %920 = load i32, i32* %tt1528, align 4
  %shl1535 = shl i32 %920, 1
  %921 = load i32, i32* %r, align 4
  %xor1536 = xor i32 %921, %shl1535
  store i32 %xor1536, i32* %r, align 4
  %922 = load i32, i32* %l, align 4
  %shr1537 = lshr i32 %922, 8
  %923 = load i32, i32* %r, align 4
  %xor1538 = xor i32 %shr1537, %923
  %conv1539 = zext i32 %xor1538 to i64
  %and1540 = and i64 %conv1539, 16711935
  %conv1541 = trunc i64 %and1540 to i32
  store i32 %conv1541, i32* %tt1528, align 4
  %924 = load i32, i32* %tt1528, align 4
  %925 = load i32, i32* %r, align 4
  %xor1542 = xor i32 %925, %924
  store i32 %xor1542, i32* %r, align 4
  %926 = load i32, i32* %tt1528, align 4
  %shl1543 = shl i32 %926, 8
  %927 = load i32, i32* %l, align 4
  %xor1544 = xor i32 %927, %shl1543
  store i32 %xor1544, i32* %l, align 4
  %928 = load i32, i32* %r, align 4
  %shr1545 = lshr i32 %928, 2
  %929 = load i32, i32* %l, align 4
  %xor1546 = xor i32 %shr1545, %929
  %conv1547 = zext i32 %xor1546 to i64
  %and1548 = and i64 %conv1547, 858993459
  %conv1549 = trunc i64 %and1548 to i32
  store i32 %conv1549, i32* %tt1528, align 4
  %930 = load i32, i32* %tt1528, align 4
  %931 = load i32, i32* %l, align 4
  %xor1550 = xor i32 %931, %930
  store i32 %xor1550, i32* %l, align 4
  %932 = load i32, i32* %tt1528, align 4
  %shl1551 = shl i32 %932, 2
  %933 = load i32, i32* %r, align 4
  %xor1552 = xor i32 %933, %shl1551
  store i32 %xor1552, i32* %r, align 4
  %934 = load i32, i32* %l, align 4
  %shr1553 = lshr i32 %934, 16
  %935 = load i32, i32* %r, align 4
  %xor1554 = xor i32 %shr1553, %935
  %conv1555 = zext i32 %xor1554 to i64
  %and1556 = and i64 %conv1555, 65535
  %conv1557 = trunc i64 %and1556 to i32
  store i32 %conv1557, i32* %tt1528, align 4
  %936 = load i32, i32* %tt1528, align 4
  %937 = load i32, i32* %r, align 4
  %xor1558 = xor i32 %937, %936
  store i32 %xor1558, i32* %r, align 4
  %938 = load i32, i32* %tt1528, align 4
  %shl1559 = shl i32 %938, 16
  %939 = load i32, i32* %l, align 4
  %xor1560 = xor i32 %939, %shl1559
  store i32 %xor1560, i32* %l, align 4
  %940 = load i32, i32* %r, align 4
  %shr1561 = lshr i32 %940, 4
  %941 = load i32, i32* %l, align 4
  %xor1562 = xor i32 %shr1561, %941
  %conv1563 = zext i32 %xor1562 to i64
  %and1564 = and i64 %conv1563, 252645135
  %conv1565 = trunc i64 %and1564 to i32
  store i32 %conv1565, i32* %tt1528, align 4
  %942 = load i32, i32* %tt1528, align 4
  %943 = load i32, i32* %l, align 4
  %xor1566 = xor i32 %943, %942
  store i32 %xor1566, i32* %l, align 4
  %944 = load i32, i32* %tt1528, align 4
  %shl1567 = shl i32 %944, 4
  %945 = load i32, i32* %r, align 4
  %xor1568 = xor i32 %945, %shl1567
  store i32 %xor1568, i32* %r, align 4
  %946 = load i32, i32* %l, align 4
  %947 = load i32*, i32** %data.addr, align 8
  %arrayidx1569 = getelementptr inbounds i32, i32* %947, i64 0
  store i32 %946, i32* %arrayidx1569, align 4
  %948 = load i32, i32* %r, align 4
  %949 = load i32*, i32** %data.addr, align 8
  %arrayidx1570 = getelementptr inbounds i32, i32* %949, i64 1
  store i32 %948, i32* %arrayidx1570, align 4
  store i32 0, i32* %u, align 4
  store i32 0, i32* %t, align 4
  store i32 0, i32* %r, align 4
  store i32 0, i32* %l, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_encrypt2(i32* %data, %struct.DES_ks* %ks, i32 %enc) #1 {
entry:
  %data.addr = alloca i32*, align 8
  %ks.addr = alloca %struct.DES_ks*, align 8
  %enc.addr = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %t = alloca i32, align 4
  %u = alloca i32, align 4
  %s = alloca i32*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ret3 = alloca i32, align 4
  %tmp4 = alloca i32, align 4
  %ret13 = alloca i32, align 4
  %tmp14 = alloca i32, align 4
  %ret57 = alloca i32, align 4
  %tmp58 = alloca i32, align 4
  %ret103 = alloca i32, align 4
  %tmp104 = alloca i32, align 4
  %ret149 = alloca i32, align 4
  %tmp150 = alloca i32, align 4
  %ret195 = alloca i32, align 4
  %tmp196 = alloca i32, align 4
  %ret241 = alloca i32, align 4
  %tmp242 = alloca i32, align 4
  %ret287 = alloca i32, align 4
  %tmp288 = alloca i32, align 4
  %ret333 = alloca i32, align 4
  %tmp334 = alloca i32, align 4
  %ret379 = alloca i32, align 4
  %tmp380 = alloca i32, align 4
  %ret425 = alloca i32, align 4
  %tmp426 = alloca i32, align 4
  %ret471 = alloca i32, align 4
  %tmp472 = alloca i32, align 4
  %ret517 = alloca i32, align 4
  %tmp518 = alloca i32, align 4
  %ret563 = alloca i32, align 4
  %tmp564 = alloca i32, align 4
  %ret609 = alloca i32, align 4
  %tmp610 = alloca i32, align 4
  %ret655 = alloca i32, align 4
  %tmp656 = alloca i32, align 4
  %ret701 = alloca i32, align 4
  %tmp702 = alloca i32, align 4
  %ret747 = alloca i32, align 4
  %tmp748 = alloca i32, align 4
  %ret793 = alloca i32, align 4
  %tmp794 = alloca i32, align 4
  %ret839 = alloca i32, align 4
  %tmp840 = alloca i32, align 4
  %ret885 = alloca i32, align 4
  %tmp886 = alloca i32, align 4
  %ret931 = alloca i32, align 4
  %tmp932 = alloca i32, align 4
  %ret977 = alloca i32, align 4
  %tmp978 = alloca i32, align 4
  %ret1023 = alloca i32, align 4
  %tmp1024 = alloca i32, align 4
  %ret1069 = alloca i32, align 4
  %tmp1070 = alloca i32, align 4
  %ret1115 = alloca i32, align 4
  %tmp1116 = alloca i32, align 4
  %ret1161 = alloca i32, align 4
  %tmp1162 = alloca i32, align 4
  %ret1207 = alloca i32, align 4
  %tmp1208 = alloca i32, align 4
  %ret1253 = alloca i32, align 4
  %tmp1254 = alloca i32, align 4
  %ret1299 = alloca i32, align 4
  %tmp1300 = alloca i32, align 4
  %ret1345 = alloca i32, align 4
  %tmp1346 = alloca i32, align 4
  %ret1391 = alloca i32, align 4
  %tmp1392 = alloca i32, align 4
  %ret1437 = alloca i32, align 4
  %tmp1438 = alloca i32, align 4
  %ret1479 = alloca i32, align 4
  %tmp1480 = alloca i32, align 4
  %ret1485 = alloca i32, align 4
  %tmp1486 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  store %struct.DES_ks* %ks, %struct.DES_ks** %ks.addr, align 8
  store i32 %enc, i32* %enc.addr, align 4
  %0 = load i32*, i32** %data.addr, align 8
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0
  %1 = load i32, i32* %arrayidx, align 4
  store i32 %1, i32* %r, align 4
  %2 = load i32*, i32** %data.addr, align 8
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1
  %3 = load i32, i32* %arrayidx1, align 4
  store i32 %3, i32* %l, align 4
  %4 = load i32, i32* %r, align 4
  %5 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %4) #5, !srcloc !38
  store i32 %5, i32* %ret, align 4
  %6 = load i32, i32* %ret, align 4
  store i32 %6, i32* %tmp, align 4
  %7 = load i32, i32* %tmp, align 4
  %conv = zext i32 %7 to i64
  %and = and i64 %conv, 4294967295
  %conv2 = trunc i64 %and to i32
  store i32 %conv2, i32* %r, align 4
  %8 = load i32, i32* %l, align 4
  %9 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %8) #5, !srcloc !39
  store i32 %9, i32* %ret3, align 4
  %10 = load i32, i32* %ret3, align 4
  store i32 %10, i32* %tmp4, align 4
  %11 = load i32, i32* %tmp4, align 4
  %conv5 = zext i32 %11 to i64
  %and6 = and i64 %conv5, 4294967295
  %conv7 = trunc i64 %and6 to i32
  store i32 %conv7, i32* %l, align 4
  %12 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr, align 8
  %ks8 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %12, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks8, i64 0, i64 0
  %deslong = bitcast %union.anon* %arraydecay to [2 x i32]*
  %arraydecay9 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong, i64 0, i64 0
  store i32* %arraydecay9, i32** %s, align 8
  %13 = load i32, i32* %enc.addr, align 4
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %r, align 4
  %15 = load i32*, i32** %s, align 8
  %arrayidx10 = getelementptr inbounds i32, i32* %15, i64 0
  %16 = load i32, i32* %arrayidx10, align 4
  %xor = xor i32 %14, %16
  store i32 %xor, i32* %u, align 4
  %17 = load i32, i32* %r, align 4
  %18 = load i32*, i32** %s, align 8
  %arrayidx11 = getelementptr inbounds i32, i32* %18, i64 1
  %19 = load i32, i32* %arrayidx11, align 4
  %xor12 = xor i32 %17, %19
  store i32 %xor12, i32* %t, align 4
  %20 = load i32, i32* %t, align 4
  %21 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %20) #5, !srcloc !40
  store i32 %21, i32* %ret13, align 4
  %22 = load i32, i32* %ret13, align 4
  store i32 %22, i32* %tmp14, align 4
  %23 = load i32, i32* %tmp14, align 4
  store i32 %23, i32* %t, align 4
  %24 = load i32, i32* %u, align 4
  %shr = lshr i32 %24, 2
  %and15 = and i32 %shr, 63
  %idxprom = zext i32 %and15 to i64
  %arrayidx16 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom
  %25 = load i32, i32* %arrayidx16, align 4
  %26 = load i32, i32* %u, align 4
  %shr17 = lshr i32 %26, 10
  %and18 = and i32 %shr17, 63
  %idxprom19 = zext i32 %and18 to i64
  %arrayidx20 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom19
  %27 = load i32, i32* %arrayidx20, align 4
  %xor21 = xor i32 %25, %27
  %28 = load i32, i32* %u, align 4
  %shr22 = lshr i32 %28, 18
  %and23 = and i32 %shr22, 63
  %idxprom24 = zext i32 %and23 to i64
  %arrayidx25 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom24
  %29 = load i32, i32* %arrayidx25, align 4
  %xor26 = xor i32 %xor21, %29
  %30 = load i32, i32* %u, align 4
  %shr27 = lshr i32 %30, 26
  %and28 = and i32 %shr27, 63
  %idxprom29 = zext i32 %and28 to i64
  %arrayidx30 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom29
  %31 = load i32, i32* %arrayidx30, align 4
  %xor31 = xor i32 %xor26, %31
  %32 = load i32, i32* %t, align 4
  %shr32 = lshr i32 %32, 2
  %and33 = and i32 %shr32, 63
  %idxprom34 = zext i32 %and33 to i64
  %arrayidx35 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom34
  %33 = load i32, i32* %arrayidx35, align 4
  %xor36 = xor i32 %xor31, %33
  %34 = load i32, i32* %t, align 4
  %shr37 = lshr i32 %34, 10
  %and38 = and i32 %shr37, 63
  %idxprom39 = zext i32 %and38 to i64
  %arrayidx40 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom39
  %35 = load i32, i32* %arrayidx40, align 4
  %xor41 = xor i32 %xor36, %35
  %36 = load i32, i32* %t, align 4
  %shr42 = lshr i32 %36, 18
  %and43 = and i32 %shr42, 63
  %idxprom44 = zext i32 %and43 to i64
  %arrayidx45 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom44
  %37 = load i32, i32* %arrayidx45, align 4
  %xor46 = xor i32 %xor41, %37
  %38 = load i32, i32* %t, align 4
  %shr47 = lshr i32 %38, 26
  %and48 = and i32 %shr47, 63
  %idxprom49 = zext i32 %and48 to i64
  %arrayidx50 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom49
  %39 = load i32, i32* %arrayidx50, align 4
  %xor51 = xor i32 %xor46, %39
  %40 = load i32, i32* %l, align 4
  %xor52 = xor i32 %40, %xor51
  store i32 %xor52, i32* %l, align 4
  %41 = load i32, i32* %l, align 4
  %42 = load i32*, i32** %s, align 8
  %arrayidx53 = getelementptr inbounds i32, i32* %42, i64 2
  %43 = load i32, i32* %arrayidx53, align 4
  %xor54 = xor i32 %41, %43
  store i32 %xor54, i32* %u, align 4
  %44 = load i32, i32* %l, align 4
  %45 = load i32*, i32** %s, align 8
  %arrayidx55 = getelementptr inbounds i32, i32* %45, i64 3
  %46 = load i32, i32* %arrayidx55, align 4
  %xor56 = xor i32 %44, %46
  store i32 %xor56, i32* %t, align 4
  %47 = load i32, i32* %t, align 4
  %48 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %47) #5, !srcloc !41
  store i32 %48, i32* %ret57, align 4
  %49 = load i32, i32* %ret57, align 4
  store i32 %49, i32* %tmp58, align 4
  %50 = load i32, i32* %tmp58, align 4
  store i32 %50, i32* %t, align 4
  %51 = load i32, i32* %u, align 4
  %shr59 = lshr i32 %51, 2
  %and60 = and i32 %shr59, 63
  %idxprom61 = zext i32 %and60 to i64
  %arrayidx62 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom61
  %52 = load i32, i32* %arrayidx62, align 4
  %53 = load i32, i32* %u, align 4
  %shr63 = lshr i32 %53, 10
  %and64 = and i32 %shr63, 63
  %idxprom65 = zext i32 %and64 to i64
  %arrayidx66 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom65
  %54 = load i32, i32* %arrayidx66, align 4
  %xor67 = xor i32 %52, %54
  %55 = load i32, i32* %u, align 4
  %shr68 = lshr i32 %55, 18
  %and69 = and i32 %shr68, 63
  %idxprom70 = zext i32 %and69 to i64
  %arrayidx71 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom70
  %56 = load i32, i32* %arrayidx71, align 4
  %xor72 = xor i32 %xor67, %56
  %57 = load i32, i32* %u, align 4
  %shr73 = lshr i32 %57, 26
  %and74 = and i32 %shr73, 63
  %idxprom75 = zext i32 %and74 to i64
  %arrayidx76 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom75
  %58 = load i32, i32* %arrayidx76, align 4
  %xor77 = xor i32 %xor72, %58
  %59 = load i32, i32* %t, align 4
  %shr78 = lshr i32 %59, 2
  %and79 = and i32 %shr78, 63
  %idxprom80 = zext i32 %and79 to i64
  %arrayidx81 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom80
  %60 = load i32, i32* %arrayidx81, align 4
  %xor82 = xor i32 %xor77, %60
  %61 = load i32, i32* %t, align 4
  %shr83 = lshr i32 %61, 10
  %and84 = and i32 %shr83, 63
  %idxprom85 = zext i32 %and84 to i64
  %arrayidx86 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom85
  %62 = load i32, i32* %arrayidx86, align 4
  %xor87 = xor i32 %xor82, %62
  %63 = load i32, i32* %t, align 4
  %shr88 = lshr i32 %63, 18
  %and89 = and i32 %shr88, 63
  %idxprom90 = zext i32 %and89 to i64
  %arrayidx91 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom90
  %64 = load i32, i32* %arrayidx91, align 4
  %xor92 = xor i32 %xor87, %64
  %65 = load i32, i32* %t, align 4
  %shr93 = lshr i32 %65, 26
  %and94 = and i32 %shr93, 63
  %idxprom95 = zext i32 %and94 to i64
  %arrayidx96 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom95
  %66 = load i32, i32* %arrayidx96, align 4
  %xor97 = xor i32 %xor92, %66
  %67 = load i32, i32* %r, align 4
  %xor98 = xor i32 %67, %xor97
  store i32 %xor98, i32* %r, align 4
  %68 = load i32, i32* %r, align 4
  %69 = load i32*, i32** %s, align 8
  %arrayidx99 = getelementptr inbounds i32, i32* %69, i64 4
  %70 = load i32, i32* %arrayidx99, align 4
  %xor100 = xor i32 %68, %70
  store i32 %xor100, i32* %u, align 4
  %71 = load i32, i32* %r, align 4
  %72 = load i32*, i32** %s, align 8
  %arrayidx101 = getelementptr inbounds i32, i32* %72, i64 5
  %73 = load i32, i32* %arrayidx101, align 4
  %xor102 = xor i32 %71, %73
  store i32 %xor102, i32* %t, align 4
  %74 = load i32, i32* %t, align 4
  %75 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %74) #5, !srcloc !42
  store i32 %75, i32* %ret103, align 4
  %76 = load i32, i32* %ret103, align 4
  store i32 %76, i32* %tmp104, align 4
  %77 = load i32, i32* %tmp104, align 4
  store i32 %77, i32* %t, align 4
  %78 = load i32, i32* %u, align 4
  %shr105 = lshr i32 %78, 2
  %and106 = and i32 %shr105, 63
  %idxprom107 = zext i32 %and106 to i64
  %arrayidx108 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom107
  %79 = load i32, i32* %arrayidx108, align 4
  %80 = load i32, i32* %u, align 4
  %shr109 = lshr i32 %80, 10
  %and110 = and i32 %shr109, 63
  %idxprom111 = zext i32 %and110 to i64
  %arrayidx112 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom111
  %81 = load i32, i32* %arrayidx112, align 4
  %xor113 = xor i32 %79, %81
  %82 = load i32, i32* %u, align 4
  %shr114 = lshr i32 %82, 18
  %and115 = and i32 %shr114, 63
  %idxprom116 = zext i32 %and115 to i64
  %arrayidx117 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom116
  %83 = load i32, i32* %arrayidx117, align 4
  %xor118 = xor i32 %xor113, %83
  %84 = load i32, i32* %u, align 4
  %shr119 = lshr i32 %84, 26
  %and120 = and i32 %shr119, 63
  %idxprom121 = zext i32 %and120 to i64
  %arrayidx122 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom121
  %85 = load i32, i32* %arrayidx122, align 4
  %xor123 = xor i32 %xor118, %85
  %86 = load i32, i32* %t, align 4
  %shr124 = lshr i32 %86, 2
  %and125 = and i32 %shr124, 63
  %idxprom126 = zext i32 %and125 to i64
  %arrayidx127 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom126
  %87 = load i32, i32* %arrayidx127, align 4
  %xor128 = xor i32 %xor123, %87
  %88 = load i32, i32* %t, align 4
  %shr129 = lshr i32 %88, 10
  %and130 = and i32 %shr129, 63
  %idxprom131 = zext i32 %and130 to i64
  %arrayidx132 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom131
  %89 = load i32, i32* %arrayidx132, align 4
  %xor133 = xor i32 %xor128, %89
  %90 = load i32, i32* %t, align 4
  %shr134 = lshr i32 %90, 18
  %and135 = and i32 %shr134, 63
  %idxprom136 = zext i32 %and135 to i64
  %arrayidx137 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom136
  %91 = load i32, i32* %arrayidx137, align 4
  %xor138 = xor i32 %xor133, %91
  %92 = load i32, i32* %t, align 4
  %shr139 = lshr i32 %92, 26
  %and140 = and i32 %shr139, 63
  %idxprom141 = zext i32 %and140 to i64
  %arrayidx142 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom141
  %93 = load i32, i32* %arrayidx142, align 4
  %xor143 = xor i32 %xor138, %93
  %94 = load i32, i32* %l, align 4
  %xor144 = xor i32 %94, %xor143
  store i32 %xor144, i32* %l, align 4
  %95 = load i32, i32* %l, align 4
  %96 = load i32*, i32** %s, align 8
  %arrayidx145 = getelementptr inbounds i32, i32* %96, i64 6
  %97 = load i32, i32* %arrayidx145, align 4
  %xor146 = xor i32 %95, %97
  store i32 %xor146, i32* %u, align 4
  %98 = load i32, i32* %l, align 4
  %99 = load i32*, i32** %s, align 8
  %arrayidx147 = getelementptr inbounds i32, i32* %99, i64 7
  %100 = load i32, i32* %arrayidx147, align 4
  %xor148 = xor i32 %98, %100
  store i32 %xor148, i32* %t, align 4
  %101 = load i32, i32* %t, align 4
  %102 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %101) #5, !srcloc !43
  store i32 %102, i32* %ret149, align 4
  %103 = load i32, i32* %ret149, align 4
  store i32 %103, i32* %tmp150, align 4
  %104 = load i32, i32* %tmp150, align 4
  store i32 %104, i32* %t, align 4
  %105 = load i32, i32* %u, align 4
  %shr151 = lshr i32 %105, 2
  %and152 = and i32 %shr151, 63
  %idxprom153 = zext i32 %and152 to i64
  %arrayidx154 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom153
  %106 = load i32, i32* %arrayidx154, align 4
  %107 = load i32, i32* %u, align 4
  %shr155 = lshr i32 %107, 10
  %and156 = and i32 %shr155, 63
  %idxprom157 = zext i32 %and156 to i64
  %arrayidx158 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom157
  %108 = load i32, i32* %arrayidx158, align 4
  %xor159 = xor i32 %106, %108
  %109 = load i32, i32* %u, align 4
  %shr160 = lshr i32 %109, 18
  %and161 = and i32 %shr160, 63
  %idxprom162 = zext i32 %and161 to i64
  %arrayidx163 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom162
  %110 = load i32, i32* %arrayidx163, align 4
  %xor164 = xor i32 %xor159, %110
  %111 = load i32, i32* %u, align 4
  %shr165 = lshr i32 %111, 26
  %and166 = and i32 %shr165, 63
  %idxprom167 = zext i32 %and166 to i64
  %arrayidx168 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom167
  %112 = load i32, i32* %arrayidx168, align 4
  %xor169 = xor i32 %xor164, %112
  %113 = load i32, i32* %t, align 4
  %shr170 = lshr i32 %113, 2
  %and171 = and i32 %shr170, 63
  %idxprom172 = zext i32 %and171 to i64
  %arrayidx173 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom172
  %114 = load i32, i32* %arrayidx173, align 4
  %xor174 = xor i32 %xor169, %114
  %115 = load i32, i32* %t, align 4
  %shr175 = lshr i32 %115, 10
  %and176 = and i32 %shr175, 63
  %idxprom177 = zext i32 %and176 to i64
  %arrayidx178 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom177
  %116 = load i32, i32* %arrayidx178, align 4
  %xor179 = xor i32 %xor174, %116
  %117 = load i32, i32* %t, align 4
  %shr180 = lshr i32 %117, 18
  %and181 = and i32 %shr180, 63
  %idxprom182 = zext i32 %and181 to i64
  %arrayidx183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom182
  %118 = load i32, i32* %arrayidx183, align 4
  %xor184 = xor i32 %xor179, %118
  %119 = load i32, i32* %t, align 4
  %shr185 = lshr i32 %119, 26
  %and186 = and i32 %shr185, 63
  %idxprom187 = zext i32 %and186 to i64
  %arrayidx188 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom187
  %120 = load i32, i32* %arrayidx188, align 4
  %xor189 = xor i32 %xor184, %120
  %121 = load i32, i32* %r, align 4
  %xor190 = xor i32 %121, %xor189
  store i32 %xor190, i32* %r, align 4
  %122 = load i32, i32* %r, align 4
  %123 = load i32*, i32** %s, align 8
  %arrayidx191 = getelementptr inbounds i32, i32* %123, i64 8
  %124 = load i32, i32* %arrayidx191, align 4
  %xor192 = xor i32 %122, %124
  store i32 %xor192, i32* %u, align 4
  %125 = load i32, i32* %r, align 4
  %126 = load i32*, i32** %s, align 8
  %arrayidx193 = getelementptr inbounds i32, i32* %126, i64 9
  %127 = load i32, i32* %arrayidx193, align 4
  %xor194 = xor i32 %125, %127
  store i32 %xor194, i32* %t, align 4
  %128 = load i32, i32* %t, align 4
  %129 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %128) #5, !srcloc !44
  store i32 %129, i32* %ret195, align 4
  %130 = load i32, i32* %ret195, align 4
  store i32 %130, i32* %tmp196, align 4
  %131 = load i32, i32* %tmp196, align 4
  store i32 %131, i32* %t, align 4
  %132 = load i32, i32* %u, align 4
  %shr197 = lshr i32 %132, 2
  %and198 = and i32 %shr197, 63
  %idxprom199 = zext i32 %and198 to i64
  %arrayidx200 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom199
  %133 = load i32, i32* %arrayidx200, align 4
  %134 = load i32, i32* %u, align 4
  %shr201 = lshr i32 %134, 10
  %and202 = and i32 %shr201, 63
  %idxprom203 = zext i32 %and202 to i64
  %arrayidx204 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom203
  %135 = load i32, i32* %arrayidx204, align 4
  %xor205 = xor i32 %133, %135
  %136 = load i32, i32* %u, align 4
  %shr206 = lshr i32 %136, 18
  %and207 = and i32 %shr206, 63
  %idxprom208 = zext i32 %and207 to i64
  %arrayidx209 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom208
  %137 = load i32, i32* %arrayidx209, align 4
  %xor210 = xor i32 %xor205, %137
  %138 = load i32, i32* %u, align 4
  %shr211 = lshr i32 %138, 26
  %and212 = and i32 %shr211, 63
  %idxprom213 = zext i32 %and212 to i64
  %arrayidx214 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom213
  %139 = load i32, i32* %arrayidx214, align 4
  %xor215 = xor i32 %xor210, %139
  %140 = load i32, i32* %t, align 4
  %shr216 = lshr i32 %140, 2
  %and217 = and i32 %shr216, 63
  %idxprom218 = zext i32 %and217 to i64
  %arrayidx219 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom218
  %141 = load i32, i32* %arrayidx219, align 4
  %xor220 = xor i32 %xor215, %141
  %142 = load i32, i32* %t, align 4
  %shr221 = lshr i32 %142, 10
  %and222 = and i32 %shr221, 63
  %idxprom223 = zext i32 %and222 to i64
  %arrayidx224 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom223
  %143 = load i32, i32* %arrayidx224, align 4
  %xor225 = xor i32 %xor220, %143
  %144 = load i32, i32* %t, align 4
  %shr226 = lshr i32 %144, 18
  %and227 = and i32 %shr226, 63
  %idxprom228 = zext i32 %and227 to i64
  %arrayidx229 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom228
  %145 = load i32, i32* %arrayidx229, align 4
  %xor230 = xor i32 %xor225, %145
  %146 = load i32, i32* %t, align 4
  %shr231 = lshr i32 %146, 26
  %and232 = and i32 %shr231, 63
  %idxprom233 = zext i32 %and232 to i64
  %arrayidx234 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom233
  %147 = load i32, i32* %arrayidx234, align 4
  %xor235 = xor i32 %xor230, %147
  %148 = load i32, i32* %l, align 4
  %xor236 = xor i32 %148, %xor235
  store i32 %xor236, i32* %l, align 4
  %149 = load i32, i32* %l, align 4
  %150 = load i32*, i32** %s, align 8
  %arrayidx237 = getelementptr inbounds i32, i32* %150, i64 10
  %151 = load i32, i32* %arrayidx237, align 4
  %xor238 = xor i32 %149, %151
  store i32 %xor238, i32* %u, align 4
  %152 = load i32, i32* %l, align 4
  %153 = load i32*, i32** %s, align 8
  %arrayidx239 = getelementptr inbounds i32, i32* %153, i64 11
  %154 = load i32, i32* %arrayidx239, align 4
  %xor240 = xor i32 %152, %154
  store i32 %xor240, i32* %t, align 4
  %155 = load i32, i32* %t, align 4
  %156 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %155) #5, !srcloc !45
  store i32 %156, i32* %ret241, align 4
  %157 = load i32, i32* %ret241, align 4
  store i32 %157, i32* %tmp242, align 4
  %158 = load i32, i32* %tmp242, align 4
  store i32 %158, i32* %t, align 4
  %159 = load i32, i32* %u, align 4
  %shr243 = lshr i32 %159, 2
  %and244 = and i32 %shr243, 63
  %idxprom245 = zext i32 %and244 to i64
  %arrayidx246 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom245
  %160 = load i32, i32* %arrayidx246, align 4
  %161 = load i32, i32* %u, align 4
  %shr247 = lshr i32 %161, 10
  %and248 = and i32 %shr247, 63
  %idxprom249 = zext i32 %and248 to i64
  %arrayidx250 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom249
  %162 = load i32, i32* %arrayidx250, align 4
  %xor251 = xor i32 %160, %162
  %163 = load i32, i32* %u, align 4
  %shr252 = lshr i32 %163, 18
  %and253 = and i32 %shr252, 63
  %idxprom254 = zext i32 %and253 to i64
  %arrayidx255 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom254
  %164 = load i32, i32* %arrayidx255, align 4
  %xor256 = xor i32 %xor251, %164
  %165 = load i32, i32* %u, align 4
  %shr257 = lshr i32 %165, 26
  %and258 = and i32 %shr257, 63
  %idxprom259 = zext i32 %and258 to i64
  %arrayidx260 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom259
  %166 = load i32, i32* %arrayidx260, align 4
  %xor261 = xor i32 %xor256, %166
  %167 = load i32, i32* %t, align 4
  %shr262 = lshr i32 %167, 2
  %and263 = and i32 %shr262, 63
  %idxprom264 = zext i32 %and263 to i64
  %arrayidx265 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom264
  %168 = load i32, i32* %arrayidx265, align 4
  %xor266 = xor i32 %xor261, %168
  %169 = load i32, i32* %t, align 4
  %shr267 = lshr i32 %169, 10
  %and268 = and i32 %shr267, 63
  %idxprom269 = zext i32 %and268 to i64
  %arrayidx270 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom269
  %170 = load i32, i32* %arrayidx270, align 4
  %xor271 = xor i32 %xor266, %170
  %171 = load i32, i32* %t, align 4
  %shr272 = lshr i32 %171, 18
  %and273 = and i32 %shr272, 63
  %idxprom274 = zext i32 %and273 to i64
  %arrayidx275 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom274
  %172 = load i32, i32* %arrayidx275, align 4
  %xor276 = xor i32 %xor271, %172
  %173 = load i32, i32* %t, align 4
  %shr277 = lshr i32 %173, 26
  %and278 = and i32 %shr277, 63
  %idxprom279 = zext i32 %and278 to i64
  %arrayidx280 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom279
  %174 = load i32, i32* %arrayidx280, align 4
  %xor281 = xor i32 %xor276, %174
  %175 = load i32, i32* %r, align 4
  %xor282 = xor i32 %175, %xor281
  store i32 %xor282, i32* %r, align 4
  %176 = load i32, i32* %r, align 4
  %177 = load i32*, i32** %s, align 8
  %arrayidx283 = getelementptr inbounds i32, i32* %177, i64 12
  %178 = load i32, i32* %arrayidx283, align 4
  %xor284 = xor i32 %176, %178
  store i32 %xor284, i32* %u, align 4
  %179 = load i32, i32* %r, align 4
  %180 = load i32*, i32** %s, align 8
  %arrayidx285 = getelementptr inbounds i32, i32* %180, i64 13
  %181 = load i32, i32* %arrayidx285, align 4
  %xor286 = xor i32 %179, %181
  store i32 %xor286, i32* %t, align 4
  %182 = load i32, i32* %t, align 4
  %183 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %182) #5, !srcloc !46
  store i32 %183, i32* %ret287, align 4
  %184 = load i32, i32* %ret287, align 4
  store i32 %184, i32* %tmp288, align 4
  %185 = load i32, i32* %tmp288, align 4
  store i32 %185, i32* %t, align 4
  %186 = load i32, i32* %u, align 4
  %shr289 = lshr i32 %186, 2
  %and290 = and i32 %shr289, 63
  %idxprom291 = zext i32 %and290 to i64
  %arrayidx292 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom291
  %187 = load i32, i32* %arrayidx292, align 4
  %188 = load i32, i32* %u, align 4
  %shr293 = lshr i32 %188, 10
  %and294 = and i32 %shr293, 63
  %idxprom295 = zext i32 %and294 to i64
  %arrayidx296 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom295
  %189 = load i32, i32* %arrayidx296, align 4
  %xor297 = xor i32 %187, %189
  %190 = load i32, i32* %u, align 4
  %shr298 = lshr i32 %190, 18
  %and299 = and i32 %shr298, 63
  %idxprom300 = zext i32 %and299 to i64
  %arrayidx301 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom300
  %191 = load i32, i32* %arrayidx301, align 4
  %xor302 = xor i32 %xor297, %191
  %192 = load i32, i32* %u, align 4
  %shr303 = lshr i32 %192, 26
  %and304 = and i32 %shr303, 63
  %idxprom305 = zext i32 %and304 to i64
  %arrayidx306 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom305
  %193 = load i32, i32* %arrayidx306, align 4
  %xor307 = xor i32 %xor302, %193
  %194 = load i32, i32* %t, align 4
  %shr308 = lshr i32 %194, 2
  %and309 = and i32 %shr308, 63
  %idxprom310 = zext i32 %and309 to i64
  %arrayidx311 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom310
  %195 = load i32, i32* %arrayidx311, align 4
  %xor312 = xor i32 %xor307, %195
  %196 = load i32, i32* %t, align 4
  %shr313 = lshr i32 %196, 10
  %and314 = and i32 %shr313, 63
  %idxprom315 = zext i32 %and314 to i64
  %arrayidx316 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom315
  %197 = load i32, i32* %arrayidx316, align 4
  %xor317 = xor i32 %xor312, %197
  %198 = load i32, i32* %t, align 4
  %shr318 = lshr i32 %198, 18
  %and319 = and i32 %shr318, 63
  %idxprom320 = zext i32 %and319 to i64
  %arrayidx321 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom320
  %199 = load i32, i32* %arrayidx321, align 4
  %xor322 = xor i32 %xor317, %199
  %200 = load i32, i32* %t, align 4
  %shr323 = lshr i32 %200, 26
  %and324 = and i32 %shr323, 63
  %idxprom325 = zext i32 %and324 to i64
  %arrayidx326 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom325
  %201 = load i32, i32* %arrayidx326, align 4
  %xor327 = xor i32 %xor322, %201
  %202 = load i32, i32* %l, align 4
  %xor328 = xor i32 %202, %xor327
  store i32 %xor328, i32* %l, align 4
  %203 = load i32, i32* %l, align 4
  %204 = load i32*, i32** %s, align 8
  %arrayidx329 = getelementptr inbounds i32, i32* %204, i64 14
  %205 = load i32, i32* %arrayidx329, align 4
  %xor330 = xor i32 %203, %205
  store i32 %xor330, i32* %u, align 4
  %206 = load i32, i32* %l, align 4
  %207 = load i32*, i32** %s, align 8
  %arrayidx331 = getelementptr inbounds i32, i32* %207, i64 15
  %208 = load i32, i32* %arrayidx331, align 4
  %xor332 = xor i32 %206, %208
  store i32 %xor332, i32* %t, align 4
  %209 = load i32, i32* %t, align 4
  %210 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %209) #5, !srcloc !47
  store i32 %210, i32* %ret333, align 4
  %211 = load i32, i32* %ret333, align 4
  store i32 %211, i32* %tmp334, align 4
  %212 = load i32, i32* %tmp334, align 4
  store i32 %212, i32* %t, align 4
  %213 = load i32, i32* %u, align 4
  %shr335 = lshr i32 %213, 2
  %and336 = and i32 %shr335, 63
  %idxprom337 = zext i32 %and336 to i64
  %arrayidx338 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom337
  %214 = load i32, i32* %arrayidx338, align 4
  %215 = load i32, i32* %u, align 4
  %shr339 = lshr i32 %215, 10
  %and340 = and i32 %shr339, 63
  %idxprom341 = zext i32 %and340 to i64
  %arrayidx342 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom341
  %216 = load i32, i32* %arrayidx342, align 4
  %xor343 = xor i32 %214, %216
  %217 = load i32, i32* %u, align 4
  %shr344 = lshr i32 %217, 18
  %and345 = and i32 %shr344, 63
  %idxprom346 = zext i32 %and345 to i64
  %arrayidx347 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom346
  %218 = load i32, i32* %arrayidx347, align 4
  %xor348 = xor i32 %xor343, %218
  %219 = load i32, i32* %u, align 4
  %shr349 = lshr i32 %219, 26
  %and350 = and i32 %shr349, 63
  %idxprom351 = zext i32 %and350 to i64
  %arrayidx352 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom351
  %220 = load i32, i32* %arrayidx352, align 4
  %xor353 = xor i32 %xor348, %220
  %221 = load i32, i32* %t, align 4
  %shr354 = lshr i32 %221, 2
  %and355 = and i32 %shr354, 63
  %idxprom356 = zext i32 %and355 to i64
  %arrayidx357 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom356
  %222 = load i32, i32* %arrayidx357, align 4
  %xor358 = xor i32 %xor353, %222
  %223 = load i32, i32* %t, align 4
  %shr359 = lshr i32 %223, 10
  %and360 = and i32 %shr359, 63
  %idxprom361 = zext i32 %and360 to i64
  %arrayidx362 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom361
  %224 = load i32, i32* %arrayidx362, align 4
  %xor363 = xor i32 %xor358, %224
  %225 = load i32, i32* %t, align 4
  %shr364 = lshr i32 %225, 18
  %and365 = and i32 %shr364, 63
  %idxprom366 = zext i32 %and365 to i64
  %arrayidx367 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom366
  %226 = load i32, i32* %arrayidx367, align 4
  %xor368 = xor i32 %xor363, %226
  %227 = load i32, i32* %t, align 4
  %shr369 = lshr i32 %227, 26
  %and370 = and i32 %shr369, 63
  %idxprom371 = zext i32 %and370 to i64
  %arrayidx372 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom371
  %228 = load i32, i32* %arrayidx372, align 4
  %xor373 = xor i32 %xor368, %228
  %229 = load i32, i32* %r, align 4
  %xor374 = xor i32 %229, %xor373
  store i32 %xor374, i32* %r, align 4
  %230 = load i32, i32* %r, align 4
  %231 = load i32*, i32** %s, align 8
  %arrayidx375 = getelementptr inbounds i32, i32* %231, i64 16
  %232 = load i32, i32* %arrayidx375, align 4
  %xor376 = xor i32 %230, %232
  store i32 %xor376, i32* %u, align 4
  %233 = load i32, i32* %r, align 4
  %234 = load i32*, i32** %s, align 8
  %arrayidx377 = getelementptr inbounds i32, i32* %234, i64 17
  %235 = load i32, i32* %arrayidx377, align 4
  %xor378 = xor i32 %233, %235
  store i32 %xor378, i32* %t, align 4
  %236 = load i32, i32* %t, align 4
  %237 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %236) #5, !srcloc !48
  store i32 %237, i32* %ret379, align 4
  %238 = load i32, i32* %ret379, align 4
  store i32 %238, i32* %tmp380, align 4
  %239 = load i32, i32* %tmp380, align 4
  store i32 %239, i32* %t, align 4
  %240 = load i32, i32* %u, align 4
  %shr381 = lshr i32 %240, 2
  %and382 = and i32 %shr381, 63
  %idxprom383 = zext i32 %and382 to i64
  %arrayidx384 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom383
  %241 = load i32, i32* %arrayidx384, align 4
  %242 = load i32, i32* %u, align 4
  %shr385 = lshr i32 %242, 10
  %and386 = and i32 %shr385, 63
  %idxprom387 = zext i32 %and386 to i64
  %arrayidx388 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom387
  %243 = load i32, i32* %arrayidx388, align 4
  %xor389 = xor i32 %241, %243
  %244 = load i32, i32* %u, align 4
  %shr390 = lshr i32 %244, 18
  %and391 = and i32 %shr390, 63
  %idxprom392 = zext i32 %and391 to i64
  %arrayidx393 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom392
  %245 = load i32, i32* %arrayidx393, align 4
  %xor394 = xor i32 %xor389, %245
  %246 = load i32, i32* %u, align 4
  %shr395 = lshr i32 %246, 26
  %and396 = and i32 %shr395, 63
  %idxprom397 = zext i32 %and396 to i64
  %arrayidx398 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom397
  %247 = load i32, i32* %arrayidx398, align 4
  %xor399 = xor i32 %xor394, %247
  %248 = load i32, i32* %t, align 4
  %shr400 = lshr i32 %248, 2
  %and401 = and i32 %shr400, 63
  %idxprom402 = zext i32 %and401 to i64
  %arrayidx403 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom402
  %249 = load i32, i32* %arrayidx403, align 4
  %xor404 = xor i32 %xor399, %249
  %250 = load i32, i32* %t, align 4
  %shr405 = lshr i32 %250, 10
  %and406 = and i32 %shr405, 63
  %idxprom407 = zext i32 %and406 to i64
  %arrayidx408 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom407
  %251 = load i32, i32* %arrayidx408, align 4
  %xor409 = xor i32 %xor404, %251
  %252 = load i32, i32* %t, align 4
  %shr410 = lshr i32 %252, 18
  %and411 = and i32 %shr410, 63
  %idxprom412 = zext i32 %and411 to i64
  %arrayidx413 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom412
  %253 = load i32, i32* %arrayidx413, align 4
  %xor414 = xor i32 %xor409, %253
  %254 = load i32, i32* %t, align 4
  %shr415 = lshr i32 %254, 26
  %and416 = and i32 %shr415, 63
  %idxprom417 = zext i32 %and416 to i64
  %arrayidx418 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom417
  %255 = load i32, i32* %arrayidx418, align 4
  %xor419 = xor i32 %xor414, %255
  %256 = load i32, i32* %l, align 4
  %xor420 = xor i32 %256, %xor419
  store i32 %xor420, i32* %l, align 4
  %257 = load i32, i32* %l, align 4
  %258 = load i32*, i32** %s, align 8
  %arrayidx421 = getelementptr inbounds i32, i32* %258, i64 18
  %259 = load i32, i32* %arrayidx421, align 4
  %xor422 = xor i32 %257, %259
  store i32 %xor422, i32* %u, align 4
  %260 = load i32, i32* %l, align 4
  %261 = load i32*, i32** %s, align 8
  %arrayidx423 = getelementptr inbounds i32, i32* %261, i64 19
  %262 = load i32, i32* %arrayidx423, align 4
  %xor424 = xor i32 %260, %262
  store i32 %xor424, i32* %t, align 4
  %263 = load i32, i32* %t, align 4
  %264 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %263) #5, !srcloc !49
  store i32 %264, i32* %ret425, align 4
  %265 = load i32, i32* %ret425, align 4
  store i32 %265, i32* %tmp426, align 4
  %266 = load i32, i32* %tmp426, align 4
  store i32 %266, i32* %t, align 4
  %267 = load i32, i32* %u, align 4
  %shr427 = lshr i32 %267, 2
  %and428 = and i32 %shr427, 63
  %idxprom429 = zext i32 %and428 to i64
  %arrayidx430 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom429
  %268 = load i32, i32* %arrayidx430, align 4
  %269 = load i32, i32* %u, align 4
  %shr431 = lshr i32 %269, 10
  %and432 = and i32 %shr431, 63
  %idxprom433 = zext i32 %and432 to i64
  %arrayidx434 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom433
  %270 = load i32, i32* %arrayidx434, align 4
  %xor435 = xor i32 %268, %270
  %271 = load i32, i32* %u, align 4
  %shr436 = lshr i32 %271, 18
  %and437 = and i32 %shr436, 63
  %idxprom438 = zext i32 %and437 to i64
  %arrayidx439 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom438
  %272 = load i32, i32* %arrayidx439, align 4
  %xor440 = xor i32 %xor435, %272
  %273 = load i32, i32* %u, align 4
  %shr441 = lshr i32 %273, 26
  %and442 = and i32 %shr441, 63
  %idxprom443 = zext i32 %and442 to i64
  %arrayidx444 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom443
  %274 = load i32, i32* %arrayidx444, align 4
  %xor445 = xor i32 %xor440, %274
  %275 = load i32, i32* %t, align 4
  %shr446 = lshr i32 %275, 2
  %and447 = and i32 %shr446, 63
  %idxprom448 = zext i32 %and447 to i64
  %arrayidx449 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom448
  %276 = load i32, i32* %arrayidx449, align 4
  %xor450 = xor i32 %xor445, %276
  %277 = load i32, i32* %t, align 4
  %shr451 = lshr i32 %277, 10
  %and452 = and i32 %shr451, 63
  %idxprom453 = zext i32 %and452 to i64
  %arrayidx454 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom453
  %278 = load i32, i32* %arrayidx454, align 4
  %xor455 = xor i32 %xor450, %278
  %279 = load i32, i32* %t, align 4
  %shr456 = lshr i32 %279, 18
  %and457 = and i32 %shr456, 63
  %idxprom458 = zext i32 %and457 to i64
  %arrayidx459 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom458
  %280 = load i32, i32* %arrayidx459, align 4
  %xor460 = xor i32 %xor455, %280
  %281 = load i32, i32* %t, align 4
  %shr461 = lshr i32 %281, 26
  %and462 = and i32 %shr461, 63
  %idxprom463 = zext i32 %and462 to i64
  %arrayidx464 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom463
  %282 = load i32, i32* %arrayidx464, align 4
  %xor465 = xor i32 %xor460, %282
  %283 = load i32, i32* %r, align 4
  %xor466 = xor i32 %283, %xor465
  store i32 %xor466, i32* %r, align 4
  %284 = load i32, i32* %r, align 4
  %285 = load i32*, i32** %s, align 8
  %arrayidx467 = getelementptr inbounds i32, i32* %285, i64 20
  %286 = load i32, i32* %arrayidx467, align 4
  %xor468 = xor i32 %284, %286
  store i32 %xor468, i32* %u, align 4
  %287 = load i32, i32* %r, align 4
  %288 = load i32*, i32** %s, align 8
  %arrayidx469 = getelementptr inbounds i32, i32* %288, i64 21
  %289 = load i32, i32* %arrayidx469, align 4
  %xor470 = xor i32 %287, %289
  store i32 %xor470, i32* %t, align 4
  %290 = load i32, i32* %t, align 4
  %291 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %290) #5, !srcloc !50
  store i32 %291, i32* %ret471, align 4
  %292 = load i32, i32* %ret471, align 4
  store i32 %292, i32* %tmp472, align 4
  %293 = load i32, i32* %tmp472, align 4
  store i32 %293, i32* %t, align 4
  %294 = load i32, i32* %u, align 4
  %shr473 = lshr i32 %294, 2
  %and474 = and i32 %shr473, 63
  %idxprom475 = zext i32 %and474 to i64
  %arrayidx476 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom475
  %295 = load i32, i32* %arrayidx476, align 4
  %296 = load i32, i32* %u, align 4
  %shr477 = lshr i32 %296, 10
  %and478 = and i32 %shr477, 63
  %idxprom479 = zext i32 %and478 to i64
  %arrayidx480 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom479
  %297 = load i32, i32* %arrayidx480, align 4
  %xor481 = xor i32 %295, %297
  %298 = load i32, i32* %u, align 4
  %shr482 = lshr i32 %298, 18
  %and483 = and i32 %shr482, 63
  %idxprom484 = zext i32 %and483 to i64
  %arrayidx485 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom484
  %299 = load i32, i32* %arrayidx485, align 4
  %xor486 = xor i32 %xor481, %299
  %300 = load i32, i32* %u, align 4
  %shr487 = lshr i32 %300, 26
  %and488 = and i32 %shr487, 63
  %idxprom489 = zext i32 %and488 to i64
  %arrayidx490 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom489
  %301 = load i32, i32* %arrayidx490, align 4
  %xor491 = xor i32 %xor486, %301
  %302 = load i32, i32* %t, align 4
  %shr492 = lshr i32 %302, 2
  %and493 = and i32 %shr492, 63
  %idxprom494 = zext i32 %and493 to i64
  %arrayidx495 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom494
  %303 = load i32, i32* %arrayidx495, align 4
  %xor496 = xor i32 %xor491, %303
  %304 = load i32, i32* %t, align 4
  %shr497 = lshr i32 %304, 10
  %and498 = and i32 %shr497, 63
  %idxprom499 = zext i32 %and498 to i64
  %arrayidx500 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom499
  %305 = load i32, i32* %arrayidx500, align 4
  %xor501 = xor i32 %xor496, %305
  %306 = load i32, i32* %t, align 4
  %shr502 = lshr i32 %306, 18
  %and503 = and i32 %shr502, 63
  %idxprom504 = zext i32 %and503 to i64
  %arrayidx505 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom504
  %307 = load i32, i32* %arrayidx505, align 4
  %xor506 = xor i32 %xor501, %307
  %308 = load i32, i32* %t, align 4
  %shr507 = lshr i32 %308, 26
  %and508 = and i32 %shr507, 63
  %idxprom509 = zext i32 %and508 to i64
  %arrayidx510 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom509
  %309 = load i32, i32* %arrayidx510, align 4
  %xor511 = xor i32 %xor506, %309
  %310 = load i32, i32* %l, align 4
  %xor512 = xor i32 %310, %xor511
  store i32 %xor512, i32* %l, align 4
  %311 = load i32, i32* %l, align 4
  %312 = load i32*, i32** %s, align 8
  %arrayidx513 = getelementptr inbounds i32, i32* %312, i64 22
  %313 = load i32, i32* %arrayidx513, align 4
  %xor514 = xor i32 %311, %313
  store i32 %xor514, i32* %u, align 4
  %314 = load i32, i32* %l, align 4
  %315 = load i32*, i32** %s, align 8
  %arrayidx515 = getelementptr inbounds i32, i32* %315, i64 23
  %316 = load i32, i32* %arrayidx515, align 4
  %xor516 = xor i32 %314, %316
  store i32 %xor516, i32* %t, align 4
  %317 = load i32, i32* %t, align 4
  %318 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %317) #5, !srcloc !51
  store i32 %318, i32* %ret517, align 4
  %319 = load i32, i32* %ret517, align 4
  store i32 %319, i32* %tmp518, align 4
  %320 = load i32, i32* %tmp518, align 4
  store i32 %320, i32* %t, align 4
  %321 = load i32, i32* %u, align 4
  %shr519 = lshr i32 %321, 2
  %and520 = and i32 %shr519, 63
  %idxprom521 = zext i32 %and520 to i64
  %arrayidx522 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom521
  %322 = load i32, i32* %arrayidx522, align 4
  %323 = load i32, i32* %u, align 4
  %shr523 = lshr i32 %323, 10
  %and524 = and i32 %shr523, 63
  %idxprom525 = zext i32 %and524 to i64
  %arrayidx526 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom525
  %324 = load i32, i32* %arrayidx526, align 4
  %xor527 = xor i32 %322, %324
  %325 = load i32, i32* %u, align 4
  %shr528 = lshr i32 %325, 18
  %and529 = and i32 %shr528, 63
  %idxprom530 = zext i32 %and529 to i64
  %arrayidx531 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom530
  %326 = load i32, i32* %arrayidx531, align 4
  %xor532 = xor i32 %xor527, %326
  %327 = load i32, i32* %u, align 4
  %shr533 = lshr i32 %327, 26
  %and534 = and i32 %shr533, 63
  %idxprom535 = zext i32 %and534 to i64
  %arrayidx536 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom535
  %328 = load i32, i32* %arrayidx536, align 4
  %xor537 = xor i32 %xor532, %328
  %329 = load i32, i32* %t, align 4
  %shr538 = lshr i32 %329, 2
  %and539 = and i32 %shr538, 63
  %idxprom540 = zext i32 %and539 to i64
  %arrayidx541 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom540
  %330 = load i32, i32* %arrayidx541, align 4
  %xor542 = xor i32 %xor537, %330
  %331 = load i32, i32* %t, align 4
  %shr543 = lshr i32 %331, 10
  %and544 = and i32 %shr543, 63
  %idxprom545 = zext i32 %and544 to i64
  %arrayidx546 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom545
  %332 = load i32, i32* %arrayidx546, align 4
  %xor547 = xor i32 %xor542, %332
  %333 = load i32, i32* %t, align 4
  %shr548 = lshr i32 %333, 18
  %and549 = and i32 %shr548, 63
  %idxprom550 = zext i32 %and549 to i64
  %arrayidx551 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom550
  %334 = load i32, i32* %arrayidx551, align 4
  %xor552 = xor i32 %xor547, %334
  %335 = load i32, i32* %t, align 4
  %shr553 = lshr i32 %335, 26
  %and554 = and i32 %shr553, 63
  %idxprom555 = zext i32 %and554 to i64
  %arrayidx556 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom555
  %336 = load i32, i32* %arrayidx556, align 4
  %xor557 = xor i32 %xor552, %336
  %337 = load i32, i32* %r, align 4
  %xor558 = xor i32 %337, %xor557
  store i32 %xor558, i32* %r, align 4
  %338 = load i32, i32* %r, align 4
  %339 = load i32*, i32** %s, align 8
  %arrayidx559 = getelementptr inbounds i32, i32* %339, i64 24
  %340 = load i32, i32* %arrayidx559, align 4
  %xor560 = xor i32 %338, %340
  store i32 %xor560, i32* %u, align 4
  %341 = load i32, i32* %r, align 4
  %342 = load i32*, i32** %s, align 8
  %arrayidx561 = getelementptr inbounds i32, i32* %342, i64 25
  %343 = load i32, i32* %arrayidx561, align 4
  %xor562 = xor i32 %341, %343
  store i32 %xor562, i32* %t, align 4
  %344 = load i32, i32* %t, align 4
  %345 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %344) #5, !srcloc !52
  store i32 %345, i32* %ret563, align 4
  %346 = load i32, i32* %ret563, align 4
  store i32 %346, i32* %tmp564, align 4
  %347 = load i32, i32* %tmp564, align 4
  store i32 %347, i32* %t, align 4
  %348 = load i32, i32* %u, align 4
  %shr565 = lshr i32 %348, 2
  %and566 = and i32 %shr565, 63
  %idxprom567 = zext i32 %and566 to i64
  %arrayidx568 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom567
  %349 = load i32, i32* %arrayidx568, align 4
  %350 = load i32, i32* %u, align 4
  %shr569 = lshr i32 %350, 10
  %and570 = and i32 %shr569, 63
  %idxprom571 = zext i32 %and570 to i64
  %arrayidx572 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom571
  %351 = load i32, i32* %arrayidx572, align 4
  %xor573 = xor i32 %349, %351
  %352 = load i32, i32* %u, align 4
  %shr574 = lshr i32 %352, 18
  %and575 = and i32 %shr574, 63
  %idxprom576 = zext i32 %and575 to i64
  %arrayidx577 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom576
  %353 = load i32, i32* %arrayidx577, align 4
  %xor578 = xor i32 %xor573, %353
  %354 = load i32, i32* %u, align 4
  %shr579 = lshr i32 %354, 26
  %and580 = and i32 %shr579, 63
  %idxprom581 = zext i32 %and580 to i64
  %arrayidx582 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom581
  %355 = load i32, i32* %arrayidx582, align 4
  %xor583 = xor i32 %xor578, %355
  %356 = load i32, i32* %t, align 4
  %shr584 = lshr i32 %356, 2
  %and585 = and i32 %shr584, 63
  %idxprom586 = zext i32 %and585 to i64
  %arrayidx587 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom586
  %357 = load i32, i32* %arrayidx587, align 4
  %xor588 = xor i32 %xor583, %357
  %358 = load i32, i32* %t, align 4
  %shr589 = lshr i32 %358, 10
  %and590 = and i32 %shr589, 63
  %idxprom591 = zext i32 %and590 to i64
  %arrayidx592 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom591
  %359 = load i32, i32* %arrayidx592, align 4
  %xor593 = xor i32 %xor588, %359
  %360 = load i32, i32* %t, align 4
  %shr594 = lshr i32 %360, 18
  %and595 = and i32 %shr594, 63
  %idxprom596 = zext i32 %and595 to i64
  %arrayidx597 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom596
  %361 = load i32, i32* %arrayidx597, align 4
  %xor598 = xor i32 %xor593, %361
  %362 = load i32, i32* %t, align 4
  %shr599 = lshr i32 %362, 26
  %and600 = and i32 %shr599, 63
  %idxprom601 = zext i32 %and600 to i64
  %arrayidx602 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom601
  %363 = load i32, i32* %arrayidx602, align 4
  %xor603 = xor i32 %xor598, %363
  %364 = load i32, i32* %l, align 4
  %xor604 = xor i32 %364, %xor603
  store i32 %xor604, i32* %l, align 4
  %365 = load i32, i32* %l, align 4
  %366 = load i32*, i32** %s, align 8
  %arrayidx605 = getelementptr inbounds i32, i32* %366, i64 26
  %367 = load i32, i32* %arrayidx605, align 4
  %xor606 = xor i32 %365, %367
  store i32 %xor606, i32* %u, align 4
  %368 = load i32, i32* %l, align 4
  %369 = load i32*, i32** %s, align 8
  %arrayidx607 = getelementptr inbounds i32, i32* %369, i64 27
  %370 = load i32, i32* %arrayidx607, align 4
  %xor608 = xor i32 %368, %370
  store i32 %xor608, i32* %t, align 4
  %371 = load i32, i32* %t, align 4
  %372 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %371) #5, !srcloc !53
  store i32 %372, i32* %ret609, align 4
  %373 = load i32, i32* %ret609, align 4
  store i32 %373, i32* %tmp610, align 4
  %374 = load i32, i32* %tmp610, align 4
  store i32 %374, i32* %t, align 4
  %375 = load i32, i32* %u, align 4
  %shr611 = lshr i32 %375, 2
  %and612 = and i32 %shr611, 63
  %idxprom613 = zext i32 %and612 to i64
  %arrayidx614 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom613
  %376 = load i32, i32* %arrayidx614, align 4
  %377 = load i32, i32* %u, align 4
  %shr615 = lshr i32 %377, 10
  %and616 = and i32 %shr615, 63
  %idxprom617 = zext i32 %and616 to i64
  %arrayidx618 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom617
  %378 = load i32, i32* %arrayidx618, align 4
  %xor619 = xor i32 %376, %378
  %379 = load i32, i32* %u, align 4
  %shr620 = lshr i32 %379, 18
  %and621 = and i32 %shr620, 63
  %idxprom622 = zext i32 %and621 to i64
  %arrayidx623 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom622
  %380 = load i32, i32* %arrayidx623, align 4
  %xor624 = xor i32 %xor619, %380
  %381 = load i32, i32* %u, align 4
  %shr625 = lshr i32 %381, 26
  %and626 = and i32 %shr625, 63
  %idxprom627 = zext i32 %and626 to i64
  %arrayidx628 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom627
  %382 = load i32, i32* %arrayidx628, align 4
  %xor629 = xor i32 %xor624, %382
  %383 = load i32, i32* %t, align 4
  %shr630 = lshr i32 %383, 2
  %and631 = and i32 %shr630, 63
  %idxprom632 = zext i32 %and631 to i64
  %arrayidx633 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom632
  %384 = load i32, i32* %arrayidx633, align 4
  %xor634 = xor i32 %xor629, %384
  %385 = load i32, i32* %t, align 4
  %shr635 = lshr i32 %385, 10
  %and636 = and i32 %shr635, 63
  %idxprom637 = zext i32 %and636 to i64
  %arrayidx638 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom637
  %386 = load i32, i32* %arrayidx638, align 4
  %xor639 = xor i32 %xor634, %386
  %387 = load i32, i32* %t, align 4
  %shr640 = lshr i32 %387, 18
  %and641 = and i32 %shr640, 63
  %idxprom642 = zext i32 %and641 to i64
  %arrayidx643 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom642
  %388 = load i32, i32* %arrayidx643, align 4
  %xor644 = xor i32 %xor639, %388
  %389 = load i32, i32* %t, align 4
  %shr645 = lshr i32 %389, 26
  %and646 = and i32 %shr645, 63
  %idxprom647 = zext i32 %and646 to i64
  %arrayidx648 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom647
  %390 = load i32, i32* %arrayidx648, align 4
  %xor649 = xor i32 %xor644, %390
  %391 = load i32, i32* %r, align 4
  %xor650 = xor i32 %391, %xor649
  store i32 %xor650, i32* %r, align 4
  %392 = load i32, i32* %r, align 4
  %393 = load i32*, i32** %s, align 8
  %arrayidx651 = getelementptr inbounds i32, i32* %393, i64 28
  %394 = load i32, i32* %arrayidx651, align 4
  %xor652 = xor i32 %392, %394
  store i32 %xor652, i32* %u, align 4
  %395 = load i32, i32* %r, align 4
  %396 = load i32*, i32** %s, align 8
  %arrayidx653 = getelementptr inbounds i32, i32* %396, i64 29
  %397 = load i32, i32* %arrayidx653, align 4
  %xor654 = xor i32 %395, %397
  store i32 %xor654, i32* %t, align 4
  %398 = load i32, i32* %t, align 4
  %399 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %398) #5, !srcloc !54
  store i32 %399, i32* %ret655, align 4
  %400 = load i32, i32* %ret655, align 4
  store i32 %400, i32* %tmp656, align 4
  %401 = load i32, i32* %tmp656, align 4
  store i32 %401, i32* %t, align 4
  %402 = load i32, i32* %u, align 4
  %shr657 = lshr i32 %402, 2
  %and658 = and i32 %shr657, 63
  %idxprom659 = zext i32 %and658 to i64
  %arrayidx660 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom659
  %403 = load i32, i32* %arrayidx660, align 4
  %404 = load i32, i32* %u, align 4
  %shr661 = lshr i32 %404, 10
  %and662 = and i32 %shr661, 63
  %idxprom663 = zext i32 %and662 to i64
  %arrayidx664 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom663
  %405 = load i32, i32* %arrayidx664, align 4
  %xor665 = xor i32 %403, %405
  %406 = load i32, i32* %u, align 4
  %shr666 = lshr i32 %406, 18
  %and667 = and i32 %shr666, 63
  %idxprom668 = zext i32 %and667 to i64
  %arrayidx669 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom668
  %407 = load i32, i32* %arrayidx669, align 4
  %xor670 = xor i32 %xor665, %407
  %408 = load i32, i32* %u, align 4
  %shr671 = lshr i32 %408, 26
  %and672 = and i32 %shr671, 63
  %idxprom673 = zext i32 %and672 to i64
  %arrayidx674 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom673
  %409 = load i32, i32* %arrayidx674, align 4
  %xor675 = xor i32 %xor670, %409
  %410 = load i32, i32* %t, align 4
  %shr676 = lshr i32 %410, 2
  %and677 = and i32 %shr676, 63
  %idxprom678 = zext i32 %and677 to i64
  %arrayidx679 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom678
  %411 = load i32, i32* %arrayidx679, align 4
  %xor680 = xor i32 %xor675, %411
  %412 = load i32, i32* %t, align 4
  %shr681 = lshr i32 %412, 10
  %and682 = and i32 %shr681, 63
  %idxprom683 = zext i32 %and682 to i64
  %arrayidx684 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom683
  %413 = load i32, i32* %arrayidx684, align 4
  %xor685 = xor i32 %xor680, %413
  %414 = load i32, i32* %t, align 4
  %shr686 = lshr i32 %414, 18
  %and687 = and i32 %shr686, 63
  %idxprom688 = zext i32 %and687 to i64
  %arrayidx689 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom688
  %415 = load i32, i32* %arrayidx689, align 4
  %xor690 = xor i32 %xor685, %415
  %416 = load i32, i32* %t, align 4
  %shr691 = lshr i32 %416, 26
  %and692 = and i32 %shr691, 63
  %idxprom693 = zext i32 %and692 to i64
  %arrayidx694 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom693
  %417 = load i32, i32* %arrayidx694, align 4
  %xor695 = xor i32 %xor690, %417
  %418 = load i32, i32* %l, align 4
  %xor696 = xor i32 %418, %xor695
  store i32 %xor696, i32* %l, align 4
  %419 = load i32, i32* %l, align 4
  %420 = load i32*, i32** %s, align 8
  %arrayidx697 = getelementptr inbounds i32, i32* %420, i64 30
  %421 = load i32, i32* %arrayidx697, align 4
  %xor698 = xor i32 %419, %421
  store i32 %xor698, i32* %u, align 4
  %422 = load i32, i32* %l, align 4
  %423 = load i32*, i32** %s, align 8
  %arrayidx699 = getelementptr inbounds i32, i32* %423, i64 31
  %424 = load i32, i32* %arrayidx699, align 4
  %xor700 = xor i32 %422, %424
  store i32 %xor700, i32* %t, align 4
  %425 = load i32, i32* %t, align 4
  %426 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %425) #5, !srcloc !55
  store i32 %426, i32* %ret701, align 4
  %427 = load i32, i32* %ret701, align 4
  store i32 %427, i32* %tmp702, align 4
  %428 = load i32, i32* %tmp702, align 4
  store i32 %428, i32* %t, align 4
  %429 = load i32, i32* %u, align 4
  %shr703 = lshr i32 %429, 2
  %and704 = and i32 %shr703, 63
  %idxprom705 = zext i32 %and704 to i64
  %arrayidx706 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom705
  %430 = load i32, i32* %arrayidx706, align 4
  %431 = load i32, i32* %u, align 4
  %shr707 = lshr i32 %431, 10
  %and708 = and i32 %shr707, 63
  %idxprom709 = zext i32 %and708 to i64
  %arrayidx710 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom709
  %432 = load i32, i32* %arrayidx710, align 4
  %xor711 = xor i32 %430, %432
  %433 = load i32, i32* %u, align 4
  %shr712 = lshr i32 %433, 18
  %and713 = and i32 %shr712, 63
  %idxprom714 = zext i32 %and713 to i64
  %arrayidx715 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom714
  %434 = load i32, i32* %arrayidx715, align 4
  %xor716 = xor i32 %xor711, %434
  %435 = load i32, i32* %u, align 4
  %shr717 = lshr i32 %435, 26
  %and718 = and i32 %shr717, 63
  %idxprom719 = zext i32 %and718 to i64
  %arrayidx720 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom719
  %436 = load i32, i32* %arrayidx720, align 4
  %xor721 = xor i32 %xor716, %436
  %437 = load i32, i32* %t, align 4
  %shr722 = lshr i32 %437, 2
  %and723 = and i32 %shr722, 63
  %idxprom724 = zext i32 %and723 to i64
  %arrayidx725 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom724
  %438 = load i32, i32* %arrayidx725, align 4
  %xor726 = xor i32 %xor721, %438
  %439 = load i32, i32* %t, align 4
  %shr727 = lshr i32 %439, 10
  %and728 = and i32 %shr727, 63
  %idxprom729 = zext i32 %and728 to i64
  %arrayidx730 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom729
  %440 = load i32, i32* %arrayidx730, align 4
  %xor731 = xor i32 %xor726, %440
  %441 = load i32, i32* %t, align 4
  %shr732 = lshr i32 %441, 18
  %and733 = and i32 %shr732, 63
  %idxprom734 = zext i32 %and733 to i64
  %arrayidx735 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom734
  %442 = load i32, i32* %arrayidx735, align 4
  %xor736 = xor i32 %xor731, %442
  %443 = load i32, i32* %t, align 4
  %shr737 = lshr i32 %443, 26
  %and738 = and i32 %shr737, 63
  %idxprom739 = zext i32 %and738 to i64
  %arrayidx740 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom739
  %444 = load i32, i32* %arrayidx740, align 4
  %xor741 = xor i32 %xor736, %444
  %445 = load i32, i32* %r, align 4
  %xor742 = xor i32 %445, %xor741
  store i32 %xor742, i32* %r, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %446 = load i32, i32* %r, align 4
  %447 = load i32*, i32** %s, align 8
  %arrayidx743 = getelementptr inbounds i32, i32* %447, i64 30
  %448 = load i32, i32* %arrayidx743, align 4
  %xor744 = xor i32 %446, %448
  store i32 %xor744, i32* %u, align 4
  %449 = load i32, i32* %r, align 4
  %450 = load i32*, i32** %s, align 8
  %arrayidx745 = getelementptr inbounds i32, i32* %450, i64 31
  %451 = load i32, i32* %arrayidx745, align 4
  %xor746 = xor i32 %449, %451
  store i32 %xor746, i32* %t, align 4
  %452 = load i32, i32* %t, align 4
  %453 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %452) #5, !srcloc !56
  store i32 %453, i32* %ret747, align 4
  %454 = load i32, i32* %ret747, align 4
  store i32 %454, i32* %tmp748, align 4
  %455 = load i32, i32* %tmp748, align 4
  store i32 %455, i32* %t, align 4
  %456 = load i32, i32* %u, align 4
  %shr749 = lshr i32 %456, 2
  %and750 = and i32 %shr749, 63
  %idxprom751 = zext i32 %and750 to i64
  %arrayidx752 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom751
  %457 = load i32, i32* %arrayidx752, align 4
  %458 = load i32, i32* %u, align 4
  %shr753 = lshr i32 %458, 10
  %and754 = and i32 %shr753, 63
  %idxprom755 = zext i32 %and754 to i64
  %arrayidx756 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom755
  %459 = load i32, i32* %arrayidx756, align 4
  %xor757 = xor i32 %457, %459
  %460 = load i32, i32* %u, align 4
  %shr758 = lshr i32 %460, 18
  %and759 = and i32 %shr758, 63
  %idxprom760 = zext i32 %and759 to i64
  %arrayidx761 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom760
  %461 = load i32, i32* %arrayidx761, align 4
  %xor762 = xor i32 %xor757, %461
  %462 = load i32, i32* %u, align 4
  %shr763 = lshr i32 %462, 26
  %and764 = and i32 %shr763, 63
  %idxprom765 = zext i32 %and764 to i64
  %arrayidx766 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom765
  %463 = load i32, i32* %arrayidx766, align 4
  %xor767 = xor i32 %xor762, %463
  %464 = load i32, i32* %t, align 4
  %shr768 = lshr i32 %464, 2
  %and769 = and i32 %shr768, 63
  %idxprom770 = zext i32 %and769 to i64
  %arrayidx771 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom770
  %465 = load i32, i32* %arrayidx771, align 4
  %xor772 = xor i32 %xor767, %465
  %466 = load i32, i32* %t, align 4
  %shr773 = lshr i32 %466, 10
  %and774 = and i32 %shr773, 63
  %idxprom775 = zext i32 %and774 to i64
  %arrayidx776 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom775
  %467 = load i32, i32* %arrayidx776, align 4
  %xor777 = xor i32 %xor772, %467
  %468 = load i32, i32* %t, align 4
  %shr778 = lshr i32 %468, 18
  %and779 = and i32 %shr778, 63
  %idxprom780 = zext i32 %and779 to i64
  %arrayidx781 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom780
  %469 = load i32, i32* %arrayidx781, align 4
  %xor782 = xor i32 %xor777, %469
  %470 = load i32, i32* %t, align 4
  %shr783 = lshr i32 %470, 26
  %and784 = and i32 %shr783, 63
  %idxprom785 = zext i32 %and784 to i64
  %arrayidx786 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom785
  %471 = load i32, i32* %arrayidx786, align 4
  %xor787 = xor i32 %xor782, %471
  %472 = load i32, i32* %l, align 4
  %xor788 = xor i32 %472, %xor787
  store i32 %xor788, i32* %l, align 4
  %473 = load i32, i32* %l, align 4
  %474 = load i32*, i32** %s, align 8
  %arrayidx789 = getelementptr inbounds i32, i32* %474, i64 28
  %475 = load i32, i32* %arrayidx789, align 4
  %xor790 = xor i32 %473, %475
  store i32 %xor790, i32* %u, align 4
  %476 = load i32, i32* %l, align 4
  %477 = load i32*, i32** %s, align 8
  %arrayidx791 = getelementptr inbounds i32, i32* %477, i64 29
  %478 = load i32, i32* %arrayidx791, align 4
  %xor792 = xor i32 %476, %478
  store i32 %xor792, i32* %t, align 4
  %479 = load i32, i32* %t, align 4
  %480 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %479) #5, !srcloc !57
  store i32 %480, i32* %ret793, align 4
  %481 = load i32, i32* %ret793, align 4
  store i32 %481, i32* %tmp794, align 4
  %482 = load i32, i32* %tmp794, align 4
  store i32 %482, i32* %t, align 4
  %483 = load i32, i32* %u, align 4
  %shr795 = lshr i32 %483, 2
  %and796 = and i32 %shr795, 63
  %idxprom797 = zext i32 %and796 to i64
  %arrayidx798 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom797
  %484 = load i32, i32* %arrayidx798, align 4
  %485 = load i32, i32* %u, align 4
  %shr799 = lshr i32 %485, 10
  %and800 = and i32 %shr799, 63
  %idxprom801 = zext i32 %and800 to i64
  %arrayidx802 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom801
  %486 = load i32, i32* %arrayidx802, align 4
  %xor803 = xor i32 %484, %486
  %487 = load i32, i32* %u, align 4
  %shr804 = lshr i32 %487, 18
  %and805 = and i32 %shr804, 63
  %idxprom806 = zext i32 %and805 to i64
  %arrayidx807 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom806
  %488 = load i32, i32* %arrayidx807, align 4
  %xor808 = xor i32 %xor803, %488
  %489 = load i32, i32* %u, align 4
  %shr809 = lshr i32 %489, 26
  %and810 = and i32 %shr809, 63
  %idxprom811 = zext i32 %and810 to i64
  %arrayidx812 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom811
  %490 = load i32, i32* %arrayidx812, align 4
  %xor813 = xor i32 %xor808, %490
  %491 = load i32, i32* %t, align 4
  %shr814 = lshr i32 %491, 2
  %and815 = and i32 %shr814, 63
  %idxprom816 = zext i32 %and815 to i64
  %arrayidx817 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom816
  %492 = load i32, i32* %arrayidx817, align 4
  %xor818 = xor i32 %xor813, %492
  %493 = load i32, i32* %t, align 4
  %shr819 = lshr i32 %493, 10
  %and820 = and i32 %shr819, 63
  %idxprom821 = zext i32 %and820 to i64
  %arrayidx822 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom821
  %494 = load i32, i32* %arrayidx822, align 4
  %xor823 = xor i32 %xor818, %494
  %495 = load i32, i32* %t, align 4
  %shr824 = lshr i32 %495, 18
  %and825 = and i32 %shr824, 63
  %idxprom826 = zext i32 %and825 to i64
  %arrayidx827 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom826
  %496 = load i32, i32* %arrayidx827, align 4
  %xor828 = xor i32 %xor823, %496
  %497 = load i32, i32* %t, align 4
  %shr829 = lshr i32 %497, 26
  %and830 = and i32 %shr829, 63
  %idxprom831 = zext i32 %and830 to i64
  %arrayidx832 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom831
  %498 = load i32, i32* %arrayidx832, align 4
  %xor833 = xor i32 %xor828, %498
  %499 = load i32, i32* %r, align 4
  %xor834 = xor i32 %499, %xor833
  store i32 %xor834, i32* %r, align 4
  %500 = load i32, i32* %r, align 4
  %501 = load i32*, i32** %s, align 8
  %arrayidx835 = getelementptr inbounds i32, i32* %501, i64 26
  %502 = load i32, i32* %arrayidx835, align 4
  %xor836 = xor i32 %500, %502
  store i32 %xor836, i32* %u, align 4
  %503 = load i32, i32* %r, align 4
  %504 = load i32*, i32** %s, align 8
  %arrayidx837 = getelementptr inbounds i32, i32* %504, i64 27
  %505 = load i32, i32* %arrayidx837, align 4
  %xor838 = xor i32 %503, %505
  store i32 %xor838, i32* %t, align 4
  %506 = load i32, i32* %t, align 4
  %507 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %506) #5, !srcloc !58
  store i32 %507, i32* %ret839, align 4
  %508 = load i32, i32* %ret839, align 4
  store i32 %508, i32* %tmp840, align 4
  %509 = load i32, i32* %tmp840, align 4
  store i32 %509, i32* %t, align 4
  %510 = load i32, i32* %u, align 4
  %shr841 = lshr i32 %510, 2
  %and842 = and i32 %shr841, 63
  %idxprom843 = zext i32 %and842 to i64
  %arrayidx844 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom843
  %511 = load i32, i32* %arrayidx844, align 4
  %512 = load i32, i32* %u, align 4
  %shr845 = lshr i32 %512, 10
  %and846 = and i32 %shr845, 63
  %idxprom847 = zext i32 %and846 to i64
  %arrayidx848 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom847
  %513 = load i32, i32* %arrayidx848, align 4
  %xor849 = xor i32 %511, %513
  %514 = load i32, i32* %u, align 4
  %shr850 = lshr i32 %514, 18
  %and851 = and i32 %shr850, 63
  %idxprom852 = zext i32 %and851 to i64
  %arrayidx853 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom852
  %515 = load i32, i32* %arrayidx853, align 4
  %xor854 = xor i32 %xor849, %515
  %516 = load i32, i32* %u, align 4
  %shr855 = lshr i32 %516, 26
  %and856 = and i32 %shr855, 63
  %idxprom857 = zext i32 %and856 to i64
  %arrayidx858 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom857
  %517 = load i32, i32* %arrayidx858, align 4
  %xor859 = xor i32 %xor854, %517
  %518 = load i32, i32* %t, align 4
  %shr860 = lshr i32 %518, 2
  %and861 = and i32 %shr860, 63
  %idxprom862 = zext i32 %and861 to i64
  %arrayidx863 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom862
  %519 = load i32, i32* %arrayidx863, align 4
  %xor864 = xor i32 %xor859, %519
  %520 = load i32, i32* %t, align 4
  %shr865 = lshr i32 %520, 10
  %and866 = and i32 %shr865, 63
  %idxprom867 = zext i32 %and866 to i64
  %arrayidx868 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom867
  %521 = load i32, i32* %arrayidx868, align 4
  %xor869 = xor i32 %xor864, %521
  %522 = load i32, i32* %t, align 4
  %shr870 = lshr i32 %522, 18
  %and871 = and i32 %shr870, 63
  %idxprom872 = zext i32 %and871 to i64
  %arrayidx873 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom872
  %523 = load i32, i32* %arrayidx873, align 4
  %xor874 = xor i32 %xor869, %523
  %524 = load i32, i32* %t, align 4
  %shr875 = lshr i32 %524, 26
  %and876 = and i32 %shr875, 63
  %idxprom877 = zext i32 %and876 to i64
  %arrayidx878 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom877
  %525 = load i32, i32* %arrayidx878, align 4
  %xor879 = xor i32 %xor874, %525
  %526 = load i32, i32* %l, align 4
  %xor880 = xor i32 %526, %xor879
  store i32 %xor880, i32* %l, align 4
  %527 = load i32, i32* %l, align 4
  %528 = load i32*, i32** %s, align 8
  %arrayidx881 = getelementptr inbounds i32, i32* %528, i64 24
  %529 = load i32, i32* %arrayidx881, align 4
  %xor882 = xor i32 %527, %529
  store i32 %xor882, i32* %u, align 4
  %530 = load i32, i32* %l, align 4
  %531 = load i32*, i32** %s, align 8
  %arrayidx883 = getelementptr inbounds i32, i32* %531, i64 25
  %532 = load i32, i32* %arrayidx883, align 4
  %xor884 = xor i32 %530, %532
  store i32 %xor884, i32* %t, align 4
  %533 = load i32, i32* %t, align 4
  %534 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %533) #5, !srcloc !59
  store i32 %534, i32* %ret885, align 4
  %535 = load i32, i32* %ret885, align 4
  store i32 %535, i32* %tmp886, align 4
  %536 = load i32, i32* %tmp886, align 4
  store i32 %536, i32* %t, align 4
  %537 = load i32, i32* %u, align 4
  %shr887 = lshr i32 %537, 2
  %and888 = and i32 %shr887, 63
  %idxprom889 = zext i32 %and888 to i64
  %arrayidx890 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom889
  %538 = load i32, i32* %arrayidx890, align 4
  %539 = load i32, i32* %u, align 4
  %shr891 = lshr i32 %539, 10
  %and892 = and i32 %shr891, 63
  %idxprom893 = zext i32 %and892 to i64
  %arrayidx894 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom893
  %540 = load i32, i32* %arrayidx894, align 4
  %xor895 = xor i32 %538, %540
  %541 = load i32, i32* %u, align 4
  %shr896 = lshr i32 %541, 18
  %and897 = and i32 %shr896, 63
  %idxprom898 = zext i32 %and897 to i64
  %arrayidx899 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom898
  %542 = load i32, i32* %arrayidx899, align 4
  %xor900 = xor i32 %xor895, %542
  %543 = load i32, i32* %u, align 4
  %shr901 = lshr i32 %543, 26
  %and902 = and i32 %shr901, 63
  %idxprom903 = zext i32 %and902 to i64
  %arrayidx904 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom903
  %544 = load i32, i32* %arrayidx904, align 4
  %xor905 = xor i32 %xor900, %544
  %545 = load i32, i32* %t, align 4
  %shr906 = lshr i32 %545, 2
  %and907 = and i32 %shr906, 63
  %idxprom908 = zext i32 %and907 to i64
  %arrayidx909 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom908
  %546 = load i32, i32* %arrayidx909, align 4
  %xor910 = xor i32 %xor905, %546
  %547 = load i32, i32* %t, align 4
  %shr911 = lshr i32 %547, 10
  %and912 = and i32 %shr911, 63
  %idxprom913 = zext i32 %and912 to i64
  %arrayidx914 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom913
  %548 = load i32, i32* %arrayidx914, align 4
  %xor915 = xor i32 %xor910, %548
  %549 = load i32, i32* %t, align 4
  %shr916 = lshr i32 %549, 18
  %and917 = and i32 %shr916, 63
  %idxprom918 = zext i32 %and917 to i64
  %arrayidx919 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom918
  %550 = load i32, i32* %arrayidx919, align 4
  %xor920 = xor i32 %xor915, %550
  %551 = load i32, i32* %t, align 4
  %shr921 = lshr i32 %551, 26
  %and922 = and i32 %shr921, 63
  %idxprom923 = zext i32 %and922 to i64
  %arrayidx924 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom923
  %552 = load i32, i32* %arrayidx924, align 4
  %xor925 = xor i32 %xor920, %552
  %553 = load i32, i32* %r, align 4
  %xor926 = xor i32 %553, %xor925
  store i32 %xor926, i32* %r, align 4
  %554 = load i32, i32* %r, align 4
  %555 = load i32*, i32** %s, align 8
  %arrayidx927 = getelementptr inbounds i32, i32* %555, i64 22
  %556 = load i32, i32* %arrayidx927, align 4
  %xor928 = xor i32 %554, %556
  store i32 %xor928, i32* %u, align 4
  %557 = load i32, i32* %r, align 4
  %558 = load i32*, i32** %s, align 8
  %arrayidx929 = getelementptr inbounds i32, i32* %558, i64 23
  %559 = load i32, i32* %arrayidx929, align 4
  %xor930 = xor i32 %557, %559
  store i32 %xor930, i32* %t, align 4
  %560 = load i32, i32* %t, align 4
  %561 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %560) #5, !srcloc !60
  store i32 %561, i32* %ret931, align 4
  %562 = load i32, i32* %ret931, align 4
  store i32 %562, i32* %tmp932, align 4
  %563 = load i32, i32* %tmp932, align 4
  store i32 %563, i32* %t, align 4
  %564 = load i32, i32* %u, align 4
  %shr933 = lshr i32 %564, 2
  %and934 = and i32 %shr933, 63
  %idxprom935 = zext i32 %and934 to i64
  %arrayidx936 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom935
  %565 = load i32, i32* %arrayidx936, align 4
  %566 = load i32, i32* %u, align 4
  %shr937 = lshr i32 %566, 10
  %and938 = and i32 %shr937, 63
  %idxprom939 = zext i32 %and938 to i64
  %arrayidx940 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom939
  %567 = load i32, i32* %arrayidx940, align 4
  %xor941 = xor i32 %565, %567
  %568 = load i32, i32* %u, align 4
  %shr942 = lshr i32 %568, 18
  %and943 = and i32 %shr942, 63
  %idxprom944 = zext i32 %and943 to i64
  %arrayidx945 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom944
  %569 = load i32, i32* %arrayidx945, align 4
  %xor946 = xor i32 %xor941, %569
  %570 = load i32, i32* %u, align 4
  %shr947 = lshr i32 %570, 26
  %and948 = and i32 %shr947, 63
  %idxprom949 = zext i32 %and948 to i64
  %arrayidx950 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom949
  %571 = load i32, i32* %arrayidx950, align 4
  %xor951 = xor i32 %xor946, %571
  %572 = load i32, i32* %t, align 4
  %shr952 = lshr i32 %572, 2
  %and953 = and i32 %shr952, 63
  %idxprom954 = zext i32 %and953 to i64
  %arrayidx955 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom954
  %573 = load i32, i32* %arrayidx955, align 4
  %xor956 = xor i32 %xor951, %573
  %574 = load i32, i32* %t, align 4
  %shr957 = lshr i32 %574, 10
  %and958 = and i32 %shr957, 63
  %idxprom959 = zext i32 %and958 to i64
  %arrayidx960 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom959
  %575 = load i32, i32* %arrayidx960, align 4
  %xor961 = xor i32 %xor956, %575
  %576 = load i32, i32* %t, align 4
  %shr962 = lshr i32 %576, 18
  %and963 = and i32 %shr962, 63
  %idxprom964 = zext i32 %and963 to i64
  %arrayidx965 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom964
  %577 = load i32, i32* %arrayidx965, align 4
  %xor966 = xor i32 %xor961, %577
  %578 = load i32, i32* %t, align 4
  %shr967 = lshr i32 %578, 26
  %and968 = and i32 %shr967, 63
  %idxprom969 = zext i32 %and968 to i64
  %arrayidx970 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom969
  %579 = load i32, i32* %arrayidx970, align 4
  %xor971 = xor i32 %xor966, %579
  %580 = load i32, i32* %l, align 4
  %xor972 = xor i32 %580, %xor971
  store i32 %xor972, i32* %l, align 4
  %581 = load i32, i32* %l, align 4
  %582 = load i32*, i32** %s, align 8
  %arrayidx973 = getelementptr inbounds i32, i32* %582, i64 20
  %583 = load i32, i32* %arrayidx973, align 4
  %xor974 = xor i32 %581, %583
  store i32 %xor974, i32* %u, align 4
  %584 = load i32, i32* %l, align 4
  %585 = load i32*, i32** %s, align 8
  %arrayidx975 = getelementptr inbounds i32, i32* %585, i64 21
  %586 = load i32, i32* %arrayidx975, align 4
  %xor976 = xor i32 %584, %586
  store i32 %xor976, i32* %t, align 4
  %587 = load i32, i32* %t, align 4
  %588 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %587) #5, !srcloc !61
  store i32 %588, i32* %ret977, align 4
  %589 = load i32, i32* %ret977, align 4
  store i32 %589, i32* %tmp978, align 4
  %590 = load i32, i32* %tmp978, align 4
  store i32 %590, i32* %t, align 4
  %591 = load i32, i32* %u, align 4
  %shr979 = lshr i32 %591, 2
  %and980 = and i32 %shr979, 63
  %idxprom981 = zext i32 %and980 to i64
  %arrayidx982 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom981
  %592 = load i32, i32* %arrayidx982, align 4
  %593 = load i32, i32* %u, align 4
  %shr983 = lshr i32 %593, 10
  %and984 = and i32 %shr983, 63
  %idxprom985 = zext i32 %and984 to i64
  %arrayidx986 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom985
  %594 = load i32, i32* %arrayidx986, align 4
  %xor987 = xor i32 %592, %594
  %595 = load i32, i32* %u, align 4
  %shr988 = lshr i32 %595, 18
  %and989 = and i32 %shr988, 63
  %idxprom990 = zext i32 %and989 to i64
  %arrayidx991 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom990
  %596 = load i32, i32* %arrayidx991, align 4
  %xor992 = xor i32 %xor987, %596
  %597 = load i32, i32* %u, align 4
  %shr993 = lshr i32 %597, 26
  %and994 = and i32 %shr993, 63
  %idxprom995 = zext i32 %and994 to i64
  %arrayidx996 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom995
  %598 = load i32, i32* %arrayidx996, align 4
  %xor997 = xor i32 %xor992, %598
  %599 = load i32, i32* %t, align 4
  %shr998 = lshr i32 %599, 2
  %and999 = and i32 %shr998, 63
  %idxprom1000 = zext i32 %and999 to i64
  %arrayidx1001 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1000
  %600 = load i32, i32* %arrayidx1001, align 4
  %xor1002 = xor i32 %xor997, %600
  %601 = load i32, i32* %t, align 4
  %shr1003 = lshr i32 %601, 10
  %and1004 = and i32 %shr1003, 63
  %idxprom1005 = zext i32 %and1004 to i64
  %arrayidx1006 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1005
  %602 = load i32, i32* %arrayidx1006, align 4
  %xor1007 = xor i32 %xor1002, %602
  %603 = load i32, i32* %t, align 4
  %shr1008 = lshr i32 %603, 18
  %and1009 = and i32 %shr1008, 63
  %idxprom1010 = zext i32 %and1009 to i64
  %arrayidx1011 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1010
  %604 = load i32, i32* %arrayidx1011, align 4
  %xor1012 = xor i32 %xor1007, %604
  %605 = load i32, i32* %t, align 4
  %shr1013 = lshr i32 %605, 26
  %and1014 = and i32 %shr1013, 63
  %idxprom1015 = zext i32 %and1014 to i64
  %arrayidx1016 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1015
  %606 = load i32, i32* %arrayidx1016, align 4
  %xor1017 = xor i32 %xor1012, %606
  %607 = load i32, i32* %r, align 4
  %xor1018 = xor i32 %607, %xor1017
  store i32 %xor1018, i32* %r, align 4
  %608 = load i32, i32* %r, align 4
  %609 = load i32*, i32** %s, align 8
  %arrayidx1019 = getelementptr inbounds i32, i32* %609, i64 18
  %610 = load i32, i32* %arrayidx1019, align 4
  %xor1020 = xor i32 %608, %610
  store i32 %xor1020, i32* %u, align 4
  %611 = load i32, i32* %r, align 4
  %612 = load i32*, i32** %s, align 8
  %arrayidx1021 = getelementptr inbounds i32, i32* %612, i64 19
  %613 = load i32, i32* %arrayidx1021, align 4
  %xor1022 = xor i32 %611, %613
  store i32 %xor1022, i32* %t, align 4
  %614 = load i32, i32* %t, align 4
  %615 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %614) #5, !srcloc !62
  store i32 %615, i32* %ret1023, align 4
  %616 = load i32, i32* %ret1023, align 4
  store i32 %616, i32* %tmp1024, align 4
  %617 = load i32, i32* %tmp1024, align 4
  store i32 %617, i32* %t, align 4
  %618 = load i32, i32* %u, align 4
  %shr1025 = lshr i32 %618, 2
  %and1026 = and i32 %shr1025, 63
  %idxprom1027 = zext i32 %and1026 to i64
  %arrayidx1028 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1027
  %619 = load i32, i32* %arrayidx1028, align 4
  %620 = load i32, i32* %u, align 4
  %shr1029 = lshr i32 %620, 10
  %and1030 = and i32 %shr1029, 63
  %idxprom1031 = zext i32 %and1030 to i64
  %arrayidx1032 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1031
  %621 = load i32, i32* %arrayidx1032, align 4
  %xor1033 = xor i32 %619, %621
  %622 = load i32, i32* %u, align 4
  %shr1034 = lshr i32 %622, 18
  %and1035 = and i32 %shr1034, 63
  %idxprom1036 = zext i32 %and1035 to i64
  %arrayidx1037 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1036
  %623 = load i32, i32* %arrayidx1037, align 4
  %xor1038 = xor i32 %xor1033, %623
  %624 = load i32, i32* %u, align 4
  %shr1039 = lshr i32 %624, 26
  %and1040 = and i32 %shr1039, 63
  %idxprom1041 = zext i32 %and1040 to i64
  %arrayidx1042 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1041
  %625 = load i32, i32* %arrayidx1042, align 4
  %xor1043 = xor i32 %xor1038, %625
  %626 = load i32, i32* %t, align 4
  %shr1044 = lshr i32 %626, 2
  %and1045 = and i32 %shr1044, 63
  %idxprom1046 = zext i32 %and1045 to i64
  %arrayidx1047 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1046
  %627 = load i32, i32* %arrayidx1047, align 4
  %xor1048 = xor i32 %xor1043, %627
  %628 = load i32, i32* %t, align 4
  %shr1049 = lshr i32 %628, 10
  %and1050 = and i32 %shr1049, 63
  %idxprom1051 = zext i32 %and1050 to i64
  %arrayidx1052 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1051
  %629 = load i32, i32* %arrayidx1052, align 4
  %xor1053 = xor i32 %xor1048, %629
  %630 = load i32, i32* %t, align 4
  %shr1054 = lshr i32 %630, 18
  %and1055 = and i32 %shr1054, 63
  %idxprom1056 = zext i32 %and1055 to i64
  %arrayidx1057 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1056
  %631 = load i32, i32* %arrayidx1057, align 4
  %xor1058 = xor i32 %xor1053, %631
  %632 = load i32, i32* %t, align 4
  %shr1059 = lshr i32 %632, 26
  %and1060 = and i32 %shr1059, 63
  %idxprom1061 = zext i32 %and1060 to i64
  %arrayidx1062 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1061
  %633 = load i32, i32* %arrayidx1062, align 4
  %xor1063 = xor i32 %xor1058, %633
  %634 = load i32, i32* %l, align 4
  %xor1064 = xor i32 %634, %xor1063
  store i32 %xor1064, i32* %l, align 4
  %635 = load i32, i32* %l, align 4
  %636 = load i32*, i32** %s, align 8
  %arrayidx1065 = getelementptr inbounds i32, i32* %636, i64 16
  %637 = load i32, i32* %arrayidx1065, align 4
  %xor1066 = xor i32 %635, %637
  store i32 %xor1066, i32* %u, align 4
  %638 = load i32, i32* %l, align 4
  %639 = load i32*, i32** %s, align 8
  %arrayidx1067 = getelementptr inbounds i32, i32* %639, i64 17
  %640 = load i32, i32* %arrayidx1067, align 4
  %xor1068 = xor i32 %638, %640
  store i32 %xor1068, i32* %t, align 4
  %641 = load i32, i32* %t, align 4
  %642 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %641) #5, !srcloc !63
  store i32 %642, i32* %ret1069, align 4
  %643 = load i32, i32* %ret1069, align 4
  store i32 %643, i32* %tmp1070, align 4
  %644 = load i32, i32* %tmp1070, align 4
  store i32 %644, i32* %t, align 4
  %645 = load i32, i32* %u, align 4
  %shr1071 = lshr i32 %645, 2
  %and1072 = and i32 %shr1071, 63
  %idxprom1073 = zext i32 %and1072 to i64
  %arrayidx1074 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1073
  %646 = load i32, i32* %arrayidx1074, align 4
  %647 = load i32, i32* %u, align 4
  %shr1075 = lshr i32 %647, 10
  %and1076 = and i32 %shr1075, 63
  %idxprom1077 = zext i32 %and1076 to i64
  %arrayidx1078 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1077
  %648 = load i32, i32* %arrayidx1078, align 4
  %xor1079 = xor i32 %646, %648
  %649 = load i32, i32* %u, align 4
  %shr1080 = lshr i32 %649, 18
  %and1081 = and i32 %shr1080, 63
  %idxprom1082 = zext i32 %and1081 to i64
  %arrayidx1083 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1082
  %650 = load i32, i32* %arrayidx1083, align 4
  %xor1084 = xor i32 %xor1079, %650
  %651 = load i32, i32* %u, align 4
  %shr1085 = lshr i32 %651, 26
  %and1086 = and i32 %shr1085, 63
  %idxprom1087 = zext i32 %and1086 to i64
  %arrayidx1088 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1087
  %652 = load i32, i32* %arrayidx1088, align 4
  %xor1089 = xor i32 %xor1084, %652
  %653 = load i32, i32* %t, align 4
  %shr1090 = lshr i32 %653, 2
  %and1091 = and i32 %shr1090, 63
  %idxprom1092 = zext i32 %and1091 to i64
  %arrayidx1093 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1092
  %654 = load i32, i32* %arrayidx1093, align 4
  %xor1094 = xor i32 %xor1089, %654
  %655 = load i32, i32* %t, align 4
  %shr1095 = lshr i32 %655, 10
  %and1096 = and i32 %shr1095, 63
  %idxprom1097 = zext i32 %and1096 to i64
  %arrayidx1098 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1097
  %656 = load i32, i32* %arrayidx1098, align 4
  %xor1099 = xor i32 %xor1094, %656
  %657 = load i32, i32* %t, align 4
  %shr1100 = lshr i32 %657, 18
  %and1101 = and i32 %shr1100, 63
  %idxprom1102 = zext i32 %and1101 to i64
  %arrayidx1103 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1102
  %658 = load i32, i32* %arrayidx1103, align 4
  %xor1104 = xor i32 %xor1099, %658
  %659 = load i32, i32* %t, align 4
  %shr1105 = lshr i32 %659, 26
  %and1106 = and i32 %shr1105, 63
  %idxprom1107 = zext i32 %and1106 to i64
  %arrayidx1108 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1107
  %660 = load i32, i32* %arrayidx1108, align 4
  %xor1109 = xor i32 %xor1104, %660
  %661 = load i32, i32* %r, align 4
  %xor1110 = xor i32 %661, %xor1109
  store i32 %xor1110, i32* %r, align 4
  %662 = load i32, i32* %r, align 4
  %663 = load i32*, i32** %s, align 8
  %arrayidx1111 = getelementptr inbounds i32, i32* %663, i64 14
  %664 = load i32, i32* %arrayidx1111, align 4
  %xor1112 = xor i32 %662, %664
  store i32 %xor1112, i32* %u, align 4
  %665 = load i32, i32* %r, align 4
  %666 = load i32*, i32** %s, align 8
  %arrayidx1113 = getelementptr inbounds i32, i32* %666, i64 15
  %667 = load i32, i32* %arrayidx1113, align 4
  %xor1114 = xor i32 %665, %667
  store i32 %xor1114, i32* %t, align 4
  %668 = load i32, i32* %t, align 4
  %669 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %668) #5, !srcloc !64
  store i32 %669, i32* %ret1115, align 4
  %670 = load i32, i32* %ret1115, align 4
  store i32 %670, i32* %tmp1116, align 4
  %671 = load i32, i32* %tmp1116, align 4
  store i32 %671, i32* %t, align 4
  %672 = load i32, i32* %u, align 4
  %shr1117 = lshr i32 %672, 2
  %and1118 = and i32 %shr1117, 63
  %idxprom1119 = zext i32 %and1118 to i64
  %arrayidx1120 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1119
  %673 = load i32, i32* %arrayidx1120, align 4
  %674 = load i32, i32* %u, align 4
  %shr1121 = lshr i32 %674, 10
  %and1122 = and i32 %shr1121, 63
  %idxprom1123 = zext i32 %and1122 to i64
  %arrayidx1124 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1123
  %675 = load i32, i32* %arrayidx1124, align 4
  %xor1125 = xor i32 %673, %675
  %676 = load i32, i32* %u, align 4
  %shr1126 = lshr i32 %676, 18
  %and1127 = and i32 %shr1126, 63
  %idxprom1128 = zext i32 %and1127 to i64
  %arrayidx1129 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1128
  %677 = load i32, i32* %arrayidx1129, align 4
  %xor1130 = xor i32 %xor1125, %677
  %678 = load i32, i32* %u, align 4
  %shr1131 = lshr i32 %678, 26
  %and1132 = and i32 %shr1131, 63
  %idxprom1133 = zext i32 %and1132 to i64
  %arrayidx1134 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1133
  %679 = load i32, i32* %arrayidx1134, align 4
  %xor1135 = xor i32 %xor1130, %679
  %680 = load i32, i32* %t, align 4
  %shr1136 = lshr i32 %680, 2
  %and1137 = and i32 %shr1136, 63
  %idxprom1138 = zext i32 %and1137 to i64
  %arrayidx1139 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1138
  %681 = load i32, i32* %arrayidx1139, align 4
  %xor1140 = xor i32 %xor1135, %681
  %682 = load i32, i32* %t, align 4
  %shr1141 = lshr i32 %682, 10
  %and1142 = and i32 %shr1141, 63
  %idxprom1143 = zext i32 %and1142 to i64
  %arrayidx1144 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1143
  %683 = load i32, i32* %arrayidx1144, align 4
  %xor1145 = xor i32 %xor1140, %683
  %684 = load i32, i32* %t, align 4
  %shr1146 = lshr i32 %684, 18
  %and1147 = and i32 %shr1146, 63
  %idxprom1148 = zext i32 %and1147 to i64
  %arrayidx1149 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1148
  %685 = load i32, i32* %arrayidx1149, align 4
  %xor1150 = xor i32 %xor1145, %685
  %686 = load i32, i32* %t, align 4
  %shr1151 = lshr i32 %686, 26
  %and1152 = and i32 %shr1151, 63
  %idxprom1153 = zext i32 %and1152 to i64
  %arrayidx1154 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1153
  %687 = load i32, i32* %arrayidx1154, align 4
  %xor1155 = xor i32 %xor1150, %687
  %688 = load i32, i32* %l, align 4
  %xor1156 = xor i32 %688, %xor1155
  store i32 %xor1156, i32* %l, align 4
  %689 = load i32, i32* %l, align 4
  %690 = load i32*, i32** %s, align 8
  %arrayidx1157 = getelementptr inbounds i32, i32* %690, i64 12
  %691 = load i32, i32* %arrayidx1157, align 4
  %xor1158 = xor i32 %689, %691
  store i32 %xor1158, i32* %u, align 4
  %692 = load i32, i32* %l, align 4
  %693 = load i32*, i32** %s, align 8
  %arrayidx1159 = getelementptr inbounds i32, i32* %693, i64 13
  %694 = load i32, i32* %arrayidx1159, align 4
  %xor1160 = xor i32 %692, %694
  store i32 %xor1160, i32* %t, align 4
  %695 = load i32, i32* %t, align 4
  %696 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %695) #5, !srcloc !65
  store i32 %696, i32* %ret1161, align 4
  %697 = load i32, i32* %ret1161, align 4
  store i32 %697, i32* %tmp1162, align 4
  %698 = load i32, i32* %tmp1162, align 4
  store i32 %698, i32* %t, align 4
  %699 = load i32, i32* %u, align 4
  %shr1163 = lshr i32 %699, 2
  %and1164 = and i32 %shr1163, 63
  %idxprom1165 = zext i32 %and1164 to i64
  %arrayidx1166 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1165
  %700 = load i32, i32* %arrayidx1166, align 4
  %701 = load i32, i32* %u, align 4
  %shr1167 = lshr i32 %701, 10
  %and1168 = and i32 %shr1167, 63
  %idxprom1169 = zext i32 %and1168 to i64
  %arrayidx1170 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1169
  %702 = load i32, i32* %arrayidx1170, align 4
  %xor1171 = xor i32 %700, %702
  %703 = load i32, i32* %u, align 4
  %shr1172 = lshr i32 %703, 18
  %and1173 = and i32 %shr1172, 63
  %idxprom1174 = zext i32 %and1173 to i64
  %arrayidx1175 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1174
  %704 = load i32, i32* %arrayidx1175, align 4
  %xor1176 = xor i32 %xor1171, %704
  %705 = load i32, i32* %u, align 4
  %shr1177 = lshr i32 %705, 26
  %and1178 = and i32 %shr1177, 63
  %idxprom1179 = zext i32 %and1178 to i64
  %arrayidx1180 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1179
  %706 = load i32, i32* %arrayidx1180, align 4
  %xor1181 = xor i32 %xor1176, %706
  %707 = load i32, i32* %t, align 4
  %shr1182 = lshr i32 %707, 2
  %and1183 = and i32 %shr1182, 63
  %idxprom1184 = zext i32 %and1183 to i64
  %arrayidx1185 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1184
  %708 = load i32, i32* %arrayidx1185, align 4
  %xor1186 = xor i32 %xor1181, %708
  %709 = load i32, i32* %t, align 4
  %shr1187 = lshr i32 %709, 10
  %and1188 = and i32 %shr1187, 63
  %idxprom1189 = zext i32 %and1188 to i64
  %arrayidx1190 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1189
  %710 = load i32, i32* %arrayidx1190, align 4
  %xor1191 = xor i32 %xor1186, %710
  %711 = load i32, i32* %t, align 4
  %shr1192 = lshr i32 %711, 18
  %and1193 = and i32 %shr1192, 63
  %idxprom1194 = zext i32 %and1193 to i64
  %arrayidx1195 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1194
  %712 = load i32, i32* %arrayidx1195, align 4
  %xor1196 = xor i32 %xor1191, %712
  %713 = load i32, i32* %t, align 4
  %shr1197 = lshr i32 %713, 26
  %and1198 = and i32 %shr1197, 63
  %idxprom1199 = zext i32 %and1198 to i64
  %arrayidx1200 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1199
  %714 = load i32, i32* %arrayidx1200, align 4
  %xor1201 = xor i32 %xor1196, %714
  %715 = load i32, i32* %r, align 4
  %xor1202 = xor i32 %715, %xor1201
  store i32 %xor1202, i32* %r, align 4
  %716 = load i32, i32* %r, align 4
  %717 = load i32*, i32** %s, align 8
  %arrayidx1203 = getelementptr inbounds i32, i32* %717, i64 10
  %718 = load i32, i32* %arrayidx1203, align 4
  %xor1204 = xor i32 %716, %718
  store i32 %xor1204, i32* %u, align 4
  %719 = load i32, i32* %r, align 4
  %720 = load i32*, i32** %s, align 8
  %arrayidx1205 = getelementptr inbounds i32, i32* %720, i64 11
  %721 = load i32, i32* %arrayidx1205, align 4
  %xor1206 = xor i32 %719, %721
  store i32 %xor1206, i32* %t, align 4
  %722 = load i32, i32* %t, align 4
  %723 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %722) #5, !srcloc !66
  store i32 %723, i32* %ret1207, align 4
  %724 = load i32, i32* %ret1207, align 4
  store i32 %724, i32* %tmp1208, align 4
  %725 = load i32, i32* %tmp1208, align 4
  store i32 %725, i32* %t, align 4
  %726 = load i32, i32* %u, align 4
  %shr1209 = lshr i32 %726, 2
  %and1210 = and i32 %shr1209, 63
  %idxprom1211 = zext i32 %and1210 to i64
  %arrayidx1212 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1211
  %727 = load i32, i32* %arrayidx1212, align 4
  %728 = load i32, i32* %u, align 4
  %shr1213 = lshr i32 %728, 10
  %and1214 = and i32 %shr1213, 63
  %idxprom1215 = zext i32 %and1214 to i64
  %arrayidx1216 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1215
  %729 = load i32, i32* %arrayidx1216, align 4
  %xor1217 = xor i32 %727, %729
  %730 = load i32, i32* %u, align 4
  %shr1218 = lshr i32 %730, 18
  %and1219 = and i32 %shr1218, 63
  %idxprom1220 = zext i32 %and1219 to i64
  %arrayidx1221 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1220
  %731 = load i32, i32* %arrayidx1221, align 4
  %xor1222 = xor i32 %xor1217, %731
  %732 = load i32, i32* %u, align 4
  %shr1223 = lshr i32 %732, 26
  %and1224 = and i32 %shr1223, 63
  %idxprom1225 = zext i32 %and1224 to i64
  %arrayidx1226 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1225
  %733 = load i32, i32* %arrayidx1226, align 4
  %xor1227 = xor i32 %xor1222, %733
  %734 = load i32, i32* %t, align 4
  %shr1228 = lshr i32 %734, 2
  %and1229 = and i32 %shr1228, 63
  %idxprom1230 = zext i32 %and1229 to i64
  %arrayidx1231 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1230
  %735 = load i32, i32* %arrayidx1231, align 4
  %xor1232 = xor i32 %xor1227, %735
  %736 = load i32, i32* %t, align 4
  %shr1233 = lshr i32 %736, 10
  %and1234 = and i32 %shr1233, 63
  %idxprom1235 = zext i32 %and1234 to i64
  %arrayidx1236 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1235
  %737 = load i32, i32* %arrayidx1236, align 4
  %xor1237 = xor i32 %xor1232, %737
  %738 = load i32, i32* %t, align 4
  %shr1238 = lshr i32 %738, 18
  %and1239 = and i32 %shr1238, 63
  %idxprom1240 = zext i32 %and1239 to i64
  %arrayidx1241 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1240
  %739 = load i32, i32* %arrayidx1241, align 4
  %xor1242 = xor i32 %xor1237, %739
  %740 = load i32, i32* %t, align 4
  %shr1243 = lshr i32 %740, 26
  %and1244 = and i32 %shr1243, 63
  %idxprom1245 = zext i32 %and1244 to i64
  %arrayidx1246 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1245
  %741 = load i32, i32* %arrayidx1246, align 4
  %xor1247 = xor i32 %xor1242, %741
  %742 = load i32, i32* %l, align 4
  %xor1248 = xor i32 %742, %xor1247
  store i32 %xor1248, i32* %l, align 4
  %743 = load i32, i32* %l, align 4
  %744 = load i32*, i32** %s, align 8
  %arrayidx1249 = getelementptr inbounds i32, i32* %744, i64 8
  %745 = load i32, i32* %arrayidx1249, align 4
  %xor1250 = xor i32 %743, %745
  store i32 %xor1250, i32* %u, align 4
  %746 = load i32, i32* %l, align 4
  %747 = load i32*, i32** %s, align 8
  %arrayidx1251 = getelementptr inbounds i32, i32* %747, i64 9
  %748 = load i32, i32* %arrayidx1251, align 4
  %xor1252 = xor i32 %746, %748
  store i32 %xor1252, i32* %t, align 4
  %749 = load i32, i32* %t, align 4
  %750 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %749) #5, !srcloc !67
  store i32 %750, i32* %ret1253, align 4
  %751 = load i32, i32* %ret1253, align 4
  store i32 %751, i32* %tmp1254, align 4
  %752 = load i32, i32* %tmp1254, align 4
  store i32 %752, i32* %t, align 4
  %753 = load i32, i32* %u, align 4
  %shr1255 = lshr i32 %753, 2
  %and1256 = and i32 %shr1255, 63
  %idxprom1257 = zext i32 %and1256 to i64
  %arrayidx1258 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1257
  %754 = load i32, i32* %arrayidx1258, align 4
  %755 = load i32, i32* %u, align 4
  %shr1259 = lshr i32 %755, 10
  %and1260 = and i32 %shr1259, 63
  %idxprom1261 = zext i32 %and1260 to i64
  %arrayidx1262 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1261
  %756 = load i32, i32* %arrayidx1262, align 4
  %xor1263 = xor i32 %754, %756
  %757 = load i32, i32* %u, align 4
  %shr1264 = lshr i32 %757, 18
  %and1265 = and i32 %shr1264, 63
  %idxprom1266 = zext i32 %and1265 to i64
  %arrayidx1267 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1266
  %758 = load i32, i32* %arrayidx1267, align 4
  %xor1268 = xor i32 %xor1263, %758
  %759 = load i32, i32* %u, align 4
  %shr1269 = lshr i32 %759, 26
  %and1270 = and i32 %shr1269, 63
  %idxprom1271 = zext i32 %and1270 to i64
  %arrayidx1272 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1271
  %760 = load i32, i32* %arrayidx1272, align 4
  %xor1273 = xor i32 %xor1268, %760
  %761 = load i32, i32* %t, align 4
  %shr1274 = lshr i32 %761, 2
  %and1275 = and i32 %shr1274, 63
  %idxprom1276 = zext i32 %and1275 to i64
  %arrayidx1277 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1276
  %762 = load i32, i32* %arrayidx1277, align 4
  %xor1278 = xor i32 %xor1273, %762
  %763 = load i32, i32* %t, align 4
  %shr1279 = lshr i32 %763, 10
  %and1280 = and i32 %shr1279, 63
  %idxprom1281 = zext i32 %and1280 to i64
  %arrayidx1282 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1281
  %764 = load i32, i32* %arrayidx1282, align 4
  %xor1283 = xor i32 %xor1278, %764
  %765 = load i32, i32* %t, align 4
  %shr1284 = lshr i32 %765, 18
  %and1285 = and i32 %shr1284, 63
  %idxprom1286 = zext i32 %and1285 to i64
  %arrayidx1287 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1286
  %766 = load i32, i32* %arrayidx1287, align 4
  %xor1288 = xor i32 %xor1283, %766
  %767 = load i32, i32* %t, align 4
  %shr1289 = lshr i32 %767, 26
  %and1290 = and i32 %shr1289, 63
  %idxprom1291 = zext i32 %and1290 to i64
  %arrayidx1292 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1291
  %768 = load i32, i32* %arrayidx1292, align 4
  %xor1293 = xor i32 %xor1288, %768
  %769 = load i32, i32* %r, align 4
  %xor1294 = xor i32 %769, %xor1293
  store i32 %xor1294, i32* %r, align 4
  %770 = load i32, i32* %r, align 4
  %771 = load i32*, i32** %s, align 8
  %arrayidx1295 = getelementptr inbounds i32, i32* %771, i64 6
  %772 = load i32, i32* %arrayidx1295, align 4
  %xor1296 = xor i32 %770, %772
  store i32 %xor1296, i32* %u, align 4
  %773 = load i32, i32* %r, align 4
  %774 = load i32*, i32** %s, align 8
  %arrayidx1297 = getelementptr inbounds i32, i32* %774, i64 7
  %775 = load i32, i32* %arrayidx1297, align 4
  %xor1298 = xor i32 %773, %775
  store i32 %xor1298, i32* %t, align 4
  %776 = load i32, i32* %t, align 4
  %777 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %776) #5, !srcloc !68
  store i32 %777, i32* %ret1299, align 4
  %778 = load i32, i32* %ret1299, align 4
  store i32 %778, i32* %tmp1300, align 4
  %779 = load i32, i32* %tmp1300, align 4
  store i32 %779, i32* %t, align 4
  %780 = load i32, i32* %u, align 4
  %shr1301 = lshr i32 %780, 2
  %and1302 = and i32 %shr1301, 63
  %idxprom1303 = zext i32 %and1302 to i64
  %arrayidx1304 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1303
  %781 = load i32, i32* %arrayidx1304, align 4
  %782 = load i32, i32* %u, align 4
  %shr1305 = lshr i32 %782, 10
  %and1306 = and i32 %shr1305, 63
  %idxprom1307 = zext i32 %and1306 to i64
  %arrayidx1308 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1307
  %783 = load i32, i32* %arrayidx1308, align 4
  %xor1309 = xor i32 %781, %783
  %784 = load i32, i32* %u, align 4
  %shr1310 = lshr i32 %784, 18
  %and1311 = and i32 %shr1310, 63
  %idxprom1312 = zext i32 %and1311 to i64
  %arrayidx1313 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1312
  %785 = load i32, i32* %arrayidx1313, align 4
  %xor1314 = xor i32 %xor1309, %785
  %786 = load i32, i32* %u, align 4
  %shr1315 = lshr i32 %786, 26
  %and1316 = and i32 %shr1315, 63
  %idxprom1317 = zext i32 %and1316 to i64
  %arrayidx1318 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1317
  %787 = load i32, i32* %arrayidx1318, align 4
  %xor1319 = xor i32 %xor1314, %787
  %788 = load i32, i32* %t, align 4
  %shr1320 = lshr i32 %788, 2
  %and1321 = and i32 %shr1320, 63
  %idxprom1322 = zext i32 %and1321 to i64
  %arrayidx1323 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1322
  %789 = load i32, i32* %arrayidx1323, align 4
  %xor1324 = xor i32 %xor1319, %789
  %790 = load i32, i32* %t, align 4
  %shr1325 = lshr i32 %790, 10
  %and1326 = and i32 %shr1325, 63
  %idxprom1327 = zext i32 %and1326 to i64
  %arrayidx1328 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1327
  %791 = load i32, i32* %arrayidx1328, align 4
  %xor1329 = xor i32 %xor1324, %791
  %792 = load i32, i32* %t, align 4
  %shr1330 = lshr i32 %792, 18
  %and1331 = and i32 %shr1330, 63
  %idxprom1332 = zext i32 %and1331 to i64
  %arrayidx1333 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1332
  %793 = load i32, i32* %arrayidx1333, align 4
  %xor1334 = xor i32 %xor1329, %793
  %794 = load i32, i32* %t, align 4
  %shr1335 = lshr i32 %794, 26
  %and1336 = and i32 %shr1335, 63
  %idxprom1337 = zext i32 %and1336 to i64
  %arrayidx1338 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1337
  %795 = load i32, i32* %arrayidx1338, align 4
  %xor1339 = xor i32 %xor1334, %795
  %796 = load i32, i32* %l, align 4
  %xor1340 = xor i32 %796, %xor1339
  store i32 %xor1340, i32* %l, align 4
  %797 = load i32, i32* %l, align 4
  %798 = load i32*, i32** %s, align 8
  %arrayidx1341 = getelementptr inbounds i32, i32* %798, i64 4
  %799 = load i32, i32* %arrayidx1341, align 4
  %xor1342 = xor i32 %797, %799
  store i32 %xor1342, i32* %u, align 4
  %800 = load i32, i32* %l, align 4
  %801 = load i32*, i32** %s, align 8
  %arrayidx1343 = getelementptr inbounds i32, i32* %801, i64 5
  %802 = load i32, i32* %arrayidx1343, align 4
  %xor1344 = xor i32 %800, %802
  store i32 %xor1344, i32* %t, align 4
  %803 = load i32, i32* %t, align 4
  %804 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %803) #5, !srcloc !69
  store i32 %804, i32* %ret1345, align 4
  %805 = load i32, i32* %ret1345, align 4
  store i32 %805, i32* %tmp1346, align 4
  %806 = load i32, i32* %tmp1346, align 4
  store i32 %806, i32* %t, align 4
  %807 = load i32, i32* %u, align 4
  %shr1347 = lshr i32 %807, 2
  %and1348 = and i32 %shr1347, 63
  %idxprom1349 = zext i32 %and1348 to i64
  %arrayidx1350 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1349
  %808 = load i32, i32* %arrayidx1350, align 4
  %809 = load i32, i32* %u, align 4
  %shr1351 = lshr i32 %809, 10
  %and1352 = and i32 %shr1351, 63
  %idxprom1353 = zext i32 %and1352 to i64
  %arrayidx1354 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1353
  %810 = load i32, i32* %arrayidx1354, align 4
  %xor1355 = xor i32 %808, %810
  %811 = load i32, i32* %u, align 4
  %shr1356 = lshr i32 %811, 18
  %and1357 = and i32 %shr1356, 63
  %idxprom1358 = zext i32 %and1357 to i64
  %arrayidx1359 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1358
  %812 = load i32, i32* %arrayidx1359, align 4
  %xor1360 = xor i32 %xor1355, %812
  %813 = load i32, i32* %u, align 4
  %shr1361 = lshr i32 %813, 26
  %and1362 = and i32 %shr1361, 63
  %idxprom1363 = zext i32 %and1362 to i64
  %arrayidx1364 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1363
  %814 = load i32, i32* %arrayidx1364, align 4
  %xor1365 = xor i32 %xor1360, %814
  %815 = load i32, i32* %t, align 4
  %shr1366 = lshr i32 %815, 2
  %and1367 = and i32 %shr1366, 63
  %idxprom1368 = zext i32 %and1367 to i64
  %arrayidx1369 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1368
  %816 = load i32, i32* %arrayidx1369, align 4
  %xor1370 = xor i32 %xor1365, %816
  %817 = load i32, i32* %t, align 4
  %shr1371 = lshr i32 %817, 10
  %and1372 = and i32 %shr1371, 63
  %idxprom1373 = zext i32 %and1372 to i64
  %arrayidx1374 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1373
  %818 = load i32, i32* %arrayidx1374, align 4
  %xor1375 = xor i32 %xor1370, %818
  %819 = load i32, i32* %t, align 4
  %shr1376 = lshr i32 %819, 18
  %and1377 = and i32 %shr1376, 63
  %idxprom1378 = zext i32 %and1377 to i64
  %arrayidx1379 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1378
  %820 = load i32, i32* %arrayidx1379, align 4
  %xor1380 = xor i32 %xor1375, %820
  %821 = load i32, i32* %t, align 4
  %shr1381 = lshr i32 %821, 26
  %and1382 = and i32 %shr1381, 63
  %idxprom1383 = zext i32 %and1382 to i64
  %arrayidx1384 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1383
  %822 = load i32, i32* %arrayidx1384, align 4
  %xor1385 = xor i32 %xor1380, %822
  %823 = load i32, i32* %r, align 4
  %xor1386 = xor i32 %823, %xor1385
  store i32 %xor1386, i32* %r, align 4
  %824 = load i32, i32* %r, align 4
  %825 = load i32*, i32** %s, align 8
  %arrayidx1387 = getelementptr inbounds i32, i32* %825, i64 2
  %826 = load i32, i32* %arrayidx1387, align 4
  %xor1388 = xor i32 %824, %826
  store i32 %xor1388, i32* %u, align 4
  %827 = load i32, i32* %r, align 4
  %828 = load i32*, i32** %s, align 8
  %arrayidx1389 = getelementptr inbounds i32, i32* %828, i64 3
  %829 = load i32, i32* %arrayidx1389, align 4
  %xor1390 = xor i32 %827, %829
  store i32 %xor1390, i32* %t, align 4
  %830 = load i32, i32* %t, align 4
  %831 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %830) #5, !srcloc !70
  store i32 %831, i32* %ret1391, align 4
  %832 = load i32, i32* %ret1391, align 4
  store i32 %832, i32* %tmp1392, align 4
  %833 = load i32, i32* %tmp1392, align 4
  store i32 %833, i32* %t, align 4
  %834 = load i32, i32* %u, align 4
  %shr1393 = lshr i32 %834, 2
  %and1394 = and i32 %shr1393, 63
  %idxprom1395 = zext i32 %and1394 to i64
  %arrayidx1396 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1395
  %835 = load i32, i32* %arrayidx1396, align 4
  %836 = load i32, i32* %u, align 4
  %shr1397 = lshr i32 %836, 10
  %and1398 = and i32 %shr1397, 63
  %idxprom1399 = zext i32 %and1398 to i64
  %arrayidx1400 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1399
  %837 = load i32, i32* %arrayidx1400, align 4
  %xor1401 = xor i32 %835, %837
  %838 = load i32, i32* %u, align 4
  %shr1402 = lshr i32 %838, 18
  %and1403 = and i32 %shr1402, 63
  %idxprom1404 = zext i32 %and1403 to i64
  %arrayidx1405 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1404
  %839 = load i32, i32* %arrayidx1405, align 4
  %xor1406 = xor i32 %xor1401, %839
  %840 = load i32, i32* %u, align 4
  %shr1407 = lshr i32 %840, 26
  %and1408 = and i32 %shr1407, 63
  %idxprom1409 = zext i32 %and1408 to i64
  %arrayidx1410 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1409
  %841 = load i32, i32* %arrayidx1410, align 4
  %xor1411 = xor i32 %xor1406, %841
  %842 = load i32, i32* %t, align 4
  %shr1412 = lshr i32 %842, 2
  %and1413 = and i32 %shr1412, 63
  %idxprom1414 = zext i32 %and1413 to i64
  %arrayidx1415 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1414
  %843 = load i32, i32* %arrayidx1415, align 4
  %xor1416 = xor i32 %xor1411, %843
  %844 = load i32, i32* %t, align 4
  %shr1417 = lshr i32 %844, 10
  %and1418 = and i32 %shr1417, 63
  %idxprom1419 = zext i32 %and1418 to i64
  %arrayidx1420 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1419
  %845 = load i32, i32* %arrayidx1420, align 4
  %xor1421 = xor i32 %xor1416, %845
  %846 = load i32, i32* %t, align 4
  %shr1422 = lshr i32 %846, 18
  %and1423 = and i32 %shr1422, 63
  %idxprom1424 = zext i32 %and1423 to i64
  %arrayidx1425 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1424
  %847 = load i32, i32* %arrayidx1425, align 4
  %xor1426 = xor i32 %xor1421, %847
  %848 = load i32, i32* %t, align 4
  %shr1427 = lshr i32 %848, 26
  %and1428 = and i32 %shr1427, 63
  %idxprom1429 = zext i32 %and1428 to i64
  %arrayidx1430 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1429
  %849 = load i32, i32* %arrayidx1430, align 4
  %xor1431 = xor i32 %xor1426, %849
  %850 = load i32, i32* %l, align 4
  %xor1432 = xor i32 %850, %xor1431
  store i32 %xor1432, i32* %l, align 4
  %851 = load i32, i32* %l, align 4
  %852 = load i32*, i32** %s, align 8
  %arrayidx1433 = getelementptr inbounds i32, i32* %852, i64 0
  %853 = load i32, i32* %arrayidx1433, align 4
  %xor1434 = xor i32 %851, %853
  store i32 %xor1434, i32* %u, align 4
  %854 = load i32, i32* %l, align 4
  %855 = load i32*, i32** %s, align 8
  %arrayidx1435 = getelementptr inbounds i32, i32* %855, i64 1
  %856 = load i32, i32* %arrayidx1435, align 4
  %xor1436 = xor i32 %854, %856
  store i32 %xor1436, i32* %t, align 4
  %857 = load i32, i32* %t, align 4
  %858 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %857) #5, !srcloc !71
  store i32 %858, i32* %ret1437, align 4
  %859 = load i32, i32* %ret1437, align 4
  store i32 %859, i32* %tmp1438, align 4
  %860 = load i32, i32* %tmp1438, align 4
  store i32 %860, i32* %t, align 4
  %861 = load i32, i32* %u, align 4
  %shr1439 = lshr i32 %861, 2
  %and1440 = and i32 %shr1439, 63
  %idxprom1441 = zext i32 %and1440 to i64
  %arrayidx1442 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1441
  %862 = load i32, i32* %arrayidx1442, align 4
  %863 = load i32, i32* %u, align 4
  %shr1443 = lshr i32 %863, 10
  %and1444 = and i32 %shr1443, 63
  %idxprom1445 = zext i32 %and1444 to i64
  %arrayidx1446 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1445
  %864 = load i32, i32* %arrayidx1446, align 4
  %xor1447 = xor i32 %862, %864
  %865 = load i32, i32* %u, align 4
  %shr1448 = lshr i32 %865, 18
  %and1449 = and i32 %shr1448, 63
  %idxprom1450 = zext i32 %and1449 to i64
  %arrayidx1451 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1450
  %866 = load i32, i32* %arrayidx1451, align 4
  %xor1452 = xor i32 %xor1447, %866
  %867 = load i32, i32* %u, align 4
  %shr1453 = lshr i32 %867, 26
  %and1454 = and i32 %shr1453, 63
  %idxprom1455 = zext i32 %and1454 to i64
  %arrayidx1456 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1455
  %868 = load i32, i32* %arrayidx1456, align 4
  %xor1457 = xor i32 %xor1452, %868
  %869 = load i32, i32* %t, align 4
  %shr1458 = lshr i32 %869, 2
  %and1459 = and i32 %shr1458, 63
  %idxprom1460 = zext i32 %and1459 to i64
  %arrayidx1461 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1460
  %870 = load i32, i32* %arrayidx1461, align 4
  %xor1462 = xor i32 %xor1457, %870
  %871 = load i32, i32* %t, align 4
  %shr1463 = lshr i32 %871, 10
  %and1464 = and i32 %shr1463, 63
  %idxprom1465 = zext i32 %and1464 to i64
  %arrayidx1466 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1465
  %872 = load i32, i32* %arrayidx1466, align 4
  %xor1467 = xor i32 %xor1462, %872
  %873 = load i32, i32* %t, align 4
  %shr1468 = lshr i32 %873, 18
  %and1469 = and i32 %shr1468, 63
  %idxprom1470 = zext i32 %and1469 to i64
  %arrayidx1471 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1470
  %874 = load i32, i32* %arrayidx1471, align 4
  %xor1472 = xor i32 %xor1467, %874
  %875 = load i32, i32* %t, align 4
  %shr1473 = lshr i32 %875, 26
  %and1474 = and i32 %shr1473, 63
  %idxprom1475 = zext i32 %and1474 to i64
  %arrayidx1476 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1475
  %876 = load i32, i32* %arrayidx1476, align 4
  %xor1477 = xor i32 %xor1472, %876
  %877 = load i32, i32* %r, align 4
  %xor1478 = xor i32 %877, %xor1477
  store i32 %xor1478, i32* %r, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %878 = load i32, i32* %l, align 4
  %879 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %878) #5, !srcloc !72
  store i32 %879, i32* %ret1479, align 4
  %880 = load i32, i32* %ret1479, align 4
  store i32 %880, i32* %tmp1480, align 4
  %881 = load i32, i32* %tmp1480, align 4
  %conv1481 = zext i32 %881 to i64
  %and1482 = and i64 %conv1481, 4294967295
  %conv1483 = trunc i64 %and1482 to i32
  %882 = load i32*, i32** %data.addr, align 8
  %arrayidx1484 = getelementptr inbounds i32, i32* %882, i64 0
  store i32 %conv1483, i32* %arrayidx1484, align 4
  %883 = load i32, i32* %r, align 4
  %884 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %883) #5, !srcloc !73
  store i32 %884, i32* %ret1485, align 4
  %885 = load i32, i32* %ret1485, align 4
  store i32 %885, i32* %tmp1486, align 4
  %886 = load i32, i32* %tmp1486, align 4
  %conv1487 = zext i32 %886 to i64
  %and1488 = and i64 %conv1487, 4294967295
  %conv1489 = trunc i64 %and1488 to i32
  %887 = load i32*, i32** %data.addr, align 8
  %arrayidx1490 = getelementptr inbounds i32, i32* %887, i64 1
  store i32 %conv1489, i32* %arrayidx1490, align 4
  store i32 0, i32* %u, align 4
  store i32 0, i32* %t, align 4
  store i32 0, i32* %r, align 4
  store i32 0, i32* %l, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_encrypt3(i32* %data, %struct.DES_ks* %ks1, %struct.DES_ks* %ks2, %struct.DES_ks* %ks3) #1 {
entry:
  %data.addr = alloca i32*, align 8
  %ks1.addr = alloca %struct.DES_ks*, align 8
  %ks2.addr = alloca %struct.DES_ks*, align 8
  %ks3.addr = alloca %struct.DES_ks*, align 8
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %tt = alloca i32, align 4
  %tt41 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  store %struct.DES_ks* %ks1, %struct.DES_ks** %ks1.addr, align 8
  store %struct.DES_ks* %ks2, %struct.DES_ks** %ks2.addr, align 8
  store %struct.DES_ks* %ks3, %struct.DES_ks** %ks3.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0
  %1 = load i32, i32* %arrayidx, align 4
  store i32 %1, i32* %l, align 4
  %2 = load i32*, i32** %data.addr, align 8
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1
  %3 = load i32, i32* %arrayidx1, align 4
  store i32 %3, i32* %r, align 4
  %4 = load i32, i32* %r, align 4
  %shr = lshr i32 %4, 4
  %5 = load i32, i32* %l, align 4
  %xor = xor i32 %shr, %5
  %conv = zext i32 %xor to i64
  %and = and i64 %conv, 252645135
  %conv2 = trunc i64 %and to i32
  store i32 %conv2, i32* %tt, align 4
  %6 = load i32, i32* %tt, align 4
  %7 = load i32, i32* %l, align 4
  %xor3 = xor i32 %7, %6
  store i32 %xor3, i32* %l, align 4
  %8 = load i32, i32* %tt, align 4
  %shl = shl i32 %8, 4
  %9 = load i32, i32* %r, align 4
  %xor4 = xor i32 %9, %shl
  store i32 %xor4, i32* %r, align 4
  %10 = load i32, i32* %l, align 4
  %shr5 = lshr i32 %10, 16
  %11 = load i32, i32* %r, align 4
  %xor6 = xor i32 %shr5, %11
  %conv7 = zext i32 %xor6 to i64
  %and8 = and i64 %conv7, 65535
  %conv9 = trunc i64 %and8 to i32
  store i32 %conv9, i32* %tt, align 4
  %12 = load i32, i32* %tt, align 4
  %13 = load i32, i32* %r, align 4
  %xor10 = xor i32 %13, %12
  store i32 %xor10, i32* %r, align 4
  %14 = load i32, i32* %tt, align 4
  %shl11 = shl i32 %14, 16
  %15 = load i32, i32* %l, align 4
  %xor12 = xor i32 %15, %shl11
  store i32 %xor12, i32* %l, align 4
  %16 = load i32, i32* %r, align 4
  %shr13 = lshr i32 %16, 2
  %17 = load i32, i32* %l, align 4
  %xor14 = xor i32 %shr13, %17
  %conv15 = zext i32 %xor14 to i64
  %and16 = and i64 %conv15, 858993459
  %conv17 = trunc i64 %and16 to i32
  store i32 %conv17, i32* %tt, align 4
  %18 = load i32, i32* %tt, align 4
  %19 = load i32, i32* %l, align 4
  %xor18 = xor i32 %19, %18
  store i32 %xor18, i32* %l, align 4
  %20 = load i32, i32* %tt, align 4
  %shl19 = shl i32 %20, 2
  %21 = load i32, i32* %r, align 4
  %xor20 = xor i32 %21, %shl19
  store i32 %xor20, i32* %r, align 4
  %22 = load i32, i32* %l, align 4
  %shr21 = lshr i32 %22, 8
  %23 = load i32, i32* %r, align 4
  %xor22 = xor i32 %shr21, %23
  %conv23 = zext i32 %xor22 to i64
  %and24 = and i64 %conv23, 16711935
  %conv25 = trunc i64 %and24 to i32
  store i32 %conv25, i32* %tt, align 4
  %24 = load i32, i32* %tt, align 4
  %25 = load i32, i32* %r, align 4
  %xor26 = xor i32 %25, %24
  store i32 %xor26, i32* %r, align 4
  %26 = load i32, i32* %tt, align 4
  %shl27 = shl i32 %26, 8
  %27 = load i32, i32* %l, align 4
  %xor28 = xor i32 %27, %shl27
  store i32 %xor28, i32* %l, align 4
  %28 = load i32, i32* %r, align 4
  %shr29 = lshr i32 %28, 1
  %29 = load i32, i32* %l, align 4
  %xor30 = xor i32 %shr29, %29
  %conv31 = zext i32 %xor30 to i64
  %and32 = and i64 %conv31, 1431655765
  %conv33 = trunc i64 %and32 to i32
  store i32 %conv33, i32* %tt, align 4
  %30 = load i32, i32* %tt, align 4
  %31 = load i32, i32* %l, align 4
  %xor34 = xor i32 %31, %30
  store i32 %xor34, i32* %l, align 4
  %32 = load i32, i32* %tt, align 4
  %shl35 = shl i32 %32, 1
  %33 = load i32, i32* %r, align 4
  %xor36 = xor i32 %33, %shl35
  store i32 %xor36, i32* %r, align 4
  %34 = load i32, i32* %l, align 4
  %35 = load i32*, i32** %data.addr, align 8
  %arrayidx37 = getelementptr inbounds i32, i32* %35, i64 0
  store i32 %34, i32* %arrayidx37, align 4
  %36 = load i32, i32* %r, align 4
  %37 = load i32*, i32** %data.addr, align 8
  %arrayidx38 = getelementptr inbounds i32, i32* %37, i64 1
  store i32 %36, i32* %arrayidx38, align 4
  %38 = load i32*, i32** %data.addr, align 8
  %39 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8
  call void @DES_encrypt2(i32* %38, %struct.DES_ks* %39, i32 1)
  %40 = load i32*, i32** %data.addr, align 8
  %41 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8
  call void @DES_encrypt2(i32* %40, %struct.DES_ks* %41, i32 0)
  %42 = load i32*, i32** %data.addr, align 8
  %43 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8
  call void @DES_encrypt2(i32* %42, %struct.DES_ks* %43, i32 1)
  %44 = load i32*, i32** %data.addr, align 8
  %arrayidx39 = getelementptr inbounds i32, i32* %44, i64 0
  %45 = load i32, i32* %arrayidx39, align 4
  store i32 %45, i32* %l, align 4
  %46 = load i32*, i32** %data.addr, align 8
  %arrayidx40 = getelementptr inbounds i32, i32* %46, i64 1
  %47 = load i32, i32* %arrayidx40, align 4
  store i32 %47, i32* %r, align 4
  %48 = load i32, i32* %r, align 4
  %shr42 = lshr i32 %48, 1
  %49 = load i32, i32* %l, align 4
  %xor43 = xor i32 %shr42, %49
  %conv44 = zext i32 %xor43 to i64
  %and45 = and i64 %conv44, 1431655765
  %conv46 = trunc i64 %and45 to i32
  store i32 %conv46, i32* %tt41, align 4
  %50 = load i32, i32* %tt41, align 4
  %51 = load i32, i32* %l, align 4
  %xor47 = xor i32 %51, %50
  store i32 %xor47, i32* %l, align 4
  %52 = load i32, i32* %tt41, align 4
  %shl48 = shl i32 %52, 1
  %53 = load i32, i32* %r, align 4
  %xor49 = xor i32 %53, %shl48
  store i32 %xor49, i32* %r, align 4
  %54 = load i32, i32* %l, align 4
  %shr50 = lshr i32 %54, 8
  %55 = load i32, i32* %r, align 4
  %xor51 = xor i32 %shr50, %55
  %conv52 = zext i32 %xor51 to i64
  %and53 = and i64 %conv52, 16711935
  %conv54 = trunc i64 %and53 to i32
  store i32 %conv54, i32* %tt41, align 4
  %56 = load i32, i32* %tt41, align 4
  %57 = load i32, i32* %r, align 4
  %xor55 = xor i32 %57, %56
  store i32 %xor55, i32* %r, align 4
  %58 = load i32, i32* %tt41, align 4
  %shl56 = shl i32 %58, 8
  %59 = load i32, i32* %l, align 4
  %xor57 = xor i32 %59, %shl56
  store i32 %xor57, i32* %l, align 4
  %60 = load i32, i32* %r, align 4
  %shr58 = lshr i32 %60, 2
  %61 = load i32, i32* %l, align 4
  %xor59 = xor i32 %shr58, %61
  %conv60 = zext i32 %xor59 to i64
  %and61 = and i64 %conv60, 858993459
  %conv62 = trunc i64 %and61 to i32
  store i32 %conv62, i32* %tt41, align 4
  %62 = load i32, i32* %tt41, align 4
  %63 = load i32, i32* %l, align 4
  %xor63 = xor i32 %63, %62
  store i32 %xor63, i32* %l, align 4
  %64 = load i32, i32* %tt41, align 4
  %shl64 = shl i32 %64, 2
  %65 = load i32, i32* %r, align 4
  %xor65 = xor i32 %65, %shl64
  store i32 %xor65, i32* %r, align 4
  %66 = load i32, i32* %l, align 4
  %shr66 = lshr i32 %66, 16
  %67 = load i32, i32* %r, align 4
  %xor67 = xor i32 %shr66, %67
  %conv68 = zext i32 %xor67 to i64
  %and69 = and i64 %conv68, 65535
  %conv70 = trunc i64 %and69 to i32
  store i32 %conv70, i32* %tt41, align 4
  %68 = load i32, i32* %tt41, align 4
  %69 = load i32, i32* %r, align 4
  %xor71 = xor i32 %69, %68
  store i32 %xor71, i32* %r, align 4
  %70 = load i32, i32* %tt41, align 4
  %shl72 = shl i32 %70, 16
  %71 = load i32, i32* %l, align 4
  %xor73 = xor i32 %71, %shl72
  store i32 %xor73, i32* %l, align 4
  %72 = load i32, i32* %r, align 4
  %shr74 = lshr i32 %72, 4
  %73 = load i32, i32* %l, align 4
  %xor75 = xor i32 %shr74, %73
  %conv76 = zext i32 %xor75 to i64
  %and77 = and i64 %conv76, 252645135
  %conv78 = trunc i64 %and77 to i32
  store i32 %conv78, i32* %tt41, align 4
  %74 = load i32, i32* %tt41, align 4
  %75 = load i32, i32* %l, align 4
  %xor79 = xor i32 %75, %74
  store i32 %xor79, i32* %l, align 4
  %76 = load i32, i32* %tt41, align 4
  %shl80 = shl i32 %76, 4
  %77 = load i32, i32* %r, align 4
  %xor81 = xor i32 %77, %shl80
  store i32 %xor81, i32* %r, align 4
  %78 = load i32, i32* %l, align 4
  %79 = load i32*, i32** %data.addr, align 8
  %arrayidx82 = getelementptr inbounds i32, i32* %79, i64 0
  store i32 %78, i32* %arrayidx82, align 4
  %80 = load i32, i32* %r, align 4
  %81 = load i32*, i32** %data.addr, align 8
  %arrayidx83 = getelementptr inbounds i32, i32* %81, i64 1
  store i32 %80, i32* %arrayidx83, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_decrypt3(i32* %data, %struct.DES_ks* %ks1, %struct.DES_ks* %ks2, %struct.DES_ks* %ks3) #1 {
entry:
  %data.addr = alloca i32*, align 8
  %ks1.addr = alloca %struct.DES_ks*, align 8
  %ks2.addr = alloca %struct.DES_ks*, align 8
  %ks3.addr = alloca %struct.DES_ks*, align 8
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %tt = alloca i32, align 4
  %tt41 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  store %struct.DES_ks* %ks1, %struct.DES_ks** %ks1.addr, align 8
  store %struct.DES_ks* %ks2, %struct.DES_ks** %ks2.addr, align 8
  store %struct.DES_ks* %ks3, %struct.DES_ks** %ks3.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0
  %1 = load i32, i32* %arrayidx, align 4
  store i32 %1, i32* %l, align 4
  %2 = load i32*, i32** %data.addr, align 8
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1
  %3 = load i32, i32* %arrayidx1, align 4
  store i32 %3, i32* %r, align 4
  %4 = load i32, i32* %r, align 4
  %shr = lshr i32 %4, 4
  %5 = load i32, i32* %l, align 4
  %xor = xor i32 %shr, %5
  %conv = zext i32 %xor to i64
  %and = and i64 %conv, 252645135
  %conv2 = trunc i64 %and to i32
  store i32 %conv2, i32* %tt, align 4
  %6 = load i32, i32* %tt, align 4
  %7 = load i32, i32* %l, align 4
  %xor3 = xor i32 %7, %6
  store i32 %xor3, i32* %l, align 4
  %8 = load i32, i32* %tt, align 4
  %shl = shl i32 %8, 4
  %9 = load i32, i32* %r, align 4
  %xor4 = xor i32 %9, %shl
  store i32 %xor4, i32* %r, align 4
  %10 = load i32, i32* %l, align 4
  %shr5 = lshr i32 %10, 16
  %11 = load i32, i32* %r, align 4
  %xor6 = xor i32 %shr5, %11
  %conv7 = zext i32 %xor6 to i64
  %and8 = and i64 %conv7, 65535
  %conv9 = trunc i64 %and8 to i32
  store i32 %conv9, i32* %tt, align 4
  %12 = load i32, i32* %tt, align 4
  %13 = load i32, i32* %r, align 4
  %xor10 = xor i32 %13, %12
  store i32 %xor10, i32* %r, align 4
  %14 = load i32, i32* %tt, align 4
  %shl11 = shl i32 %14, 16
  %15 = load i32, i32* %l, align 4
  %xor12 = xor i32 %15, %shl11
  store i32 %xor12, i32* %l, align 4
  %16 = load i32, i32* %r, align 4
  %shr13 = lshr i32 %16, 2
  %17 = load i32, i32* %l, align 4
  %xor14 = xor i32 %shr13, %17
  %conv15 = zext i32 %xor14 to i64
  %and16 = and i64 %conv15, 858993459
  %conv17 = trunc i64 %and16 to i32
  store i32 %conv17, i32* %tt, align 4
  %18 = load i32, i32* %tt, align 4
  %19 = load i32, i32* %l, align 4
  %xor18 = xor i32 %19, %18
  store i32 %xor18, i32* %l, align 4
  %20 = load i32, i32* %tt, align 4
  %shl19 = shl i32 %20, 2
  %21 = load i32, i32* %r, align 4
  %xor20 = xor i32 %21, %shl19
  store i32 %xor20, i32* %r, align 4
  %22 = load i32, i32* %l, align 4
  %shr21 = lshr i32 %22, 8
  %23 = load i32, i32* %r, align 4
  %xor22 = xor i32 %shr21, %23
  %conv23 = zext i32 %xor22 to i64
  %and24 = and i64 %conv23, 16711935
  %conv25 = trunc i64 %and24 to i32
  store i32 %conv25, i32* %tt, align 4
  %24 = load i32, i32* %tt, align 4
  %25 = load i32, i32* %r, align 4
  %xor26 = xor i32 %25, %24
  store i32 %xor26, i32* %r, align 4
  %26 = load i32, i32* %tt, align 4
  %shl27 = shl i32 %26, 8
  %27 = load i32, i32* %l, align 4
  %xor28 = xor i32 %27, %shl27
  store i32 %xor28, i32* %l, align 4
  %28 = load i32, i32* %r, align 4
  %shr29 = lshr i32 %28, 1
  %29 = load i32, i32* %l, align 4
  %xor30 = xor i32 %shr29, %29
  %conv31 = zext i32 %xor30 to i64
  %and32 = and i64 %conv31, 1431655765
  %conv33 = trunc i64 %and32 to i32
  store i32 %conv33, i32* %tt, align 4
  %30 = load i32, i32* %tt, align 4
  %31 = load i32, i32* %l, align 4
  %xor34 = xor i32 %31, %30
  store i32 %xor34, i32* %l, align 4
  %32 = load i32, i32* %tt, align 4
  %shl35 = shl i32 %32, 1
  %33 = load i32, i32* %r, align 4
  %xor36 = xor i32 %33, %shl35
  store i32 %xor36, i32* %r, align 4
  %34 = load i32, i32* %l, align 4
  %35 = load i32*, i32** %data.addr, align 8
  %arrayidx37 = getelementptr inbounds i32, i32* %35, i64 0
  store i32 %34, i32* %arrayidx37, align 4
  %36 = load i32, i32* %r, align 4
  %37 = load i32*, i32** %data.addr, align 8
  %arrayidx38 = getelementptr inbounds i32, i32* %37, i64 1
  store i32 %36, i32* %arrayidx38, align 4
  %38 = load i32*, i32** %data.addr, align 8
  %39 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8
  call void @DES_encrypt2(i32* %38, %struct.DES_ks* %39, i32 0)
  %40 = load i32*, i32** %data.addr, align 8
  %41 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8
  call void @DES_encrypt2(i32* %40, %struct.DES_ks* %41, i32 1)
  %42 = load i32*, i32** %data.addr, align 8
  %43 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8
  call void @DES_encrypt2(i32* %42, %struct.DES_ks* %43, i32 0)
  %44 = load i32*, i32** %data.addr, align 8
  %arrayidx39 = getelementptr inbounds i32, i32* %44, i64 0
  %45 = load i32, i32* %arrayidx39, align 4
  store i32 %45, i32* %l, align 4
  %46 = load i32*, i32** %data.addr, align 8
  %arrayidx40 = getelementptr inbounds i32, i32* %46, i64 1
  %47 = load i32, i32* %arrayidx40, align 4
  store i32 %47, i32* %r, align 4
  %48 = load i32, i32* %r, align 4
  %shr42 = lshr i32 %48, 1
  %49 = load i32, i32* %l, align 4
  %xor43 = xor i32 %shr42, %49
  %conv44 = zext i32 %xor43 to i64
  %and45 = and i64 %conv44, 1431655765
  %conv46 = trunc i64 %and45 to i32
  store i32 %conv46, i32* %tt41, align 4
  %50 = load i32, i32* %tt41, align 4
  %51 = load i32, i32* %l, align 4
  %xor47 = xor i32 %51, %50
  store i32 %xor47, i32* %l, align 4
  %52 = load i32, i32* %tt41, align 4
  %shl48 = shl i32 %52, 1
  %53 = load i32, i32* %r, align 4
  %xor49 = xor i32 %53, %shl48
  store i32 %xor49, i32* %r, align 4
  %54 = load i32, i32* %l, align 4
  %shr50 = lshr i32 %54, 8
  %55 = load i32, i32* %r, align 4
  %xor51 = xor i32 %shr50, %55
  %conv52 = zext i32 %xor51 to i64
  %and53 = and i64 %conv52, 16711935
  %conv54 = trunc i64 %and53 to i32
  store i32 %conv54, i32* %tt41, align 4
  %56 = load i32, i32* %tt41, align 4
  %57 = load i32, i32* %r, align 4
  %xor55 = xor i32 %57, %56
  store i32 %xor55, i32* %r, align 4
  %58 = load i32, i32* %tt41, align 4
  %shl56 = shl i32 %58, 8
  %59 = load i32, i32* %l, align 4
  %xor57 = xor i32 %59, %shl56
  store i32 %xor57, i32* %l, align 4
  %60 = load i32, i32* %r, align 4
  %shr58 = lshr i32 %60, 2
  %61 = load i32, i32* %l, align 4
  %xor59 = xor i32 %shr58, %61
  %conv60 = zext i32 %xor59 to i64
  %and61 = and i64 %conv60, 858993459
  %conv62 = trunc i64 %and61 to i32
  store i32 %conv62, i32* %tt41, align 4
  %62 = load i32, i32* %tt41, align 4
  %63 = load i32, i32* %l, align 4
  %xor63 = xor i32 %63, %62
  store i32 %xor63, i32* %l, align 4
  %64 = load i32, i32* %tt41, align 4
  %shl64 = shl i32 %64, 2
  %65 = load i32, i32* %r, align 4
  %xor65 = xor i32 %65, %shl64
  store i32 %xor65, i32* %r, align 4
  %66 = load i32, i32* %l, align 4
  %shr66 = lshr i32 %66, 16
  %67 = load i32, i32* %r, align 4
  %xor67 = xor i32 %shr66, %67
  %conv68 = zext i32 %xor67 to i64
  %and69 = and i64 %conv68, 65535
  %conv70 = trunc i64 %and69 to i32
  store i32 %conv70, i32* %tt41, align 4
  %68 = load i32, i32* %tt41, align 4
  %69 = load i32, i32* %r, align 4
  %xor71 = xor i32 %69, %68
  store i32 %xor71, i32* %r, align 4
  %70 = load i32, i32* %tt41, align 4
  %shl72 = shl i32 %70, 16
  %71 = load i32, i32* %l, align 4
  %xor73 = xor i32 %71, %shl72
  store i32 %xor73, i32* %l, align 4
  %72 = load i32, i32* %r, align 4
  %shr74 = lshr i32 %72, 4
  %73 = load i32, i32* %l, align 4
  %xor75 = xor i32 %shr74, %73
  %conv76 = zext i32 %xor75 to i64
  %and77 = and i64 %conv76, 252645135
  %conv78 = trunc i64 %and77 to i32
  store i32 %conv78, i32* %tt41, align 4
  %74 = load i32, i32* %tt41, align 4
  %75 = load i32, i32* %l, align 4
  %xor79 = xor i32 %75, %74
  store i32 %xor79, i32* %l, align 4
  %76 = load i32, i32* %tt41, align 4
  %shl80 = shl i32 %76, 4
  %77 = load i32, i32* %r, align 4
  %xor81 = xor i32 %77, %shl80
  store i32 %xor81, i32* %r, align 4
  %78 = load i32, i32* %l, align 4
  %79 = load i32*, i32** %data.addr, align 8
  %arrayidx82 = getelementptr inbounds i32, i32* %79, i64 0
  store i32 %78, i32* %arrayidx82, align 4
  %80 = load i32, i32* %r, align 4
  %81 = load i32*, i32** %data.addr, align 8
  %arrayidx83 = getelementptr inbounds i32, i32* %81, i64 1
  store i32 %80, i32* %arrayidx83, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_ncbc_encrypt(i8* %in, i8* %out, i64 %length, %struct.DES_ks* %_schedule, [8 x i8]* %ivec, i32 %enc) #1 {
entry:
  %data.addr.i3463 = alloca i32*, align 8
  %ks.addr.i3464 = alloca %struct.DES_ks*, align 8
  %enc.addr.i3465 = alloca i32, align 4
  %l.i3466 = alloca i32, align 4
  %r.i3467 = alloca i32, align 4
  %t.i3468 = alloca i32, align 4
  %u.i3469 = alloca i32, align 4
  %s.i3470 = alloca i32*, align 8
  %tt.i3471 = alloca i32, align 4
  %ret.i3472 = alloca i32, align 4
  %tmp.i3473 = alloca i32, align 4
  %ret40.i3474 = alloca i32, align 4
  %tmp41.i3475 = alloca i32, align 4
  %ret51.i3476 = alloca i32, align 4
  %tmp52.i3477 = alloca i32, align 4
  %ret96.i3478 = alloca i32, align 4
  %tmp97.i3479 = alloca i32, align 4
  %ret142.i3480 = alloca i32, align 4
  %tmp143.i3481 = alloca i32, align 4
  %ret188.i3482 = alloca i32, align 4
  %tmp189.i3483 = alloca i32, align 4
  %ret234.i3484 = alloca i32, align 4
  %tmp235.i3485 = alloca i32, align 4
  %ret280.i3486 = alloca i32, align 4
  %tmp281.i3487 = alloca i32, align 4
  %ret326.i3488 = alloca i32, align 4
  %tmp327.i3489 = alloca i32, align 4
  %ret372.i3490 = alloca i32, align 4
  %tmp373.i3491 = alloca i32, align 4
  %ret418.i3492 = alloca i32, align 4
  %tmp419.i3493 = alloca i32, align 4
  %ret464.i3494 = alloca i32, align 4
  %tmp465.i3495 = alloca i32, align 4
  %ret510.i3496 = alloca i32, align 4
  %tmp511.i3497 = alloca i32, align 4
  %ret556.i3498 = alloca i32, align 4
  %tmp557.i3499 = alloca i32, align 4
  %ret602.i3500 = alloca i32, align 4
  %tmp603.i3501 = alloca i32, align 4
  %ret648.i3502 = alloca i32, align 4
  %tmp649.i3503 = alloca i32, align 4
  %ret694.i3504 = alloca i32, align 4
  %tmp695.i3505 = alloca i32, align 4
  %ret740.i3506 = alloca i32, align 4
  %tmp741.i3507 = alloca i32, align 4
  %ret786.i3508 = alloca i32, align 4
  %tmp787.i3509 = alloca i32, align 4
  %ret832.i3510 = alloca i32, align 4
  %tmp833.i3511 = alloca i32, align 4
  %ret878.i3512 = alloca i32, align 4
  %tmp879.i3513 = alloca i32, align 4
  %ret924.i3514 = alloca i32, align 4
  %tmp925.i3515 = alloca i32, align 4
  %ret970.i3516 = alloca i32, align 4
  %tmp971.i3517 = alloca i32, align 4
  %ret1016.i3518 = alloca i32, align 4
  %tmp1017.i3519 = alloca i32, align 4
  %ret1062.i3520 = alloca i32, align 4
  %tmp1063.i3521 = alloca i32, align 4
  %ret1108.i3522 = alloca i32, align 4
  %tmp1109.i3523 = alloca i32, align 4
  %ret1154.i3524 = alloca i32, align 4
  %tmp1155.i3525 = alloca i32, align 4
  %ret1200.i3526 = alloca i32, align 4
  %tmp1201.i3527 = alloca i32, align 4
  %ret1246.i3528 = alloca i32, align 4
  %tmp1247.i3529 = alloca i32, align 4
  %ret1292.i3530 = alloca i32, align 4
  %tmp1293.i3531 = alloca i32, align 4
  %ret1338.i3532 = alloca i32, align 4
  %tmp1339.i3533 = alloca i32, align 4
  %ret1384.i3534 = alloca i32, align 4
  %tmp1385.i3535 = alloca i32, align 4
  %ret1430.i3536 = alloca i32, align 4
  %tmp1431.i3537 = alloca i32, align 4
  %ret1476.i3538 = alloca i32, align 4
  %tmp1477.i3539 = alloca i32, align 4
  %ret1518.i3540 = alloca i32, align 4
  %tmp1519.i3541 = alloca i32, align 4
  %ret1523.i3542 = alloca i32, align 4
  %tmp1524.i3543 = alloca i32, align 4
  %tt1528.i3544 = alloca i32, align 4
  %data.addr.i1937 = alloca i32*, align 8
  %ks.addr.i1938 = alloca %struct.DES_ks*, align 8
  %enc.addr.i1939 = alloca i32, align 4
  %l.i1940 = alloca i32, align 4
  %r.i1941 = alloca i32, align 4
  %t.i1942 = alloca i32, align 4
  %u.i1943 = alloca i32, align 4
  %s.i1944 = alloca i32*, align 8
  %tt.i1945 = alloca i32, align 4
  %ret.i1946 = alloca i32, align 4
  %tmp.i1947 = alloca i32, align 4
  %ret40.i1948 = alloca i32, align 4
  %tmp41.i1949 = alloca i32, align 4
  %ret51.i1950 = alloca i32, align 4
  %tmp52.i1951 = alloca i32, align 4
  %ret96.i1952 = alloca i32, align 4
  %tmp97.i1953 = alloca i32, align 4
  %ret142.i1954 = alloca i32, align 4
  %tmp143.i1955 = alloca i32, align 4
  %ret188.i1956 = alloca i32, align 4
  %tmp189.i1957 = alloca i32, align 4
  %ret234.i1958 = alloca i32, align 4
  %tmp235.i1959 = alloca i32, align 4
  %ret280.i1960 = alloca i32, align 4
  %tmp281.i1961 = alloca i32, align 4
  %ret326.i1962 = alloca i32, align 4
  %tmp327.i1963 = alloca i32, align 4
  %ret372.i1964 = alloca i32, align 4
  %tmp373.i1965 = alloca i32, align 4
  %ret418.i1966 = alloca i32, align 4
  %tmp419.i1967 = alloca i32, align 4
  %ret464.i1968 = alloca i32, align 4
  %tmp465.i1969 = alloca i32, align 4
  %ret510.i1970 = alloca i32, align 4
  %tmp511.i1971 = alloca i32, align 4
  %ret556.i1972 = alloca i32, align 4
  %tmp557.i1973 = alloca i32, align 4
  %ret602.i1974 = alloca i32, align 4
  %tmp603.i1975 = alloca i32, align 4
  %ret648.i1976 = alloca i32, align 4
  %tmp649.i1977 = alloca i32, align 4
  %ret694.i1978 = alloca i32, align 4
  %tmp695.i1979 = alloca i32, align 4
  %ret740.i1980 = alloca i32, align 4
  %tmp741.i1981 = alloca i32, align 4
  %ret786.i1982 = alloca i32, align 4
  %tmp787.i1983 = alloca i32, align 4
  %ret832.i1984 = alloca i32, align 4
  %tmp833.i1985 = alloca i32, align 4
  %ret878.i1986 = alloca i32, align 4
  %tmp879.i1987 = alloca i32, align 4
  %ret924.i1988 = alloca i32, align 4
  %tmp925.i1989 = alloca i32, align 4
  %ret970.i1990 = alloca i32, align 4
  %tmp971.i1991 = alloca i32, align 4
  %ret1016.i1992 = alloca i32, align 4
  %tmp1017.i1993 = alloca i32, align 4
  %ret1062.i1994 = alloca i32, align 4
  %tmp1063.i1995 = alloca i32, align 4
  %ret1108.i1996 = alloca i32, align 4
  %tmp1109.i1997 = alloca i32, align 4
  %ret1154.i1998 = alloca i32, align 4
  %tmp1155.i1999 = alloca i32, align 4
  %ret1200.i2000 = alloca i32, align 4
  %tmp1201.i2001 = alloca i32, align 4
  %ret1246.i2002 = alloca i32, align 4
  %tmp1247.i2003 = alloca i32, align 4
  %ret1292.i2004 = alloca i32, align 4
  %tmp1293.i2005 = alloca i32, align 4
  %ret1338.i2006 = alloca i32, align 4
  %tmp1339.i2007 = alloca i32, align 4
  %ret1384.i2008 = alloca i32, align 4
  %tmp1385.i2009 = alloca i32, align 4
  %ret1430.i2010 = alloca i32, align 4
  %tmp1431.i2011 = alloca i32, align 4
  %ret1476.i2012 = alloca i32, align 4
  %tmp1477.i2013 = alloca i32, align 4
  %ret1518.i2014 = alloca i32, align 4
  %tmp1519.i2015 = alloca i32, align 4
  %ret1523.i2016 = alloca i32, align 4
  %tmp1524.i2017 = alloca i32, align 4
  %tt1528.i2018 = alloca i32, align 4
  %data.addr.i411 = alloca i32*, align 8
  %ks.addr.i412 = alloca %struct.DES_ks*, align 8
  %enc.addr.i413 = alloca i32, align 4
  %l.i414 = alloca i32, align 4
  %r.i415 = alloca i32, align 4
  %t.i416 = alloca i32, align 4
  %u.i417 = alloca i32, align 4
  %s.i418 = alloca i32*, align 8
  %tt.i419 = alloca i32, align 4
  %ret.i420 = alloca i32, align 4
  %tmp.i421 = alloca i32, align 4
  %ret40.i422 = alloca i32, align 4
  %tmp41.i423 = alloca i32, align 4
  %ret51.i424 = alloca i32, align 4
  %tmp52.i425 = alloca i32, align 4
  %ret96.i426 = alloca i32, align 4
  %tmp97.i427 = alloca i32, align 4
  %ret142.i428 = alloca i32, align 4
  %tmp143.i429 = alloca i32, align 4
  %ret188.i430 = alloca i32, align 4
  %tmp189.i431 = alloca i32, align 4
  %ret234.i432 = alloca i32, align 4
  %tmp235.i433 = alloca i32, align 4
  %ret280.i434 = alloca i32, align 4
  %tmp281.i435 = alloca i32, align 4
  %ret326.i436 = alloca i32, align 4
  %tmp327.i437 = alloca i32, align 4
  %ret372.i438 = alloca i32, align 4
  %tmp373.i439 = alloca i32, align 4
  %ret418.i440 = alloca i32, align 4
  %tmp419.i441 = alloca i32, align 4
  %ret464.i442 = alloca i32, align 4
  %tmp465.i443 = alloca i32, align 4
  %ret510.i444 = alloca i32, align 4
  %tmp511.i445 = alloca i32, align 4
  %ret556.i446 = alloca i32, align 4
  %tmp557.i447 = alloca i32, align 4
  %ret602.i448 = alloca i32, align 4
  %tmp603.i449 = alloca i32, align 4
  %ret648.i450 = alloca i32, align 4
  %tmp649.i451 = alloca i32, align 4
  %ret694.i452 = alloca i32, align 4
  %tmp695.i453 = alloca i32, align 4
  %ret740.i454 = alloca i32, align 4
  %tmp741.i455 = alloca i32, align 4
  %ret786.i456 = alloca i32, align 4
  %tmp787.i457 = alloca i32, align 4
  %ret832.i458 = alloca i32, align 4
  %tmp833.i459 = alloca i32, align 4
  %ret878.i460 = alloca i32, align 4
  %tmp879.i461 = alloca i32, align 4
  %ret924.i462 = alloca i32, align 4
  %tmp925.i463 = alloca i32, align 4
  %ret970.i464 = alloca i32, align 4
  %tmp971.i465 = alloca i32, align 4
  %ret1016.i466 = alloca i32, align 4
  %tmp1017.i467 = alloca i32, align 4
  %ret1062.i468 = alloca i32, align 4
  %tmp1063.i469 = alloca i32, align 4
  %ret1108.i470 = alloca i32, align 4
  %tmp1109.i471 = alloca i32, align 4
  %ret1154.i472 = alloca i32, align 4
  %tmp1155.i473 = alloca i32, align 4
  %ret1200.i474 = alloca i32, align 4
  %tmp1201.i475 = alloca i32, align 4
  %ret1246.i476 = alloca i32, align 4
  %tmp1247.i477 = alloca i32, align 4
  %ret1292.i478 = alloca i32, align 4
  %tmp1293.i479 = alloca i32, align 4
  %ret1338.i480 = alloca i32, align 4
  %tmp1339.i481 = alloca i32, align 4
  %ret1384.i482 = alloca i32, align 4
  %tmp1385.i483 = alloca i32, align 4
  %ret1430.i484 = alloca i32, align 4
  %tmp1431.i485 = alloca i32, align 4
  %ret1476.i486 = alloca i32, align 4
  %tmp1477.i487 = alloca i32, align 4
  %ret1518.i488 = alloca i32, align 4
  %tmp1519.i489 = alloca i32, align 4
  %ret1523.i490 = alloca i32, align 4
  %tmp1524.i491 = alloca i32, align 4
  %tt1528.i492 = alloca i32, align 4
  %data.addr.i = alloca i32*, align 8
  %ks.addr.i = alloca %struct.DES_ks*, align 8
  %enc.addr.i = alloca i32, align 4
  %l.i = alloca i32, align 4
  %r.i = alloca i32, align 4
  %t.i = alloca i32, align 4
  %u.i = alloca i32, align 4
  %s.i = alloca i32*, align 8
  %tt.i = alloca i32, align 4
  %ret.i = alloca i32, align 4
  %tmp.i = alloca i32, align 4
  %ret40.i = alloca i32, align 4
  %tmp41.i = alloca i32, align 4
  %ret51.i = alloca i32, align 4
  %tmp52.i = alloca i32, align 4
  %ret96.i = alloca i32, align 4
  %tmp97.i = alloca i32, align 4
  %ret142.i = alloca i32, align 4
  %tmp143.i = alloca i32, align 4
  %ret188.i = alloca i32, align 4
  %tmp189.i = alloca i32, align 4
  %ret234.i = alloca i32, align 4
  %tmp235.i = alloca i32, align 4
  %ret280.i = alloca i32, align 4
  %tmp281.i = alloca i32, align 4
  %ret326.i = alloca i32, align 4
  %tmp327.i = alloca i32, align 4
  %ret372.i = alloca i32, align 4
  %tmp373.i = alloca i32, align 4
  %ret418.i = alloca i32, align 4
  %tmp419.i = alloca i32, align 4
  %ret464.i = alloca i32, align 4
  %tmp465.i = alloca i32, align 4
  %ret510.i = alloca i32, align 4
  %tmp511.i = alloca i32, align 4
  %ret556.i = alloca i32, align 4
  %tmp557.i = alloca i32, align 4
  %ret602.i = alloca i32, align 4
  %tmp603.i = alloca i32, align 4
  %ret648.i = alloca i32, align 4
  %tmp649.i = alloca i32, align 4
  %ret694.i = alloca i32, align 4
  %tmp695.i = alloca i32, align 4
  %ret740.i = alloca i32, align 4
  %tmp741.i = alloca i32, align 4
  %ret786.i = alloca i32, align 4
  %tmp787.i = alloca i32, align 4
  %ret832.i = alloca i32, align 4
  %tmp833.i = alloca i32, align 4
  %ret878.i = alloca i32, align 4
  %tmp879.i = alloca i32, align 4
  %ret924.i = alloca i32, align 4
  %tmp925.i = alloca i32, align 4
  %ret970.i = alloca i32, align 4
  %tmp971.i = alloca i32, align 4
  %ret1016.i = alloca i32, align 4
  %tmp1017.i = alloca i32, align 4
  %ret1062.i = alloca i32, align 4
  %tmp1063.i = alloca i32, align 4
  %ret1108.i = alloca i32, align 4
  %tmp1109.i = alloca i32, align 4
  %ret1154.i = alloca i32, align 4
  %tmp1155.i = alloca i32, align 4
  %ret1200.i = alloca i32, align 4
  %tmp1201.i = alloca i32, align 4
  %ret1246.i = alloca i32, align 4
  %tmp1247.i = alloca i32, align 4
  %ret1292.i = alloca i32, align 4
  %tmp1293.i = alloca i32, align 4
  %ret1338.i = alloca i32, align 4
  %tmp1339.i = alloca i32, align 4
  %ret1384.i = alloca i32, align 4
  %tmp1385.i = alloca i32, align 4
  %ret1430.i = alloca i32, align 4
  %tmp1431.i = alloca i32, align 4
  %ret1476.i = alloca i32, align 4
  %tmp1477.i = alloca i32, align 4
  %ret1518.i = alloca i32, align 4
  %tmp1519.i = alloca i32, align 4
  %ret1523.i = alloca i32, align 4
  %tmp1524.i = alloca i32, align 4
  %tt1528.i = alloca i32, align 4
  %in.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %_schedule.addr = alloca %struct.DES_ks*, align 8
  %ivec.addr = alloca [8 x i8]*, align 8
  %enc.addr = alloca i32, align 4
  %tin0 = alloca i32, align 4
  %tin1 = alloca i32, align 4
  %tout0 = alloca i32, align 4
  %tout1 = alloca i32, align 4
  %xor0 = alloca i32, align 4
  %xor1 = alloca i32, align 4
  %l = alloca i64, align 8
  %tin = alloca [2 x i32], align 4
  %iv = alloca i8*, align 8
  store i8* %in, i8** %in.addr, align 8
  store i8* %out, i8** %out.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  store %struct.DES_ks* %_schedule, %struct.DES_ks** %_schedule.addr, align 8
  store [8 x i8]* %ivec, [8 x i8]** %ivec.addr, align 8
  store i32 %enc, i32* %enc.addr, align 4
  %0 = load i64, i64* %length.addr, align 8
  store i64 %0, i64* %l, align 8
  %1 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  store i8* %arrayidx, i8** %iv, align 8
  %2 = load i32, i32* %enc.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %iv, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1
  store i8* %incdec.ptr, i8** %iv, align 8
  %4 = load i8, i8* %3, align 1
  %conv = zext i8 %4 to i32
  store i32 %conv, i32* %tout0, align 4
  %5 = load i8*, i8** %iv, align 8
  %incdec.ptr1 = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr1, i8** %iv, align 8
  %6 = load i8, i8* %5, align 1
  %conv2 = zext i8 %6 to i32
  %shl = shl i32 %conv2, 8
  %7 = load i32, i32* %tout0, align 4
  %or = or i32 %7, %shl
  store i32 %or, i32* %tout0, align 4
  %8 = load i8*, i8** %iv, align 8
  %incdec.ptr3 = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr3, i8** %iv, align 8
  %9 = load i8, i8* %8, align 1
  %conv4 = zext i8 %9 to i32
  %shl5 = shl i32 %conv4, 16
  %10 = load i32, i32* %tout0, align 4
  %or6 = or i32 %10, %shl5
  store i32 %or6, i32* %tout0, align 4
  %11 = load i8*, i8** %iv, align 8
  %incdec.ptr7 = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr7, i8** %iv, align 8
  %12 = load i8, i8* %11, align 1
  %conv8 = zext i8 %12 to i32
  %shl9 = shl i32 %conv8, 24
  %13 = load i32, i32* %tout0, align 4
  %or10 = or i32 %13, %shl9
  store i32 %or10, i32* %tout0, align 4
  %14 = load i8*, i8** %iv, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr11, i8** %iv, align 8
  %15 = load i8, i8* %14, align 1
  %conv12 = zext i8 %15 to i32
  store i32 %conv12, i32* %tout1, align 4
  %16 = load i8*, i8** %iv, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr13, i8** %iv, align 8
  %17 = load i8, i8* %16, align 1
  %conv14 = zext i8 %17 to i32
  %shl15 = shl i32 %conv14, 8
  %18 = load i32, i32* %tout1, align 4
  %or16 = or i32 %18, %shl15
  store i32 %or16, i32* %tout1, align 4
  %19 = load i8*, i8** %iv, align 8
  %incdec.ptr17 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr17, i8** %iv, align 8
  %20 = load i8, i8* %19, align 1
  %conv18 = zext i8 %20 to i32
  %shl19 = shl i32 %conv18, 16
  %21 = load i32, i32* %tout1, align 4
  %or20 = or i32 %21, %shl19
  store i32 %or20, i32* %tout1, align 4
  %22 = load i8*, i8** %iv, align 8
  %incdec.ptr21 = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr21, i8** %iv, align 8
  %23 = load i8, i8* %22, align 1
  %conv22 = zext i8 %23 to i32
  %shl23 = shl i32 %conv22, 24
  %24 = load i32, i32* %tout1, align 4
  %or24 = or i32 %24, %shl23
  store i32 %or24, i32* %tout1, align 4
  %25 = load i64, i64* %l, align 8
  %sub = sub nsw i64 %25, 8
  store i64 %sub, i64* %l, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %26 = load i64, i64* %l, align 8
  %cmp = icmp sge i64 %26, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %27 = load i8*, i8** %in.addr, align 8
  %incdec.ptr26 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %incdec.ptr26, i8** %in.addr, align 8
  %28 = load i8, i8* %27, align 1
  %conv27 = zext i8 %28 to i32
  store i32 %conv27, i32* %tin0, align 4
  %29 = load i8*, i8** %in.addr, align 8
  %incdec.ptr28 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %incdec.ptr28, i8** %in.addr, align 8
  %30 = load i8, i8* %29, align 1
  %conv29 = zext i8 %30 to i32
  %shl30 = shl i32 %conv29, 8
  %31 = load i32, i32* %tin0, align 4
  %or31 = or i32 %31, %shl30
  store i32 %or31, i32* %tin0, align 4
  %32 = load i8*, i8** %in.addr, align 8
  %incdec.ptr32 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %incdec.ptr32, i8** %in.addr, align 8
  %33 = load i8, i8* %32, align 1
  %conv33 = zext i8 %33 to i32
  %shl34 = shl i32 %conv33, 16
  %34 = load i32, i32* %tin0, align 4
  %or35 = or i32 %34, %shl34
  store i32 %or35, i32* %tin0, align 4
  %35 = load i8*, i8** %in.addr, align 8
  %incdec.ptr36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %incdec.ptr36, i8** %in.addr, align 8
  %36 = load i8, i8* %35, align 1
  %conv37 = zext i8 %36 to i32
  %shl38 = shl i32 %conv37, 24
  %37 = load i32, i32* %tin0, align 4
  %or39 = or i32 %37, %shl38
  store i32 %or39, i32* %tin0, align 4
  %38 = load i8*, i8** %in.addr, align 8
  %incdec.ptr40 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %incdec.ptr40, i8** %in.addr, align 8
  %39 = load i8, i8* %38, align 1
  %conv41 = zext i8 %39 to i32
  store i32 %conv41, i32* %tin1, align 4
  %40 = load i8*, i8** %in.addr, align 8
  %incdec.ptr42 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %incdec.ptr42, i8** %in.addr, align 8
  %41 = load i8, i8* %40, align 1
  %conv43 = zext i8 %41 to i32
  %shl44 = shl i32 %conv43, 8
  %42 = load i32, i32* %tin1, align 4
  %or45 = or i32 %42, %shl44
  store i32 %or45, i32* %tin1, align 4
  %43 = load i8*, i8** %in.addr, align 8
  %incdec.ptr46 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr46, i8** %in.addr, align 8
  %44 = load i8, i8* %43, align 1
  %conv47 = zext i8 %44 to i32
  %shl48 = shl i32 %conv47, 16
  %45 = load i32, i32* %tin1, align 4
  %or49 = or i32 %45, %shl48
  store i32 %or49, i32* %tin1, align 4
  %46 = load i8*, i8** %in.addr, align 8
  %incdec.ptr50 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %incdec.ptr50, i8** %in.addr, align 8
  %47 = load i8, i8* %46, align 1
  %conv51 = zext i8 %47 to i32
  %shl52 = shl i32 %conv51, 24
  %48 = load i32, i32* %tin1, align 4
  %or53 = or i32 %48, %shl52
  store i32 %or53, i32* %tin1, align 4
  %49 = load i32, i32* %tout0, align 4
  %50 = load i32, i32* %tin0, align 4
  %xor = xor i32 %50, %49
  store i32 %xor, i32* %tin0, align 4
  %51 = load i32, i32* %tin0, align 4
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %51, i32* %arrayidx54, align 4
  %52 = load i32, i32* %tout1, align 4
  %53 = load i32, i32* %tin1, align 4
  %xor55 = xor i32 %53, %52
  store i32 %xor55, i32* %tin1, align 4
  %54 = load i32, i32* %tin1, align 4
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %54, i32* %arrayidx56, align 4
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %55 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8
  store i32* %arraydecay, i32** %data.addr.i, align 8
  store %struct.DES_ks* %55, %struct.DES_ks** %ks.addr.i, align 8
  store i32 1, i32* %enc.addr.i, align 4
  %56 = load i32*, i32** %data.addr.i, align 8
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %r.i, align 4
  %58 = load i32*, i32** %data.addr.i, align 8
  %arrayidx1.i = getelementptr inbounds i32, i32* %58, i64 1
  %59 = load i32, i32* %arrayidx1.i, align 4
  store i32 %59, i32* %l.i, align 4
  %60 = load i32, i32* %l.i, align 4
  %shr.i = lshr i32 %60, 4
  %61 = load i32, i32* %r.i, align 4
  %xor.i = xor i32 %shr.i, %61
  %conv.i = zext i32 %xor.i to i64
  %and.i = and i64 %conv.i, 252645135
  %conv2.i = trunc i64 %and.i to i32
  store i32 %conv2.i, i32* %tt.i, align 4
  %62 = load i32, i32* %tt.i, align 4
  %63 = load i32, i32* %r.i, align 4
  %xor3.i = xor i32 %63, %62
  store i32 %xor3.i, i32* %r.i, align 4
  %64 = load i32, i32* %tt.i, align 4
  %shl.i = shl i32 %64, 4
  %65 = load i32, i32* %l.i, align 4
  %xor4.i = xor i32 %65, %shl.i
  store i32 %xor4.i, i32* %l.i, align 4
  %66 = load i32, i32* %r.i, align 4
  %shr5.i = lshr i32 %66, 16
  %67 = load i32, i32* %l.i, align 4
  %xor6.i = xor i32 %shr5.i, %67
  %conv7.i = zext i32 %xor6.i to i64
  %and8.i = and i64 %conv7.i, 65535
  %conv9.i = trunc i64 %and8.i to i32
  store i32 %conv9.i, i32* %tt.i, align 4
  %68 = load i32, i32* %tt.i, align 4
  %69 = load i32, i32* %l.i, align 4
  %xor10.i = xor i32 %69, %68
  store i32 %xor10.i, i32* %l.i, align 4
  %70 = load i32, i32* %tt.i, align 4
  %shl11.i = shl i32 %70, 16
  %71 = load i32, i32* %r.i, align 4
  %xor12.i = xor i32 %71, %shl11.i
  store i32 %xor12.i, i32* %r.i, align 4
  %72 = load i32, i32* %l.i, align 4
  %shr13.i = lshr i32 %72, 2
  %73 = load i32, i32* %r.i, align 4
  %xor14.i = xor i32 %shr13.i, %73
  %conv15.i = zext i32 %xor14.i to i64
  %and16.i = and i64 %conv15.i, 858993459
  %conv17.i = trunc i64 %and16.i to i32
  store i32 %conv17.i, i32* %tt.i, align 4
  %74 = load i32, i32* %tt.i, align 4
  %75 = load i32, i32* %r.i, align 4
  %xor18.i = xor i32 %75, %74
  store i32 %xor18.i, i32* %r.i, align 4
  %76 = load i32, i32* %tt.i, align 4
  %shl19.i = shl i32 %76, 2
  %77 = load i32, i32* %l.i, align 4
  %xor20.i = xor i32 %77, %shl19.i
  store i32 %xor20.i, i32* %l.i, align 4
  %78 = load i32, i32* %r.i, align 4
  %shr21.i = lshr i32 %78, 8
  %79 = load i32, i32* %l.i, align 4
  %xor22.i = xor i32 %shr21.i, %79
  %conv23.i = zext i32 %xor22.i to i64
  %and24.i = and i64 %conv23.i, 16711935
  %conv25.i = trunc i64 %and24.i to i32
  store i32 %conv25.i, i32* %tt.i, align 4
  %80 = load i32, i32* %tt.i, align 4
  %81 = load i32, i32* %l.i, align 4
  %xor26.i = xor i32 %81, %80
  store i32 %xor26.i, i32* %l.i, align 4
  %82 = load i32, i32* %tt.i, align 4
  %shl27.i = shl i32 %82, 8
  %83 = load i32, i32* %r.i, align 4
  %xor28.i = xor i32 %83, %shl27.i
  store i32 %xor28.i, i32* %r.i, align 4
  %84 = load i32, i32* %l.i, align 4
  %shr29.i = lshr i32 %84, 1
  %85 = load i32, i32* %r.i, align 4
  %xor30.i = xor i32 %shr29.i, %85
  %conv31.i = zext i32 %xor30.i to i64
  %and32.i = and i64 %conv31.i, 1431655765
  %conv33.i = trunc i64 %and32.i to i32
  store i32 %conv33.i, i32* %tt.i, align 4
  %86 = load i32, i32* %tt.i, align 4
  %87 = load i32, i32* %r.i, align 4
  %xor34.i = xor i32 %87, %86
  store i32 %xor34.i, i32* %r.i, align 4
  %88 = load i32, i32* %tt.i, align 4
  %shl35.i = shl i32 %88, 1
  %89 = load i32, i32* %l.i, align 4
  %xor36.i = xor i32 %89, %shl35.i
  store i32 %xor36.i, i32* %l.i, align 4
  %90 = load i32, i32* %r.i, align 4
  %91 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %90) #5, !srcloc !2
  store i32 %91, i32* %ret.i, align 4
  %92 = load i32, i32* %ret.i, align 4
  store i32 %92, i32* %tmp.i, align 4
  %93 = load i32, i32* %tmp.i, align 4
  %conv37.i = zext i32 %93 to i64
  %and38.i = and i64 %conv37.i, 4294967295
  %conv39.i = trunc i64 %and38.i to i32
  store i32 %conv39.i, i32* %r.i, align 4
  %94 = load i32, i32* %l.i, align 4
  %95 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %94) #5, !srcloc !3
  store i32 %95, i32* %ret40.i, align 4
  %96 = load i32, i32* %ret40.i, align 4
  store i32 %96, i32* %tmp41.i, align 4
  %97 = load i32, i32* %tmp41.i, align 4
  %conv42.i = zext i32 %97 to i64
  %and43.i = and i64 %conv42.i, 4294967295
  %conv44.i = trunc i64 %and43.i to i32
  store i32 %conv44.i, i32* %l.i, align 4
  %98 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i, align 8
  %ks45.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %98, i32 0, i32 0
  %arraydecay.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i, i64 0, i64 0
  %deslong.i = bitcast %union.anon* %arraydecay.i to [2 x i32]*
  %arraydecay46.i = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i, i64 0, i64 0
  store i32* %arraydecay46.i, i32** %s.i, align 8
  %99 = load i32, i32* %enc.addr.i, align 4
  %tobool.i = icmp ne i32 %99, 0
  br i1 %tobool.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.body
  %100 = load i32, i32* %r.i, align 4
  %101 = load i32*, i32** %s.i, align 8
  %102 = load i32, i32* %101, align 4
  %xor48.i = xor i32 %100, %102
  store i32 %xor48.i, i32* %u.i, align 4
  %103 = load i32, i32* %r.i, align 4
  %104 = load i32*, i32** %s.i, align 8
  %arrayidx49.i = getelementptr inbounds i32, i32* %104, i64 1
  %105 = load i32, i32* %arrayidx49.i, align 4
  %xor50.i = xor i32 %103, %105
  store i32 %xor50.i, i32* %t.i, align 4
  %106 = load i32, i32* %t.i, align 4
  %107 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %106) #5, !srcloc !4
  store i32 %107, i32* %ret51.i, align 4
  %108 = load i32, i32* %ret51.i, align 4
  store i32 %108, i32* %tmp52.i, align 4
  %109 = load i32, i32* %tmp52.i, align 4
  store i32 %109, i32* %t.i, align 4
  %110 = load i32, i32* %u.i, align 4
  %shr53.i = lshr i32 %110, 2
  %and54.i = and i32 %shr53.i, 63
  %idxprom.i = zext i32 %and54.i to i64
  %arrayidx55.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i
  %111 = load i32, i32* %arrayidx55.i, align 4
  %112 = load i32, i32* %u.i, align 4
  %shr56.i = lshr i32 %112, 10
  %and57.i = and i32 %shr56.i, 63
  %idxprom58.i = zext i32 %and57.i to i64
  %arrayidx59.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i
  %113 = load i32, i32* %arrayidx59.i, align 4
  %xor60.i = xor i32 %111, %113
  %114 = load i32, i32* %u.i, align 4
  %shr61.i = lshr i32 %114, 18
  %and62.i = and i32 %shr61.i, 63
  %idxprom63.i = zext i32 %and62.i to i64
  %arrayidx64.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i
  %115 = load i32, i32* %arrayidx64.i, align 4
  %xor65.i = xor i32 %xor60.i, %115
  %116 = load i32, i32* %u.i, align 4
  %shr66.i = lshr i32 %116, 26
  %idxprom68.i = zext i32 %shr66.i to i64
  %arrayidx69.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i
  %117 = load i32, i32* %arrayidx69.i, align 4
  %xor70.i = xor i32 %xor65.i, %117
  %118 = load i32, i32* %t.i, align 4
  %shr71.i = lshr i32 %118, 2
  %and72.i = and i32 %shr71.i, 63
  %idxprom73.i = zext i32 %and72.i to i64
  %arrayidx74.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i
  %119 = load i32, i32* %arrayidx74.i, align 4
  %xor75.i = xor i32 %xor70.i, %119
  %120 = load i32, i32* %t.i, align 4
  %shr76.i = lshr i32 %120, 10
  %and77.i = and i32 %shr76.i, 63
  %idxprom78.i = zext i32 %and77.i to i64
  %arrayidx79.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i
  %121 = load i32, i32* %arrayidx79.i, align 4
  %xor80.i = xor i32 %xor75.i, %121
  %122 = load i32, i32* %t.i, align 4
  %shr81.i = lshr i32 %122, 18
  %and82.i = and i32 %shr81.i, 63
  %idxprom83.i = zext i32 %and82.i to i64
  %arrayidx84.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i
  %123 = load i32, i32* %arrayidx84.i, align 4
  %xor85.i = xor i32 %xor80.i, %123
  %124 = load i32, i32* %t.i, align 4
  %shr86.i = lshr i32 %124, 26
  %idxprom88.i = zext i32 %shr86.i to i64
  %arrayidx89.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i
  %125 = load i32, i32* %arrayidx89.i, align 4
  %xor90.i = xor i32 %xor85.i, %125
  %126 = load i32, i32* %l.i, align 4
  %xor91.i = xor i32 %126, %xor90.i
  store i32 %xor91.i, i32* %l.i, align 4
  %127 = load i32, i32* %l.i, align 4
  %128 = load i32*, i32** %s.i, align 8
  %arrayidx92.i = getelementptr inbounds i32, i32* %128, i64 2
  %129 = load i32, i32* %arrayidx92.i, align 4
  %xor93.i = xor i32 %127, %129
  store i32 %xor93.i, i32* %u.i, align 4
  %130 = load i32, i32* %l.i, align 4
  %131 = load i32*, i32** %s.i, align 8
  %arrayidx94.i = getelementptr inbounds i32, i32* %131, i64 3
  %132 = load i32, i32* %arrayidx94.i, align 4
  %xor95.i = xor i32 %130, %132
  store i32 %xor95.i, i32* %t.i, align 4
  %133 = load i32, i32* %t.i, align 4
  %134 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %133) #5, !srcloc !5
  store i32 %134, i32* %ret96.i, align 4
  %135 = load i32, i32* %ret96.i, align 4
  store i32 %135, i32* %tmp97.i, align 4
  %136 = load i32, i32* %tmp97.i, align 4
  store i32 %136, i32* %t.i, align 4
  %137 = load i32, i32* %u.i, align 4
  %shr98.i = lshr i32 %137, 2
  %and99.i = and i32 %shr98.i, 63
  %idxprom100.i = zext i32 %and99.i to i64
  %arrayidx101.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i
  %138 = load i32, i32* %arrayidx101.i, align 4
  %139 = load i32, i32* %u.i, align 4
  %shr102.i = lshr i32 %139, 10
  %and103.i = and i32 %shr102.i, 63
  %idxprom104.i = zext i32 %and103.i to i64
  %arrayidx105.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i
  %140 = load i32, i32* %arrayidx105.i, align 4
  %xor106.i = xor i32 %138, %140
  %141 = load i32, i32* %u.i, align 4
  %shr107.i = lshr i32 %141, 18
  %and108.i = and i32 %shr107.i, 63
  %idxprom109.i = zext i32 %and108.i to i64
  %arrayidx110.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i
  %142 = load i32, i32* %arrayidx110.i, align 4
  %xor111.i = xor i32 %xor106.i, %142
  %143 = load i32, i32* %u.i, align 4
  %shr112.i = lshr i32 %143, 26
  %idxprom114.i = zext i32 %shr112.i to i64
  %arrayidx115.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i
  %144 = load i32, i32* %arrayidx115.i, align 4
  %xor116.i = xor i32 %xor111.i, %144
  %145 = load i32, i32* %t.i, align 4
  %shr117.i = lshr i32 %145, 2
  %and118.i = and i32 %shr117.i, 63
  %idxprom119.i = zext i32 %and118.i to i64
  %arrayidx120.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i
  %146 = load i32, i32* %arrayidx120.i, align 4
  %xor121.i = xor i32 %xor116.i, %146
  %147 = load i32, i32* %t.i, align 4
  %shr122.i = lshr i32 %147, 10
  %and123.i = and i32 %shr122.i, 63
  %idxprom124.i = zext i32 %and123.i to i64
  %arrayidx125.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i
  %148 = load i32, i32* %arrayidx125.i, align 4
  %xor126.i = xor i32 %xor121.i, %148
  %149 = load i32, i32* %t.i, align 4
  %shr127.i = lshr i32 %149, 18
  %and128.i = and i32 %shr127.i, 63
  %idxprom129.i = zext i32 %and128.i to i64
  %arrayidx130.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i
  %150 = load i32, i32* %arrayidx130.i, align 4
  %xor131.i = xor i32 %xor126.i, %150
  %151 = load i32, i32* %t.i, align 4
  %shr132.i = lshr i32 %151, 26
  %idxprom134.i = zext i32 %shr132.i to i64
  %arrayidx135.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i
  %152 = load i32, i32* %arrayidx135.i, align 4
  %xor136.i = xor i32 %xor131.i, %152
  %153 = load i32, i32* %r.i, align 4
  %xor137.i = xor i32 %153, %xor136.i
  store i32 %xor137.i, i32* %r.i, align 4
  %154 = load i32, i32* %r.i, align 4
  %155 = load i32*, i32** %s.i, align 8
  %arrayidx138.i = getelementptr inbounds i32, i32* %155, i64 4
  %156 = load i32, i32* %arrayidx138.i, align 4
  %xor139.i = xor i32 %154, %156
  store i32 %xor139.i, i32* %u.i, align 4
  %157 = load i32, i32* %r.i, align 4
  %158 = load i32*, i32** %s.i, align 8
  %arrayidx140.i = getelementptr inbounds i32, i32* %158, i64 5
  %159 = load i32, i32* %arrayidx140.i, align 4
  %xor141.i = xor i32 %157, %159
  store i32 %xor141.i, i32* %t.i, align 4
  %160 = load i32, i32* %t.i, align 4
  %161 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %160) #5, !srcloc !6
  store i32 %161, i32* %ret142.i, align 4
  %162 = load i32, i32* %ret142.i, align 4
  store i32 %162, i32* %tmp143.i, align 4
  %163 = load i32, i32* %tmp143.i, align 4
  store i32 %163, i32* %t.i, align 4
  %164 = load i32, i32* %u.i, align 4
  %shr144.i = lshr i32 %164, 2
  %and145.i = and i32 %shr144.i, 63
  %idxprom146.i = zext i32 %and145.i to i64
  %arrayidx147.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i
  %165 = load i32, i32* %arrayidx147.i, align 4
  %166 = load i32, i32* %u.i, align 4
  %shr148.i = lshr i32 %166, 10
  %and149.i = and i32 %shr148.i, 63
  %idxprom150.i = zext i32 %and149.i to i64
  %arrayidx151.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i
  %167 = load i32, i32* %arrayidx151.i, align 4
  %xor152.i = xor i32 %165, %167
  %168 = load i32, i32* %u.i, align 4
  %shr153.i = lshr i32 %168, 18
  %and154.i = and i32 %shr153.i, 63
  %idxprom155.i = zext i32 %and154.i to i64
  %arrayidx156.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i
  %169 = load i32, i32* %arrayidx156.i, align 4
  %xor157.i = xor i32 %xor152.i, %169
  %170 = load i32, i32* %u.i, align 4
  %shr158.i = lshr i32 %170, 26
  %idxprom160.i = zext i32 %shr158.i to i64
  %arrayidx161.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i
  %171 = load i32, i32* %arrayidx161.i, align 4
  %xor162.i = xor i32 %xor157.i, %171
  %172 = load i32, i32* %t.i, align 4
  %shr163.i = lshr i32 %172, 2
  %and164.i = and i32 %shr163.i, 63
  %idxprom165.i = zext i32 %and164.i to i64
  %arrayidx166.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i
  %173 = load i32, i32* %arrayidx166.i, align 4
  %xor167.i = xor i32 %xor162.i, %173
  %174 = load i32, i32* %t.i, align 4
  %shr168.i = lshr i32 %174, 10
  %and169.i = and i32 %shr168.i, 63
  %idxprom170.i = zext i32 %and169.i to i64
  %arrayidx171.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i
  %175 = load i32, i32* %arrayidx171.i, align 4
  %xor172.i = xor i32 %xor167.i, %175
  %176 = load i32, i32* %t.i, align 4
  %shr173.i = lshr i32 %176, 18
  %and174.i = and i32 %shr173.i, 63
  %idxprom175.i = zext i32 %and174.i to i64
  %arrayidx176.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i
  %177 = load i32, i32* %arrayidx176.i, align 4
  %xor177.i = xor i32 %xor172.i, %177
  %178 = load i32, i32* %t.i, align 4
  %shr178.i = lshr i32 %178, 26
  %idxprom180.i = zext i32 %shr178.i to i64
  %arrayidx181.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i
  %179 = load i32, i32* %arrayidx181.i, align 4
  %xor182.i = xor i32 %xor177.i, %179
  %180 = load i32, i32* %l.i, align 4
  %xor183.i = xor i32 %180, %xor182.i
  store i32 %xor183.i, i32* %l.i, align 4
  %181 = load i32, i32* %l.i, align 4
  %182 = load i32*, i32** %s.i, align 8
  %arrayidx184.i = getelementptr inbounds i32, i32* %182, i64 6
  %183 = load i32, i32* %arrayidx184.i, align 4
  %xor185.i = xor i32 %181, %183
  store i32 %xor185.i, i32* %u.i, align 4
  %184 = load i32, i32* %l.i, align 4
  %185 = load i32*, i32** %s.i, align 8
  %arrayidx186.i = getelementptr inbounds i32, i32* %185, i64 7
  %186 = load i32, i32* %arrayidx186.i, align 4
  %xor187.i = xor i32 %184, %186
  store i32 %xor187.i, i32* %t.i, align 4
  %187 = load i32, i32* %t.i, align 4
  %188 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %187) #5, !srcloc !7
  store i32 %188, i32* %ret188.i, align 4
  %189 = load i32, i32* %ret188.i, align 4
  store i32 %189, i32* %tmp189.i, align 4
  %190 = load i32, i32* %tmp189.i, align 4
  store i32 %190, i32* %t.i, align 4
  %191 = load i32, i32* %u.i, align 4
  %shr190.i = lshr i32 %191, 2
  %and191.i = and i32 %shr190.i, 63
  %idxprom192.i = zext i32 %and191.i to i64
  %arrayidx193.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i
  %192 = load i32, i32* %arrayidx193.i, align 4
  %193 = load i32, i32* %u.i, align 4
  %shr194.i = lshr i32 %193, 10
  %and195.i = and i32 %shr194.i, 63
  %idxprom196.i = zext i32 %and195.i to i64
  %arrayidx197.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i
  %194 = load i32, i32* %arrayidx197.i, align 4
  %xor198.i = xor i32 %192, %194
  %195 = load i32, i32* %u.i, align 4
  %shr199.i = lshr i32 %195, 18
  %and200.i = and i32 %shr199.i, 63
  %idxprom201.i = zext i32 %and200.i to i64
  %arrayidx202.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i
  %196 = load i32, i32* %arrayidx202.i, align 4
  %xor203.i = xor i32 %xor198.i, %196
  %197 = load i32, i32* %u.i, align 4
  %shr204.i = lshr i32 %197, 26
  %idxprom206.i = zext i32 %shr204.i to i64
  %arrayidx207.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i
  %198 = load i32, i32* %arrayidx207.i, align 4
  %xor208.i = xor i32 %xor203.i, %198
  %199 = load i32, i32* %t.i, align 4
  %shr209.i = lshr i32 %199, 2
  %and210.i = and i32 %shr209.i, 63
  %idxprom211.i = zext i32 %and210.i to i64
  %arrayidx212.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i
  %200 = load i32, i32* %arrayidx212.i, align 4
  %xor213.i = xor i32 %xor208.i, %200
  %201 = load i32, i32* %t.i, align 4
  %shr214.i = lshr i32 %201, 10
  %and215.i = and i32 %shr214.i, 63
  %idxprom216.i = zext i32 %and215.i to i64
  %arrayidx217.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i
  %202 = load i32, i32* %arrayidx217.i, align 4
  %xor218.i = xor i32 %xor213.i, %202
  %203 = load i32, i32* %t.i, align 4
  %shr219.i = lshr i32 %203, 18
  %and220.i = and i32 %shr219.i, 63
  %idxprom221.i = zext i32 %and220.i to i64
  %arrayidx222.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i
  %204 = load i32, i32* %arrayidx222.i, align 4
  %xor223.i = xor i32 %xor218.i, %204
  %205 = load i32, i32* %t.i, align 4
  %shr224.i = lshr i32 %205, 26
  %idxprom226.i = zext i32 %shr224.i to i64
  %arrayidx227.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i
  %206 = load i32, i32* %arrayidx227.i, align 4
  %xor228.i = xor i32 %xor223.i, %206
  %207 = load i32, i32* %r.i, align 4
  %xor229.i = xor i32 %207, %xor228.i
  store i32 %xor229.i, i32* %r.i, align 4
  %208 = load i32, i32* %r.i, align 4
  %209 = load i32*, i32** %s.i, align 8
  %arrayidx230.i = getelementptr inbounds i32, i32* %209, i64 8
  %210 = load i32, i32* %arrayidx230.i, align 4
  %xor231.i = xor i32 %208, %210
  store i32 %xor231.i, i32* %u.i, align 4
  %211 = load i32, i32* %r.i, align 4
  %212 = load i32*, i32** %s.i, align 8
  %arrayidx232.i = getelementptr inbounds i32, i32* %212, i64 9
  %213 = load i32, i32* %arrayidx232.i, align 4
  %xor233.i = xor i32 %211, %213
  store i32 %xor233.i, i32* %t.i, align 4
  %214 = load i32, i32* %t.i, align 4
  %215 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %214) #5, !srcloc !8
  store i32 %215, i32* %ret234.i, align 4
  %216 = load i32, i32* %ret234.i, align 4
  store i32 %216, i32* %tmp235.i, align 4
  %217 = load i32, i32* %tmp235.i, align 4
  store i32 %217, i32* %t.i, align 4
  %218 = load i32, i32* %u.i, align 4
  %shr236.i = lshr i32 %218, 2
  %and237.i = and i32 %shr236.i, 63
  %idxprom238.i = zext i32 %and237.i to i64
  %arrayidx239.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i
  %219 = load i32, i32* %arrayidx239.i, align 4
  %220 = load i32, i32* %u.i, align 4
  %shr240.i = lshr i32 %220, 10
  %and241.i = and i32 %shr240.i, 63
  %idxprom242.i = zext i32 %and241.i to i64
  %arrayidx243.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i
  %221 = load i32, i32* %arrayidx243.i, align 4
  %xor244.i = xor i32 %219, %221
  %222 = load i32, i32* %u.i, align 4
  %shr245.i = lshr i32 %222, 18
  %and246.i = and i32 %shr245.i, 63
  %idxprom247.i = zext i32 %and246.i to i64
  %arrayidx248.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i
  %223 = load i32, i32* %arrayidx248.i, align 4
  %xor249.i = xor i32 %xor244.i, %223
  %224 = load i32, i32* %u.i, align 4
  %shr250.i = lshr i32 %224, 26
  %idxprom252.i = zext i32 %shr250.i to i64
  %arrayidx253.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i
  %225 = load i32, i32* %arrayidx253.i, align 4
  %xor254.i = xor i32 %xor249.i, %225
  %226 = load i32, i32* %t.i, align 4
  %shr255.i = lshr i32 %226, 2
  %and256.i = and i32 %shr255.i, 63
  %idxprom257.i = zext i32 %and256.i to i64
  %arrayidx258.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i
  %227 = load i32, i32* %arrayidx258.i, align 4
  %xor259.i = xor i32 %xor254.i, %227
  %228 = load i32, i32* %t.i, align 4
  %shr260.i = lshr i32 %228, 10
  %and261.i = and i32 %shr260.i, 63
  %idxprom262.i = zext i32 %and261.i to i64
  %arrayidx263.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i
  %229 = load i32, i32* %arrayidx263.i, align 4
  %xor264.i = xor i32 %xor259.i, %229
  %230 = load i32, i32* %t.i, align 4
  %shr265.i = lshr i32 %230, 18
  %and266.i = and i32 %shr265.i, 63
  %idxprom267.i = zext i32 %and266.i to i64
  %arrayidx268.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i
  %231 = load i32, i32* %arrayidx268.i, align 4
  %xor269.i = xor i32 %xor264.i, %231
  %232 = load i32, i32* %t.i, align 4
  %shr270.i = lshr i32 %232, 26
  %idxprom272.i = zext i32 %shr270.i to i64
  %arrayidx273.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i
  %233 = load i32, i32* %arrayidx273.i, align 4
  %xor274.i = xor i32 %xor269.i, %233
  %234 = load i32, i32* %l.i, align 4
  %xor275.i = xor i32 %234, %xor274.i
  store i32 %xor275.i, i32* %l.i, align 4
  %235 = load i32, i32* %l.i, align 4
  %236 = load i32*, i32** %s.i, align 8
  %arrayidx276.i = getelementptr inbounds i32, i32* %236, i64 10
  %237 = load i32, i32* %arrayidx276.i, align 4
  %xor277.i = xor i32 %235, %237
  store i32 %xor277.i, i32* %u.i, align 4
  %238 = load i32, i32* %l.i, align 4
  %239 = load i32*, i32** %s.i, align 8
  %arrayidx278.i = getelementptr inbounds i32, i32* %239, i64 11
  %240 = load i32, i32* %arrayidx278.i, align 4
  %xor279.i = xor i32 %238, %240
  store i32 %xor279.i, i32* %t.i, align 4
  %241 = load i32, i32* %t.i, align 4
  %242 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %241) #5, !srcloc !9
  store i32 %242, i32* %ret280.i, align 4
  %243 = load i32, i32* %ret280.i, align 4
  store i32 %243, i32* %tmp281.i, align 4
  %244 = load i32, i32* %tmp281.i, align 4
  store i32 %244, i32* %t.i, align 4
  %245 = load i32, i32* %u.i, align 4
  %shr282.i = lshr i32 %245, 2
  %and283.i = and i32 %shr282.i, 63
  %idxprom284.i = zext i32 %and283.i to i64
  %arrayidx285.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i
  %246 = load i32, i32* %arrayidx285.i, align 4
  %247 = load i32, i32* %u.i, align 4
  %shr286.i = lshr i32 %247, 10
  %and287.i = and i32 %shr286.i, 63
  %idxprom288.i = zext i32 %and287.i to i64
  %arrayidx289.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i
  %248 = load i32, i32* %arrayidx289.i, align 4
  %xor290.i = xor i32 %246, %248
  %249 = load i32, i32* %u.i, align 4
  %shr291.i = lshr i32 %249, 18
  %and292.i = and i32 %shr291.i, 63
  %idxprom293.i = zext i32 %and292.i to i64
  %arrayidx294.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i
  %250 = load i32, i32* %arrayidx294.i, align 4
  %xor295.i = xor i32 %xor290.i, %250
  %251 = load i32, i32* %u.i, align 4
  %shr296.i = lshr i32 %251, 26
  %idxprom298.i = zext i32 %shr296.i to i64
  %arrayidx299.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i
  %252 = load i32, i32* %arrayidx299.i, align 4
  %xor300.i = xor i32 %xor295.i, %252
  %253 = load i32, i32* %t.i, align 4
  %shr301.i = lshr i32 %253, 2
  %and302.i = and i32 %shr301.i, 63
  %idxprom303.i = zext i32 %and302.i to i64
  %arrayidx304.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i
  %254 = load i32, i32* %arrayidx304.i, align 4
  %xor305.i = xor i32 %xor300.i, %254
  %255 = load i32, i32* %t.i, align 4
  %shr306.i = lshr i32 %255, 10
  %and307.i = and i32 %shr306.i, 63
  %idxprom308.i = zext i32 %and307.i to i64
  %arrayidx309.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i
  %256 = load i32, i32* %arrayidx309.i, align 4
  %xor310.i = xor i32 %xor305.i, %256
  %257 = load i32, i32* %t.i, align 4
  %shr311.i = lshr i32 %257, 18
  %and312.i = and i32 %shr311.i, 63
  %idxprom313.i = zext i32 %and312.i to i64
  %arrayidx314.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i
  %258 = load i32, i32* %arrayidx314.i, align 4
  %xor315.i = xor i32 %xor310.i, %258
  %259 = load i32, i32* %t.i, align 4
  %shr316.i = lshr i32 %259, 26
  %idxprom318.i = zext i32 %shr316.i to i64
  %arrayidx319.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i
  %260 = load i32, i32* %arrayidx319.i, align 4
  %xor320.i = xor i32 %xor315.i, %260
  %261 = load i32, i32* %r.i, align 4
  %xor321.i = xor i32 %261, %xor320.i
  store i32 %xor321.i, i32* %r.i, align 4
  %262 = load i32, i32* %r.i, align 4
  %263 = load i32*, i32** %s.i, align 8
  %arrayidx322.i = getelementptr inbounds i32, i32* %263, i64 12
  %264 = load i32, i32* %arrayidx322.i, align 4
  %xor323.i = xor i32 %262, %264
  store i32 %xor323.i, i32* %u.i, align 4
  %265 = load i32, i32* %r.i, align 4
  %266 = load i32*, i32** %s.i, align 8
  %arrayidx324.i = getelementptr inbounds i32, i32* %266, i64 13
  %267 = load i32, i32* %arrayidx324.i, align 4
  %xor325.i = xor i32 %265, %267
  store i32 %xor325.i, i32* %t.i, align 4
  %268 = load i32, i32* %t.i, align 4
  %269 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %268) #5, !srcloc !10
  store i32 %269, i32* %ret326.i, align 4
  %270 = load i32, i32* %ret326.i, align 4
  store i32 %270, i32* %tmp327.i, align 4
  %271 = load i32, i32* %tmp327.i, align 4
  store i32 %271, i32* %t.i, align 4
  %272 = load i32, i32* %u.i, align 4
  %shr328.i = lshr i32 %272, 2
  %and329.i = and i32 %shr328.i, 63
  %idxprom330.i = zext i32 %and329.i to i64
  %arrayidx331.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i
  %273 = load i32, i32* %arrayidx331.i, align 4
  %274 = load i32, i32* %u.i, align 4
  %shr332.i = lshr i32 %274, 10
  %and333.i = and i32 %shr332.i, 63
  %idxprom334.i = zext i32 %and333.i to i64
  %arrayidx335.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i
  %275 = load i32, i32* %arrayidx335.i, align 4
  %xor336.i = xor i32 %273, %275
  %276 = load i32, i32* %u.i, align 4
  %shr337.i = lshr i32 %276, 18
  %and338.i = and i32 %shr337.i, 63
  %idxprom339.i = zext i32 %and338.i to i64
  %arrayidx340.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i
  %277 = load i32, i32* %arrayidx340.i, align 4
  %xor341.i = xor i32 %xor336.i, %277
  %278 = load i32, i32* %u.i, align 4
  %shr342.i = lshr i32 %278, 26
  %idxprom344.i = zext i32 %shr342.i to i64
  %arrayidx345.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i
  %279 = load i32, i32* %arrayidx345.i, align 4
  %xor346.i = xor i32 %xor341.i, %279
  %280 = load i32, i32* %t.i, align 4
  %shr347.i = lshr i32 %280, 2
  %and348.i = and i32 %shr347.i, 63
  %idxprom349.i = zext i32 %and348.i to i64
  %arrayidx350.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i
  %281 = load i32, i32* %arrayidx350.i, align 4
  %xor351.i = xor i32 %xor346.i, %281
  %282 = load i32, i32* %t.i, align 4
  %shr352.i = lshr i32 %282, 10
  %and353.i = and i32 %shr352.i, 63
  %idxprom354.i = zext i32 %and353.i to i64
  %arrayidx355.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i
  %283 = load i32, i32* %arrayidx355.i, align 4
  %xor356.i = xor i32 %xor351.i, %283
  %284 = load i32, i32* %t.i, align 4
  %shr357.i = lshr i32 %284, 18
  %and358.i = and i32 %shr357.i, 63
  %idxprom359.i = zext i32 %and358.i to i64
  %arrayidx360.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i
  %285 = load i32, i32* %arrayidx360.i, align 4
  %xor361.i = xor i32 %xor356.i, %285
  %286 = load i32, i32* %t.i, align 4
  %shr362.i = lshr i32 %286, 26
  %idxprom364.i = zext i32 %shr362.i to i64
  %arrayidx365.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i
  %287 = load i32, i32* %arrayidx365.i, align 4
  %xor366.i = xor i32 %xor361.i, %287
  %288 = load i32, i32* %l.i, align 4
  %xor367.i = xor i32 %288, %xor366.i
  store i32 %xor367.i, i32* %l.i, align 4
  %289 = load i32, i32* %l.i, align 4
  %290 = load i32*, i32** %s.i, align 8
  %arrayidx368.i = getelementptr inbounds i32, i32* %290, i64 14
  %291 = load i32, i32* %arrayidx368.i, align 4
  %xor369.i = xor i32 %289, %291
  store i32 %xor369.i, i32* %u.i, align 4
  %292 = load i32, i32* %l.i, align 4
  %293 = load i32*, i32** %s.i, align 8
  %arrayidx370.i = getelementptr inbounds i32, i32* %293, i64 15
  %294 = load i32, i32* %arrayidx370.i, align 4
  %xor371.i = xor i32 %292, %294
  store i32 %xor371.i, i32* %t.i, align 4
  %295 = load i32, i32* %t.i, align 4
  %296 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %295) #5, !srcloc !11
  store i32 %296, i32* %ret372.i, align 4
  %297 = load i32, i32* %ret372.i, align 4
  store i32 %297, i32* %tmp373.i, align 4
  %298 = load i32, i32* %tmp373.i, align 4
  store i32 %298, i32* %t.i, align 4
  %299 = load i32, i32* %u.i, align 4
  %shr374.i = lshr i32 %299, 2
  %and375.i = and i32 %shr374.i, 63
  %idxprom376.i = zext i32 %and375.i to i64
  %arrayidx377.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i
  %300 = load i32, i32* %arrayidx377.i, align 4
  %301 = load i32, i32* %u.i, align 4
  %shr378.i = lshr i32 %301, 10
  %and379.i = and i32 %shr378.i, 63
  %idxprom380.i = zext i32 %and379.i to i64
  %arrayidx381.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i
  %302 = load i32, i32* %arrayidx381.i, align 4
  %xor382.i = xor i32 %300, %302
  %303 = load i32, i32* %u.i, align 4
  %shr383.i = lshr i32 %303, 18
  %and384.i = and i32 %shr383.i, 63
  %idxprom385.i = zext i32 %and384.i to i64
  %arrayidx386.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i
  %304 = load i32, i32* %arrayidx386.i, align 4
  %xor387.i = xor i32 %xor382.i, %304
  %305 = load i32, i32* %u.i, align 4
  %shr388.i = lshr i32 %305, 26
  %idxprom390.i = zext i32 %shr388.i to i64
  %arrayidx391.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i
  %306 = load i32, i32* %arrayidx391.i, align 4
  %xor392.i = xor i32 %xor387.i, %306
  %307 = load i32, i32* %t.i, align 4
  %shr393.i = lshr i32 %307, 2
  %and394.i = and i32 %shr393.i, 63
  %idxprom395.i = zext i32 %and394.i to i64
  %arrayidx396.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i
  %308 = load i32, i32* %arrayidx396.i, align 4
  %xor397.i = xor i32 %xor392.i, %308
  %309 = load i32, i32* %t.i, align 4
  %shr398.i = lshr i32 %309, 10
  %and399.i = and i32 %shr398.i, 63
  %idxprom400.i = zext i32 %and399.i to i64
  %arrayidx401.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i
  %310 = load i32, i32* %arrayidx401.i, align 4
  %xor402.i = xor i32 %xor397.i, %310
  %311 = load i32, i32* %t.i, align 4
  %shr403.i = lshr i32 %311, 18
  %and404.i = and i32 %shr403.i, 63
  %idxprom405.i = zext i32 %and404.i to i64
  %arrayidx406.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i
  %312 = load i32, i32* %arrayidx406.i, align 4
  %xor407.i = xor i32 %xor402.i, %312
  %313 = load i32, i32* %t.i, align 4
  %shr408.i = lshr i32 %313, 26
  %idxprom410.i = zext i32 %shr408.i to i64
  %arrayidx411.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i
  %314 = load i32, i32* %arrayidx411.i, align 4
  %xor412.i = xor i32 %xor407.i, %314
  %315 = load i32, i32* %r.i, align 4
  %xor413.i = xor i32 %315, %xor412.i
  store i32 %xor413.i, i32* %r.i, align 4
  %316 = load i32, i32* %r.i, align 4
  %317 = load i32*, i32** %s.i, align 8
  %arrayidx414.i = getelementptr inbounds i32, i32* %317, i64 16
  %318 = load i32, i32* %arrayidx414.i, align 4
  %xor415.i = xor i32 %316, %318
  store i32 %xor415.i, i32* %u.i, align 4
  %319 = load i32, i32* %r.i, align 4
  %320 = load i32*, i32** %s.i, align 8
  %arrayidx416.i = getelementptr inbounds i32, i32* %320, i64 17
  %321 = load i32, i32* %arrayidx416.i, align 4
  %xor417.i = xor i32 %319, %321
  store i32 %xor417.i, i32* %t.i, align 4
  %322 = load i32, i32* %t.i, align 4
  %323 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %322) #5, !srcloc !12
  store i32 %323, i32* %ret418.i, align 4
  %324 = load i32, i32* %ret418.i, align 4
  store i32 %324, i32* %tmp419.i, align 4
  %325 = load i32, i32* %tmp419.i, align 4
  store i32 %325, i32* %t.i, align 4
  %326 = load i32, i32* %u.i, align 4
  %shr420.i = lshr i32 %326, 2
  %and421.i = and i32 %shr420.i, 63
  %idxprom422.i = zext i32 %and421.i to i64
  %arrayidx423.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i
  %327 = load i32, i32* %arrayidx423.i, align 4
  %328 = load i32, i32* %u.i, align 4
  %shr424.i = lshr i32 %328, 10
  %and425.i = and i32 %shr424.i, 63
  %idxprom426.i = zext i32 %and425.i to i64
  %arrayidx427.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i
  %329 = load i32, i32* %arrayidx427.i, align 4
  %xor428.i = xor i32 %327, %329
  %330 = load i32, i32* %u.i, align 4
  %shr429.i = lshr i32 %330, 18
  %and430.i = and i32 %shr429.i, 63
  %idxprom431.i = zext i32 %and430.i to i64
  %arrayidx432.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i
  %331 = load i32, i32* %arrayidx432.i, align 4
  %xor433.i = xor i32 %xor428.i, %331
  %332 = load i32, i32* %u.i, align 4
  %shr434.i = lshr i32 %332, 26
  %idxprom436.i = zext i32 %shr434.i to i64
  %arrayidx437.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i
  %333 = load i32, i32* %arrayidx437.i, align 4
  %xor438.i = xor i32 %xor433.i, %333
  %334 = load i32, i32* %t.i, align 4
  %shr439.i = lshr i32 %334, 2
  %and440.i = and i32 %shr439.i, 63
  %idxprom441.i = zext i32 %and440.i to i64
  %arrayidx442.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i
  %335 = load i32, i32* %arrayidx442.i, align 4
  %xor443.i = xor i32 %xor438.i, %335
  %336 = load i32, i32* %t.i, align 4
  %shr444.i = lshr i32 %336, 10
  %and445.i = and i32 %shr444.i, 63
  %idxprom446.i = zext i32 %and445.i to i64
  %arrayidx447.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i
  %337 = load i32, i32* %arrayidx447.i, align 4
  %xor448.i = xor i32 %xor443.i, %337
  %338 = load i32, i32* %t.i, align 4
  %shr449.i = lshr i32 %338, 18
  %and450.i = and i32 %shr449.i, 63
  %idxprom451.i = zext i32 %and450.i to i64
  %arrayidx452.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i
  %339 = load i32, i32* %arrayidx452.i, align 4
  %xor453.i = xor i32 %xor448.i, %339
  %340 = load i32, i32* %t.i, align 4
  %shr454.i = lshr i32 %340, 26
  %idxprom456.i = zext i32 %shr454.i to i64
  %arrayidx457.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i
  %341 = load i32, i32* %arrayidx457.i, align 4
  %xor458.i = xor i32 %xor453.i, %341
  %342 = load i32, i32* %l.i, align 4
  %xor459.i = xor i32 %342, %xor458.i
  store i32 %xor459.i, i32* %l.i, align 4
  %343 = load i32, i32* %l.i, align 4
  %344 = load i32*, i32** %s.i, align 8
  %arrayidx460.i = getelementptr inbounds i32, i32* %344, i64 18
  %345 = load i32, i32* %arrayidx460.i, align 4
  %xor461.i = xor i32 %343, %345
  store i32 %xor461.i, i32* %u.i, align 4
  %346 = load i32, i32* %l.i, align 4
  %347 = load i32*, i32** %s.i, align 8
  %arrayidx462.i = getelementptr inbounds i32, i32* %347, i64 19
  %348 = load i32, i32* %arrayidx462.i, align 4
  %xor463.i = xor i32 %346, %348
  store i32 %xor463.i, i32* %t.i, align 4
  %349 = load i32, i32* %t.i, align 4
  %350 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %349) #5, !srcloc !13
  store i32 %350, i32* %ret464.i, align 4
  %351 = load i32, i32* %ret464.i, align 4
  store i32 %351, i32* %tmp465.i, align 4
  %352 = load i32, i32* %tmp465.i, align 4
  store i32 %352, i32* %t.i, align 4
  %353 = load i32, i32* %u.i, align 4
  %shr466.i = lshr i32 %353, 2
  %and467.i = and i32 %shr466.i, 63
  %idxprom468.i = zext i32 %and467.i to i64
  %arrayidx469.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i
  %354 = load i32, i32* %arrayidx469.i, align 4
  %355 = load i32, i32* %u.i, align 4
  %shr470.i = lshr i32 %355, 10
  %and471.i = and i32 %shr470.i, 63
  %idxprom472.i = zext i32 %and471.i to i64
  %arrayidx473.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i
  %356 = load i32, i32* %arrayidx473.i, align 4
  %xor474.i = xor i32 %354, %356
  %357 = load i32, i32* %u.i, align 4
  %shr475.i = lshr i32 %357, 18
  %and476.i = and i32 %shr475.i, 63
  %idxprom477.i = zext i32 %and476.i to i64
  %arrayidx478.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i
  %358 = load i32, i32* %arrayidx478.i, align 4
  %xor479.i = xor i32 %xor474.i, %358
  %359 = load i32, i32* %u.i, align 4
  %shr480.i = lshr i32 %359, 26
  %idxprom482.i = zext i32 %shr480.i to i64
  %arrayidx483.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i
  %360 = load i32, i32* %arrayidx483.i, align 4
  %xor484.i = xor i32 %xor479.i, %360
  %361 = load i32, i32* %t.i, align 4
  %shr485.i = lshr i32 %361, 2
  %and486.i = and i32 %shr485.i, 63
  %idxprom487.i = zext i32 %and486.i to i64
  %arrayidx488.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i
  %362 = load i32, i32* %arrayidx488.i, align 4
  %xor489.i = xor i32 %xor484.i, %362
  %363 = load i32, i32* %t.i, align 4
  %shr490.i = lshr i32 %363, 10
  %and491.i = and i32 %shr490.i, 63
  %idxprom492.i = zext i32 %and491.i to i64
  %arrayidx493.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i
  %364 = load i32, i32* %arrayidx493.i, align 4
  %xor494.i = xor i32 %xor489.i, %364
  %365 = load i32, i32* %t.i, align 4
  %shr495.i = lshr i32 %365, 18
  %and496.i = and i32 %shr495.i, 63
  %idxprom497.i = zext i32 %and496.i to i64
  %arrayidx498.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i
  %366 = load i32, i32* %arrayidx498.i, align 4
  %xor499.i = xor i32 %xor494.i, %366
  %367 = load i32, i32* %t.i, align 4
  %shr500.i = lshr i32 %367, 26
  %idxprom502.i = zext i32 %shr500.i to i64
  %arrayidx503.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i
  %368 = load i32, i32* %arrayidx503.i, align 4
  %xor504.i = xor i32 %xor499.i, %368
  %369 = load i32, i32* %r.i, align 4
  %xor505.i = xor i32 %369, %xor504.i
  store i32 %xor505.i, i32* %r.i, align 4
  %370 = load i32, i32* %r.i, align 4
  %371 = load i32*, i32** %s.i, align 8
  %arrayidx506.i = getelementptr inbounds i32, i32* %371, i64 20
  %372 = load i32, i32* %arrayidx506.i, align 4
  %xor507.i = xor i32 %370, %372
  store i32 %xor507.i, i32* %u.i, align 4
  %373 = load i32, i32* %r.i, align 4
  %374 = load i32*, i32** %s.i, align 8
  %arrayidx508.i = getelementptr inbounds i32, i32* %374, i64 21
  %375 = load i32, i32* %arrayidx508.i, align 4
  %xor509.i = xor i32 %373, %375
  store i32 %xor509.i, i32* %t.i, align 4
  %376 = load i32, i32* %t.i, align 4
  %377 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %376) #5, !srcloc !14
  store i32 %377, i32* %ret510.i, align 4
  %378 = load i32, i32* %ret510.i, align 4
  store i32 %378, i32* %tmp511.i, align 4
  %379 = load i32, i32* %tmp511.i, align 4
  store i32 %379, i32* %t.i, align 4
  %380 = load i32, i32* %u.i, align 4
  %shr512.i = lshr i32 %380, 2
  %and513.i = and i32 %shr512.i, 63
  %idxprom514.i = zext i32 %and513.i to i64
  %arrayidx515.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i
  %381 = load i32, i32* %arrayidx515.i, align 4
  %382 = load i32, i32* %u.i, align 4
  %shr516.i = lshr i32 %382, 10
  %and517.i = and i32 %shr516.i, 63
  %idxprom518.i = zext i32 %and517.i to i64
  %arrayidx519.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i
  %383 = load i32, i32* %arrayidx519.i, align 4
  %xor520.i = xor i32 %381, %383
  %384 = load i32, i32* %u.i, align 4
  %shr521.i = lshr i32 %384, 18
  %and522.i = and i32 %shr521.i, 63
  %idxprom523.i = zext i32 %and522.i to i64
  %arrayidx524.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i
  %385 = load i32, i32* %arrayidx524.i, align 4
  %xor525.i = xor i32 %xor520.i, %385
  %386 = load i32, i32* %u.i, align 4
  %shr526.i = lshr i32 %386, 26
  %idxprom528.i = zext i32 %shr526.i to i64
  %arrayidx529.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i
  %387 = load i32, i32* %arrayidx529.i, align 4
  %xor530.i = xor i32 %xor525.i, %387
  %388 = load i32, i32* %t.i, align 4
  %shr531.i = lshr i32 %388, 2
  %and532.i = and i32 %shr531.i, 63
  %idxprom533.i = zext i32 %and532.i to i64
  %arrayidx534.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i
  %389 = load i32, i32* %arrayidx534.i, align 4
  %xor535.i = xor i32 %xor530.i, %389
  %390 = load i32, i32* %t.i, align 4
  %shr536.i = lshr i32 %390, 10
  %and537.i = and i32 %shr536.i, 63
  %idxprom538.i = zext i32 %and537.i to i64
  %arrayidx539.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i
  %391 = load i32, i32* %arrayidx539.i, align 4
  %xor540.i = xor i32 %xor535.i, %391
  %392 = load i32, i32* %t.i, align 4
  %shr541.i = lshr i32 %392, 18
  %and542.i = and i32 %shr541.i, 63
  %idxprom543.i = zext i32 %and542.i to i64
  %arrayidx544.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i
  %393 = load i32, i32* %arrayidx544.i, align 4
  %xor545.i = xor i32 %xor540.i, %393
  %394 = load i32, i32* %t.i, align 4
  %shr546.i = lshr i32 %394, 26
  %idxprom548.i = zext i32 %shr546.i to i64
  %arrayidx549.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i
  %395 = load i32, i32* %arrayidx549.i, align 4
  %xor550.i = xor i32 %xor545.i, %395
  %396 = load i32, i32* %l.i, align 4
  %xor551.i = xor i32 %396, %xor550.i
  store i32 %xor551.i, i32* %l.i, align 4
  %397 = load i32, i32* %l.i, align 4
  %398 = load i32*, i32** %s.i, align 8
  %arrayidx552.i = getelementptr inbounds i32, i32* %398, i64 22
  %399 = load i32, i32* %arrayidx552.i, align 4
  %xor553.i = xor i32 %397, %399
  store i32 %xor553.i, i32* %u.i, align 4
  %400 = load i32, i32* %l.i, align 4
  %401 = load i32*, i32** %s.i, align 8
  %arrayidx554.i = getelementptr inbounds i32, i32* %401, i64 23
  %402 = load i32, i32* %arrayidx554.i, align 4
  %xor555.i = xor i32 %400, %402
  store i32 %xor555.i, i32* %t.i, align 4
  %403 = load i32, i32* %t.i, align 4
  %404 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %403) #5, !srcloc !15
  store i32 %404, i32* %ret556.i, align 4
  %405 = load i32, i32* %ret556.i, align 4
  store i32 %405, i32* %tmp557.i, align 4
  %406 = load i32, i32* %tmp557.i, align 4
  store i32 %406, i32* %t.i, align 4
  %407 = load i32, i32* %u.i, align 4
  %shr558.i = lshr i32 %407, 2
  %and559.i = and i32 %shr558.i, 63
  %idxprom560.i = zext i32 %and559.i to i64
  %arrayidx561.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i
  %408 = load i32, i32* %arrayidx561.i, align 4
  %409 = load i32, i32* %u.i, align 4
  %shr562.i = lshr i32 %409, 10
  %and563.i = and i32 %shr562.i, 63
  %idxprom564.i = zext i32 %and563.i to i64
  %arrayidx565.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i
  %410 = load i32, i32* %arrayidx565.i, align 4
  %xor566.i = xor i32 %408, %410
  %411 = load i32, i32* %u.i, align 4
  %shr567.i = lshr i32 %411, 18
  %and568.i = and i32 %shr567.i, 63
  %idxprom569.i = zext i32 %and568.i to i64
  %arrayidx570.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i
  %412 = load i32, i32* %arrayidx570.i, align 4
  %xor571.i = xor i32 %xor566.i, %412
  %413 = load i32, i32* %u.i, align 4
  %shr572.i = lshr i32 %413, 26
  %idxprom574.i = zext i32 %shr572.i to i64
  %arrayidx575.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i
  %414 = load i32, i32* %arrayidx575.i, align 4
  %xor576.i = xor i32 %xor571.i, %414
  %415 = load i32, i32* %t.i, align 4
  %shr577.i = lshr i32 %415, 2
  %and578.i = and i32 %shr577.i, 63
  %idxprom579.i = zext i32 %and578.i to i64
  %arrayidx580.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i
  %416 = load i32, i32* %arrayidx580.i, align 4
  %xor581.i = xor i32 %xor576.i, %416
  %417 = load i32, i32* %t.i, align 4
  %shr582.i = lshr i32 %417, 10
  %and583.i = and i32 %shr582.i, 63
  %idxprom584.i = zext i32 %and583.i to i64
  %arrayidx585.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i
  %418 = load i32, i32* %arrayidx585.i, align 4
  %xor586.i = xor i32 %xor581.i, %418
  %419 = load i32, i32* %t.i, align 4
  %shr587.i = lshr i32 %419, 18
  %and588.i = and i32 %shr587.i, 63
  %idxprom589.i = zext i32 %and588.i to i64
  %arrayidx590.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i
  %420 = load i32, i32* %arrayidx590.i, align 4
  %xor591.i = xor i32 %xor586.i, %420
  %421 = load i32, i32* %t.i, align 4
  %shr592.i = lshr i32 %421, 26
  %idxprom594.i = zext i32 %shr592.i to i64
  %arrayidx595.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i
  %422 = load i32, i32* %arrayidx595.i, align 4
  %xor596.i = xor i32 %xor591.i, %422
  %423 = load i32, i32* %r.i, align 4
  %xor597.i = xor i32 %423, %xor596.i
  store i32 %xor597.i, i32* %r.i, align 4
  %424 = load i32, i32* %r.i, align 4
  %425 = load i32*, i32** %s.i, align 8
  %arrayidx598.i = getelementptr inbounds i32, i32* %425, i64 24
  %426 = load i32, i32* %arrayidx598.i, align 4
  %xor599.i = xor i32 %424, %426
  store i32 %xor599.i, i32* %u.i, align 4
  %427 = load i32, i32* %r.i, align 4
  %428 = load i32*, i32** %s.i, align 8
  %arrayidx600.i = getelementptr inbounds i32, i32* %428, i64 25
  %429 = load i32, i32* %arrayidx600.i, align 4
  %xor601.i = xor i32 %427, %429
  store i32 %xor601.i, i32* %t.i, align 4
  %430 = load i32, i32* %t.i, align 4
  %431 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %430) #5, !srcloc !16
  store i32 %431, i32* %ret602.i, align 4
  %432 = load i32, i32* %ret602.i, align 4
  store i32 %432, i32* %tmp603.i, align 4
  %433 = load i32, i32* %tmp603.i, align 4
  store i32 %433, i32* %t.i, align 4
  %434 = load i32, i32* %u.i, align 4
  %shr604.i = lshr i32 %434, 2
  %and605.i = and i32 %shr604.i, 63
  %idxprom606.i = zext i32 %and605.i to i64
  %arrayidx607.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i
  %435 = load i32, i32* %arrayidx607.i, align 4
  %436 = load i32, i32* %u.i, align 4
  %shr608.i = lshr i32 %436, 10
  %and609.i = and i32 %shr608.i, 63
  %idxprom610.i = zext i32 %and609.i to i64
  %arrayidx611.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i
  %437 = load i32, i32* %arrayidx611.i, align 4
  %xor612.i = xor i32 %435, %437
  %438 = load i32, i32* %u.i, align 4
  %shr613.i = lshr i32 %438, 18
  %and614.i = and i32 %shr613.i, 63
  %idxprom615.i = zext i32 %and614.i to i64
  %arrayidx616.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i
  %439 = load i32, i32* %arrayidx616.i, align 4
  %xor617.i = xor i32 %xor612.i, %439
  %440 = load i32, i32* %u.i, align 4
  %shr618.i = lshr i32 %440, 26
  %idxprom620.i = zext i32 %shr618.i to i64
  %arrayidx621.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i
  %441 = load i32, i32* %arrayidx621.i, align 4
  %xor622.i = xor i32 %xor617.i, %441
  %442 = load i32, i32* %t.i, align 4
  %shr623.i = lshr i32 %442, 2
  %and624.i = and i32 %shr623.i, 63
  %idxprom625.i = zext i32 %and624.i to i64
  %arrayidx626.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i
  %443 = load i32, i32* %arrayidx626.i, align 4
  %xor627.i = xor i32 %xor622.i, %443
  %444 = load i32, i32* %t.i, align 4
  %shr628.i = lshr i32 %444, 10
  %and629.i = and i32 %shr628.i, 63
  %idxprom630.i = zext i32 %and629.i to i64
  %arrayidx631.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i
  %445 = load i32, i32* %arrayidx631.i, align 4
  %xor632.i = xor i32 %xor627.i, %445
  %446 = load i32, i32* %t.i, align 4
  %shr633.i = lshr i32 %446, 18
  %and634.i = and i32 %shr633.i, 63
  %idxprom635.i = zext i32 %and634.i to i64
  %arrayidx636.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i
  %447 = load i32, i32* %arrayidx636.i, align 4
  %xor637.i = xor i32 %xor632.i, %447
  %448 = load i32, i32* %t.i, align 4
  %shr638.i = lshr i32 %448, 26
  %idxprom640.i = zext i32 %shr638.i to i64
  %arrayidx641.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i
  %449 = load i32, i32* %arrayidx641.i, align 4
  %xor642.i = xor i32 %xor637.i, %449
  %450 = load i32, i32* %l.i, align 4
  %xor643.i = xor i32 %450, %xor642.i
  store i32 %xor643.i, i32* %l.i, align 4
  %451 = load i32, i32* %l.i, align 4
  %452 = load i32*, i32** %s.i, align 8
  %arrayidx644.i = getelementptr inbounds i32, i32* %452, i64 26
  %453 = load i32, i32* %arrayidx644.i, align 4
  %xor645.i = xor i32 %451, %453
  store i32 %xor645.i, i32* %u.i, align 4
  %454 = load i32, i32* %l.i, align 4
  %455 = load i32*, i32** %s.i, align 8
  %arrayidx646.i = getelementptr inbounds i32, i32* %455, i64 27
  %456 = load i32, i32* %arrayidx646.i, align 4
  %xor647.i = xor i32 %454, %456
  store i32 %xor647.i, i32* %t.i, align 4
  %457 = load i32, i32* %t.i, align 4
  %458 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %457) #5, !srcloc !17
  store i32 %458, i32* %ret648.i, align 4
  %459 = load i32, i32* %ret648.i, align 4
  store i32 %459, i32* %tmp649.i, align 4
  %460 = load i32, i32* %tmp649.i, align 4
  store i32 %460, i32* %t.i, align 4
  %461 = load i32, i32* %u.i, align 4
  %shr650.i = lshr i32 %461, 2
  %and651.i = and i32 %shr650.i, 63
  %idxprom652.i = zext i32 %and651.i to i64
  %arrayidx653.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i
  %462 = load i32, i32* %arrayidx653.i, align 4
  %463 = load i32, i32* %u.i, align 4
  %shr654.i = lshr i32 %463, 10
  %and655.i = and i32 %shr654.i, 63
  %idxprom656.i = zext i32 %and655.i to i64
  %arrayidx657.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i
  %464 = load i32, i32* %arrayidx657.i, align 4
  %xor658.i = xor i32 %462, %464
  %465 = load i32, i32* %u.i, align 4
  %shr659.i = lshr i32 %465, 18
  %and660.i = and i32 %shr659.i, 63
  %idxprom661.i = zext i32 %and660.i to i64
  %arrayidx662.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i
  %466 = load i32, i32* %arrayidx662.i, align 4
  %xor663.i = xor i32 %xor658.i, %466
  %467 = load i32, i32* %u.i, align 4
  %shr664.i = lshr i32 %467, 26
  %idxprom666.i = zext i32 %shr664.i to i64
  %arrayidx667.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i
  %468 = load i32, i32* %arrayidx667.i, align 4
  %xor668.i = xor i32 %xor663.i, %468
  %469 = load i32, i32* %t.i, align 4
  %shr669.i = lshr i32 %469, 2
  %and670.i = and i32 %shr669.i, 63
  %idxprom671.i = zext i32 %and670.i to i64
  %arrayidx672.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i
  %470 = load i32, i32* %arrayidx672.i, align 4
  %xor673.i = xor i32 %xor668.i, %470
  %471 = load i32, i32* %t.i, align 4
  %shr674.i = lshr i32 %471, 10
  %and675.i = and i32 %shr674.i, 63
  %idxprom676.i = zext i32 %and675.i to i64
  %arrayidx677.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i
  %472 = load i32, i32* %arrayidx677.i, align 4
  %xor678.i = xor i32 %xor673.i, %472
  %473 = load i32, i32* %t.i, align 4
  %shr679.i = lshr i32 %473, 18
  %and680.i = and i32 %shr679.i, 63
  %idxprom681.i = zext i32 %and680.i to i64
  %arrayidx682.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i
  %474 = load i32, i32* %arrayidx682.i, align 4
  %xor683.i = xor i32 %xor678.i, %474
  %475 = load i32, i32* %t.i, align 4
  %shr684.i = lshr i32 %475, 26
  %idxprom686.i = zext i32 %shr684.i to i64
  %arrayidx687.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i
  %476 = load i32, i32* %arrayidx687.i, align 4
  %xor688.i = xor i32 %xor683.i, %476
  %477 = load i32, i32* %r.i, align 4
  %xor689.i = xor i32 %477, %xor688.i
  store i32 %xor689.i, i32* %r.i, align 4
  %478 = load i32, i32* %r.i, align 4
  %479 = load i32*, i32** %s.i, align 8
  %arrayidx690.i = getelementptr inbounds i32, i32* %479, i64 28
  %480 = load i32, i32* %arrayidx690.i, align 4
  %xor691.i = xor i32 %478, %480
  store i32 %xor691.i, i32* %u.i, align 4
  %481 = load i32, i32* %r.i, align 4
  %482 = load i32*, i32** %s.i, align 8
  %arrayidx692.i = getelementptr inbounds i32, i32* %482, i64 29
  %483 = load i32, i32* %arrayidx692.i, align 4
  %xor693.i = xor i32 %481, %483
  store i32 %xor693.i, i32* %t.i, align 4
  %484 = load i32, i32* %t.i, align 4
  %485 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %484) #5, !srcloc !18
  store i32 %485, i32* %ret694.i, align 4
  %486 = load i32, i32* %ret694.i, align 4
  store i32 %486, i32* %tmp695.i, align 4
  %487 = load i32, i32* %tmp695.i, align 4
  store i32 %487, i32* %t.i, align 4
  %488 = load i32, i32* %u.i, align 4
  %shr696.i = lshr i32 %488, 2
  %and697.i = and i32 %shr696.i, 63
  %idxprom698.i = zext i32 %and697.i to i64
  %arrayidx699.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i
  %489 = load i32, i32* %arrayidx699.i, align 4
  %490 = load i32, i32* %u.i, align 4
  %shr700.i = lshr i32 %490, 10
  %and701.i = and i32 %shr700.i, 63
  %idxprom702.i = zext i32 %and701.i to i64
  %arrayidx703.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i
  %491 = load i32, i32* %arrayidx703.i, align 4
  %xor704.i = xor i32 %489, %491
  %492 = load i32, i32* %u.i, align 4
  %shr705.i = lshr i32 %492, 18
  %and706.i = and i32 %shr705.i, 63
  %idxprom707.i = zext i32 %and706.i to i64
  %arrayidx708.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i
  %493 = load i32, i32* %arrayidx708.i, align 4
  %xor709.i = xor i32 %xor704.i, %493
  %494 = load i32, i32* %u.i, align 4
  %shr710.i = lshr i32 %494, 26
  %idxprom712.i = zext i32 %shr710.i to i64
  %arrayidx713.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i
  %495 = load i32, i32* %arrayidx713.i, align 4
  %xor714.i = xor i32 %xor709.i, %495
  %496 = load i32, i32* %t.i, align 4
  %shr715.i = lshr i32 %496, 2
  %and716.i = and i32 %shr715.i, 63
  %idxprom717.i = zext i32 %and716.i to i64
  %arrayidx718.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i
  %497 = load i32, i32* %arrayidx718.i, align 4
  %xor719.i = xor i32 %xor714.i, %497
  %498 = load i32, i32* %t.i, align 4
  %shr720.i = lshr i32 %498, 10
  %and721.i = and i32 %shr720.i, 63
  %idxprom722.i = zext i32 %and721.i to i64
  %arrayidx723.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i
  %499 = load i32, i32* %arrayidx723.i, align 4
  %xor724.i = xor i32 %xor719.i, %499
  %500 = load i32, i32* %t.i, align 4
  %shr725.i = lshr i32 %500, 18
  %and726.i = and i32 %shr725.i, 63
  %idxprom727.i = zext i32 %and726.i to i64
  %arrayidx728.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i
  %501 = load i32, i32* %arrayidx728.i, align 4
  %xor729.i = xor i32 %xor724.i, %501
  %502 = load i32, i32* %t.i, align 4
  %shr730.i = lshr i32 %502, 26
  %idxprom732.i = zext i32 %shr730.i to i64
  %arrayidx733.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i
  %503 = load i32, i32* %arrayidx733.i, align 4
  %xor734.i = xor i32 %xor729.i, %503
  %504 = load i32, i32* %l.i, align 4
  %xor735.i = xor i32 %504, %xor734.i
  store i32 %xor735.i, i32* %l.i, align 4
  %505 = load i32, i32* %l.i, align 4
  %506 = load i32*, i32** %s.i, align 8
  %arrayidx736.i = getelementptr inbounds i32, i32* %506, i64 30
  %507 = load i32, i32* %arrayidx736.i, align 4
  %xor737.i = xor i32 %505, %507
  store i32 %xor737.i, i32* %u.i, align 4
  %508 = load i32, i32* %l.i, align 4
  %509 = load i32*, i32** %s.i, align 8
  %arrayidx738.i = getelementptr inbounds i32, i32* %509, i64 31
  %510 = load i32, i32* %arrayidx738.i, align 4
  %xor739.i = xor i32 %508, %510
  store i32 %xor739.i, i32* %t.i, align 4
  %511 = load i32, i32* %t.i, align 4
  %512 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %511) #5, !srcloc !19
  store i32 %512, i32* %ret740.i, align 4
  %513 = load i32, i32* %ret740.i, align 4
  store i32 %513, i32* %tmp741.i, align 4
  %514 = load i32, i32* %tmp741.i, align 4
  store i32 %514, i32* %t.i, align 4
  %515 = load i32, i32* %u.i, align 4
  %shr742.i = lshr i32 %515, 2
  %and743.i = and i32 %shr742.i, 63
  %idxprom744.i = zext i32 %and743.i to i64
  %arrayidx745.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i
  %516 = load i32, i32* %arrayidx745.i, align 4
  %517 = load i32, i32* %u.i, align 4
  %shr746.i = lshr i32 %517, 10
  %and747.i = and i32 %shr746.i, 63
  %idxprom748.i = zext i32 %and747.i to i64
  %arrayidx749.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i
  %518 = load i32, i32* %arrayidx749.i, align 4
  %xor750.i = xor i32 %516, %518
  %519 = load i32, i32* %u.i, align 4
  %shr751.i = lshr i32 %519, 18
  %and752.i = and i32 %shr751.i, 63
  %idxprom753.i = zext i32 %and752.i to i64
  %arrayidx754.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i
  %520 = load i32, i32* %arrayidx754.i, align 4
  %xor755.i = xor i32 %xor750.i, %520
  %521 = load i32, i32* %u.i, align 4
  %shr756.i = lshr i32 %521, 26
  %idxprom758.i = zext i32 %shr756.i to i64
  %arrayidx759.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i
  %522 = load i32, i32* %arrayidx759.i, align 4
  %xor760.i = xor i32 %xor755.i, %522
  %523 = load i32, i32* %t.i, align 4
  %shr761.i = lshr i32 %523, 2
  %and762.i = and i32 %shr761.i, 63
  %idxprom763.i = zext i32 %and762.i to i64
  %arrayidx764.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i
  %524 = load i32, i32* %arrayidx764.i, align 4
  %xor765.i = xor i32 %xor760.i, %524
  %525 = load i32, i32* %t.i, align 4
  %shr766.i = lshr i32 %525, 10
  %and767.i = and i32 %shr766.i, 63
  %idxprom768.i = zext i32 %and767.i to i64
  %arrayidx769.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i
  %526 = load i32, i32* %arrayidx769.i, align 4
  %xor770.i = xor i32 %xor765.i, %526
  %527 = load i32, i32* %t.i, align 4
  %shr771.i = lshr i32 %527, 18
  %and772.i = and i32 %shr771.i, 63
  %idxprom773.i = zext i32 %and772.i to i64
  %arrayidx774.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i
  %528 = load i32, i32* %arrayidx774.i, align 4
  %xor775.i = xor i32 %xor770.i, %528
  %529 = load i32, i32* %t.i, align 4
  %shr776.i = lshr i32 %529, 26
  %idxprom778.i = zext i32 %shr776.i to i64
  %arrayidx779.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i
  %530 = load i32, i32* %arrayidx779.i, align 4
  %xor780.i = xor i32 %xor775.i, %530
  %531 = load i32, i32* %r.i, align 4
  %xor781.i = xor i32 %531, %xor780.i
  store i32 %xor781.i, i32* %r.i, align 4
  br label %DES_encrypt1.exit

if.else.i:                                        ; preds = %for.body
  %532 = load i32, i32* %r.i, align 4
  %533 = load i32*, i32** %s.i, align 8
  %arrayidx782.i = getelementptr inbounds i32, i32* %533, i64 30
  %534 = load i32, i32* %arrayidx782.i, align 4
  %xor783.i = xor i32 %532, %534
  store i32 %xor783.i, i32* %u.i, align 4
  %535 = load i32, i32* %r.i, align 4
  %536 = load i32*, i32** %s.i, align 8
  %arrayidx784.i = getelementptr inbounds i32, i32* %536, i64 31
  %537 = load i32, i32* %arrayidx784.i, align 4
  %xor785.i = xor i32 %535, %537
  store i32 %xor785.i, i32* %t.i, align 4
  %538 = load i32, i32* %t.i, align 4
  %539 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %538) #5, !srcloc !20
  store i32 %539, i32* %ret786.i, align 4
  %540 = load i32, i32* %ret786.i, align 4
  store i32 %540, i32* %tmp787.i, align 4
  %541 = load i32, i32* %tmp787.i, align 4
  store i32 %541, i32* %t.i, align 4
  %542 = load i32, i32* %u.i, align 4
  %shr788.i = lshr i32 %542, 2
  %and789.i = and i32 %shr788.i, 63
  %idxprom790.i = zext i32 %and789.i to i64
  %arrayidx791.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i
  %543 = load i32, i32* %arrayidx791.i, align 4
  %544 = load i32, i32* %u.i, align 4
  %shr792.i = lshr i32 %544, 10
  %and793.i = and i32 %shr792.i, 63
  %idxprom794.i = zext i32 %and793.i to i64
  %arrayidx795.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i
  %545 = load i32, i32* %arrayidx795.i, align 4
  %xor796.i = xor i32 %543, %545
  %546 = load i32, i32* %u.i, align 4
  %shr797.i = lshr i32 %546, 18
  %and798.i = and i32 %shr797.i, 63
  %idxprom799.i = zext i32 %and798.i to i64
  %arrayidx800.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i
  %547 = load i32, i32* %arrayidx800.i, align 4
  %xor801.i = xor i32 %xor796.i, %547
  %548 = load i32, i32* %u.i, align 4
  %shr802.i = lshr i32 %548, 26
  %idxprom804.i = zext i32 %shr802.i to i64
  %arrayidx805.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i
  %549 = load i32, i32* %arrayidx805.i, align 4
  %xor806.i = xor i32 %xor801.i, %549
  %550 = load i32, i32* %t.i, align 4
  %shr807.i = lshr i32 %550, 2
  %and808.i = and i32 %shr807.i, 63
  %idxprom809.i = zext i32 %and808.i to i64
  %arrayidx810.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i
  %551 = load i32, i32* %arrayidx810.i, align 4
  %xor811.i = xor i32 %xor806.i, %551
  %552 = load i32, i32* %t.i, align 4
  %shr812.i = lshr i32 %552, 10
  %and813.i = and i32 %shr812.i, 63
  %idxprom814.i = zext i32 %and813.i to i64
  %arrayidx815.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i
  %553 = load i32, i32* %arrayidx815.i, align 4
  %xor816.i = xor i32 %xor811.i, %553
  %554 = load i32, i32* %t.i, align 4
  %shr817.i = lshr i32 %554, 18
  %and818.i = and i32 %shr817.i, 63
  %idxprom819.i = zext i32 %and818.i to i64
  %arrayidx820.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i
  %555 = load i32, i32* %arrayidx820.i, align 4
  %xor821.i = xor i32 %xor816.i, %555
  %556 = load i32, i32* %t.i, align 4
  %shr822.i = lshr i32 %556, 26
  %idxprom824.i = zext i32 %shr822.i to i64
  %arrayidx825.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i
  %557 = load i32, i32* %arrayidx825.i, align 4
  %xor826.i = xor i32 %xor821.i, %557
  %558 = load i32, i32* %l.i, align 4
  %xor827.i = xor i32 %558, %xor826.i
  store i32 %xor827.i, i32* %l.i, align 4
  %559 = load i32, i32* %l.i, align 4
  %560 = load i32*, i32** %s.i, align 8
  %arrayidx828.i = getelementptr inbounds i32, i32* %560, i64 28
  %561 = load i32, i32* %arrayidx828.i, align 4
  %xor829.i = xor i32 %559, %561
  store i32 %xor829.i, i32* %u.i, align 4
  %562 = load i32, i32* %l.i, align 4
  %563 = load i32*, i32** %s.i, align 8
  %arrayidx830.i = getelementptr inbounds i32, i32* %563, i64 29
  %564 = load i32, i32* %arrayidx830.i, align 4
  %xor831.i = xor i32 %562, %564
  store i32 %xor831.i, i32* %t.i, align 4
  %565 = load i32, i32* %t.i, align 4
  %566 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %565) #5, !srcloc !21
  store i32 %566, i32* %ret832.i, align 4
  %567 = load i32, i32* %ret832.i, align 4
  store i32 %567, i32* %tmp833.i, align 4
  %568 = load i32, i32* %tmp833.i, align 4
  store i32 %568, i32* %t.i, align 4
  %569 = load i32, i32* %u.i, align 4
  %shr834.i = lshr i32 %569, 2
  %and835.i = and i32 %shr834.i, 63
  %idxprom836.i = zext i32 %and835.i to i64
  %arrayidx837.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i
  %570 = load i32, i32* %arrayidx837.i, align 4
  %571 = load i32, i32* %u.i, align 4
  %shr838.i = lshr i32 %571, 10
  %and839.i = and i32 %shr838.i, 63
  %idxprom840.i = zext i32 %and839.i to i64
  %arrayidx841.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i
  %572 = load i32, i32* %arrayidx841.i, align 4
  %xor842.i = xor i32 %570, %572
  %573 = load i32, i32* %u.i, align 4
  %shr843.i = lshr i32 %573, 18
  %and844.i = and i32 %shr843.i, 63
  %idxprom845.i = zext i32 %and844.i to i64
  %arrayidx846.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i
  %574 = load i32, i32* %arrayidx846.i, align 4
  %xor847.i = xor i32 %xor842.i, %574
  %575 = load i32, i32* %u.i, align 4
  %shr848.i = lshr i32 %575, 26
  %idxprom850.i = zext i32 %shr848.i to i64
  %arrayidx851.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i
  %576 = load i32, i32* %arrayidx851.i, align 4
  %xor852.i = xor i32 %xor847.i, %576
  %577 = load i32, i32* %t.i, align 4
  %shr853.i = lshr i32 %577, 2
  %and854.i = and i32 %shr853.i, 63
  %idxprom855.i = zext i32 %and854.i to i64
  %arrayidx856.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i
  %578 = load i32, i32* %arrayidx856.i, align 4
  %xor857.i = xor i32 %xor852.i, %578
  %579 = load i32, i32* %t.i, align 4
  %shr858.i = lshr i32 %579, 10
  %and859.i = and i32 %shr858.i, 63
  %idxprom860.i = zext i32 %and859.i to i64
  %arrayidx861.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i
  %580 = load i32, i32* %arrayidx861.i, align 4
  %xor862.i = xor i32 %xor857.i, %580
  %581 = load i32, i32* %t.i, align 4
  %shr863.i = lshr i32 %581, 18
  %and864.i = and i32 %shr863.i, 63
  %idxprom865.i = zext i32 %and864.i to i64
  %arrayidx866.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i
  %582 = load i32, i32* %arrayidx866.i, align 4
  %xor867.i = xor i32 %xor862.i, %582
  %583 = load i32, i32* %t.i, align 4
  %shr868.i = lshr i32 %583, 26
  %idxprom870.i = zext i32 %shr868.i to i64
  %arrayidx871.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i
  %584 = load i32, i32* %arrayidx871.i, align 4
  %xor872.i = xor i32 %xor867.i, %584
  %585 = load i32, i32* %r.i, align 4
  %xor873.i = xor i32 %585, %xor872.i
  store i32 %xor873.i, i32* %r.i, align 4
  %586 = load i32, i32* %r.i, align 4
  %587 = load i32*, i32** %s.i, align 8
  %arrayidx874.i = getelementptr inbounds i32, i32* %587, i64 26
  %588 = load i32, i32* %arrayidx874.i, align 4
  %xor875.i = xor i32 %586, %588
  store i32 %xor875.i, i32* %u.i, align 4
  %589 = load i32, i32* %r.i, align 4
  %590 = load i32*, i32** %s.i, align 8
  %arrayidx876.i = getelementptr inbounds i32, i32* %590, i64 27
  %591 = load i32, i32* %arrayidx876.i, align 4
  %xor877.i = xor i32 %589, %591
  store i32 %xor877.i, i32* %t.i, align 4
  %592 = load i32, i32* %t.i, align 4
  %593 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %592) #5, !srcloc !22
  store i32 %593, i32* %ret878.i, align 4
  %594 = load i32, i32* %ret878.i, align 4
  store i32 %594, i32* %tmp879.i, align 4
  %595 = load i32, i32* %tmp879.i, align 4
  store i32 %595, i32* %t.i, align 4
  %596 = load i32, i32* %u.i, align 4
  %shr880.i = lshr i32 %596, 2
  %and881.i = and i32 %shr880.i, 63
  %idxprom882.i = zext i32 %and881.i to i64
  %arrayidx883.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i
  %597 = load i32, i32* %arrayidx883.i, align 4
  %598 = load i32, i32* %u.i, align 4
  %shr884.i = lshr i32 %598, 10
  %and885.i = and i32 %shr884.i, 63
  %idxprom886.i = zext i32 %and885.i to i64
  %arrayidx887.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i
  %599 = load i32, i32* %arrayidx887.i, align 4
  %xor888.i = xor i32 %597, %599
  %600 = load i32, i32* %u.i, align 4
  %shr889.i = lshr i32 %600, 18
  %and890.i = and i32 %shr889.i, 63
  %idxprom891.i = zext i32 %and890.i to i64
  %arrayidx892.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i
  %601 = load i32, i32* %arrayidx892.i, align 4
  %xor893.i = xor i32 %xor888.i, %601
  %602 = load i32, i32* %u.i, align 4
  %shr894.i = lshr i32 %602, 26
  %idxprom896.i = zext i32 %shr894.i to i64
  %arrayidx897.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i
  %603 = load i32, i32* %arrayidx897.i, align 4
  %xor898.i = xor i32 %xor893.i, %603
  %604 = load i32, i32* %t.i, align 4
  %shr899.i = lshr i32 %604, 2
  %and900.i = and i32 %shr899.i, 63
  %idxprom901.i = zext i32 %and900.i to i64
  %arrayidx902.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i
  %605 = load i32, i32* %arrayidx902.i, align 4
  %xor903.i = xor i32 %xor898.i, %605
  %606 = load i32, i32* %t.i, align 4
  %shr904.i = lshr i32 %606, 10
  %and905.i = and i32 %shr904.i, 63
  %idxprom906.i = zext i32 %and905.i to i64
  %arrayidx907.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i
  %607 = load i32, i32* %arrayidx907.i, align 4
  %xor908.i = xor i32 %xor903.i, %607
  %608 = load i32, i32* %t.i, align 4
  %shr909.i = lshr i32 %608, 18
  %and910.i = and i32 %shr909.i, 63
  %idxprom911.i = zext i32 %and910.i to i64
  %arrayidx912.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i
  %609 = load i32, i32* %arrayidx912.i, align 4
  %xor913.i = xor i32 %xor908.i, %609
  %610 = load i32, i32* %t.i, align 4
  %shr914.i = lshr i32 %610, 26
  %idxprom916.i = zext i32 %shr914.i to i64
  %arrayidx917.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i
  %611 = load i32, i32* %arrayidx917.i, align 4
  %xor918.i = xor i32 %xor913.i, %611
  %612 = load i32, i32* %l.i, align 4
  %xor919.i = xor i32 %612, %xor918.i
  store i32 %xor919.i, i32* %l.i, align 4
  %613 = load i32, i32* %l.i, align 4
  %614 = load i32*, i32** %s.i, align 8
  %arrayidx920.i = getelementptr inbounds i32, i32* %614, i64 24
  %615 = load i32, i32* %arrayidx920.i, align 4
  %xor921.i = xor i32 %613, %615
  store i32 %xor921.i, i32* %u.i, align 4
  %616 = load i32, i32* %l.i, align 4
  %617 = load i32*, i32** %s.i, align 8
  %arrayidx922.i = getelementptr inbounds i32, i32* %617, i64 25
  %618 = load i32, i32* %arrayidx922.i, align 4
  %xor923.i = xor i32 %616, %618
  store i32 %xor923.i, i32* %t.i, align 4
  %619 = load i32, i32* %t.i, align 4
  %620 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %619) #5, !srcloc !23
  store i32 %620, i32* %ret924.i, align 4
  %621 = load i32, i32* %ret924.i, align 4
  store i32 %621, i32* %tmp925.i, align 4
  %622 = load i32, i32* %tmp925.i, align 4
  store i32 %622, i32* %t.i, align 4
  %623 = load i32, i32* %u.i, align 4
  %shr926.i = lshr i32 %623, 2
  %and927.i = and i32 %shr926.i, 63
  %idxprom928.i = zext i32 %and927.i to i64
  %arrayidx929.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i
  %624 = load i32, i32* %arrayidx929.i, align 4
  %625 = load i32, i32* %u.i, align 4
  %shr930.i = lshr i32 %625, 10
  %and931.i = and i32 %shr930.i, 63
  %idxprom932.i = zext i32 %and931.i to i64
  %arrayidx933.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i
  %626 = load i32, i32* %arrayidx933.i, align 4
  %xor934.i = xor i32 %624, %626
  %627 = load i32, i32* %u.i, align 4
  %shr935.i = lshr i32 %627, 18
  %and936.i = and i32 %shr935.i, 63
  %idxprom937.i = zext i32 %and936.i to i64
  %arrayidx938.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i
  %628 = load i32, i32* %arrayidx938.i, align 4
  %xor939.i = xor i32 %xor934.i, %628
  %629 = load i32, i32* %u.i, align 4
  %shr940.i = lshr i32 %629, 26
  %idxprom942.i = zext i32 %shr940.i to i64
  %arrayidx943.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i
  %630 = load i32, i32* %arrayidx943.i, align 4
  %xor944.i = xor i32 %xor939.i, %630
  %631 = load i32, i32* %t.i, align 4
  %shr945.i = lshr i32 %631, 2
  %and946.i = and i32 %shr945.i, 63
  %idxprom947.i = zext i32 %and946.i to i64
  %arrayidx948.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i
  %632 = load i32, i32* %arrayidx948.i, align 4
  %xor949.i = xor i32 %xor944.i, %632
  %633 = load i32, i32* %t.i, align 4
  %shr950.i = lshr i32 %633, 10
  %and951.i = and i32 %shr950.i, 63
  %idxprom952.i = zext i32 %and951.i to i64
  %arrayidx953.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i
  %634 = load i32, i32* %arrayidx953.i, align 4
  %xor954.i = xor i32 %xor949.i, %634
  %635 = load i32, i32* %t.i, align 4
  %shr955.i = lshr i32 %635, 18
  %and956.i = and i32 %shr955.i, 63
  %idxprom957.i = zext i32 %and956.i to i64
  %arrayidx958.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i
  %636 = load i32, i32* %arrayidx958.i, align 4
  %xor959.i = xor i32 %xor954.i, %636
  %637 = load i32, i32* %t.i, align 4
  %shr960.i = lshr i32 %637, 26
  %idxprom962.i = zext i32 %shr960.i to i64
  %arrayidx963.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i
  %638 = load i32, i32* %arrayidx963.i, align 4
  %xor964.i = xor i32 %xor959.i, %638
  %639 = load i32, i32* %r.i, align 4
  %xor965.i = xor i32 %639, %xor964.i
  store i32 %xor965.i, i32* %r.i, align 4
  %640 = load i32, i32* %r.i, align 4
  %641 = load i32*, i32** %s.i, align 8
  %arrayidx966.i = getelementptr inbounds i32, i32* %641, i64 22
  %642 = load i32, i32* %arrayidx966.i, align 4
  %xor967.i = xor i32 %640, %642
  store i32 %xor967.i, i32* %u.i, align 4
  %643 = load i32, i32* %r.i, align 4
  %644 = load i32*, i32** %s.i, align 8
  %arrayidx968.i = getelementptr inbounds i32, i32* %644, i64 23
  %645 = load i32, i32* %arrayidx968.i, align 4
  %xor969.i = xor i32 %643, %645
  store i32 %xor969.i, i32* %t.i, align 4
  %646 = load i32, i32* %t.i, align 4
  %647 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %646) #5, !srcloc !24
  store i32 %647, i32* %ret970.i, align 4
  %648 = load i32, i32* %ret970.i, align 4
  store i32 %648, i32* %tmp971.i, align 4
  %649 = load i32, i32* %tmp971.i, align 4
  store i32 %649, i32* %t.i, align 4
  %650 = load i32, i32* %u.i, align 4
  %shr972.i = lshr i32 %650, 2
  %and973.i = and i32 %shr972.i, 63
  %idxprom974.i = zext i32 %and973.i to i64
  %arrayidx975.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i
  %651 = load i32, i32* %arrayidx975.i, align 4
  %652 = load i32, i32* %u.i, align 4
  %shr976.i = lshr i32 %652, 10
  %and977.i = and i32 %shr976.i, 63
  %idxprom978.i = zext i32 %and977.i to i64
  %arrayidx979.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i
  %653 = load i32, i32* %arrayidx979.i, align 4
  %xor980.i = xor i32 %651, %653
  %654 = load i32, i32* %u.i, align 4
  %shr981.i = lshr i32 %654, 18
  %and982.i = and i32 %shr981.i, 63
  %idxprom983.i = zext i32 %and982.i to i64
  %arrayidx984.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i
  %655 = load i32, i32* %arrayidx984.i, align 4
  %xor985.i = xor i32 %xor980.i, %655
  %656 = load i32, i32* %u.i, align 4
  %shr986.i = lshr i32 %656, 26
  %idxprom988.i = zext i32 %shr986.i to i64
  %arrayidx989.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i
  %657 = load i32, i32* %arrayidx989.i, align 4
  %xor990.i = xor i32 %xor985.i, %657
  %658 = load i32, i32* %t.i, align 4
  %shr991.i = lshr i32 %658, 2
  %and992.i = and i32 %shr991.i, 63
  %idxprom993.i = zext i32 %and992.i to i64
  %arrayidx994.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i
  %659 = load i32, i32* %arrayidx994.i, align 4
  %xor995.i = xor i32 %xor990.i, %659
  %660 = load i32, i32* %t.i, align 4
  %shr996.i = lshr i32 %660, 10
  %and997.i = and i32 %shr996.i, 63
  %idxprom998.i = zext i32 %and997.i to i64
  %arrayidx999.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i
  %661 = load i32, i32* %arrayidx999.i, align 4
  %xor1000.i = xor i32 %xor995.i, %661
  %662 = load i32, i32* %t.i, align 4
  %shr1001.i = lshr i32 %662, 18
  %and1002.i = and i32 %shr1001.i, 63
  %idxprom1003.i = zext i32 %and1002.i to i64
  %arrayidx1004.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i
  %663 = load i32, i32* %arrayidx1004.i, align 4
  %xor1005.i = xor i32 %xor1000.i, %663
  %664 = load i32, i32* %t.i, align 4
  %shr1006.i = lshr i32 %664, 26
  %idxprom1008.i = zext i32 %shr1006.i to i64
  %arrayidx1009.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i
  %665 = load i32, i32* %arrayidx1009.i, align 4
  %xor1010.i = xor i32 %xor1005.i, %665
  %666 = load i32, i32* %l.i, align 4
  %xor1011.i = xor i32 %666, %xor1010.i
  store i32 %xor1011.i, i32* %l.i, align 4
  %667 = load i32, i32* %l.i, align 4
  %668 = load i32*, i32** %s.i, align 8
  %arrayidx1012.i = getelementptr inbounds i32, i32* %668, i64 20
  %669 = load i32, i32* %arrayidx1012.i, align 4
  %xor1013.i = xor i32 %667, %669
  store i32 %xor1013.i, i32* %u.i, align 4
  %670 = load i32, i32* %l.i, align 4
  %671 = load i32*, i32** %s.i, align 8
  %arrayidx1014.i = getelementptr inbounds i32, i32* %671, i64 21
  %672 = load i32, i32* %arrayidx1014.i, align 4
  %xor1015.i = xor i32 %670, %672
  store i32 %xor1015.i, i32* %t.i, align 4
  %673 = load i32, i32* %t.i, align 4
  %674 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %673) #5, !srcloc !25
  store i32 %674, i32* %ret1016.i, align 4
  %675 = load i32, i32* %ret1016.i, align 4
  store i32 %675, i32* %tmp1017.i, align 4
  %676 = load i32, i32* %tmp1017.i, align 4
  store i32 %676, i32* %t.i, align 4
  %677 = load i32, i32* %u.i, align 4
  %shr1018.i = lshr i32 %677, 2
  %and1019.i = and i32 %shr1018.i, 63
  %idxprom1020.i = zext i32 %and1019.i to i64
  %arrayidx1021.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i
  %678 = load i32, i32* %arrayidx1021.i, align 4
  %679 = load i32, i32* %u.i, align 4
  %shr1022.i = lshr i32 %679, 10
  %and1023.i = and i32 %shr1022.i, 63
  %idxprom1024.i = zext i32 %and1023.i to i64
  %arrayidx1025.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i
  %680 = load i32, i32* %arrayidx1025.i, align 4
  %xor1026.i = xor i32 %678, %680
  %681 = load i32, i32* %u.i, align 4
  %shr1027.i = lshr i32 %681, 18
  %and1028.i = and i32 %shr1027.i, 63
  %idxprom1029.i = zext i32 %and1028.i to i64
  %arrayidx1030.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i
  %682 = load i32, i32* %arrayidx1030.i, align 4
  %xor1031.i = xor i32 %xor1026.i, %682
  %683 = load i32, i32* %u.i, align 4
  %shr1032.i = lshr i32 %683, 26
  %idxprom1034.i = zext i32 %shr1032.i to i64
  %arrayidx1035.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i
  %684 = load i32, i32* %arrayidx1035.i, align 4
  %xor1036.i = xor i32 %xor1031.i, %684
  %685 = load i32, i32* %t.i, align 4
  %shr1037.i = lshr i32 %685, 2
  %and1038.i = and i32 %shr1037.i, 63
  %idxprom1039.i = zext i32 %and1038.i to i64
  %arrayidx1040.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i
  %686 = load i32, i32* %arrayidx1040.i, align 4
  %xor1041.i = xor i32 %xor1036.i, %686
  %687 = load i32, i32* %t.i, align 4
  %shr1042.i = lshr i32 %687, 10
  %and1043.i = and i32 %shr1042.i, 63
  %idxprom1044.i = zext i32 %and1043.i to i64
  %arrayidx1045.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i
  %688 = load i32, i32* %arrayidx1045.i, align 4
  %xor1046.i = xor i32 %xor1041.i, %688
  %689 = load i32, i32* %t.i, align 4
  %shr1047.i = lshr i32 %689, 18
  %and1048.i = and i32 %shr1047.i, 63
  %idxprom1049.i = zext i32 %and1048.i to i64
  %arrayidx1050.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i
  %690 = load i32, i32* %arrayidx1050.i, align 4
  %xor1051.i = xor i32 %xor1046.i, %690
  %691 = load i32, i32* %t.i, align 4
  %shr1052.i = lshr i32 %691, 26
  %idxprom1054.i = zext i32 %shr1052.i to i64
  %arrayidx1055.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i
  %692 = load i32, i32* %arrayidx1055.i, align 4
  %xor1056.i = xor i32 %xor1051.i, %692
  %693 = load i32, i32* %r.i, align 4
  %xor1057.i = xor i32 %693, %xor1056.i
  store i32 %xor1057.i, i32* %r.i, align 4
  %694 = load i32, i32* %r.i, align 4
  %695 = load i32*, i32** %s.i, align 8
  %arrayidx1058.i = getelementptr inbounds i32, i32* %695, i64 18
  %696 = load i32, i32* %arrayidx1058.i, align 4
  %xor1059.i = xor i32 %694, %696
  store i32 %xor1059.i, i32* %u.i, align 4
  %697 = load i32, i32* %r.i, align 4
  %698 = load i32*, i32** %s.i, align 8
  %arrayidx1060.i = getelementptr inbounds i32, i32* %698, i64 19
  %699 = load i32, i32* %arrayidx1060.i, align 4
  %xor1061.i = xor i32 %697, %699
  store i32 %xor1061.i, i32* %t.i, align 4
  %700 = load i32, i32* %t.i, align 4
  %701 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %700) #5, !srcloc !26
  store i32 %701, i32* %ret1062.i, align 4
  %702 = load i32, i32* %ret1062.i, align 4
  store i32 %702, i32* %tmp1063.i, align 4
  %703 = load i32, i32* %tmp1063.i, align 4
  store i32 %703, i32* %t.i, align 4
  %704 = load i32, i32* %u.i, align 4
  %shr1064.i = lshr i32 %704, 2
  %and1065.i = and i32 %shr1064.i, 63
  %idxprom1066.i = zext i32 %and1065.i to i64
  %arrayidx1067.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i
  %705 = load i32, i32* %arrayidx1067.i, align 4
  %706 = load i32, i32* %u.i, align 4
  %shr1068.i = lshr i32 %706, 10
  %and1069.i = and i32 %shr1068.i, 63
  %idxprom1070.i = zext i32 %and1069.i to i64
  %arrayidx1071.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i
  %707 = load i32, i32* %arrayidx1071.i, align 4
  %xor1072.i = xor i32 %705, %707
  %708 = load i32, i32* %u.i, align 4
  %shr1073.i = lshr i32 %708, 18
  %and1074.i = and i32 %shr1073.i, 63
  %idxprom1075.i = zext i32 %and1074.i to i64
  %arrayidx1076.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i
  %709 = load i32, i32* %arrayidx1076.i, align 4
  %xor1077.i = xor i32 %xor1072.i, %709
  %710 = load i32, i32* %u.i, align 4
  %shr1078.i = lshr i32 %710, 26
  %idxprom1080.i = zext i32 %shr1078.i to i64
  %arrayidx1081.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i
  %711 = load i32, i32* %arrayidx1081.i, align 4
  %xor1082.i = xor i32 %xor1077.i, %711
  %712 = load i32, i32* %t.i, align 4
  %shr1083.i = lshr i32 %712, 2
  %and1084.i = and i32 %shr1083.i, 63
  %idxprom1085.i = zext i32 %and1084.i to i64
  %arrayidx1086.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i
  %713 = load i32, i32* %arrayidx1086.i, align 4
  %xor1087.i = xor i32 %xor1082.i, %713
  %714 = load i32, i32* %t.i, align 4
  %shr1088.i = lshr i32 %714, 10
  %and1089.i = and i32 %shr1088.i, 63
  %idxprom1090.i = zext i32 %and1089.i to i64
  %arrayidx1091.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i
  %715 = load i32, i32* %arrayidx1091.i, align 4
  %xor1092.i = xor i32 %xor1087.i, %715
  %716 = load i32, i32* %t.i, align 4
  %shr1093.i = lshr i32 %716, 18
  %and1094.i = and i32 %shr1093.i, 63
  %idxprom1095.i = zext i32 %and1094.i to i64
  %arrayidx1096.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i
  %717 = load i32, i32* %arrayidx1096.i, align 4
  %xor1097.i = xor i32 %xor1092.i, %717
  %718 = load i32, i32* %t.i, align 4
  %shr1098.i = lshr i32 %718, 26
  %idxprom1100.i = zext i32 %shr1098.i to i64
  %arrayidx1101.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i
  %719 = load i32, i32* %arrayidx1101.i, align 4
  %xor1102.i = xor i32 %xor1097.i, %719
  %720 = load i32, i32* %l.i, align 4
  %xor1103.i = xor i32 %720, %xor1102.i
  store i32 %xor1103.i, i32* %l.i, align 4
  %721 = load i32, i32* %l.i, align 4
  %722 = load i32*, i32** %s.i, align 8
  %arrayidx1104.i = getelementptr inbounds i32, i32* %722, i64 16
  %723 = load i32, i32* %arrayidx1104.i, align 4
  %xor1105.i = xor i32 %721, %723
  store i32 %xor1105.i, i32* %u.i, align 4
  %724 = load i32, i32* %l.i, align 4
  %725 = load i32*, i32** %s.i, align 8
  %arrayidx1106.i = getelementptr inbounds i32, i32* %725, i64 17
  %726 = load i32, i32* %arrayidx1106.i, align 4
  %xor1107.i = xor i32 %724, %726
  store i32 %xor1107.i, i32* %t.i, align 4
  %727 = load i32, i32* %t.i, align 4
  %728 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %727) #5, !srcloc !27
  store i32 %728, i32* %ret1108.i, align 4
  %729 = load i32, i32* %ret1108.i, align 4
  store i32 %729, i32* %tmp1109.i, align 4
  %730 = load i32, i32* %tmp1109.i, align 4
  store i32 %730, i32* %t.i, align 4
  %731 = load i32, i32* %u.i, align 4
  %shr1110.i = lshr i32 %731, 2
  %and1111.i = and i32 %shr1110.i, 63
  %idxprom1112.i = zext i32 %and1111.i to i64
  %arrayidx1113.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i
  %732 = load i32, i32* %arrayidx1113.i, align 4
  %733 = load i32, i32* %u.i, align 4
  %shr1114.i = lshr i32 %733, 10
  %and1115.i = and i32 %shr1114.i, 63
  %idxprom1116.i = zext i32 %and1115.i to i64
  %arrayidx1117.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i
  %734 = load i32, i32* %arrayidx1117.i, align 4
  %xor1118.i = xor i32 %732, %734
  %735 = load i32, i32* %u.i, align 4
  %shr1119.i = lshr i32 %735, 18
  %and1120.i = and i32 %shr1119.i, 63
  %idxprom1121.i = zext i32 %and1120.i to i64
  %arrayidx1122.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i
  %736 = load i32, i32* %arrayidx1122.i, align 4
  %xor1123.i = xor i32 %xor1118.i, %736
  %737 = load i32, i32* %u.i, align 4
  %shr1124.i = lshr i32 %737, 26
  %idxprom1126.i = zext i32 %shr1124.i to i64
  %arrayidx1127.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i
  %738 = load i32, i32* %arrayidx1127.i, align 4
  %xor1128.i = xor i32 %xor1123.i, %738
  %739 = load i32, i32* %t.i, align 4
  %shr1129.i = lshr i32 %739, 2
  %and1130.i = and i32 %shr1129.i, 63
  %idxprom1131.i = zext i32 %and1130.i to i64
  %arrayidx1132.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i
  %740 = load i32, i32* %arrayidx1132.i, align 4
  %xor1133.i = xor i32 %xor1128.i, %740
  %741 = load i32, i32* %t.i, align 4
  %shr1134.i = lshr i32 %741, 10
  %and1135.i = and i32 %shr1134.i, 63
  %idxprom1136.i = zext i32 %and1135.i to i64
  %arrayidx1137.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i
  %742 = load i32, i32* %arrayidx1137.i, align 4
  %xor1138.i = xor i32 %xor1133.i, %742
  %743 = load i32, i32* %t.i, align 4
  %shr1139.i = lshr i32 %743, 18
  %and1140.i = and i32 %shr1139.i, 63
  %idxprom1141.i = zext i32 %and1140.i to i64
  %arrayidx1142.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i
  %744 = load i32, i32* %arrayidx1142.i, align 4
  %xor1143.i = xor i32 %xor1138.i, %744
  %745 = load i32, i32* %t.i, align 4
  %shr1144.i = lshr i32 %745, 26
  %idxprom1146.i = zext i32 %shr1144.i to i64
  %arrayidx1147.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i
  %746 = load i32, i32* %arrayidx1147.i, align 4
  %xor1148.i = xor i32 %xor1143.i, %746
  %747 = load i32, i32* %r.i, align 4
  %xor1149.i = xor i32 %747, %xor1148.i
  store i32 %xor1149.i, i32* %r.i, align 4
  %748 = load i32, i32* %r.i, align 4
  %749 = load i32*, i32** %s.i, align 8
  %arrayidx1150.i = getelementptr inbounds i32, i32* %749, i64 14
  %750 = load i32, i32* %arrayidx1150.i, align 4
  %xor1151.i = xor i32 %748, %750
  store i32 %xor1151.i, i32* %u.i, align 4
  %751 = load i32, i32* %r.i, align 4
  %752 = load i32*, i32** %s.i, align 8
  %arrayidx1152.i = getelementptr inbounds i32, i32* %752, i64 15
  %753 = load i32, i32* %arrayidx1152.i, align 4
  %xor1153.i = xor i32 %751, %753
  store i32 %xor1153.i, i32* %t.i, align 4
  %754 = load i32, i32* %t.i, align 4
  %755 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %754) #5, !srcloc !28
  store i32 %755, i32* %ret1154.i, align 4
  %756 = load i32, i32* %ret1154.i, align 4
  store i32 %756, i32* %tmp1155.i, align 4
  %757 = load i32, i32* %tmp1155.i, align 4
  store i32 %757, i32* %t.i, align 4
  %758 = load i32, i32* %u.i, align 4
  %shr1156.i = lshr i32 %758, 2
  %and1157.i = and i32 %shr1156.i, 63
  %idxprom1158.i = zext i32 %and1157.i to i64
  %arrayidx1159.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i
  %759 = load i32, i32* %arrayidx1159.i, align 4
  %760 = load i32, i32* %u.i, align 4
  %shr1160.i = lshr i32 %760, 10
  %and1161.i = and i32 %shr1160.i, 63
  %idxprom1162.i = zext i32 %and1161.i to i64
  %arrayidx1163.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i
  %761 = load i32, i32* %arrayidx1163.i, align 4
  %xor1164.i = xor i32 %759, %761
  %762 = load i32, i32* %u.i, align 4
  %shr1165.i = lshr i32 %762, 18
  %and1166.i = and i32 %shr1165.i, 63
  %idxprom1167.i = zext i32 %and1166.i to i64
  %arrayidx1168.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i
  %763 = load i32, i32* %arrayidx1168.i, align 4
  %xor1169.i = xor i32 %xor1164.i, %763
  %764 = load i32, i32* %u.i, align 4
  %shr1170.i = lshr i32 %764, 26
  %idxprom1172.i = zext i32 %shr1170.i to i64
  %arrayidx1173.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i
  %765 = load i32, i32* %arrayidx1173.i, align 4
  %xor1174.i = xor i32 %xor1169.i, %765
  %766 = load i32, i32* %t.i, align 4
  %shr1175.i = lshr i32 %766, 2
  %and1176.i = and i32 %shr1175.i, 63
  %idxprom1177.i = zext i32 %and1176.i to i64
  %arrayidx1178.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i
  %767 = load i32, i32* %arrayidx1178.i, align 4
  %xor1179.i = xor i32 %xor1174.i, %767
  %768 = load i32, i32* %t.i, align 4
  %shr1180.i = lshr i32 %768, 10
  %and1181.i = and i32 %shr1180.i, 63
  %idxprom1182.i = zext i32 %and1181.i to i64
  %arrayidx1183.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i
  %769 = load i32, i32* %arrayidx1183.i, align 4
  %xor1184.i = xor i32 %xor1179.i, %769
  %770 = load i32, i32* %t.i, align 4
  %shr1185.i = lshr i32 %770, 18
  %and1186.i = and i32 %shr1185.i, 63
  %idxprom1187.i = zext i32 %and1186.i to i64
  %arrayidx1188.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i
  %771 = load i32, i32* %arrayidx1188.i, align 4
  %xor1189.i = xor i32 %xor1184.i, %771
  %772 = load i32, i32* %t.i, align 4
  %shr1190.i = lshr i32 %772, 26
  %idxprom1192.i = zext i32 %shr1190.i to i64
  %arrayidx1193.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i
  %773 = load i32, i32* %arrayidx1193.i, align 4
  %xor1194.i = xor i32 %xor1189.i, %773
  %774 = load i32, i32* %l.i, align 4
  %xor1195.i = xor i32 %774, %xor1194.i
  store i32 %xor1195.i, i32* %l.i, align 4
  %775 = load i32, i32* %l.i, align 4
  %776 = load i32*, i32** %s.i, align 8
  %arrayidx1196.i = getelementptr inbounds i32, i32* %776, i64 12
  %777 = load i32, i32* %arrayidx1196.i, align 4
  %xor1197.i = xor i32 %775, %777
  store i32 %xor1197.i, i32* %u.i, align 4
  %778 = load i32, i32* %l.i, align 4
  %779 = load i32*, i32** %s.i, align 8
  %arrayidx1198.i = getelementptr inbounds i32, i32* %779, i64 13
  %780 = load i32, i32* %arrayidx1198.i, align 4
  %xor1199.i = xor i32 %778, %780
  store i32 %xor1199.i, i32* %t.i, align 4
  %781 = load i32, i32* %t.i, align 4
  %782 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %781) #5, !srcloc !29
  store i32 %782, i32* %ret1200.i, align 4
  %783 = load i32, i32* %ret1200.i, align 4
  store i32 %783, i32* %tmp1201.i, align 4
  %784 = load i32, i32* %tmp1201.i, align 4
  store i32 %784, i32* %t.i, align 4
  %785 = load i32, i32* %u.i, align 4
  %shr1202.i = lshr i32 %785, 2
  %and1203.i = and i32 %shr1202.i, 63
  %idxprom1204.i = zext i32 %and1203.i to i64
  %arrayidx1205.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i
  %786 = load i32, i32* %arrayidx1205.i, align 4
  %787 = load i32, i32* %u.i, align 4
  %shr1206.i = lshr i32 %787, 10
  %and1207.i = and i32 %shr1206.i, 63
  %idxprom1208.i = zext i32 %and1207.i to i64
  %arrayidx1209.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i
  %788 = load i32, i32* %arrayidx1209.i, align 4
  %xor1210.i = xor i32 %786, %788
  %789 = load i32, i32* %u.i, align 4
  %shr1211.i = lshr i32 %789, 18
  %and1212.i = and i32 %shr1211.i, 63
  %idxprom1213.i = zext i32 %and1212.i to i64
  %arrayidx1214.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i
  %790 = load i32, i32* %arrayidx1214.i, align 4
  %xor1215.i = xor i32 %xor1210.i, %790
  %791 = load i32, i32* %u.i, align 4
  %shr1216.i = lshr i32 %791, 26
  %idxprom1218.i = zext i32 %shr1216.i to i64
  %arrayidx1219.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i
  %792 = load i32, i32* %arrayidx1219.i, align 4
  %xor1220.i = xor i32 %xor1215.i, %792
  %793 = load i32, i32* %t.i, align 4
  %shr1221.i = lshr i32 %793, 2
  %and1222.i = and i32 %shr1221.i, 63
  %idxprom1223.i = zext i32 %and1222.i to i64
  %arrayidx1224.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i
  %794 = load i32, i32* %arrayidx1224.i, align 4
  %xor1225.i = xor i32 %xor1220.i, %794
  %795 = load i32, i32* %t.i, align 4
  %shr1226.i = lshr i32 %795, 10
  %and1227.i = and i32 %shr1226.i, 63
  %idxprom1228.i = zext i32 %and1227.i to i64
  %arrayidx1229.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i
  %796 = load i32, i32* %arrayidx1229.i, align 4
  %xor1230.i = xor i32 %xor1225.i, %796
  %797 = load i32, i32* %t.i, align 4
  %shr1231.i = lshr i32 %797, 18
  %and1232.i = and i32 %shr1231.i, 63
  %idxprom1233.i = zext i32 %and1232.i to i64
  %arrayidx1234.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i
  %798 = load i32, i32* %arrayidx1234.i, align 4
  %xor1235.i = xor i32 %xor1230.i, %798
  %799 = load i32, i32* %t.i, align 4
  %shr1236.i = lshr i32 %799, 26
  %idxprom1238.i = zext i32 %shr1236.i to i64
  %arrayidx1239.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i
  %800 = load i32, i32* %arrayidx1239.i, align 4
  %xor1240.i = xor i32 %xor1235.i, %800
  %801 = load i32, i32* %r.i, align 4
  %xor1241.i = xor i32 %801, %xor1240.i
  store i32 %xor1241.i, i32* %r.i, align 4
  %802 = load i32, i32* %r.i, align 4
  %803 = load i32*, i32** %s.i, align 8
  %arrayidx1242.i = getelementptr inbounds i32, i32* %803, i64 10
  %804 = load i32, i32* %arrayidx1242.i, align 4
  %xor1243.i = xor i32 %802, %804
  store i32 %xor1243.i, i32* %u.i, align 4
  %805 = load i32, i32* %r.i, align 4
  %806 = load i32*, i32** %s.i, align 8
  %arrayidx1244.i = getelementptr inbounds i32, i32* %806, i64 11
  %807 = load i32, i32* %arrayidx1244.i, align 4
  %xor1245.i = xor i32 %805, %807
  store i32 %xor1245.i, i32* %t.i, align 4
  %808 = load i32, i32* %t.i, align 4
  %809 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %808) #5, !srcloc !30
  store i32 %809, i32* %ret1246.i, align 4
  %810 = load i32, i32* %ret1246.i, align 4
  store i32 %810, i32* %tmp1247.i, align 4
  %811 = load i32, i32* %tmp1247.i, align 4
  store i32 %811, i32* %t.i, align 4
  %812 = load i32, i32* %u.i, align 4
  %shr1248.i = lshr i32 %812, 2
  %and1249.i = and i32 %shr1248.i, 63
  %idxprom1250.i = zext i32 %and1249.i to i64
  %arrayidx1251.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i
  %813 = load i32, i32* %arrayidx1251.i, align 4
  %814 = load i32, i32* %u.i, align 4
  %shr1252.i = lshr i32 %814, 10
  %and1253.i = and i32 %shr1252.i, 63
  %idxprom1254.i = zext i32 %and1253.i to i64
  %arrayidx1255.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i
  %815 = load i32, i32* %arrayidx1255.i, align 4
  %xor1256.i = xor i32 %813, %815
  %816 = load i32, i32* %u.i, align 4
  %shr1257.i = lshr i32 %816, 18
  %and1258.i = and i32 %shr1257.i, 63
  %idxprom1259.i = zext i32 %and1258.i to i64
  %arrayidx1260.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i
  %817 = load i32, i32* %arrayidx1260.i, align 4
  %xor1261.i = xor i32 %xor1256.i, %817
  %818 = load i32, i32* %u.i, align 4
  %shr1262.i = lshr i32 %818, 26
  %idxprom1264.i = zext i32 %shr1262.i to i64
  %arrayidx1265.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i
  %819 = load i32, i32* %arrayidx1265.i, align 4
  %xor1266.i = xor i32 %xor1261.i, %819
  %820 = load i32, i32* %t.i, align 4
  %shr1267.i = lshr i32 %820, 2
  %and1268.i = and i32 %shr1267.i, 63
  %idxprom1269.i = zext i32 %and1268.i to i64
  %arrayidx1270.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i
  %821 = load i32, i32* %arrayidx1270.i, align 4
  %xor1271.i = xor i32 %xor1266.i, %821
  %822 = load i32, i32* %t.i, align 4
  %shr1272.i = lshr i32 %822, 10
  %and1273.i = and i32 %shr1272.i, 63
  %idxprom1274.i = zext i32 %and1273.i to i64
  %arrayidx1275.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i
  %823 = load i32, i32* %arrayidx1275.i, align 4
  %xor1276.i = xor i32 %xor1271.i, %823
  %824 = load i32, i32* %t.i, align 4
  %shr1277.i = lshr i32 %824, 18
  %and1278.i = and i32 %shr1277.i, 63
  %idxprom1279.i = zext i32 %and1278.i to i64
  %arrayidx1280.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i
  %825 = load i32, i32* %arrayidx1280.i, align 4
  %xor1281.i = xor i32 %xor1276.i, %825
  %826 = load i32, i32* %t.i, align 4
  %shr1282.i = lshr i32 %826, 26
  %idxprom1284.i = zext i32 %shr1282.i to i64
  %arrayidx1285.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i
  %827 = load i32, i32* %arrayidx1285.i, align 4
  %xor1286.i = xor i32 %xor1281.i, %827
  %828 = load i32, i32* %l.i, align 4
  %xor1287.i = xor i32 %828, %xor1286.i
  store i32 %xor1287.i, i32* %l.i, align 4
  %829 = load i32, i32* %l.i, align 4
  %830 = load i32*, i32** %s.i, align 8
  %arrayidx1288.i = getelementptr inbounds i32, i32* %830, i64 8
  %831 = load i32, i32* %arrayidx1288.i, align 4
  %xor1289.i = xor i32 %829, %831
  store i32 %xor1289.i, i32* %u.i, align 4
  %832 = load i32, i32* %l.i, align 4
  %833 = load i32*, i32** %s.i, align 8
  %arrayidx1290.i = getelementptr inbounds i32, i32* %833, i64 9
  %834 = load i32, i32* %arrayidx1290.i, align 4
  %xor1291.i = xor i32 %832, %834
  store i32 %xor1291.i, i32* %t.i, align 4
  %835 = load i32, i32* %t.i, align 4
  %836 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %835) #5, !srcloc !31
  store i32 %836, i32* %ret1292.i, align 4
  %837 = load i32, i32* %ret1292.i, align 4
  store i32 %837, i32* %tmp1293.i, align 4
  %838 = load i32, i32* %tmp1293.i, align 4
  store i32 %838, i32* %t.i, align 4
  %839 = load i32, i32* %u.i, align 4
  %shr1294.i = lshr i32 %839, 2
  %and1295.i = and i32 %shr1294.i, 63
  %idxprom1296.i = zext i32 %and1295.i to i64
  %arrayidx1297.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i
  %840 = load i32, i32* %arrayidx1297.i, align 4
  %841 = load i32, i32* %u.i, align 4
  %shr1298.i = lshr i32 %841, 10
  %and1299.i = and i32 %shr1298.i, 63
  %idxprom1300.i = zext i32 %and1299.i to i64
  %arrayidx1301.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i
  %842 = load i32, i32* %arrayidx1301.i, align 4
  %xor1302.i = xor i32 %840, %842
  %843 = load i32, i32* %u.i, align 4
  %shr1303.i = lshr i32 %843, 18
  %and1304.i = and i32 %shr1303.i, 63
  %idxprom1305.i = zext i32 %and1304.i to i64
  %arrayidx1306.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i
  %844 = load i32, i32* %arrayidx1306.i, align 4
  %xor1307.i = xor i32 %xor1302.i, %844
  %845 = load i32, i32* %u.i, align 4
  %shr1308.i = lshr i32 %845, 26
  %idxprom1310.i = zext i32 %shr1308.i to i64
  %arrayidx1311.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i
  %846 = load i32, i32* %arrayidx1311.i, align 4
  %xor1312.i = xor i32 %xor1307.i, %846
  %847 = load i32, i32* %t.i, align 4
  %shr1313.i = lshr i32 %847, 2
  %and1314.i = and i32 %shr1313.i, 63
  %idxprom1315.i = zext i32 %and1314.i to i64
  %arrayidx1316.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i
  %848 = load i32, i32* %arrayidx1316.i, align 4
  %xor1317.i = xor i32 %xor1312.i, %848
  %849 = load i32, i32* %t.i, align 4
  %shr1318.i = lshr i32 %849, 10
  %and1319.i = and i32 %shr1318.i, 63
  %idxprom1320.i = zext i32 %and1319.i to i64
  %arrayidx1321.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i
  %850 = load i32, i32* %arrayidx1321.i, align 4
  %xor1322.i = xor i32 %xor1317.i, %850
  %851 = load i32, i32* %t.i, align 4
  %shr1323.i = lshr i32 %851, 18
  %and1324.i = and i32 %shr1323.i, 63
  %idxprom1325.i = zext i32 %and1324.i to i64
  %arrayidx1326.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i
  %852 = load i32, i32* %arrayidx1326.i, align 4
  %xor1327.i = xor i32 %xor1322.i, %852
  %853 = load i32, i32* %t.i, align 4
  %shr1328.i = lshr i32 %853, 26
  %idxprom1330.i = zext i32 %shr1328.i to i64
  %arrayidx1331.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i
  %854 = load i32, i32* %arrayidx1331.i, align 4
  %xor1332.i = xor i32 %xor1327.i, %854
  %855 = load i32, i32* %r.i, align 4
  %xor1333.i = xor i32 %855, %xor1332.i
  store i32 %xor1333.i, i32* %r.i, align 4
  %856 = load i32, i32* %r.i, align 4
  %857 = load i32*, i32** %s.i, align 8
  %arrayidx1334.i = getelementptr inbounds i32, i32* %857, i64 6
  %858 = load i32, i32* %arrayidx1334.i, align 4
  %xor1335.i = xor i32 %856, %858
  store i32 %xor1335.i, i32* %u.i, align 4
  %859 = load i32, i32* %r.i, align 4
  %860 = load i32*, i32** %s.i, align 8
  %arrayidx1336.i = getelementptr inbounds i32, i32* %860, i64 7
  %861 = load i32, i32* %arrayidx1336.i, align 4
  %xor1337.i = xor i32 %859, %861
  store i32 %xor1337.i, i32* %t.i, align 4
  %862 = load i32, i32* %t.i, align 4
  %863 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %862) #5, !srcloc !32
  store i32 %863, i32* %ret1338.i, align 4
  %864 = load i32, i32* %ret1338.i, align 4
  store i32 %864, i32* %tmp1339.i, align 4
  %865 = load i32, i32* %tmp1339.i, align 4
  store i32 %865, i32* %t.i, align 4
  %866 = load i32, i32* %u.i, align 4
  %shr1340.i = lshr i32 %866, 2
  %and1341.i = and i32 %shr1340.i, 63
  %idxprom1342.i = zext i32 %and1341.i to i64
  %arrayidx1343.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i
  %867 = load i32, i32* %arrayidx1343.i, align 4
  %868 = load i32, i32* %u.i, align 4
  %shr1344.i = lshr i32 %868, 10
  %and1345.i = and i32 %shr1344.i, 63
  %idxprom1346.i = zext i32 %and1345.i to i64
  %arrayidx1347.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i
  %869 = load i32, i32* %arrayidx1347.i, align 4
  %xor1348.i = xor i32 %867, %869
  %870 = load i32, i32* %u.i, align 4
  %shr1349.i = lshr i32 %870, 18
  %and1350.i = and i32 %shr1349.i, 63
  %idxprom1351.i = zext i32 %and1350.i to i64
  %arrayidx1352.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i
  %871 = load i32, i32* %arrayidx1352.i, align 4
  %xor1353.i = xor i32 %xor1348.i, %871
  %872 = load i32, i32* %u.i, align 4
  %shr1354.i = lshr i32 %872, 26
  %idxprom1356.i = zext i32 %shr1354.i to i64
  %arrayidx1357.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i
  %873 = load i32, i32* %arrayidx1357.i, align 4
  %xor1358.i = xor i32 %xor1353.i, %873
  %874 = load i32, i32* %t.i, align 4
  %shr1359.i = lshr i32 %874, 2
  %and1360.i = and i32 %shr1359.i, 63
  %idxprom1361.i = zext i32 %and1360.i to i64
  %arrayidx1362.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i
  %875 = load i32, i32* %arrayidx1362.i, align 4
  %xor1363.i = xor i32 %xor1358.i, %875
  %876 = load i32, i32* %t.i, align 4
  %shr1364.i = lshr i32 %876, 10
  %and1365.i = and i32 %shr1364.i, 63
  %idxprom1366.i = zext i32 %and1365.i to i64
  %arrayidx1367.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i
  %877 = load i32, i32* %arrayidx1367.i, align 4
  %xor1368.i = xor i32 %xor1363.i, %877
  %878 = load i32, i32* %t.i, align 4
  %shr1369.i = lshr i32 %878, 18
  %and1370.i = and i32 %shr1369.i, 63
  %idxprom1371.i = zext i32 %and1370.i to i64
  %arrayidx1372.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i
  %879 = load i32, i32* %arrayidx1372.i, align 4
  %xor1373.i = xor i32 %xor1368.i, %879
  %880 = load i32, i32* %t.i, align 4
  %shr1374.i = lshr i32 %880, 26
  %idxprom1376.i = zext i32 %shr1374.i to i64
  %arrayidx1377.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i
  %881 = load i32, i32* %arrayidx1377.i, align 4
  %xor1378.i = xor i32 %xor1373.i, %881
  %882 = load i32, i32* %l.i, align 4
  %xor1379.i = xor i32 %882, %xor1378.i
  store i32 %xor1379.i, i32* %l.i, align 4
  %883 = load i32, i32* %l.i, align 4
  %884 = load i32*, i32** %s.i, align 8
  %arrayidx1380.i = getelementptr inbounds i32, i32* %884, i64 4
  %885 = load i32, i32* %arrayidx1380.i, align 4
  %xor1381.i = xor i32 %883, %885
  store i32 %xor1381.i, i32* %u.i, align 4
  %886 = load i32, i32* %l.i, align 4
  %887 = load i32*, i32** %s.i, align 8
  %arrayidx1382.i = getelementptr inbounds i32, i32* %887, i64 5
  %888 = load i32, i32* %arrayidx1382.i, align 4
  %xor1383.i = xor i32 %886, %888
  store i32 %xor1383.i, i32* %t.i, align 4
  %889 = load i32, i32* %t.i, align 4
  %890 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %889) #5, !srcloc !33
  store i32 %890, i32* %ret1384.i, align 4
  %891 = load i32, i32* %ret1384.i, align 4
  store i32 %891, i32* %tmp1385.i, align 4
  %892 = load i32, i32* %tmp1385.i, align 4
  store i32 %892, i32* %t.i, align 4
  %893 = load i32, i32* %u.i, align 4
  %shr1386.i = lshr i32 %893, 2
  %and1387.i = and i32 %shr1386.i, 63
  %idxprom1388.i = zext i32 %and1387.i to i64
  %arrayidx1389.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i
  %894 = load i32, i32* %arrayidx1389.i, align 4
  %895 = load i32, i32* %u.i, align 4
  %shr1390.i = lshr i32 %895, 10
  %and1391.i = and i32 %shr1390.i, 63
  %idxprom1392.i = zext i32 %and1391.i to i64
  %arrayidx1393.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i
  %896 = load i32, i32* %arrayidx1393.i, align 4
  %xor1394.i = xor i32 %894, %896
  %897 = load i32, i32* %u.i, align 4
  %shr1395.i = lshr i32 %897, 18
  %and1396.i = and i32 %shr1395.i, 63
  %idxprom1397.i = zext i32 %and1396.i to i64
  %arrayidx1398.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i
  %898 = load i32, i32* %arrayidx1398.i, align 4
  %xor1399.i = xor i32 %xor1394.i, %898
  %899 = load i32, i32* %u.i, align 4
  %shr1400.i = lshr i32 %899, 26
  %idxprom1402.i = zext i32 %shr1400.i to i64
  %arrayidx1403.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i
  %900 = load i32, i32* %arrayidx1403.i, align 4
  %xor1404.i = xor i32 %xor1399.i, %900
  %901 = load i32, i32* %t.i, align 4
  %shr1405.i = lshr i32 %901, 2
  %and1406.i = and i32 %shr1405.i, 63
  %idxprom1407.i = zext i32 %and1406.i to i64
  %arrayidx1408.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i
  %902 = load i32, i32* %arrayidx1408.i, align 4
  %xor1409.i = xor i32 %xor1404.i, %902
  %903 = load i32, i32* %t.i, align 4
  %shr1410.i = lshr i32 %903, 10
  %and1411.i = and i32 %shr1410.i, 63
  %idxprom1412.i = zext i32 %and1411.i to i64
  %arrayidx1413.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i
  %904 = load i32, i32* %arrayidx1413.i, align 4
  %xor1414.i = xor i32 %xor1409.i, %904
  %905 = load i32, i32* %t.i, align 4
  %shr1415.i = lshr i32 %905, 18
  %and1416.i = and i32 %shr1415.i, 63
  %idxprom1417.i = zext i32 %and1416.i to i64
  %arrayidx1418.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i
  %906 = load i32, i32* %arrayidx1418.i, align 4
  %xor1419.i = xor i32 %xor1414.i, %906
  %907 = load i32, i32* %t.i, align 4
  %shr1420.i = lshr i32 %907, 26
  %idxprom1422.i = zext i32 %shr1420.i to i64
  %arrayidx1423.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i
  %908 = load i32, i32* %arrayidx1423.i, align 4
  %xor1424.i = xor i32 %xor1419.i, %908
  %909 = load i32, i32* %r.i, align 4
  %xor1425.i = xor i32 %909, %xor1424.i
  store i32 %xor1425.i, i32* %r.i, align 4
  %910 = load i32, i32* %r.i, align 4
  %911 = load i32*, i32** %s.i, align 8
  %arrayidx1426.i = getelementptr inbounds i32, i32* %911, i64 2
  %912 = load i32, i32* %arrayidx1426.i, align 4
  %xor1427.i = xor i32 %910, %912
  store i32 %xor1427.i, i32* %u.i, align 4
  %913 = load i32, i32* %r.i, align 4
  %914 = load i32*, i32** %s.i, align 8
  %arrayidx1428.i = getelementptr inbounds i32, i32* %914, i64 3
  %915 = load i32, i32* %arrayidx1428.i, align 4
  %xor1429.i = xor i32 %913, %915
  store i32 %xor1429.i, i32* %t.i, align 4
  %916 = load i32, i32* %t.i, align 4
  %917 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %916) #5, !srcloc !34
  store i32 %917, i32* %ret1430.i, align 4
  %918 = load i32, i32* %ret1430.i, align 4
  store i32 %918, i32* %tmp1431.i, align 4
  %919 = load i32, i32* %tmp1431.i, align 4
  store i32 %919, i32* %t.i, align 4
  %920 = load i32, i32* %u.i, align 4
  %shr1432.i = lshr i32 %920, 2
  %and1433.i = and i32 %shr1432.i, 63
  %idxprom1434.i = zext i32 %and1433.i to i64
  %arrayidx1435.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i
  %921 = load i32, i32* %arrayidx1435.i, align 4
  %922 = load i32, i32* %u.i, align 4
  %shr1436.i = lshr i32 %922, 10
  %and1437.i = and i32 %shr1436.i, 63
  %idxprom1438.i = zext i32 %and1437.i to i64
  %arrayidx1439.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i
  %923 = load i32, i32* %arrayidx1439.i, align 4
  %xor1440.i = xor i32 %921, %923
  %924 = load i32, i32* %u.i, align 4
  %shr1441.i = lshr i32 %924, 18
  %and1442.i = and i32 %shr1441.i, 63
  %idxprom1443.i = zext i32 %and1442.i to i64
  %arrayidx1444.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i
  %925 = load i32, i32* %arrayidx1444.i, align 4
  %xor1445.i = xor i32 %xor1440.i, %925
  %926 = load i32, i32* %u.i, align 4
  %shr1446.i = lshr i32 %926, 26
  %idxprom1448.i = zext i32 %shr1446.i to i64
  %arrayidx1449.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i
  %927 = load i32, i32* %arrayidx1449.i, align 4
  %xor1450.i = xor i32 %xor1445.i, %927
  %928 = load i32, i32* %t.i, align 4
  %shr1451.i = lshr i32 %928, 2
  %and1452.i = and i32 %shr1451.i, 63
  %idxprom1453.i = zext i32 %and1452.i to i64
  %arrayidx1454.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i
  %929 = load i32, i32* %arrayidx1454.i, align 4
  %xor1455.i = xor i32 %xor1450.i, %929
  %930 = load i32, i32* %t.i, align 4
  %shr1456.i = lshr i32 %930, 10
  %and1457.i = and i32 %shr1456.i, 63
  %idxprom1458.i = zext i32 %and1457.i to i64
  %arrayidx1459.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i
  %931 = load i32, i32* %arrayidx1459.i, align 4
  %xor1460.i = xor i32 %xor1455.i, %931
  %932 = load i32, i32* %t.i, align 4
  %shr1461.i = lshr i32 %932, 18
  %and1462.i = and i32 %shr1461.i, 63
  %idxprom1463.i = zext i32 %and1462.i to i64
  %arrayidx1464.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i
  %933 = load i32, i32* %arrayidx1464.i, align 4
  %xor1465.i = xor i32 %xor1460.i, %933
  %934 = load i32, i32* %t.i, align 4
  %shr1466.i = lshr i32 %934, 26
  %idxprom1468.i = zext i32 %shr1466.i to i64
  %arrayidx1469.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i
  %935 = load i32, i32* %arrayidx1469.i, align 4
  %xor1470.i = xor i32 %xor1465.i, %935
  %936 = load i32, i32* %l.i, align 4
  %xor1471.i = xor i32 %936, %xor1470.i
  store i32 %xor1471.i, i32* %l.i, align 4
  %937 = load i32, i32* %l.i, align 4
  %938 = load i32*, i32** %s.i, align 8
  %939 = load i32, i32* %938, align 4
  %xor1473.i = xor i32 %937, %939
  store i32 %xor1473.i, i32* %u.i, align 4
  %940 = load i32, i32* %l.i, align 4
  %941 = load i32*, i32** %s.i, align 8
  %arrayidx1474.i = getelementptr inbounds i32, i32* %941, i64 1
  %942 = load i32, i32* %arrayidx1474.i, align 4
  %xor1475.i = xor i32 %940, %942
  store i32 %xor1475.i, i32* %t.i, align 4
  %943 = load i32, i32* %t.i, align 4
  %944 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %943) #5, !srcloc !35
  store i32 %944, i32* %ret1476.i, align 4
  %945 = load i32, i32* %ret1476.i, align 4
  store i32 %945, i32* %tmp1477.i, align 4
  %946 = load i32, i32* %tmp1477.i, align 4
  store i32 %946, i32* %t.i, align 4
  %947 = load i32, i32* %u.i, align 4
  %shr1478.i = lshr i32 %947, 2
  %and1479.i = and i32 %shr1478.i, 63
  %idxprom1480.i = zext i32 %and1479.i to i64
  %arrayidx1481.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i
  %948 = load i32, i32* %arrayidx1481.i, align 4
  %949 = load i32, i32* %u.i, align 4
  %shr1482.i = lshr i32 %949, 10
  %and1483.i = and i32 %shr1482.i, 63
  %idxprom1484.i = zext i32 %and1483.i to i64
  %arrayidx1485.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i
  %950 = load i32, i32* %arrayidx1485.i, align 4
  %xor1486.i = xor i32 %948, %950
  %951 = load i32, i32* %u.i, align 4
  %shr1487.i = lshr i32 %951, 18
  %and1488.i = and i32 %shr1487.i, 63
  %idxprom1489.i = zext i32 %and1488.i to i64
  %arrayidx1490.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i
  %952 = load i32, i32* %arrayidx1490.i, align 4
  %xor1491.i = xor i32 %xor1486.i, %952
  %953 = load i32, i32* %u.i, align 4
  %shr1492.i = lshr i32 %953, 26
  %idxprom1494.i = zext i32 %shr1492.i to i64
  %arrayidx1495.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i
  %954 = load i32, i32* %arrayidx1495.i, align 4
  %xor1496.i = xor i32 %xor1491.i, %954
  %955 = load i32, i32* %t.i, align 4
  %shr1497.i = lshr i32 %955, 2
  %and1498.i = and i32 %shr1497.i, 63
  %idxprom1499.i = zext i32 %and1498.i to i64
  %arrayidx1500.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i
  %956 = load i32, i32* %arrayidx1500.i, align 4
  %xor1501.i = xor i32 %xor1496.i, %956
  %957 = load i32, i32* %t.i, align 4
  %shr1502.i = lshr i32 %957, 10
  %and1503.i = and i32 %shr1502.i, 63
  %idxprom1504.i = zext i32 %and1503.i to i64
  %arrayidx1505.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i
  %958 = load i32, i32* %arrayidx1505.i, align 4
  %xor1506.i = xor i32 %xor1501.i, %958
  %959 = load i32, i32* %t.i, align 4
  %shr1507.i = lshr i32 %959, 18
  %and1508.i = and i32 %shr1507.i, 63
  %idxprom1509.i = zext i32 %and1508.i to i64
  %arrayidx1510.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i
  %960 = load i32, i32* %arrayidx1510.i, align 4
  %xor1511.i = xor i32 %xor1506.i, %960
  %961 = load i32, i32* %t.i, align 4
  %shr1512.i = lshr i32 %961, 26
  %idxprom1514.i = zext i32 %shr1512.i to i64
  %arrayidx1515.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i
  %962 = load i32, i32* %arrayidx1515.i, align 4
  %xor1516.i = xor i32 %xor1511.i, %962
  %963 = load i32, i32* %r.i, align 4
  %xor1517.i = xor i32 %963, %xor1516.i
  store i32 %xor1517.i, i32* %r.i, align 4
  br label %DES_encrypt1.exit

DES_encrypt1.exit:                                ; preds = %if.then.i, %if.else.i
  %964 = load i32, i32* %l.i, align 4
  %965 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %964) #5, !srcloc !36
  store i32 %965, i32* %ret1518.i, align 4
  %966 = load i32, i32* %ret1518.i, align 4
  store i32 %966, i32* %tmp1519.i, align 4
  %967 = load i32, i32* %tmp1519.i, align 4
  %conv1520.i = zext i32 %967 to i64
  %and1521.i = and i64 %conv1520.i, 4294967295
  %conv1522.i = trunc i64 %and1521.i to i32
  store i32 %conv1522.i, i32* %l.i, align 4
  %968 = load i32, i32* %r.i, align 4
  %969 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %968) #5, !srcloc !37
  store i32 %969, i32* %ret1523.i, align 4
  %970 = load i32, i32* %ret1523.i, align 4
  store i32 %970, i32* %tmp1524.i, align 4
  %971 = load i32, i32* %tmp1524.i, align 4
  %conv1525.i = zext i32 %971 to i64
  %and1526.i = and i64 %conv1525.i, 4294967295
  %conv1527.i = trunc i64 %and1526.i to i32
  store i32 %conv1527.i, i32* %r.i, align 4
  %972 = load i32, i32* %r.i, align 4
  %shr1529.i = lshr i32 %972, 1
  %973 = load i32, i32* %l.i, align 4
  %xor1530.i = xor i32 %shr1529.i, %973
  %conv1531.i = zext i32 %xor1530.i to i64
  %and1532.i = and i64 %conv1531.i, 1431655765
  %conv1533.i = trunc i64 %and1532.i to i32
  store i32 %conv1533.i, i32* %tt1528.i, align 4
  %974 = load i32, i32* %tt1528.i, align 4
  %975 = load i32, i32* %l.i, align 4
  %xor1534.i = xor i32 %975, %974
  store i32 %xor1534.i, i32* %l.i, align 4
  %976 = load i32, i32* %tt1528.i, align 4
  %shl1535.i = shl i32 %976, 1
  %977 = load i32, i32* %r.i, align 4
  %xor1536.i = xor i32 %977, %shl1535.i
  store i32 %xor1536.i, i32* %r.i, align 4
  %978 = load i32, i32* %l.i, align 4
  %shr1537.i = lshr i32 %978, 8
  %979 = load i32, i32* %r.i, align 4
  %xor1538.i = xor i32 %shr1537.i, %979
  %conv1539.i = zext i32 %xor1538.i to i64
  %and1540.i = and i64 %conv1539.i, 16711935
  %conv1541.i = trunc i64 %and1540.i to i32
  store i32 %conv1541.i, i32* %tt1528.i, align 4
  %980 = load i32, i32* %tt1528.i, align 4
  %981 = load i32, i32* %r.i, align 4
  %xor1542.i = xor i32 %981, %980
  store i32 %xor1542.i, i32* %r.i, align 4
  %982 = load i32, i32* %tt1528.i, align 4
  %shl1543.i = shl i32 %982, 8
  %983 = load i32, i32* %l.i, align 4
  %xor1544.i = xor i32 %983, %shl1543.i
  store i32 %xor1544.i, i32* %l.i, align 4
  %984 = load i32, i32* %r.i, align 4
  %shr1545.i = lshr i32 %984, 2
  %985 = load i32, i32* %l.i, align 4
  %xor1546.i = xor i32 %shr1545.i, %985
  %conv1547.i = zext i32 %xor1546.i to i64
  %and1548.i = and i64 %conv1547.i, 858993459
  %conv1549.i = trunc i64 %and1548.i to i32
  store i32 %conv1549.i, i32* %tt1528.i, align 4
  %986 = load i32, i32* %tt1528.i, align 4
  %987 = load i32, i32* %l.i, align 4
  %xor1550.i = xor i32 %987, %986
  store i32 %xor1550.i, i32* %l.i, align 4
  %988 = load i32, i32* %tt1528.i, align 4
  %shl1551.i = shl i32 %988, 2
  %989 = load i32, i32* %r.i, align 4
  %xor1552.i = xor i32 %989, %shl1551.i
  store i32 %xor1552.i, i32* %r.i, align 4
  %990 = load i32, i32* %l.i, align 4
  %shr1553.i = lshr i32 %990, 16
  %991 = load i32, i32* %r.i, align 4
  %xor1554.i = xor i32 %shr1553.i, %991
  %conv1555.i = zext i32 %xor1554.i to i64
  %and1556.i = and i64 %conv1555.i, 65535
  %conv1557.i = trunc i64 %and1556.i to i32
  store i32 %conv1557.i, i32* %tt1528.i, align 4
  %992 = load i32, i32* %tt1528.i, align 4
  %993 = load i32, i32* %r.i, align 4
  %xor1558.i = xor i32 %993, %992
  store i32 %xor1558.i, i32* %r.i, align 4
  %994 = load i32, i32* %tt1528.i, align 4
  %shl1559.i = shl i32 %994, 16
  %995 = load i32, i32* %l.i, align 4
  %xor1560.i = xor i32 %995, %shl1559.i
  store i32 %xor1560.i, i32* %l.i, align 4
  %996 = load i32, i32* %r.i, align 4
  %shr1561.i = lshr i32 %996, 4
  %997 = load i32, i32* %l.i, align 4
  %xor1562.i = xor i32 %shr1561.i, %997
  %conv1563.i = zext i32 %xor1562.i to i64
  %and1564.i = and i64 %conv1563.i, 252645135
  %conv1565.i = trunc i64 %and1564.i to i32
  store i32 %conv1565.i, i32* %tt1528.i, align 4
  %998 = load i32, i32* %tt1528.i, align 4
  %999 = load i32, i32* %l.i, align 4
  %xor1566.i = xor i32 %999, %998
  store i32 %xor1566.i, i32* %l.i, align 4
  %1000 = load i32, i32* %tt1528.i, align 4
  %shl1567.i = shl i32 %1000, 4
  %1001 = load i32, i32* %r.i, align 4
  %xor1568.i = xor i32 %1001, %shl1567.i
  store i32 %xor1568.i, i32* %r.i, align 4
  %1002 = load i32, i32* %l.i, align 4
  %1003 = load i32*, i32** %data.addr.i, align 8
  store i32 %1002, i32* %1003, align 4
  %1004 = load i32, i32* %r.i, align 4
  %1005 = load i32*, i32** %data.addr.i, align 8
  %arrayidx1570.i = getelementptr inbounds i32, i32* %1005, i64 1
  store i32 %1004, i32* %arrayidx1570.i, align 4
  store i32 0, i32* %u.i, align 4
  store i32 0, i32* %t.i, align 4
  store i32 0, i32* %r.i, align 4
  store i32 0, i32* %l.i, align 4
  %arrayidx57 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %1006 = load i32, i32* %arrayidx57, align 4
  store i32 %1006, i32* %tout0, align 4
  %1007 = load i32, i32* %tout0, align 4
  %and = and i32 %1007, 255
  %conv58 = trunc i32 %and to i8
  %1008 = load i8*, i8** %out.addr, align 8
  %incdec.ptr59 = getelementptr inbounds i8, i8* %1008, i32 1
  store i8* %incdec.ptr59, i8** %out.addr, align 8
  store i8 %conv58, i8* %1008, align 1
  %1009 = load i32, i32* %tout0, align 4
  %shr = lshr i32 %1009, 8
  %and60 = and i32 %shr, 255
  %conv61 = trunc i32 %and60 to i8
  %1010 = load i8*, i8** %out.addr, align 8
  %incdec.ptr62 = getelementptr inbounds i8, i8* %1010, i32 1
  store i8* %incdec.ptr62, i8** %out.addr, align 8
  store i8 %conv61, i8* %1010, align 1
  %1011 = load i32, i32* %tout0, align 4
  %shr63 = lshr i32 %1011, 16
  %and64 = and i32 %shr63, 255
  %conv65 = trunc i32 %and64 to i8
  %1012 = load i8*, i8** %out.addr, align 8
  %incdec.ptr66 = getelementptr inbounds i8, i8* %1012, i32 1
  store i8* %incdec.ptr66, i8** %out.addr, align 8
  store i8 %conv65, i8* %1012, align 1
  %1013 = load i32, i32* %tout0, align 4
  %shr67 = lshr i32 %1013, 24
  %and68 = and i32 %shr67, 255
  %conv69 = trunc i32 %and68 to i8
  %1014 = load i8*, i8** %out.addr, align 8
  %incdec.ptr70 = getelementptr inbounds i8, i8* %1014, i32 1
  store i8* %incdec.ptr70, i8** %out.addr, align 8
  store i8 %conv69, i8* %1014, align 1
  %arrayidx71 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  %1015 = load i32, i32* %arrayidx71, align 4
  store i32 %1015, i32* %tout1, align 4
  %1016 = load i32, i32* %tout1, align 4
  %and72 = and i32 %1016, 255
  %conv73 = trunc i32 %and72 to i8
  %1017 = load i8*, i8** %out.addr, align 8
  %incdec.ptr74 = getelementptr inbounds i8, i8* %1017, i32 1
  store i8* %incdec.ptr74, i8** %out.addr, align 8
  store i8 %conv73, i8* %1017, align 1
  %1018 = load i32, i32* %tout1, align 4
  %shr75 = lshr i32 %1018, 8
  %and76 = and i32 %shr75, 255
  %conv77 = trunc i32 %and76 to i8
  %1019 = load i8*, i8** %out.addr, align 8
  %incdec.ptr78 = getelementptr inbounds i8, i8* %1019, i32 1
  store i8* %incdec.ptr78, i8** %out.addr, align 8
  store i8 %conv77, i8* %1019, align 1
  %1020 = load i32, i32* %tout1, align 4
  %shr79 = lshr i32 %1020, 16
  %and80 = and i32 %shr79, 255
  %conv81 = trunc i32 %and80 to i8
  %1021 = load i8*, i8** %out.addr, align 8
  %incdec.ptr82 = getelementptr inbounds i8, i8* %1021, i32 1
  store i8* %incdec.ptr82, i8** %out.addr, align 8
  store i8 %conv81, i8* %1021, align 1
  %1022 = load i32, i32* %tout1, align 4
  %shr83 = lshr i32 %1022, 24
  %and84 = and i32 %shr83, 255
  %conv85 = trunc i32 %and84 to i8
  %1023 = load i8*, i8** %out.addr, align 8
  %incdec.ptr86 = getelementptr inbounds i8, i8* %1023, i32 1
  store i8* %incdec.ptr86, i8** %out.addr, align 8
  store i8 %conv85, i8* %1023, align 1
  br label %for.inc

for.inc:                                          ; preds = %DES_encrypt1.exit
  %1024 = load i64, i64* %l, align 8
  %sub87 = sub nsw i64 %1024, 8
  store i64 %sub87, i64* %l, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %1025 = load i64, i64* %l, align 8
  %cmp88 = icmp ne i64 %1025, -8
  br i1 %cmp88, label %if.then90, label %if.end

if.then90:                                        ; preds = %for.end
  %1026 = load i64, i64* %l, align 8
  %add = add nsw i64 %1026, 8
  %1027 = load i8*, i8** %in.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %1027, i64 %add
  store i8* %add.ptr, i8** %in.addr, align 8
  store i32 0, i32* %tin1, align 4
  store i32 0, i32* %tin0, align 4
  %1028 = load i64, i64* %l, align 8
  %add91 = add nsw i64 %1028, 8
  switch i64 %add91, label %sw.epilog [
    i64 8, label %sw.bb
    i64 7, label %sw.bb95
    i64 6, label %sw.bb100
    i64 5, label %sw.bb105
    i64 4, label %sw.bb109
    i64 3, label %sw.bb113
    i64 2, label %sw.bb118
    i64 1, label %sw.bb123
  ]

sw.bb:                                            ; preds = %if.then90
  %1029 = load i8*, i8** %in.addr, align 8
  %incdec.ptr92 = getelementptr inbounds i8, i8* %1029, i32 -1
  store i8* %incdec.ptr92, i8** %in.addr, align 8
  %1030 = load i8, i8* %incdec.ptr92, align 1
  %conv93 = zext i8 %1030 to i32
  %shl94 = shl i32 %conv93, 24
  store i32 %shl94, i32* %tin1, align 4
  br label %sw.bb95

sw.bb95:                                          ; preds = %if.then90, %sw.bb
  %1031 = load i8*, i8** %in.addr, align 8
  %incdec.ptr96 = getelementptr inbounds i8, i8* %1031, i32 -1
  store i8* %incdec.ptr96, i8** %in.addr, align 8
  %1032 = load i8, i8* %incdec.ptr96, align 1
  %conv97 = zext i8 %1032 to i32
  %shl98 = shl i32 %conv97, 16
  %1033 = load i32, i32* %tin1, align 4
  %or99 = or i32 %1033, %shl98
  store i32 %or99, i32* %tin1, align 4
  br label %sw.bb100

sw.bb100:                                         ; preds = %if.then90, %sw.bb95
  %1034 = load i8*, i8** %in.addr, align 8
  %incdec.ptr101 = getelementptr inbounds i8, i8* %1034, i32 -1
  store i8* %incdec.ptr101, i8** %in.addr, align 8
  %1035 = load i8, i8* %incdec.ptr101, align 1
  %conv102 = zext i8 %1035 to i32
  %shl103 = shl i32 %conv102, 8
  %1036 = load i32, i32* %tin1, align 4
  %or104 = or i32 %1036, %shl103
  store i32 %or104, i32* %tin1, align 4
  br label %sw.bb105

sw.bb105:                                         ; preds = %if.then90, %sw.bb100
  %1037 = load i8*, i8** %in.addr, align 8
  %incdec.ptr106 = getelementptr inbounds i8, i8* %1037, i32 -1
  store i8* %incdec.ptr106, i8** %in.addr, align 8
  %1038 = load i8, i8* %incdec.ptr106, align 1
  %conv107 = zext i8 %1038 to i32
  %1039 = load i32, i32* %tin1, align 4
  %or108 = or i32 %1039, %conv107
  store i32 %or108, i32* %tin1, align 4
  br label %sw.bb109

sw.bb109:                                         ; preds = %if.then90, %sw.bb105
  %1040 = load i8*, i8** %in.addr, align 8
  %incdec.ptr110 = getelementptr inbounds i8, i8* %1040, i32 -1
  store i8* %incdec.ptr110, i8** %in.addr, align 8
  %1041 = load i8, i8* %incdec.ptr110, align 1
  %conv111 = zext i8 %1041 to i32
  %shl112 = shl i32 %conv111, 24
  store i32 %shl112, i32* %tin0, align 4
  br label %sw.bb113

sw.bb113:                                         ; preds = %if.then90, %sw.bb109
  %1042 = load i8*, i8** %in.addr, align 8
  %incdec.ptr114 = getelementptr inbounds i8, i8* %1042, i32 -1
  store i8* %incdec.ptr114, i8** %in.addr, align 8
  %1043 = load i8, i8* %incdec.ptr114, align 1
  %conv115 = zext i8 %1043 to i32
  %shl116 = shl i32 %conv115, 16
  %1044 = load i32, i32* %tin0, align 4
  %or117 = or i32 %1044, %shl116
  store i32 %or117, i32* %tin0, align 4
  br label %sw.bb118

sw.bb118:                                         ; preds = %if.then90, %sw.bb113
  %1045 = load i8*, i8** %in.addr, align 8
  %incdec.ptr119 = getelementptr inbounds i8, i8* %1045, i32 -1
  store i8* %incdec.ptr119, i8** %in.addr, align 8
  %1046 = load i8, i8* %incdec.ptr119, align 1
  %conv120 = zext i8 %1046 to i32
  %shl121 = shl i32 %conv120, 8
  %1047 = load i32, i32* %tin0, align 4
  %or122 = or i32 %1047, %shl121
  store i32 %or122, i32* %tin0, align 4
  br label %sw.bb123

sw.bb123:                                         ; preds = %if.then90, %sw.bb118
  %1048 = load i8*, i8** %in.addr, align 8
  %incdec.ptr124 = getelementptr inbounds i8, i8* %1048, i32 -1
  store i8* %incdec.ptr124, i8** %in.addr, align 8
  %1049 = load i8, i8* %incdec.ptr124, align 1
  %conv125 = zext i8 %1049 to i32
  %1050 = load i32, i32* %tin0, align 4
  %or126 = or i32 %1050, %conv125
  store i32 %or126, i32* %tin0, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb123, %if.then90
  %1051 = load i32, i32* %tout0, align 4
  %1052 = load i32, i32* %tin0, align 4
  %xor127 = xor i32 %1052, %1051
  store i32 %xor127, i32* %tin0, align 4
  %1053 = load i32, i32* %tin0, align 4
  %arrayidx128 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %1053, i32* %arrayidx128, align 4
  %1054 = load i32, i32* %tout1, align 4
  %1055 = load i32, i32* %tin1, align 4
  %xor129 = xor i32 %1055, %1054
  store i32 %xor129, i32* %tin1, align 4
  %1056 = load i32, i32* %tin1, align 4
  %arrayidx130 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %1056, i32* %arrayidx130, align 4
  %arraydecay131 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %1057 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8
  store i32* %arraydecay131, i32** %data.addr.i411, align 8
  store %struct.DES_ks* %1057, %struct.DES_ks** %ks.addr.i412, align 8
  store i32 1, i32* %enc.addr.i413, align 4
  %1058 = load i32*, i32** %data.addr.i411, align 8
  %1059 = load i32, i32* %1058, align 4
  store i32 %1059, i32* %r.i415, align 4
  %1060 = load i32*, i32** %data.addr.i411, align 8
  %arrayidx1.i493 = getelementptr inbounds i32, i32* %1060, i64 1
  %1061 = load i32, i32* %arrayidx1.i493, align 4
  store i32 %1061, i32* %l.i414, align 4
  %1062 = load i32, i32* %l.i414, align 4
  %shr.i494 = lshr i32 %1062, 4
  %1063 = load i32, i32* %r.i415, align 4
  %xor.i495 = xor i32 %shr.i494, %1063
  %conv.i496 = zext i32 %xor.i495 to i64
  %and.i497 = and i64 %conv.i496, 252645135
  %conv2.i498 = trunc i64 %and.i497 to i32
  store i32 %conv2.i498, i32* %tt.i419, align 4
  %1064 = load i32, i32* %tt.i419, align 4
  %1065 = load i32, i32* %r.i415, align 4
  %xor3.i499 = xor i32 %1065, %1064
  store i32 %xor3.i499, i32* %r.i415, align 4
  %1066 = load i32, i32* %tt.i419, align 4
  %shl.i500 = shl i32 %1066, 4
  %1067 = load i32, i32* %l.i414, align 4
  %xor4.i501 = xor i32 %1067, %shl.i500
  store i32 %xor4.i501, i32* %l.i414, align 4
  %1068 = load i32, i32* %r.i415, align 4
  %shr5.i502 = lshr i32 %1068, 16
  %1069 = load i32, i32* %l.i414, align 4
  %xor6.i503 = xor i32 %shr5.i502, %1069
  %conv7.i504 = zext i32 %xor6.i503 to i64
  %and8.i505 = and i64 %conv7.i504, 65535
  %conv9.i506 = trunc i64 %and8.i505 to i32
  store i32 %conv9.i506, i32* %tt.i419, align 4
  %1070 = load i32, i32* %tt.i419, align 4
  %1071 = load i32, i32* %l.i414, align 4
  %xor10.i507 = xor i32 %1071, %1070
  store i32 %xor10.i507, i32* %l.i414, align 4
  %1072 = load i32, i32* %tt.i419, align 4
  %shl11.i508 = shl i32 %1072, 16
  %1073 = load i32, i32* %r.i415, align 4
  %xor12.i509 = xor i32 %1073, %shl11.i508
  store i32 %xor12.i509, i32* %r.i415, align 4
  %1074 = load i32, i32* %l.i414, align 4
  %shr13.i510 = lshr i32 %1074, 2
  %1075 = load i32, i32* %r.i415, align 4
  %xor14.i511 = xor i32 %shr13.i510, %1075
  %conv15.i512 = zext i32 %xor14.i511 to i64
  %and16.i513 = and i64 %conv15.i512, 858993459
  %conv17.i514 = trunc i64 %and16.i513 to i32
  store i32 %conv17.i514, i32* %tt.i419, align 4
  %1076 = load i32, i32* %tt.i419, align 4
  %1077 = load i32, i32* %r.i415, align 4
  %xor18.i515 = xor i32 %1077, %1076
  store i32 %xor18.i515, i32* %r.i415, align 4
  %1078 = load i32, i32* %tt.i419, align 4
  %shl19.i516 = shl i32 %1078, 2
  %1079 = load i32, i32* %l.i414, align 4
  %xor20.i517 = xor i32 %1079, %shl19.i516
  store i32 %xor20.i517, i32* %l.i414, align 4
  %1080 = load i32, i32* %r.i415, align 4
  %shr21.i518 = lshr i32 %1080, 8
  %1081 = load i32, i32* %l.i414, align 4
  %xor22.i519 = xor i32 %shr21.i518, %1081
  %conv23.i520 = zext i32 %xor22.i519 to i64
  %and24.i521 = and i64 %conv23.i520, 16711935
  %conv25.i522 = trunc i64 %and24.i521 to i32
  store i32 %conv25.i522, i32* %tt.i419, align 4
  %1082 = load i32, i32* %tt.i419, align 4
  %1083 = load i32, i32* %l.i414, align 4
  %xor26.i523 = xor i32 %1083, %1082
  store i32 %xor26.i523, i32* %l.i414, align 4
  %1084 = load i32, i32* %tt.i419, align 4
  %shl27.i524 = shl i32 %1084, 8
  %1085 = load i32, i32* %r.i415, align 4
  %xor28.i525 = xor i32 %1085, %shl27.i524
  store i32 %xor28.i525, i32* %r.i415, align 4
  %1086 = load i32, i32* %l.i414, align 4
  %shr29.i526 = lshr i32 %1086, 1
  %1087 = load i32, i32* %r.i415, align 4
  %xor30.i527 = xor i32 %shr29.i526, %1087
  %conv31.i528 = zext i32 %xor30.i527 to i64
  %and32.i529 = and i64 %conv31.i528, 1431655765
  %conv33.i530 = trunc i64 %and32.i529 to i32
  store i32 %conv33.i530, i32* %tt.i419, align 4
  %1088 = load i32, i32* %tt.i419, align 4
  %1089 = load i32, i32* %r.i415, align 4
  %xor34.i531 = xor i32 %1089, %1088
  store i32 %xor34.i531, i32* %r.i415, align 4
  %1090 = load i32, i32* %tt.i419, align 4
  %shl35.i532 = shl i32 %1090, 1
  %1091 = load i32, i32* %l.i414, align 4
  %xor36.i533 = xor i32 %1091, %shl35.i532
  store i32 %xor36.i533, i32* %l.i414, align 4
  %1092 = load i32, i32* %r.i415, align 4
  %1093 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %1092) #5, !srcloc !2
  store i32 %1093, i32* %ret.i420, align 4
  %1094 = load i32, i32* %ret.i420, align 4
  store i32 %1094, i32* %tmp.i421, align 4
  %1095 = load i32, i32* %tmp.i421, align 4
  %conv37.i534 = zext i32 %1095 to i64
  %and38.i535 = and i64 %conv37.i534, 4294967295
  %conv39.i536 = trunc i64 %and38.i535 to i32
  store i32 %conv39.i536, i32* %r.i415, align 4
  %1096 = load i32, i32* %l.i414, align 4
  %1097 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %1096) #5, !srcloc !3
  store i32 %1097, i32* %ret40.i422, align 4
  %1098 = load i32, i32* %ret40.i422, align 4
  store i32 %1098, i32* %tmp41.i423, align 4
  %1099 = load i32, i32* %tmp41.i423, align 4
  %conv42.i537 = zext i32 %1099 to i64
  %and43.i538 = and i64 %conv42.i537, 4294967295
  %conv44.i539 = trunc i64 %and43.i538 to i32
  store i32 %conv44.i539, i32* %l.i414, align 4
  %1100 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i412, align 8
  %ks45.i540 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %1100, i32 0, i32 0
  %arraydecay.i541 = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i540, i64 0, i64 0
  %deslong.i542 = bitcast %union.anon* %arraydecay.i541 to [2 x i32]*
  %arraydecay46.i543 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i542, i64 0, i64 0
  store i32* %arraydecay46.i543, i32** %s.i418, align 8
  %1101 = load i32, i32* %enc.addr.i413, align 4
  %tobool.i544 = icmp ne i32 %1101, 0
  br i1 %tobool.i544, label %if.then.i1216, label %if.else.i1888

if.then.i1216:                                    ; preds = %sw.epilog
  %1102 = load i32, i32* %r.i415, align 4
  %1103 = load i32*, i32** %s.i418, align 8
  %1104 = load i32, i32* %1103, align 4
  %xor48.i545 = xor i32 %1102, %1104
  store i32 %xor48.i545, i32* %u.i417, align 4
  %1105 = load i32, i32* %r.i415, align 4
  %1106 = load i32*, i32** %s.i418, align 8
  %arrayidx49.i546 = getelementptr inbounds i32, i32* %1106, i64 1
  %1107 = load i32, i32* %arrayidx49.i546, align 4
  %xor50.i547 = xor i32 %1105, %1107
  store i32 %xor50.i547, i32* %t.i416, align 4
  %1108 = load i32, i32* %t.i416, align 4
  %1109 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1108) #5, !srcloc !4
  store i32 %1109, i32* %ret51.i424, align 4
  %1110 = load i32, i32* %ret51.i424, align 4
  store i32 %1110, i32* %tmp52.i425, align 4
  %1111 = load i32, i32* %tmp52.i425, align 4
  store i32 %1111, i32* %t.i416, align 4
  %1112 = load i32, i32* %u.i417, align 4
  %shr53.i548 = lshr i32 %1112, 2
  %and54.i549 = and i32 %shr53.i548, 63
  %idxprom.i550 = zext i32 %and54.i549 to i64
  %arrayidx55.i551 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i550
  %1113 = load i32, i32* %arrayidx55.i551, align 4
  %1114 = load i32, i32* %u.i417, align 4
  %shr56.i552 = lshr i32 %1114, 10
  %and57.i553 = and i32 %shr56.i552, 63
  %idxprom58.i554 = zext i32 %and57.i553 to i64
  %arrayidx59.i555 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i554
  %1115 = load i32, i32* %arrayidx59.i555, align 4
  %xor60.i556 = xor i32 %1113, %1115
  %1116 = load i32, i32* %u.i417, align 4
  %shr61.i557 = lshr i32 %1116, 18
  %and62.i558 = and i32 %shr61.i557, 63
  %idxprom63.i559 = zext i32 %and62.i558 to i64
  %arrayidx64.i560 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i559
  %1117 = load i32, i32* %arrayidx64.i560, align 4
  %xor65.i561 = xor i32 %xor60.i556, %1117
  %1118 = load i32, i32* %u.i417, align 4
  %shr66.i562 = lshr i32 %1118, 26
  %idxprom68.i563 = zext i32 %shr66.i562 to i64
  %arrayidx69.i564 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i563
  %1119 = load i32, i32* %arrayidx69.i564, align 4
  %xor70.i565 = xor i32 %xor65.i561, %1119
  %1120 = load i32, i32* %t.i416, align 4
  %shr71.i566 = lshr i32 %1120, 2
  %and72.i567 = and i32 %shr71.i566, 63
  %idxprom73.i568 = zext i32 %and72.i567 to i64
  %arrayidx74.i569 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i568
  %1121 = load i32, i32* %arrayidx74.i569, align 4
  %xor75.i570 = xor i32 %xor70.i565, %1121
  %1122 = load i32, i32* %t.i416, align 4
  %shr76.i571 = lshr i32 %1122, 10
  %and77.i572 = and i32 %shr76.i571, 63
  %idxprom78.i573 = zext i32 %and77.i572 to i64
  %arrayidx79.i574 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i573
  %1123 = load i32, i32* %arrayidx79.i574, align 4
  %xor80.i575 = xor i32 %xor75.i570, %1123
  %1124 = load i32, i32* %t.i416, align 4
  %shr81.i576 = lshr i32 %1124, 18
  %and82.i577 = and i32 %shr81.i576, 63
  %idxprom83.i578 = zext i32 %and82.i577 to i64
  %arrayidx84.i579 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i578
  %1125 = load i32, i32* %arrayidx84.i579, align 4
  %xor85.i580 = xor i32 %xor80.i575, %1125
  %1126 = load i32, i32* %t.i416, align 4
  %shr86.i581 = lshr i32 %1126, 26
  %idxprom88.i582 = zext i32 %shr86.i581 to i64
  %arrayidx89.i583 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i582
  %1127 = load i32, i32* %arrayidx89.i583, align 4
  %xor90.i584 = xor i32 %xor85.i580, %1127
  %1128 = load i32, i32* %l.i414, align 4
  %xor91.i585 = xor i32 %1128, %xor90.i584
  store i32 %xor91.i585, i32* %l.i414, align 4
  %1129 = load i32, i32* %l.i414, align 4
  %1130 = load i32*, i32** %s.i418, align 8
  %arrayidx92.i586 = getelementptr inbounds i32, i32* %1130, i64 2
  %1131 = load i32, i32* %arrayidx92.i586, align 4
  %xor93.i587 = xor i32 %1129, %1131
  store i32 %xor93.i587, i32* %u.i417, align 4
  %1132 = load i32, i32* %l.i414, align 4
  %1133 = load i32*, i32** %s.i418, align 8
  %arrayidx94.i588 = getelementptr inbounds i32, i32* %1133, i64 3
  %1134 = load i32, i32* %arrayidx94.i588, align 4
  %xor95.i589 = xor i32 %1132, %1134
  store i32 %xor95.i589, i32* %t.i416, align 4
  %1135 = load i32, i32* %t.i416, align 4
  %1136 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1135) #5, !srcloc !5
  store i32 %1136, i32* %ret96.i426, align 4
  %1137 = load i32, i32* %ret96.i426, align 4
  store i32 %1137, i32* %tmp97.i427, align 4
  %1138 = load i32, i32* %tmp97.i427, align 4
  store i32 %1138, i32* %t.i416, align 4
  %1139 = load i32, i32* %u.i417, align 4
  %shr98.i590 = lshr i32 %1139, 2
  %and99.i591 = and i32 %shr98.i590, 63
  %idxprom100.i592 = zext i32 %and99.i591 to i64
  %arrayidx101.i593 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i592
  %1140 = load i32, i32* %arrayidx101.i593, align 4
  %1141 = load i32, i32* %u.i417, align 4
  %shr102.i594 = lshr i32 %1141, 10
  %and103.i595 = and i32 %shr102.i594, 63
  %idxprom104.i596 = zext i32 %and103.i595 to i64
  %arrayidx105.i597 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i596
  %1142 = load i32, i32* %arrayidx105.i597, align 4
  %xor106.i598 = xor i32 %1140, %1142
  %1143 = load i32, i32* %u.i417, align 4
  %shr107.i599 = lshr i32 %1143, 18
  %and108.i600 = and i32 %shr107.i599, 63
  %idxprom109.i601 = zext i32 %and108.i600 to i64
  %arrayidx110.i602 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i601
  %1144 = load i32, i32* %arrayidx110.i602, align 4
  %xor111.i603 = xor i32 %xor106.i598, %1144
  %1145 = load i32, i32* %u.i417, align 4
  %shr112.i604 = lshr i32 %1145, 26
  %idxprom114.i605 = zext i32 %shr112.i604 to i64
  %arrayidx115.i606 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i605
  %1146 = load i32, i32* %arrayidx115.i606, align 4
  %xor116.i607 = xor i32 %xor111.i603, %1146
  %1147 = load i32, i32* %t.i416, align 4
  %shr117.i608 = lshr i32 %1147, 2
  %and118.i609 = and i32 %shr117.i608, 63
  %idxprom119.i610 = zext i32 %and118.i609 to i64
  %arrayidx120.i611 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i610
  %1148 = load i32, i32* %arrayidx120.i611, align 4
  %xor121.i612 = xor i32 %xor116.i607, %1148
  %1149 = load i32, i32* %t.i416, align 4
  %shr122.i613 = lshr i32 %1149, 10
  %and123.i614 = and i32 %shr122.i613, 63
  %idxprom124.i615 = zext i32 %and123.i614 to i64
  %arrayidx125.i616 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i615
  %1150 = load i32, i32* %arrayidx125.i616, align 4
  %xor126.i617 = xor i32 %xor121.i612, %1150
  %1151 = load i32, i32* %t.i416, align 4
  %shr127.i618 = lshr i32 %1151, 18
  %and128.i619 = and i32 %shr127.i618, 63
  %idxprom129.i620 = zext i32 %and128.i619 to i64
  %arrayidx130.i621 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i620
  %1152 = load i32, i32* %arrayidx130.i621, align 4
  %xor131.i622 = xor i32 %xor126.i617, %1152
  %1153 = load i32, i32* %t.i416, align 4
  %shr132.i623 = lshr i32 %1153, 26
  %idxprom134.i624 = zext i32 %shr132.i623 to i64
  %arrayidx135.i625 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i624
  %1154 = load i32, i32* %arrayidx135.i625, align 4
  %xor136.i626 = xor i32 %xor131.i622, %1154
  %1155 = load i32, i32* %r.i415, align 4
  %xor137.i627 = xor i32 %1155, %xor136.i626
  store i32 %xor137.i627, i32* %r.i415, align 4
  %1156 = load i32, i32* %r.i415, align 4
  %1157 = load i32*, i32** %s.i418, align 8
  %arrayidx138.i628 = getelementptr inbounds i32, i32* %1157, i64 4
  %1158 = load i32, i32* %arrayidx138.i628, align 4
  %xor139.i629 = xor i32 %1156, %1158
  store i32 %xor139.i629, i32* %u.i417, align 4
  %1159 = load i32, i32* %r.i415, align 4
  %1160 = load i32*, i32** %s.i418, align 8
  %arrayidx140.i630 = getelementptr inbounds i32, i32* %1160, i64 5
  %1161 = load i32, i32* %arrayidx140.i630, align 4
  %xor141.i631 = xor i32 %1159, %1161
  store i32 %xor141.i631, i32* %t.i416, align 4
  %1162 = load i32, i32* %t.i416, align 4
  %1163 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1162) #5, !srcloc !6
  store i32 %1163, i32* %ret142.i428, align 4
  %1164 = load i32, i32* %ret142.i428, align 4
  store i32 %1164, i32* %tmp143.i429, align 4
  %1165 = load i32, i32* %tmp143.i429, align 4
  store i32 %1165, i32* %t.i416, align 4
  %1166 = load i32, i32* %u.i417, align 4
  %shr144.i632 = lshr i32 %1166, 2
  %and145.i633 = and i32 %shr144.i632, 63
  %idxprom146.i634 = zext i32 %and145.i633 to i64
  %arrayidx147.i635 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i634
  %1167 = load i32, i32* %arrayidx147.i635, align 4
  %1168 = load i32, i32* %u.i417, align 4
  %shr148.i636 = lshr i32 %1168, 10
  %and149.i637 = and i32 %shr148.i636, 63
  %idxprom150.i638 = zext i32 %and149.i637 to i64
  %arrayidx151.i639 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i638
  %1169 = load i32, i32* %arrayidx151.i639, align 4
  %xor152.i640 = xor i32 %1167, %1169
  %1170 = load i32, i32* %u.i417, align 4
  %shr153.i641 = lshr i32 %1170, 18
  %and154.i642 = and i32 %shr153.i641, 63
  %idxprom155.i643 = zext i32 %and154.i642 to i64
  %arrayidx156.i644 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i643
  %1171 = load i32, i32* %arrayidx156.i644, align 4
  %xor157.i645 = xor i32 %xor152.i640, %1171
  %1172 = load i32, i32* %u.i417, align 4
  %shr158.i646 = lshr i32 %1172, 26
  %idxprom160.i647 = zext i32 %shr158.i646 to i64
  %arrayidx161.i648 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i647
  %1173 = load i32, i32* %arrayidx161.i648, align 4
  %xor162.i649 = xor i32 %xor157.i645, %1173
  %1174 = load i32, i32* %t.i416, align 4
  %shr163.i650 = lshr i32 %1174, 2
  %and164.i651 = and i32 %shr163.i650, 63
  %idxprom165.i652 = zext i32 %and164.i651 to i64
  %arrayidx166.i653 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i652
  %1175 = load i32, i32* %arrayidx166.i653, align 4
  %xor167.i654 = xor i32 %xor162.i649, %1175
  %1176 = load i32, i32* %t.i416, align 4
  %shr168.i655 = lshr i32 %1176, 10
  %and169.i656 = and i32 %shr168.i655, 63
  %idxprom170.i657 = zext i32 %and169.i656 to i64
  %arrayidx171.i658 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i657
  %1177 = load i32, i32* %arrayidx171.i658, align 4
  %xor172.i659 = xor i32 %xor167.i654, %1177
  %1178 = load i32, i32* %t.i416, align 4
  %shr173.i660 = lshr i32 %1178, 18
  %and174.i661 = and i32 %shr173.i660, 63
  %idxprom175.i662 = zext i32 %and174.i661 to i64
  %arrayidx176.i663 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i662
  %1179 = load i32, i32* %arrayidx176.i663, align 4
  %xor177.i664 = xor i32 %xor172.i659, %1179
  %1180 = load i32, i32* %t.i416, align 4
  %shr178.i665 = lshr i32 %1180, 26
  %idxprom180.i666 = zext i32 %shr178.i665 to i64
  %arrayidx181.i667 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i666
  %1181 = load i32, i32* %arrayidx181.i667, align 4
  %xor182.i668 = xor i32 %xor177.i664, %1181
  %1182 = load i32, i32* %l.i414, align 4
  %xor183.i669 = xor i32 %1182, %xor182.i668
  store i32 %xor183.i669, i32* %l.i414, align 4
  %1183 = load i32, i32* %l.i414, align 4
  %1184 = load i32*, i32** %s.i418, align 8
  %arrayidx184.i670 = getelementptr inbounds i32, i32* %1184, i64 6
  %1185 = load i32, i32* %arrayidx184.i670, align 4
  %xor185.i671 = xor i32 %1183, %1185
  store i32 %xor185.i671, i32* %u.i417, align 4
  %1186 = load i32, i32* %l.i414, align 4
  %1187 = load i32*, i32** %s.i418, align 8
  %arrayidx186.i672 = getelementptr inbounds i32, i32* %1187, i64 7
  %1188 = load i32, i32* %arrayidx186.i672, align 4
  %xor187.i673 = xor i32 %1186, %1188
  store i32 %xor187.i673, i32* %t.i416, align 4
  %1189 = load i32, i32* %t.i416, align 4
  %1190 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1189) #5, !srcloc !7
  store i32 %1190, i32* %ret188.i430, align 4
  %1191 = load i32, i32* %ret188.i430, align 4
  store i32 %1191, i32* %tmp189.i431, align 4
  %1192 = load i32, i32* %tmp189.i431, align 4
  store i32 %1192, i32* %t.i416, align 4
  %1193 = load i32, i32* %u.i417, align 4
  %shr190.i674 = lshr i32 %1193, 2
  %and191.i675 = and i32 %shr190.i674, 63
  %idxprom192.i676 = zext i32 %and191.i675 to i64
  %arrayidx193.i677 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i676
  %1194 = load i32, i32* %arrayidx193.i677, align 4
  %1195 = load i32, i32* %u.i417, align 4
  %shr194.i678 = lshr i32 %1195, 10
  %and195.i679 = and i32 %shr194.i678, 63
  %idxprom196.i680 = zext i32 %and195.i679 to i64
  %arrayidx197.i681 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i680
  %1196 = load i32, i32* %arrayidx197.i681, align 4
  %xor198.i682 = xor i32 %1194, %1196
  %1197 = load i32, i32* %u.i417, align 4
  %shr199.i683 = lshr i32 %1197, 18
  %and200.i684 = and i32 %shr199.i683, 63
  %idxprom201.i685 = zext i32 %and200.i684 to i64
  %arrayidx202.i686 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i685
  %1198 = load i32, i32* %arrayidx202.i686, align 4
  %xor203.i687 = xor i32 %xor198.i682, %1198
  %1199 = load i32, i32* %u.i417, align 4
  %shr204.i688 = lshr i32 %1199, 26
  %idxprom206.i689 = zext i32 %shr204.i688 to i64
  %arrayidx207.i690 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i689
  %1200 = load i32, i32* %arrayidx207.i690, align 4
  %xor208.i691 = xor i32 %xor203.i687, %1200
  %1201 = load i32, i32* %t.i416, align 4
  %shr209.i692 = lshr i32 %1201, 2
  %and210.i693 = and i32 %shr209.i692, 63
  %idxprom211.i694 = zext i32 %and210.i693 to i64
  %arrayidx212.i695 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i694
  %1202 = load i32, i32* %arrayidx212.i695, align 4
  %xor213.i696 = xor i32 %xor208.i691, %1202
  %1203 = load i32, i32* %t.i416, align 4
  %shr214.i697 = lshr i32 %1203, 10
  %and215.i698 = and i32 %shr214.i697, 63
  %idxprom216.i699 = zext i32 %and215.i698 to i64
  %arrayidx217.i700 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i699
  %1204 = load i32, i32* %arrayidx217.i700, align 4
  %xor218.i701 = xor i32 %xor213.i696, %1204
  %1205 = load i32, i32* %t.i416, align 4
  %shr219.i702 = lshr i32 %1205, 18
  %and220.i703 = and i32 %shr219.i702, 63
  %idxprom221.i704 = zext i32 %and220.i703 to i64
  %arrayidx222.i705 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i704
  %1206 = load i32, i32* %arrayidx222.i705, align 4
  %xor223.i706 = xor i32 %xor218.i701, %1206
  %1207 = load i32, i32* %t.i416, align 4
  %shr224.i707 = lshr i32 %1207, 26
  %idxprom226.i708 = zext i32 %shr224.i707 to i64
  %arrayidx227.i709 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i708
  %1208 = load i32, i32* %arrayidx227.i709, align 4
  %xor228.i710 = xor i32 %xor223.i706, %1208
  %1209 = load i32, i32* %r.i415, align 4
  %xor229.i711 = xor i32 %1209, %xor228.i710
  store i32 %xor229.i711, i32* %r.i415, align 4
  %1210 = load i32, i32* %r.i415, align 4
  %1211 = load i32*, i32** %s.i418, align 8
  %arrayidx230.i712 = getelementptr inbounds i32, i32* %1211, i64 8
  %1212 = load i32, i32* %arrayidx230.i712, align 4
  %xor231.i713 = xor i32 %1210, %1212
  store i32 %xor231.i713, i32* %u.i417, align 4
  %1213 = load i32, i32* %r.i415, align 4
  %1214 = load i32*, i32** %s.i418, align 8
  %arrayidx232.i714 = getelementptr inbounds i32, i32* %1214, i64 9
  %1215 = load i32, i32* %arrayidx232.i714, align 4
  %xor233.i715 = xor i32 %1213, %1215
  store i32 %xor233.i715, i32* %t.i416, align 4
  %1216 = load i32, i32* %t.i416, align 4
  %1217 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1216) #5, !srcloc !8
  store i32 %1217, i32* %ret234.i432, align 4
  %1218 = load i32, i32* %ret234.i432, align 4
  store i32 %1218, i32* %tmp235.i433, align 4
  %1219 = load i32, i32* %tmp235.i433, align 4
  store i32 %1219, i32* %t.i416, align 4
  %1220 = load i32, i32* %u.i417, align 4
  %shr236.i716 = lshr i32 %1220, 2
  %and237.i717 = and i32 %shr236.i716, 63
  %idxprom238.i718 = zext i32 %and237.i717 to i64
  %arrayidx239.i719 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i718
  %1221 = load i32, i32* %arrayidx239.i719, align 4
  %1222 = load i32, i32* %u.i417, align 4
  %shr240.i720 = lshr i32 %1222, 10
  %and241.i721 = and i32 %shr240.i720, 63
  %idxprom242.i722 = zext i32 %and241.i721 to i64
  %arrayidx243.i723 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i722
  %1223 = load i32, i32* %arrayidx243.i723, align 4
  %xor244.i724 = xor i32 %1221, %1223
  %1224 = load i32, i32* %u.i417, align 4
  %shr245.i725 = lshr i32 %1224, 18
  %and246.i726 = and i32 %shr245.i725, 63
  %idxprom247.i727 = zext i32 %and246.i726 to i64
  %arrayidx248.i728 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i727
  %1225 = load i32, i32* %arrayidx248.i728, align 4
  %xor249.i729 = xor i32 %xor244.i724, %1225
  %1226 = load i32, i32* %u.i417, align 4
  %shr250.i730 = lshr i32 %1226, 26
  %idxprom252.i731 = zext i32 %shr250.i730 to i64
  %arrayidx253.i732 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i731
  %1227 = load i32, i32* %arrayidx253.i732, align 4
  %xor254.i733 = xor i32 %xor249.i729, %1227
  %1228 = load i32, i32* %t.i416, align 4
  %shr255.i734 = lshr i32 %1228, 2
  %and256.i735 = and i32 %shr255.i734, 63
  %idxprom257.i736 = zext i32 %and256.i735 to i64
  %arrayidx258.i737 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i736
  %1229 = load i32, i32* %arrayidx258.i737, align 4
  %xor259.i738 = xor i32 %xor254.i733, %1229
  %1230 = load i32, i32* %t.i416, align 4
  %shr260.i739 = lshr i32 %1230, 10
  %and261.i740 = and i32 %shr260.i739, 63
  %idxprom262.i741 = zext i32 %and261.i740 to i64
  %arrayidx263.i742 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i741
  %1231 = load i32, i32* %arrayidx263.i742, align 4
  %xor264.i743 = xor i32 %xor259.i738, %1231
  %1232 = load i32, i32* %t.i416, align 4
  %shr265.i744 = lshr i32 %1232, 18
  %and266.i745 = and i32 %shr265.i744, 63
  %idxprom267.i746 = zext i32 %and266.i745 to i64
  %arrayidx268.i747 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i746
  %1233 = load i32, i32* %arrayidx268.i747, align 4
  %xor269.i748 = xor i32 %xor264.i743, %1233
  %1234 = load i32, i32* %t.i416, align 4
  %shr270.i749 = lshr i32 %1234, 26
  %idxprom272.i750 = zext i32 %shr270.i749 to i64
  %arrayidx273.i751 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i750
  %1235 = load i32, i32* %arrayidx273.i751, align 4
  %xor274.i752 = xor i32 %xor269.i748, %1235
  %1236 = load i32, i32* %l.i414, align 4
  %xor275.i753 = xor i32 %1236, %xor274.i752
  store i32 %xor275.i753, i32* %l.i414, align 4
  %1237 = load i32, i32* %l.i414, align 4
  %1238 = load i32*, i32** %s.i418, align 8
  %arrayidx276.i754 = getelementptr inbounds i32, i32* %1238, i64 10
  %1239 = load i32, i32* %arrayidx276.i754, align 4
  %xor277.i755 = xor i32 %1237, %1239
  store i32 %xor277.i755, i32* %u.i417, align 4
  %1240 = load i32, i32* %l.i414, align 4
  %1241 = load i32*, i32** %s.i418, align 8
  %arrayidx278.i756 = getelementptr inbounds i32, i32* %1241, i64 11
  %1242 = load i32, i32* %arrayidx278.i756, align 4
  %xor279.i757 = xor i32 %1240, %1242
  store i32 %xor279.i757, i32* %t.i416, align 4
  %1243 = load i32, i32* %t.i416, align 4
  %1244 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1243) #5, !srcloc !9
  store i32 %1244, i32* %ret280.i434, align 4
  %1245 = load i32, i32* %ret280.i434, align 4
  store i32 %1245, i32* %tmp281.i435, align 4
  %1246 = load i32, i32* %tmp281.i435, align 4
  store i32 %1246, i32* %t.i416, align 4
  %1247 = load i32, i32* %u.i417, align 4
  %shr282.i758 = lshr i32 %1247, 2
  %and283.i759 = and i32 %shr282.i758, 63
  %idxprom284.i760 = zext i32 %and283.i759 to i64
  %arrayidx285.i761 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i760
  %1248 = load i32, i32* %arrayidx285.i761, align 4
  %1249 = load i32, i32* %u.i417, align 4
  %shr286.i762 = lshr i32 %1249, 10
  %and287.i763 = and i32 %shr286.i762, 63
  %idxprom288.i764 = zext i32 %and287.i763 to i64
  %arrayidx289.i765 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i764
  %1250 = load i32, i32* %arrayidx289.i765, align 4
  %xor290.i766 = xor i32 %1248, %1250
  %1251 = load i32, i32* %u.i417, align 4
  %shr291.i767 = lshr i32 %1251, 18
  %and292.i768 = and i32 %shr291.i767, 63
  %idxprom293.i769 = zext i32 %and292.i768 to i64
  %arrayidx294.i770 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i769
  %1252 = load i32, i32* %arrayidx294.i770, align 4
  %xor295.i771 = xor i32 %xor290.i766, %1252
  %1253 = load i32, i32* %u.i417, align 4
  %shr296.i772 = lshr i32 %1253, 26
  %idxprom298.i773 = zext i32 %shr296.i772 to i64
  %arrayidx299.i774 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i773
  %1254 = load i32, i32* %arrayidx299.i774, align 4
  %xor300.i775 = xor i32 %xor295.i771, %1254
  %1255 = load i32, i32* %t.i416, align 4
  %shr301.i776 = lshr i32 %1255, 2
  %and302.i777 = and i32 %shr301.i776, 63
  %idxprom303.i778 = zext i32 %and302.i777 to i64
  %arrayidx304.i779 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i778
  %1256 = load i32, i32* %arrayidx304.i779, align 4
  %xor305.i780 = xor i32 %xor300.i775, %1256
  %1257 = load i32, i32* %t.i416, align 4
  %shr306.i781 = lshr i32 %1257, 10
  %and307.i782 = and i32 %shr306.i781, 63
  %idxprom308.i783 = zext i32 %and307.i782 to i64
  %arrayidx309.i784 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i783
  %1258 = load i32, i32* %arrayidx309.i784, align 4
  %xor310.i785 = xor i32 %xor305.i780, %1258
  %1259 = load i32, i32* %t.i416, align 4
  %shr311.i786 = lshr i32 %1259, 18
  %and312.i787 = and i32 %shr311.i786, 63
  %idxprom313.i788 = zext i32 %and312.i787 to i64
  %arrayidx314.i789 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i788
  %1260 = load i32, i32* %arrayidx314.i789, align 4
  %xor315.i790 = xor i32 %xor310.i785, %1260
  %1261 = load i32, i32* %t.i416, align 4
  %shr316.i791 = lshr i32 %1261, 26
  %idxprom318.i792 = zext i32 %shr316.i791 to i64
  %arrayidx319.i793 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i792
  %1262 = load i32, i32* %arrayidx319.i793, align 4
  %xor320.i794 = xor i32 %xor315.i790, %1262
  %1263 = load i32, i32* %r.i415, align 4
  %xor321.i795 = xor i32 %1263, %xor320.i794
  store i32 %xor321.i795, i32* %r.i415, align 4
  %1264 = load i32, i32* %r.i415, align 4
  %1265 = load i32*, i32** %s.i418, align 8
  %arrayidx322.i796 = getelementptr inbounds i32, i32* %1265, i64 12
  %1266 = load i32, i32* %arrayidx322.i796, align 4
  %xor323.i797 = xor i32 %1264, %1266
  store i32 %xor323.i797, i32* %u.i417, align 4
  %1267 = load i32, i32* %r.i415, align 4
  %1268 = load i32*, i32** %s.i418, align 8
  %arrayidx324.i798 = getelementptr inbounds i32, i32* %1268, i64 13
  %1269 = load i32, i32* %arrayidx324.i798, align 4
  %xor325.i799 = xor i32 %1267, %1269
  store i32 %xor325.i799, i32* %t.i416, align 4
  %1270 = load i32, i32* %t.i416, align 4
  %1271 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1270) #5, !srcloc !10
  store i32 %1271, i32* %ret326.i436, align 4
  %1272 = load i32, i32* %ret326.i436, align 4
  store i32 %1272, i32* %tmp327.i437, align 4
  %1273 = load i32, i32* %tmp327.i437, align 4
  store i32 %1273, i32* %t.i416, align 4
  %1274 = load i32, i32* %u.i417, align 4
  %shr328.i800 = lshr i32 %1274, 2
  %and329.i801 = and i32 %shr328.i800, 63
  %idxprom330.i802 = zext i32 %and329.i801 to i64
  %arrayidx331.i803 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i802
  %1275 = load i32, i32* %arrayidx331.i803, align 4
  %1276 = load i32, i32* %u.i417, align 4
  %shr332.i804 = lshr i32 %1276, 10
  %and333.i805 = and i32 %shr332.i804, 63
  %idxprom334.i806 = zext i32 %and333.i805 to i64
  %arrayidx335.i807 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i806
  %1277 = load i32, i32* %arrayidx335.i807, align 4
  %xor336.i808 = xor i32 %1275, %1277
  %1278 = load i32, i32* %u.i417, align 4
  %shr337.i809 = lshr i32 %1278, 18
  %and338.i810 = and i32 %shr337.i809, 63
  %idxprom339.i811 = zext i32 %and338.i810 to i64
  %arrayidx340.i812 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i811
  %1279 = load i32, i32* %arrayidx340.i812, align 4
  %xor341.i813 = xor i32 %xor336.i808, %1279
  %1280 = load i32, i32* %u.i417, align 4
  %shr342.i814 = lshr i32 %1280, 26
  %idxprom344.i815 = zext i32 %shr342.i814 to i64
  %arrayidx345.i816 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i815
  %1281 = load i32, i32* %arrayidx345.i816, align 4
  %xor346.i817 = xor i32 %xor341.i813, %1281
  %1282 = load i32, i32* %t.i416, align 4
  %shr347.i818 = lshr i32 %1282, 2
  %and348.i819 = and i32 %shr347.i818, 63
  %idxprom349.i820 = zext i32 %and348.i819 to i64
  %arrayidx350.i821 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i820
  %1283 = load i32, i32* %arrayidx350.i821, align 4
  %xor351.i822 = xor i32 %xor346.i817, %1283
  %1284 = load i32, i32* %t.i416, align 4
  %shr352.i823 = lshr i32 %1284, 10
  %and353.i824 = and i32 %shr352.i823, 63
  %idxprom354.i825 = zext i32 %and353.i824 to i64
  %arrayidx355.i826 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i825
  %1285 = load i32, i32* %arrayidx355.i826, align 4
  %xor356.i827 = xor i32 %xor351.i822, %1285
  %1286 = load i32, i32* %t.i416, align 4
  %shr357.i828 = lshr i32 %1286, 18
  %and358.i829 = and i32 %shr357.i828, 63
  %idxprom359.i830 = zext i32 %and358.i829 to i64
  %arrayidx360.i831 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i830
  %1287 = load i32, i32* %arrayidx360.i831, align 4
  %xor361.i832 = xor i32 %xor356.i827, %1287
  %1288 = load i32, i32* %t.i416, align 4
  %shr362.i833 = lshr i32 %1288, 26
  %idxprom364.i834 = zext i32 %shr362.i833 to i64
  %arrayidx365.i835 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i834
  %1289 = load i32, i32* %arrayidx365.i835, align 4
  %xor366.i836 = xor i32 %xor361.i832, %1289
  %1290 = load i32, i32* %l.i414, align 4
  %xor367.i837 = xor i32 %1290, %xor366.i836
  store i32 %xor367.i837, i32* %l.i414, align 4
  %1291 = load i32, i32* %l.i414, align 4
  %1292 = load i32*, i32** %s.i418, align 8
  %arrayidx368.i838 = getelementptr inbounds i32, i32* %1292, i64 14
  %1293 = load i32, i32* %arrayidx368.i838, align 4
  %xor369.i839 = xor i32 %1291, %1293
  store i32 %xor369.i839, i32* %u.i417, align 4
  %1294 = load i32, i32* %l.i414, align 4
  %1295 = load i32*, i32** %s.i418, align 8
  %arrayidx370.i840 = getelementptr inbounds i32, i32* %1295, i64 15
  %1296 = load i32, i32* %arrayidx370.i840, align 4
  %xor371.i841 = xor i32 %1294, %1296
  store i32 %xor371.i841, i32* %t.i416, align 4
  %1297 = load i32, i32* %t.i416, align 4
  %1298 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1297) #5, !srcloc !11
  store i32 %1298, i32* %ret372.i438, align 4
  %1299 = load i32, i32* %ret372.i438, align 4
  store i32 %1299, i32* %tmp373.i439, align 4
  %1300 = load i32, i32* %tmp373.i439, align 4
  store i32 %1300, i32* %t.i416, align 4
  %1301 = load i32, i32* %u.i417, align 4
  %shr374.i842 = lshr i32 %1301, 2
  %and375.i843 = and i32 %shr374.i842, 63
  %idxprom376.i844 = zext i32 %and375.i843 to i64
  %arrayidx377.i845 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i844
  %1302 = load i32, i32* %arrayidx377.i845, align 4
  %1303 = load i32, i32* %u.i417, align 4
  %shr378.i846 = lshr i32 %1303, 10
  %and379.i847 = and i32 %shr378.i846, 63
  %idxprom380.i848 = zext i32 %and379.i847 to i64
  %arrayidx381.i849 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i848
  %1304 = load i32, i32* %arrayidx381.i849, align 4
  %xor382.i850 = xor i32 %1302, %1304
  %1305 = load i32, i32* %u.i417, align 4
  %shr383.i851 = lshr i32 %1305, 18
  %and384.i852 = and i32 %shr383.i851, 63
  %idxprom385.i853 = zext i32 %and384.i852 to i64
  %arrayidx386.i854 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i853
  %1306 = load i32, i32* %arrayidx386.i854, align 4
  %xor387.i855 = xor i32 %xor382.i850, %1306
  %1307 = load i32, i32* %u.i417, align 4
  %shr388.i856 = lshr i32 %1307, 26
  %idxprom390.i857 = zext i32 %shr388.i856 to i64
  %arrayidx391.i858 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i857
  %1308 = load i32, i32* %arrayidx391.i858, align 4
  %xor392.i859 = xor i32 %xor387.i855, %1308
  %1309 = load i32, i32* %t.i416, align 4
  %shr393.i860 = lshr i32 %1309, 2
  %and394.i861 = and i32 %shr393.i860, 63
  %idxprom395.i862 = zext i32 %and394.i861 to i64
  %arrayidx396.i863 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i862
  %1310 = load i32, i32* %arrayidx396.i863, align 4
  %xor397.i864 = xor i32 %xor392.i859, %1310
  %1311 = load i32, i32* %t.i416, align 4
  %shr398.i865 = lshr i32 %1311, 10
  %and399.i866 = and i32 %shr398.i865, 63
  %idxprom400.i867 = zext i32 %and399.i866 to i64
  %arrayidx401.i868 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i867
  %1312 = load i32, i32* %arrayidx401.i868, align 4
  %xor402.i869 = xor i32 %xor397.i864, %1312
  %1313 = load i32, i32* %t.i416, align 4
  %shr403.i870 = lshr i32 %1313, 18
  %and404.i871 = and i32 %shr403.i870, 63
  %idxprom405.i872 = zext i32 %and404.i871 to i64
  %arrayidx406.i873 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i872
  %1314 = load i32, i32* %arrayidx406.i873, align 4
  %xor407.i874 = xor i32 %xor402.i869, %1314
  %1315 = load i32, i32* %t.i416, align 4
  %shr408.i875 = lshr i32 %1315, 26
  %idxprom410.i876 = zext i32 %shr408.i875 to i64
  %arrayidx411.i877 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i876
  %1316 = load i32, i32* %arrayidx411.i877, align 4
  %xor412.i878 = xor i32 %xor407.i874, %1316
  %1317 = load i32, i32* %r.i415, align 4
  %xor413.i879 = xor i32 %1317, %xor412.i878
  store i32 %xor413.i879, i32* %r.i415, align 4
  %1318 = load i32, i32* %r.i415, align 4
  %1319 = load i32*, i32** %s.i418, align 8
  %arrayidx414.i880 = getelementptr inbounds i32, i32* %1319, i64 16
  %1320 = load i32, i32* %arrayidx414.i880, align 4
  %xor415.i881 = xor i32 %1318, %1320
  store i32 %xor415.i881, i32* %u.i417, align 4
  %1321 = load i32, i32* %r.i415, align 4
  %1322 = load i32*, i32** %s.i418, align 8
  %arrayidx416.i882 = getelementptr inbounds i32, i32* %1322, i64 17
  %1323 = load i32, i32* %arrayidx416.i882, align 4
  %xor417.i883 = xor i32 %1321, %1323
  store i32 %xor417.i883, i32* %t.i416, align 4
  %1324 = load i32, i32* %t.i416, align 4
  %1325 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1324) #5, !srcloc !12
  store i32 %1325, i32* %ret418.i440, align 4
  %1326 = load i32, i32* %ret418.i440, align 4
  store i32 %1326, i32* %tmp419.i441, align 4
  %1327 = load i32, i32* %tmp419.i441, align 4
  store i32 %1327, i32* %t.i416, align 4
  %1328 = load i32, i32* %u.i417, align 4
  %shr420.i884 = lshr i32 %1328, 2
  %and421.i885 = and i32 %shr420.i884, 63
  %idxprom422.i886 = zext i32 %and421.i885 to i64
  %arrayidx423.i887 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i886
  %1329 = load i32, i32* %arrayidx423.i887, align 4
  %1330 = load i32, i32* %u.i417, align 4
  %shr424.i888 = lshr i32 %1330, 10
  %and425.i889 = and i32 %shr424.i888, 63
  %idxprom426.i890 = zext i32 %and425.i889 to i64
  %arrayidx427.i891 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i890
  %1331 = load i32, i32* %arrayidx427.i891, align 4
  %xor428.i892 = xor i32 %1329, %1331
  %1332 = load i32, i32* %u.i417, align 4
  %shr429.i893 = lshr i32 %1332, 18
  %and430.i894 = and i32 %shr429.i893, 63
  %idxprom431.i895 = zext i32 %and430.i894 to i64
  %arrayidx432.i896 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i895
  %1333 = load i32, i32* %arrayidx432.i896, align 4
  %xor433.i897 = xor i32 %xor428.i892, %1333
  %1334 = load i32, i32* %u.i417, align 4
  %shr434.i898 = lshr i32 %1334, 26
  %idxprom436.i899 = zext i32 %shr434.i898 to i64
  %arrayidx437.i900 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i899
  %1335 = load i32, i32* %arrayidx437.i900, align 4
  %xor438.i901 = xor i32 %xor433.i897, %1335
  %1336 = load i32, i32* %t.i416, align 4
  %shr439.i902 = lshr i32 %1336, 2
  %and440.i903 = and i32 %shr439.i902, 63
  %idxprom441.i904 = zext i32 %and440.i903 to i64
  %arrayidx442.i905 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i904
  %1337 = load i32, i32* %arrayidx442.i905, align 4
  %xor443.i906 = xor i32 %xor438.i901, %1337
  %1338 = load i32, i32* %t.i416, align 4
  %shr444.i907 = lshr i32 %1338, 10
  %and445.i908 = and i32 %shr444.i907, 63
  %idxprom446.i909 = zext i32 %and445.i908 to i64
  %arrayidx447.i910 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i909
  %1339 = load i32, i32* %arrayidx447.i910, align 4
  %xor448.i911 = xor i32 %xor443.i906, %1339
  %1340 = load i32, i32* %t.i416, align 4
  %shr449.i912 = lshr i32 %1340, 18
  %and450.i913 = and i32 %shr449.i912, 63
  %idxprom451.i914 = zext i32 %and450.i913 to i64
  %arrayidx452.i915 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i914
  %1341 = load i32, i32* %arrayidx452.i915, align 4
  %xor453.i916 = xor i32 %xor448.i911, %1341
  %1342 = load i32, i32* %t.i416, align 4
  %shr454.i917 = lshr i32 %1342, 26
  %idxprom456.i918 = zext i32 %shr454.i917 to i64
  %arrayidx457.i919 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i918
  %1343 = load i32, i32* %arrayidx457.i919, align 4
  %xor458.i920 = xor i32 %xor453.i916, %1343
  %1344 = load i32, i32* %l.i414, align 4
  %xor459.i921 = xor i32 %1344, %xor458.i920
  store i32 %xor459.i921, i32* %l.i414, align 4
  %1345 = load i32, i32* %l.i414, align 4
  %1346 = load i32*, i32** %s.i418, align 8
  %arrayidx460.i922 = getelementptr inbounds i32, i32* %1346, i64 18
  %1347 = load i32, i32* %arrayidx460.i922, align 4
  %xor461.i923 = xor i32 %1345, %1347
  store i32 %xor461.i923, i32* %u.i417, align 4
  %1348 = load i32, i32* %l.i414, align 4
  %1349 = load i32*, i32** %s.i418, align 8
  %arrayidx462.i924 = getelementptr inbounds i32, i32* %1349, i64 19
  %1350 = load i32, i32* %arrayidx462.i924, align 4
  %xor463.i925 = xor i32 %1348, %1350
  store i32 %xor463.i925, i32* %t.i416, align 4
  %1351 = load i32, i32* %t.i416, align 4
  %1352 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1351) #5, !srcloc !13
  store i32 %1352, i32* %ret464.i442, align 4
  %1353 = load i32, i32* %ret464.i442, align 4
  store i32 %1353, i32* %tmp465.i443, align 4
  %1354 = load i32, i32* %tmp465.i443, align 4
  store i32 %1354, i32* %t.i416, align 4
  %1355 = load i32, i32* %u.i417, align 4
  %shr466.i926 = lshr i32 %1355, 2
  %and467.i927 = and i32 %shr466.i926, 63
  %idxprom468.i928 = zext i32 %and467.i927 to i64
  %arrayidx469.i929 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i928
  %1356 = load i32, i32* %arrayidx469.i929, align 4
  %1357 = load i32, i32* %u.i417, align 4
  %shr470.i930 = lshr i32 %1357, 10
  %and471.i931 = and i32 %shr470.i930, 63
  %idxprom472.i932 = zext i32 %and471.i931 to i64
  %arrayidx473.i933 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i932
  %1358 = load i32, i32* %arrayidx473.i933, align 4
  %xor474.i934 = xor i32 %1356, %1358
  %1359 = load i32, i32* %u.i417, align 4
  %shr475.i935 = lshr i32 %1359, 18
  %and476.i936 = and i32 %shr475.i935, 63
  %idxprom477.i937 = zext i32 %and476.i936 to i64
  %arrayidx478.i938 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i937
  %1360 = load i32, i32* %arrayidx478.i938, align 4
  %xor479.i939 = xor i32 %xor474.i934, %1360
  %1361 = load i32, i32* %u.i417, align 4
  %shr480.i940 = lshr i32 %1361, 26
  %idxprom482.i941 = zext i32 %shr480.i940 to i64
  %arrayidx483.i942 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i941
  %1362 = load i32, i32* %arrayidx483.i942, align 4
  %xor484.i943 = xor i32 %xor479.i939, %1362
  %1363 = load i32, i32* %t.i416, align 4
  %shr485.i944 = lshr i32 %1363, 2
  %and486.i945 = and i32 %shr485.i944, 63
  %idxprom487.i946 = zext i32 %and486.i945 to i64
  %arrayidx488.i947 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i946
  %1364 = load i32, i32* %arrayidx488.i947, align 4
  %xor489.i948 = xor i32 %xor484.i943, %1364
  %1365 = load i32, i32* %t.i416, align 4
  %shr490.i949 = lshr i32 %1365, 10
  %and491.i950 = and i32 %shr490.i949, 63
  %idxprom492.i951 = zext i32 %and491.i950 to i64
  %arrayidx493.i952 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i951
  %1366 = load i32, i32* %arrayidx493.i952, align 4
  %xor494.i953 = xor i32 %xor489.i948, %1366
  %1367 = load i32, i32* %t.i416, align 4
  %shr495.i954 = lshr i32 %1367, 18
  %and496.i955 = and i32 %shr495.i954, 63
  %idxprom497.i956 = zext i32 %and496.i955 to i64
  %arrayidx498.i957 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i956
  %1368 = load i32, i32* %arrayidx498.i957, align 4
  %xor499.i958 = xor i32 %xor494.i953, %1368
  %1369 = load i32, i32* %t.i416, align 4
  %shr500.i959 = lshr i32 %1369, 26
  %idxprom502.i960 = zext i32 %shr500.i959 to i64
  %arrayidx503.i961 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i960
  %1370 = load i32, i32* %arrayidx503.i961, align 4
  %xor504.i962 = xor i32 %xor499.i958, %1370
  %1371 = load i32, i32* %r.i415, align 4
  %xor505.i963 = xor i32 %1371, %xor504.i962
  store i32 %xor505.i963, i32* %r.i415, align 4
  %1372 = load i32, i32* %r.i415, align 4
  %1373 = load i32*, i32** %s.i418, align 8
  %arrayidx506.i964 = getelementptr inbounds i32, i32* %1373, i64 20
  %1374 = load i32, i32* %arrayidx506.i964, align 4
  %xor507.i965 = xor i32 %1372, %1374
  store i32 %xor507.i965, i32* %u.i417, align 4
  %1375 = load i32, i32* %r.i415, align 4
  %1376 = load i32*, i32** %s.i418, align 8
  %arrayidx508.i966 = getelementptr inbounds i32, i32* %1376, i64 21
  %1377 = load i32, i32* %arrayidx508.i966, align 4
  %xor509.i967 = xor i32 %1375, %1377
  store i32 %xor509.i967, i32* %t.i416, align 4
  %1378 = load i32, i32* %t.i416, align 4
  %1379 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1378) #5, !srcloc !14
  store i32 %1379, i32* %ret510.i444, align 4
  %1380 = load i32, i32* %ret510.i444, align 4
  store i32 %1380, i32* %tmp511.i445, align 4
  %1381 = load i32, i32* %tmp511.i445, align 4
  store i32 %1381, i32* %t.i416, align 4
  %1382 = load i32, i32* %u.i417, align 4
  %shr512.i968 = lshr i32 %1382, 2
  %and513.i969 = and i32 %shr512.i968, 63
  %idxprom514.i970 = zext i32 %and513.i969 to i64
  %arrayidx515.i971 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i970
  %1383 = load i32, i32* %arrayidx515.i971, align 4
  %1384 = load i32, i32* %u.i417, align 4
  %shr516.i972 = lshr i32 %1384, 10
  %and517.i973 = and i32 %shr516.i972, 63
  %idxprom518.i974 = zext i32 %and517.i973 to i64
  %arrayidx519.i975 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i974
  %1385 = load i32, i32* %arrayidx519.i975, align 4
  %xor520.i976 = xor i32 %1383, %1385
  %1386 = load i32, i32* %u.i417, align 4
  %shr521.i977 = lshr i32 %1386, 18
  %and522.i978 = and i32 %shr521.i977, 63
  %idxprom523.i979 = zext i32 %and522.i978 to i64
  %arrayidx524.i980 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i979
  %1387 = load i32, i32* %arrayidx524.i980, align 4
  %xor525.i981 = xor i32 %xor520.i976, %1387
  %1388 = load i32, i32* %u.i417, align 4
  %shr526.i982 = lshr i32 %1388, 26
  %idxprom528.i983 = zext i32 %shr526.i982 to i64
  %arrayidx529.i984 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i983
  %1389 = load i32, i32* %arrayidx529.i984, align 4
  %xor530.i985 = xor i32 %xor525.i981, %1389
  %1390 = load i32, i32* %t.i416, align 4
  %shr531.i986 = lshr i32 %1390, 2
  %and532.i987 = and i32 %shr531.i986, 63
  %idxprom533.i988 = zext i32 %and532.i987 to i64
  %arrayidx534.i989 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i988
  %1391 = load i32, i32* %arrayidx534.i989, align 4
  %xor535.i990 = xor i32 %xor530.i985, %1391
  %1392 = load i32, i32* %t.i416, align 4
  %shr536.i991 = lshr i32 %1392, 10
  %and537.i992 = and i32 %shr536.i991, 63
  %idxprom538.i993 = zext i32 %and537.i992 to i64
  %arrayidx539.i994 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i993
  %1393 = load i32, i32* %arrayidx539.i994, align 4
  %xor540.i995 = xor i32 %xor535.i990, %1393
  %1394 = load i32, i32* %t.i416, align 4
  %shr541.i996 = lshr i32 %1394, 18
  %and542.i997 = and i32 %shr541.i996, 63
  %idxprom543.i998 = zext i32 %and542.i997 to i64
  %arrayidx544.i999 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i998
  %1395 = load i32, i32* %arrayidx544.i999, align 4
  %xor545.i1000 = xor i32 %xor540.i995, %1395
  %1396 = load i32, i32* %t.i416, align 4
  %shr546.i1001 = lshr i32 %1396, 26
  %idxprom548.i1002 = zext i32 %shr546.i1001 to i64
  %arrayidx549.i1003 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i1002
  %1397 = load i32, i32* %arrayidx549.i1003, align 4
  %xor550.i1004 = xor i32 %xor545.i1000, %1397
  %1398 = load i32, i32* %l.i414, align 4
  %xor551.i1005 = xor i32 %1398, %xor550.i1004
  store i32 %xor551.i1005, i32* %l.i414, align 4
  %1399 = load i32, i32* %l.i414, align 4
  %1400 = load i32*, i32** %s.i418, align 8
  %arrayidx552.i1006 = getelementptr inbounds i32, i32* %1400, i64 22
  %1401 = load i32, i32* %arrayidx552.i1006, align 4
  %xor553.i1007 = xor i32 %1399, %1401
  store i32 %xor553.i1007, i32* %u.i417, align 4
  %1402 = load i32, i32* %l.i414, align 4
  %1403 = load i32*, i32** %s.i418, align 8
  %arrayidx554.i1008 = getelementptr inbounds i32, i32* %1403, i64 23
  %1404 = load i32, i32* %arrayidx554.i1008, align 4
  %xor555.i1009 = xor i32 %1402, %1404
  store i32 %xor555.i1009, i32* %t.i416, align 4
  %1405 = load i32, i32* %t.i416, align 4
  %1406 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1405) #5, !srcloc !15
  store i32 %1406, i32* %ret556.i446, align 4
  %1407 = load i32, i32* %ret556.i446, align 4
  store i32 %1407, i32* %tmp557.i447, align 4
  %1408 = load i32, i32* %tmp557.i447, align 4
  store i32 %1408, i32* %t.i416, align 4
  %1409 = load i32, i32* %u.i417, align 4
  %shr558.i1010 = lshr i32 %1409, 2
  %and559.i1011 = and i32 %shr558.i1010, 63
  %idxprom560.i1012 = zext i32 %and559.i1011 to i64
  %arrayidx561.i1013 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i1012
  %1410 = load i32, i32* %arrayidx561.i1013, align 4
  %1411 = load i32, i32* %u.i417, align 4
  %shr562.i1014 = lshr i32 %1411, 10
  %and563.i1015 = and i32 %shr562.i1014, 63
  %idxprom564.i1016 = zext i32 %and563.i1015 to i64
  %arrayidx565.i1017 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i1016
  %1412 = load i32, i32* %arrayidx565.i1017, align 4
  %xor566.i1018 = xor i32 %1410, %1412
  %1413 = load i32, i32* %u.i417, align 4
  %shr567.i1019 = lshr i32 %1413, 18
  %and568.i1020 = and i32 %shr567.i1019, 63
  %idxprom569.i1021 = zext i32 %and568.i1020 to i64
  %arrayidx570.i1022 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i1021
  %1414 = load i32, i32* %arrayidx570.i1022, align 4
  %xor571.i1023 = xor i32 %xor566.i1018, %1414
  %1415 = load i32, i32* %u.i417, align 4
  %shr572.i1024 = lshr i32 %1415, 26
  %idxprom574.i1025 = zext i32 %shr572.i1024 to i64
  %arrayidx575.i1026 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i1025
  %1416 = load i32, i32* %arrayidx575.i1026, align 4
  %xor576.i1027 = xor i32 %xor571.i1023, %1416
  %1417 = load i32, i32* %t.i416, align 4
  %shr577.i1028 = lshr i32 %1417, 2
  %and578.i1029 = and i32 %shr577.i1028, 63
  %idxprom579.i1030 = zext i32 %and578.i1029 to i64
  %arrayidx580.i1031 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i1030
  %1418 = load i32, i32* %arrayidx580.i1031, align 4
  %xor581.i1032 = xor i32 %xor576.i1027, %1418
  %1419 = load i32, i32* %t.i416, align 4
  %shr582.i1033 = lshr i32 %1419, 10
  %and583.i1034 = and i32 %shr582.i1033, 63
  %idxprom584.i1035 = zext i32 %and583.i1034 to i64
  %arrayidx585.i1036 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i1035
  %1420 = load i32, i32* %arrayidx585.i1036, align 4
  %xor586.i1037 = xor i32 %xor581.i1032, %1420
  %1421 = load i32, i32* %t.i416, align 4
  %shr587.i1038 = lshr i32 %1421, 18
  %and588.i1039 = and i32 %shr587.i1038, 63
  %idxprom589.i1040 = zext i32 %and588.i1039 to i64
  %arrayidx590.i1041 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i1040
  %1422 = load i32, i32* %arrayidx590.i1041, align 4
  %xor591.i1042 = xor i32 %xor586.i1037, %1422
  %1423 = load i32, i32* %t.i416, align 4
  %shr592.i1043 = lshr i32 %1423, 26
  %idxprom594.i1044 = zext i32 %shr592.i1043 to i64
  %arrayidx595.i1045 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i1044
  %1424 = load i32, i32* %arrayidx595.i1045, align 4
  %xor596.i1046 = xor i32 %xor591.i1042, %1424
  %1425 = load i32, i32* %r.i415, align 4
  %xor597.i1047 = xor i32 %1425, %xor596.i1046
  store i32 %xor597.i1047, i32* %r.i415, align 4
  %1426 = load i32, i32* %r.i415, align 4
  %1427 = load i32*, i32** %s.i418, align 8
  %arrayidx598.i1048 = getelementptr inbounds i32, i32* %1427, i64 24
  %1428 = load i32, i32* %arrayidx598.i1048, align 4
  %xor599.i1049 = xor i32 %1426, %1428
  store i32 %xor599.i1049, i32* %u.i417, align 4
  %1429 = load i32, i32* %r.i415, align 4
  %1430 = load i32*, i32** %s.i418, align 8
  %arrayidx600.i1050 = getelementptr inbounds i32, i32* %1430, i64 25
  %1431 = load i32, i32* %arrayidx600.i1050, align 4
  %xor601.i1051 = xor i32 %1429, %1431
  store i32 %xor601.i1051, i32* %t.i416, align 4
  %1432 = load i32, i32* %t.i416, align 4
  %1433 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1432) #5, !srcloc !16
  store i32 %1433, i32* %ret602.i448, align 4
  %1434 = load i32, i32* %ret602.i448, align 4
  store i32 %1434, i32* %tmp603.i449, align 4
  %1435 = load i32, i32* %tmp603.i449, align 4
  store i32 %1435, i32* %t.i416, align 4
  %1436 = load i32, i32* %u.i417, align 4
  %shr604.i1052 = lshr i32 %1436, 2
  %and605.i1053 = and i32 %shr604.i1052, 63
  %idxprom606.i1054 = zext i32 %and605.i1053 to i64
  %arrayidx607.i1055 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i1054
  %1437 = load i32, i32* %arrayidx607.i1055, align 4
  %1438 = load i32, i32* %u.i417, align 4
  %shr608.i1056 = lshr i32 %1438, 10
  %and609.i1057 = and i32 %shr608.i1056, 63
  %idxprom610.i1058 = zext i32 %and609.i1057 to i64
  %arrayidx611.i1059 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i1058
  %1439 = load i32, i32* %arrayidx611.i1059, align 4
  %xor612.i1060 = xor i32 %1437, %1439
  %1440 = load i32, i32* %u.i417, align 4
  %shr613.i1061 = lshr i32 %1440, 18
  %and614.i1062 = and i32 %shr613.i1061, 63
  %idxprom615.i1063 = zext i32 %and614.i1062 to i64
  %arrayidx616.i1064 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i1063
  %1441 = load i32, i32* %arrayidx616.i1064, align 4
  %xor617.i1065 = xor i32 %xor612.i1060, %1441
  %1442 = load i32, i32* %u.i417, align 4
  %shr618.i1066 = lshr i32 %1442, 26
  %idxprom620.i1067 = zext i32 %shr618.i1066 to i64
  %arrayidx621.i1068 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i1067
  %1443 = load i32, i32* %arrayidx621.i1068, align 4
  %xor622.i1069 = xor i32 %xor617.i1065, %1443
  %1444 = load i32, i32* %t.i416, align 4
  %shr623.i1070 = lshr i32 %1444, 2
  %and624.i1071 = and i32 %shr623.i1070, 63
  %idxprom625.i1072 = zext i32 %and624.i1071 to i64
  %arrayidx626.i1073 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i1072
  %1445 = load i32, i32* %arrayidx626.i1073, align 4
  %xor627.i1074 = xor i32 %xor622.i1069, %1445
  %1446 = load i32, i32* %t.i416, align 4
  %shr628.i1075 = lshr i32 %1446, 10
  %and629.i1076 = and i32 %shr628.i1075, 63
  %idxprom630.i1077 = zext i32 %and629.i1076 to i64
  %arrayidx631.i1078 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i1077
  %1447 = load i32, i32* %arrayidx631.i1078, align 4
  %xor632.i1079 = xor i32 %xor627.i1074, %1447
  %1448 = load i32, i32* %t.i416, align 4
  %shr633.i1080 = lshr i32 %1448, 18
  %and634.i1081 = and i32 %shr633.i1080, 63
  %idxprom635.i1082 = zext i32 %and634.i1081 to i64
  %arrayidx636.i1083 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i1082
  %1449 = load i32, i32* %arrayidx636.i1083, align 4
  %xor637.i1084 = xor i32 %xor632.i1079, %1449
  %1450 = load i32, i32* %t.i416, align 4
  %shr638.i1085 = lshr i32 %1450, 26
  %idxprom640.i1086 = zext i32 %shr638.i1085 to i64
  %arrayidx641.i1087 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i1086
  %1451 = load i32, i32* %arrayidx641.i1087, align 4
  %xor642.i1088 = xor i32 %xor637.i1084, %1451
  %1452 = load i32, i32* %l.i414, align 4
  %xor643.i1089 = xor i32 %1452, %xor642.i1088
  store i32 %xor643.i1089, i32* %l.i414, align 4
  %1453 = load i32, i32* %l.i414, align 4
  %1454 = load i32*, i32** %s.i418, align 8
  %arrayidx644.i1090 = getelementptr inbounds i32, i32* %1454, i64 26
  %1455 = load i32, i32* %arrayidx644.i1090, align 4
  %xor645.i1091 = xor i32 %1453, %1455
  store i32 %xor645.i1091, i32* %u.i417, align 4
  %1456 = load i32, i32* %l.i414, align 4
  %1457 = load i32*, i32** %s.i418, align 8
  %arrayidx646.i1092 = getelementptr inbounds i32, i32* %1457, i64 27
  %1458 = load i32, i32* %arrayidx646.i1092, align 4
  %xor647.i1093 = xor i32 %1456, %1458
  store i32 %xor647.i1093, i32* %t.i416, align 4
  %1459 = load i32, i32* %t.i416, align 4
  %1460 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1459) #5, !srcloc !17
  store i32 %1460, i32* %ret648.i450, align 4
  %1461 = load i32, i32* %ret648.i450, align 4
  store i32 %1461, i32* %tmp649.i451, align 4
  %1462 = load i32, i32* %tmp649.i451, align 4
  store i32 %1462, i32* %t.i416, align 4
  %1463 = load i32, i32* %u.i417, align 4
  %shr650.i1094 = lshr i32 %1463, 2
  %and651.i1095 = and i32 %shr650.i1094, 63
  %idxprom652.i1096 = zext i32 %and651.i1095 to i64
  %arrayidx653.i1097 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i1096
  %1464 = load i32, i32* %arrayidx653.i1097, align 4
  %1465 = load i32, i32* %u.i417, align 4
  %shr654.i1098 = lshr i32 %1465, 10
  %and655.i1099 = and i32 %shr654.i1098, 63
  %idxprom656.i1100 = zext i32 %and655.i1099 to i64
  %arrayidx657.i1101 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i1100
  %1466 = load i32, i32* %arrayidx657.i1101, align 4
  %xor658.i1102 = xor i32 %1464, %1466
  %1467 = load i32, i32* %u.i417, align 4
  %shr659.i1103 = lshr i32 %1467, 18
  %and660.i1104 = and i32 %shr659.i1103, 63
  %idxprom661.i1105 = zext i32 %and660.i1104 to i64
  %arrayidx662.i1106 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i1105
  %1468 = load i32, i32* %arrayidx662.i1106, align 4
  %xor663.i1107 = xor i32 %xor658.i1102, %1468
  %1469 = load i32, i32* %u.i417, align 4
  %shr664.i1108 = lshr i32 %1469, 26
  %idxprom666.i1109 = zext i32 %shr664.i1108 to i64
  %arrayidx667.i1110 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i1109
  %1470 = load i32, i32* %arrayidx667.i1110, align 4
  %xor668.i1111 = xor i32 %xor663.i1107, %1470
  %1471 = load i32, i32* %t.i416, align 4
  %shr669.i1112 = lshr i32 %1471, 2
  %and670.i1113 = and i32 %shr669.i1112, 63
  %idxprom671.i1114 = zext i32 %and670.i1113 to i64
  %arrayidx672.i1115 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i1114
  %1472 = load i32, i32* %arrayidx672.i1115, align 4
  %xor673.i1116 = xor i32 %xor668.i1111, %1472
  %1473 = load i32, i32* %t.i416, align 4
  %shr674.i1117 = lshr i32 %1473, 10
  %and675.i1118 = and i32 %shr674.i1117, 63
  %idxprom676.i1119 = zext i32 %and675.i1118 to i64
  %arrayidx677.i1120 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i1119
  %1474 = load i32, i32* %arrayidx677.i1120, align 4
  %xor678.i1121 = xor i32 %xor673.i1116, %1474
  %1475 = load i32, i32* %t.i416, align 4
  %shr679.i1122 = lshr i32 %1475, 18
  %and680.i1123 = and i32 %shr679.i1122, 63
  %idxprom681.i1124 = zext i32 %and680.i1123 to i64
  %arrayidx682.i1125 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i1124
  %1476 = load i32, i32* %arrayidx682.i1125, align 4
  %xor683.i1126 = xor i32 %xor678.i1121, %1476
  %1477 = load i32, i32* %t.i416, align 4
  %shr684.i1127 = lshr i32 %1477, 26
  %idxprom686.i1128 = zext i32 %shr684.i1127 to i64
  %arrayidx687.i1129 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i1128
  %1478 = load i32, i32* %arrayidx687.i1129, align 4
  %xor688.i1130 = xor i32 %xor683.i1126, %1478
  %1479 = load i32, i32* %r.i415, align 4
  %xor689.i1131 = xor i32 %1479, %xor688.i1130
  store i32 %xor689.i1131, i32* %r.i415, align 4
  %1480 = load i32, i32* %r.i415, align 4
  %1481 = load i32*, i32** %s.i418, align 8
  %arrayidx690.i1132 = getelementptr inbounds i32, i32* %1481, i64 28
  %1482 = load i32, i32* %arrayidx690.i1132, align 4
  %xor691.i1133 = xor i32 %1480, %1482
  store i32 %xor691.i1133, i32* %u.i417, align 4
  %1483 = load i32, i32* %r.i415, align 4
  %1484 = load i32*, i32** %s.i418, align 8
  %arrayidx692.i1134 = getelementptr inbounds i32, i32* %1484, i64 29
  %1485 = load i32, i32* %arrayidx692.i1134, align 4
  %xor693.i1135 = xor i32 %1483, %1485
  store i32 %xor693.i1135, i32* %t.i416, align 4
  %1486 = load i32, i32* %t.i416, align 4
  %1487 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1486) #5, !srcloc !18
  store i32 %1487, i32* %ret694.i452, align 4
  %1488 = load i32, i32* %ret694.i452, align 4
  store i32 %1488, i32* %tmp695.i453, align 4
  %1489 = load i32, i32* %tmp695.i453, align 4
  store i32 %1489, i32* %t.i416, align 4
  %1490 = load i32, i32* %u.i417, align 4
  %shr696.i1136 = lshr i32 %1490, 2
  %and697.i1137 = and i32 %shr696.i1136, 63
  %idxprom698.i1138 = zext i32 %and697.i1137 to i64
  %arrayidx699.i1139 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i1138
  %1491 = load i32, i32* %arrayidx699.i1139, align 4
  %1492 = load i32, i32* %u.i417, align 4
  %shr700.i1140 = lshr i32 %1492, 10
  %and701.i1141 = and i32 %shr700.i1140, 63
  %idxprom702.i1142 = zext i32 %and701.i1141 to i64
  %arrayidx703.i1143 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i1142
  %1493 = load i32, i32* %arrayidx703.i1143, align 4
  %xor704.i1144 = xor i32 %1491, %1493
  %1494 = load i32, i32* %u.i417, align 4
  %shr705.i1145 = lshr i32 %1494, 18
  %and706.i1146 = and i32 %shr705.i1145, 63
  %idxprom707.i1147 = zext i32 %and706.i1146 to i64
  %arrayidx708.i1148 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i1147
  %1495 = load i32, i32* %arrayidx708.i1148, align 4
  %xor709.i1149 = xor i32 %xor704.i1144, %1495
  %1496 = load i32, i32* %u.i417, align 4
  %shr710.i1150 = lshr i32 %1496, 26
  %idxprom712.i1151 = zext i32 %shr710.i1150 to i64
  %arrayidx713.i1152 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i1151
  %1497 = load i32, i32* %arrayidx713.i1152, align 4
  %xor714.i1153 = xor i32 %xor709.i1149, %1497
  %1498 = load i32, i32* %t.i416, align 4
  %shr715.i1154 = lshr i32 %1498, 2
  %and716.i1155 = and i32 %shr715.i1154, 63
  %idxprom717.i1156 = zext i32 %and716.i1155 to i64
  %arrayidx718.i1157 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i1156
  %1499 = load i32, i32* %arrayidx718.i1157, align 4
  %xor719.i1158 = xor i32 %xor714.i1153, %1499
  %1500 = load i32, i32* %t.i416, align 4
  %shr720.i1159 = lshr i32 %1500, 10
  %and721.i1160 = and i32 %shr720.i1159, 63
  %idxprom722.i1161 = zext i32 %and721.i1160 to i64
  %arrayidx723.i1162 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i1161
  %1501 = load i32, i32* %arrayidx723.i1162, align 4
  %xor724.i1163 = xor i32 %xor719.i1158, %1501
  %1502 = load i32, i32* %t.i416, align 4
  %shr725.i1164 = lshr i32 %1502, 18
  %and726.i1165 = and i32 %shr725.i1164, 63
  %idxprom727.i1166 = zext i32 %and726.i1165 to i64
  %arrayidx728.i1167 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i1166
  %1503 = load i32, i32* %arrayidx728.i1167, align 4
  %xor729.i1168 = xor i32 %xor724.i1163, %1503
  %1504 = load i32, i32* %t.i416, align 4
  %shr730.i1169 = lshr i32 %1504, 26
  %idxprom732.i1170 = zext i32 %shr730.i1169 to i64
  %arrayidx733.i1171 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i1170
  %1505 = load i32, i32* %arrayidx733.i1171, align 4
  %xor734.i1172 = xor i32 %xor729.i1168, %1505
  %1506 = load i32, i32* %l.i414, align 4
  %xor735.i1173 = xor i32 %1506, %xor734.i1172
  store i32 %xor735.i1173, i32* %l.i414, align 4
  %1507 = load i32, i32* %l.i414, align 4
  %1508 = load i32*, i32** %s.i418, align 8
  %arrayidx736.i1174 = getelementptr inbounds i32, i32* %1508, i64 30
  %1509 = load i32, i32* %arrayidx736.i1174, align 4
  %xor737.i1175 = xor i32 %1507, %1509
  store i32 %xor737.i1175, i32* %u.i417, align 4
  %1510 = load i32, i32* %l.i414, align 4
  %1511 = load i32*, i32** %s.i418, align 8
  %arrayidx738.i1176 = getelementptr inbounds i32, i32* %1511, i64 31
  %1512 = load i32, i32* %arrayidx738.i1176, align 4
  %xor739.i1177 = xor i32 %1510, %1512
  store i32 %xor739.i1177, i32* %t.i416, align 4
  %1513 = load i32, i32* %t.i416, align 4
  %1514 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1513) #5, !srcloc !19
  store i32 %1514, i32* %ret740.i454, align 4
  %1515 = load i32, i32* %ret740.i454, align 4
  store i32 %1515, i32* %tmp741.i455, align 4
  %1516 = load i32, i32* %tmp741.i455, align 4
  store i32 %1516, i32* %t.i416, align 4
  %1517 = load i32, i32* %u.i417, align 4
  %shr742.i1178 = lshr i32 %1517, 2
  %and743.i1179 = and i32 %shr742.i1178, 63
  %idxprom744.i1180 = zext i32 %and743.i1179 to i64
  %arrayidx745.i1181 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i1180
  %1518 = load i32, i32* %arrayidx745.i1181, align 4
  %1519 = load i32, i32* %u.i417, align 4
  %shr746.i1182 = lshr i32 %1519, 10
  %and747.i1183 = and i32 %shr746.i1182, 63
  %idxprom748.i1184 = zext i32 %and747.i1183 to i64
  %arrayidx749.i1185 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i1184
  %1520 = load i32, i32* %arrayidx749.i1185, align 4
  %xor750.i1186 = xor i32 %1518, %1520
  %1521 = load i32, i32* %u.i417, align 4
  %shr751.i1187 = lshr i32 %1521, 18
  %and752.i1188 = and i32 %shr751.i1187, 63
  %idxprom753.i1189 = zext i32 %and752.i1188 to i64
  %arrayidx754.i1190 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i1189
  %1522 = load i32, i32* %arrayidx754.i1190, align 4
  %xor755.i1191 = xor i32 %xor750.i1186, %1522
  %1523 = load i32, i32* %u.i417, align 4
  %shr756.i1192 = lshr i32 %1523, 26
  %idxprom758.i1193 = zext i32 %shr756.i1192 to i64
  %arrayidx759.i1194 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i1193
  %1524 = load i32, i32* %arrayidx759.i1194, align 4
  %xor760.i1195 = xor i32 %xor755.i1191, %1524
  %1525 = load i32, i32* %t.i416, align 4
  %shr761.i1196 = lshr i32 %1525, 2
  %and762.i1197 = and i32 %shr761.i1196, 63
  %idxprom763.i1198 = zext i32 %and762.i1197 to i64
  %arrayidx764.i1199 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i1198
  %1526 = load i32, i32* %arrayidx764.i1199, align 4
  %xor765.i1200 = xor i32 %xor760.i1195, %1526
  %1527 = load i32, i32* %t.i416, align 4
  %shr766.i1201 = lshr i32 %1527, 10
  %and767.i1202 = and i32 %shr766.i1201, 63
  %idxprom768.i1203 = zext i32 %and767.i1202 to i64
  %arrayidx769.i1204 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i1203
  %1528 = load i32, i32* %arrayidx769.i1204, align 4
  %xor770.i1205 = xor i32 %xor765.i1200, %1528
  %1529 = load i32, i32* %t.i416, align 4
  %shr771.i1206 = lshr i32 %1529, 18
  %and772.i1207 = and i32 %shr771.i1206, 63
  %idxprom773.i1208 = zext i32 %and772.i1207 to i64
  %arrayidx774.i1209 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i1208
  %1530 = load i32, i32* %arrayidx774.i1209, align 4
  %xor775.i1210 = xor i32 %xor770.i1205, %1530
  %1531 = load i32, i32* %t.i416, align 4
  %shr776.i1211 = lshr i32 %1531, 26
  %idxprom778.i1212 = zext i32 %shr776.i1211 to i64
  %arrayidx779.i1213 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i1212
  %1532 = load i32, i32* %arrayidx779.i1213, align 4
  %xor780.i1214 = xor i32 %xor775.i1210, %1532
  %1533 = load i32, i32* %r.i415, align 4
  %xor781.i1215 = xor i32 %1533, %xor780.i1214
  store i32 %xor781.i1215, i32* %r.i415, align 4
  br label %DES_encrypt1.exit1936

if.else.i1888:                                    ; preds = %sw.epilog
  %1534 = load i32, i32* %r.i415, align 4
  %1535 = load i32*, i32** %s.i418, align 8
  %arrayidx782.i1217 = getelementptr inbounds i32, i32* %1535, i64 30
  %1536 = load i32, i32* %arrayidx782.i1217, align 4
  %xor783.i1218 = xor i32 %1534, %1536
  store i32 %xor783.i1218, i32* %u.i417, align 4
  %1537 = load i32, i32* %r.i415, align 4
  %1538 = load i32*, i32** %s.i418, align 8
  %arrayidx784.i1219 = getelementptr inbounds i32, i32* %1538, i64 31
  %1539 = load i32, i32* %arrayidx784.i1219, align 4
  %xor785.i1220 = xor i32 %1537, %1539
  store i32 %xor785.i1220, i32* %t.i416, align 4
  %1540 = load i32, i32* %t.i416, align 4
  %1541 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1540) #5, !srcloc !20
  store i32 %1541, i32* %ret786.i456, align 4
  %1542 = load i32, i32* %ret786.i456, align 4
  store i32 %1542, i32* %tmp787.i457, align 4
  %1543 = load i32, i32* %tmp787.i457, align 4
  store i32 %1543, i32* %t.i416, align 4
  %1544 = load i32, i32* %u.i417, align 4
  %shr788.i1221 = lshr i32 %1544, 2
  %and789.i1222 = and i32 %shr788.i1221, 63
  %idxprom790.i1223 = zext i32 %and789.i1222 to i64
  %arrayidx791.i1224 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i1223
  %1545 = load i32, i32* %arrayidx791.i1224, align 4
  %1546 = load i32, i32* %u.i417, align 4
  %shr792.i1225 = lshr i32 %1546, 10
  %and793.i1226 = and i32 %shr792.i1225, 63
  %idxprom794.i1227 = zext i32 %and793.i1226 to i64
  %arrayidx795.i1228 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i1227
  %1547 = load i32, i32* %arrayidx795.i1228, align 4
  %xor796.i1229 = xor i32 %1545, %1547
  %1548 = load i32, i32* %u.i417, align 4
  %shr797.i1230 = lshr i32 %1548, 18
  %and798.i1231 = and i32 %shr797.i1230, 63
  %idxprom799.i1232 = zext i32 %and798.i1231 to i64
  %arrayidx800.i1233 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i1232
  %1549 = load i32, i32* %arrayidx800.i1233, align 4
  %xor801.i1234 = xor i32 %xor796.i1229, %1549
  %1550 = load i32, i32* %u.i417, align 4
  %shr802.i1235 = lshr i32 %1550, 26
  %idxprom804.i1236 = zext i32 %shr802.i1235 to i64
  %arrayidx805.i1237 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i1236
  %1551 = load i32, i32* %arrayidx805.i1237, align 4
  %xor806.i1238 = xor i32 %xor801.i1234, %1551
  %1552 = load i32, i32* %t.i416, align 4
  %shr807.i1239 = lshr i32 %1552, 2
  %and808.i1240 = and i32 %shr807.i1239, 63
  %idxprom809.i1241 = zext i32 %and808.i1240 to i64
  %arrayidx810.i1242 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i1241
  %1553 = load i32, i32* %arrayidx810.i1242, align 4
  %xor811.i1243 = xor i32 %xor806.i1238, %1553
  %1554 = load i32, i32* %t.i416, align 4
  %shr812.i1244 = lshr i32 %1554, 10
  %and813.i1245 = and i32 %shr812.i1244, 63
  %idxprom814.i1246 = zext i32 %and813.i1245 to i64
  %arrayidx815.i1247 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i1246
  %1555 = load i32, i32* %arrayidx815.i1247, align 4
  %xor816.i1248 = xor i32 %xor811.i1243, %1555
  %1556 = load i32, i32* %t.i416, align 4
  %shr817.i1249 = lshr i32 %1556, 18
  %and818.i1250 = and i32 %shr817.i1249, 63
  %idxprom819.i1251 = zext i32 %and818.i1250 to i64
  %arrayidx820.i1252 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i1251
  %1557 = load i32, i32* %arrayidx820.i1252, align 4
  %xor821.i1253 = xor i32 %xor816.i1248, %1557
  %1558 = load i32, i32* %t.i416, align 4
  %shr822.i1254 = lshr i32 %1558, 26
  %idxprom824.i1255 = zext i32 %shr822.i1254 to i64
  %arrayidx825.i1256 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i1255
  %1559 = load i32, i32* %arrayidx825.i1256, align 4
  %xor826.i1257 = xor i32 %xor821.i1253, %1559
  %1560 = load i32, i32* %l.i414, align 4
  %xor827.i1258 = xor i32 %1560, %xor826.i1257
  store i32 %xor827.i1258, i32* %l.i414, align 4
  %1561 = load i32, i32* %l.i414, align 4
  %1562 = load i32*, i32** %s.i418, align 8
  %arrayidx828.i1259 = getelementptr inbounds i32, i32* %1562, i64 28
  %1563 = load i32, i32* %arrayidx828.i1259, align 4
  %xor829.i1260 = xor i32 %1561, %1563
  store i32 %xor829.i1260, i32* %u.i417, align 4
  %1564 = load i32, i32* %l.i414, align 4
  %1565 = load i32*, i32** %s.i418, align 8
  %arrayidx830.i1261 = getelementptr inbounds i32, i32* %1565, i64 29
  %1566 = load i32, i32* %arrayidx830.i1261, align 4
  %xor831.i1262 = xor i32 %1564, %1566
  store i32 %xor831.i1262, i32* %t.i416, align 4
  %1567 = load i32, i32* %t.i416, align 4
  %1568 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1567) #5, !srcloc !21
  store i32 %1568, i32* %ret832.i458, align 4
  %1569 = load i32, i32* %ret832.i458, align 4
  store i32 %1569, i32* %tmp833.i459, align 4
  %1570 = load i32, i32* %tmp833.i459, align 4
  store i32 %1570, i32* %t.i416, align 4
  %1571 = load i32, i32* %u.i417, align 4
  %shr834.i1263 = lshr i32 %1571, 2
  %and835.i1264 = and i32 %shr834.i1263, 63
  %idxprom836.i1265 = zext i32 %and835.i1264 to i64
  %arrayidx837.i1266 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i1265
  %1572 = load i32, i32* %arrayidx837.i1266, align 4
  %1573 = load i32, i32* %u.i417, align 4
  %shr838.i1267 = lshr i32 %1573, 10
  %and839.i1268 = and i32 %shr838.i1267, 63
  %idxprom840.i1269 = zext i32 %and839.i1268 to i64
  %arrayidx841.i1270 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i1269
  %1574 = load i32, i32* %arrayidx841.i1270, align 4
  %xor842.i1271 = xor i32 %1572, %1574
  %1575 = load i32, i32* %u.i417, align 4
  %shr843.i1272 = lshr i32 %1575, 18
  %and844.i1273 = and i32 %shr843.i1272, 63
  %idxprom845.i1274 = zext i32 %and844.i1273 to i64
  %arrayidx846.i1275 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i1274
  %1576 = load i32, i32* %arrayidx846.i1275, align 4
  %xor847.i1276 = xor i32 %xor842.i1271, %1576
  %1577 = load i32, i32* %u.i417, align 4
  %shr848.i1277 = lshr i32 %1577, 26
  %idxprom850.i1278 = zext i32 %shr848.i1277 to i64
  %arrayidx851.i1279 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i1278
  %1578 = load i32, i32* %arrayidx851.i1279, align 4
  %xor852.i1280 = xor i32 %xor847.i1276, %1578
  %1579 = load i32, i32* %t.i416, align 4
  %shr853.i1281 = lshr i32 %1579, 2
  %and854.i1282 = and i32 %shr853.i1281, 63
  %idxprom855.i1283 = zext i32 %and854.i1282 to i64
  %arrayidx856.i1284 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i1283
  %1580 = load i32, i32* %arrayidx856.i1284, align 4
  %xor857.i1285 = xor i32 %xor852.i1280, %1580
  %1581 = load i32, i32* %t.i416, align 4
  %shr858.i1286 = lshr i32 %1581, 10
  %and859.i1287 = and i32 %shr858.i1286, 63
  %idxprom860.i1288 = zext i32 %and859.i1287 to i64
  %arrayidx861.i1289 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i1288
  %1582 = load i32, i32* %arrayidx861.i1289, align 4
  %xor862.i1290 = xor i32 %xor857.i1285, %1582
  %1583 = load i32, i32* %t.i416, align 4
  %shr863.i1291 = lshr i32 %1583, 18
  %and864.i1292 = and i32 %shr863.i1291, 63
  %idxprom865.i1293 = zext i32 %and864.i1292 to i64
  %arrayidx866.i1294 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i1293
  %1584 = load i32, i32* %arrayidx866.i1294, align 4
  %xor867.i1295 = xor i32 %xor862.i1290, %1584
  %1585 = load i32, i32* %t.i416, align 4
  %shr868.i1296 = lshr i32 %1585, 26
  %idxprom870.i1297 = zext i32 %shr868.i1296 to i64
  %arrayidx871.i1298 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i1297
  %1586 = load i32, i32* %arrayidx871.i1298, align 4
  %xor872.i1299 = xor i32 %xor867.i1295, %1586
  %1587 = load i32, i32* %r.i415, align 4
  %xor873.i1300 = xor i32 %1587, %xor872.i1299
  store i32 %xor873.i1300, i32* %r.i415, align 4
  %1588 = load i32, i32* %r.i415, align 4
  %1589 = load i32*, i32** %s.i418, align 8
  %arrayidx874.i1301 = getelementptr inbounds i32, i32* %1589, i64 26
  %1590 = load i32, i32* %arrayidx874.i1301, align 4
  %xor875.i1302 = xor i32 %1588, %1590
  store i32 %xor875.i1302, i32* %u.i417, align 4
  %1591 = load i32, i32* %r.i415, align 4
  %1592 = load i32*, i32** %s.i418, align 8
  %arrayidx876.i1303 = getelementptr inbounds i32, i32* %1592, i64 27
  %1593 = load i32, i32* %arrayidx876.i1303, align 4
  %xor877.i1304 = xor i32 %1591, %1593
  store i32 %xor877.i1304, i32* %t.i416, align 4
  %1594 = load i32, i32* %t.i416, align 4
  %1595 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1594) #5, !srcloc !22
  store i32 %1595, i32* %ret878.i460, align 4
  %1596 = load i32, i32* %ret878.i460, align 4
  store i32 %1596, i32* %tmp879.i461, align 4
  %1597 = load i32, i32* %tmp879.i461, align 4
  store i32 %1597, i32* %t.i416, align 4
  %1598 = load i32, i32* %u.i417, align 4
  %shr880.i1305 = lshr i32 %1598, 2
  %and881.i1306 = and i32 %shr880.i1305, 63
  %idxprom882.i1307 = zext i32 %and881.i1306 to i64
  %arrayidx883.i1308 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i1307
  %1599 = load i32, i32* %arrayidx883.i1308, align 4
  %1600 = load i32, i32* %u.i417, align 4
  %shr884.i1309 = lshr i32 %1600, 10
  %and885.i1310 = and i32 %shr884.i1309, 63
  %idxprom886.i1311 = zext i32 %and885.i1310 to i64
  %arrayidx887.i1312 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i1311
  %1601 = load i32, i32* %arrayidx887.i1312, align 4
  %xor888.i1313 = xor i32 %1599, %1601
  %1602 = load i32, i32* %u.i417, align 4
  %shr889.i1314 = lshr i32 %1602, 18
  %and890.i1315 = and i32 %shr889.i1314, 63
  %idxprom891.i1316 = zext i32 %and890.i1315 to i64
  %arrayidx892.i1317 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i1316
  %1603 = load i32, i32* %arrayidx892.i1317, align 4
  %xor893.i1318 = xor i32 %xor888.i1313, %1603
  %1604 = load i32, i32* %u.i417, align 4
  %shr894.i1319 = lshr i32 %1604, 26
  %idxprom896.i1320 = zext i32 %shr894.i1319 to i64
  %arrayidx897.i1321 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i1320
  %1605 = load i32, i32* %arrayidx897.i1321, align 4
  %xor898.i1322 = xor i32 %xor893.i1318, %1605
  %1606 = load i32, i32* %t.i416, align 4
  %shr899.i1323 = lshr i32 %1606, 2
  %and900.i1324 = and i32 %shr899.i1323, 63
  %idxprom901.i1325 = zext i32 %and900.i1324 to i64
  %arrayidx902.i1326 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i1325
  %1607 = load i32, i32* %arrayidx902.i1326, align 4
  %xor903.i1327 = xor i32 %xor898.i1322, %1607
  %1608 = load i32, i32* %t.i416, align 4
  %shr904.i1328 = lshr i32 %1608, 10
  %and905.i1329 = and i32 %shr904.i1328, 63
  %idxprom906.i1330 = zext i32 %and905.i1329 to i64
  %arrayidx907.i1331 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i1330
  %1609 = load i32, i32* %arrayidx907.i1331, align 4
  %xor908.i1332 = xor i32 %xor903.i1327, %1609
  %1610 = load i32, i32* %t.i416, align 4
  %shr909.i1333 = lshr i32 %1610, 18
  %and910.i1334 = and i32 %shr909.i1333, 63
  %idxprom911.i1335 = zext i32 %and910.i1334 to i64
  %arrayidx912.i1336 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i1335
  %1611 = load i32, i32* %arrayidx912.i1336, align 4
  %xor913.i1337 = xor i32 %xor908.i1332, %1611
  %1612 = load i32, i32* %t.i416, align 4
  %shr914.i1338 = lshr i32 %1612, 26
  %idxprom916.i1339 = zext i32 %shr914.i1338 to i64
  %arrayidx917.i1340 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i1339
  %1613 = load i32, i32* %arrayidx917.i1340, align 4
  %xor918.i1341 = xor i32 %xor913.i1337, %1613
  %1614 = load i32, i32* %l.i414, align 4
  %xor919.i1342 = xor i32 %1614, %xor918.i1341
  store i32 %xor919.i1342, i32* %l.i414, align 4
  %1615 = load i32, i32* %l.i414, align 4
  %1616 = load i32*, i32** %s.i418, align 8
  %arrayidx920.i1343 = getelementptr inbounds i32, i32* %1616, i64 24
  %1617 = load i32, i32* %arrayidx920.i1343, align 4
  %xor921.i1344 = xor i32 %1615, %1617
  store i32 %xor921.i1344, i32* %u.i417, align 4
  %1618 = load i32, i32* %l.i414, align 4
  %1619 = load i32*, i32** %s.i418, align 8
  %arrayidx922.i1345 = getelementptr inbounds i32, i32* %1619, i64 25
  %1620 = load i32, i32* %arrayidx922.i1345, align 4
  %xor923.i1346 = xor i32 %1618, %1620
  store i32 %xor923.i1346, i32* %t.i416, align 4
  %1621 = load i32, i32* %t.i416, align 4
  %1622 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1621) #5, !srcloc !23
  store i32 %1622, i32* %ret924.i462, align 4
  %1623 = load i32, i32* %ret924.i462, align 4
  store i32 %1623, i32* %tmp925.i463, align 4
  %1624 = load i32, i32* %tmp925.i463, align 4
  store i32 %1624, i32* %t.i416, align 4
  %1625 = load i32, i32* %u.i417, align 4
  %shr926.i1347 = lshr i32 %1625, 2
  %and927.i1348 = and i32 %shr926.i1347, 63
  %idxprom928.i1349 = zext i32 %and927.i1348 to i64
  %arrayidx929.i1350 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i1349
  %1626 = load i32, i32* %arrayidx929.i1350, align 4
  %1627 = load i32, i32* %u.i417, align 4
  %shr930.i1351 = lshr i32 %1627, 10
  %and931.i1352 = and i32 %shr930.i1351, 63
  %idxprom932.i1353 = zext i32 %and931.i1352 to i64
  %arrayidx933.i1354 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i1353
  %1628 = load i32, i32* %arrayidx933.i1354, align 4
  %xor934.i1355 = xor i32 %1626, %1628
  %1629 = load i32, i32* %u.i417, align 4
  %shr935.i1356 = lshr i32 %1629, 18
  %and936.i1357 = and i32 %shr935.i1356, 63
  %idxprom937.i1358 = zext i32 %and936.i1357 to i64
  %arrayidx938.i1359 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i1358
  %1630 = load i32, i32* %arrayidx938.i1359, align 4
  %xor939.i1360 = xor i32 %xor934.i1355, %1630
  %1631 = load i32, i32* %u.i417, align 4
  %shr940.i1361 = lshr i32 %1631, 26
  %idxprom942.i1362 = zext i32 %shr940.i1361 to i64
  %arrayidx943.i1363 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i1362
  %1632 = load i32, i32* %arrayidx943.i1363, align 4
  %xor944.i1364 = xor i32 %xor939.i1360, %1632
  %1633 = load i32, i32* %t.i416, align 4
  %shr945.i1365 = lshr i32 %1633, 2
  %and946.i1366 = and i32 %shr945.i1365, 63
  %idxprom947.i1367 = zext i32 %and946.i1366 to i64
  %arrayidx948.i1368 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i1367
  %1634 = load i32, i32* %arrayidx948.i1368, align 4
  %xor949.i1369 = xor i32 %xor944.i1364, %1634
  %1635 = load i32, i32* %t.i416, align 4
  %shr950.i1370 = lshr i32 %1635, 10
  %and951.i1371 = and i32 %shr950.i1370, 63
  %idxprom952.i1372 = zext i32 %and951.i1371 to i64
  %arrayidx953.i1373 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i1372
  %1636 = load i32, i32* %arrayidx953.i1373, align 4
  %xor954.i1374 = xor i32 %xor949.i1369, %1636
  %1637 = load i32, i32* %t.i416, align 4
  %shr955.i1375 = lshr i32 %1637, 18
  %and956.i1376 = and i32 %shr955.i1375, 63
  %idxprom957.i1377 = zext i32 %and956.i1376 to i64
  %arrayidx958.i1378 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i1377
  %1638 = load i32, i32* %arrayidx958.i1378, align 4
  %xor959.i1379 = xor i32 %xor954.i1374, %1638
  %1639 = load i32, i32* %t.i416, align 4
  %shr960.i1380 = lshr i32 %1639, 26
  %idxprom962.i1381 = zext i32 %shr960.i1380 to i64
  %arrayidx963.i1382 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i1381
  %1640 = load i32, i32* %arrayidx963.i1382, align 4
  %xor964.i1383 = xor i32 %xor959.i1379, %1640
  %1641 = load i32, i32* %r.i415, align 4
  %xor965.i1384 = xor i32 %1641, %xor964.i1383
  store i32 %xor965.i1384, i32* %r.i415, align 4
  %1642 = load i32, i32* %r.i415, align 4
  %1643 = load i32*, i32** %s.i418, align 8
  %arrayidx966.i1385 = getelementptr inbounds i32, i32* %1643, i64 22
  %1644 = load i32, i32* %arrayidx966.i1385, align 4
  %xor967.i1386 = xor i32 %1642, %1644
  store i32 %xor967.i1386, i32* %u.i417, align 4
  %1645 = load i32, i32* %r.i415, align 4
  %1646 = load i32*, i32** %s.i418, align 8
  %arrayidx968.i1387 = getelementptr inbounds i32, i32* %1646, i64 23
  %1647 = load i32, i32* %arrayidx968.i1387, align 4
  %xor969.i1388 = xor i32 %1645, %1647
  store i32 %xor969.i1388, i32* %t.i416, align 4
  %1648 = load i32, i32* %t.i416, align 4
  %1649 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1648) #5, !srcloc !24
  store i32 %1649, i32* %ret970.i464, align 4
  %1650 = load i32, i32* %ret970.i464, align 4
  store i32 %1650, i32* %tmp971.i465, align 4
  %1651 = load i32, i32* %tmp971.i465, align 4
  store i32 %1651, i32* %t.i416, align 4
  %1652 = load i32, i32* %u.i417, align 4
  %shr972.i1389 = lshr i32 %1652, 2
  %and973.i1390 = and i32 %shr972.i1389, 63
  %idxprom974.i1391 = zext i32 %and973.i1390 to i64
  %arrayidx975.i1392 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i1391
  %1653 = load i32, i32* %arrayidx975.i1392, align 4
  %1654 = load i32, i32* %u.i417, align 4
  %shr976.i1393 = lshr i32 %1654, 10
  %and977.i1394 = and i32 %shr976.i1393, 63
  %idxprom978.i1395 = zext i32 %and977.i1394 to i64
  %arrayidx979.i1396 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i1395
  %1655 = load i32, i32* %arrayidx979.i1396, align 4
  %xor980.i1397 = xor i32 %1653, %1655
  %1656 = load i32, i32* %u.i417, align 4
  %shr981.i1398 = lshr i32 %1656, 18
  %and982.i1399 = and i32 %shr981.i1398, 63
  %idxprom983.i1400 = zext i32 %and982.i1399 to i64
  %arrayidx984.i1401 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i1400
  %1657 = load i32, i32* %arrayidx984.i1401, align 4
  %xor985.i1402 = xor i32 %xor980.i1397, %1657
  %1658 = load i32, i32* %u.i417, align 4
  %shr986.i1403 = lshr i32 %1658, 26
  %idxprom988.i1404 = zext i32 %shr986.i1403 to i64
  %arrayidx989.i1405 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i1404
  %1659 = load i32, i32* %arrayidx989.i1405, align 4
  %xor990.i1406 = xor i32 %xor985.i1402, %1659
  %1660 = load i32, i32* %t.i416, align 4
  %shr991.i1407 = lshr i32 %1660, 2
  %and992.i1408 = and i32 %shr991.i1407, 63
  %idxprom993.i1409 = zext i32 %and992.i1408 to i64
  %arrayidx994.i1410 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i1409
  %1661 = load i32, i32* %arrayidx994.i1410, align 4
  %xor995.i1411 = xor i32 %xor990.i1406, %1661
  %1662 = load i32, i32* %t.i416, align 4
  %shr996.i1412 = lshr i32 %1662, 10
  %and997.i1413 = and i32 %shr996.i1412, 63
  %idxprom998.i1414 = zext i32 %and997.i1413 to i64
  %arrayidx999.i1415 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i1414
  %1663 = load i32, i32* %arrayidx999.i1415, align 4
  %xor1000.i1416 = xor i32 %xor995.i1411, %1663
  %1664 = load i32, i32* %t.i416, align 4
  %shr1001.i1417 = lshr i32 %1664, 18
  %and1002.i1418 = and i32 %shr1001.i1417, 63
  %idxprom1003.i1419 = zext i32 %and1002.i1418 to i64
  %arrayidx1004.i1420 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i1419
  %1665 = load i32, i32* %arrayidx1004.i1420, align 4
  %xor1005.i1421 = xor i32 %xor1000.i1416, %1665
  %1666 = load i32, i32* %t.i416, align 4
  %shr1006.i1422 = lshr i32 %1666, 26
  %idxprom1008.i1423 = zext i32 %shr1006.i1422 to i64
  %arrayidx1009.i1424 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i1423
  %1667 = load i32, i32* %arrayidx1009.i1424, align 4
  %xor1010.i1425 = xor i32 %xor1005.i1421, %1667
  %1668 = load i32, i32* %l.i414, align 4
  %xor1011.i1426 = xor i32 %1668, %xor1010.i1425
  store i32 %xor1011.i1426, i32* %l.i414, align 4
  %1669 = load i32, i32* %l.i414, align 4
  %1670 = load i32*, i32** %s.i418, align 8
  %arrayidx1012.i1427 = getelementptr inbounds i32, i32* %1670, i64 20
  %1671 = load i32, i32* %arrayidx1012.i1427, align 4
  %xor1013.i1428 = xor i32 %1669, %1671
  store i32 %xor1013.i1428, i32* %u.i417, align 4
  %1672 = load i32, i32* %l.i414, align 4
  %1673 = load i32*, i32** %s.i418, align 8
  %arrayidx1014.i1429 = getelementptr inbounds i32, i32* %1673, i64 21
  %1674 = load i32, i32* %arrayidx1014.i1429, align 4
  %xor1015.i1430 = xor i32 %1672, %1674
  store i32 %xor1015.i1430, i32* %t.i416, align 4
  %1675 = load i32, i32* %t.i416, align 4
  %1676 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1675) #5, !srcloc !25
  store i32 %1676, i32* %ret1016.i466, align 4
  %1677 = load i32, i32* %ret1016.i466, align 4
  store i32 %1677, i32* %tmp1017.i467, align 4
  %1678 = load i32, i32* %tmp1017.i467, align 4
  store i32 %1678, i32* %t.i416, align 4
  %1679 = load i32, i32* %u.i417, align 4
  %shr1018.i1431 = lshr i32 %1679, 2
  %and1019.i1432 = and i32 %shr1018.i1431, 63
  %idxprom1020.i1433 = zext i32 %and1019.i1432 to i64
  %arrayidx1021.i1434 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i1433
  %1680 = load i32, i32* %arrayidx1021.i1434, align 4
  %1681 = load i32, i32* %u.i417, align 4
  %shr1022.i1435 = lshr i32 %1681, 10
  %and1023.i1436 = and i32 %shr1022.i1435, 63
  %idxprom1024.i1437 = zext i32 %and1023.i1436 to i64
  %arrayidx1025.i1438 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i1437
  %1682 = load i32, i32* %arrayidx1025.i1438, align 4
  %xor1026.i1439 = xor i32 %1680, %1682
  %1683 = load i32, i32* %u.i417, align 4
  %shr1027.i1440 = lshr i32 %1683, 18
  %and1028.i1441 = and i32 %shr1027.i1440, 63
  %idxprom1029.i1442 = zext i32 %and1028.i1441 to i64
  %arrayidx1030.i1443 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i1442
  %1684 = load i32, i32* %arrayidx1030.i1443, align 4
  %xor1031.i1444 = xor i32 %xor1026.i1439, %1684
  %1685 = load i32, i32* %u.i417, align 4
  %shr1032.i1445 = lshr i32 %1685, 26
  %idxprom1034.i1446 = zext i32 %shr1032.i1445 to i64
  %arrayidx1035.i1447 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i1446
  %1686 = load i32, i32* %arrayidx1035.i1447, align 4
  %xor1036.i1448 = xor i32 %xor1031.i1444, %1686
  %1687 = load i32, i32* %t.i416, align 4
  %shr1037.i1449 = lshr i32 %1687, 2
  %and1038.i1450 = and i32 %shr1037.i1449, 63
  %idxprom1039.i1451 = zext i32 %and1038.i1450 to i64
  %arrayidx1040.i1452 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i1451
  %1688 = load i32, i32* %arrayidx1040.i1452, align 4
  %xor1041.i1453 = xor i32 %xor1036.i1448, %1688
  %1689 = load i32, i32* %t.i416, align 4
  %shr1042.i1454 = lshr i32 %1689, 10
  %and1043.i1455 = and i32 %shr1042.i1454, 63
  %idxprom1044.i1456 = zext i32 %and1043.i1455 to i64
  %arrayidx1045.i1457 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i1456
  %1690 = load i32, i32* %arrayidx1045.i1457, align 4
  %xor1046.i1458 = xor i32 %xor1041.i1453, %1690
  %1691 = load i32, i32* %t.i416, align 4
  %shr1047.i1459 = lshr i32 %1691, 18
  %and1048.i1460 = and i32 %shr1047.i1459, 63
  %idxprom1049.i1461 = zext i32 %and1048.i1460 to i64
  %arrayidx1050.i1462 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i1461
  %1692 = load i32, i32* %arrayidx1050.i1462, align 4
  %xor1051.i1463 = xor i32 %xor1046.i1458, %1692
  %1693 = load i32, i32* %t.i416, align 4
  %shr1052.i1464 = lshr i32 %1693, 26
  %idxprom1054.i1465 = zext i32 %shr1052.i1464 to i64
  %arrayidx1055.i1466 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i1465
  %1694 = load i32, i32* %arrayidx1055.i1466, align 4
  %xor1056.i1467 = xor i32 %xor1051.i1463, %1694
  %1695 = load i32, i32* %r.i415, align 4
  %xor1057.i1468 = xor i32 %1695, %xor1056.i1467
  store i32 %xor1057.i1468, i32* %r.i415, align 4
  %1696 = load i32, i32* %r.i415, align 4
  %1697 = load i32*, i32** %s.i418, align 8
  %arrayidx1058.i1469 = getelementptr inbounds i32, i32* %1697, i64 18
  %1698 = load i32, i32* %arrayidx1058.i1469, align 4
  %xor1059.i1470 = xor i32 %1696, %1698
  store i32 %xor1059.i1470, i32* %u.i417, align 4
  %1699 = load i32, i32* %r.i415, align 4
  %1700 = load i32*, i32** %s.i418, align 8
  %arrayidx1060.i1471 = getelementptr inbounds i32, i32* %1700, i64 19
  %1701 = load i32, i32* %arrayidx1060.i1471, align 4
  %xor1061.i1472 = xor i32 %1699, %1701
  store i32 %xor1061.i1472, i32* %t.i416, align 4
  %1702 = load i32, i32* %t.i416, align 4
  %1703 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1702) #5, !srcloc !26
  store i32 %1703, i32* %ret1062.i468, align 4
  %1704 = load i32, i32* %ret1062.i468, align 4
  store i32 %1704, i32* %tmp1063.i469, align 4
  %1705 = load i32, i32* %tmp1063.i469, align 4
  store i32 %1705, i32* %t.i416, align 4
  %1706 = load i32, i32* %u.i417, align 4
  %shr1064.i1473 = lshr i32 %1706, 2
  %and1065.i1474 = and i32 %shr1064.i1473, 63
  %idxprom1066.i1475 = zext i32 %and1065.i1474 to i64
  %arrayidx1067.i1476 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i1475
  %1707 = load i32, i32* %arrayidx1067.i1476, align 4
  %1708 = load i32, i32* %u.i417, align 4
  %shr1068.i1477 = lshr i32 %1708, 10
  %and1069.i1478 = and i32 %shr1068.i1477, 63
  %idxprom1070.i1479 = zext i32 %and1069.i1478 to i64
  %arrayidx1071.i1480 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i1479
  %1709 = load i32, i32* %arrayidx1071.i1480, align 4
  %xor1072.i1481 = xor i32 %1707, %1709
  %1710 = load i32, i32* %u.i417, align 4
  %shr1073.i1482 = lshr i32 %1710, 18
  %and1074.i1483 = and i32 %shr1073.i1482, 63
  %idxprom1075.i1484 = zext i32 %and1074.i1483 to i64
  %arrayidx1076.i1485 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i1484
  %1711 = load i32, i32* %arrayidx1076.i1485, align 4
  %xor1077.i1486 = xor i32 %xor1072.i1481, %1711
  %1712 = load i32, i32* %u.i417, align 4
  %shr1078.i1487 = lshr i32 %1712, 26
  %idxprom1080.i1488 = zext i32 %shr1078.i1487 to i64
  %arrayidx1081.i1489 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i1488
  %1713 = load i32, i32* %arrayidx1081.i1489, align 4
  %xor1082.i1490 = xor i32 %xor1077.i1486, %1713
  %1714 = load i32, i32* %t.i416, align 4
  %shr1083.i1491 = lshr i32 %1714, 2
  %and1084.i1492 = and i32 %shr1083.i1491, 63
  %idxprom1085.i1493 = zext i32 %and1084.i1492 to i64
  %arrayidx1086.i1494 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i1493
  %1715 = load i32, i32* %arrayidx1086.i1494, align 4
  %xor1087.i1495 = xor i32 %xor1082.i1490, %1715
  %1716 = load i32, i32* %t.i416, align 4
  %shr1088.i1496 = lshr i32 %1716, 10
  %and1089.i1497 = and i32 %shr1088.i1496, 63
  %idxprom1090.i1498 = zext i32 %and1089.i1497 to i64
  %arrayidx1091.i1499 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i1498
  %1717 = load i32, i32* %arrayidx1091.i1499, align 4
  %xor1092.i1500 = xor i32 %xor1087.i1495, %1717
  %1718 = load i32, i32* %t.i416, align 4
  %shr1093.i1501 = lshr i32 %1718, 18
  %and1094.i1502 = and i32 %shr1093.i1501, 63
  %idxprom1095.i1503 = zext i32 %and1094.i1502 to i64
  %arrayidx1096.i1504 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i1503
  %1719 = load i32, i32* %arrayidx1096.i1504, align 4
  %xor1097.i1505 = xor i32 %xor1092.i1500, %1719
  %1720 = load i32, i32* %t.i416, align 4
  %shr1098.i1506 = lshr i32 %1720, 26
  %idxprom1100.i1507 = zext i32 %shr1098.i1506 to i64
  %arrayidx1101.i1508 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i1507
  %1721 = load i32, i32* %arrayidx1101.i1508, align 4
  %xor1102.i1509 = xor i32 %xor1097.i1505, %1721
  %1722 = load i32, i32* %l.i414, align 4
  %xor1103.i1510 = xor i32 %1722, %xor1102.i1509
  store i32 %xor1103.i1510, i32* %l.i414, align 4
  %1723 = load i32, i32* %l.i414, align 4
  %1724 = load i32*, i32** %s.i418, align 8
  %arrayidx1104.i1511 = getelementptr inbounds i32, i32* %1724, i64 16
  %1725 = load i32, i32* %arrayidx1104.i1511, align 4
  %xor1105.i1512 = xor i32 %1723, %1725
  store i32 %xor1105.i1512, i32* %u.i417, align 4
  %1726 = load i32, i32* %l.i414, align 4
  %1727 = load i32*, i32** %s.i418, align 8
  %arrayidx1106.i1513 = getelementptr inbounds i32, i32* %1727, i64 17
  %1728 = load i32, i32* %arrayidx1106.i1513, align 4
  %xor1107.i1514 = xor i32 %1726, %1728
  store i32 %xor1107.i1514, i32* %t.i416, align 4
  %1729 = load i32, i32* %t.i416, align 4
  %1730 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1729) #5, !srcloc !27
  store i32 %1730, i32* %ret1108.i470, align 4
  %1731 = load i32, i32* %ret1108.i470, align 4
  store i32 %1731, i32* %tmp1109.i471, align 4
  %1732 = load i32, i32* %tmp1109.i471, align 4
  store i32 %1732, i32* %t.i416, align 4
  %1733 = load i32, i32* %u.i417, align 4
  %shr1110.i1515 = lshr i32 %1733, 2
  %and1111.i1516 = and i32 %shr1110.i1515, 63
  %idxprom1112.i1517 = zext i32 %and1111.i1516 to i64
  %arrayidx1113.i1518 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i1517
  %1734 = load i32, i32* %arrayidx1113.i1518, align 4
  %1735 = load i32, i32* %u.i417, align 4
  %shr1114.i1519 = lshr i32 %1735, 10
  %and1115.i1520 = and i32 %shr1114.i1519, 63
  %idxprom1116.i1521 = zext i32 %and1115.i1520 to i64
  %arrayidx1117.i1522 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i1521
  %1736 = load i32, i32* %arrayidx1117.i1522, align 4
  %xor1118.i1523 = xor i32 %1734, %1736
  %1737 = load i32, i32* %u.i417, align 4
  %shr1119.i1524 = lshr i32 %1737, 18
  %and1120.i1525 = and i32 %shr1119.i1524, 63
  %idxprom1121.i1526 = zext i32 %and1120.i1525 to i64
  %arrayidx1122.i1527 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i1526
  %1738 = load i32, i32* %arrayidx1122.i1527, align 4
  %xor1123.i1528 = xor i32 %xor1118.i1523, %1738
  %1739 = load i32, i32* %u.i417, align 4
  %shr1124.i1529 = lshr i32 %1739, 26
  %idxprom1126.i1530 = zext i32 %shr1124.i1529 to i64
  %arrayidx1127.i1531 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i1530
  %1740 = load i32, i32* %arrayidx1127.i1531, align 4
  %xor1128.i1532 = xor i32 %xor1123.i1528, %1740
  %1741 = load i32, i32* %t.i416, align 4
  %shr1129.i1533 = lshr i32 %1741, 2
  %and1130.i1534 = and i32 %shr1129.i1533, 63
  %idxprom1131.i1535 = zext i32 %and1130.i1534 to i64
  %arrayidx1132.i1536 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i1535
  %1742 = load i32, i32* %arrayidx1132.i1536, align 4
  %xor1133.i1537 = xor i32 %xor1128.i1532, %1742
  %1743 = load i32, i32* %t.i416, align 4
  %shr1134.i1538 = lshr i32 %1743, 10
  %and1135.i1539 = and i32 %shr1134.i1538, 63
  %idxprom1136.i1540 = zext i32 %and1135.i1539 to i64
  %arrayidx1137.i1541 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i1540
  %1744 = load i32, i32* %arrayidx1137.i1541, align 4
  %xor1138.i1542 = xor i32 %xor1133.i1537, %1744
  %1745 = load i32, i32* %t.i416, align 4
  %shr1139.i1543 = lshr i32 %1745, 18
  %and1140.i1544 = and i32 %shr1139.i1543, 63
  %idxprom1141.i1545 = zext i32 %and1140.i1544 to i64
  %arrayidx1142.i1546 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i1545
  %1746 = load i32, i32* %arrayidx1142.i1546, align 4
  %xor1143.i1547 = xor i32 %xor1138.i1542, %1746
  %1747 = load i32, i32* %t.i416, align 4
  %shr1144.i1548 = lshr i32 %1747, 26
  %idxprom1146.i1549 = zext i32 %shr1144.i1548 to i64
  %arrayidx1147.i1550 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i1549
  %1748 = load i32, i32* %arrayidx1147.i1550, align 4
  %xor1148.i1551 = xor i32 %xor1143.i1547, %1748
  %1749 = load i32, i32* %r.i415, align 4
  %xor1149.i1552 = xor i32 %1749, %xor1148.i1551
  store i32 %xor1149.i1552, i32* %r.i415, align 4
  %1750 = load i32, i32* %r.i415, align 4
  %1751 = load i32*, i32** %s.i418, align 8
  %arrayidx1150.i1553 = getelementptr inbounds i32, i32* %1751, i64 14
  %1752 = load i32, i32* %arrayidx1150.i1553, align 4
  %xor1151.i1554 = xor i32 %1750, %1752
  store i32 %xor1151.i1554, i32* %u.i417, align 4
  %1753 = load i32, i32* %r.i415, align 4
  %1754 = load i32*, i32** %s.i418, align 8
  %arrayidx1152.i1555 = getelementptr inbounds i32, i32* %1754, i64 15
  %1755 = load i32, i32* %arrayidx1152.i1555, align 4
  %xor1153.i1556 = xor i32 %1753, %1755
  store i32 %xor1153.i1556, i32* %t.i416, align 4
  %1756 = load i32, i32* %t.i416, align 4
  %1757 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1756) #5, !srcloc !28
  store i32 %1757, i32* %ret1154.i472, align 4
  %1758 = load i32, i32* %ret1154.i472, align 4
  store i32 %1758, i32* %tmp1155.i473, align 4
  %1759 = load i32, i32* %tmp1155.i473, align 4
  store i32 %1759, i32* %t.i416, align 4
  %1760 = load i32, i32* %u.i417, align 4
  %shr1156.i1557 = lshr i32 %1760, 2
  %and1157.i1558 = and i32 %shr1156.i1557, 63
  %idxprom1158.i1559 = zext i32 %and1157.i1558 to i64
  %arrayidx1159.i1560 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i1559
  %1761 = load i32, i32* %arrayidx1159.i1560, align 4
  %1762 = load i32, i32* %u.i417, align 4
  %shr1160.i1561 = lshr i32 %1762, 10
  %and1161.i1562 = and i32 %shr1160.i1561, 63
  %idxprom1162.i1563 = zext i32 %and1161.i1562 to i64
  %arrayidx1163.i1564 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i1563
  %1763 = load i32, i32* %arrayidx1163.i1564, align 4
  %xor1164.i1565 = xor i32 %1761, %1763
  %1764 = load i32, i32* %u.i417, align 4
  %shr1165.i1566 = lshr i32 %1764, 18
  %and1166.i1567 = and i32 %shr1165.i1566, 63
  %idxprom1167.i1568 = zext i32 %and1166.i1567 to i64
  %arrayidx1168.i1569 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i1568
  %1765 = load i32, i32* %arrayidx1168.i1569, align 4
  %xor1169.i1570 = xor i32 %xor1164.i1565, %1765
  %1766 = load i32, i32* %u.i417, align 4
  %shr1170.i1571 = lshr i32 %1766, 26
  %idxprom1172.i1572 = zext i32 %shr1170.i1571 to i64
  %arrayidx1173.i1573 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i1572
  %1767 = load i32, i32* %arrayidx1173.i1573, align 4
  %xor1174.i1574 = xor i32 %xor1169.i1570, %1767
  %1768 = load i32, i32* %t.i416, align 4
  %shr1175.i1575 = lshr i32 %1768, 2
  %and1176.i1576 = and i32 %shr1175.i1575, 63
  %idxprom1177.i1577 = zext i32 %and1176.i1576 to i64
  %arrayidx1178.i1578 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i1577
  %1769 = load i32, i32* %arrayidx1178.i1578, align 4
  %xor1179.i1579 = xor i32 %xor1174.i1574, %1769
  %1770 = load i32, i32* %t.i416, align 4
  %shr1180.i1580 = lshr i32 %1770, 10
  %and1181.i1581 = and i32 %shr1180.i1580, 63
  %idxprom1182.i1582 = zext i32 %and1181.i1581 to i64
  %arrayidx1183.i1583 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i1582
  %1771 = load i32, i32* %arrayidx1183.i1583, align 4
  %xor1184.i1584 = xor i32 %xor1179.i1579, %1771
  %1772 = load i32, i32* %t.i416, align 4
  %shr1185.i1585 = lshr i32 %1772, 18
  %and1186.i1586 = and i32 %shr1185.i1585, 63
  %idxprom1187.i1587 = zext i32 %and1186.i1586 to i64
  %arrayidx1188.i1588 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i1587
  %1773 = load i32, i32* %arrayidx1188.i1588, align 4
  %xor1189.i1589 = xor i32 %xor1184.i1584, %1773
  %1774 = load i32, i32* %t.i416, align 4
  %shr1190.i1590 = lshr i32 %1774, 26
  %idxprom1192.i1591 = zext i32 %shr1190.i1590 to i64
  %arrayidx1193.i1592 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i1591
  %1775 = load i32, i32* %arrayidx1193.i1592, align 4
  %xor1194.i1593 = xor i32 %xor1189.i1589, %1775
  %1776 = load i32, i32* %l.i414, align 4
  %xor1195.i1594 = xor i32 %1776, %xor1194.i1593
  store i32 %xor1195.i1594, i32* %l.i414, align 4
  %1777 = load i32, i32* %l.i414, align 4
  %1778 = load i32*, i32** %s.i418, align 8
  %arrayidx1196.i1595 = getelementptr inbounds i32, i32* %1778, i64 12
  %1779 = load i32, i32* %arrayidx1196.i1595, align 4
  %xor1197.i1596 = xor i32 %1777, %1779
  store i32 %xor1197.i1596, i32* %u.i417, align 4
  %1780 = load i32, i32* %l.i414, align 4
  %1781 = load i32*, i32** %s.i418, align 8
  %arrayidx1198.i1597 = getelementptr inbounds i32, i32* %1781, i64 13
  %1782 = load i32, i32* %arrayidx1198.i1597, align 4
  %xor1199.i1598 = xor i32 %1780, %1782
  store i32 %xor1199.i1598, i32* %t.i416, align 4
  %1783 = load i32, i32* %t.i416, align 4
  %1784 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1783) #5, !srcloc !29
  store i32 %1784, i32* %ret1200.i474, align 4
  %1785 = load i32, i32* %ret1200.i474, align 4
  store i32 %1785, i32* %tmp1201.i475, align 4
  %1786 = load i32, i32* %tmp1201.i475, align 4
  store i32 %1786, i32* %t.i416, align 4
  %1787 = load i32, i32* %u.i417, align 4
  %shr1202.i1599 = lshr i32 %1787, 2
  %and1203.i1600 = and i32 %shr1202.i1599, 63
  %idxprom1204.i1601 = zext i32 %and1203.i1600 to i64
  %arrayidx1205.i1602 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i1601
  %1788 = load i32, i32* %arrayidx1205.i1602, align 4
  %1789 = load i32, i32* %u.i417, align 4
  %shr1206.i1603 = lshr i32 %1789, 10
  %and1207.i1604 = and i32 %shr1206.i1603, 63
  %idxprom1208.i1605 = zext i32 %and1207.i1604 to i64
  %arrayidx1209.i1606 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i1605
  %1790 = load i32, i32* %arrayidx1209.i1606, align 4
  %xor1210.i1607 = xor i32 %1788, %1790
  %1791 = load i32, i32* %u.i417, align 4
  %shr1211.i1608 = lshr i32 %1791, 18
  %and1212.i1609 = and i32 %shr1211.i1608, 63
  %idxprom1213.i1610 = zext i32 %and1212.i1609 to i64
  %arrayidx1214.i1611 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i1610
  %1792 = load i32, i32* %arrayidx1214.i1611, align 4
  %xor1215.i1612 = xor i32 %xor1210.i1607, %1792
  %1793 = load i32, i32* %u.i417, align 4
  %shr1216.i1613 = lshr i32 %1793, 26
  %idxprom1218.i1614 = zext i32 %shr1216.i1613 to i64
  %arrayidx1219.i1615 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i1614
  %1794 = load i32, i32* %arrayidx1219.i1615, align 4
  %xor1220.i1616 = xor i32 %xor1215.i1612, %1794
  %1795 = load i32, i32* %t.i416, align 4
  %shr1221.i1617 = lshr i32 %1795, 2
  %and1222.i1618 = and i32 %shr1221.i1617, 63
  %idxprom1223.i1619 = zext i32 %and1222.i1618 to i64
  %arrayidx1224.i1620 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i1619
  %1796 = load i32, i32* %arrayidx1224.i1620, align 4
  %xor1225.i1621 = xor i32 %xor1220.i1616, %1796
  %1797 = load i32, i32* %t.i416, align 4
  %shr1226.i1622 = lshr i32 %1797, 10
  %and1227.i1623 = and i32 %shr1226.i1622, 63
  %idxprom1228.i1624 = zext i32 %and1227.i1623 to i64
  %arrayidx1229.i1625 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i1624
  %1798 = load i32, i32* %arrayidx1229.i1625, align 4
  %xor1230.i1626 = xor i32 %xor1225.i1621, %1798
  %1799 = load i32, i32* %t.i416, align 4
  %shr1231.i1627 = lshr i32 %1799, 18
  %and1232.i1628 = and i32 %shr1231.i1627, 63
  %idxprom1233.i1629 = zext i32 %and1232.i1628 to i64
  %arrayidx1234.i1630 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i1629
  %1800 = load i32, i32* %arrayidx1234.i1630, align 4
  %xor1235.i1631 = xor i32 %xor1230.i1626, %1800
  %1801 = load i32, i32* %t.i416, align 4
  %shr1236.i1632 = lshr i32 %1801, 26
  %idxprom1238.i1633 = zext i32 %shr1236.i1632 to i64
  %arrayidx1239.i1634 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i1633
  %1802 = load i32, i32* %arrayidx1239.i1634, align 4
  %xor1240.i1635 = xor i32 %xor1235.i1631, %1802
  %1803 = load i32, i32* %r.i415, align 4
  %xor1241.i1636 = xor i32 %1803, %xor1240.i1635
  store i32 %xor1241.i1636, i32* %r.i415, align 4
  %1804 = load i32, i32* %r.i415, align 4
  %1805 = load i32*, i32** %s.i418, align 8
  %arrayidx1242.i1637 = getelementptr inbounds i32, i32* %1805, i64 10
  %1806 = load i32, i32* %arrayidx1242.i1637, align 4
  %xor1243.i1638 = xor i32 %1804, %1806
  store i32 %xor1243.i1638, i32* %u.i417, align 4
  %1807 = load i32, i32* %r.i415, align 4
  %1808 = load i32*, i32** %s.i418, align 8
  %arrayidx1244.i1639 = getelementptr inbounds i32, i32* %1808, i64 11
  %1809 = load i32, i32* %arrayidx1244.i1639, align 4
  %xor1245.i1640 = xor i32 %1807, %1809
  store i32 %xor1245.i1640, i32* %t.i416, align 4
  %1810 = load i32, i32* %t.i416, align 4
  %1811 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1810) #5, !srcloc !30
  store i32 %1811, i32* %ret1246.i476, align 4
  %1812 = load i32, i32* %ret1246.i476, align 4
  store i32 %1812, i32* %tmp1247.i477, align 4
  %1813 = load i32, i32* %tmp1247.i477, align 4
  store i32 %1813, i32* %t.i416, align 4
  %1814 = load i32, i32* %u.i417, align 4
  %shr1248.i1641 = lshr i32 %1814, 2
  %and1249.i1642 = and i32 %shr1248.i1641, 63
  %idxprom1250.i1643 = zext i32 %and1249.i1642 to i64
  %arrayidx1251.i1644 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i1643
  %1815 = load i32, i32* %arrayidx1251.i1644, align 4
  %1816 = load i32, i32* %u.i417, align 4
  %shr1252.i1645 = lshr i32 %1816, 10
  %and1253.i1646 = and i32 %shr1252.i1645, 63
  %idxprom1254.i1647 = zext i32 %and1253.i1646 to i64
  %arrayidx1255.i1648 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i1647
  %1817 = load i32, i32* %arrayidx1255.i1648, align 4
  %xor1256.i1649 = xor i32 %1815, %1817
  %1818 = load i32, i32* %u.i417, align 4
  %shr1257.i1650 = lshr i32 %1818, 18
  %and1258.i1651 = and i32 %shr1257.i1650, 63
  %idxprom1259.i1652 = zext i32 %and1258.i1651 to i64
  %arrayidx1260.i1653 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i1652
  %1819 = load i32, i32* %arrayidx1260.i1653, align 4
  %xor1261.i1654 = xor i32 %xor1256.i1649, %1819
  %1820 = load i32, i32* %u.i417, align 4
  %shr1262.i1655 = lshr i32 %1820, 26
  %idxprom1264.i1656 = zext i32 %shr1262.i1655 to i64
  %arrayidx1265.i1657 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i1656
  %1821 = load i32, i32* %arrayidx1265.i1657, align 4
  %xor1266.i1658 = xor i32 %xor1261.i1654, %1821
  %1822 = load i32, i32* %t.i416, align 4
  %shr1267.i1659 = lshr i32 %1822, 2
  %and1268.i1660 = and i32 %shr1267.i1659, 63
  %idxprom1269.i1661 = zext i32 %and1268.i1660 to i64
  %arrayidx1270.i1662 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i1661
  %1823 = load i32, i32* %arrayidx1270.i1662, align 4
  %xor1271.i1663 = xor i32 %xor1266.i1658, %1823
  %1824 = load i32, i32* %t.i416, align 4
  %shr1272.i1664 = lshr i32 %1824, 10
  %and1273.i1665 = and i32 %shr1272.i1664, 63
  %idxprom1274.i1666 = zext i32 %and1273.i1665 to i64
  %arrayidx1275.i1667 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i1666
  %1825 = load i32, i32* %arrayidx1275.i1667, align 4
  %xor1276.i1668 = xor i32 %xor1271.i1663, %1825
  %1826 = load i32, i32* %t.i416, align 4
  %shr1277.i1669 = lshr i32 %1826, 18
  %and1278.i1670 = and i32 %shr1277.i1669, 63
  %idxprom1279.i1671 = zext i32 %and1278.i1670 to i64
  %arrayidx1280.i1672 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i1671
  %1827 = load i32, i32* %arrayidx1280.i1672, align 4
  %xor1281.i1673 = xor i32 %xor1276.i1668, %1827
  %1828 = load i32, i32* %t.i416, align 4
  %shr1282.i1674 = lshr i32 %1828, 26
  %idxprom1284.i1675 = zext i32 %shr1282.i1674 to i64
  %arrayidx1285.i1676 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i1675
  %1829 = load i32, i32* %arrayidx1285.i1676, align 4
  %xor1286.i1677 = xor i32 %xor1281.i1673, %1829
  %1830 = load i32, i32* %l.i414, align 4
  %xor1287.i1678 = xor i32 %1830, %xor1286.i1677
  store i32 %xor1287.i1678, i32* %l.i414, align 4
  %1831 = load i32, i32* %l.i414, align 4
  %1832 = load i32*, i32** %s.i418, align 8
  %arrayidx1288.i1679 = getelementptr inbounds i32, i32* %1832, i64 8
  %1833 = load i32, i32* %arrayidx1288.i1679, align 4
  %xor1289.i1680 = xor i32 %1831, %1833
  store i32 %xor1289.i1680, i32* %u.i417, align 4
  %1834 = load i32, i32* %l.i414, align 4
  %1835 = load i32*, i32** %s.i418, align 8
  %arrayidx1290.i1681 = getelementptr inbounds i32, i32* %1835, i64 9
  %1836 = load i32, i32* %arrayidx1290.i1681, align 4
  %xor1291.i1682 = xor i32 %1834, %1836
  store i32 %xor1291.i1682, i32* %t.i416, align 4
  %1837 = load i32, i32* %t.i416, align 4
  %1838 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1837) #5, !srcloc !31
  store i32 %1838, i32* %ret1292.i478, align 4
  %1839 = load i32, i32* %ret1292.i478, align 4
  store i32 %1839, i32* %tmp1293.i479, align 4
  %1840 = load i32, i32* %tmp1293.i479, align 4
  store i32 %1840, i32* %t.i416, align 4
  %1841 = load i32, i32* %u.i417, align 4
  %shr1294.i1683 = lshr i32 %1841, 2
  %and1295.i1684 = and i32 %shr1294.i1683, 63
  %idxprom1296.i1685 = zext i32 %and1295.i1684 to i64
  %arrayidx1297.i1686 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i1685
  %1842 = load i32, i32* %arrayidx1297.i1686, align 4
  %1843 = load i32, i32* %u.i417, align 4
  %shr1298.i1687 = lshr i32 %1843, 10
  %and1299.i1688 = and i32 %shr1298.i1687, 63
  %idxprom1300.i1689 = zext i32 %and1299.i1688 to i64
  %arrayidx1301.i1690 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i1689
  %1844 = load i32, i32* %arrayidx1301.i1690, align 4
  %xor1302.i1691 = xor i32 %1842, %1844
  %1845 = load i32, i32* %u.i417, align 4
  %shr1303.i1692 = lshr i32 %1845, 18
  %and1304.i1693 = and i32 %shr1303.i1692, 63
  %idxprom1305.i1694 = zext i32 %and1304.i1693 to i64
  %arrayidx1306.i1695 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i1694
  %1846 = load i32, i32* %arrayidx1306.i1695, align 4
  %xor1307.i1696 = xor i32 %xor1302.i1691, %1846
  %1847 = load i32, i32* %u.i417, align 4
  %shr1308.i1697 = lshr i32 %1847, 26
  %idxprom1310.i1698 = zext i32 %shr1308.i1697 to i64
  %arrayidx1311.i1699 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i1698
  %1848 = load i32, i32* %arrayidx1311.i1699, align 4
  %xor1312.i1700 = xor i32 %xor1307.i1696, %1848
  %1849 = load i32, i32* %t.i416, align 4
  %shr1313.i1701 = lshr i32 %1849, 2
  %and1314.i1702 = and i32 %shr1313.i1701, 63
  %idxprom1315.i1703 = zext i32 %and1314.i1702 to i64
  %arrayidx1316.i1704 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i1703
  %1850 = load i32, i32* %arrayidx1316.i1704, align 4
  %xor1317.i1705 = xor i32 %xor1312.i1700, %1850
  %1851 = load i32, i32* %t.i416, align 4
  %shr1318.i1706 = lshr i32 %1851, 10
  %and1319.i1707 = and i32 %shr1318.i1706, 63
  %idxprom1320.i1708 = zext i32 %and1319.i1707 to i64
  %arrayidx1321.i1709 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i1708
  %1852 = load i32, i32* %arrayidx1321.i1709, align 4
  %xor1322.i1710 = xor i32 %xor1317.i1705, %1852
  %1853 = load i32, i32* %t.i416, align 4
  %shr1323.i1711 = lshr i32 %1853, 18
  %and1324.i1712 = and i32 %shr1323.i1711, 63
  %idxprom1325.i1713 = zext i32 %and1324.i1712 to i64
  %arrayidx1326.i1714 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i1713
  %1854 = load i32, i32* %arrayidx1326.i1714, align 4
  %xor1327.i1715 = xor i32 %xor1322.i1710, %1854
  %1855 = load i32, i32* %t.i416, align 4
  %shr1328.i1716 = lshr i32 %1855, 26
  %idxprom1330.i1717 = zext i32 %shr1328.i1716 to i64
  %arrayidx1331.i1718 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i1717
  %1856 = load i32, i32* %arrayidx1331.i1718, align 4
  %xor1332.i1719 = xor i32 %xor1327.i1715, %1856
  %1857 = load i32, i32* %r.i415, align 4
  %xor1333.i1720 = xor i32 %1857, %xor1332.i1719
  store i32 %xor1333.i1720, i32* %r.i415, align 4
  %1858 = load i32, i32* %r.i415, align 4
  %1859 = load i32*, i32** %s.i418, align 8
  %arrayidx1334.i1721 = getelementptr inbounds i32, i32* %1859, i64 6
  %1860 = load i32, i32* %arrayidx1334.i1721, align 4
  %xor1335.i1722 = xor i32 %1858, %1860
  store i32 %xor1335.i1722, i32* %u.i417, align 4
  %1861 = load i32, i32* %r.i415, align 4
  %1862 = load i32*, i32** %s.i418, align 8
  %arrayidx1336.i1723 = getelementptr inbounds i32, i32* %1862, i64 7
  %1863 = load i32, i32* %arrayidx1336.i1723, align 4
  %xor1337.i1724 = xor i32 %1861, %1863
  store i32 %xor1337.i1724, i32* %t.i416, align 4
  %1864 = load i32, i32* %t.i416, align 4
  %1865 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1864) #5, !srcloc !32
  store i32 %1865, i32* %ret1338.i480, align 4
  %1866 = load i32, i32* %ret1338.i480, align 4
  store i32 %1866, i32* %tmp1339.i481, align 4
  %1867 = load i32, i32* %tmp1339.i481, align 4
  store i32 %1867, i32* %t.i416, align 4
  %1868 = load i32, i32* %u.i417, align 4
  %shr1340.i1725 = lshr i32 %1868, 2
  %and1341.i1726 = and i32 %shr1340.i1725, 63
  %idxprom1342.i1727 = zext i32 %and1341.i1726 to i64
  %arrayidx1343.i1728 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i1727
  %1869 = load i32, i32* %arrayidx1343.i1728, align 4
  %1870 = load i32, i32* %u.i417, align 4
  %shr1344.i1729 = lshr i32 %1870, 10
  %and1345.i1730 = and i32 %shr1344.i1729, 63
  %idxprom1346.i1731 = zext i32 %and1345.i1730 to i64
  %arrayidx1347.i1732 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i1731
  %1871 = load i32, i32* %arrayidx1347.i1732, align 4
  %xor1348.i1733 = xor i32 %1869, %1871
  %1872 = load i32, i32* %u.i417, align 4
  %shr1349.i1734 = lshr i32 %1872, 18
  %and1350.i1735 = and i32 %shr1349.i1734, 63
  %idxprom1351.i1736 = zext i32 %and1350.i1735 to i64
  %arrayidx1352.i1737 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i1736
  %1873 = load i32, i32* %arrayidx1352.i1737, align 4
  %xor1353.i1738 = xor i32 %xor1348.i1733, %1873
  %1874 = load i32, i32* %u.i417, align 4
  %shr1354.i1739 = lshr i32 %1874, 26
  %idxprom1356.i1740 = zext i32 %shr1354.i1739 to i64
  %arrayidx1357.i1741 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i1740
  %1875 = load i32, i32* %arrayidx1357.i1741, align 4
  %xor1358.i1742 = xor i32 %xor1353.i1738, %1875
  %1876 = load i32, i32* %t.i416, align 4
  %shr1359.i1743 = lshr i32 %1876, 2
  %and1360.i1744 = and i32 %shr1359.i1743, 63
  %idxprom1361.i1745 = zext i32 %and1360.i1744 to i64
  %arrayidx1362.i1746 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i1745
  %1877 = load i32, i32* %arrayidx1362.i1746, align 4
  %xor1363.i1747 = xor i32 %xor1358.i1742, %1877
  %1878 = load i32, i32* %t.i416, align 4
  %shr1364.i1748 = lshr i32 %1878, 10
  %and1365.i1749 = and i32 %shr1364.i1748, 63
  %idxprom1366.i1750 = zext i32 %and1365.i1749 to i64
  %arrayidx1367.i1751 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i1750
  %1879 = load i32, i32* %arrayidx1367.i1751, align 4
  %xor1368.i1752 = xor i32 %xor1363.i1747, %1879
  %1880 = load i32, i32* %t.i416, align 4
  %shr1369.i1753 = lshr i32 %1880, 18
  %and1370.i1754 = and i32 %shr1369.i1753, 63
  %idxprom1371.i1755 = zext i32 %and1370.i1754 to i64
  %arrayidx1372.i1756 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i1755
  %1881 = load i32, i32* %arrayidx1372.i1756, align 4
  %xor1373.i1757 = xor i32 %xor1368.i1752, %1881
  %1882 = load i32, i32* %t.i416, align 4
  %shr1374.i1758 = lshr i32 %1882, 26
  %idxprom1376.i1759 = zext i32 %shr1374.i1758 to i64
  %arrayidx1377.i1760 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i1759
  %1883 = load i32, i32* %arrayidx1377.i1760, align 4
  %xor1378.i1761 = xor i32 %xor1373.i1757, %1883
  %1884 = load i32, i32* %l.i414, align 4
  %xor1379.i1762 = xor i32 %1884, %xor1378.i1761
  store i32 %xor1379.i1762, i32* %l.i414, align 4
  %1885 = load i32, i32* %l.i414, align 4
  %1886 = load i32*, i32** %s.i418, align 8
  %arrayidx1380.i1763 = getelementptr inbounds i32, i32* %1886, i64 4
  %1887 = load i32, i32* %arrayidx1380.i1763, align 4
  %xor1381.i1764 = xor i32 %1885, %1887
  store i32 %xor1381.i1764, i32* %u.i417, align 4
  %1888 = load i32, i32* %l.i414, align 4
  %1889 = load i32*, i32** %s.i418, align 8
  %arrayidx1382.i1765 = getelementptr inbounds i32, i32* %1889, i64 5
  %1890 = load i32, i32* %arrayidx1382.i1765, align 4
  %xor1383.i1766 = xor i32 %1888, %1890
  store i32 %xor1383.i1766, i32* %t.i416, align 4
  %1891 = load i32, i32* %t.i416, align 4
  %1892 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1891) #5, !srcloc !33
  store i32 %1892, i32* %ret1384.i482, align 4
  %1893 = load i32, i32* %ret1384.i482, align 4
  store i32 %1893, i32* %tmp1385.i483, align 4
  %1894 = load i32, i32* %tmp1385.i483, align 4
  store i32 %1894, i32* %t.i416, align 4
  %1895 = load i32, i32* %u.i417, align 4
  %shr1386.i1767 = lshr i32 %1895, 2
  %and1387.i1768 = and i32 %shr1386.i1767, 63
  %idxprom1388.i1769 = zext i32 %and1387.i1768 to i64
  %arrayidx1389.i1770 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i1769
  %1896 = load i32, i32* %arrayidx1389.i1770, align 4
  %1897 = load i32, i32* %u.i417, align 4
  %shr1390.i1771 = lshr i32 %1897, 10
  %and1391.i1772 = and i32 %shr1390.i1771, 63
  %idxprom1392.i1773 = zext i32 %and1391.i1772 to i64
  %arrayidx1393.i1774 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i1773
  %1898 = load i32, i32* %arrayidx1393.i1774, align 4
  %xor1394.i1775 = xor i32 %1896, %1898
  %1899 = load i32, i32* %u.i417, align 4
  %shr1395.i1776 = lshr i32 %1899, 18
  %and1396.i1777 = and i32 %shr1395.i1776, 63
  %idxprom1397.i1778 = zext i32 %and1396.i1777 to i64
  %arrayidx1398.i1779 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i1778
  %1900 = load i32, i32* %arrayidx1398.i1779, align 4
  %xor1399.i1780 = xor i32 %xor1394.i1775, %1900
  %1901 = load i32, i32* %u.i417, align 4
  %shr1400.i1781 = lshr i32 %1901, 26
  %idxprom1402.i1782 = zext i32 %shr1400.i1781 to i64
  %arrayidx1403.i1783 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i1782
  %1902 = load i32, i32* %arrayidx1403.i1783, align 4
  %xor1404.i1784 = xor i32 %xor1399.i1780, %1902
  %1903 = load i32, i32* %t.i416, align 4
  %shr1405.i1785 = lshr i32 %1903, 2
  %and1406.i1786 = and i32 %shr1405.i1785, 63
  %idxprom1407.i1787 = zext i32 %and1406.i1786 to i64
  %arrayidx1408.i1788 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i1787
  %1904 = load i32, i32* %arrayidx1408.i1788, align 4
  %xor1409.i1789 = xor i32 %xor1404.i1784, %1904
  %1905 = load i32, i32* %t.i416, align 4
  %shr1410.i1790 = lshr i32 %1905, 10
  %and1411.i1791 = and i32 %shr1410.i1790, 63
  %idxprom1412.i1792 = zext i32 %and1411.i1791 to i64
  %arrayidx1413.i1793 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i1792
  %1906 = load i32, i32* %arrayidx1413.i1793, align 4
  %xor1414.i1794 = xor i32 %xor1409.i1789, %1906
  %1907 = load i32, i32* %t.i416, align 4
  %shr1415.i1795 = lshr i32 %1907, 18
  %and1416.i1796 = and i32 %shr1415.i1795, 63
  %idxprom1417.i1797 = zext i32 %and1416.i1796 to i64
  %arrayidx1418.i1798 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i1797
  %1908 = load i32, i32* %arrayidx1418.i1798, align 4
  %xor1419.i1799 = xor i32 %xor1414.i1794, %1908
  %1909 = load i32, i32* %t.i416, align 4
  %shr1420.i1800 = lshr i32 %1909, 26
  %idxprom1422.i1801 = zext i32 %shr1420.i1800 to i64
  %arrayidx1423.i1802 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i1801
  %1910 = load i32, i32* %arrayidx1423.i1802, align 4
  %xor1424.i1803 = xor i32 %xor1419.i1799, %1910
  %1911 = load i32, i32* %r.i415, align 4
  %xor1425.i1804 = xor i32 %1911, %xor1424.i1803
  store i32 %xor1425.i1804, i32* %r.i415, align 4
  %1912 = load i32, i32* %r.i415, align 4
  %1913 = load i32*, i32** %s.i418, align 8
  %arrayidx1426.i1805 = getelementptr inbounds i32, i32* %1913, i64 2
  %1914 = load i32, i32* %arrayidx1426.i1805, align 4
  %xor1427.i1806 = xor i32 %1912, %1914
  store i32 %xor1427.i1806, i32* %u.i417, align 4
  %1915 = load i32, i32* %r.i415, align 4
  %1916 = load i32*, i32** %s.i418, align 8
  %arrayidx1428.i1807 = getelementptr inbounds i32, i32* %1916, i64 3
  %1917 = load i32, i32* %arrayidx1428.i1807, align 4
  %xor1429.i1808 = xor i32 %1915, %1917
  store i32 %xor1429.i1808, i32* %t.i416, align 4
  %1918 = load i32, i32* %t.i416, align 4
  %1919 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1918) #5, !srcloc !34
  store i32 %1919, i32* %ret1430.i484, align 4
  %1920 = load i32, i32* %ret1430.i484, align 4
  store i32 %1920, i32* %tmp1431.i485, align 4
  %1921 = load i32, i32* %tmp1431.i485, align 4
  store i32 %1921, i32* %t.i416, align 4
  %1922 = load i32, i32* %u.i417, align 4
  %shr1432.i1809 = lshr i32 %1922, 2
  %and1433.i1810 = and i32 %shr1432.i1809, 63
  %idxprom1434.i1811 = zext i32 %and1433.i1810 to i64
  %arrayidx1435.i1812 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i1811
  %1923 = load i32, i32* %arrayidx1435.i1812, align 4
  %1924 = load i32, i32* %u.i417, align 4
  %shr1436.i1813 = lshr i32 %1924, 10
  %and1437.i1814 = and i32 %shr1436.i1813, 63
  %idxprom1438.i1815 = zext i32 %and1437.i1814 to i64
  %arrayidx1439.i1816 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i1815
  %1925 = load i32, i32* %arrayidx1439.i1816, align 4
  %xor1440.i1817 = xor i32 %1923, %1925
  %1926 = load i32, i32* %u.i417, align 4
  %shr1441.i1818 = lshr i32 %1926, 18
  %and1442.i1819 = and i32 %shr1441.i1818, 63
  %idxprom1443.i1820 = zext i32 %and1442.i1819 to i64
  %arrayidx1444.i1821 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i1820
  %1927 = load i32, i32* %arrayidx1444.i1821, align 4
  %xor1445.i1822 = xor i32 %xor1440.i1817, %1927
  %1928 = load i32, i32* %u.i417, align 4
  %shr1446.i1823 = lshr i32 %1928, 26
  %idxprom1448.i1824 = zext i32 %shr1446.i1823 to i64
  %arrayidx1449.i1825 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i1824
  %1929 = load i32, i32* %arrayidx1449.i1825, align 4
  %xor1450.i1826 = xor i32 %xor1445.i1822, %1929
  %1930 = load i32, i32* %t.i416, align 4
  %shr1451.i1827 = lshr i32 %1930, 2
  %and1452.i1828 = and i32 %shr1451.i1827, 63
  %idxprom1453.i1829 = zext i32 %and1452.i1828 to i64
  %arrayidx1454.i1830 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i1829
  %1931 = load i32, i32* %arrayidx1454.i1830, align 4
  %xor1455.i1831 = xor i32 %xor1450.i1826, %1931
  %1932 = load i32, i32* %t.i416, align 4
  %shr1456.i1832 = lshr i32 %1932, 10
  %and1457.i1833 = and i32 %shr1456.i1832, 63
  %idxprom1458.i1834 = zext i32 %and1457.i1833 to i64
  %arrayidx1459.i1835 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i1834
  %1933 = load i32, i32* %arrayidx1459.i1835, align 4
  %xor1460.i1836 = xor i32 %xor1455.i1831, %1933
  %1934 = load i32, i32* %t.i416, align 4
  %shr1461.i1837 = lshr i32 %1934, 18
  %and1462.i1838 = and i32 %shr1461.i1837, 63
  %idxprom1463.i1839 = zext i32 %and1462.i1838 to i64
  %arrayidx1464.i1840 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i1839
  %1935 = load i32, i32* %arrayidx1464.i1840, align 4
  %xor1465.i1841 = xor i32 %xor1460.i1836, %1935
  %1936 = load i32, i32* %t.i416, align 4
  %shr1466.i1842 = lshr i32 %1936, 26
  %idxprom1468.i1843 = zext i32 %shr1466.i1842 to i64
  %arrayidx1469.i1844 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i1843
  %1937 = load i32, i32* %arrayidx1469.i1844, align 4
  %xor1470.i1845 = xor i32 %xor1465.i1841, %1937
  %1938 = load i32, i32* %l.i414, align 4
  %xor1471.i1846 = xor i32 %1938, %xor1470.i1845
  store i32 %xor1471.i1846, i32* %l.i414, align 4
  %1939 = load i32, i32* %l.i414, align 4
  %1940 = load i32*, i32** %s.i418, align 8
  %1941 = load i32, i32* %1940, align 4
  %xor1473.i1847 = xor i32 %1939, %1941
  store i32 %xor1473.i1847, i32* %u.i417, align 4
  %1942 = load i32, i32* %l.i414, align 4
  %1943 = load i32*, i32** %s.i418, align 8
  %arrayidx1474.i1848 = getelementptr inbounds i32, i32* %1943, i64 1
  %1944 = load i32, i32* %arrayidx1474.i1848, align 4
  %xor1475.i1849 = xor i32 %1942, %1944
  store i32 %xor1475.i1849, i32* %t.i416, align 4
  %1945 = load i32, i32* %t.i416, align 4
  %1946 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1945) #5, !srcloc !35
  store i32 %1946, i32* %ret1476.i486, align 4
  %1947 = load i32, i32* %ret1476.i486, align 4
  store i32 %1947, i32* %tmp1477.i487, align 4
  %1948 = load i32, i32* %tmp1477.i487, align 4
  store i32 %1948, i32* %t.i416, align 4
  %1949 = load i32, i32* %u.i417, align 4
  %shr1478.i1850 = lshr i32 %1949, 2
  %and1479.i1851 = and i32 %shr1478.i1850, 63
  %idxprom1480.i1852 = zext i32 %and1479.i1851 to i64
  %arrayidx1481.i1853 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i1852
  %1950 = load i32, i32* %arrayidx1481.i1853, align 4
  %1951 = load i32, i32* %u.i417, align 4
  %shr1482.i1854 = lshr i32 %1951, 10
  %and1483.i1855 = and i32 %shr1482.i1854, 63
  %idxprom1484.i1856 = zext i32 %and1483.i1855 to i64
  %arrayidx1485.i1857 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i1856
  %1952 = load i32, i32* %arrayidx1485.i1857, align 4
  %xor1486.i1858 = xor i32 %1950, %1952
  %1953 = load i32, i32* %u.i417, align 4
  %shr1487.i1859 = lshr i32 %1953, 18
  %and1488.i1860 = and i32 %shr1487.i1859, 63
  %idxprom1489.i1861 = zext i32 %and1488.i1860 to i64
  %arrayidx1490.i1862 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i1861
  %1954 = load i32, i32* %arrayidx1490.i1862, align 4
  %xor1491.i1863 = xor i32 %xor1486.i1858, %1954
  %1955 = load i32, i32* %u.i417, align 4
  %shr1492.i1864 = lshr i32 %1955, 26
  %idxprom1494.i1865 = zext i32 %shr1492.i1864 to i64
  %arrayidx1495.i1866 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i1865
  %1956 = load i32, i32* %arrayidx1495.i1866, align 4
  %xor1496.i1867 = xor i32 %xor1491.i1863, %1956
  %1957 = load i32, i32* %t.i416, align 4
  %shr1497.i1868 = lshr i32 %1957, 2
  %and1498.i1869 = and i32 %shr1497.i1868, 63
  %idxprom1499.i1870 = zext i32 %and1498.i1869 to i64
  %arrayidx1500.i1871 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i1870
  %1958 = load i32, i32* %arrayidx1500.i1871, align 4
  %xor1501.i1872 = xor i32 %xor1496.i1867, %1958
  %1959 = load i32, i32* %t.i416, align 4
  %shr1502.i1873 = lshr i32 %1959, 10
  %and1503.i1874 = and i32 %shr1502.i1873, 63
  %idxprom1504.i1875 = zext i32 %and1503.i1874 to i64
  %arrayidx1505.i1876 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i1875
  %1960 = load i32, i32* %arrayidx1505.i1876, align 4
  %xor1506.i1877 = xor i32 %xor1501.i1872, %1960
  %1961 = load i32, i32* %t.i416, align 4
  %shr1507.i1878 = lshr i32 %1961, 18
  %and1508.i1879 = and i32 %shr1507.i1878, 63
  %idxprom1509.i1880 = zext i32 %and1508.i1879 to i64
  %arrayidx1510.i1881 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i1880
  %1962 = load i32, i32* %arrayidx1510.i1881, align 4
  %xor1511.i1882 = xor i32 %xor1506.i1877, %1962
  %1963 = load i32, i32* %t.i416, align 4
  %shr1512.i1883 = lshr i32 %1963, 26
  %idxprom1514.i1884 = zext i32 %shr1512.i1883 to i64
  %arrayidx1515.i1885 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i1884
  %1964 = load i32, i32* %arrayidx1515.i1885, align 4
  %xor1516.i1886 = xor i32 %xor1511.i1882, %1964
  %1965 = load i32, i32* %r.i415, align 4
  %xor1517.i1887 = xor i32 %1965, %xor1516.i1886
  store i32 %xor1517.i1887, i32* %r.i415, align 4
  br label %DES_encrypt1.exit1936

DES_encrypt1.exit1936:                            ; preds = %if.then.i1216, %if.else.i1888
  %1966 = load i32, i32* %l.i414, align 4
  %1967 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %1966) #5, !srcloc !36
  store i32 %1967, i32* %ret1518.i488, align 4
  %1968 = load i32, i32* %ret1518.i488, align 4
  store i32 %1968, i32* %tmp1519.i489, align 4
  %1969 = load i32, i32* %tmp1519.i489, align 4
  %conv1520.i1889 = zext i32 %1969 to i64
  %and1521.i1890 = and i64 %conv1520.i1889, 4294967295
  %conv1522.i1891 = trunc i64 %and1521.i1890 to i32
  store i32 %conv1522.i1891, i32* %l.i414, align 4
  %1970 = load i32, i32* %r.i415, align 4
  %1971 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %1970) #5, !srcloc !37
  store i32 %1971, i32* %ret1523.i490, align 4
  %1972 = load i32, i32* %ret1523.i490, align 4
  store i32 %1972, i32* %tmp1524.i491, align 4
  %1973 = load i32, i32* %tmp1524.i491, align 4
  %conv1525.i1892 = zext i32 %1973 to i64
  %and1526.i1893 = and i64 %conv1525.i1892, 4294967295
  %conv1527.i1894 = trunc i64 %and1526.i1893 to i32
  store i32 %conv1527.i1894, i32* %r.i415, align 4
  %1974 = load i32, i32* %r.i415, align 4
  %shr1529.i1895 = lshr i32 %1974, 1
  %1975 = load i32, i32* %l.i414, align 4
  %xor1530.i1896 = xor i32 %shr1529.i1895, %1975
  %conv1531.i1897 = zext i32 %xor1530.i1896 to i64
  %and1532.i1898 = and i64 %conv1531.i1897, 1431655765
  %conv1533.i1899 = trunc i64 %and1532.i1898 to i32
  store i32 %conv1533.i1899, i32* %tt1528.i492, align 4
  %1976 = load i32, i32* %tt1528.i492, align 4
  %1977 = load i32, i32* %l.i414, align 4
  %xor1534.i1900 = xor i32 %1977, %1976
  store i32 %xor1534.i1900, i32* %l.i414, align 4
  %1978 = load i32, i32* %tt1528.i492, align 4
  %shl1535.i1901 = shl i32 %1978, 1
  %1979 = load i32, i32* %r.i415, align 4
  %xor1536.i1902 = xor i32 %1979, %shl1535.i1901
  store i32 %xor1536.i1902, i32* %r.i415, align 4
  %1980 = load i32, i32* %l.i414, align 4
  %shr1537.i1903 = lshr i32 %1980, 8
  %1981 = load i32, i32* %r.i415, align 4
  %xor1538.i1904 = xor i32 %shr1537.i1903, %1981
  %conv1539.i1905 = zext i32 %xor1538.i1904 to i64
  %and1540.i1906 = and i64 %conv1539.i1905, 16711935
  %conv1541.i1907 = trunc i64 %and1540.i1906 to i32
  store i32 %conv1541.i1907, i32* %tt1528.i492, align 4
  %1982 = load i32, i32* %tt1528.i492, align 4
  %1983 = load i32, i32* %r.i415, align 4
  %xor1542.i1908 = xor i32 %1983, %1982
  store i32 %xor1542.i1908, i32* %r.i415, align 4
  %1984 = load i32, i32* %tt1528.i492, align 4
  %shl1543.i1909 = shl i32 %1984, 8
  %1985 = load i32, i32* %l.i414, align 4
  %xor1544.i1910 = xor i32 %1985, %shl1543.i1909
  store i32 %xor1544.i1910, i32* %l.i414, align 4
  %1986 = load i32, i32* %r.i415, align 4
  %shr1545.i1911 = lshr i32 %1986, 2
  %1987 = load i32, i32* %l.i414, align 4
  %xor1546.i1912 = xor i32 %shr1545.i1911, %1987
  %conv1547.i1913 = zext i32 %xor1546.i1912 to i64
  %and1548.i1914 = and i64 %conv1547.i1913, 858993459
  %conv1549.i1915 = trunc i64 %and1548.i1914 to i32
  store i32 %conv1549.i1915, i32* %tt1528.i492, align 4
  %1988 = load i32, i32* %tt1528.i492, align 4
  %1989 = load i32, i32* %l.i414, align 4
  %xor1550.i1916 = xor i32 %1989, %1988
  store i32 %xor1550.i1916, i32* %l.i414, align 4
  %1990 = load i32, i32* %tt1528.i492, align 4
  %shl1551.i1917 = shl i32 %1990, 2
  %1991 = load i32, i32* %r.i415, align 4
  %xor1552.i1918 = xor i32 %1991, %shl1551.i1917
  store i32 %xor1552.i1918, i32* %r.i415, align 4
  %1992 = load i32, i32* %l.i414, align 4
  %shr1553.i1919 = lshr i32 %1992, 16
  %1993 = load i32, i32* %r.i415, align 4
  %xor1554.i1920 = xor i32 %shr1553.i1919, %1993
  %conv1555.i1921 = zext i32 %xor1554.i1920 to i64
  %and1556.i1922 = and i64 %conv1555.i1921, 65535
  %conv1557.i1923 = trunc i64 %and1556.i1922 to i32
  store i32 %conv1557.i1923, i32* %tt1528.i492, align 4
  %1994 = load i32, i32* %tt1528.i492, align 4
  %1995 = load i32, i32* %r.i415, align 4
  %xor1558.i1924 = xor i32 %1995, %1994
  store i32 %xor1558.i1924, i32* %r.i415, align 4
  %1996 = load i32, i32* %tt1528.i492, align 4
  %shl1559.i1925 = shl i32 %1996, 16
  %1997 = load i32, i32* %l.i414, align 4
  %xor1560.i1926 = xor i32 %1997, %shl1559.i1925
  store i32 %xor1560.i1926, i32* %l.i414, align 4
  %1998 = load i32, i32* %r.i415, align 4
  %shr1561.i1927 = lshr i32 %1998, 4
  %1999 = load i32, i32* %l.i414, align 4
  %xor1562.i1928 = xor i32 %shr1561.i1927, %1999
  %conv1563.i1929 = zext i32 %xor1562.i1928 to i64
  %and1564.i1930 = and i64 %conv1563.i1929, 252645135
  %conv1565.i1931 = trunc i64 %and1564.i1930 to i32
  store i32 %conv1565.i1931, i32* %tt1528.i492, align 4
  %2000 = load i32, i32* %tt1528.i492, align 4
  %2001 = load i32, i32* %l.i414, align 4
  %xor1566.i1932 = xor i32 %2001, %2000
  store i32 %xor1566.i1932, i32* %l.i414, align 4
  %2002 = load i32, i32* %tt1528.i492, align 4
  %shl1567.i1933 = shl i32 %2002, 4
  %2003 = load i32, i32* %r.i415, align 4
  %xor1568.i1934 = xor i32 %2003, %shl1567.i1933
  store i32 %xor1568.i1934, i32* %r.i415, align 4
  %2004 = load i32, i32* %l.i414, align 4
  %2005 = load i32*, i32** %data.addr.i411, align 8
  store i32 %2004, i32* %2005, align 4
  %2006 = load i32, i32* %r.i415, align 4
  %2007 = load i32*, i32** %data.addr.i411, align 8
  %arrayidx1570.i1935 = getelementptr inbounds i32, i32* %2007, i64 1
  store i32 %2006, i32* %arrayidx1570.i1935, align 4
  store i32 0, i32* %u.i417, align 4
  store i32 0, i32* %t.i416, align 4
  store i32 0, i32* %r.i415, align 4
  store i32 0, i32* %l.i414, align 4
  %arrayidx132 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %2008 = load i32, i32* %arrayidx132, align 4
  store i32 %2008, i32* %tout0, align 4
  %2009 = load i32, i32* %tout0, align 4
  %and133 = and i32 %2009, 255
  %conv134 = trunc i32 %and133 to i8
  %2010 = load i8*, i8** %out.addr, align 8
  %incdec.ptr135 = getelementptr inbounds i8, i8* %2010, i32 1
  store i8* %incdec.ptr135, i8** %out.addr, align 8
  store i8 %conv134, i8* %2010, align 1
  %2011 = load i32, i32* %tout0, align 4
  %shr136 = lshr i32 %2011, 8
  %and137 = and i32 %shr136, 255
  %conv138 = trunc i32 %and137 to i8
  %2012 = load i8*, i8** %out.addr, align 8
  %incdec.ptr139 = getelementptr inbounds i8, i8* %2012, i32 1
  store i8* %incdec.ptr139, i8** %out.addr, align 8
  store i8 %conv138, i8* %2012, align 1
  %2013 = load i32, i32* %tout0, align 4
  %shr140 = lshr i32 %2013, 16
  %and141 = and i32 %shr140, 255
  %conv142 = trunc i32 %and141 to i8
  %2014 = load i8*, i8** %out.addr, align 8
  %incdec.ptr143 = getelementptr inbounds i8, i8* %2014, i32 1
  store i8* %incdec.ptr143, i8** %out.addr, align 8
  store i8 %conv142, i8* %2014, align 1
  %2015 = load i32, i32* %tout0, align 4
  %shr144 = lshr i32 %2015, 24
  %and145 = and i32 %shr144, 255
  %conv146 = trunc i32 %and145 to i8
  %2016 = load i8*, i8** %out.addr, align 8
  %incdec.ptr147 = getelementptr inbounds i8, i8* %2016, i32 1
  store i8* %incdec.ptr147, i8** %out.addr, align 8
  store i8 %conv146, i8* %2016, align 1
  %arrayidx148 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  %2017 = load i32, i32* %arrayidx148, align 4
  store i32 %2017, i32* %tout1, align 4
  %2018 = load i32, i32* %tout1, align 4
  %and149 = and i32 %2018, 255
  %conv150 = trunc i32 %and149 to i8
  %2019 = load i8*, i8** %out.addr, align 8
  %incdec.ptr151 = getelementptr inbounds i8, i8* %2019, i32 1
  store i8* %incdec.ptr151, i8** %out.addr, align 8
  store i8 %conv150, i8* %2019, align 1
  %2020 = load i32, i32* %tout1, align 4
  %shr152 = lshr i32 %2020, 8
  %and153 = and i32 %shr152, 255
  %conv154 = trunc i32 %and153 to i8
  %2021 = load i8*, i8** %out.addr, align 8
  %incdec.ptr155 = getelementptr inbounds i8, i8* %2021, i32 1
  store i8* %incdec.ptr155, i8** %out.addr, align 8
  store i8 %conv154, i8* %2021, align 1
  %2022 = load i32, i32* %tout1, align 4
  %shr156 = lshr i32 %2022, 16
  %and157 = and i32 %shr156, 255
  %conv158 = trunc i32 %and157 to i8
  %2023 = load i8*, i8** %out.addr, align 8
  %incdec.ptr159 = getelementptr inbounds i8, i8* %2023, i32 1
  store i8* %incdec.ptr159, i8** %out.addr, align 8
  store i8 %conv158, i8* %2023, align 1
  %2024 = load i32, i32* %tout1, align 4
  %shr160 = lshr i32 %2024, 24
  %and161 = and i32 %shr160, 255
  %conv162 = trunc i32 %and161 to i8
  %2025 = load i8*, i8** %out.addr, align 8
  %incdec.ptr163 = getelementptr inbounds i8, i8* %2025, i32 1
  store i8* %incdec.ptr163, i8** %out.addr, align 8
  store i8 %conv162, i8* %2025, align 1
  br label %if.end

if.end:                                           ; preds = %DES_encrypt1.exit1936, %for.end
  %2026 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8
  %arrayidx164 = getelementptr inbounds [8 x i8], [8 x i8]* %2026, i64 0, i64 0
  store i8* %arrayidx164, i8** %iv, align 8
  %2027 = load i32, i32* %tout0, align 4
  %and165 = and i32 %2027, 255
  %conv166 = trunc i32 %and165 to i8
  %2028 = load i8*, i8** %iv, align 8
  %incdec.ptr167 = getelementptr inbounds i8, i8* %2028, i32 1
  store i8* %incdec.ptr167, i8** %iv, align 8
  store i8 %conv166, i8* %2028, align 1
  %2029 = load i32, i32* %tout0, align 4
  %shr168 = lshr i32 %2029, 8
  %and169 = and i32 %shr168, 255
  %conv170 = trunc i32 %and169 to i8
  %2030 = load i8*, i8** %iv, align 8
  %incdec.ptr171 = getelementptr inbounds i8, i8* %2030, i32 1
  store i8* %incdec.ptr171, i8** %iv, align 8
  store i8 %conv170, i8* %2030, align 1
  %2031 = load i32, i32* %tout0, align 4
  %shr172 = lshr i32 %2031, 16
  %and173 = and i32 %shr172, 255
  %conv174 = trunc i32 %and173 to i8
  %2032 = load i8*, i8** %iv, align 8
  %incdec.ptr175 = getelementptr inbounds i8, i8* %2032, i32 1
  store i8* %incdec.ptr175, i8** %iv, align 8
  store i8 %conv174, i8* %2032, align 1
  %2033 = load i32, i32* %tout0, align 4
  %shr176 = lshr i32 %2033, 24
  %and177 = and i32 %shr176, 255
  %conv178 = trunc i32 %and177 to i8
  %2034 = load i8*, i8** %iv, align 8
  %incdec.ptr179 = getelementptr inbounds i8, i8* %2034, i32 1
  store i8* %incdec.ptr179, i8** %iv, align 8
  store i8 %conv178, i8* %2034, align 1
  %2035 = load i32, i32* %tout1, align 4
  %and180 = and i32 %2035, 255
  %conv181 = trunc i32 %and180 to i8
  %2036 = load i8*, i8** %iv, align 8
  %incdec.ptr182 = getelementptr inbounds i8, i8* %2036, i32 1
  store i8* %incdec.ptr182, i8** %iv, align 8
  store i8 %conv181, i8* %2036, align 1
  %2037 = load i32, i32* %tout1, align 4
  %shr183 = lshr i32 %2037, 8
  %and184 = and i32 %shr183, 255
  %conv185 = trunc i32 %and184 to i8
  %2038 = load i8*, i8** %iv, align 8
  %incdec.ptr186 = getelementptr inbounds i8, i8* %2038, i32 1
  store i8* %incdec.ptr186, i8** %iv, align 8
  store i8 %conv185, i8* %2038, align 1
  %2039 = load i32, i32* %tout1, align 4
  %shr187 = lshr i32 %2039, 16
  %and188 = and i32 %shr187, 255
  %conv189 = trunc i32 %and188 to i8
  %2040 = load i8*, i8** %iv, align 8
  %incdec.ptr190 = getelementptr inbounds i8, i8* %2040, i32 1
  store i8* %incdec.ptr190, i8** %iv, align 8
  store i8 %conv189, i8* %2040, align 1
  %2041 = load i32, i32* %tout1, align 4
  %shr191 = lshr i32 %2041, 24
  %and192 = and i32 %shr191, 255
  %conv193 = trunc i32 %and192 to i8
  %2042 = load i8*, i8** %iv, align 8
  %incdec.ptr194 = getelementptr inbounds i8, i8* %2042, i32 1
  store i8* %incdec.ptr194, i8** %iv, align 8
  store i8 %conv193, i8* %2042, align 1
  br label %if.end408

if.else:                                          ; preds = %entry
  %2043 = load i8*, i8** %iv, align 8
  %incdec.ptr195 = getelementptr inbounds i8, i8* %2043, i32 1
  store i8* %incdec.ptr195, i8** %iv, align 8
  %2044 = load i8, i8* %2043, align 1
  %conv196 = zext i8 %2044 to i32
  store i32 %conv196, i32* %xor0, align 4
  %2045 = load i8*, i8** %iv, align 8
  %incdec.ptr197 = getelementptr inbounds i8, i8* %2045, i32 1
  store i8* %incdec.ptr197, i8** %iv, align 8
  %2046 = load i8, i8* %2045, align 1
  %conv198 = zext i8 %2046 to i32
  %shl199 = shl i32 %conv198, 8
  %2047 = load i32, i32* %xor0, align 4
  %or200 = or i32 %2047, %shl199
  store i32 %or200, i32* %xor0, align 4
  %2048 = load i8*, i8** %iv, align 8
  %incdec.ptr201 = getelementptr inbounds i8, i8* %2048, i32 1
  store i8* %incdec.ptr201, i8** %iv, align 8
  %2049 = load i8, i8* %2048, align 1
  %conv202 = zext i8 %2049 to i32
  %shl203 = shl i32 %conv202, 16
  %2050 = load i32, i32* %xor0, align 4
  %or204 = or i32 %2050, %shl203
  store i32 %or204, i32* %xor0, align 4
  %2051 = load i8*, i8** %iv, align 8
  %incdec.ptr205 = getelementptr inbounds i8, i8* %2051, i32 1
  store i8* %incdec.ptr205, i8** %iv, align 8
  %2052 = load i8, i8* %2051, align 1
  %conv206 = zext i8 %2052 to i32
  %shl207 = shl i32 %conv206, 24
  %2053 = load i32, i32* %xor0, align 4
  %or208 = or i32 %2053, %shl207
  store i32 %or208, i32* %xor0, align 4
  %2054 = load i8*, i8** %iv, align 8
  %incdec.ptr209 = getelementptr inbounds i8, i8* %2054, i32 1
  store i8* %incdec.ptr209, i8** %iv, align 8
  %2055 = load i8, i8* %2054, align 1
  %conv210 = zext i8 %2055 to i32
  store i32 %conv210, i32* %xor1, align 4
  %2056 = load i8*, i8** %iv, align 8
  %incdec.ptr211 = getelementptr inbounds i8, i8* %2056, i32 1
  store i8* %incdec.ptr211, i8** %iv, align 8
  %2057 = load i8, i8* %2056, align 1
  %conv212 = zext i8 %2057 to i32
  %shl213 = shl i32 %conv212, 8
  %2058 = load i32, i32* %xor1, align 4
  %or214 = or i32 %2058, %shl213
  store i32 %or214, i32* %xor1, align 4
  %2059 = load i8*, i8** %iv, align 8
  %incdec.ptr215 = getelementptr inbounds i8, i8* %2059, i32 1
  store i8* %incdec.ptr215, i8** %iv, align 8
  %2060 = load i8, i8* %2059, align 1
  %conv216 = zext i8 %2060 to i32
  %shl217 = shl i32 %conv216, 16
  %2061 = load i32, i32* %xor1, align 4
  %or218 = or i32 %2061, %shl217
  store i32 %or218, i32* %xor1, align 4
  %2062 = load i8*, i8** %iv, align 8
  %incdec.ptr219 = getelementptr inbounds i8, i8* %2062, i32 1
  store i8* %incdec.ptr219, i8** %iv, align 8
  %2063 = load i8, i8* %2062, align 1
  %conv220 = zext i8 %2063 to i32
  %shl221 = shl i32 %conv220, 24
  %2064 = load i32, i32* %xor1, align 4
  %or222 = or i32 %2064, %shl221
  store i32 %or222, i32* %xor1, align 4
  %2065 = load i64, i64* %l, align 8
  %sub223 = sub nsw i64 %2065, 8
  store i64 %sub223, i64* %l, align 8
  br label %for.cond224

for.cond224:                                      ; preds = %for.inc293, %if.else
  %2066 = load i64, i64* %l, align 8
  %cmp225 = icmp sge i64 %2066, 0
  br i1 %cmp225, label %for.body227, label %for.end295

for.body227:                                      ; preds = %for.cond224
  %2067 = load i8*, i8** %in.addr, align 8
  %incdec.ptr228 = getelementptr inbounds i8, i8* %2067, i32 1
  store i8* %incdec.ptr228, i8** %in.addr, align 8
  %2068 = load i8, i8* %2067, align 1
  %conv229 = zext i8 %2068 to i32
  store i32 %conv229, i32* %tin0, align 4
  %2069 = load i8*, i8** %in.addr, align 8
  %incdec.ptr230 = getelementptr inbounds i8, i8* %2069, i32 1
  store i8* %incdec.ptr230, i8** %in.addr, align 8
  %2070 = load i8, i8* %2069, align 1
  %conv231 = zext i8 %2070 to i32
  %shl232 = shl i32 %conv231, 8
  %2071 = load i32, i32* %tin0, align 4
  %or233 = or i32 %2071, %shl232
  store i32 %or233, i32* %tin0, align 4
  %2072 = load i8*, i8** %in.addr, align 8
  %incdec.ptr234 = getelementptr inbounds i8, i8* %2072, i32 1
  store i8* %incdec.ptr234, i8** %in.addr, align 8
  %2073 = load i8, i8* %2072, align 1
  %conv235 = zext i8 %2073 to i32
  %shl236 = shl i32 %conv235, 16
  %2074 = load i32, i32* %tin0, align 4
  %or237 = or i32 %2074, %shl236
  store i32 %or237, i32* %tin0, align 4
  %2075 = load i8*, i8** %in.addr, align 8
  %incdec.ptr238 = getelementptr inbounds i8, i8* %2075, i32 1
  store i8* %incdec.ptr238, i8** %in.addr, align 8
  %2076 = load i8, i8* %2075, align 1
  %conv239 = zext i8 %2076 to i32
  %shl240 = shl i32 %conv239, 24
  %2077 = load i32, i32* %tin0, align 4
  %or241 = or i32 %2077, %shl240
  store i32 %or241, i32* %tin0, align 4
  %2078 = load i32, i32* %tin0, align 4
  %arrayidx242 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %2078, i32* %arrayidx242, align 4
  %2079 = load i8*, i8** %in.addr, align 8
  %incdec.ptr243 = getelementptr inbounds i8, i8* %2079, i32 1
  store i8* %incdec.ptr243, i8** %in.addr, align 8
  %2080 = load i8, i8* %2079, align 1
  %conv244 = zext i8 %2080 to i32
  store i32 %conv244, i32* %tin1, align 4
  %2081 = load i8*, i8** %in.addr, align 8
  %incdec.ptr245 = getelementptr inbounds i8, i8* %2081, i32 1
  store i8* %incdec.ptr245, i8** %in.addr, align 8
  %2082 = load i8, i8* %2081, align 1
  %conv246 = zext i8 %2082 to i32
  %shl247 = shl i32 %conv246, 8
  %2083 = load i32, i32* %tin1, align 4
  %or248 = or i32 %2083, %shl247
  store i32 %or248, i32* %tin1, align 4
  %2084 = load i8*, i8** %in.addr, align 8
  %incdec.ptr249 = getelementptr inbounds i8, i8* %2084, i32 1
  store i8* %incdec.ptr249, i8** %in.addr, align 8
  %2085 = load i8, i8* %2084, align 1
  %conv250 = zext i8 %2085 to i32
  %shl251 = shl i32 %conv250, 16
  %2086 = load i32, i32* %tin1, align 4
  %or252 = or i32 %2086, %shl251
  store i32 %or252, i32* %tin1, align 4
  %2087 = load i8*, i8** %in.addr, align 8
  %incdec.ptr253 = getelementptr inbounds i8, i8* %2087, i32 1
  store i8* %incdec.ptr253, i8** %in.addr, align 8
  %2088 = load i8, i8* %2087, align 1
  %conv254 = zext i8 %2088 to i32
  %shl255 = shl i32 %conv254, 24
  %2089 = load i32, i32* %tin1, align 4
  %or256 = or i32 %2089, %shl255
  store i32 %or256, i32* %tin1, align 4
  %2090 = load i32, i32* %tin1, align 4
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %2090, i32* %arrayidx257, align 4
  %arraydecay258 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %2091 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8
  store i32* %arraydecay258, i32** %data.addr.i1937, align 8
  store %struct.DES_ks* %2091, %struct.DES_ks** %ks.addr.i1938, align 8
  store i32 0, i32* %enc.addr.i1939, align 4
  %2092 = load i32*, i32** %data.addr.i1937, align 8
  %2093 = load i32, i32* %2092, align 4
  store i32 %2093, i32* %r.i1941, align 4
  %2094 = load i32*, i32** %data.addr.i1937, align 8
  %arrayidx1.i2019 = getelementptr inbounds i32, i32* %2094, i64 1
  %2095 = load i32, i32* %arrayidx1.i2019, align 4
  store i32 %2095, i32* %l.i1940, align 4
  %2096 = load i32, i32* %l.i1940, align 4
  %shr.i2020 = lshr i32 %2096, 4
  %2097 = load i32, i32* %r.i1941, align 4
  %xor.i2021 = xor i32 %shr.i2020, %2097
  %conv.i2022 = zext i32 %xor.i2021 to i64
  %and.i2023 = and i64 %conv.i2022, 252645135
  %conv2.i2024 = trunc i64 %and.i2023 to i32
  store i32 %conv2.i2024, i32* %tt.i1945, align 4
  %2098 = load i32, i32* %tt.i1945, align 4
  %2099 = load i32, i32* %r.i1941, align 4
  %xor3.i2025 = xor i32 %2099, %2098
  store i32 %xor3.i2025, i32* %r.i1941, align 4
  %2100 = load i32, i32* %tt.i1945, align 4
  %shl.i2026 = shl i32 %2100, 4
  %2101 = load i32, i32* %l.i1940, align 4
  %xor4.i2027 = xor i32 %2101, %shl.i2026
  store i32 %xor4.i2027, i32* %l.i1940, align 4
  %2102 = load i32, i32* %r.i1941, align 4
  %shr5.i2028 = lshr i32 %2102, 16
  %2103 = load i32, i32* %l.i1940, align 4
  %xor6.i2029 = xor i32 %shr5.i2028, %2103
  %conv7.i2030 = zext i32 %xor6.i2029 to i64
  %and8.i2031 = and i64 %conv7.i2030, 65535
  %conv9.i2032 = trunc i64 %and8.i2031 to i32
  store i32 %conv9.i2032, i32* %tt.i1945, align 4
  %2104 = load i32, i32* %tt.i1945, align 4
  %2105 = load i32, i32* %l.i1940, align 4
  %xor10.i2033 = xor i32 %2105, %2104
  store i32 %xor10.i2033, i32* %l.i1940, align 4
  %2106 = load i32, i32* %tt.i1945, align 4
  %shl11.i2034 = shl i32 %2106, 16
  %2107 = load i32, i32* %r.i1941, align 4
  %xor12.i2035 = xor i32 %2107, %shl11.i2034
  store i32 %xor12.i2035, i32* %r.i1941, align 4
  %2108 = load i32, i32* %l.i1940, align 4
  %shr13.i2036 = lshr i32 %2108, 2
  %2109 = load i32, i32* %r.i1941, align 4
  %xor14.i2037 = xor i32 %shr13.i2036, %2109
  %conv15.i2038 = zext i32 %xor14.i2037 to i64
  %and16.i2039 = and i64 %conv15.i2038, 858993459
  %conv17.i2040 = trunc i64 %and16.i2039 to i32
  store i32 %conv17.i2040, i32* %tt.i1945, align 4
  %2110 = load i32, i32* %tt.i1945, align 4
  %2111 = load i32, i32* %r.i1941, align 4
  %xor18.i2041 = xor i32 %2111, %2110
  store i32 %xor18.i2041, i32* %r.i1941, align 4
  %2112 = load i32, i32* %tt.i1945, align 4
  %shl19.i2042 = shl i32 %2112, 2
  %2113 = load i32, i32* %l.i1940, align 4
  %xor20.i2043 = xor i32 %2113, %shl19.i2042
  store i32 %xor20.i2043, i32* %l.i1940, align 4
  %2114 = load i32, i32* %r.i1941, align 4
  %shr21.i2044 = lshr i32 %2114, 8
  %2115 = load i32, i32* %l.i1940, align 4
  %xor22.i2045 = xor i32 %shr21.i2044, %2115
  %conv23.i2046 = zext i32 %xor22.i2045 to i64
  %and24.i2047 = and i64 %conv23.i2046, 16711935
  %conv25.i2048 = trunc i64 %and24.i2047 to i32
  store i32 %conv25.i2048, i32* %tt.i1945, align 4
  %2116 = load i32, i32* %tt.i1945, align 4
  %2117 = load i32, i32* %l.i1940, align 4
  %xor26.i2049 = xor i32 %2117, %2116
  store i32 %xor26.i2049, i32* %l.i1940, align 4
  %2118 = load i32, i32* %tt.i1945, align 4
  %shl27.i2050 = shl i32 %2118, 8
  %2119 = load i32, i32* %r.i1941, align 4
  %xor28.i2051 = xor i32 %2119, %shl27.i2050
  store i32 %xor28.i2051, i32* %r.i1941, align 4
  %2120 = load i32, i32* %l.i1940, align 4
  %shr29.i2052 = lshr i32 %2120, 1
  %2121 = load i32, i32* %r.i1941, align 4
  %xor30.i2053 = xor i32 %shr29.i2052, %2121
  %conv31.i2054 = zext i32 %xor30.i2053 to i64
  %and32.i2055 = and i64 %conv31.i2054, 1431655765
  %conv33.i2056 = trunc i64 %and32.i2055 to i32
  store i32 %conv33.i2056, i32* %tt.i1945, align 4
  %2122 = load i32, i32* %tt.i1945, align 4
  %2123 = load i32, i32* %r.i1941, align 4
  %xor34.i2057 = xor i32 %2123, %2122
  store i32 %xor34.i2057, i32* %r.i1941, align 4
  %2124 = load i32, i32* %tt.i1945, align 4
  %shl35.i2058 = shl i32 %2124, 1
  %2125 = load i32, i32* %l.i1940, align 4
  %xor36.i2059 = xor i32 %2125, %shl35.i2058
  store i32 %xor36.i2059, i32* %l.i1940, align 4
  %2126 = load i32, i32* %r.i1941, align 4
  %2127 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %2126) #5, !srcloc !2
  store i32 %2127, i32* %ret.i1946, align 4
  %2128 = load i32, i32* %ret.i1946, align 4
  store i32 %2128, i32* %tmp.i1947, align 4
  %2129 = load i32, i32* %tmp.i1947, align 4
  %conv37.i2060 = zext i32 %2129 to i64
  %and38.i2061 = and i64 %conv37.i2060, 4294967295
  %conv39.i2062 = trunc i64 %and38.i2061 to i32
  store i32 %conv39.i2062, i32* %r.i1941, align 4
  %2130 = load i32, i32* %l.i1940, align 4
  %2131 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %2130) #5, !srcloc !3
  store i32 %2131, i32* %ret40.i1948, align 4
  %2132 = load i32, i32* %ret40.i1948, align 4
  store i32 %2132, i32* %tmp41.i1949, align 4
  %2133 = load i32, i32* %tmp41.i1949, align 4
  %conv42.i2063 = zext i32 %2133 to i64
  %and43.i2064 = and i64 %conv42.i2063, 4294967295
  %conv44.i2065 = trunc i64 %and43.i2064 to i32
  store i32 %conv44.i2065, i32* %l.i1940, align 4
  %2134 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i1938, align 8
  %ks45.i2066 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %2134, i32 0, i32 0
  %arraydecay.i2067 = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i2066, i64 0, i64 0
  %deslong.i2068 = bitcast %union.anon* %arraydecay.i2067 to [2 x i32]*
  %arraydecay46.i2069 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i2068, i64 0, i64 0
  store i32* %arraydecay46.i2069, i32** %s.i1944, align 8
  %2135 = load i32, i32* %enc.addr.i1939, align 4
  %tobool.i2070 = icmp ne i32 %2135, 0
  br i1 %tobool.i2070, label %if.then.i2742, label %if.else.i3414

if.then.i2742:                                    ; preds = %for.body227
  %2136 = load i32, i32* %r.i1941, align 4
  %2137 = load i32*, i32** %s.i1944, align 8
  %2138 = load i32, i32* %2137, align 4
  %xor48.i2071 = xor i32 %2136, %2138
  store i32 %xor48.i2071, i32* %u.i1943, align 4
  %2139 = load i32, i32* %r.i1941, align 4
  %2140 = load i32*, i32** %s.i1944, align 8
  %arrayidx49.i2072 = getelementptr inbounds i32, i32* %2140, i64 1
  %2141 = load i32, i32* %arrayidx49.i2072, align 4
  %xor50.i2073 = xor i32 %2139, %2141
  store i32 %xor50.i2073, i32* %t.i1942, align 4
  %2142 = load i32, i32* %t.i1942, align 4
  %2143 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2142) #5, !srcloc !4
  store i32 %2143, i32* %ret51.i1950, align 4
  %2144 = load i32, i32* %ret51.i1950, align 4
  store i32 %2144, i32* %tmp52.i1951, align 4
  %2145 = load i32, i32* %tmp52.i1951, align 4
  store i32 %2145, i32* %t.i1942, align 4
  %2146 = load i32, i32* %u.i1943, align 4
  %shr53.i2074 = lshr i32 %2146, 2
  %and54.i2075 = and i32 %shr53.i2074, 63
  %idxprom.i2076 = zext i32 %and54.i2075 to i64
  %arrayidx55.i2077 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i2076
  %2147 = load i32, i32* %arrayidx55.i2077, align 4
  %2148 = load i32, i32* %u.i1943, align 4
  %shr56.i2078 = lshr i32 %2148, 10
  %and57.i2079 = and i32 %shr56.i2078, 63
  %idxprom58.i2080 = zext i32 %and57.i2079 to i64
  %arrayidx59.i2081 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i2080
  %2149 = load i32, i32* %arrayidx59.i2081, align 4
  %xor60.i2082 = xor i32 %2147, %2149
  %2150 = load i32, i32* %u.i1943, align 4
  %shr61.i2083 = lshr i32 %2150, 18
  %and62.i2084 = and i32 %shr61.i2083, 63
  %idxprom63.i2085 = zext i32 %and62.i2084 to i64
  %arrayidx64.i2086 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i2085
  %2151 = load i32, i32* %arrayidx64.i2086, align 4
  %xor65.i2087 = xor i32 %xor60.i2082, %2151
  %2152 = load i32, i32* %u.i1943, align 4
  %shr66.i2088 = lshr i32 %2152, 26
  %idxprom68.i2089 = zext i32 %shr66.i2088 to i64
  %arrayidx69.i2090 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i2089
  %2153 = load i32, i32* %arrayidx69.i2090, align 4
  %xor70.i2091 = xor i32 %xor65.i2087, %2153
  %2154 = load i32, i32* %t.i1942, align 4
  %shr71.i2092 = lshr i32 %2154, 2
  %and72.i2093 = and i32 %shr71.i2092, 63
  %idxprom73.i2094 = zext i32 %and72.i2093 to i64
  %arrayidx74.i2095 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i2094
  %2155 = load i32, i32* %arrayidx74.i2095, align 4
  %xor75.i2096 = xor i32 %xor70.i2091, %2155
  %2156 = load i32, i32* %t.i1942, align 4
  %shr76.i2097 = lshr i32 %2156, 10
  %and77.i2098 = and i32 %shr76.i2097, 63
  %idxprom78.i2099 = zext i32 %and77.i2098 to i64
  %arrayidx79.i2100 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i2099
  %2157 = load i32, i32* %arrayidx79.i2100, align 4
  %xor80.i2101 = xor i32 %xor75.i2096, %2157
  %2158 = load i32, i32* %t.i1942, align 4
  %shr81.i2102 = lshr i32 %2158, 18
  %and82.i2103 = and i32 %shr81.i2102, 63
  %idxprom83.i2104 = zext i32 %and82.i2103 to i64
  %arrayidx84.i2105 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i2104
  %2159 = load i32, i32* %arrayidx84.i2105, align 4
  %xor85.i2106 = xor i32 %xor80.i2101, %2159
  %2160 = load i32, i32* %t.i1942, align 4
  %shr86.i2107 = lshr i32 %2160, 26
  %idxprom88.i2108 = zext i32 %shr86.i2107 to i64
  %arrayidx89.i2109 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i2108
  %2161 = load i32, i32* %arrayidx89.i2109, align 4
  %xor90.i2110 = xor i32 %xor85.i2106, %2161
  %2162 = load i32, i32* %l.i1940, align 4
  %xor91.i2111 = xor i32 %2162, %xor90.i2110
  store i32 %xor91.i2111, i32* %l.i1940, align 4
  %2163 = load i32, i32* %l.i1940, align 4
  %2164 = load i32*, i32** %s.i1944, align 8
  %arrayidx92.i2112 = getelementptr inbounds i32, i32* %2164, i64 2
  %2165 = load i32, i32* %arrayidx92.i2112, align 4
  %xor93.i2113 = xor i32 %2163, %2165
  store i32 %xor93.i2113, i32* %u.i1943, align 4
  %2166 = load i32, i32* %l.i1940, align 4
  %2167 = load i32*, i32** %s.i1944, align 8
  %arrayidx94.i2114 = getelementptr inbounds i32, i32* %2167, i64 3
  %2168 = load i32, i32* %arrayidx94.i2114, align 4
  %xor95.i2115 = xor i32 %2166, %2168
  store i32 %xor95.i2115, i32* %t.i1942, align 4
  %2169 = load i32, i32* %t.i1942, align 4
  %2170 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2169) #5, !srcloc !5
  store i32 %2170, i32* %ret96.i1952, align 4
  %2171 = load i32, i32* %ret96.i1952, align 4
  store i32 %2171, i32* %tmp97.i1953, align 4
  %2172 = load i32, i32* %tmp97.i1953, align 4
  store i32 %2172, i32* %t.i1942, align 4
  %2173 = load i32, i32* %u.i1943, align 4
  %shr98.i2116 = lshr i32 %2173, 2
  %and99.i2117 = and i32 %shr98.i2116, 63
  %idxprom100.i2118 = zext i32 %and99.i2117 to i64
  %arrayidx101.i2119 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i2118
  %2174 = load i32, i32* %arrayidx101.i2119, align 4
  %2175 = load i32, i32* %u.i1943, align 4
  %shr102.i2120 = lshr i32 %2175, 10
  %and103.i2121 = and i32 %shr102.i2120, 63
  %idxprom104.i2122 = zext i32 %and103.i2121 to i64
  %arrayidx105.i2123 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i2122
  %2176 = load i32, i32* %arrayidx105.i2123, align 4
  %xor106.i2124 = xor i32 %2174, %2176
  %2177 = load i32, i32* %u.i1943, align 4
  %shr107.i2125 = lshr i32 %2177, 18
  %and108.i2126 = and i32 %shr107.i2125, 63
  %idxprom109.i2127 = zext i32 %and108.i2126 to i64
  %arrayidx110.i2128 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i2127
  %2178 = load i32, i32* %arrayidx110.i2128, align 4
  %xor111.i2129 = xor i32 %xor106.i2124, %2178
  %2179 = load i32, i32* %u.i1943, align 4
  %shr112.i2130 = lshr i32 %2179, 26
  %idxprom114.i2131 = zext i32 %shr112.i2130 to i64
  %arrayidx115.i2132 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i2131
  %2180 = load i32, i32* %arrayidx115.i2132, align 4
  %xor116.i2133 = xor i32 %xor111.i2129, %2180
  %2181 = load i32, i32* %t.i1942, align 4
  %shr117.i2134 = lshr i32 %2181, 2
  %and118.i2135 = and i32 %shr117.i2134, 63
  %idxprom119.i2136 = zext i32 %and118.i2135 to i64
  %arrayidx120.i2137 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i2136
  %2182 = load i32, i32* %arrayidx120.i2137, align 4
  %xor121.i2138 = xor i32 %xor116.i2133, %2182
  %2183 = load i32, i32* %t.i1942, align 4
  %shr122.i2139 = lshr i32 %2183, 10
  %and123.i2140 = and i32 %shr122.i2139, 63
  %idxprom124.i2141 = zext i32 %and123.i2140 to i64
  %arrayidx125.i2142 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i2141
  %2184 = load i32, i32* %arrayidx125.i2142, align 4
  %xor126.i2143 = xor i32 %xor121.i2138, %2184
  %2185 = load i32, i32* %t.i1942, align 4
  %shr127.i2144 = lshr i32 %2185, 18
  %and128.i2145 = and i32 %shr127.i2144, 63
  %idxprom129.i2146 = zext i32 %and128.i2145 to i64
  %arrayidx130.i2147 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i2146
  %2186 = load i32, i32* %arrayidx130.i2147, align 4
  %xor131.i2148 = xor i32 %xor126.i2143, %2186
  %2187 = load i32, i32* %t.i1942, align 4
  %shr132.i2149 = lshr i32 %2187, 26
  %idxprom134.i2150 = zext i32 %shr132.i2149 to i64
  %arrayidx135.i2151 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i2150
  %2188 = load i32, i32* %arrayidx135.i2151, align 4
  %xor136.i2152 = xor i32 %xor131.i2148, %2188
  %2189 = load i32, i32* %r.i1941, align 4
  %xor137.i2153 = xor i32 %2189, %xor136.i2152
  store i32 %xor137.i2153, i32* %r.i1941, align 4
  %2190 = load i32, i32* %r.i1941, align 4
  %2191 = load i32*, i32** %s.i1944, align 8
  %arrayidx138.i2154 = getelementptr inbounds i32, i32* %2191, i64 4
  %2192 = load i32, i32* %arrayidx138.i2154, align 4
  %xor139.i2155 = xor i32 %2190, %2192
  store i32 %xor139.i2155, i32* %u.i1943, align 4
  %2193 = load i32, i32* %r.i1941, align 4
  %2194 = load i32*, i32** %s.i1944, align 8
  %arrayidx140.i2156 = getelementptr inbounds i32, i32* %2194, i64 5
  %2195 = load i32, i32* %arrayidx140.i2156, align 4
  %xor141.i2157 = xor i32 %2193, %2195
  store i32 %xor141.i2157, i32* %t.i1942, align 4
  %2196 = load i32, i32* %t.i1942, align 4
  %2197 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2196) #5, !srcloc !6
  store i32 %2197, i32* %ret142.i1954, align 4
  %2198 = load i32, i32* %ret142.i1954, align 4
  store i32 %2198, i32* %tmp143.i1955, align 4
  %2199 = load i32, i32* %tmp143.i1955, align 4
  store i32 %2199, i32* %t.i1942, align 4
  %2200 = load i32, i32* %u.i1943, align 4
  %shr144.i2158 = lshr i32 %2200, 2
  %and145.i2159 = and i32 %shr144.i2158, 63
  %idxprom146.i2160 = zext i32 %and145.i2159 to i64
  %arrayidx147.i2161 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i2160
  %2201 = load i32, i32* %arrayidx147.i2161, align 4
  %2202 = load i32, i32* %u.i1943, align 4
  %shr148.i2162 = lshr i32 %2202, 10
  %and149.i2163 = and i32 %shr148.i2162, 63
  %idxprom150.i2164 = zext i32 %and149.i2163 to i64
  %arrayidx151.i2165 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i2164
  %2203 = load i32, i32* %arrayidx151.i2165, align 4
  %xor152.i2166 = xor i32 %2201, %2203
  %2204 = load i32, i32* %u.i1943, align 4
  %shr153.i2167 = lshr i32 %2204, 18
  %and154.i2168 = and i32 %shr153.i2167, 63
  %idxprom155.i2169 = zext i32 %and154.i2168 to i64
  %arrayidx156.i2170 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i2169
  %2205 = load i32, i32* %arrayidx156.i2170, align 4
  %xor157.i2171 = xor i32 %xor152.i2166, %2205
  %2206 = load i32, i32* %u.i1943, align 4
  %shr158.i2172 = lshr i32 %2206, 26
  %idxprom160.i2173 = zext i32 %shr158.i2172 to i64
  %arrayidx161.i2174 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i2173
  %2207 = load i32, i32* %arrayidx161.i2174, align 4
  %xor162.i2175 = xor i32 %xor157.i2171, %2207
  %2208 = load i32, i32* %t.i1942, align 4
  %shr163.i2176 = lshr i32 %2208, 2
  %and164.i2177 = and i32 %shr163.i2176, 63
  %idxprom165.i2178 = zext i32 %and164.i2177 to i64
  %arrayidx166.i2179 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i2178
  %2209 = load i32, i32* %arrayidx166.i2179, align 4
  %xor167.i2180 = xor i32 %xor162.i2175, %2209
  %2210 = load i32, i32* %t.i1942, align 4
  %shr168.i2181 = lshr i32 %2210, 10
  %and169.i2182 = and i32 %shr168.i2181, 63
  %idxprom170.i2183 = zext i32 %and169.i2182 to i64
  %arrayidx171.i2184 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i2183
  %2211 = load i32, i32* %arrayidx171.i2184, align 4
  %xor172.i2185 = xor i32 %xor167.i2180, %2211
  %2212 = load i32, i32* %t.i1942, align 4
  %shr173.i2186 = lshr i32 %2212, 18
  %and174.i2187 = and i32 %shr173.i2186, 63
  %idxprom175.i2188 = zext i32 %and174.i2187 to i64
  %arrayidx176.i2189 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i2188
  %2213 = load i32, i32* %arrayidx176.i2189, align 4
  %xor177.i2190 = xor i32 %xor172.i2185, %2213
  %2214 = load i32, i32* %t.i1942, align 4
  %shr178.i2191 = lshr i32 %2214, 26
  %idxprom180.i2192 = zext i32 %shr178.i2191 to i64
  %arrayidx181.i2193 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i2192
  %2215 = load i32, i32* %arrayidx181.i2193, align 4
  %xor182.i2194 = xor i32 %xor177.i2190, %2215
  %2216 = load i32, i32* %l.i1940, align 4
  %xor183.i2195 = xor i32 %2216, %xor182.i2194
  store i32 %xor183.i2195, i32* %l.i1940, align 4
  %2217 = load i32, i32* %l.i1940, align 4
  %2218 = load i32*, i32** %s.i1944, align 8
  %arrayidx184.i2196 = getelementptr inbounds i32, i32* %2218, i64 6
  %2219 = load i32, i32* %arrayidx184.i2196, align 4
  %xor185.i2197 = xor i32 %2217, %2219
  store i32 %xor185.i2197, i32* %u.i1943, align 4
  %2220 = load i32, i32* %l.i1940, align 4
  %2221 = load i32*, i32** %s.i1944, align 8
  %arrayidx186.i2198 = getelementptr inbounds i32, i32* %2221, i64 7
  %2222 = load i32, i32* %arrayidx186.i2198, align 4
  %xor187.i2199 = xor i32 %2220, %2222
  store i32 %xor187.i2199, i32* %t.i1942, align 4
  %2223 = load i32, i32* %t.i1942, align 4
  %2224 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2223) #5, !srcloc !7
  store i32 %2224, i32* %ret188.i1956, align 4
  %2225 = load i32, i32* %ret188.i1956, align 4
  store i32 %2225, i32* %tmp189.i1957, align 4
  %2226 = load i32, i32* %tmp189.i1957, align 4
  store i32 %2226, i32* %t.i1942, align 4
  %2227 = load i32, i32* %u.i1943, align 4
  %shr190.i2200 = lshr i32 %2227, 2
  %and191.i2201 = and i32 %shr190.i2200, 63
  %idxprom192.i2202 = zext i32 %and191.i2201 to i64
  %arrayidx193.i2203 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i2202
  %2228 = load i32, i32* %arrayidx193.i2203, align 4
  %2229 = load i32, i32* %u.i1943, align 4
  %shr194.i2204 = lshr i32 %2229, 10
  %and195.i2205 = and i32 %shr194.i2204, 63
  %idxprom196.i2206 = zext i32 %and195.i2205 to i64
  %arrayidx197.i2207 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i2206
  %2230 = load i32, i32* %arrayidx197.i2207, align 4
  %xor198.i2208 = xor i32 %2228, %2230
  %2231 = load i32, i32* %u.i1943, align 4
  %shr199.i2209 = lshr i32 %2231, 18
  %and200.i2210 = and i32 %shr199.i2209, 63
  %idxprom201.i2211 = zext i32 %and200.i2210 to i64
  %arrayidx202.i2212 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i2211
  %2232 = load i32, i32* %arrayidx202.i2212, align 4
  %xor203.i2213 = xor i32 %xor198.i2208, %2232
  %2233 = load i32, i32* %u.i1943, align 4
  %shr204.i2214 = lshr i32 %2233, 26
  %idxprom206.i2215 = zext i32 %shr204.i2214 to i64
  %arrayidx207.i2216 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i2215
  %2234 = load i32, i32* %arrayidx207.i2216, align 4
  %xor208.i2217 = xor i32 %xor203.i2213, %2234
  %2235 = load i32, i32* %t.i1942, align 4
  %shr209.i2218 = lshr i32 %2235, 2
  %and210.i2219 = and i32 %shr209.i2218, 63
  %idxprom211.i2220 = zext i32 %and210.i2219 to i64
  %arrayidx212.i2221 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i2220
  %2236 = load i32, i32* %arrayidx212.i2221, align 4
  %xor213.i2222 = xor i32 %xor208.i2217, %2236
  %2237 = load i32, i32* %t.i1942, align 4
  %shr214.i2223 = lshr i32 %2237, 10
  %and215.i2224 = and i32 %shr214.i2223, 63
  %idxprom216.i2225 = zext i32 %and215.i2224 to i64
  %arrayidx217.i2226 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i2225
  %2238 = load i32, i32* %arrayidx217.i2226, align 4
  %xor218.i2227 = xor i32 %xor213.i2222, %2238
  %2239 = load i32, i32* %t.i1942, align 4
  %shr219.i2228 = lshr i32 %2239, 18
  %and220.i2229 = and i32 %shr219.i2228, 63
  %idxprom221.i2230 = zext i32 %and220.i2229 to i64
  %arrayidx222.i2231 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i2230
  %2240 = load i32, i32* %arrayidx222.i2231, align 4
  %xor223.i2232 = xor i32 %xor218.i2227, %2240
  %2241 = load i32, i32* %t.i1942, align 4
  %shr224.i2233 = lshr i32 %2241, 26
  %idxprom226.i2234 = zext i32 %shr224.i2233 to i64
  %arrayidx227.i2235 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i2234
  %2242 = load i32, i32* %arrayidx227.i2235, align 4
  %xor228.i2236 = xor i32 %xor223.i2232, %2242
  %2243 = load i32, i32* %r.i1941, align 4
  %xor229.i2237 = xor i32 %2243, %xor228.i2236
  store i32 %xor229.i2237, i32* %r.i1941, align 4
  %2244 = load i32, i32* %r.i1941, align 4
  %2245 = load i32*, i32** %s.i1944, align 8
  %arrayidx230.i2238 = getelementptr inbounds i32, i32* %2245, i64 8
  %2246 = load i32, i32* %arrayidx230.i2238, align 4
  %xor231.i2239 = xor i32 %2244, %2246
  store i32 %xor231.i2239, i32* %u.i1943, align 4
  %2247 = load i32, i32* %r.i1941, align 4
  %2248 = load i32*, i32** %s.i1944, align 8
  %arrayidx232.i2240 = getelementptr inbounds i32, i32* %2248, i64 9
  %2249 = load i32, i32* %arrayidx232.i2240, align 4
  %xor233.i2241 = xor i32 %2247, %2249
  store i32 %xor233.i2241, i32* %t.i1942, align 4
  %2250 = load i32, i32* %t.i1942, align 4
  %2251 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2250) #5, !srcloc !8
  store i32 %2251, i32* %ret234.i1958, align 4
  %2252 = load i32, i32* %ret234.i1958, align 4
  store i32 %2252, i32* %tmp235.i1959, align 4
  %2253 = load i32, i32* %tmp235.i1959, align 4
  store i32 %2253, i32* %t.i1942, align 4
  %2254 = load i32, i32* %u.i1943, align 4
  %shr236.i2242 = lshr i32 %2254, 2
  %and237.i2243 = and i32 %shr236.i2242, 63
  %idxprom238.i2244 = zext i32 %and237.i2243 to i64
  %arrayidx239.i2245 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i2244
  %2255 = load i32, i32* %arrayidx239.i2245, align 4
  %2256 = load i32, i32* %u.i1943, align 4
  %shr240.i2246 = lshr i32 %2256, 10
  %and241.i2247 = and i32 %shr240.i2246, 63
  %idxprom242.i2248 = zext i32 %and241.i2247 to i64
  %arrayidx243.i2249 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i2248
  %2257 = load i32, i32* %arrayidx243.i2249, align 4
  %xor244.i2250 = xor i32 %2255, %2257
  %2258 = load i32, i32* %u.i1943, align 4
  %shr245.i2251 = lshr i32 %2258, 18
  %and246.i2252 = and i32 %shr245.i2251, 63
  %idxprom247.i2253 = zext i32 %and246.i2252 to i64
  %arrayidx248.i2254 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i2253
  %2259 = load i32, i32* %arrayidx248.i2254, align 4
  %xor249.i2255 = xor i32 %xor244.i2250, %2259
  %2260 = load i32, i32* %u.i1943, align 4
  %shr250.i2256 = lshr i32 %2260, 26
  %idxprom252.i2257 = zext i32 %shr250.i2256 to i64
  %arrayidx253.i2258 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i2257
  %2261 = load i32, i32* %arrayidx253.i2258, align 4
  %xor254.i2259 = xor i32 %xor249.i2255, %2261
  %2262 = load i32, i32* %t.i1942, align 4
  %shr255.i2260 = lshr i32 %2262, 2
  %and256.i2261 = and i32 %shr255.i2260, 63
  %idxprom257.i2262 = zext i32 %and256.i2261 to i64
  %arrayidx258.i2263 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i2262
  %2263 = load i32, i32* %arrayidx258.i2263, align 4
  %xor259.i2264 = xor i32 %xor254.i2259, %2263
  %2264 = load i32, i32* %t.i1942, align 4
  %shr260.i2265 = lshr i32 %2264, 10
  %and261.i2266 = and i32 %shr260.i2265, 63
  %idxprom262.i2267 = zext i32 %and261.i2266 to i64
  %arrayidx263.i2268 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i2267
  %2265 = load i32, i32* %arrayidx263.i2268, align 4
  %xor264.i2269 = xor i32 %xor259.i2264, %2265
  %2266 = load i32, i32* %t.i1942, align 4
  %shr265.i2270 = lshr i32 %2266, 18
  %and266.i2271 = and i32 %shr265.i2270, 63
  %idxprom267.i2272 = zext i32 %and266.i2271 to i64
  %arrayidx268.i2273 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i2272
  %2267 = load i32, i32* %arrayidx268.i2273, align 4
  %xor269.i2274 = xor i32 %xor264.i2269, %2267
  %2268 = load i32, i32* %t.i1942, align 4
  %shr270.i2275 = lshr i32 %2268, 26
  %idxprom272.i2276 = zext i32 %shr270.i2275 to i64
  %arrayidx273.i2277 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i2276
  %2269 = load i32, i32* %arrayidx273.i2277, align 4
  %xor274.i2278 = xor i32 %xor269.i2274, %2269
  %2270 = load i32, i32* %l.i1940, align 4
  %xor275.i2279 = xor i32 %2270, %xor274.i2278
  store i32 %xor275.i2279, i32* %l.i1940, align 4
  %2271 = load i32, i32* %l.i1940, align 4
  %2272 = load i32*, i32** %s.i1944, align 8
  %arrayidx276.i2280 = getelementptr inbounds i32, i32* %2272, i64 10
  %2273 = load i32, i32* %arrayidx276.i2280, align 4
  %xor277.i2281 = xor i32 %2271, %2273
  store i32 %xor277.i2281, i32* %u.i1943, align 4
  %2274 = load i32, i32* %l.i1940, align 4
  %2275 = load i32*, i32** %s.i1944, align 8
  %arrayidx278.i2282 = getelementptr inbounds i32, i32* %2275, i64 11
  %2276 = load i32, i32* %arrayidx278.i2282, align 4
  %xor279.i2283 = xor i32 %2274, %2276
  store i32 %xor279.i2283, i32* %t.i1942, align 4
  %2277 = load i32, i32* %t.i1942, align 4
  %2278 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2277) #5, !srcloc !9
  store i32 %2278, i32* %ret280.i1960, align 4
  %2279 = load i32, i32* %ret280.i1960, align 4
  store i32 %2279, i32* %tmp281.i1961, align 4
  %2280 = load i32, i32* %tmp281.i1961, align 4
  store i32 %2280, i32* %t.i1942, align 4
  %2281 = load i32, i32* %u.i1943, align 4
  %shr282.i2284 = lshr i32 %2281, 2
  %and283.i2285 = and i32 %shr282.i2284, 63
  %idxprom284.i2286 = zext i32 %and283.i2285 to i64
  %arrayidx285.i2287 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i2286
  %2282 = load i32, i32* %arrayidx285.i2287, align 4
  %2283 = load i32, i32* %u.i1943, align 4
  %shr286.i2288 = lshr i32 %2283, 10
  %and287.i2289 = and i32 %shr286.i2288, 63
  %idxprom288.i2290 = zext i32 %and287.i2289 to i64
  %arrayidx289.i2291 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i2290
  %2284 = load i32, i32* %arrayidx289.i2291, align 4
  %xor290.i2292 = xor i32 %2282, %2284
  %2285 = load i32, i32* %u.i1943, align 4
  %shr291.i2293 = lshr i32 %2285, 18
  %and292.i2294 = and i32 %shr291.i2293, 63
  %idxprom293.i2295 = zext i32 %and292.i2294 to i64
  %arrayidx294.i2296 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i2295
  %2286 = load i32, i32* %arrayidx294.i2296, align 4
  %xor295.i2297 = xor i32 %xor290.i2292, %2286
  %2287 = load i32, i32* %u.i1943, align 4
  %shr296.i2298 = lshr i32 %2287, 26
  %idxprom298.i2299 = zext i32 %shr296.i2298 to i64
  %arrayidx299.i2300 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i2299
  %2288 = load i32, i32* %arrayidx299.i2300, align 4
  %xor300.i2301 = xor i32 %xor295.i2297, %2288
  %2289 = load i32, i32* %t.i1942, align 4
  %shr301.i2302 = lshr i32 %2289, 2
  %and302.i2303 = and i32 %shr301.i2302, 63
  %idxprom303.i2304 = zext i32 %and302.i2303 to i64
  %arrayidx304.i2305 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i2304
  %2290 = load i32, i32* %arrayidx304.i2305, align 4
  %xor305.i2306 = xor i32 %xor300.i2301, %2290
  %2291 = load i32, i32* %t.i1942, align 4
  %shr306.i2307 = lshr i32 %2291, 10
  %and307.i2308 = and i32 %shr306.i2307, 63
  %idxprom308.i2309 = zext i32 %and307.i2308 to i64
  %arrayidx309.i2310 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i2309
  %2292 = load i32, i32* %arrayidx309.i2310, align 4
  %xor310.i2311 = xor i32 %xor305.i2306, %2292
  %2293 = load i32, i32* %t.i1942, align 4
  %shr311.i2312 = lshr i32 %2293, 18
  %and312.i2313 = and i32 %shr311.i2312, 63
  %idxprom313.i2314 = zext i32 %and312.i2313 to i64
  %arrayidx314.i2315 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i2314
  %2294 = load i32, i32* %arrayidx314.i2315, align 4
  %xor315.i2316 = xor i32 %xor310.i2311, %2294
  %2295 = load i32, i32* %t.i1942, align 4
  %shr316.i2317 = lshr i32 %2295, 26
  %idxprom318.i2318 = zext i32 %shr316.i2317 to i64
  %arrayidx319.i2319 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i2318
  %2296 = load i32, i32* %arrayidx319.i2319, align 4
  %xor320.i2320 = xor i32 %xor315.i2316, %2296
  %2297 = load i32, i32* %r.i1941, align 4
  %xor321.i2321 = xor i32 %2297, %xor320.i2320
  store i32 %xor321.i2321, i32* %r.i1941, align 4
  %2298 = load i32, i32* %r.i1941, align 4
  %2299 = load i32*, i32** %s.i1944, align 8
  %arrayidx322.i2322 = getelementptr inbounds i32, i32* %2299, i64 12
  %2300 = load i32, i32* %arrayidx322.i2322, align 4
  %xor323.i2323 = xor i32 %2298, %2300
  store i32 %xor323.i2323, i32* %u.i1943, align 4
  %2301 = load i32, i32* %r.i1941, align 4
  %2302 = load i32*, i32** %s.i1944, align 8
  %arrayidx324.i2324 = getelementptr inbounds i32, i32* %2302, i64 13
  %2303 = load i32, i32* %arrayidx324.i2324, align 4
  %xor325.i2325 = xor i32 %2301, %2303
  store i32 %xor325.i2325, i32* %t.i1942, align 4
  %2304 = load i32, i32* %t.i1942, align 4
  %2305 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2304) #5, !srcloc !10
  store i32 %2305, i32* %ret326.i1962, align 4
  %2306 = load i32, i32* %ret326.i1962, align 4
  store i32 %2306, i32* %tmp327.i1963, align 4
  %2307 = load i32, i32* %tmp327.i1963, align 4
  store i32 %2307, i32* %t.i1942, align 4
  %2308 = load i32, i32* %u.i1943, align 4
  %shr328.i2326 = lshr i32 %2308, 2
  %and329.i2327 = and i32 %shr328.i2326, 63
  %idxprom330.i2328 = zext i32 %and329.i2327 to i64
  %arrayidx331.i2329 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i2328
  %2309 = load i32, i32* %arrayidx331.i2329, align 4
  %2310 = load i32, i32* %u.i1943, align 4
  %shr332.i2330 = lshr i32 %2310, 10
  %and333.i2331 = and i32 %shr332.i2330, 63
  %idxprom334.i2332 = zext i32 %and333.i2331 to i64
  %arrayidx335.i2333 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i2332
  %2311 = load i32, i32* %arrayidx335.i2333, align 4
  %xor336.i2334 = xor i32 %2309, %2311
  %2312 = load i32, i32* %u.i1943, align 4
  %shr337.i2335 = lshr i32 %2312, 18
  %and338.i2336 = and i32 %shr337.i2335, 63
  %idxprom339.i2337 = zext i32 %and338.i2336 to i64
  %arrayidx340.i2338 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i2337
  %2313 = load i32, i32* %arrayidx340.i2338, align 4
  %xor341.i2339 = xor i32 %xor336.i2334, %2313
  %2314 = load i32, i32* %u.i1943, align 4
  %shr342.i2340 = lshr i32 %2314, 26
  %idxprom344.i2341 = zext i32 %shr342.i2340 to i64
  %arrayidx345.i2342 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i2341
  %2315 = load i32, i32* %arrayidx345.i2342, align 4
  %xor346.i2343 = xor i32 %xor341.i2339, %2315
  %2316 = load i32, i32* %t.i1942, align 4
  %shr347.i2344 = lshr i32 %2316, 2
  %and348.i2345 = and i32 %shr347.i2344, 63
  %idxprom349.i2346 = zext i32 %and348.i2345 to i64
  %arrayidx350.i2347 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i2346
  %2317 = load i32, i32* %arrayidx350.i2347, align 4
  %xor351.i2348 = xor i32 %xor346.i2343, %2317
  %2318 = load i32, i32* %t.i1942, align 4
  %shr352.i2349 = lshr i32 %2318, 10
  %and353.i2350 = and i32 %shr352.i2349, 63
  %idxprom354.i2351 = zext i32 %and353.i2350 to i64
  %arrayidx355.i2352 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i2351
  %2319 = load i32, i32* %arrayidx355.i2352, align 4
  %xor356.i2353 = xor i32 %xor351.i2348, %2319
  %2320 = load i32, i32* %t.i1942, align 4
  %shr357.i2354 = lshr i32 %2320, 18
  %and358.i2355 = and i32 %shr357.i2354, 63
  %idxprom359.i2356 = zext i32 %and358.i2355 to i64
  %arrayidx360.i2357 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i2356
  %2321 = load i32, i32* %arrayidx360.i2357, align 4
  %xor361.i2358 = xor i32 %xor356.i2353, %2321
  %2322 = load i32, i32* %t.i1942, align 4
  %shr362.i2359 = lshr i32 %2322, 26
  %idxprom364.i2360 = zext i32 %shr362.i2359 to i64
  %arrayidx365.i2361 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i2360
  %2323 = load i32, i32* %arrayidx365.i2361, align 4
  %xor366.i2362 = xor i32 %xor361.i2358, %2323
  %2324 = load i32, i32* %l.i1940, align 4
  %xor367.i2363 = xor i32 %2324, %xor366.i2362
  store i32 %xor367.i2363, i32* %l.i1940, align 4
  %2325 = load i32, i32* %l.i1940, align 4
  %2326 = load i32*, i32** %s.i1944, align 8
  %arrayidx368.i2364 = getelementptr inbounds i32, i32* %2326, i64 14
  %2327 = load i32, i32* %arrayidx368.i2364, align 4
  %xor369.i2365 = xor i32 %2325, %2327
  store i32 %xor369.i2365, i32* %u.i1943, align 4
  %2328 = load i32, i32* %l.i1940, align 4
  %2329 = load i32*, i32** %s.i1944, align 8
  %arrayidx370.i2366 = getelementptr inbounds i32, i32* %2329, i64 15
  %2330 = load i32, i32* %arrayidx370.i2366, align 4
  %xor371.i2367 = xor i32 %2328, %2330
  store i32 %xor371.i2367, i32* %t.i1942, align 4
  %2331 = load i32, i32* %t.i1942, align 4
  %2332 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2331) #5, !srcloc !11
  store i32 %2332, i32* %ret372.i1964, align 4
  %2333 = load i32, i32* %ret372.i1964, align 4
  store i32 %2333, i32* %tmp373.i1965, align 4
  %2334 = load i32, i32* %tmp373.i1965, align 4
  store i32 %2334, i32* %t.i1942, align 4
  %2335 = load i32, i32* %u.i1943, align 4
  %shr374.i2368 = lshr i32 %2335, 2
  %and375.i2369 = and i32 %shr374.i2368, 63
  %idxprom376.i2370 = zext i32 %and375.i2369 to i64
  %arrayidx377.i2371 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i2370
  %2336 = load i32, i32* %arrayidx377.i2371, align 4
  %2337 = load i32, i32* %u.i1943, align 4
  %shr378.i2372 = lshr i32 %2337, 10
  %and379.i2373 = and i32 %shr378.i2372, 63
  %idxprom380.i2374 = zext i32 %and379.i2373 to i64
  %arrayidx381.i2375 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i2374
  %2338 = load i32, i32* %arrayidx381.i2375, align 4
  %xor382.i2376 = xor i32 %2336, %2338
  %2339 = load i32, i32* %u.i1943, align 4
  %shr383.i2377 = lshr i32 %2339, 18
  %and384.i2378 = and i32 %shr383.i2377, 63
  %idxprom385.i2379 = zext i32 %and384.i2378 to i64
  %arrayidx386.i2380 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i2379
  %2340 = load i32, i32* %arrayidx386.i2380, align 4
  %xor387.i2381 = xor i32 %xor382.i2376, %2340
  %2341 = load i32, i32* %u.i1943, align 4
  %shr388.i2382 = lshr i32 %2341, 26
  %idxprom390.i2383 = zext i32 %shr388.i2382 to i64
  %arrayidx391.i2384 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i2383
  %2342 = load i32, i32* %arrayidx391.i2384, align 4
  %xor392.i2385 = xor i32 %xor387.i2381, %2342
  %2343 = load i32, i32* %t.i1942, align 4
  %shr393.i2386 = lshr i32 %2343, 2
  %and394.i2387 = and i32 %shr393.i2386, 63
  %idxprom395.i2388 = zext i32 %and394.i2387 to i64
  %arrayidx396.i2389 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i2388
  %2344 = load i32, i32* %arrayidx396.i2389, align 4
  %xor397.i2390 = xor i32 %xor392.i2385, %2344
  %2345 = load i32, i32* %t.i1942, align 4
  %shr398.i2391 = lshr i32 %2345, 10
  %and399.i2392 = and i32 %shr398.i2391, 63
  %idxprom400.i2393 = zext i32 %and399.i2392 to i64
  %arrayidx401.i2394 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i2393
  %2346 = load i32, i32* %arrayidx401.i2394, align 4
  %xor402.i2395 = xor i32 %xor397.i2390, %2346
  %2347 = load i32, i32* %t.i1942, align 4
  %shr403.i2396 = lshr i32 %2347, 18
  %and404.i2397 = and i32 %shr403.i2396, 63
  %idxprom405.i2398 = zext i32 %and404.i2397 to i64
  %arrayidx406.i2399 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i2398
  %2348 = load i32, i32* %arrayidx406.i2399, align 4
  %xor407.i2400 = xor i32 %xor402.i2395, %2348
  %2349 = load i32, i32* %t.i1942, align 4
  %shr408.i2401 = lshr i32 %2349, 26
  %idxprom410.i2402 = zext i32 %shr408.i2401 to i64
  %arrayidx411.i2403 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i2402
  %2350 = load i32, i32* %arrayidx411.i2403, align 4
  %xor412.i2404 = xor i32 %xor407.i2400, %2350
  %2351 = load i32, i32* %r.i1941, align 4
  %xor413.i2405 = xor i32 %2351, %xor412.i2404
  store i32 %xor413.i2405, i32* %r.i1941, align 4
  %2352 = load i32, i32* %r.i1941, align 4
  %2353 = load i32*, i32** %s.i1944, align 8
  %arrayidx414.i2406 = getelementptr inbounds i32, i32* %2353, i64 16
  %2354 = load i32, i32* %arrayidx414.i2406, align 4
  %xor415.i2407 = xor i32 %2352, %2354
  store i32 %xor415.i2407, i32* %u.i1943, align 4
  %2355 = load i32, i32* %r.i1941, align 4
  %2356 = load i32*, i32** %s.i1944, align 8
  %arrayidx416.i2408 = getelementptr inbounds i32, i32* %2356, i64 17
  %2357 = load i32, i32* %arrayidx416.i2408, align 4
  %xor417.i2409 = xor i32 %2355, %2357
  store i32 %xor417.i2409, i32* %t.i1942, align 4
  %2358 = load i32, i32* %t.i1942, align 4
  %2359 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2358) #5, !srcloc !12
  store i32 %2359, i32* %ret418.i1966, align 4
  %2360 = load i32, i32* %ret418.i1966, align 4
  store i32 %2360, i32* %tmp419.i1967, align 4
  %2361 = load i32, i32* %tmp419.i1967, align 4
  store i32 %2361, i32* %t.i1942, align 4
  %2362 = load i32, i32* %u.i1943, align 4
  %shr420.i2410 = lshr i32 %2362, 2
  %and421.i2411 = and i32 %shr420.i2410, 63
  %idxprom422.i2412 = zext i32 %and421.i2411 to i64
  %arrayidx423.i2413 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i2412
  %2363 = load i32, i32* %arrayidx423.i2413, align 4
  %2364 = load i32, i32* %u.i1943, align 4
  %shr424.i2414 = lshr i32 %2364, 10
  %and425.i2415 = and i32 %shr424.i2414, 63
  %idxprom426.i2416 = zext i32 %and425.i2415 to i64
  %arrayidx427.i2417 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i2416
  %2365 = load i32, i32* %arrayidx427.i2417, align 4
  %xor428.i2418 = xor i32 %2363, %2365
  %2366 = load i32, i32* %u.i1943, align 4
  %shr429.i2419 = lshr i32 %2366, 18
  %and430.i2420 = and i32 %shr429.i2419, 63
  %idxprom431.i2421 = zext i32 %and430.i2420 to i64
  %arrayidx432.i2422 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i2421
  %2367 = load i32, i32* %arrayidx432.i2422, align 4
  %xor433.i2423 = xor i32 %xor428.i2418, %2367
  %2368 = load i32, i32* %u.i1943, align 4
  %shr434.i2424 = lshr i32 %2368, 26
  %idxprom436.i2425 = zext i32 %shr434.i2424 to i64
  %arrayidx437.i2426 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i2425
  %2369 = load i32, i32* %arrayidx437.i2426, align 4
  %xor438.i2427 = xor i32 %xor433.i2423, %2369
  %2370 = load i32, i32* %t.i1942, align 4
  %shr439.i2428 = lshr i32 %2370, 2
  %and440.i2429 = and i32 %shr439.i2428, 63
  %idxprom441.i2430 = zext i32 %and440.i2429 to i64
  %arrayidx442.i2431 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i2430
  %2371 = load i32, i32* %arrayidx442.i2431, align 4
  %xor443.i2432 = xor i32 %xor438.i2427, %2371
  %2372 = load i32, i32* %t.i1942, align 4
  %shr444.i2433 = lshr i32 %2372, 10
  %and445.i2434 = and i32 %shr444.i2433, 63
  %idxprom446.i2435 = zext i32 %and445.i2434 to i64
  %arrayidx447.i2436 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i2435
  %2373 = load i32, i32* %arrayidx447.i2436, align 4
  %xor448.i2437 = xor i32 %xor443.i2432, %2373
  %2374 = load i32, i32* %t.i1942, align 4
  %shr449.i2438 = lshr i32 %2374, 18
  %and450.i2439 = and i32 %shr449.i2438, 63
  %idxprom451.i2440 = zext i32 %and450.i2439 to i64
  %arrayidx452.i2441 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i2440
  %2375 = load i32, i32* %arrayidx452.i2441, align 4
  %xor453.i2442 = xor i32 %xor448.i2437, %2375
  %2376 = load i32, i32* %t.i1942, align 4
  %shr454.i2443 = lshr i32 %2376, 26
  %idxprom456.i2444 = zext i32 %shr454.i2443 to i64
  %arrayidx457.i2445 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i2444
  %2377 = load i32, i32* %arrayidx457.i2445, align 4
  %xor458.i2446 = xor i32 %xor453.i2442, %2377
  %2378 = load i32, i32* %l.i1940, align 4
  %xor459.i2447 = xor i32 %2378, %xor458.i2446
  store i32 %xor459.i2447, i32* %l.i1940, align 4
  %2379 = load i32, i32* %l.i1940, align 4
  %2380 = load i32*, i32** %s.i1944, align 8
  %arrayidx460.i2448 = getelementptr inbounds i32, i32* %2380, i64 18
  %2381 = load i32, i32* %arrayidx460.i2448, align 4
  %xor461.i2449 = xor i32 %2379, %2381
  store i32 %xor461.i2449, i32* %u.i1943, align 4
  %2382 = load i32, i32* %l.i1940, align 4
  %2383 = load i32*, i32** %s.i1944, align 8
  %arrayidx462.i2450 = getelementptr inbounds i32, i32* %2383, i64 19
  %2384 = load i32, i32* %arrayidx462.i2450, align 4
  %xor463.i2451 = xor i32 %2382, %2384
  store i32 %xor463.i2451, i32* %t.i1942, align 4
  %2385 = load i32, i32* %t.i1942, align 4
  %2386 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2385) #5, !srcloc !13
  store i32 %2386, i32* %ret464.i1968, align 4
  %2387 = load i32, i32* %ret464.i1968, align 4
  store i32 %2387, i32* %tmp465.i1969, align 4
  %2388 = load i32, i32* %tmp465.i1969, align 4
  store i32 %2388, i32* %t.i1942, align 4
  %2389 = load i32, i32* %u.i1943, align 4
  %shr466.i2452 = lshr i32 %2389, 2
  %and467.i2453 = and i32 %shr466.i2452, 63
  %idxprom468.i2454 = zext i32 %and467.i2453 to i64
  %arrayidx469.i2455 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i2454
  %2390 = load i32, i32* %arrayidx469.i2455, align 4
  %2391 = load i32, i32* %u.i1943, align 4
  %shr470.i2456 = lshr i32 %2391, 10
  %and471.i2457 = and i32 %shr470.i2456, 63
  %idxprom472.i2458 = zext i32 %and471.i2457 to i64
  %arrayidx473.i2459 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i2458
  %2392 = load i32, i32* %arrayidx473.i2459, align 4
  %xor474.i2460 = xor i32 %2390, %2392
  %2393 = load i32, i32* %u.i1943, align 4
  %shr475.i2461 = lshr i32 %2393, 18
  %and476.i2462 = and i32 %shr475.i2461, 63
  %idxprom477.i2463 = zext i32 %and476.i2462 to i64
  %arrayidx478.i2464 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i2463
  %2394 = load i32, i32* %arrayidx478.i2464, align 4
  %xor479.i2465 = xor i32 %xor474.i2460, %2394
  %2395 = load i32, i32* %u.i1943, align 4
  %shr480.i2466 = lshr i32 %2395, 26
  %idxprom482.i2467 = zext i32 %shr480.i2466 to i64
  %arrayidx483.i2468 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i2467
  %2396 = load i32, i32* %arrayidx483.i2468, align 4
  %xor484.i2469 = xor i32 %xor479.i2465, %2396
  %2397 = load i32, i32* %t.i1942, align 4
  %shr485.i2470 = lshr i32 %2397, 2
  %and486.i2471 = and i32 %shr485.i2470, 63
  %idxprom487.i2472 = zext i32 %and486.i2471 to i64
  %arrayidx488.i2473 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i2472
  %2398 = load i32, i32* %arrayidx488.i2473, align 4
  %xor489.i2474 = xor i32 %xor484.i2469, %2398
  %2399 = load i32, i32* %t.i1942, align 4
  %shr490.i2475 = lshr i32 %2399, 10
  %and491.i2476 = and i32 %shr490.i2475, 63
  %idxprom492.i2477 = zext i32 %and491.i2476 to i64
  %arrayidx493.i2478 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i2477
  %2400 = load i32, i32* %arrayidx493.i2478, align 4
  %xor494.i2479 = xor i32 %xor489.i2474, %2400
  %2401 = load i32, i32* %t.i1942, align 4
  %shr495.i2480 = lshr i32 %2401, 18
  %and496.i2481 = and i32 %shr495.i2480, 63
  %idxprom497.i2482 = zext i32 %and496.i2481 to i64
  %arrayidx498.i2483 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i2482
  %2402 = load i32, i32* %arrayidx498.i2483, align 4
  %xor499.i2484 = xor i32 %xor494.i2479, %2402
  %2403 = load i32, i32* %t.i1942, align 4
  %shr500.i2485 = lshr i32 %2403, 26
  %idxprom502.i2486 = zext i32 %shr500.i2485 to i64
  %arrayidx503.i2487 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i2486
  %2404 = load i32, i32* %arrayidx503.i2487, align 4
  %xor504.i2488 = xor i32 %xor499.i2484, %2404
  %2405 = load i32, i32* %r.i1941, align 4
  %xor505.i2489 = xor i32 %2405, %xor504.i2488
  store i32 %xor505.i2489, i32* %r.i1941, align 4
  %2406 = load i32, i32* %r.i1941, align 4
  %2407 = load i32*, i32** %s.i1944, align 8
  %arrayidx506.i2490 = getelementptr inbounds i32, i32* %2407, i64 20
  %2408 = load i32, i32* %arrayidx506.i2490, align 4
  %xor507.i2491 = xor i32 %2406, %2408
  store i32 %xor507.i2491, i32* %u.i1943, align 4
  %2409 = load i32, i32* %r.i1941, align 4
  %2410 = load i32*, i32** %s.i1944, align 8
  %arrayidx508.i2492 = getelementptr inbounds i32, i32* %2410, i64 21
  %2411 = load i32, i32* %arrayidx508.i2492, align 4
  %xor509.i2493 = xor i32 %2409, %2411
  store i32 %xor509.i2493, i32* %t.i1942, align 4
  %2412 = load i32, i32* %t.i1942, align 4
  %2413 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2412) #5, !srcloc !14
  store i32 %2413, i32* %ret510.i1970, align 4
  %2414 = load i32, i32* %ret510.i1970, align 4
  store i32 %2414, i32* %tmp511.i1971, align 4
  %2415 = load i32, i32* %tmp511.i1971, align 4
  store i32 %2415, i32* %t.i1942, align 4
  %2416 = load i32, i32* %u.i1943, align 4
  %shr512.i2494 = lshr i32 %2416, 2
  %and513.i2495 = and i32 %shr512.i2494, 63
  %idxprom514.i2496 = zext i32 %and513.i2495 to i64
  %arrayidx515.i2497 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i2496
  %2417 = load i32, i32* %arrayidx515.i2497, align 4
  %2418 = load i32, i32* %u.i1943, align 4
  %shr516.i2498 = lshr i32 %2418, 10
  %and517.i2499 = and i32 %shr516.i2498, 63
  %idxprom518.i2500 = zext i32 %and517.i2499 to i64
  %arrayidx519.i2501 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i2500
  %2419 = load i32, i32* %arrayidx519.i2501, align 4
  %xor520.i2502 = xor i32 %2417, %2419
  %2420 = load i32, i32* %u.i1943, align 4
  %shr521.i2503 = lshr i32 %2420, 18
  %and522.i2504 = and i32 %shr521.i2503, 63
  %idxprom523.i2505 = zext i32 %and522.i2504 to i64
  %arrayidx524.i2506 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i2505
  %2421 = load i32, i32* %arrayidx524.i2506, align 4
  %xor525.i2507 = xor i32 %xor520.i2502, %2421
  %2422 = load i32, i32* %u.i1943, align 4
  %shr526.i2508 = lshr i32 %2422, 26
  %idxprom528.i2509 = zext i32 %shr526.i2508 to i64
  %arrayidx529.i2510 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i2509
  %2423 = load i32, i32* %arrayidx529.i2510, align 4
  %xor530.i2511 = xor i32 %xor525.i2507, %2423
  %2424 = load i32, i32* %t.i1942, align 4
  %shr531.i2512 = lshr i32 %2424, 2
  %and532.i2513 = and i32 %shr531.i2512, 63
  %idxprom533.i2514 = zext i32 %and532.i2513 to i64
  %arrayidx534.i2515 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i2514
  %2425 = load i32, i32* %arrayidx534.i2515, align 4
  %xor535.i2516 = xor i32 %xor530.i2511, %2425
  %2426 = load i32, i32* %t.i1942, align 4
  %shr536.i2517 = lshr i32 %2426, 10
  %and537.i2518 = and i32 %shr536.i2517, 63
  %idxprom538.i2519 = zext i32 %and537.i2518 to i64
  %arrayidx539.i2520 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i2519
  %2427 = load i32, i32* %arrayidx539.i2520, align 4
  %xor540.i2521 = xor i32 %xor535.i2516, %2427
  %2428 = load i32, i32* %t.i1942, align 4
  %shr541.i2522 = lshr i32 %2428, 18
  %and542.i2523 = and i32 %shr541.i2522, 63
  %idxprom543.i2524 = zext i32 %and542.i2523 to i64
  %arrayidx544.i2525 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i2524
  %2429 = load i32, i32* %arrayidx544.i2525, align 4
  %xor545.i2526 = xor i32 %xor540.i2521, %2429
  %2430 = load i32, i32* %t.i1942, align 4
  %shr546.i2527 = lshr i32 %2430, 26
  %idxprom548.i2528 = zext i32 %shr546.i2527 to i64
  %arrayidx549.i2529 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i2528
  %2431 = load i32, i32* %arrayidx549.i2529, align 4
  %xor550.i2530 = xor i32 %xor545.i2526, %2431
  %2432 = load i32, i32* %l.i1940, align 4
  %xor551.i2531 = xor i32 %2432, %xor550.i2530
  store i32 %xor551.i2531, i32* %l.i1940, align 4
  %2433 = load i32, i32* %l.i1940, align 4
  %2434 = load i32*, i32** %s.i1944, align 8
  %arrayidx552.i2532 = getelementptr inbounds i32, i32* %2434, i64 22
  %2435 = load i32, i32* %arrayidx552.i2532, align 4
  %xor553.i2533 = xor i32 %2433, %2435
  store i32 %xor553.i2533, i32* %u.i1943, align 4
  %2436 = load i32, i32* %l.i1940, align 4
  %2437 = load i32*, i32** %s.i1944, align 8
  %arrayidx554.i2534 = getelementptr inbounds i32, i32* %2437, i64 23
  %2438 = load i32, i32* %arrayidx554.i2534, align 4
  %xor555.i2535 = xor i32 %2436, %2438
  store i32 %xor555.i2535, i32* %t.i1942, align 4
  %2439 = load i32, i32* %t.i1942, align 4
  %2440 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2439) #5, !srcloc !15
  store i32 %2440, i32* %ret556.i1972, align 4
  %2441 = load i32, i32* %ret556.i1972, align 4
  store i32 %2441, i32* %tmp557.i1973, align 4
  %2442 = load i32, i32* %tmp557.i1973, align 4
  store i32 %2442, i32* %t.i1942, align 4
  %2443 = load i32, i32* %u.i1943, align 4
  %shr558.i2536 = lshr i32 %2443, 2
  %and559.i2537 = and i32 %shr558.i2536, 63
  %idxprom560.i2538 = zext i32 %and559.i2537 to i64
  %arrayidx561.i2539 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i2538
  %2444 = load i32, i32* %arrayidx561.i2539, align 4
  %2445 = load i32, i32* %u.i1943, align 4
  %shr562.i2540 = lshr i32 %2445, 10
  %and563.i2541 = and i32 %shr562.i2540, 63
  %idxprom564.i2542 = zext i32 %and563.i2541 to i64
  %arrayidx565.i2543 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i2542
  %2446 = load i32, i32* %arrayidx565.i2543, align 4
  %xor566.i2544 = xor i32 %2444, %2446
  %2447 = load i32, i32* %u.i1943, align 4
  %shr567.i2545 = lshr i32 %2447, 18
  %and568.i2546 = and i32 %shr567.i2545, 63
  %idxprom569.i2547 = zext i32 %and568.i2546 to i64
  %arrayidx570.i2548 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i2547
  %2448 = load i32, i32* %arrayidx570.i2548, align 4
  %xor571.i2549 = xor i32 %xor566.i2544, %2448
  %2449 = load i32, i32* %u.i1943, align 4
  %shr572.i2550 = lshr i32 %2449, 26
  %idxprom574.i2551 = zext i32 %shr572.i2550 to i64
  %arrayidx575.i2552 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i2551
  %2450 = load i32, i32* %arrayidx575.i2552, align 4
  %xor576.i2553 = xor i32 %xor571.i2549, %2450
  %2451 = load i32, i32* %t.i1942, align 4
  %shr577.i2554 = lshr i32 %2451, 2
  %and578.i2555 = and i32 %shr577.i2554, 63
  %idxprom579.i2556 = zext i32 %and578.i2555 to i64
  %arrayidx580.i2557 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i2556
  %2452 = load i32, i32* %arrayidx580.i2557, align 4
  %xor581.i2558 = xor i32 %xor576.i2553, %2452
  %2453 = load i32, i32* %t.i1942, align 4
  %shr582.i2559 = lshr i32 %2453, 10
  %and583.i2560 = and i32 %shr582.i2559, 63
  %idxprom584.i2561 = zext i32 %and583.i2560 to i64
  %arrayidx585.i2562 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i2561
  %2454 = load i32, i32* %arrayidx585.i2562, align 4
  %xor586.i2563 = xor i32 %xor581.i2558, %2454
  %2455 = load i32, i32* %t.i1942, align 4
  %shr587.i2564 = lshr i32 %2455, 18
  %and588.i2565 = and i32 %shr587.i2564, 63
  %idxprom589.i2566 = zext i32 %and588.i2565 to i64
  %arrayidx590.i2567 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i2566
  %2456 = load i32, i32* %arrayidx590.i2567, align 4
  %xor591.i2568 = xor i32 %xor586.i2563, %2456
  %2457 = load i32, i32* %t.i1942, align 4
  %shr592.i2569 = lshr i32 %2457, 26
  %idxprom594.i2570 = zext i32 %shr592.i2569 to i64
  %arrayidx595.i2571 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i2570
  %2458 = load i32, i32* %arrayidx595.i2571, align 4
  %xor596.i2572 = xor i32 %xor591.i2568, %2458
  %2459 = load i32, i32* %r.i1941, align 4
  %xor597.i2573 = xor i32 %2459, %xor596.i2572
  store i32 %xor597.i2573, i32* %r.i1941, align 4
  %2460 = load i32, i32* %r.i1941, align 4
  %2461 = load i32*, i32** %s.i1944, align 8
  %arrayidx598.i2574 = getelementptr inbounds i32, i32* %2461, i64 24
  %2462 = load i32, i32* %arrayidx598.i2574, align 4
  %xor599.i2575 = xor i32 %2460, %2462
  store i32 %xor599.i2575, i32* %u.i1943, align 4
  %2463 = load i32, i32* %r.i1941, align 4
  %2464 = load i32*, i32** %s.i1944, align 8
  %arrayidx600.i2576 = getelementptr inbounds i32, i32* %2464, i64 25
  %2465 = load i32, i32* %arrayidx600.i2576, align 4
  %xor601.i2577 = xor i32 %2463, %2465
  store i32 %xor601.i2577, i32* %t.i1942, align 4
  %2466 = load i32, i32* %t.i1942, align 4
  %2467 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2466) #5, !srcloc !16
  store i32 %2467, i32* %ret602.i1974, align 4
  %2468 = load i32, i32* %ret602.i1974, align 4
  store i32 %2468, i32* %tmp603.i1975, align 4
  %2469 = load i32, i32* %tmp603.i1975, align 4
  store i32 %2469, i32* %t.i1942, align 4
  %2470 = load i32, i32* %u.i1943, align 4
  %shr604.i2578 = lshr i32 %2470, 2
  %and605.i2579 = and i32 %shr604.i2578, 63
  %idxprom606.i2580 = zext i32 %and605.i2579 to i64
  %arrayidx607.i2581 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i2580
  %2471 = load i32, i32* %arrayidx607.i2581, align 4
  %2472 = load i32, i32* %u.i1943, align 4
  %shr608.i2582 = lshr i32 %2472, 10
  %and609.i2583 = and i32 %shr608.i2582, 63
  %idxprom610.i2584 = zext i32 %and609.i2583 to i64
  %arrayidx611.i2585 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i2584
  %2473 = load i32, i32* %arrayidx611.i2585, align 4
  %xor612.i2586 = xor i32 %2471, %2473
  %2474 = load i32, i32* %u.i1943, align 4
  %shr613.i2587 = lshr i32 %2474, 18
  %and614.i2588 = and i32 %shr613.i2587, 63
  %idxprom615.i2589 = zext i32 %and614.i2588 to i64
  %arrayidx616.i2590 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i2589
  %2475 = load i32, i32* %arrayidx616.i2590, align 4
  %xor617.i2591 = xor i32 %xor612.i2586, %2475
  %2476 = load i32, i32* %u.i1943, align 4
  %shr618.i2592 = lshr i32 %2476, 26
  %idxprom620.i2593 = zext i32 %shr618.i2592 to i64
  %arrayidx621.i2594 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i2593
  %2477 = load i32, i32* %arrayidx621.i2594, align 4
  %xor622.i2595 = xor i32 %xor617.i2591, %2477
  %2478 = load i32, i32* %t.i1942, align 4
  %shr623.i2596 = lshr i32 %2478, 2
  %and624.i2597 = and i32 %shr623.i2596, 63
  %idxprom625.i2598 = zext i32 %and624.i2597 to i64
  %arrayidx626.i2599 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i2598
  %2479 = load i32, i32* %arrayidx626.i2599, align 4
  %xor627.i2600 = xor i32 %xor622.i2595, %2479
  %2480 = load i32, i32* %t.i1942, align 4
  %shr628.i2601 = lshr i32 %2480, 10
  %and629.i2602 = and i32 %shr628.i2601, 63
  %idxprom630.i2603 = zext i32 %and629.i2602 to i64
  %arrayidx631.i2604 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i2603
  %2481 = load i32, i32* %arrayidx631.i2604, align 4
  %xor632.i2605 = xor i32 %xor627.i2600, %2481
  %2482 = load i32, i32* %t.i1942, align 4
  %shr633.i2606 = lshr i32 %2482, 18
  %and634.i2607 = and i32 %shr633.i2606, 63
  %idxprom635.i2608 = zext i32 %and634.i2607 to i64
  %arrayidx636.i2609 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i2608
  %2483 = load i32, i32* %arrayidx636.i2609, align 4
  %xor637.i2610 = xor i32 %xor632.i2605, %2483
  %2484 = load i32, i32* %t.i1942, align 4
  %shr638.i2611 = lshr i32 %2484, 26
  %idxprom640.i2612 = zext i32 %shr638.i2611 to i64
  %arrayidx641.i2613 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i2612
  %2485 = load i32, i32* %arrayidx641.i2613, align 4
  %xor642.i2614 = xor i32 %xor637.i2610, %2485
  %2486 = load i32, i32* %l.i1940, align 4
  %xor643.i2615 = xor i32 %2486, %xor642.i2614
  store i32 %xor643.i2615, i32* %l.i1940, align 4
  %2487 = load i32, i32* %l.i1940, align 4
  %2488 = load i32*, i32** %s.i1944, align 8
  %arrayidx644.i2616 = getelementptr inbounds i32, i32* %2488, i64 26
  %2489 = load i32, i32* %arrayidx644.i2616, align 4
  %xor645.i2617 = xor i32 %2487, %2489
  store i32 %xor645.i2617, i32* %u.i1943, align 4
  %2490 = load i32, i32* %l.i1940, align 4
  %2491 = load i32*, i32** %s.i1944, align 8
  %arrayidx646.i2618 = getelementptr inbounds i32, i32* %2491, i64 27
  %2492 = load i32, i32* %arrayidx646.i2618, align 4
  %xor647.i2619 = xor i32 %2490, %2492
  store i32 %xor647.i2619, i32* %t.i1942, align 4
  %2493 = load i32, i32* %t.i1942, align 4
  %2494 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2493) #5, !srcloc !17
  store i32 %2494, i32* %ret648.i1976, align 4
  %2495 = load i32, i32* %ret648.i1976, align 4
  store i32 %2495, i32* %tmp649.i1977, align 4
  %2496 = load i32, i32* %tmp649.i1977, align 4
  store i32 %2496, i32* %t.i1942, align 4
  %2497 = load i32, i32* %u.i1943, align 4
  %shr650.i2620 = lshr i32 %2497, 2
  %and651.i2621 = and i32 %shr650.i2620, 63
  %idxprom652.i2622 = zext i32 %and651.i2621 to i64
  %arrayidx653.i2623 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i2622
  %2498 = load i32, i32* %arrayidx653.i2623, align 4
  %2499 = load i32, i32* %u.i1943, align 4
  %shr654.i2624 = lshr i32 %2499, 10
  %and655.i2625 = and i32 %shr654.i2624, 63
  %idxprom656.i2626 = zext i32 %and655.i2625 to i64
  %arrayidx657.i2627 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i2626
  %2500 = load i32, i32* %arrayidx657.i2627, align 4
  %xor658.i2628 = xor i32 %2498, %2500
  %2501 = load i32, i32* %u.i1943, align 4
  %shr659.i2629 = lshr i32 %2501, 18
  %and660.i2630 = and i32 %shr659.i2629, 63
  %idxprom661.i2631 = zext i32 %and660.i2630 to i64
  %arrayidx662.i2632 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i2631
  %2502 = load i32, i32* %arrayidx662.i2632, align 4
  %xor663.i2633 = xor i32 %xor658.i2628, %2502
  %2503 = load i32, i32* %u.i1943, align 4
  %shr664.i2634 = lshr i32 %2503, 26
  %idxprom666.i2635 = zext i32 %shr664.i2634 to i64
  %arrayidx667.i2636 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i2635
  %2504 = load i32, i32* %arrayidx667.i2636, align 4
  %xor668.i2637 = xor i32 %xor663.i2633, %2504
  %2505 = load i32, i32* %t.i1942, align 4
  %shr669.i2638 = lshr i32 %2505, 2
  %and670.i2639 = and i32 %shr669.i2638, 63
  %idxprom671.i2640 = zext i32 %and670.i2639 to i64
  %arrayidx672.i2641 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i2640
  %2506 = load i32, i32* %arrayidx672.i2641, align 4
  %xor673.i2642 = xor i32 %xor668.i2637, %2506
  %2507 = load i32, i32* %t.i1942, align 4
  %shr674.i2643 = lshr i32 %2507, 10
  %and675.i2644 = and i32 %shr674.i2643, 63
  %idxprom676.i2645 = zext i32 %and675.i2644 to i64
  %arrayidx677.i2646 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i2645
  %2508 = load i32, i32* %arrayidx677.i2646, align 4
  %xor678.i2647 = xor i32 %xor673.i2642, %2508
  %2509 = load i32, i32* %t.i1942, align 4
  %shr679.i2648 = lshr i32 %2509, 18
  %and680.i2649 = and i32 %shr679.i2648, 63
  %idxprom681.i2650 = zext i32 %and680.i2649 to i64
  %arrayidx682.i2651 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i2650
  %2510 = load i32, i32* %arrayidx682.i2651, align 4
  %xor683.i2652 = xor i32 %xor678.i2647, %2510
  %2511 = load i32, i32* %t.i1942, align 4
  %shr684.i2653 = lshr i32 %2511, 26
  %idxprom686.i2654 = zext i32 %shr684.i2653 to i64
  %arrayidx687.i2655 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i2654
  %2512 = load i32, i32* %arrayidx687.i2655, align 4
  %xor688.i2656 = xor i32 %xor683.i2652, %2512
  %2513 = load i32, i32* %r.i1941, align 4
  %xor689.i2657 = xor i32 %2513, %xor688.i2656
  store i32 %xor689.i2657, i32* %r.i1941, align 4
  %2514 = load i32, i32* %r.i1941, align 4
  %2515 = load i32*, i32** %s.i1944, align 8
  %arrayidx690.i2658 = getelementptr inbounds i32, i32* %2515, i64 28
  %2516 = load i32, i32* %arrayidx690.i2658, align 4
  %xor691.i2659 = xor i32 %2514, %2516
  store i32 %xor691.i2659, i32* %u.i1943, align 4
  %2517 = load i32, i32* %r.i1941, align 4
  %2518 = load i32*, i32** %s.i1944, align 8
  %arrayidx692.i2660 = getelementptr inbounds i32, i32* %2518, i64 29
  %2519 = load i32, i32* %arrayidx692.i2660, align 4
  %xor693.i2661 = xor i32 %2517, %2519
  store i32 %xor693.i2661, i32* %t.i1942, align 4
  %2520 = load i32, i32* %t.i1942, align 4
  %2521 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2520) #5, !srcloc !18
  store i32 %2521, i32* %ret694.i1978, align 4
  %2522 = load i32, i32* %ret694.i1978, align 4
  store i32 %2522, i32* %tmp695.i1979, align 4
  %2523 = load i32, i32* %tmp695.i1979, align 4
  store i32 %2523, i32* %t.i1942, align 4
  %2524 = load i32, i32* %u.i1943, align 4
  %shr696.i2662 = lshr i32 %2524, 2
  %and697.i2663 = and i32 %shr696.i2662, 63
  %idxprom698.i2664 = zext i32 %and697.i2663 to i64
  %arrayidx699.i2665 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i2664
  %2525 = load i32, i32* %arrayidx699.i2665, align 4
  %2526 = load i32, i32* %u.i1943, align 4
  %shr700.i2666 = lshr i32 %2526, 10
  %and701.i2667 = and i32 %shr700.i2666, 63
  %idxprom702.i2668 = zext i32 %and701.i2667 to i64
  %arrayidx703.i2669 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i2668
  %2527 = load i32, i32* %arrayidx703.i2669, align 4
  %xor704.i2670 = xor i32 %2525, %2527
  %2528 = load i32, i32* %u.i1943, align 4
  %shr705.i2671 = lshr i32 %2528, 18
  %and706.i2672 = and i32 %shr705.i2671, 63
  %idxprom707.i2673 = zext i32 %and706.i2672 to i64
  %arrayidx708.i2674 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i2673
  %2529 = load i32, i32* %arrayidx708.i2674, align 4
  %xor709.i2675 = xor i32 %xor704.i2670, %2529
  %2530 = load i32, i32* %u.i1943, align 4
  %shr710.i2676 = lshr i32 %2530, 26
  %idxprom712.i2677 = zext i32 %shr710.i2676 to i64
  %arrayidx713.i2678 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i2677
  %2531 = load i32, i32* %arrayidx713.i2678, align 4
  %xor714.i2679 = xor i32 %xor709.i2675, %2531
  %2532 = load i32, i32* %t.i1942, align 4
  %shr715.i2680 = lshr i32 %2532, 2
  %and716.i2681 = and i32 %shr715.i2680, 63
  %idxprom717.i2682 = zext i32 %and716.i2681 to i64
  %arrayidx718.i2683 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i2682
  %2533 = load i32, i32* %arrayidx718.i2683, align 4
  %xor719.i2684 = xor i32 %xor714.i2679, %2533
  %2534 = load i32, i32* %t.i1942, align 4
  %shr720.i2685 = lshr i32 %2534, 10
  %and721.i2686 = and i32 %shr720.i2685, 63
  %idxprom722.i2687 = zext i32 %and721.i2686 to i64
  %arrayidx723.i2688 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i2687
  %2535 = load i32, i32* %arrayidx723.i2688, align 4
  %xor724.i2689 = xor i32 %xor719.i2684, %2535
  %2536 = load i32, i32* %t.i1942, align 4
  %shr725.i2690 = lshr i32 %2536, 18
  %and726.i2691 = and i32 %shr725.i2690, 63
  %idxprom727.i2692 = zext i32 %and726.i2691 to i64
  %arrayidx728.i2693 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i2692
  %2537 = load i32, i32* %arrayidx728.i2693, align 4
  %xor729.i2694 = xor i32 %xor724.i2689, %2537
  %2538 = load i32, i32* %t.i1942, align 4
  %shr730.i2695 = lshr i32 %2538, 26
  %idxprom732.i2696 = zext i32 %shr730.i2695 to i64
  %arrayidx733.i2697 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i2696
  %2539 = load i32, i32* %arrayidx733.i2697, align 4
  %xor734.i2698 = xor i32 %xor729.i2694, %2539
  %2540 = load i32, i32* %l.i1940, align 4
  %xor735.i2699 = xor i32 %2540, %xor734.i2698
  store i32 %xor735.i2699, i32* %l.i1940, align 4
  %2541 = load i32, i32* %l.i1940, align 4
  %2542 = load i32*, i32** %s.i1944, align 8
  %arrayidx736.i2700 = getelementptr inbounds i32, i32* %2542, i64 30
  %2543 = load i32, i32* %arrayidx736.i2700, align 4
  %xor737.i2701 = xor i32 %2541, %2543
  store i32 %xor737.i2701, i32* %u.i1943, align 4
  %2544 = load i32, i32* %l.i1940, align 4
  %2545 = load i32*, i32** %s.i1944, align 8
  %arrayidx738.i2702 = getelementptr inbounds i32, i32* %2545, i64 31
  %2546 = load i32, i32* %arrayidx738.i2702, align 4
  %xor739.i2703 = xor i32 %2544, %2546
  store i32 %xor739.i2703, i32* %t.i1942, align 4
  %2547 = load i32, i32* %t.i1942, align 4
  %2548 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2547) #5, !srcloc !19
  store i32 %2548, i32* %ret740.i1980, align 4
  %2549 = load i32, i32* %ret740.i1980, align 4
  store i32 %2549, i32* %tmp741.i1981, align 4
  %2550 = load i32, i32* %tmp741.i1981, align 4
  store i32 %2550, i32* %t.i1942, align 4
  %2551 = load i32, i32* %u.i1943, align 4
  %shr742.i2704 = lshr i32 %2551, 2
  %and743.i2705 = and i32 %shr742.i2704, 63
  %idxprom744.i2706 = zext i32 %and743.i2705 to i64
  %arrayidx745.i2707 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i2706
  %2552 = load i32, i32* %arrayidx745.i2707, align 4
  %2553 = load i32, i32* %u.i1943, align 4
  %shr746.i2708 = lshr i32 %2553, 10
  %and747.i2709 = and i32 %shr746.i2708, 63
  %idxprom748.i2710 = zext i32 %and747.i2709 to i64
  %arrayidx749.i2711 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i2710
  %2554 = load i32, i32* %arrayidx749.i2711, align 4
  %xor750.i2712 = xor i32 %2552, %2554
  %2555 = load i32, i32* %u.i1943, align 4
  %shr751.i2713 = lshr i32 %2555, 18
  %and752.i2714 = and i32 %shr751.i2713, 63
  %idxprom753.i2715 = zext i32 %and752.i2714 to i64
  %arrayidx754.i2716 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i2715
  %2556 = load i32, i32* %arrayidx754.i2716, align 4
  %xor755.i2717 = xor i32 %xor750.i2712, %2556
  %2557 = load i32, i32* %u.i1943, align 4
  %shr756.i2718 = lshr i32 %2557, 26
  %idxprom758.i2719 = zext i32 %shr756.i2718 to i64
  %arrayidx759.i2720 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i2719
  %2558 = load i32, i32* %arrayidx759.i2720, align 4
  %xor760.i2721 = xor i32 %xor755.i2717, %2558
  %2559 = load i32, i32* %t.i1942, align 4
  %shr761.i2722 = lshr i32 %2559, 2
  %and762.i2723 = and i32 %shr761.i2722, 63
  %idxprom763.i2724 = zext i32 %and762.i2723 to i64
  %arrayidx764.i2725 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i2724
  %2560 = load i32, i32* %arrayidx764.i2725, align 4
  %xor765.i2726 = xor i32 %xor760.i2721, %2560
  %2561 = load i32, i32* %t.i1942, align 4
  %shr766.i2727 = lshr i32 %2561, 10
  %and767.i2728 = and i32 %shr766.i2727, 63
  %idxprom768.i2729 = zext i32 %and767.i2728 to i64
  %arrayidx769.i2730 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i2729
  %2562 = load i32, i32* %arrayidx769.i2730, align 4
  %xor770.i2731 = xor i32 %xor765.i2726, %2562
  %2563 = load i32, i32* %t.i1942, align 4
  %shr771.i2732 = lshr i32 %2563, 18
  %and772.i2733 = and i32 %shr771.i2732, 63
  %idxprom773.i2734 = zext i32 %and772.i2733 to i64
  %arrayidx774.i2735 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i2734
  %2564 = load i32, i32* %arrayidx774.i2735, align 4
  %xor775.i2736 = xor i32 %xor770.i2731, %2564
  %2565 = load i32, i32* %t.i1942, align 4
  %shr776.i2737 = lshr i32 %2565, 26
  %idxprom778.i2738 = zext i32 %shr776.i2737 to i64
  %arrayidx779.i2739 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i2738
  %2566 = load i32, i32* %arrayidx779.i2739, align 4
  %xor780.i2740 = xor i32 %xor775.i2736, %2566
  %2567 = load i32, i32* %r.i1941, align 4
  %xor781.i2741 = xor i32 %2567, %xor780.i2740
  store i32 %xor781.i2741, i32* %r.i1941, align 4
  br label %DES_encrypt1.exit3462

if.else.i3414:                                    ; preds = %for.body227
  %2568 = load i32, i32* %r.i1941, align 4
  %2569 = load i32*, i32** %s.i1944, align 8
  %arrayidx782.i2743 = getelementptr inbounds i32, i32* %2569, i64 30
  %2570 = load i32, i32* %arrayidx782.i2743, align 4
  %xor783.i2744 = xor i32 %2568, %2570
  store i32 %xor783.i2744, i32* %u.i1943, align 4
  %2571 = load i32, i32* %r.i1941, align 4
  %2572 = load i32*, i32** %s.i1944, align 8
  %arrayidx784.i2745 = getelementptr inbounds i32, i32* %2572, i64 31
  %2573 = load i32, i32* %arrayidx784.i2745, align 4
  %xor785.i2746 = xor i32 %2571, %2573
  store i32 %xor785.i2746, i32* %t.i1942, align 4
  %2574 = load i32, i32* %t.i1942, align 4
  %2575 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2574) #5, !srcloc !20
  store i32 %2575, i32* %ret786.i1982, align 4
  %2576 = load i32, i32* %ret786.i1982, align 4
  store i32 %2576, i32* %tmp787.i1983, align 4
  %2577 = load i32, i32* %tmp787.i1983, align 4
  store i32 %2577, i32* %t.i1942, align 4
  %2578 = load i32, i32* %u.i1943, align 4
  %shr788.i2747 = lshr i32 %2578, 2
  %and789.i2748 = and i32 %shr788.i2747, 63
  %idxprom790.i2749 = zext i32 %and789.i2748 to i64
  %arrayidx791.i2750 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i2749
  %2579 = load i32, i32* %arrayidx791.i2750, align 4
  %2580 = load i32, i32* %u.i1943, align 4
  %shr792.i2751 = lshr i32 %2580, 10
  %and793.i2752 = and i32 %shr792.i2751, 63
  %idxprom794.i2753 = zext i32 %and793.i2752 to i64
  %arrayidx795.i2754 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i2753
  %2581 = load i32, i32* %arrayidx795.i2754, align 4
  %xor796.i2755 = xor i32 %2579, %2581
  %2582 = load i32, i32* %u.i1943, align 4
  %shr797.i2756 = lshr i32 %2582, 18
  %and798.i2757 = and i32 %shr797.i2756, 63
  %idxprom799.i2758 = zext i32 %and798.i2757 to i64
  %arrayidx800.i2759 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i2758
  %2583 = load i32, i32* %arrayidx800.i2759, align 4
  %xor801.i2760 = xor i32 %xor796.i2755, %2583
  %2584 = load i32, i32* %u.i1943, align 4
  %shr802.i2761 = lshr i32 %2584, 26
  %idxprom804.i2762 = zext i32 %shr802.i2761 to i64
  %arrayidx805.i2763 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i2762
  %2585 = load i32, i32* %arrayidx805.i2763, align 4
  %xor806.i2764 = xor i32 %xor801.i2760, %2585
  %2586 = load i32, i32* %t.i1942, align 4
  %shr807.i2765 = lshr i32 %2586, 2
  %and808.i2766 = and i32 %shr807.i2765, 63
  %idxprom809.i2767 = zext i32 %and808.i2766 to i64
  %arrayidx810.i2768 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i2767
  %2587 = load i32, i32* %arrayidx810.i2768, align 4
  %xor811.i2769 = xor i32 %xor806.i2764, %2587
  %2588 = load i32, i32* %t.i1942, align 4
  %shr812.i2770 = lshr i32 %2588, 10
  %and813.i2771 = and i32 %shr812.i2770, 63
  %idxprom814.i2772 = zext i32 %and813.i2771 to i64
  %arrayidx815.i2773 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i2772
  %2589 = load i32, i32* %arrayidx815.i2773, align 4
  %xor816.i2774 = xor i32 %xor811.i2769, %2589
  %2590 = load i32, i32* %t.i1942, align 4
  %shr817.i2775 = lshr i32 %2590, 18
  %and818.i2776 = and i32 %shr817.i2775, 63
  %idxprom819.i2777 = zext i32 %and818.i2776 to i64
  %arrayidx820.i2778 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i2777
  %2591 = load i32, i32* %arrayidx820.i2778, align 4
  %xor821.i2779 = xor i32 %xor816.i2774, %2591
  %2592 = load i32, i32* %t.i1942, align 4
  %shr822.i2780 = lshr i32 %2592, 26
  %idxprom824.i2781 = zext i32 %shr822.i2780 to i64
  %arrayidx825.i2782 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i2781
  %2593 = load i32, i32* %arrayidx825.i2782, align 4
  %xor826.i2783 = xor i32 %xor821.i2779, %2593
  %2594 = load i32, i32* %l.i1940, align 4
  %xor827.i2784 = xor i32 %2594, %xor826.i2783
  store i32 %xor827.i2784, i32* %l.i1940, align 4
  %2595 = load i32, i32* %l.i1940, align 4
  %2596 = load i32*, i32** %s.i1944, align 8
  %arrayidx828.i2785 = getelementptr inbounds i32, i32* %2596, i64 28
  %2597 = load i32, i32* %arrayidx828.i2785, align 4
  %xor829.i2786 = xor i32 %2595, %2597
  store i32 %xor829.i2786, i32* %u.i1943, align 4
  %2598 = load i32, i32* %l.i1940, align 4
  %2599 = load i32*, i32** %s.i1944, align 8
  %arrayidx830.i2787 = getelementptr inbounds i32, i32* %2599, i64 29
  %2600 = load i32, i32* %arrayidx830.i2787, align 4
  %xor831.i2788 = xor i32 %2598, %2600
  store i32 %xor831.i2788, i32* %t.i1942, align 4
  %2601 = load i32, i32* %t.i1942, align 4
  %2602 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2601) #5, !srcloc !21
  store i32 %2602, i32* %ret832.i1984, align 4
  %2603 = load i32, i32* %ret832.i1984, align 4
  store i32 %2603, i32* %tmp833.i1985, align 4
  %2604 = load i32, i32* %tmp833.i1985, align 4
  store i32 %2604, i32* %t.i1942, align 4
  %2605 = load i32, i32* %u.i1943, align 4
  %shr834.i2789 = lshr i32 %2605, 2
  %and835.i2790 = and i32 %shr834.i2789, 63
  %idxprom836.i2791 = zext i32 %and835.i2790 to i64
  %arrayidx837.i2792 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i2791
  %2606 = load i32, i32* %arrayidx837.i2792, align 4
  %2607 = load i32, i32* %u.i1943, align 4
  %shr838.i2793 = lshr i32 %2607, 10
  %and839.i2794 = and i32 %shr838.i2793, 63
  %idxprom840.i2795 = zext i32 %and839.i2794 to i64
  %arrayidx841.i2796 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i2795
  %2608 = load i32, i32* %arrayidx841.i2796, align 4
  %xor842.i2797 = xor i32 %2606, %2608
  %2609 = load i32, i32* %u.i1943, align 4
  %shr843.i2798 = lshr i32 %2609, 18
  %and844.i2799 = and i32 %shr843.i2798, 63
  %idxprom845.i2800 = zext i32 %and844.i2799 to i64
  %arrayidx846.i2801 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i2800
  %2610 = load i32, i32* %arrayidx846.i2801, align 4
  %xor847.i2802 = xor i32 %xor842.i2797, %2610
  %2611 = load i32, i32* %u.i1943, align 4
  %shr848.i2803 = lshr i32 %2611, 26
  %idxprom850.i2804 = zext i32 %shr848.i2803 to i64
  %arrayidx851.i2805 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i2804
  %2612 = load i32, i32* %arrayidx851.i2805, align 4
  %xor852.i2806 = xor i32 %xor847.i2802, %2612
  %2613 = load i32, i32* %t.i1942, align 4
  %shr853.i2807 = lshr i32 %2613, 2
  %and854.i2808 = and i32 %shr853.i2807, 63
  %idxprom855.i2809 = zext i32 %and854.i2808 to i64
  %arrayidx856.i2810 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i2809
  %2614 = load i32, i32* %arrayidx856.i2810, align 4
  %xor857.i2811 = xor i32 %xor852.i2806, %2614
  %2615 = load i32, i32* %t.i1942, align 4
  %shr858.i2812 = lshr i32 %2615, 10
  %and859.i2813 = and i32 %shr858.i2812, 63
  %idxprom860.i2814 = zext i32 %and859.i2813 to i64
  %arrayidx861.i2815 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i2814
  %2616 = load i32, i32* %arrayidx861.i2815, align 4
  %xor862.i2816 = xor i32 %xor857.i2811, %2616
  %2617 = load i32, i32* %t.i1942, align 4
  %shr863.i2817 = lshr i32 %2617, 18
  %and864.i2818 = and i32 %shr863.i2817, 63
  %idxprom865.i2819 = zext i32 %and864.i2818 to i64
  %arrayidx866.i2820 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i2819
  %2618 = load i32, i32* %arrayidx866.i2820, align 4
  %xor867.i2821 = xor i32 %xor862.i2816, %2618
  %2619 = load i32, i32* %t.i1942, align 4
  %shr868.i2822 = lshr i32 %2619, 26
  %idxprom870.i2823 = zext i32 %shr868.i2822 to i64
  %arrayidx871.i2824 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i2823
  %2620 = load i32, i32* %arrayidx871.i2824, align 4
  %xor872.i2825 = xor i32 %xor867.i2821, %2620
  %2621 = load i32, i32* %r.i1941, align 4
  %xor873.i2826 = xor i32 %2621, %xor872.i2825
  store i32 %xor873.i2826, i32* %r.i1941, align 4
  %2622 = load i32, i32* %r.i1941, align 4
  %2623 = load i32*, i32** %s.i1944, align 8
  %arrayidx874.i2827 = getelementptr inbounds i32, i32* %2623, i64 26
  %2624 = load i32, i32* %arrayidx874.i2827, align 4
  %xor875.i2828 = xor i32 %2622, %2624
  store i32 %xor875.i2828, i32* %u.i1943, align 4
  %2625 = load i32, i32* %r.i1941, align 4
  %2626 = load i32*, i32** %s.i1944, align 8
  %arrayidx876.i2829 = getelementptr inbounds i32, i32* %2626, i64 27
  %2627 = load i32, i32* %arrayidx876.i2829, align 4
  %xor877.i2830 = xor i32 %2625, %2627
  store i32 %xor877.i2830, i32* %t.i1942, align 4
  %2628 = load i32, i32* %t.i1942, align 4
  %2629 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2628) #5, !srcloc !22
  store i32 %2629, i32* %ret878.i1986, align 4
  %2630 = load i32, i32* %ret878.i1986, align 4
  store i32 %2630, i32* %tmp879.i1987, align 4
  %2631 = load i32, i32* %tmp879.i1987, align 4
  store i32 %2631, i32* %t.i1942, align 4
  %2632 = load i32, i32* %u.i1943, align 4
  %shr880.i2831 = lshr i32 %2632, 2
  %and881.i2832 = and i32 %shr880.i2831, 63
  %idxprom882.i2833 = zext i32 %and881.i2832 to i64
  %arrayidx883.i2834 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i2833
  %2633 = load i32, i32* %arrayidx883.i2834, align 4
  %2634 = load i32, i32* %u.i1943, align 4
  %shr884.i2835 = lshr i32 %2634, 10
  %and885.i2836 = and i32 %shr884.i2835, 63
  %idxprom886.i2837 = zext i32 %and885.i2836 to i64
  %arrayidx887.i2838 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i2837
  %2635 = load i32, i32* %arrayidx887.i2838, align 4
  %xor888.i2839 = xor i32 %2633, %2635
  %2636 = load i32, i32* %u.i1943, align 4
  %shr889.i2840 = lshr i32 %2636, 18
  %and890.i2841 = and i32 %shr889.i2840, 63
  %idxprom891.i2842 = zext i32 %and890.i2841 to i64
  %arrayidx892.i2843 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i2842
  %2637 = load i32, i32* %arrayidx892.i2843, align 4
  %xor893.i2844 = xor i32 %xor888.i2839, %2637
  %2638 = load i32, i32* %u.i1943, align 4
  %shr894.i2845 = lshr i32 %2638, 26
  %idxprom896.i2846 = zext i32 %shr894.i2845 to i64
  %arrayidx897.i2847 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i2846
  %2639 = load i32, i32* %arrayidx897.i2847, align 4
  %xor898.i2848 = xor i32 %xor893.i2844, %2639
  %2640 = load i32, i32* %t.i1942, align 4
  %shr899.i2849 = lshr i32 %2640, 2
  %and900.i2850 = and i32 %shr899.i2849, 63
  %idxprom901.i2851 = zext i32 %and900.i2850 to i64
  %arrayidx902.i2852 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i2851
  %2641 = load i32, i32* %arrayidx902.i2852, align 4
  %xor903.i2853 = xor i32 %xor898.i2848, %2641
  %2642 = load i32, i32* %t.i1942, align 4
  %shr904.i2854 = lshr i32 %2642, 10
  %and905.i2855 = and i32 %shr904.i2854, 63
  %idxprom906.i2856 = zext i32 %and905.i2855 to i64
  %arrayidx907.i2857 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i2856
  %2643 = load i32, i32* %arrayidx907.i2857, align 4
  %xor908.i2858 = xor i32 %xor903.i2853, %2643
  %2644 = load i32, i32* %t.i1942, align 4
  %shr909.i2859 = lshr i32 %2644, 18
  %and910.i2860 = and i32 %shr909.i2859, 63
  %idxprom911.i2861 = zext i32 %and910.i2860 to i64
  %arrayidx912.i2862 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i2861
  %2645 = load i32, i32* %arrayidx912.i2862, align 4
  %xor913.i2863 = xor i32 %xor908.i2858, %2645
  %2646 = load i32, i32* %t.i1942, align 4
  %shr914.i2864 = lshr i32 %2646, 26
  %idxprom916.i2865 = zext i32 %shr914.i2864 to i64
  %arrayidx917.i2866 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i2865
  %2647 = load i32, i32* %arrayidx917.i2866, align 4
  %xor918.i2867 = xor i32 %xor913.i2863, %2647
  %2648 = load i32, i32* %l.i1940, align 4
  %xor919.i2868 = xor i32 %2648, %xor918.i2867
  store i32 %xor919.i2868, i32* %l.i1940, align 4
  %2649 = load i32, i32* %l.i1940, align 4
  %2650 = load i32*, i32** %s.i1944, align 8
  %arrayidx920.i2869 = getelementptr inbounds i32, i32* %2650, i64 24
  %2651 = load i32, i32* %arrayidx920.i2869, align 4
  %xor921.i2870 = xor i32 %2649, %2651
  store i32 %xor921.i2870, i32* %u.i1943, align 4
  %2652 = load i32, i32* %l.i1940, align 4
  %2653 = load i32*, i32** %s.i1944, align 8
  %arrayidx922.i2871 = getelementptr inbounds i32, i32* %2653, i64 25
  %2654 = load i32, i32* %arrayidx922.i2871, align 4
  %xor923.i2872 = xor i32 %2652, %2654
  store i32 %xor923.i2872, i32* %t.i1942, align 4
  %2655 = load i32, i32* %t.i1942, align 4
  %2656 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2655) #5, !srcloc !23
  store i32 %2656, i32* %ret924.i1988, align 4
  %2657 = load i32, i32* %ret924.i1988, align 4
  store i32 %2657, i32* %tmp925.i1989, align 4
  %2658 = load i32, i32* %tmp925.i1989, align 4
  store i32 %2658, i32* %t.i1942, align 4
  %2659 = load i32, i32* %u.i1943, align 4
  %shr926.i2873 = lshr i32 %2659, 2
  %and927.i2874 = and i32 %shr926.i2873, 63
  %idxprom928.i2875 = zext i32 %and927.i2874 to i64
  %arrayidx929.i2876 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i2875
  %2660 = load i32, i32* %arrayidx929.i2876, align 4
  %2661 = load i32, i32* %u.i1943, align 4
  %shr930.i2877 = lshr i32 %2661, 10
  %and931.i2878 = and i32 %shr930.i2877, 63
  %idxprom932.i2879 = zext i32 %and931.i2878 to i64
  %arrayidx933.i2880 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i2879
  %2662 = load i32, i32* %arrayidx933.i2880, align 4
  %xor934.i2881 = xor i32 %2660, %2662
  %2663 = load i32, i32* %u.i1943, align 4
  %shr935.i2882 = lshr i32 %2663, 18
  %and936.i2883 = and i32 %shr935.i2882, 63
  %idxprom937.i2884 = zext i32 %and936.i2883 to i64
  %arrayidx938.i2885 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i2884
  %2664 = load i32, i32* %arrayidx938.i2885, align 4
  %xor939.i2886 = xor i32 %xor934.i2881, %2664
  %2665 = load i32, i32* %u.i1943, align 4
  %shr940.i2887 = lshr i32 %2665, 26
  %idxprom942.i2888 = zext i32 %shr940.i2887 to i64
  %arrayidx943.i2889 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i2888
  %2666 = load i32, i32* %arrayidx943.i2889, align 4
  %xor944.i2890 = xor i32 %xor939.i2886, %2666
  %2667 = load i32, i32* %t.i1942, align 4
  %shr945.i2891 = lshr i32 %2667, 2
  %and946.i2892 = and i32 %shr945.i2891, 63
  %idxprom947.i2893 = zext i32 %and946.i2892 to i64
  %arrayidx948.i2894 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i2893
  %2668 = load i32, i32* %arrayidx948.i2894, align 4
  %xor949.i2895 = xor i32 %xor944.i2890, %2668
  %2669 = load i32, i32* %t.i1942, align 4
  %shr950.i2896 = lshr i32 %2669, 10
  %and951.i2897 = and i32 %shr950.i2896, 63
  %idxprom952.i2898 = zext i32 %and951.i2897 to i64
  %arrayidx953.i2899 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i2898
  %2670 = load i32, i32* %arrayidx953.i2899, align 4
  %xor954.i2900 = xor i32 %xor949.i2895, %2670
  %2671 = load i32, i32* %t.i1942, align 4
  %shr955.i2901 = lshr i32 %2671, 18
  %and956.i2902 = and i32 %shr955.i2901, 63
  %idxprom957.i2903 = zext i32 %and956.i2902 to i64
  %arrayidx958.i2904 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i2903
  %2672 = load i32, i32* %arrayidx958.i2904, align 4
  %xor959.i2905 = xor i32 %xor954.i2900, %2672
  %2673 = load i32, i32* %t.i1942, align 4
  %shr960.i2906 = lshr i32 %2673, 26
  %idxprom962.i2907 = zext i32 %shr960.i2906 to i64
  %arrayidx963.i2908 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i2907
  %2674 = load i32, i32* %arrayidx963.i2908, align 4
  %xor964.i2909 = xor i32 %xor959.i2905, %2674
  %2675 = load i32, i32* %r.i1941, align 4
  %xor965.i2910 = xor i32 %2675, %xor964.i2909
  store i32 %xor965.i2910, i32* %r.i1941, align 4
  %2676 = load i32, i32* %r.i1941, align 4
  %2677 = load i32*, i32** %s.i1944, align 8
  %arrayidx966.i2911 = getelementptr inbounds i32, i32* %2677, i64 22
  %2678 = load i32, i32* %arrayidx966.i2911, align 4
  %xor967.i2912 = xor i32 %2676, %2678
  store i32 %xor967.i2912, i32* %u.i1943, align 4
  %2679 = load i32, i32* %r.i1941, align 4
  %2680 = load i32*, i32** %s.i1944, align 8
  %arrayidx968.i2913 = getelementptr inbounds i32, i32* %2680, i64 23
  %2681 = load i32, i32* %arrayidx968.i2913, align 4
  %xor969.i2914 = xor i32 %2679, %2681
  store i32 %xor969.i2914, i32* %t.i1942, align 4
  %2682 = load i32, i32* %t.i1942, align 4
  %2683 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2682) #5, !srcloc !24
  store i32 %2683, i32* %ret970.i1990, align 4
  %2684 = load i32, i32* %ret970.i1990, align 4
  store i32 %2684, i32* %tmp971.i1991, align 4
  %2685 = load i32, i32* %tmp971.i1991, align 4
  store i32 %2685, i32* %t.i1942, align 4
  %2686 = load i32, i32* %u.i1943, align 4
  %shr972.i2915 = lshr i32 %2686, 2
  %and973.i2916 = and i32 %shr972.i2915, 63
  %idxprom974.i2917 = zext i32 %and973.i2916 to i64
  %arrayidx975.i2918 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i2917
  %2687 = load i32, i32* %arrayidx975.i2918, align 4
  %2688 = load i32, i32* %u.i1943, align 4
  %shr976.i2919 = lshr i32 %2688, 10
  %and977.i2920 = and i32 %shr976.i2919, 63
  %idxprom978.i2921 = zext i32 %and977.i2920 to i64
  %arrayidx979.i2922 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i2921
  %2689 = load i32, i32* %arrayidx979.i2922, align 4
  %xor980.i2923 = xor i32 %2687, %2689
  %2690 = load i32, i32* %u.i1943, align 4
  %shr981.i2924 = lshr i32 %2690, 18
  %and982.i2925 = and i32 %shr981.i2924, 63
  %idxprom983.i2926 = zext i32 %and982.i2925 to i64
  %arrayidx984.i2927 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i2926
  %2691 = load i32, i32* %arrayidx984.i2927, align 4
  %xor985.i2928 = xor i32 %xor980.i2923, %2691
  %2692 = load i32, i32* %u.i1943, align 4
  %shr986.i2929 = lshr i32 %2692, 26
  %idxprom988.i2930 = zext i32 %shr986.i2929 to i64
  %arrayidx989.i2931 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i2930
  %2693 = load i32, i32* %arrayidx989.i2931, align 4
  %xor990.i2932 = xor i32 %xor985.i2928, %2693
  %2694 = load i32, i32* %t.i1942, align 4
  %shr991.i2933 = lshr i32 %2694, 2
  %and992.i2934 = and i32 %shr991.i2933, 63
  %idxprom993.i2935 = zext i32 %and992.i2934 to i64
  %arrayidx994.i2936 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i2935
  %2695 = load i32, i32* %arrayidx994.i2936, align 4
  %xor995.i2937 = xor i32 %xor990.i2932, %2695
  %2696 = load i32, i32* %t.i1942, align 4
  %shr996.i2938 = lshr i32 %2696, 10
  %and997.i2939 = and i32 %shr996.i2938, 63
  %idxprom998.i2940 = zext i32 %and997.i2939 to i64
  %arrayidx999.i2941 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i2940
  %2697 = load i32, i32* %arrayidx999.i2941, align 4
  %xor1000.i2942 = xor i32 %xor995.i2937, %2697
  %2698 = load i32, i32* %t.i1942, align 4
  %shr1001.i2943 = lshr i32 %2698, 18
  %and1002.i2944 = and i32 %shr1001.i2943, 63
  %idxprom1003.i2945 = zext i32 %and1002.i2944 to i64
  %arrayidx1004.i2946 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i2945
  %2699 = load i32, i32* %arrayidx1004.i2946, align 4
  %xor1005.i2947 = xor i32 %xor1000.i2942, %2699
  %2700 = load i32, i32* %t.i1942, align 4
  %shr1006.i2948 = lshr i32 %2700, 26
  %idxprom1008.i2949 = zext i32 %shr1006.i2948 to i64
  %arrayidx1009.i2950 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i2949
  %2701 = load i32, i32* %arrayidx1009.i2950, align 4
  %xor1010.i2951 = xor i32 %xor1005.i2947, %2701
  %2702 = load i32, i32* %l.i1940, align 4
  %xor1011.i2952 = xor i32 %2702, %xor1010.i2951
  store i32 %xor1011.i2952, i32* %l.i1940, align 4
  %2703 = load i32, i32* %l.i1940, align 4
  %2704 = load i32*, i32** %s.i1944, align 8
  %arrayidx1012.i2953 = getelementptr inbounds i32, i32* %2704, i64 20
  %2705 = load i32, i32* %arrayidx1012.i2953, align 4
  %xor1013.i2954 = xor i32 %2703, %2705
  store i32 %xor1013.i2954, i32* %u.i1943, align 4
  %2706 = load i32, i32* %l.i1940, align 4
  %2707 = load i32*, i32** %s.i1944, align 8
  %arrayidx1014.i2955 = getelementptr inbounds i32, i32* %2707, i64 21
  %2708 = load i32, i32* %arrayidx1014.i2955, align 4
  %xor1015.i2956 = xor i32 %2706, %2708
  store i32 %xor1015.i2956, i32* %t.i1942, align 4
  %2709 = load i32, i32* %t.i1942, align 4
  %2710 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2709) #5, !srcloc !25
  store i32 %2710, i32* %ret1016.i1992, align 4
  %2711 = load i32, i32* %ret1016.i1992, align 4
  store i32 %2711, i32* %tmp1017.i1993, align 4
  %2712 = load i32, i32* %tmp1017.i1993, align 4
  store i32 %2712, i32* %t.i1942, align 4
  %2713 = load i32, i32* %u.i1943, align 4
  %shr1018.i2957 = lshr i32 %2713, 2
  %and1019.i2958 = and i32 %shr1018.i2957, 63
  %idxprom1020.i2959 = zext i32 %and1019.i2958 to i64
  %arrayidx1021.i2960 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i2959
  %2714 = load i32, i32* %arrayidx1021.i2960, align 4
  %2715 = load i32, i32* %u.i1943, align 4
  %shr1022.i2961 = lshr i32 %2715, 10
  %and1023.i2962 = and i32 %shr1022.i2961, 63
  %idxprom1024.i2963 = zext i32 %and1023.i2962 to i64
  %arrayidx1025.i2964 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i2963
  %2716 = load i32, i32* %arrayidx1025.i2964, align 4
  %xor1026.i2965 = xor i32 %2714, %2716
  %2717 = load i32, i32* %u.i1943, align 4
  %shr1027.i2966 = lshr i32 %2717, 18
  %and1028.i2967 = and i32 %shr1027.i2966, 63
  %idxprom1029.i2968 = zext i32 %and1028.i2967 to i64
  %arrayidx1030.i2969 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i2968
  %2718 = load i32, i32* %arrayidx1030.i2969, align 4
  %xor1031.i2970 = xor i32 %xor1026.i2965, %2718
  %2719 = load i32, i32* %u.i1943, align 4
  %shr1032.i2971 = lshr i32 %2719, 26
  %idxprom1034.i2972 = zext i32 %shr1032.i2971 to i64
  %arrayidx1035.i2973 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i2972
  %2720 = load i32, i32* %arrayidx1035.i2973, align 4
  %xor1036.i2974 = xor i32 %xor1031.i2970, %2720
  %2721 = load i32, i32* %t.i1942, align 4
  %shr1037.i2975 = lshr i32 %2721, 2
  %and1038.i2976 = and i32 %shr1037.i2975, 63
  %idxprom1039.i2977 = zext i32 %and1038.i2976 to i64
  %arrayidx1040.i2978 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i2977
  %2722 = load i32, i32* %arrayidx1040.i2978, align 4
  %xor1041.i2979 = xor i32 %xor1036.i2974, %2722
  %2723 = load i32, i32* %t.i1942, align 4
  %shr1042.i2980 = lshr i32 %2723, 10
  %and1043.i2981 = and i32 %shr1042.i2980, 63
  %idxprom1044.i2982 = zext i32 %and1043.i2981 to i64
  %arrayidx1045.i2983 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i2982
  %2724 = load i32, i32* %arrayidx1045.i2983, align 4
  %xor1046.i2984 = xor i32 %xor1041.i2979, %2724
  %2725 = load i32, i32* %t.i1942, align 4
  %shr1047.i2985 = lshr i32 %2725, 18
  %and1048.i2986 = and i32 %shr1047.i2985, 63
  %idxprom1049.i2987 = zext i32 %and1048.i2986 to i64
  %arrayidx1050.i2988 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i2987
  %2726 = load i32, i32* %arrayidx1050.i2988, align 4
  %xor1051.i2989 = xor i32 %xor1046.i2984, %2726
  %2727 = load i32, i32* %t.i1942, align 4
  %shr1052.i2990 = lshr i32 %2727, 26
  %idxprom1054.i2991 = zext i32 %shr1052.i2990 to i64
  %arrayidx1055.i2992 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i2991
  %2728 = load i32, i32* %arrayidx1055.i2992, align 4
  %xor1056.i2993 = xor i32 %xor1051.i2989, %2728
  %2729 = load i32, i32* %r.i1941, align 4
  %xor1057.i2994 = xor i32 %2729, %xor1056.i2993
  store i32 %xor1057.i2994, i32* %r.i1941, align 4
  %2730 = load i32, i32* %r.i1941, align 4
  %2731 = load i32*, i32** %s.i1944, align 8
  %arrayidx1058.i2995 = getelementptr inbounds i32, i32* %2731, i64 18
  %2732 = load i32, i32* %arrayidx1058.i2995, align 4
  %xor1059.i2996 = xor i32 %2730, %2732
  store i32 %xor1059.i2996, i32* %u.i1943, align 4
  %2733 = load i32, i32* %r.i1941, align 4
  %2734 = load i32*, i32** %s.i1944, align 8
  %arrayidx1060.i2997 = getelementptr inbounds i32, i32* %2734, i64 19
  %2735 = load i32, i32* %arrayidx1060.i2997, align 4
  %xor1061.i2998 = xor i32 %2733, %2735
  store i32 %xor1061.i2998, i32* %t.i1942, align 4
  %2736 = load i32, i32* %t.i1942, align 4
  %2737 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2736) #5, !srcloc !26
  store i32 %2737, i32* %ret1062.i1994, align 4
  %2738 = load i32, i32* %ret1062.i1994, align 4
  store i32 %2738, i32* %tmp1063.i1995, align 4
  %2739 = load i32, i32* %tmp1063.i1995, align 4
  store i32 %2739, i32* %t.i1942, align 4
  %2740 = load i32, i32* %u.i1943, align 4
  %shr1064.i2999 = lshr i32 %2740, 2
  %and1065.i3000 = and i32 %shr1064.i2999, 63
  %idxprom1066.i3001 = zext i32 %and1065.i3000 to i64
  %arrayidx1067.i3002 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i3001
  %2741 = load i32, i32* %arrayidx1067.i3002, align 4
  %2742 = load i32, i32* %u.i1943, align 4
  %shr1068.i3003 = lshr i32 %2742, 10
  %and1069.i3004 = and i32 %shr1068.i3003, 63
  %idxprom1070.i3005 = zext i32 %and1069.i3004 to i64
  %arrayidx1071.i3006 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i3005
  %2743 = load i32, i32* %arrayidx1071.i3006, align 4
  %xor1072.i3007 = xor i32 %2741, %2743
  %2744 = load i32, i32* %u.i1943, align 4
  %shr1073.i3008 = lshr i32 %2744, 18
  %and1074.i3009 = and i32 %shr1073.i3008, 63
  %idxprom1075.i3010 = zext i32 %and1074.i3009 to i64
  %arrayidx1076.i3011 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i3010
  %2745 = load i32, i32* %arrayidx1076.i3011, align 4
  %xor1077.i3012 = xor i32 %xor1072.i3007, %2745
  %2746 = load i32, i32* %u.i1943, align 4
  %shr1078.i3013 = lshr i32 %2746, 26
  %idxprom1080.i3014 = zext i32 %shr1078.i3013 to i64
  %arrayidx1081.i3015 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i3014
  %2747 = load i32, i32* %arrayidx1081.i3015, align 4
  %xor1082.i3016 = xor i32 %xor1077.i3012, %2747
  %2748 = load i32, i32* %t.i1942, align 4
  %shr1083.i3017 = lshr i32 %2748, 2
  %and1084.i3018 = and i32 %shr1083.i3017, 63
  %idxprom1085.i3019 = zext i32 %and1084.i3018 to i64
  %arrayidx1086.i3020 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i3019
  %2749 = load i32, i32* %arrayidx1086.i3020, align 4
  %xor1087.i3021 = xor i32 %xor1082.i3016, %2749
  %2750 = load i32, i32* %t.i1942, align 4
  %shr1088.i3022 = lshr i32 %2750, 10
  %and1089.i3023 = and i32 %shr1088.i3022, 63
  %idxprom1090.i3024 = zext i32 %and1089.i3023 to i64
  %arrayidx1091.i3025 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i3024
  %2751 = load i32, i32* %arrayidx1091.i3025, align 4
  %xor1092.i3026 = xor i32 %xor1087.i3021, %2751
  %2752 = load i32, i32* %t.i1942, align 4
  %shr1093.i3027 = lshr i32 %2752, 18
  %and1094.i3028 = and i32 %shr1093.i3027, 63
  %idxprom1095.i3029 = zext i32 %and1094.i3028 to i64
  %arrayidx1096.i3030 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i3029
  %2753 = load i32, i32* %arrayidx1096.i3030, align 4
  %xor1097.i3031 = xor i32 %xor1092.i3026, %2753
  %2754 = load i32, i32* %t.i1942, align 4
  %shr1098.i3032 = lshr i32 %2754, 26
  %idxprom1100.i3033 = zext i32 %shr1098.i3032 to i64
  %arrayidx1101.i3034 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i3033
  %2755 = load i32, i32* %arrayidx1101.i3034, align 4
  %xor1102.i3035 = xor i32 %xor1097.i3031, %2755
  %2756 = load i32, i32* %l.i1940, align 4
  %xor1103.i3036 = xor i32 %2756, %xor1102.i3035
  store i32 %xor1103.i3036, i32* %l.i1940, align 4
  %2757 = load i32, i32* %l.i1940, align 4
  %2758 = load i32*, i32** %s.i1944, align 8
  %arrayidx1104.i3037 = getelementptr inbounds i32, i32* %2758, i64 16
  %2759 = load i32, i32* %arrayidx1104.i3037, align 4
  %xor1105.i3038 = xor i32 %2757, %2759
  store i32 %xor1105.i3038, i32* %u.i1943, align 4
  %2760 = load i32, i32* %l.i1940, align 4
  %2761 = load i32*, i32** %s.i1944, align 8
  %arrayidx1106.i3039 = getelementptr inbounds i32, i32* %2761, i64 17
  %2762 = load i32, i32* %arrayidx1106.i3039, align 4
  %xor1107.i3040 = xor i32 %2760, %2762
  store i32 %xor1107.i3040, i32* %t.i1942, align 4
  %2763 = load i32, i32* %t.i1942, align 4
  %2764 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2763) #5, !srcloc !27
  store i32 %2764, i32* %ret1108.i1996, align 4
  %2765 = load i32, i32* %ret1108.i1996, align 4
  store i32 %2765, i32* %tmp1109.i1997, align 4
  %2766 = load i32, i32* %tmp1109.i1997, align 4
  store i32 %2766, i32* %t.i1942, align 4
  %2767 = load i32, i32* %u.i1943, align 4
  %shr1110.i3041 = lshr i32 %2767, 2
  %and1111.i3042 = and i32 %shr1110.i3041, 63
  %idxprom1112.i3043 = zext i32 %and1111.i3042 to i64
  %arrayidx1113.i3044 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i3043
  %2768 = load i32, i32* %arrayidx1113.i3044, align 4
  %2769 = load i32, i32* %u.i1943, align 4
  %shr1114.i3045 = lshr i32 %2769, 10
  %and1115.i3046 = and i32 %shr1114.i3045, 63
  %idxprom1116.i3047 = zext i32 %and1115.i3046 to i64
  %arrayidx1117.i3048 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i3047
  %2770 = load i32, i32* %arrayidx1117.i3048, align 4
  %xor1118.i3049 = xor i32 %2768, %2770
  %2771 = load i32, i32* %u.i1943, align 4
  %shr1119.i3050 = lshr i32 %2771, 18
  %and1120.i3051 = and i32 %shr1119.i3050, 63
  %idxprom1121.i3052 = zext i32 %and1120.i3051 to i64
  %arrayidx1122.i3053 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i3052
  %2772 = load i32, i32* %arrayidx1122.i3053, align 4
  %xor1123.i3054 = xor i32 %xor1118.i3049, %2772
  %2773 = load i32, i32* %u.i1943, align 4
  %shr1124.i3055 = lshr i32 %2773, 26
  %idxprom1126.i3056 = zext i32 %shr1124.i3055 to i64
  %arrayidx1127.i3057 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i3056
  %2774 = load i32, i32* %arrayidx1127.i3057, align 4
  %xor1128.i3058 = xor i32 %xor1123.i3054, %2774
  %2775 = load i32, i32* %t.i1942, align 4
  %shr1129.i3059 = lshr i32 %2775, 2
  %and1130.i3060 = and i32 %shr1129.i3059, 63
  %idxprom1131.i3061 = zext i32 %and1130.i3060 to i64
  %arrayidx1132.i3062 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i3061
  %2776 = load i32, i32* %arrayidx1132.i3062, align 4
  %xor1133.i3063 = xor i32 %xor1128.i3058, %2776
  %2777 = load i32, i32* %t.i1942, align 4
  %shr1134.i3064 = lshr i32 %2777, 10
  %and1135.i3065 = and i32 %shr1134.i3064, 63
  %idxprom1136.i3066 = zext i32 %and1135.i3065 to i64
  %arrayidx1137.i3067 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i3066
  %2778 = load i32, i32* %arrayidx1137.i3067, align 4
  %xor1138.i3068 = xor i32 %xor1133.i3063, %2778
  %2779 = load i32, i32* %t.i1942, align 4
  %shr1139.i3069 = lshr i32 %2779, 18
  %and1140.i3070 = and i32 %shr1139.i3069, 63
  %idxprom1141.i3071 = zext i32 %and1140.i3070 to i64
  %arrayidx1142.i3072 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i3071
  %2780 = load i32, i32* %arrayidx1142.i3072, align 4
  %xor1143.i3073 = xor i32 %xor1138.i3068, %2780
  %2781 = load i32, i32* %t.i1942, align 4
  %shr1144.i3074 = lshr i32 %2781, 26
  %idxprom1146.i3075 = zext i32 %shr1144.i3074 to i64
  %arrayidx1147.i3076 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i3075
  %2782 = load i32, i32* %arrayidx1147.i3076, align 4
  %xor1148.i3077 = xor i32 %xor1143.i3073, %2782
  %2783 = load i32, i32* %r.i1941, align 4
  %xor1149.i3078 = xor i32 %2783, %xor1148.i3077
  store i32 %xor1149.i3078, i32* %r.i1941, align 4
  %2784 = load i32, i32* %r.i1941, align 4
  %2785 = load i32*, i32** %s.i1944, align 8
  %arrayidx1150.i3079 = getelementptr inbounds i32, i32* %2785, i64 14
  %2786 = load i32, i32* %arrayidx1150.i3079, align 4
  %xor1151.i3080 = xor i32 %2784, %2786
  store i32 %xor1151.i3080, i32* %u.i1943, align 4
  %2787 = load i32, i32* %r.i1941, align 4
  %2788 = load i32*, i32** %s.i1944, align 8
  %arrayidx1152.i3081 = getelementptr inbounds i32, i32* %2788, i64 15
  %2789 = load i32, i32* %arrayidx1152.i3081, align 4
  %xor1153.i3082 = xor i32 %2787, %2789
  store i32 %xor1153.i3082, i32* %t.i1942, align 4
  %2790 = load i32, i32* %t.i1942, align 4
  %2791 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2790) #5, !srcloc !28
  store i32 %2791, i32* %ret1154.i1998, align 4
  %2792 = load i32, i32* %ret1154.i1998, align 4
  store i32 %2792, i32* %tmp1155.i1999, align 4
  %2793 = load i32, i32* %tmp1155.i1999, align 4
  store i32 %2793, i32* %t.i1942, align 4
  %2794 = load i32, i32* %u.i1943, align 4
  %shr1156.i3083 = lshr i32 %2794, 2
  %and1157.i3084 = and i32 %shr1156.i3083, 63
  %idxprom1158.i3085 = zext i32 %and1157.i3084 to i64
  %arrayidx1159.i3086 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i3085
  %2795 = load i32, i32* %arrayidx1159.i3086, align 4
  %2796 = load i32, i32* %u.i1943, align 4
  %shr1160.i3087 = lshr i32 %2796, 10
  %and1161.i3088 = and i32 %shr1160.i3087, 63
  %idxprom1162.i3089 = zext i32 %and1161.i3088 to i64
  %arrayidx1163.i3090 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i3089
  %2797 = load i32, i32* %arrayidx1163.i3090, align 4
  %xor1164.i3091 = xor i32 %2795, %2797
  %2798 = load i32, i32* %u.i1943, align 4
  %shr1165.i3092 = lshr i32 %2798, 18
  %and1166.i3093 = and i32 %shr1165.i3092, 63
  %idxprom1167.i3094 = zext i32 %and1166.i3093 to i64
  %arrayidx1168.i3095 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i3094
  %2799 = load i32, i32* %arrayidx1168.i3095, align 4
  %xor1169.i3096 = xor i32 %xor1164.i3091, %2799
  %2800 = load i32, i32* %u.i1943, align 4
  %shr1170.i3097 = lshr i32 %2800, 26
  %idxprom1172.i3098 = zext i32 %shr1170.i3097 to i64
  %arrayidx1173.i3099 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i3098
  %2801 = load i32, i32* %arrayidx1173.i3099, align 4
  %xor1174.i3100 = xor i32 %xor1169.i3096, %2801
  %2802 = load i32, i32* %t.i1942, align 4
  %shr1175.i3101 = lshr i32 %2802, 2
  %and1176.i3102 = and i32 %shr1175.i3101, 63
  %idxprom1177.i3103 = zext i32 %and1176.i3102 to i64
  %arrayidx1178.i3104 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i3103
  %2803 = load i32, i32* %arrayidx1178.i3104, align 4
  %xor1179.i3105 = xor i32 %xor1174.i3100, %2803
  %2804 = load i32, i32* %t.i1942, align 4
  %shr1180.i3106 = lshr i32 %2804, 10
  %and1181.i3107 = and i32 %shr1180.i3106, 63
  %idxprom1182.i3108 = zext i32 %and1181.i3107 to i64
  %arrayidx1183.i3109 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i3108
  %2805 = load i32, i32* %arrayidx1183.i3109, align 4
  %xor1184.i3110 = xor i32 %xor1179.i3105, %2805
  %2806 = load i32, i32* %t.i1942, align 4
  %shr1185.i3111 = lshr i32 %2806, 18
  %and1186.i3112 = and i32 %shr1185.i3111, 63
  %idxprom1187.i3113 = zext i32 %and1186.i3112 to i64
  %arrayidx1188.i3114 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i3113
  %2807 = load i32, i32* %arrayidx1188.i3114, align 4
  %xor1189.i3115 = xor i32 %xor1184.i3110, %2807
  %2808 = load i32, i32* %t.i1942, align 4
  %shr1190.i3116 = lshr i32 %2808, 26
  %idxprom1192.i3117 = zext i32 %shr1190.i3116 to i64
  %arrayidx1193.i3118 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i3117
  %2809 = load i32, i32* %arrayidx1193.i3118, align 4
  %xor1194.i3119 = xor i32 %xor1189.i3115, %2809
  %2810 = load i32, i32* %l.i1940, align 4
  %xor1195.i3120 = xor i32 %2810, %xor1194.i3119
  store i32 %xor1195.i3120, i32* %l.i1940, align 4
  %2811 = load i32, i32* %l.i1940, align 4
  %2812 = load i32*, i32** %s.i1944, align 8
  %arrayidx1196.i3121 = getelementptr inbounds i32, i32* %2812, i64 12
  %2813 = load i32, i32* %arrayidx1196.i3121, align 4
  %xor1197.i3122 = xor i32 %2811, %2813
  store i32 %xor1197.i3122, i32* %u.i1943, align 4
  %2814 = load i32, i32* %l.i1940, align 4
  %2815 = load i32*, i32** %s.i1944, align 8
  %arrayidx1198.i3123 = getelementptr inbounds i32, i32* %2815, i64 13
  %2816 = load i32, i32* %arrayidx1198.i3123, align 4
  %xor1199.i3124 = xor i32 %2814, %2816
  store i32 %xor1199.i3124, i32* %t.i1942, align 4
  %2817 = load i32, i32* %t.i1942, align 4
  %2818 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2817) #5, !srcloc !29
  store i32 %2818, i32* %ret1200.i2000, align 4
  %2819 = load i32, i32* %ret1200.i2000, align 4
  store i32 %2819, i32* %tmp1201.i2001, align 4
  %2820 = load i32, i32* %tmp1201.i2001, align 4
  store i32 %2820, i32* %t.i1942, align 4
  %2821 = load i32, i32* %u.i1943, align 4
  %shr1202.i3125 = lshr i32 %2821, 2
  %and1203.i3126 = and i32 %shr1202.i3125, 63
  %idxprom1204.i3127 = zext i32 %and1203.i3126 to i64
  %arrayidx1205.i3128 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i3127
  %2822 = load i32, i32* %arrayidx1205.i3128, align 4
  %2823 = load i32, i32* %u.i1943, align 4
  %shr1206.i3129 = lshr i32 %2823, 10
  %and1207.i3130 = and i32 %shr1206.i3129, 63
  %idxprom1208.i3131 = zext i32 %and1207.i3130 to i64
  %arrayidx1209.i3132 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i3131
  %2824 = load i32, i32* %arrayidx1209.i3132, align 4
  %xor1210.i3133 = xor i32 %2822, %2824
  %2825 = load i32, i32* %u.i1943, align 4
  %shr1211.i3134 = lshr i32 %2825, 18
  %and1212.i3135 = and i32 %shr1211.i3134, 63
  %idxprom1213.i3136 = zext i32 %and1212.i3135 to i64
  %arrayidx1214.i3137 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i3136
  %2826 = load i32, i32* %arrayidx1214.i3137, align 4
  %xor1215.i3138 = xor i32 %xor1210.i3133, %2826
  %2827 = load i32, i32* %u.i1943, align 4
  %shr1216.i3139 = lshr i32 %2827, 26
  %idxprom1218.i3140 = zext i32 %shr1216.i3139 to i64
  %arrayidx1219.i3141 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i3140
  %2828 = load i32, i32* %arrayidx1219.i3141, align 4
  %xor1220.i3142 = xor i32 %xor1215.i3138, %2828
  %2829 = load i32, i32* %t.i1942, align 4
  %shr1221.i3143 = lshr i32 %2829, 2
  %and1222.i3144 = and i32 %shr1221.i3143, 63
  %idxprom1223.i3145 = zext i32 %and1222.i3144 to i64
  %arrayidx1224.i3146 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i3145
  %2830 = load i32, i32* %arrayidx1224.i3146, align 4
  %xor1225.i3147 = xor i32 %xor1220.i3142, %2830
  %2831 = load i32, i32* %t.i1942, align 4
  %shr1226.i3148 = lshr i32 %2831, 10
  %and1227.i3149 = and i32 %shr1226.i3148, 63
  %idxprom1228.i3150 = zext i32 %and1227.i3149 to i64
  %arrayidx1229.i3151 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i3150
  %2832 = load i32, i32* %arrayidx1229.i3151, align 4
  %xor1230.i3152 = xor i32 %xor1225.i3147, %2832
  %2833 = load i32, i32* %t.i1942, align 4
  %shr1231.i3153 = lshr i32 %2833, 18
  %and1232.i3154 = and i32 %shr1231.i3153, 63
  %idxprom1233.i3155 = zext i32 %and1232.i3154 to i64
  %arrayidx1234.i3156 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i3155
  %2834 = load i32, i32* %arrayidx1234.i3156, align 4
  %xor1235.i3157 = xor i32 %xor1230.i3152, %2834
  %2835 = load i32, i32* %t.i1942, align 4
  %shr1236.i3158 = lshr i32 %2835, 26
  %idxprom1238.i3159 = zext i32 %shr1236.i3158 to i64
  %arrayidx1239.i3160 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i3159
  %2836 = load i32, i32* %arrayidx1239.i3160, align 4
  %xor1240.i3161 = xor i32 %xor1235.i3157, %2836
  %2837 = load i32, i32* %r.i1941, align 4
  %xor1241.i3162 = xor i32 %2837, %xor1240.i3161
  store i32 %xor1241.i3162, i32* %r.i1941, align 4
  %2838 = load i32, i32* %r.i1941, align 4
  %2839 = load i32*, i32** %s.i1944, align 8
  %arrayidx1242.i3163 = getelementptr inbounds i32, i32* %2839, i64 10
  %2840 = load i32, i32* %arrayidx1242.i3163, align 4
  %xor1243.i3164 = xor i32 %2838, %2840
  store i32 %xor1243.i3164, i32* %u.i1943, align 4
  %2841 = load i32, i32* %r.i1941, align 4
  %2842 = load i32*, i32** %s.i1944, align 8
  %arrayidx1244.i3165 = getelementptr inbounds i32, i32* %2842, i64 11
  %2843 = load i32, i32* %arrayidx1244.i3165, align 4
  %xor1245.i3166 = xor i32 %2841, %2843
  store i32 %xor1245.i3166, i32* %t.i1942, align 4
  %2844 = load i32, i32* %t.i1942, align 4
  %2845 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2844) #5, !srcloc !30
  store i32 %2845, i32* %ret1246.i2002, align 4
  %2846 = load i32, i32* %ret1246.i2002, align 4
  store i32 %2846, i32* %tmp1247.i2003, align 4
  %2847 = load i32, i32* %tmp1247.i2003, align 4
  store i32 %2847, i32* %t.i1942, align 4
  %2848 = load i32, i32* %u.i1943, align 4
  %shr1248.i3167 = lshr i32 %2848, 2
  %and1249.i3168 = and i32 %shr1248.i3167, 63
  %idxprom1250.i3169 = zext i32 %and1249.i3168 to i64
  %arrayidx1251.i3170 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i3169
  %2849 = load i32, i32* %arrayidx1251.i3170, align 4
  %2850 = load i32, i32* %u.i1943, align 4
  %shr1252.i3171 = lshr i32 %2850, 10
  %and1253.i3172 = and i32 %shr1252.i3171, 63
  %idxprom1254.i3173 = zext i32 %and1253.i3172 to i64
  %arrayidx1255.i3174 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i3173
  %2851 = load i32, i32* %arrayidx1255.i3174, align 4
  %xor1256.i3175 = xor i32 %2849, %2851
  %2852 = load i32, i32* %u.i1943, align 4
  %shr1257.i3176 = lshr i32 %2852, 18
  %and1258.i3177 = and i32 %shr1257.i3176, 63
  %idxprom1259.i3178 = zext i32 %and1258.i3177 to i64
  %arrayidx1260.i3179 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i3178
  %2853 = load i32, i32* %arrayidx1260.i3179, align 4
  %xor1261.i3180 = xor i32 %xor1256.i3175, %2853
  %2854 = load i32, i32* %u.i1943, align 4
  %shr1262.i3181 = lshr i32 %2854, 26
  %idxprom1264.i3182 = zext i32 %shr1262.i3181 to i64
  %arrayidx1265.i3183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i3182
  %2855 = load i32, i32* %arrayidx1265.i3183, align 4
  %xor1266.i3184 = xor i32 %xor1261.i3180, %2855
  %2856 = load i32, i32* %t.i1942, align 4
  %shr1267.i3185 = lshr i32 %2856, 2
  %and1268.i3186 = and i32 %shr1267.i3185, 63
  %idxprom1269.i3187 = zext i32 %and1268.i3186 to i64
  %arrayidx1270.i3188 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i3187
  %2857 = load i32, i32* %arrayidx1270.i3188, align 4
  %xor1271.i3189 = xor i32 %xor1266.i3184, %2857
  %2858 = load i32, i32* %t.i1942, align 4
  %shr1272.i3190 = lshr i32 %2858, 10
  %and1273.i3191 = and i32 %shr1272.i3190, 63
  %idxprom1274.i3192 = zext i32 %and1273.i3191 to i64
  %arrayidx1275.i3193 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i3192
  %2859 = load i32, i32* %arrayidx1275.i3193, align 4
  %xor1276.i3194 = xor i32 %xor1271.i3189, %2859
  %2860 = load i32, i32* %t.i1942, align 4
  %shr1277.i3195 = lshr i32 %2860, 18
  %and1278.i3196 = and i32 %shr1277.i3195, 63
  %idxprom1279.i3197 = zext i32 %and1278.i3196 to i64
  %arrayidx1280.i3198 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i3197
  %2861 = load i32, i32* %arrayidx1280.i3198, align 4
  %xor1281.i3199 = xor i32 %xor1276.i3194, %2861
  %2862 = load i32, i32* %t.i1942, align 4
  %shr1282.i3200 = lshr i32 %2862, 26
  %idxprom1284.i3201 = zext i32 %shr1282.i3200 to i64
  %arrayidx1285.i3202 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i3201
  %2863 = load i32, i32* %arrayidx1285.i3202, align 4
  %xor1286.i3203 = xor i32 %xor1281.i3199, %2863
  %2864 = load i32, i32* %l.i1940, align 4
  %xor1287.i3204 = xor i32 %2864, %xor1286.i3203
  store i32 %xor1287.i3204, i32* %l.i1940, align 4
  %2865 = load i32, i32* %l.i1940, align 4
  %2866 = load i32*, i32** %s.i1944, align 8
  %arrayidx1288.i3205 = getelementptr inbounds i32, i32* %2866, i64 8
  %2867 = load i32, i32* %arrayidx1288.i3205, align 4
  %xor1289.i3206 = xor i32 %2865, %2867
  store i32 %xor1289.i3206, i32* %u.i1943, align 4
  %2868 = load i32, i32* %l.i1940, align 4
  %2869 = load i32*, i32** %s.i1944, align 8
  %arrayidx1290.i3207 = getelementptr inbounds i32, i32* %2869, i64 9
  %2870 = load i32, i32* %arrayidx1290.i3207, align 4
  %xor1291.i3208 = xor i32 %2868, %2870
  store i32 %xor1291.i3208, i32* %t.i1942, align 4
  %2871 = load i32, i32* %t.i1942, align 4
  %2872 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2871) #5, !srcloc !31
  store i32 %2872, i32* %ret1292.i2004, align 4
  %2873 = load i32, i32* %ret1292.i2004, align 4
  store i32 %2873, i32* %tmp1293.i2005, align 4
  %2874 = load i32, i32* %tmp1293.i2005, align 4
  store i32 %2874, i32* %t.i1942, align 4
  %2875 = load i32, i32* %u.i1943, align 4
  %shr1294.i3209 = lshr i32 %2875, 2
  %and1295.i3210 = and i32 %shr1294.i3209, 63
  %idxprom1296.i3211 = zext i32 %and1295.i3210 to i64
  %arrayidx1297.i3212 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i3211
  %2876 = load i32, i32* %arrayidx1297.i3212, align 4
  %2877 = load i32, i32* %u.i1943, align 4
  %shr1298.i3213 = lshr i32 %2877, 10
  %and1299.i3214 = and i32 %shr1298.i3213, 63
  %idxprom1300.i3215 = zext i32 %and1299.i3214 to i64
  %arrayidx1301.i3216 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i3215
  %2878 = load i32, i32* %arrayidx1301.i3216, align 4
  %xor1302.i3217 = xor i32 %2876, %2878
  %2879 = load i32, i32* %u.i1943, align 4
  %shr1303.i3218 = lshr i32 %2879, 18
  %and1304.i3219 = and i32 %shr1303.i3218, 63
  %idxprom1305.i3220 = zext i32 %and1304.i3219 to i64
  %arrayidx1306.i3221 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i3220
  %2880 = load i32, i32* %arrayidx1306.i3221, align 4
  %xor1307.i3222 = xor i32 %xor1302.i3217, %2880
  %2881 = load i32, i32* %u.i1943, align 4
  %shr1308.i3223 = lshr i32 %2881, 26
  %idxprom1310.i3224 = zext i32 %shr1308.i3223 to i64
  %arrayidx1311.i3225 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i3224
  %2882 = load i32, i32* %arrayidx1311.i3225, align 4
  %xor1312.i3226 = xor i32 %xor1307.i3222, %2882
  %2883 = load i32, i32* %t.i1942, align 4
  %shr1313.i3227 = lshr i32 %2883, 2
  %and1314.i3228 = and i32 %shr1313.i3227, 63
  %idxprom1315.i3229 = zext i32 %and1314.i3228 to i64
  %arrayidx1316.i3230 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i3229
  %2884 = load i32, i32* %arrayidx1316.i3230, align 4
  %xor1317.i3231 = xor i32 %xor1312.i3226, %2884
  %2885 = load i32, i32* %t.i1942, align 4
  %shr1318.i3232 = lshr i32 %2885, 10
  %and1319.i3233 = and i32 %shr1318.i3232, 63
  %idxprom1320.i3234 = zext i32 %and1319.i3233 to i64
  %arrayidx1321.i3235 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i3234
  %2886 = load i32, i32* %arrayidx1321.i3235, align 4
  %xor1322.i3236 = xor i32 %xor1317.i3231, %2886
  %2887 = load i32, i32* %t.i1942, align 4
  %shr1323.i3237 = lshr i32 %2887, 18
  %and1324.i3238 = and i32 %shr1323.i3237, 63
  %idxprom1325.i3239 = zext i32 %and1324.i3238 to i64
  %arrayidx1326.i3240 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i3239
  %2888 = load i32, i32* %arrayidx1326.i3240, align 4
  %xor1327.i3241 = xor i32 %xor1322.i3236, %2888
  %2889 = load i32, i32* %t.i1942, align 4
  %shr1328.i3242 = lshr i32 %2889, 26
  %idxprom1330.i3243 = zext i32 %shr1328.i3242 to i64
  %arrayidx1331.i3244 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i3243
  %2890 = load i32, i32* %arrayidx1331.i3244, align 4
  %xor1332.i3245 = xor i32 %xor1327.i3241, %2890
  %2891 = load i32, i32* %r.i1941, align 4
  %xor1333.i3246 = xor i32 %2891, %xor1332.i3245
  store i32 %xor1333.i3246, i32* %r.i1941, align 4
  %2892 = load i32, i32* %r.i1941, align 4
  %2893 = load i32*, i32** %s.i1944, align 8
  %arrayidx1334.i3247 = getelementptr inbounds i32, i32* %2893, i64 6
  %2894 = load i32, i32* %arrayidx1334.i3247, align 4
  %xor1335.i3248 = xor i32 %2892, %2894
  store i32 %xor1335.i3248, i32* %u.i1943, align 4
  %2895 = load i32, i32* %r.i1941, align 4
  %2896 = load i32*, i32** %s.i1944, align 8
  %arrayidx1336.i3249 = getelementptr inbounds i32, i32* %2896, i64 7
  %2897 = load i32, i32* %arrayidx1336.i3249, align 4
  %xor1337.i3250 = xor i32 %2895, %2897
  store i32 %xor1337.i3250, i32* %t.i1942, align 4
  %2898 = load i32, i32* %t.i1942, align 4
  %2899 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2898) #5, !srcloc !32
  store i32 %2899, i32* %ret1338.i2006, align 4
  %2900 = load i32, i32* %ret1338.i2006, align 4
  store i32 %2900, i32* %tmp1339.i2007, align 4
  %2901 = load i32, i32* %tmp1339.i2007, align 4
  store i32 %2901, i32* %t.i1942, align 4
  %2902 = load i32, i32* %u.i1943, align 4
  %shr1340.i3251 = lshr i32 %2902, 2
  %and1341.i3252 = and i32 %shr1340.i3251, 63
  %idxprom1342.i3253 = zext i32 %and1341.i3252 to i64
  %arrayidx1343.i3254 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i3253
  %2903 = load i32, i32* %arrayidx1343.i3254, align 4
  %2904 = load i32, i32* %u.i1943, align 4
  %shr1344.i3255 = lshr i32 %2904, 10
  %and1345.i3256 = and i32 %shr1344.i3255, 63
  %idxprom1346.i3257 = zext i32 %and1345.i3256 to i64
  %arrayidx1347.i3258 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i3257
  %2905 = load i32, i32* %arrayidx1347.i3258, align 4
  %xor1348.i3259 = xor i32 %2903, %2905
  %2906 = load i32, i32* %u.i1943, align 4
  %shr1349.i3260 = lshr i32 %2906, 18
  %and1350.i3261 = and i32 %shr1349.i3260, 63
  %idxprom1351.i3262 = zext i32 %and1350.i3261 to i64
  %arrayidx1352.i3263 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i3262
  %2907 = load i32, i32* %arrayidx1352.i3263, align 4
  %xor1353.i3264 = xor i32 %xor1348.i3259, %2907
  %2908 = load i32, i32* %u.i1943, align 4
  %shr1354.i3265 = lshr i32 %2908, 26
  %idxprom1356.i3266 = zext i32 %shr1354.i3265 to i64
  %arrayidx1357.i3267 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i3266
  %2909 = load i32, i32* %arrayidx1357.i3267, align 4
  %xor1358.i3268 = xor i32 %xor1353.i3264, %2909
  %2910 = load i32, i32* %t.i1942, align 4
  %shr1359.i3269 = lshr i32 %2910, 2
  %and1360.i3270 = and i32 %shr1359.i3269, 63
  %idxprom1361.i3271 = zext i32 %and1360.i3270 to i64
  %arrayidx1362.i3272 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i3271
  %2911 = load i32, i32* %arrayidx1362.i3272, align 4
  %xor1363.i3273 = xor i32 %xor1358.i3268, %2911
  %2912 = load i32, i32* %t.i1942, align 4
  %shr1364.i3274 = lshr i32 %2912, 10
  %and1365.i3275 = and i32 %shr1364.i3274, 63
  %idxprom1366.i3276 = zext i32 %and1365.i3275 to i64
  %arrayidx1367.i3277 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i3276
  %2913 = load i32, i32* %arrayidx1367.i3277, align 4
  %xor1368.i3278 = xor i32 %xor1363.i3273, %2913
  %2914 = load i32, i32* %t.i1942, align 4
  %shr1369.i3279 = lshr i32 %2914, 18
  %and1370.i3280 = and i32 %shr1369.i3279, 63
  %idxprom1371.i3281 = zext i32 %and1370.i3280 to i64
  %arrayidx1372.i3282 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i3281
  %2915 = load i32, i32* %arrayidx1372.i3282, align 4
  %xor1373.i3283 = xor i32 %xor1368.i3278, %2915
  %2916 = load i32, i32* %t.i1942, align 4
  %shr1374.i3284 = lshr i32 %2916, 26
  %idxprom1376.i3285 = zext i32 %shr1374.i3284 to i64
  %arrayidx1377.i3286 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i3285
  %2917 = load i32, i32* %arrayidx1377.i3286, align 4
  %xor1378.i3287 = xor i32 %xor1373.i3283, %2917
  %2918 = load i32, i32* %l.i1940, align 4
  %xor1379.i3288 = xor i32 %2918, %xor1378.i3287
  store i32 %xor1379.i3288, i32* %l.i1940, align 4
  %2919 = load i32, i32* %l.i1940, align 4
  %2920 = load i32*, i32** %s.i1944, align 8
  %arrayidx1380.i3289 = getelementptr inbounds i32, i32* %2920, i64 4
  %2921 = load i32, i32* %arrayidx1380.i3289, align 4
  %xor1381.i3290 = xor i32 %2919, %2921
  store i32 %xor1381.i3290, i32* %u.i1943, align 4
  %2922 = load i32, i32* %l.i1940, align 4
  %2923 = load i32*, i32** %s.i1944, align 8
  %arrayidx1382.i3291 = getelementptr inbounds i32, i32* %2923, i64 5
  %2924 = load i32, i32* %arrayidx1382.i3291, align 4
  %xor1383.i3292 = xor i32 %2922, %2924
  store i32 %xor1383.i3292, i32* %t.i1942, align 4
  %2925 = load i32, i32* %t.i1942, align 4
  %2926 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2925) #5, !srcloc !33
  store i32 %2926, i32* %ret1384.i2008, align 4
  %2927 = load i32, i32* %ret1384.i2008, align 4
  store i32 %2927, i32* %tmp1385.i2009, align 4
  %2928 = load i32, i32* %tmp1385.i2009, align 4
  store i32 %2928, i32* %t.i1942, align 4
  %2929 = load i32, i32* %u.i1943, align 4
  %shr1386.i3293 = lshr i32 %2929, 2
  %and1387.i3294 = and i32 %shr1386.i3293, 63
  %idxprom1388.i3295 = zext i32 %and1387.i3294 to i64
  %arrayidx1389.i3296 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i3295
  %2930 = load i32, i32* %arrayidx1389.i3296, align 4
  %2931 = load i32, i32* %u.i1943, align 4
  %shr1390.i3297 = lshr i32 %2931, 10
  %and1391.i3298 = and i32 %shr1390.i3297, 63
  %idxprom1392.i3299 = zext i32 %and1391.i3298 to i64
  %arrayidx1393.i3300 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i3299
  %2932 = load i32, i32* %arrayidx1393.i3300, align 4
  %xor1394.i3301 = xor i32 %2930, %2932
  %2933 = load i32, i32* %u.i1943, align 4
  %shr1395.i3302 = lshr i32 %2933, 18
  %and1396.i3303 = and i32 %shr1395.i3302, 63
  %idxprom1397.i3304 = zext i32 %and1396.i3303 to i64
  %arrayidx1398.i3305 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i3304
  %2934 = load i32, i32* %arrayidx1398.i3305, align 4
  %xor1399.i3306 = xor i32 %xor1394.i3301, %2934
  %2935 = load i32, i32* %u.i1943, align 4
  %shr1400.i3307 = lshr i32 %2935, 26
  %idxprom1402.i3308 = zext i32 %shr1400.i3307 to i64
  %arrayidx1403.i3309 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i3308
  %2936 = load i32, i32* %arrayidx1403.i3309, align 4
  %xor1404.i3310 = xor i32 %xor1399.i3306, %2936
  %2937 = load i32, i32* %t.i1942, align 4
  %shr1405.i3311 = lshr i32 %2937, 2
  %and1406.i3312 = and i32 %shr1405.i3311, 63
  %idxprom1407.i3313 = zext i32 %and1406.i3312 to i64
  %arrayidx1408.i3314 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i3313
  %2938 = load i32, i32* %arrayidx1408.i3314, align 4
  %xor1409.i3315 = xor i32 %xor1404.i3310, %2938
  %2939 = load i32, i32* %t.i1942, align 4
  %shr1410.i3316 = lshr i32 %2939, 10
  %and1411.i3317 = and i32 %shr1410.i3316, 63
  %idxprom1412.i3318 = zext i32 %and1411.i3317 to i64
  %arrayidx1413.i3319 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i3318
  %2940 = load i32, i32* %arrayidx1413.i3319, align 4
  %xor1414.i3320 = xor i32 %xor1409.i3315, %2940
  %2941 = load i32, i32* %t.i1942, align 4
  %shr1415.i3321 = lshr i32 %2941, 18
  %and1416.i3322 = and i32 %shr1415.i3321, 63
  %idxprom1417.i3323 = zext i32 %and1416.i3322 to i64
  %arrayidx1418.i3324 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i3323
  %2942 = load i32, i32* %arrayidx1418.i3324, align 4
  %xor1419.i3325 = xor i32 %xor1414.i3320, %2942
  %2943 = load i32, i32* %t.i1942, align 4
  %shr1420.i3326 = lshr i32 %2943, 26
  %idxprom1422.i3327 = zext i32 %shr1420.i3326 to i64
  %arrayidx1423.i3328 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i3327
  %2944 = load i32, i32* %arrayidx1423.i3328, align 4
  %xor1424.i3329 = xor i32 %xor1419.i3325, %2944
  %2945 = load i32, i32* %r.i1941, align 4
  %xor1425.i3330 = xor i32 %2945, %xor1424.i3329
  store i32 %xor1425.i3330, i32* %r.i1941, align 4
  %2946 = load i32, i32* %r.i1941, align 4
  %2947 = load i32*, i32** %s.i1944, align 8
  %arrayidx1426.i3331 = getelementptr inbounds i32, i32* %2947, i64 2
  %2948 = load i32, i32* %arrayidx1426.i3331, align 4
  %xor1427.i3332 = xor i32 %2946, %2948
  store i32 %xor1427.i3332, i32* %u.i1943, align 4
  %2949 = load i32, i32* %r.i1941, align 4
  %2950 = load i32*, i32** %s.i1944, align 8
  %arrayidx1428.i3333 = getelementptr inbounds i32, i32* %2950, i64 3
  %2951 = load i32, i32* %arrayidx1428.i3333, align 4
  %xor1429.i3334 = xor i32 %2949, %2951
  store i32 %xor1429.i3334, i32* %t.i1942, align 4
  %2952 = load i32, i32* %t.i1942, align 4
  %2953 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2952) #5, !srcloc !34
  store i32 %2953, i32* %ret1430.i2010, align 4
  %2954 = load i32, i32* %ret1430.i2010, align 4
  store i32 %2954, i32* %tmp1431.i2011, align 4
  %2955 = load i32, i32* %tmp1431.i2011, align 4
  store i32 %2955, i32* %t.i1942, align 4
  %2956 = load i32, i32* %u.i1943, align 4
  %shr1432.i3335 = lshr i32 %2956, 2
  %and1433.i3336 = and i32 %shr1432.i3335, 63
  %idxprom1434.i3337 = zext i32 %and1433.i3336 to i64
  %arrayidx1435.i3338 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i3337
  %2957 = load i32, i32* %arrayidx1435.i3338, align 4
  %2958 = load i32, i32* %u.i1943, align 4
  %shr1436.i3339 = lshr i32 %2958, 10
  %and1437.i3340 = and i32 %shr1436.i3339, 63
  %idxprom1438.i3341 = zext i32 %and1437.i3340 to i64
  %arrayidx1439.i3342 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i3341
  %2959 = load i32, i32* %arrayidx1439.i3342, align 4
  %xor1440.i3343 = xor i32 %2957, %2959
  %2960 = load i32, i32* %u.i1943, align 4
  %shr1441.i3344 = lshr i32 %2960, 18
  %and1442.i3345 = and i32 %shr1441.i3344, 63
  %idxprom1443.i3346 = zext i32 %and1442.i3345 to i64
  %arrayidx1444.i3347 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i3346
  %2961 = load i32, i32* %arrayidx1444.i3347, align 4
  %xor1445.i3348 = xor i32 %xor1440.i3343, %2961
  %2962 = load i32, i32* %u.i1943, align 4
  %shr1446.i3349 = lshr i32 %2962, 26
  %idxprom1448.i3350 = zext i32 %shr1446.i3349 to i64
  %arrayidx1449.i3351 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i3350
  %2963 = load i32, i32* %arrayidx1449.i3351, align 4
  %xor1450.i3352 = xor i32 %xor1445.i3348, %2963
  %2964 = load i32, i32* %t.i1942, align 4
  %shr1451.i3353 = lshr i32 %2964, 2
  %and1452.i3354 = and i32 %shr1451.i3353, 63
  %idxprom1453.i3355 = zext i32 %and1452.i3354 to i64
  %arrayidx1454.i3356 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i3355
  %2965 = load i32, i32* %arrayidx1454.i3356, align 4
  %xor1455.i3357 = xor i32 %xor1450.i3352, %2965
  %2966 = load i32, i32* %t.i1942, align 4
  %shr1456.i3358 = lshr i32 %2966, 10
  %and1457.i3359 = and i32 %shr1456.i3358, 63
  %idxprom1458.i3360 = zext i32 %and1457.i3359 to i64
  %arrayidx1459.i3361 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i3360
  %2967 = load i32, i32* %arrayidx1459.i3361, align 4
  %xor1460.i3362 = xor i32 %xor1455.i3357, %2967
  %2968 = load i32, i32* %t.i1942, align 4
  %shr1461.i3363 = lshr i32 %2968, 18
  %and1462.i3364 = and i32 %shr1461.i3363, 63
  %idxprom1463.i3365 = zext i32 %and1462.i3364 to i64
  %arrayidx1464.i3366 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i3365
  %2969 = load i32, i32* %arrayidx1464.i3366, align 4
  %xor1465.i3367 = xor i32 %xor1460.i3362, %2969
  %2970 = load i32, i32* %t.i1942, align 4
  %shr1466.i3368 = lshr i32 %2970, 26
  %idxprom1468.i3369 = zext i32 %shr1466.i3368 to i64
  %arrayidx1469.i3370 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i3369
  %2971 = load i32, i32* %arrayidx1469.i3370, align 4
  %xor1470.i3371 = xor i32 %xor1465.i3367, %2971
  %2972 = load i32, i32* %l.i1940, align 4
  %xor1471.i3372 = xor i32 %2972, %xor1470.i3371
  store i32 %xor1471.i3372, i32* %l.i1940, align 4
  %2973 = load i32, i32* %l.i1940, align 4
  %2974 = load i32*, i32** %s.i1944, align 8
  %2975 = load i32, i32* %2974, align 4
  %xor1473.i3373 = xor i32 %2973, %2975
  store i32 %xor1473.i3373, i32* %u.i1943, align 4
  %2976 = load i32, i32* %l.i1940, align 4
  %2977 = load i32*, i32** %s.i1944, align 8
  %arrayidx1474.i3374 = getelementptr inbounds i32, i32* %2977, i64 1
  %2978 = load i32, i32* %arrayidx1474.i3374, align 4
  %xor1475.i3375 = xor i32 %2976, %2978
  store i32 %xor1475.i3375, i32* %t.i1942, align 4
  %2979 = load i32, i32* %t.i1942, align 4
  %2980 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2979) #5, !srcloc !35
  store i32 %2980, i32* %ret1476.i2012, align 4
  %2981 = load i32, i32* %ret1476.i2012, align 4
  store i32 %2981, i32* %tmp1477.i2013, align 4
  %2982 = load i32, i32* %tmp1477.i2013, align 4
  store i32 %2982, i32* %t.i1942, align 4
  %2983 = load i32, i32* %u.i1943, align 4
  %shr1478.i3376 = lshr i32 %2983, 2
  %and1479.i3377 = and i32 %shr1478.i3376, 63
  %idxprom1480.i3378 = zext i32 %and1479.i3377 to i64
  %arrayidx1481.i3379 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i3378
  %2984 = load i32, i32* %arrayidx1481.i3379, align 4
  %2985 = load i32, i32* %u.i1943, align 4
  %shr1482.i3380 = lshr i32 %2985, 10
  %and1483.i3381 = and i32 %shr1482.i3380, 63
  %idxprom1484.i3382 = zext i32 %and1483.i3381 to i64
  %arrayidx1485.i3383 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i3382
  %2986 = load i32, i32* %arrayidx1485.i3383, align 4
  %xor1486.i3384 = xor i32 %2984, %2986
  %2987 = load i32, i32* %u.i1943, align 4
  %shr1487.i3385 = lshr i32 %2987, 18
  %and1488.i3386 = and i32 %shr1487.i3385, 63
  %idxprom1489.i3387 = zext i32 %and1488.i3386 to i64
  %arrayidx1490.i3388 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i3387
  %2988 = load i32, i32* %arrayidx1490.i3388, align 4
  %xor1491.i3389 = xor i32 %xor1486.i3384, %2988
  %2989 = load i32, i32* %u.i1943, align 4
  %shr1492.i3390 = lshr i32 %2989, 26
  %idxprom1494.i3391 = zext i32 %shr1492.i3390 to i64
  %arrayidx1495.i3392 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i3391
  %2990 = load i32, i32* %arrayidx1495.i3392, align 4
  %xor1496.i3393 = xor i32 %xor1491.i3389, %2990
  %2991 = load i32, i32* %t.i1942, align 4
  %shr1497.i3394 = lshr i32 %2991, 2
  %and1498.i3395 = and i32 %shr1497.i3394, 63
  %idxprom1499.i3396 = zext i32 %and1498.i3395 to i64
  %arrayidx1500.i3397 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i3396
  %2992 = load i32, i32* %arrayidx1500.i3397, align 4
  %xor1501.i3398 = xor i32 %xor1496.i3393, %2992
  %2993 = load i32, i32* %t.i1942, align 4
  %shr1502.i3399 = lshr i32 %2993, 10
  %and1503.i3400 = and i32 %shr1502.i3399, 63
  %idxprom1504.i3401 = zext i32 %and1503.i3400 to i64
  %arrayidx1505.i3402 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i3401
  %2994 = load i32, i32* %arrayidx1505.i3402, align 4
  %xor1506.i3403 = xor i32 %xor1501.i3398, %2994
  %2995 = load i32, i32* %t.i1942, align 4
  %shr1507.i3404 = lshr i32 %2995, 18
  %and1508.i3405 = and i32 %shr1507.i3404, 63
  %idxprom1509.i3406 = zext i32 %and1508.i3405 to i64
  %arrayidx1510.i3407 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i3406
  %2996 = load i32, i32* %arrayidx1510.i3407, align 4
  %xor1511.i3408 = xor i32 %xor1506.i3403, %2996
  %2997 = load i32, i32* %t.i1942, align 4
  %shr1512.i3409 = lshr i32 %2997, 26
  %idxprom1514.i3410 = zext i32 %shr1512.i3409 to i64
  %arrayidx1515.i3411 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i3410
  %2998 = load i32, i32* %arrayidx1515.i3411, align 4
  %xor1516.i3412 = xor i32 %xor1511.i3408, %2998
  %2999 = load i32, i32* %r.i1941, align 4
  %xor1517.i3413 = xor i32 %2999, %xor1516.i3412
  store i32 %xor1517.i3413, i32* %r.i1941, align 4
  br label %DES_encrypt1.exit3462

DES_encrypt1.exit3462:                            ; preds = %if.then.i2742, %if.else.i3414
  %3000 = load i32, i32* %l.i1940, align 4
  %3001 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %3000) #5, !srcloc !36
  store i32 %3001, i32* %ret1518.i2014, align 4
  %3002 = load i32, i32* %ret1518.i2014, align 4
  store i32 %3002, i32* %tmp1519.i2015, align 4
  %3003 = load i32, i32* %tmp1519.i2015, align 4
  %conv1520.i3415 = zext i32 %3003 to i64
  %and1521.i3416 = and i64 %conv1520.i3415, 4294967295
  %conv1522.i3417 = trunc i64 %and1521.i3416 to i32
  store i32 %conv1522.i3417, i32* %l.i1940, align 4
  %3004 = load i32, i32* %r.i1941, align 4
  %3005 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %3004) #5, !srcloc !37
  store i32 %3005, i32* %ret1523.i2016, align 4
  %3006 = load i32, i32* %ret1523.i2016, align 4
  store i32 %3006, i32* %tmp1524.i2017, align 4
  %3007 = load i32, i32* %tmp1524.i2017, align 4
  %conv1525.i3418 = zext i32 %3007 to i64
  %and1526.i3419 = and i64 %conv1525.i3418, 4294967295
  %conv1527.i3420 = trunc i64 %and1526.i3419 to i32
  store i32 %conv1527.i3420, i32* %r.i1941, align 4
  %3008 = load i32, i32* %r.i1941, align 4
  %shr1529.i3421 = lshr i32 %3008, 1
  %3009 = load i32, i32* %l.i1940, align 4
  %xor1530.i3422 = xor i32 %shr1529.i3421, %3009
  %conv1531.i3423 = zext i32 %xor1530.i3422 to i64
  %and1532.i3424 = and i64 %conv1531.i3423, 1431655765
  %conv1533.i3425 = trunc i64 %and1532.i3424 to i32
  store i32 %conv1533.i3425, i32* %tt1528.i2018, align 4
  %3010 = load i32, i32* %tt1528.i2018, align 4
  %3011 = load i32, i32* %l.i1940, align 4
  %xor1534.i3426 = xor i32 %3011, %3010
  store i32 %xor1534.i3426, i32* %l.i1940, align 4
  %3012 = load i32, i32* %tt1528.i2018, align 4
  %shl1535.i3427 = shl i32 %3012, 1
  %3013 = load i32, i32* %r.i1941, align 4
  %xor1536.i3428 = xor i32 %3013, %shl1535.i3427
  store i32 %xor1536.i3428, i32* %r.i1941, align 4
  %3014 = load i32, i32* %l.i1940, align 4
  %shr1537.i3429 = lshr i32 %3014, 8
  %3015 = load i32, i32* %r.i1941, align 4
  %xor1538.i3430 = xor i32 %shr1537.i3429, %3015
  %conv1539.i3431 = zext i32 %xor1538.i3430 to i64
  %and1540.i3432 = and i64 %conv1539.i3431, 16711935
  %conv1541.i3433 = trunc i64 %and1540.i3432 to i32
  store i32 %conv1541.i3433, i32* %tt1528.i2018, align 4
  %3016 = load i32, i32* %tt1528.i2018, align 4
  %3017 = load i32, i32* %r.i1941, align 4
  %xor1542.i3434 = xor i32 %3017, %3016
  store i32 %xor1542.i3434, i32* %r.i1941, align 4
  %3018 = load i32, i32* %tt1528.i2018, align 4
  %shl1543.i3435 = shl i32 %3018, 8
  %3019 = load i32, i32* %l.i1940, align 4
  %xor1544.i3436 = xor i32 %3019, %shl1543.i3435
  store i32 %xor1544.i3436, i32* %l.i1940, align 4
  %3020 = load i32, i32* %r.i1941, align 4
  %shr1545.i3437 = lshr i32 %3020, 2
  %3021 = load i32, i32* %l.i1940, align 4
  %xor1546.i3438 = xor i32 %shr1545.i3437, %3021
  %conv1547.i3439 = zext i32 %xor1546.i3438 to i64
  %and1548.i3440 = and i64 %conv1547.i3439, 858993459
  %conv1549.i3441 = trunc i64 %and1548.i3440 to i32
  store i32 %conv1549.i3441, i32* %tt1528.i2018, align 4
  %3022 = load i32, i32* %tt1528.i2018, align 4
  %3023 = load i32, i32* %l.i1940, align 4
  %xor1550.i3442 = xor i32 %3023, %3022
  store i32 %xor1550.i3442, i32* %l.i1940, align 4
  %3024 = load i32, i32* %tt1528.i2018, align 4
  %shl1551.i3443 = shl i32 %3024, 2
  %3025 = load i32, i32* %r.i1941, align 4
  %xor1552.i3444 = xor i32 %3025, %shl1551.i3443
  store i32 %xor1552.i3444, i32* %r.i1941, align 4
  %3026 = load i32, i32* %l.i1940, align 4
  %shr1553.i3445 = lshr i32 %3026, 16
  %3027 = load i32, i32* %r.i1941, align 4
  %xor1554.i3446 = xor i32 %shr1553.i3445, %3027
  %conv1555.i3447 = zext i32 %xor1554.i3446 to i64
  %and1556.i3448 = and i64 %conv1555.i3447, 65535
  %conv1557.i3449 = trunc i64 %and1556.i3448 to i32
  store i32 %conv1557.i3449, i32* %tt1528.i2018, align 4
  %3028 = load i32, i32* %tt1528.i2018, align 4
  %3029 = load i32, i32* %r.i1941, align 4
  %xor1558.i3450 = xor i32 %3029, %3028
  store i32 %xor1558.i3450, i32* %r.i1941, align 4
  %3030 = load i32, i32* %tt1528.i2018, align 4
  %shl1559.i3451 = shl i32 %3030, 16
  %3031 = load i32, i32* %l.i1940, align 4
  %xor1560.i3452 = xor i32 %3031, %shl1559.i3451
  store i32 %xor1560.i3452, i32* %l.i1940, align 4
  %3032 = load i32, i32* %r.i1941, align 4
  %shr1561.i3453 = lshr i32 %3032, 4
  %3033 = load i32, i32* %l.i1940, align 4
  %xor1562.i3454 = xor i32 %shr1561.i3453, %3033
  %conv1563.i3455 = zext i32 %xor1562.i3454 to i64
  %and1564.i3456 = and i64 %conv1563.i3455, 252645135
  %conv1565.i3457 = trunc i64 %and1564.i3456 to i32
  store i32 %conv1565.i3457, i32* %tt1528.i2018, align 4
  %3034 = load i32, i32* %tt1528.i2018, align 4
  %3035 = load i32, i32* %l.i1940, align 4
  %xor1566.i3458 = xor i32 %3035, %3034
  store i32 %xor1566.i3458, i32* %l.i1940, align 4
  %3036 = load i32, i32* %tt1528.i2018, align 4
  %shl1567.i3459 = shl i32 %3036, 4
  %3037 = load i32, i32* %r.i1941, align 4
  %xor1568.i3460 = xor i32 %3037, %shl1567.i3459
  store i32 %xor1568.i3460, i32* %r.i1941, align 4
  %3038 = load i32, i32* %l.i1940, align 4
  %3039 = load i32*, i32** %data.addr.i1937, align 8
  store i32 %3038, i32* %3039, align 4
  %3040 = load i32, i32* %r.i1941, align 4
  %3041 = load i32*, i32** %data.addr.i1937, align 8
  %arrayidx1570.i3461 = getelementptr inbounds i32, i32* %3041, i64 1
  store i32 %3040, i32* %arrayidx1570.i3461, align 4
  store i32 0, i32* %u.i1943, align 4
  store i32 0, i32* %t.i1942, align 4
  store i32 0, i32* %r.i1941, align 4
  store i32 0, i32* %l.i1940, align 4
  %arrayidx259 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %3042 = load i32, i32* %arrayidx259, align 4
  %3043 = load i32, i32* %xor0, align 4
  %xor260 = xor i32 %3042, %3043
  store i32 %xor260, i32* %tout0, align 4
  %arrayidx261 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  %3044 = load i32, i32* %arrayidx261, align 4
  %3045 = load i32, i32* %xor1, align 4
  %xor262 = xor i32 %3044, %3045
  store i32 %xor262, i32* %tout1, align 4
  %3046 = load i32, i32* %tout0, align 4
  %and263 = and i32 %3046, 255
  %conv264 = trunc i32 %and263 to i8
  %3047 = load i8*, i8** %out.addr, align 8
  %incdec.ptr265 = getelementptr inbounds i8, i8* %3047, i32 1
  store i8* %incdec.ptr265, i8** %out.addr, align 8
  store i8 %conv264, i8* %3047, align 1
  %3048 = load i32, i32* %tout0, align 4
  %shr266 = lshr i32 %3048, 8
  %and267 = and i32 %shr266, 255
  %conv268 = trunc i32 %and267 to i8
  %3049 = load i8*, i8** %out.addr, align 8
  %incdec.ptr269 = getelementptr inbounds i8, i8* %3049, i32 1
  store i8* %incdec.ptr269, i8** %out.addr, align 8
  store i8 %conv268, i8* %3049, align 1
  %3050 = load i32, i32* %tout0, align 4
  %shr270 = lshr i32 %3050, 16
  %and271 = and i32 %shr270, 255
  %conv272 = trunc i32 %and271 to i8
  %3051 = load i8*, i8** %out.addr, align 8
  %incdec.ptr273 = getelementptr inbounds i8, i8* %3051, i32 1
  store i8* %incdec.ptr273, i8** %out.addr, align 8
  store i8 %conv272, i8* %3051, align 1
  %3052 = load i32, i32* %tout0, align 4
  %shr274 = lshr i32 %3052, 24
  %and275 = and i32 %shr274, 255
  %conv276 = trunc i32 %and275 to i8
  %3053 = load i8*, i8** %out.addr, align 8
  %incdec.ptr277 = getelementptr inbounds i8, i8* %3053, i32 1
  store i8* %incdec.ptr277, i8** %out.addr, align 8
  store i8 %conv276, i8* %3053, align 1
  %3054 = load i32, i32* %tout1, align 4
  %and278 = and i32 %3054, 255
  %conv279 = trunc i32 %and278 to i8
  %3055 = load i8*, i8** %out.addr, align 8
  %incdec.ptr280 = getelementptr inbounds i8, i8* %3055, i32 1
  store i8* %incdec.ptr280, i8** %out.addr, align 8
  store i8 %conv279, i8* %3055, align 1
  %3056 = load i32, i32* %tout1, align 4
  %shr281 = lshr i32 %3056, 8
  %and282 = and i32 %shr281, 255
  %conv283 = trunc i32 %and282 to i8
  %3057 = load i8*, i8** %out.addr, align 8
  %incdec.ptr284 = getelementptr inbounds i8, i8* %3057, i32 1
  store i8* %incdec.ptr284, i8** %out.addr, align 8
  store i8 %conv283, i8* %3057, align 1
  %3058 = load i32, i32* %tout1, align 4
  %shr285 = lshr i32 %3058, 16
  %and286 = and i32 %shr285, 255
  %conv287 = trunc i32 %and286 to i8
  %3059 = load i8*, i8** %out.addr, align 8
  %incdec.ptr288 = getelementptr inbounds i8, i8* %3059, i32 1
  store i8* %incdec.ptr288, i8** %out.addr, align 8
  store i8 %conv287, i8* %3059, align 1
  %3060 = load i32, i32* %tout1, align 4
  %shr289 = lshr i32 %3060, 24
  %and290 = and i32 %shr289, 255
  %conv291 = trunc i32 %and290 to i8
  %3061 = load i8*, i8** %out.addr, align 8
  %incdec.ptr292 = getelementptr inbounds i8, i8* %3061, i32 1
  store i8* %incdec.ptr292, i8** %out.addr, align 8
  store i8 %conv291, i8* %3061, align 1
  %3062 = load i32, i32* %tin0, align 4
  store i32 %3062, i32* %xor0, align 4
  %3063 = load i32, i32* %tin1, align 4
  store i32 %3063, i32* %xor1, align 4
  br label %for.inc293

for.inc293:                                       ; preds = %DES_encrypt1.exit3462
  %3064 = load i64, i64* %l, align 8
  %sub294 = sub nsw i64 %3064, 8
  store i64 %sub294, i64* %l, align 8
  br label %for.cond224

for.end295:                                       ; preds = %for.cond224
  %3065 = load i64, i64* %l, align 8
  %cmp296 = icmp ne i64 %3065, -8
  br i1 %cmp296, label %if.then298, label %if.end376

if.then298:                                       ; preds = %for.end295
  %3066 = load i8*, i8** %in.addr, align 8
  %incdec.ptr299 = getelementptr inbounds i8, i8* %3066, i32 1
  store i8* %incdec.ptr299, i8** %in.addr, align 8
  %3067 = load i8, i8* %3066, align 1
  %conv300 = zext i8 %3067 to i32
  store i32 %conv300, i32* %tin0, align 4
  %3068 = load i8*, i8** %in.addr, align 8
  %incdec.ptr301 = getelementptr inbounds i8, i8* %3068, i32 1
  store i8* %incdec.ptr301, i8** %in.addr, align 8
  %3069 = load i8, i8* %3068, align 1
  %conv302 = zext i8 %3069 to i32
  %shl303 = shl i32 %conv302, 8
  %3070 = load i32, i32* %tin0, align 4
  %or304 = or i32 %3070, %shl303
  store i32 %or304, i32* %tin0, align 4
  %3071 = load i8*, i8** %in.addr, align 8
  %incdec.ptr305 = getelementptr inbounds i8, i8* %3071, i32 1
  store i8* %incdec.ptr305, i8** %in.addr, align 8
  %3072 = load i8, i8* %3071, align 1
  %conv306 = zext i8 %3072 to i32
  %shl307 = shl i32 %conv306, 16
  %3073 = load i32, i32* %tin0, align 4
  %or308 = or i32 %3073, %shl307
  store i32 %or308, i32* %tin0, align 4
  %3074 = load i8*, i8** %in.addr, align 8
  %incdec.ptr309 = getelementptr inbounds i8, i8* %3074, i32 1
  store i8* %incdec.ptr309, i8** %in.addr, align 8
  %3075 = load i8, i8* %3074, align 1
  %conv310 = zext i8 %3075 to i32
  %shl311 = shl i32 %conv310, 24
  %3076 = load i32, i32* %tin0, align 4
  %or312 = or i32 %3076, %shl311
  store i32 %or312, i32* %tin0, align 4
  %3077 = load i32, i32* %tin0, align 4
  %arrayidx313 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %3077, i32* %arrayidx313, align 4
  %3078 = load i8*, i8** %in.addr, align 8
  %incdec.ptr314 = getelementptr inbounds i8, i8* %3078, i32 1
  store i8* %incdec.ptr314, i8** %in.addr, align 8
  %3079 = load i8, i8* %3078, align 1
  %conv315 = zext i8 %3079 to i32
  store i32 %conv315, i32* %tin1, align 4
  %3080 = load i8*, i8** %in.addr, align 8
  %incdec.ptr316 = getelementptr inbounds i8, i8* %3080, i32 1
  store i8* %incdec.ptr316, i8** %in.addr, align 8
  %3081 = load i8, i8* %3080, align 1
  %conv317 = zext i8 %3081 to i32
  %shl318 = shl i32 %conv317, 8
  %3082 = load i32, i32* %tin1, align 4
  %or319 = or i32 %3082, %shl318
  store i32 %or319, i32* %tin1, align 4
  %3083 = load i8*, i8** %in.addr, align 8
  %incdec.ptr320 = getelementptr inbounds i8, i8* %3083, i32 1
  store i8* %incdec.ptr320, i8** %in.addr, align 8
  %3084 = load i8, i8* %3083, align 1
  %conv321 = zext i8 %3084 to i32
  %shl322 = shl i32 %conv321, 16
  %3085 = load i32, i32* %tin1, align 4
  %or323 = or i32 %3085, %shl322
  store i32 %or323, i32* %tin1, align 4
  %3086 = load i8*, i8** %in.addr, align 8
  %incdec.ptr324 = getelementptr inbounds i8, i8* %3086, i32 1
  store i8* %incdec.ptr324, i8** %in.addr, align 8
  %3087 = load i8, i8* %3086, align 1
  %conv325 = zext i8 %3087 to i32
  %shl326 = shl i32 %conv325, 24
  %3088 = load i32, i32* %tin1, align 4
  %or327 = or i32 %3088, %shl326
  store i32 %or327, i32* %tin1, align 4
  %3089 = load i32, i32* %tin1, align 4
  %arrayidx328 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %3089, i32* %arrayidx328, align 4
  %arraydecay329 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %3090 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8
  store i32* %arraydecay329, i32** %data.addr.i3463, align 8
  store %struct.DES_ks* %3090, %struct.DES_ks** %ks.addr.i3464, align 8
  store i32 0, i32* %enc.addr.i3465, align 4
  %3091 = load i32*, i32** %data.addr.i3463, align 8
  %3092 = load i32, i32* %3091, align 4
  store i32 %3092, i32* %r.i3467, align 4
  %3093 = load i32*, i32** %data.addr.i3463, align 8
  %arrayidx1.i3545 = getelementptr inbounds i32, i32* %3093, i64 1
  %3094 = load i32, i32* %arrayidx1.i3545, align 4
  store i32 %3094, i32* %l.i3466, align 4
  %3095 = load i32, i32* %l.i3466, align 4
  %shr.i3546 = lshr i32 %3095, 4
  %3096 = load i32, i32* %r.i3467, align 4
  %xor.i3547 = xor i32 %shr.i3546, %3096
  %conv.i3548 = zext i32 %xor.i3547 to i64
  %and.i3549 = and i64 %conv.i3548, 252645135
  %conv2.i3550 = trunc i64 %and.i3549 to i32
  store i32 %conv2.i3550, i32* %tt.i3471, align 4
  %3097 = load i32, i32* %tt.i3471, align 4
  %3098 = load i32, i32* %r.i3467, align 4
  %xor3.i3551 = xor i32 %3098, %3097
  store i32 %xor3.i3551, i32* %r.i3467, align 4
  %3099 = load i32, i32* %tt.i3471, align 4
  %shl.i3552 = shl i32 %3099, 4
  %3100 = load i32, i32* %l.i3466, align 4
  %xor4.i3553 = xor i32 %3100, %shl.i3552
  store i32 %xor4.i3553, i32* %l.i3466, align 4
  %3101 = load i32, i32* %r.i3467, align 4
  %shr5.i3554 = lshr i32 %3101, 16
  %3102 = load i32, i32* %l.i3466, align 4
  %xor6.i3555 = xor i32 %shr5.i3554, %3102
  %conv7.i3556 = zext i32 %xor6.i3555 to i64
  %and8.i3557 = and i64 %conv7.i3556, 65535
  %conv9.i3558 = trunc i64 %and8.i3557 to i32
  store i32 %conv9.i3558, i32* %tt.i3471, align 4
  %3103 = load i32, i32* %tt.i3471, align 4
  %3104 = load i32, i32* %l.i3466, align 4
  %xor10.i3559 = xor i32 %3104, %3103
  store i32 %xor10.i3559, i32* %l.i3466, align 4
  %3105 = load i32, i32* %tt.i3471, align 4
  %shl11.i3560 = shl i32 %3105, 16
  %3106 = load i32, i32* %r.i3467, align 4
  %xor12.i3561 = xor i32 %3106, %shl11.i3560
  store i32 %xor12.i3561, i32* %r.i3467, align 4
  %3107 = load i32, i32* %l.i3466, align 4
  %shr13.i3562 = lshr i32 %3107, 2
  %3108 = load i32, i32* %r.i3467, align 4
  %xor14.i3563 = xor i32 %shr13.i3562, %3108
  %conv15.i3564 = zext i32 %xor14.i3563 to i64
  %and16.i3565 = and i64 %conv15.i3564, 858993459
  %conv17.i3566 = trunc i64 %and16.i3565 to i32
  store i32 %conv17.i3566, i32* %tt.i3471, align 4
  %3109 = load i32, i32* %tt.i3471, align 4
  %3110 = load i32, i32* %r.i3467, align 4
  %xor18.i3567 = xor i32 %3110, %3109
  store i32 %xor18.i3567, i32* %r.i3467, align 4
  %3111 = load i32, i32* %tt.i3471, align 4
  %shl19.i3568 = shl i32 %3111, 2
  %3112 = load i32, i32* %l.i3466, align 4
  %xor20.i3569 = xor i32 %3112, %shl19.i3568
  store i32 %xor20.i3569, i32* %l.i3466, align 4
  %3113 = load i32, i32* %r.i3467, align 4
  %shr21.i3570 = lshr i32 %3113, 8
  %3114 = load i32, i32* %l.i3466, align 4
  %xor22.i3571 = xor i32 %shr21.i3570, %3114
  %conv23.i3572 = zext i32 %xor22.i3571 to i64
  %and24.i3573 = and i64 %conv23.i3572, 16711935
  %conv25.i3574 = trunc i64 %and24.i3573 to i32
  store i32 %conv25.i3574, i32* %tt.i3471, align 4
  %3115 = load i32, i32* %tt.i3471, align 4
  %3116 = load i32, i32* %l.i3466, align 4
  %xor26.i3575 = xor i32 %3116, %3115
  store i32 %xor26.i3575, i32* %l.i3466, align 4
  %3117 = load i32, i32* %tt.i3471, align 4
  %shl27.i3576 = shl i32 %3117, 8
  %3118 = load i32, i32* %r.i3467, align 4
  %xor28.i3577 = xor i32 %3118, %shl27.i3576
  store i32 %xor28.i3577, i32* %r.i3467, align 4
  %3119 = load i32, i32* %l.i3466, align 4
  %shr29.i3578 = lshr i32 %3119, 1
  %3120 = load i32, i32* %r.i3467, align 4
  %xor30.i3579 = xor i32 %shr29.i3578, %3120
  %conv31.i3580 = zext i32 %xor30.i3579 to i64
  %and32.i3581 = and i64 %conv31.i3580, 1431655765
  %conv33.i3582 = trunc i64 %and32.i3581 to i32
  store i32 %conv33.i3582, i32* %tt.i3471, align 4
  %3121 = load i32, i32* %tt.i3471, align 4
  %3122 = load i32, i32* %r.i3467, align 4
  %xor34.i3583 = xor i32 %3122, %3121
  store i32 %xor34.i3583, i32* %r.i3467, align 4
  %3123 = load i32, i32* %tt.i3471, align 4
  %shl35.i3584 = shl i32 %3123, 1
  %3124 = load i32, i32* %l.i3466, align 4
  %xor36.i3585 = xor i32 %3124, %shl35.i3584
  store i32 %xor36.i3585, i32* %l.i3466, align 4
  %3125 = load i32, i32* %r.i3467, align 4
  %3126 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %3125) #5, !srcloc !2
  store i32 %3126, i32* %ret.i3472, align 4
  %3127 = load i32, i32* %ret.i3472, align 4
  store i32 %3127, i32* %tmp.i3473, align 4
  %3128 = load i32, i32* %tmp.i3473, align 4
  %conv37.i3586 = zext i32 %3128 to i64
  %and38.i3587 = and i64 %conv37.i3586, 4294967295
  %conv39.i3588 = trunc i64 %and38.i3587 to i32
  store i32 %conv39.i3588, i32* %r.i3467, align 4
  %3129 = load i32, i32* %l.i3466, align 4
  %3130 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %3129) #5, !srcloc !3
  store i32 %3130, i32* %ret40.i3474, align 4
  %3131 = load i32, i32* %ret40.i3474, align 4
  store i32 %3131, i32* %tmp41.i3475, align 4
  %3132 = load i32, i32* %tmp41.i3475, align 4
  %conv42.i3589 = zext i32 %3132 to i64
  %and43.i3590 = and i64 %conv42.i3589, 4294967295
  %conv44.i3591 = trunc i64 %and43.i3590 to i32
  store i32 %conv44.i3591, i32* %l.i3466, align 4
  %3133 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i3464, align 8
  %ks45.i3592 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %3133, i32 0, i32 0
  %arraydecay.i3593 = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i3592, i64 0, i64 0
  %deslong.i3594 = bitcast %union.anon* %arraydecay.i3593 to [2 x i32]*
  %arraydecay46.i3595 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i3594, i64 0, i64 0
  store i32* %arraydecay46.i3595, i32** %s.i3470, align 8
  %3134 = load i32, i32* %enc.addr.i3465, align 4
  %tobool.i3596 = icmp ne i32 %3134, 0
  br i1 %tobool.i3596, label %if.then.i4268, label %if.else.i4940

if.then.i4268:                                    ; preds = %if.then298
  %3135 = load i32, i32* %r.i3467, align 4
  %3136 = load i32*, i32** %s.i3470, align 8
  %3137 = load i32, i32* %3136, align 4
  %xor48.i3597 = xor i32 %3135, %3137
  store i32 %xor48.i3597, i32* %u.i3469, align 4
  %3138 = load i32, i32* %r.i3467, align 4
  %3139 = load i32*, i32** %s.i3470, align 8
  %arrayidx49.i3598 = getelementptr inbounds i32, i32* %3139, i64 1
  %3140 = load i32, i32* %arrayidx49.i3598, align 4
  %xor50.i3599 = xor i32 %3138, %3140
  store i32 %xor50.i3599, i32* %t.i3468, align 4
  %3141 = load i32, i32* %t.i3468, align 4
  %3142 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3141) #5, !srcloc !4
  store i32 %3142, i32* %ret51.i3476, align 4
  %3143 = load i32, i32* %ret51.i3476, align 4
  store i32 %3143, i32* %tmp52.i3477, align 4
  %3144 = load i32, i32* %tmp52.i3477, align 4
  store i32 %3144, i32* %t.i3468, align 4
  %3145 = load i32, i32* %u.i3469, align 4
  %shr53.i3600 = lshr i32 %3145, 2
  %and54.i3601 = and i32 %shr53.i3600, 63
  %idxprom.i3602 = zext i32 %and54.i3601 to i64
  %arrayidx55.i3603 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i3602
  %3146 = load i32, i32* %arrayidx55.i3603, align 4
  %3147 = load i32, i32* %u.i3469, align 4
  %shr56.i3604 = lshr i32 %3147, 10
  %and57.i3605 = and i32 %shr56.i3604, 63
  %idxprom58.i3606 = zext i32 %and57.i3605 to i64
  %arrayidx59.i3607 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i3606
  %3148 = load i32, i32* %arrayidx59.i3607, align 4
  %xor60.i3608 = xor i32 %3146, %3148
  %3149 = load i32, i32* %u.i3469, align 4
  %shr61.i3609 = lshr i32 %3149, 18
  %and62.i3610 = and i32 %shr61.i3609, 63
  %idxprom63.i3611 = zext i32 %and62.i3610 to i64
  %arrayidx64.i3612 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i3611
  %3150 = load i32, i32* %arrayidx64.i3612, align 4
  %xor65.i3613 = xor i32 %xor60.i3608, %3150
  %3151 = load i32, i32* %u.i3469, align 4
  %shr66.i3614 = lshr i32 %3151, 26
  %idxprom68.i3615 = zext i32 %shr66.i3614 to i64
  %arrayidx69.i3616 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i3615
  %3152 = load i32, i32* %arrayidx69.i3616, align 4
  %xor70.i3617 = xor i32 %xor65.i3613, %3152
  %3153 = load i32, i32* %t.i3468, align 4
  %shr71.i3618 = lshr i32 %3153, 2
  %and72.i3619 = and i32 %shr71.i3618, 63
  %idxprom73.i3620 = zext i32 %and72.i3619 to i64
  %arrayidx74.i3621 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i3620
  %3154 = load i32, i32* %arrayidx74.i3621, align 4
  %xor75.i3622 = xor i32 %xor70.i3617, %3154
  %3155 = load i32, i32* %t.i3468, align 4
  %shr76.i3623 = lshr i32 %3155, 10
  %and77.i3624 = and i32 %shr76.i3623, 63
  %idxprom78.i3625 = zext i32 %and77.i3624 to i64
  %arrayidx79.i3626 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i3625
  %3156 = load i32, i32* %arrayidx79.i3626, align 4
  %xor80.i3627 = xor i32 %xor75.i3622, %3156
  %3157 = load i32, i32* %t.i3468, align 4
  %shr81.i3628 = lshr i32 %3157, 18
  %and82.i3629 = and i32 %shr81.i3628, 63
  %idxprom83.i3630 = zext i32 %and82.i3629 to i64
  %arrayidx84.i3631 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i3630
  %3158 = load i32, i32* %arrayidx84.i3631, align 4
  %xor85.i3632 = xor i32 %xor80.i3627, %3158
  %3159 = load i32, i32* %t.i3468, align 4
  %shr86.i3633 = lshr i32 %3159, 26
  %idxprom88.i3634 = zext i32 %shr86.i3633 to i64
  %arrayidx89.i3635 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i3634
  %3160 = load i32, i32* %arrayidx89.i3635, align 4
  %xor90.i3636 = xor i32 %xor85.i3632, %3160
  %3161 = load i32, i32* %l.i3466, align 4
  %xor91.i3637 = xor i32 %3161, %xor90.i3636
  store i32 %xor91.i3637, i32* %l.i3466, align 4
  %3162 = load i32, i32* %l.i3466, align 4
  %3163 = load i32*, i32** %s.i3470, align 8
  %arrayidx92.i3638 = getelementptr inbounds i32, i32* %3163, i64 2
  %3164 = load i32, i32* %arrayidx92.i3638, align 4
  %xor93.i3639 = xor i32 %3162, %3164
  store i32 %xor93.i3639, i32* %u.i3469, align 4
  %3165 = load i32, i32* %l.i3466, align 4
  %3166 = load i32*, i32** %s.i3470, align 8
  %arrayidx94.i3640 = getelementptr inbounds i32, i32* %3166, i64 3
  %3167 = load i32, i32* %arrayidx94.i3640, align 4
  %xor95.i3641 = xor i32 %3165, %3167
  store i32 %xor95.i3641, i32* %t.i3468, align 4
  %3168 = load i32, i32* %t.i3468, align 4
  %3169 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3168) #5, !srcloc !5
  store i32 %3169, i32* %ret96.i3478, align 4
  %3170 = load i32, i32* %ret96.i3478, align 4
  store i32 %3170, i32* %tmp97.i3479, align 4
  %3171 = load i32, i32* %tmp97.i3479, align 4
  store i32 %3171, i32* %t.i3468, align 4
  %3172 = load i32, i32* %u.i3469, align 4
  %shr98.i3642 = lshr i32 %3172, 2
  %and99.i3643 = and i32 %shr98.i3642, 63
  %idxprom100.i3644 = zext i32 %and99.i3643 to i64
  %arrayidx101.i3645 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i3644
  %3173 = load i32, i32* %arrayidx101.i3645, align 4
  %3174 = load i32, i32* %u.i3469, align 4
  %shr102.i3646 = lshr i32 %3174, 10
  %and103.i3647 = and i32 %shr102.i3646, 63
  %idxprom104.i3648 = zext i32 %and103.i3647 to i64
  %arrayidx105.i3649 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i3648
  %3175 = load i32, i32* %arrayidx105.i3649, align 4
  %xor106.i3650 = xor i32 %3173, %3175
  %3176 = load i32, i32* %u.i3469, align 4
  %shr107.i3651 = lshr i32 %3176, 18
  %and108.i3652 = and i32 %shr107.i3651, 63
  %idxprom109.i3653 = zext i32 %and108.i3652 to i64
  %arrayidx110.i3654 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i3653
  %3177 = load i32, i32* %arrayidx110.i3654, align 4
  %xor111.i3655 = xor i32 %xor106.i3650, %3177
  %3178 = load i32, i32* %u.i3469, align 4
  %shr112.i3656 = lshr i32 %3178, 26
  %idxprom114.i3657 = zext i32 %shr112.i3656 to i64
  %arrayidx115.i3658 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i3657
  %3179 = load i32, i32* %arrayidx115.i3658, align 4
  %xor116.i3659 = xor i32 %xor111.i3655, %3179
  %3180 = load i32, i32* %t.i3468, align 4
  %shr117.i3660 = lshr i32 %3180, 2
  %and118.i3661 = and i32 %shr117.i3660, 63
  %idxprom119.i3662 = zext i32 %and118.i3661 to i64
  %arrayidx120.i3663 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i3662
  %3181 = load i32, i32* %arrayidx120.i3663, align 4
  %xor121.i3664 = xor i32 %xor116.i3659, %3181
  %3182 = load i32, i32* %t.i3468, align 4
  %shr122.i3665 = lshr i32 %3182, 10
  %and123.i3666 = and i32 %shr122.i3665, 63
  %idxprom124.i3667 = zext i32 %and123.i3666 to i64
  %arrayidx125.i3668 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i3667
  %3183 = load i32, i32* %arrayidx125.i3668, align 4
  %xor126.i3669 = xor i32 %xor121.i3664, %3183
  %3184 = load i32, i32* %t.i3468, align 4
  %shr127.i3670 = lshr i32 %3184, 18
  %and128.i3671 = and i32 %shr127.i3670, 63
  %idxprom129.i3672 = zext i32 %and128.i3671 to i64
  %arrayidx130.i3673 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i3672
  %3185 = load i32, i32* %arrayidx130.i3673, align 4
  %xor131.i3674 = xor i32 %xor126.i3669, %3185
  %3186 = load i32, i32* %t.i3468, align 4
  %shr132.i3675 = lshr i32 %3186, 26
  %idxprom134.i3676 = zext i32 %shr132.i3675 to i64
  %arrayidx135.i3677 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i3676
  %3187 = load i32, i32* %arrayidx135.i3677, align 4
  %xor136.i3678 = xor i32 %xor131.i3674, %3187
  %3188 = load i32, i32* %r.i3467, align 4
  %xor137.i3679 = xor i32 %3188, %xor136.i3678
  store i32 %xor137.i3679, i32* %r.i3467, align 4
  %3189 = load i32, i32* %r.i3467, align 4
  %3190 = load i32*, i32** %s.i3470, align 8
  %arrayidx138.i3680 = getelementptr inbounds i32, i32* %3190, i64 4
  %3191 = load i32, i32* %arrayidx138.i3680, align 4
  %xor139.i3681 = xor i32 %3189, %3191
  store i32 %xor139.i3681, i32* %u.i3469, align 4
  %3192 = load i32, i32* %r.i3467, align 4
  %3193 = load i32*, i32** %s.i3470, align 8
  %arrayidx140.i3682 = getelementptr inbounds i32, i32* %3193, i64 5
  %3194 = load i32, i32* %arrayidx140.i3682, align 4
  %xor141.i3683 = xor i32 %3192, %3194
  store i32 %xor141.i3683, i32* %t.i3468, align 4
  %3195 = load i32, i32* %t.i3468, align 4
  %3196 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3195) #5, !srcloc !6
  store i32 %3196, i32* %ret142.i3480, align 4
  %3197 = load i32, i32* %ret142.i3480, align 4
  store i32 %3197, i32* %tmp143.i3481, align 4
  %3198 = load i32, i32* %tmp143.i3481, align 4
  store i32 %3198, i32* %t.i3468, align 4
  %3199 = load i32, i32* %u.i3469, align 4
  %shr144.i3684 = lshr i32 %3199, 2
  %and145.i3685 = and i32 %shr144.i3684, 63
  %idxprom146.i3686 = zext i32 %and145.i3685 to i64
  %arrayidx147.i3687 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i3686
  %3200 = load i32, i32* %arrayidx147.i3687, align 4
  %3201 = load i32, i32* %u.i3469, align 4
  %shr148.i3688 = lshr i32 %3201, 10
  %and149.i3689 = and i32 %shr148.i3688, 63
  %idxprom150.i3690 = zext i32 %and149.i3689 to i64
  %arrayidx151.i3691 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i3690
  %3202 = load i32, i32* %arrayidx151.i3691, align 4
  %xor152.i3692 = xor i32 %3200, %3202
  %3203 = load i32, i32* %u.i3469, align 4
  %shr153.i3693 = lshr i32 %3203, 18
  %and154.i3694 = and i32 %shr153.i3693, 63
  %idxprom155.i3695 = zext i32 %and154.i3694 to i64
  %arrayidx156.i3696 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i3695
  %3204 = load i32, i32* %arrayidx156.i3696, align 4
  %xor157.i3697 = xor i32 %xor152.i3692, %3204
  %3205 = load i32, i32* %u.i3469, align 4
  %shr158.i3698 = lshr i32 %3205, 26
  %idxprom160.i3699 = zext i32 %shr158.i3698 to i64
  %arrayidx161.i3700 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i3699
  %3206 = load i32, i32* %arrayidx161.i3700, align 4
  %xor162.i3701 = xor i32 %xor157.i3697, %3206
  %3207 = load i32, i32* %t.i3468, align 4
  %shr163.i3702 = lshr i32 %3207, 2
  %and164.i3703 = and i32 %shr163.i3702, 63
  %idxprom165.i3704 = zext i32 %and164.i3703 to i64
  %arrayidx166.i3705 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i3704
  %3208 = load i32, i32* %arrayidx166.i3705, align 4
  %xor167.i3706 = xor i32 %xor162.i3701, %3208
  %3209 = load i32, i32* %t.i3468, align 4
  %shr168.i3707 = lshr i32 %3209, 10
  %and169.i3708 = and i32 %shr168.i3707, 63
  %idxprom170.i3709 = zext i32 %and169.i3708 to i64
  %arrayidx171.i3710 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i3709
  %3210 = load i32, i32* %arrayidx171.i3710, align 4
  %xor172.i3711 = xor i32 %xor167.i3706, %3210
  %3211 = load i32, i32* %t.i3468, align 4
  %shr173.i3712 = lshr i32 %3211, 18
  %and174.i3713 = and i32 %shr173.i3712, 63
  %idxprom175.i3714 = zext i32 %and174.i3713 to i64
  %arrayidx176.i3715 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i3714
  %3212 = load i32, i32* %arrayidx176.i3715, align 4
  %xor177.i3716 = xor i32 %xor172.i3711, %3212
  %3213 = load i32, i32* %t.i3468, align 4
  %shr178.i3717 = lshr i32 %3213, 26
  %idxprom180.i3718 = zext i32 %shr178.i3717 to i64
  %arrayidx181.i3719 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i3718
  %3214 = load i32, i32* %arrayidx181.i3719, align 4
  %xor182.i3720 = xor i32 %xor177.i3716, %3214
  %3215 = load i32, i32* %l.i3466, align 4
  %xor183.i3721 = xor i32 %3215, %xor182.i3720
  store i32 %xor183.i3721, i32* %l.i3466, align 4
  %3216 = load i32, i32* %l.i3466, align 4
  %3217 = load i32*, i32** %s.i3470, align 8
  %arrayidx184.i3722 = getelementptr inbounds i32, i32* %3217, i64 6
  %3218 = load i32, i32* %arrayidx184.i3722, align 4
  %xor185.i3723 = xor i32 %3216, %3218
  store i32 %xor185.i3723, i32* %u.i3469, align 4
  %3219 = load i32, i32* %l.i3466, align 4
  %3220 = load i32*, i32** %s.i3470, align 8
  %arrayidx186.i3724 = getelementptr inbounds i32, i32* %3220, i64 7
  %3221 = load i32, i32* %arrayidx186.i3724, align 4
  %xor187.i3725 = xor i32 %3219, %3221
  store i32 %xor187.i3725, i32* %t.i3468, align 4
  %3222 = load i32, i32* %t.i3468, align 4
  %3223 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3222) #5, !srcloc !7
  store i32 %3223, i32* %ret188.i3482, align 4
  %3224 = load i32, i32* %ret188.i3482, align 4
  store i32 %3224, i32* %tmp189.i3483, align 4
  %3225 = load i32, i32* %tmp189.i3483, align 4
  store i32 %3225, i32* %t.i3468, align 4
  %3226 = load i32, i32* %u.i3469, align 4
  %shr190.i3726 = lshr i32 %3226, 2
  %and191.i3727 = and i32 %shr190.i3726, 63
  %idxprom192.i3728 = zext i32 %and191.i3727 to i64
  %arrayidx193.i3729 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i3728
  %3227 = load i32, i32* %arrayidx193.i3729, align 4
  %3228 = load i32, i32* %u.i3469, align 4
  %shr194.i3730 = lshr i32 %3228, 10
  %and195.i3731 = and i32 %shr194.i3730, 63
  %idxprom196.i3732 = zext i32 %and195.i3731 to i64
  %arrayidx197.i3733 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i3732
  %3229 = load i32, i32* %arrayidx197.i3733, align 4
  %xor198.i3734 = xor i32 %3227, %3229
  %3230 = load i32, i32* %u.i3469, align 4
  %shr199.i3735 = lshr i32 %3230, 18
  %and200.i3736 = and i32 %shr199.i3735, 63
  %idxprom201.i3737 = zext i32 %and200.i3736 to i64
  %arrayidx202.i3738 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i3737
  %3231 = load i32, i32* %arrayidx202.i3738, align 4
  %xor203.i3739 = xor i32 %xor198.i3734, %3231
  %3232 = load i32, i32* %u.i3469, align 4
  %shr204.i3740 = lshr i32 %3232, 26
  %idxprom206.i3741 = zext i32 %shr204.i3740 to i64
  %arrayidx207.i3742 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i3741
  %3233 = load i32, i32* %arrayidx207.i3742, align 4
  %xor208.i3743 = xor i32 %xor203.i3739, %3233
  %3234 = load i32, i32* %t.i3468, align 4
  %shr209.i3744 = lshr i32 %3234, 2
  %and210.i3745 = and i32 %shr209.i3744, 63
  %idxprom211.i3746 = zext i32 %and210.i3745 to i64
  %arrayidx212.i3747 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i3746
  %3235 = load i32, i32* %arrayidx212.i3747, align 4
  %xor213.i3748 = xor i32 %xor208.i3743, %3235
  %3236 = load i32, i32* %t.i3468, align 4
  %shr214.i3749 = lshr i32 %3236, 10
  %and215.i3750 = and i32 %shr214.i3749, 63
  %idxprom216.i3751 = zext i32 %and215.i3750 to i64
  %arrayidx217.i3752 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i3751
  %3237 = load i32, i32* %arrayidx217.i3752, align 4
  %xor218.i3753 = xor i32 %xor213.i3748, %3237
  %3238 = load i32, i32* %t.i3468, align 4
  %shr219.i3754 = lshr i32 %3238, 18
  %and220.i3755 = and i32 %shr219.i3754, 63
  %idxprom221.i3756 = zext i32 %and220.i3755 to i64
  %arrayidx222.i3757 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i3756
  %3239 = load i32, i32* %arrayidx222.i3757, align 4
  %xor223.i3758 = xor i32 %xor218.i3753, %3239
  %3240 = load i32, i32* %t.i3468, align 4
  %shr224.i3759 = lshr i32 %3240, 26
  %idxprom226.i3760 = zext i32 %shr224.i3759 to i64
  %arrayidx227.i3761 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i3760
  %3241 = load i32, i32* %arrayidx227.i3761, align 4
  %xor228.i3762 = xor i32 %xor223.i3758, %3241
  %3242 = load i32, i32* %r.i3467, align 4
  %xor229.i3763 = xor i32 %3242, %xor228.i3762
  store i32 %xor229.i3763, i32* %r.i3467, align 4
  %3243 = load i32, i32* %r.i3467, align 4
  %3244 = load i32*, i32** %s.i3470, align 8
  %arrayidx230.i3764 = getelementptr inbounds i32, i32* %3244, i64 8
  %3245 = load i32, i32* %arrayidx230.i3764, align 4
  %xor231.i3765 = xor i32 %3243, %3245
  store i32 %xor231.i3765, i32* %u.i3469, align 4
  %3246 = load i32, i32* %r.i3467, align 4
  %3247 = load i32*, i32** %s.i3470, align 8
  %arrayidx232.i3766 = getelementptr inbounds i32, i32* %3247, i64 9
  %3248 = load i32, i32* %arrayidx232.i3766, align 4
  %xor233.i3767 = xor i32 %3246, %3248
  store i32 %xor233.i3767, i32* %t.i3468, align 4
  %3249 = load i32, i32* %t.i3468, align 4
  %3250 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3249) #5, !srcloc !8
  store i32 %3250, i32* %ret234.i3484, align 4
  %3251 = load i32, i32* %ret234.i3484, align 4
  store i32 %3251, i32* %tmp235.i3485, align 4
  %3252 = load i32, i32* %tmp235.i3485, align 4
  store i32 %3252, i32* %t.i3468, align 4
  %3253 = load i32, i32* %u.i3469, align 4
  %shr236.i3768 = lshr i32 %3253, 2
  %and237.i3769 = and i32 %shr236.i3768, 63
  %idxprom238.i3770 = zext i32 %and237.i3769 to i64
  %arrayidx239.i3771 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i3770
  %3254 = load i32, i32* %arrayidx239.i3771, align 4
  %3255 = load i32, i32* %u.i3469, align 4
  %shr240.i3772 = lshr i32 %3255, 10
  %and241.i3773 = and i32 %shr240.i3772, 63
  %idxprom242.i3774 = zext i32 %and241.i3773 to i64
  %arrayidx243.i3775 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i3774
  %3256 = load i32, i32* %arrayidx243.i3775, align 4
  %xor244.i3776 = xor i32 %3254, %3256
  %3257 = load i32, i32* %u.i3469, align 4
  %shr245.i3777 = lshr i32 %3257, 18
  %and246.i3778 = and i32 %shr245.i3777, 63
  %idxprom247.i3779 = zext i32 %and246.i3778 to i64
  %arrayidx248.i3780 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i3779
  %3258 = load i32, i32* %arrayidx248.i3780, align 4
  %xor249.i3781 = xor i32 %xor244.i3776, %3258
  %3259 = load i32, i32* %u.i3469, align 4
  %shr250.i3782 = lshr i32 %3259, 26
  %idxprom252.i3783 = zext i32 %shr250.i3782 to i64
  %arrayidx253.i3784 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i3783
  %3260 = load i32, i32* %arrayidx253.i3784, align 4
  %xor254.i3785 = xor i32 %xor249.i3781, %3260
  %3261 = load i32, i32* %t.i3468, align 4
  %shr255.i3786 = lshr i32 %3261, 2
  %and256.i3787 = and i32 %shr255.i3786, 63
  %idxprom257.i3788 = zext i32 %and256.i3787 to i64
  %arrayidx258.i3789 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i3788
  %3262 = load i32, i32* %arrayidx258.i3789, align 4
  %xor259.i3790 = xor i32 %xor254.i3785, %3262
  %3263 = load i32, i32* %t.i3468, align 4
  %shr260.i3791 = lshr i32 %3263, 10
  %and261.i3792 = and i32 %shr260.i3791, 63
  %idxprom262.i3793 = zext i32 %and261.i3792 to i64
  %arrayidx263.i3794 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i3793
  %3264 = load i32, i32* %arrayidx263.i3794, align 4
  %xor264.i3795 = xor i32 %xor259.i3790, %3264
  %3265 = load i32, i32* %t.i3468, align 4
  %shr265.i3796 = lshr i32 %3265, 18
  %and266.i3797 = and i32 %shr265.i3796, 63
  %idxprom267.i3798 = zext i32 %and266.i3797 to i64
  %arrayidx268.i3799 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i3798
  %3266 = load i32, i32* %arrayidx268.i3799, align 4
  %xor269.i3800 = xor i32 %xor264.i3795, %3266
  %3267 = load i32, i32* %t.i3468, align 4
  %shr270.i3801 = lshr i32 %3267, 26
  %idxprom272.i3802 = zext i32 %shr270.i3801 to i64
  %arrayidx273.i3803 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i3802
  %3268 = load i32, i32* %arrayidx273.i3803, align 4
  %xor274.i3804 = xor i32 %xor269.i3800, %3268
  %3269 = load i32, i32* %l.i3466, align 4
  %xor275.i3805 = xor i32 %3269, %xor274.i3804
  store i32 %xor275.i3805, i32* %l.i3466, align 4
  %3270 = load i32, i32* %l.i3466, align 4
  %3271 = load i32*, i32** %s.i3470, align 8
  %arrayidx276.i3806 = getelementptr inbounds i32, i32* %3271, i64 10
  %3272 = load i32, i32* %arrayidx276.i3806, align 4
  %xor277.i3807 = xor i32 %3270, %3272
  store i32 %xor277.i3807, i32* %u.i3469, align 4
  %3273 = load i32, i32* %l.i3466, align 4
  %3274 = load i32*, i32** %s.i3470, align 8
  %arrayidx278.i3808 = getelementptr inbounds i32, i32* %3274, i64 11
  %3275 = load i32, i32* %arrayidx278.i3808, align 4
  %xor279.i3809 = xor i32 %3273, %3275
  store i32 %xor279.i3809, i32* %t.i3468, align 4
  %3276 = load i32, i32* %t.i3468, align 4
  %3277 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3276) #5, !srcloc !9
  store i32 %3277, i32* %ret280.i3486, align 4
  %3278 = load i32, i32* %ret280.i3486, align 4
  store i32 %3278, i32* %tmp281.i3487, align 4
  %3279 = load i32, i32* %tmp281.i3487, align 4
  store i32 %3279, i32* %t.i3468, align 4
  %3280 = load i32, i32* %u.i3469, align 4
  %shr282.i3810 = lshr i32 %3280, 2
  %and283.i3811 = and i32 %shr282.i3810, 63
  %idxprom284.i3812 = zext i32 %and283.i3811 to i64
  %arrayidx285.i3813 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i3812
  %3281 = load i32, i32* %arrayidx285.i3813, align 4
  %3282 = load i32, i32* %u.i3469, align 4
  %shr286.i3814 = lshr i32 %3282, 10
  %and287.i3815 = and i32 %shr286.i3814, 63
  %idxprom288.i3816 = zext i32 %and287.i3815 to i64
  %arrayidx289.i3817 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i3816
  %3283 = load i32, i32* %arrayidx289.i3817, align 4
  %xor290.i3818 = xor i32 %3281, %3283
  %3284 = load i32, i32* %u.i3469, align 4
  %shr291.i3819 = lshr i32 %3284, 18
  %and292.i3820 = and i32 %shr291.i3819, 63
  %idxprom293.i3821 = zext i32 %and292.i3820 to i64
  %arrayidx294.i3822 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i3821
  %3285 = load i32, i32* %arrayidx294.i3822, align 4
  %xor295.i3823 = xor i32 %xor290.i3818, %3285
  %3286 = load i32, i32* %u.i3469, align 4
  %shr296.i3824 = lshr i32 %3286, 26
  %idxprom298.i3825 = zext i32 %shr296.i3824 to i64
  %arrayidx299.i3826 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i3825
  %3287 = load i32, i32* %arrayidx299.i3826, align 4
  %xor300.i3827 = xor i32 %xor295.i3823, %3287
  %3288 = load i32, i32* %t.i3468, align 4
  %shr301.i3828 = lshr i32 %3288, 2
  %and302.i3829 = and i32 %shr301.i3828, 63
  %idxprom303.i3830 = zext i32 %and302.i3829 to i64
  %arrayidx304.i3831 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i3830
  %3289 = load i32, i32* %arrayidx304.i3831, align 4
  %xor305.i3832 = xor i32 %xor300.i3827, %3289
  %3290 = load i32, i32* %t.i3468, align 4
  %shr306.i3833 = lshr i32 %3290, 10
  %and307.i3834 = and i32 %shr306.i3833, 63
  %idxprom308.i3835 = zext i32 %and307.i3834 to i64
  %arrayidx309.i3836 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i3835
  %3291 = load i32, i32* %arrayidx309.i3836, align 4
  %xor310.i3837 = xor i32 %xor305.i3832, %3291
  %3292 = load i32, i32* %t.i3468, align 4
  %shr311.i3838 = lshr i32 %3292, 18
  %and312.i3839 = and i32 %shr311.i3838, 63
  %idxprom313.i3840 = zext i32 %and312.i3839 to i64
  %arrayidx314.i3841 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i3840
  %3293 = load i32, i32* %arrayidx314.i3841, align 4
  %xor315.i3842 = xor i32 %xor310.i3837, %3293
  %3294 = load i32, i32* %t.i3468, align 4
  %shr316.i3843 = lshr i32 %3294, 26
  %idxprom318.i3844 = zext i32 %shr316.i3843 to i64
  %arrayidx319.i3845 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i3844
  %3295 = load i32, i32* %arrayidx319.i3845, align 4
  %xor320.i3846 = xor i32 %xor315.i3842, %3295
  %3296 = load i32, i32* %r.i3467, align 4
  %xor321.i3847 = xor i32 %3296, %xor320.i3846
  store i32 %xor321.i3847, i32* %r.i3467, align 4
  %3297 = load i32, i32* %r.i3467, align 4
  %3298 = load i32*, i32** %s.i3470, align 8
  %arrayidx322.i3848 = getelementptr inbounds i32, i32* %3298, i64 12
  %3299 = load i32, i32* %arrayidx322.i3848, align 4
  %xor323.i3849 = xor i32 %3297, %3299
  store i32 %xor323.i3849, i32* %u.i3469, align 4
  %3300 = load i32, i32* %r.i3467, align 4
  %3301 = load i32*, i32** %s.i3470, align 8
  %arrayidx324.i3850 = getelementptr inbounds i32, i32* %3301, i64 13
  %3302 = load i32, i32* %arrayidx324.i3850, align 4
  %xor325.i3851 = xor i32 %3300, %3302
  store i32 %xor325.i3851, i32* %t.i3468, align 4
  %3303 = load i32, i32* %t.i3468, align 4
  %3304 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3303) #5, !srcloc !10
  store i32 %3304, i32* %ret326.i3488, align 4
  %3305 = load i32, i32* %ret326.i3488, align 4
  store i32 %3305, i32* %tmp327.i3489, align 4
  %3306 = load i32, i32* %tmp327.i3489, align 4
  store i32 %3306, i32* %t.i3468, align 4
  %3307 = load i32, i32* %u.i3469, align 4
  %shr328.i3852 = lshr i32 %3307, 2
  %and329.i3853 = and i32 %shr328.i3852, 63
  %idxprom330.i3854 = zext i32 %and329.i3853 to i64
  %arrayidx331.i3855 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i3854
  %3308 = load i32, i32* %arrayidx331.i3855, align 4
  %3309 = load i32, i32* %u.i3469, align 4
  %shr332.i3856 = lshr i32 %3309, 10
  %and333.i3857 = and i32 %shr332.i3856, 63
  %idxprom334.i3858 = zext i32 %and333.i3857 to i64
  %arrayidx335.i3859 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i3858
  %3310 = load i32, i32* %arrayidx335.i3859, align 4
  %xor336.i3860 = xor i32 %3308, %3310
  %3311 = load i32, i32* %u.i3469, align 4
  %shr337.i3861 = lshr i32 %3311, 18
  %and338.i3862 = and i32 %shr337.i3861, 63
  %idxprom339.i3863 = zext i32 %and338.i3862 to i64
  %arrayidx340.i3864 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i3863
  %3312 = load i32, i32* %arrayidx340.i3864, align 4
  %xor341.i3865 = xor i32 %xor336.i3860, %3312
  %3313 = load i32, i32* %u.i3469, align 4
  %shr342.i3866 = lshr i32 %3313, 26
  %idxprom344.i3867 = zext i32 %shr342.i3866 to i64
  %arrayidx345.i3868 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i3867
  %3314 = load i32, i32* %arrayidx345.i3868, align 4
  %xor346.i3869 = xor i32 %xor341.i3865, %3314
  %3315 = load i32, i32* %t.i3468, align 4
  %shr347.i3870 = lshr i32 %3315, 2
  %and348.i3871 = and i32 %shr347.i3870, 63
  %idxprom349.i3872 = zext i32 %and348.i3871 to i64
  %arrayidx350.i3873 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i3872
  %3316 = load i32, i32* %arrayidx350.i3873, align 4
  %xor351.i3874 = xor i32 %xor346.i3869, %3316
  %3317 = load i32, i32* %t.i3468, align 4
  %shr352.i3875 = lshr i32 %3317, 10
  %and353.i3876 = and i32 %shr352.i3875, 63
  %idxprom354.i3877 = zext i32 %and353.i3876 to i64
  %arrayidx355.i3878 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i3877
  %3318 = load i32, i32* %arrayidx355.i3878, align 4
  %xor356.i3879 = xor i32 %xor351.i3874, %3318
  %3319 = load i32, i32* %t.i3468, align 4
  %shr357.i3880 = lshr i32 %3319, 18
  %and358.i3881 = and i32 %shr357.i3880, 63
  %idxprom359.i3882 = zext i32 %and358.i3881 to i64
  %arrayidx360.i3883 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i3882
  %3320 = load i32, i32* %arrayidx360.i3883, align 4
  %xor361.i3884 = xor i32 %xor356.i3879, %3320
  %3321 = load i32, i32* %t.i3468, align 4
  %shr362.i3885 = lshr i32 %3321, 26
  %idxprom364.i3886 = zext i32 %shr362.i3885 to i64
  %arrayidx365.i3887 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i3886
  %3322 = load i32, i32* %arrayidx365.i3887, align 4
  %xor366.i3888 = xor i32 %xor361.i3884, %3322
  %3323 = load i32, i32* %l.i3466, align 4
  %xor367.i3889 = xor i32 %3323, %xor366.i3888
  store i32 %xor367.i3889, i32* %l.i3466, align 4
  %3324 = load i32, i32* %l.i3466, align 4
  %3325 = load i32*, i32** %s.i3470, align 8
  %arrayidx368.i3890 = getelementptr inbounds i32, i32* %3325, i64 14
  %3326 = load i32, i32* %arrayidx368.i3890, align 4
  %xor369.i3891 = xor i32 %3324, %3326
  store i32 %xor369.i3891, i32* %u.i3469, align 4
  %3327 = load i32, i32* %l.i3466, align 4
  %3328 = load i32*, i32** %s.i3470, align 8
  %arrayidx370.i3892 = getelementptr inbounds i32, i32* %3328, i64 15
  %3329 = load i32, i32* %arrayidx370.i3892, align 4
  %xor371.i3893 = xor i32 %3327, %3329
  store i32 %xor371.i3893, i32* %t.i3468, align 4
  %3330 = load i32, i32* %t.i3468, align 4
  %3331 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3330) #5, !srcloc !11
  store i32 %3331, i32* %ret372.i3490, align 4
  %3332 = load i32, i32* %ret372.i3490, align 4
  store i32 %3332, i32* %tmp373.i3491, align 4
  %3333 = load i32, i32* %tmp373.i3491, align 4
  store i32 %3333, i32* %t.i3468, align 4
  %3334 = load i32, i32* %u.i3469, align 4
  %shr374.i3894 = lshr i32 %3334, 2
  %and375.i3895 = and i32 %shr374.i3894, 63
  %idxprom376.i3896 = zext i32 %and375.i3895 to i64
  %arrayidx377.i3897 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i3896
  %3335 = load i32, i32* %arrayidx377.i3897, align 4
  %3336 = load i32, i32* %u.i3469, align 4
  %shr378.i3898 = lshr i32 %3336, 10
  %and379.i3899 = and i32 %shr378.i3898, 63
  %idxprom380.i3900 = zext i32 %and379.i3899 to i64
  %arrayidx381.i3901 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i3900
  %3337 = load i32, i32* %arrayidx381.i3901, align 4
  %xor382.i3902 = xor i32 %3335, %3337
  %3338 = load i32, i32* %u.i3469, align 4
  %shr383.i3903 = lshr i32 %3338, 18
  %and384.i3904 = and i32 %shr383.i3903, 63
  %idxprom385.i3905 = zext i32 %and384.i3904 to i64
  %arrayidx386.i3906 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i3905
  %3339 = load i32, i32* %arrayidx386.i3906, align 4
  %xor387.i3907 = xor i32 %xor382.i3902, %3339
  %3340 = load i32, i32* %u.i3469, align 4
  %shr388.i3908 = lshr i32 %3340, 26
  %idxprom390.i3909 = zext i32 %shr388.i3908 to i64
  %arrayidx391.i3910 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i3909
  %3341 = load i32, i32* %arrayidx391.i3910, align 4
  %xor392.i3911 = xor i32 %xor387.i3907, %3341
  %3342 = load i32, i32* %t.i3468, align 4
  %shr393.i3912 = lshr i32 %3342, 2
  %and394.i3913 = and i32 %shr393.i3912, 63
  %idxprom395.i3914 = zext i32 %and394.i3913 to i64
  %arrayidx396.i3915 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i3914
  %3343 = load i32, i32* %arrayidx396.i3915, align 4
  %xor397.i3916 = xor i32 %xor392.i3911, %3343
  %3344 = load i32, i32* %t.i3468, align 4
  %shr398.i3917 = lshr i32 %3344, 10
  %and399.i3918 = and i32 %shr398.i3917, 63
  %idxprom400.i3919 = zext i32 %and399.i3918 to i64
  %arrayidx401.i3920 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i3919
  %3345 = load i32, i32* %arrayidx401.i3920, align 4
  %xor402.i3921 = xor i32 %xor397.i3916, %3345
  %3346 = load i32, i32* %t.i3468, align 4
  %shr403.i3922 = lshr i32 %3346, 18
  %and404.i3923 = and i32 %shr403.i3922, 63
  %idxprom405.i3924 = zext i32 %and404.i3923 to i64
  %arrayidx406.i3925 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i3924
  %3347 = load i32, i32* %arrayidx406.i3925, align 4
  %xor407.i3926 = xor i32 %xor402.i3921, %3347
  %3348 = load i32, i32* %t.i3468, align 4
  %shr408.i3927 = lshr i32 %3348, 26
  %idxprom410.i3928 = zext i32 %shr408.i3927 to i64
  %arrayidx411.i3929 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i3928
  %3349 = load i32, i32* %arrayidx411.i3929, align 4
  %xor412.i3930 = xor i32 %xor407.i3926, %3349
  %3350 = load i32, i32* %r.i3467, align 4
  %xor413.i3931 = xor i32 %3350, %xor412.i3930
  store i32 %xor413.i3931, i32* %r.i3467, align 4
  %3351 = load i32, i32* %r.i3467, align 4
  %3352 = load i32*, i32** %s.i3470, align 8
  %arrayidx414.i3932 = getelementptr inbounds i32, i32* %3352, i64 16
  %3353 = load i32, i32* %arrayidx414.i3932, align 4
  %xor415.i3933 = xor i32 %3351, %3353
  store i32 %xor415.i3933, i32* %u.i3469, align 4
  %3354 = load i32, i32* %r.i3467, align 4
  %3355 = load i32*, i32** %s.i3470, align 8
  %arrayidx416.i3934 = getelementptr inbounds i32, i32* %3355, i64 17
  %3356 = load i32, i32* %arrayidx416.i3934, align 4
  %xor417.i3935 = xor i32 %3354, %3356
  store i32 %xor417.i3935, i32* %t.i3468, align 4
  %3357 = load i32, i32* %t.i3468, align 4
  %3358 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3357) #5, !srcloc !12
  store i32 %3358, i32* %ret418.i3492, align 4
  %3359 = load i32, i32* %ret418.i3492, align 4
  store i32 %3359, i32* %tmp419.i3493, align 4
  %3360 = load i32, i32* %tmp419.i3493, align 4
  store i32 %3360, i32* %t.i3468, align 4
  %3361 = load i32, i32* %u.i3469, align 4
  %shr420.i3936 = lshr i32 %3361, 2
  %and421.i3937 = and i32 %shr420.i3936, 63
  %idxprom422.i3938 = zext i32 %and421.i3937 to i64
  %arrayidx423.i3939 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i3938
  %3362 = load i32, i32* %arrayidx423.i3939, align 4
  %3363 = load i32, i32* %u.i3469, align 4
  %shr424.i3940 = lshr i32 %3363, 10
  %and425.i3941 = and i32 %shr424.i3940, 63
  %idxprom426.i3942 = zext i32 %and425.i3941 to i64
  %arrayidx427.i3943 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i3942
  %3364 = load i32, i32* %arrayidx427.i3943, align 4
  %xor428.i3944 = xor i32 %3362, %3364
  %3365 = load i32, i32* %u.i3469, align 4
  %shr429.i3945 = lshr i32 %3365, 18
  %and430.i3946 = and i32 %shr429.i3945, 63
  %idxprom431.i3947 = zext i32 %and430.i3946 to i64
  %arrayidx432.i3948 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i3947
  %3366 = load i32, i32* %arrayidx432.i3948, align 4
  %xor433.i3949 = xor i32 %xor428.i3944, %3366
  %3367 = load i32, i32* %u.i3469, align 4
  %shr434.i3950 = lshr i32 %3367, 26
  %idxprom436.i3951 = zext i32 %shr434.i3950 to i64
  %arrayidx437.i3952 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i3951
  %3368 = load i32, i32* %arrayidx437.i3952, align 4
  %xor438.i3953 = xor i32 %xor433.i3949, %3368
  %3369 = load i32, i32* %t.i3468, align 4
  %shr439.i3954 = lshr i32 %3369, 2
  %and440.i3955 = and i32 %shr439.i3954, 63
  %idxprom441.i3956 = zext i32 %and440.i3955 to i64
  %arrayidx442.i3957 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i3956
  %3370 = load i32, i32* %arrayidx442.i3957, align 4
  %xor443.i3958 = xor i32 %xor438.i3953, %3370
  %3371 = load i32, i32* %t.i3468, align 4
  %shr444.i3959 = lshr i32 %3371, 10
  %and445.i3960 = and i32 %shr444.i3959, 63
  %idxprom446.i3961 = zext i32 %and445.i3960 to i64
  %arrayidx447.i3962 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i3961
  %3372 = load i32, i32* %arrayidx447.i3962, align 4
  %xor448.i3963 = xor i32 %xor443.i3958, %3372
  %3373 = load i32, i32* %t.i3468, align 4
  %shr449.i3964 = lshr i32 %3373, 18
  %and450.i3965 = and i32 %shr449.i3964, 63
  %idxprom451.i3966 = zext i32 %and450.i3965 to i64
  %arrayidx452.i3967 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i3966
  %3374 = load i32, i32* %arrayidx452.i3967, align 4
  %xor453.i3968 = xor i32 %xor448.i3963, %3374
  %3375 = load i32, i32* %t.i3468, align 4
  %shr454.i3969 = lshr i32 %3375, 26
  %idxprom456.i3970 = zext i32 %shr454.i3969 to i64
  %arrayidx457.i3971 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i3970
  %3376 = load i32, i32* %arrayidx457.i3971, align 4
  %xor458.i3972 = xor i32 %xor453.i3968, %3376
  %3377 = load i32, i32* %l.i3466, align 4
  %xor459.i3973 = xor i32 %3377, %xor458.i3972
  store i32 %xor459.i3973, i32* %l.i3466, align 4
  %3378 = load i32, i32* %l.i3466, align 4
  %3379 = load i32*, i32** %s.i3470, align 8
  %arrayidx460.i3974 = getelementptr inbounds i32, i32* %3379, i64 18
  %3380 = load i32, i32* %arrayidx460.i3974, align 4
  %xor461.i3975 = xor i32 %3378, %3380
  store i32 %xor461.i3975, i32* %u.i3469, align 4
  %3381 = load i32, i32* %l.i3466, align 4
  %3382 = load i32*, i32** %s.i3470, align 8
  %arrayidx462.i3976 = getelementptr inbounds i32, i32* %3382, i64 19
  %3383 = load i32, i32* %arrayidx462.i3976, align 4
  %xor463.i3977 = xor i32 %3381, %3383
  store i32 %xor463.i3977, i32* %t.i3468, align 4
  %3384 = load i32, i32* %t.i3468, align 4
  %3385 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3384) #5, !srcloc !13
  store i32 %3385, i32* %ret464.i3494, align 4
  %3386 = load i32, i32* %ret464.i3494, align 4
  store i32 %3386, i32* %tmp465.i3495, align 4
  %3387 = load i32, i32* %tmp465.i3495, align 4
  store i32 %3387, i32* %t.i3468, align 4
  %3388 = load i32, i32* %u.i3469, align 4
  %shr466.i3978 = lshr i32 %3388, 2
  %and467.i3979 = and i32 %shr466.i3978, 63
  %idxprom468.i3980 = zext i32 %and467.i3979 to i64
  %arrayidx469.i3981 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i3980
  %3389 = load i32, i32* %arrayidx469.i3981, align 4
  %3390 = load i32, i32* %u.i3469, align 4
  %shr470.i3982 = lshr i32 %3390, 10
  %and471.i3983 = and i32 %shr470.i3982, 63
  %idxprom472.i3984 = zext i32 %and471.i3983 to i64
  %arrayidx473.i3985 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i3984
  %3391 = load i32, i32* %arrayidx473.i3985, align 4
  %xor474.i3986 = xor i32 %3389, %3391
  %3392 = load i32, i32* %u.i3469, align 4
  %shr475.i3987 = lshr i32 %3392, 18
  %and476.i3988 = and i32 %shr475.i3987, 63
  %idxprom477.i3989 = zext i32 %and476.i3988 to i64
  %arrayidx478.i3990 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i3989
  %3393 = load i32, i32* %arrayidx478.i3990, align 4
  %xor479.i3991 = xor i32 %xor474.i3986, %3393
  %3394 = load i32, i32* %u.i3469, align 4
  %shr480.i3992 = lshr i32 %3394, 26
  %idxprom482.i3993 = zext i32 %shr480.i3992 to i64
  %arrayidx483.i3994 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i3993
  %3395 = load i32, i32* %arrayidx483.i3994, align 4
  %xor484.i3995 = xor i32 %xor479.i3991, %3395
  %3396 = load i32, i32* %t.i3468, align 4
  %shr485.i3996 = lshr i32 %3396, 2
  %and486.i3997 = and i32 %shr485.i3996, 63
  %idxprom487.i3998 = zext i32 %and486.i3997 to i64
  %arrayidx488.i3999 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i3998
  %3397 = load i32, i32* %arrayidx488.i3999, align 4
  %xor489.i4000 = xor i32 %xor484.i3995, %3397
  %3398 = load i32, i32* %t.i3468, align 4
  %shr490.i4001 = lshr i32 %3398, 10
  %and491.i4002 = and i32 %shr490.i4001, 63
  %idxprom492.i4003 = zext i32 %and491.i4002 to i64
  %arrayidx493.i4004 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i4003
  %3399 = load i32, i32* %arrayidx493.i4004, align 4
  %xor494.i4005 = xor i32 %xor489.i4000, %3399
  %3400 = load i32, i32* %t.i3468, align 4
  %shr495.i4006 = lshr i32 %3400, 18
  %and496.i4007 = and i32 %shr495.i4006, 63
  %idxprom497.i4008 = zext i32 %and496.i4007 to i64
  %arrayidx498.i4009 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i4008
  %3401 = load i32, i32* %arrayidx498.i4009, align 4
  %xor499.i4010 = xor i32 %xor494.i4005, %3401
  %3402 = load i32, i32* %t.i3468, align 4
  %shr500.i4011 = lshr i32 %3402, 26
  %idxprom502.i4012 = zext i32 %shr500.i4011 to i64
  %arrayidx503.i4013 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i4012
  %3403 = load i32, i32* %arrayidx503.i4013, align 4
  %xor504.i4014 = xor i32 %xor499.i4010, %3403
  %3404 = load i32, i32* %r.i3467, align 4
  %xor505.i4015 = xor i32 %3404, %xor504.i4014
  store i32 %xor505.i4015, i32* %r.i3467, align 4
  %3405 = load i32, i32* %r.i3467, align 4
  %3406 = load i32*, i32** %s.i3470, align 8
  %arrayidx506.i4016 = getelementptr inbounds i32, i32* %3406, i64 20
  %3407 = load i32, i32* %arrayidx506.i4016, align 4
  %xor507.i4017 = xor i32 %3405, %3407
  store i32 %xor507.i4017, i32* %u.i3469, align 4
  %3408 = load i32, i32* %r.i3467, align 4
  %3409 = load i32*, i32** %s.i3470, align 8
  %arrayidx508.i4018 = getelementptr inbounds i32, i32* %3409, i64 21
  %3410 = load i32, i32* %arrayidx508.i4018, align 4
  %xor509.i4019 = xor i32 %3408, %3410
  store i32 %xor509.i4019, i32* %t.i3468, align 4
  %3411 = load i32, i32* %t.i3468, align 4
  %3412 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3411) #5, !srcloc !14
  store i32 %3412, i32* %ret510.i3496, align 4
  %3413 = load i32, i32* %ret510.i3496, align 4
  store i32 %3413, i32* %tmp511.i3497, align 4
  %3414 = load i32, i32* %tmp511.i3497, align 4
  store i32 %3414, i32* %t.i3468, align 4
  %3415 = load i32, i32* %u.i3469, align 4
  %shr512.i4020 = lshr i32 %3415, 2
  %and513.i4021 = and i32 %shr512.i4020, 63
  %idxprom514.i4022 = zext i32 %and513.i4021 to i64
  %arrayidx515.i4023 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i4022
  %3416 = load i32, i32* %arrayidx515.i4023, align 4
  %3417 = load i32, i32* %u.i3469, align 4
  %shr516.i4024 = lshr i32 %3417, 10
  %and517.i4025 = and i32 %shr516.i4024, 63
  %idxprom518.i4026 = zext i32 %and517.i4025 to i64
  %arrayidx519.i4027 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i4026
  %3418 = load i32, i32* %arrayidx519.i4027, align 4
  %xor520.i4028 = xor i32 %3416, %3418
  %3419 = load i32, i32* %u.i3469, align 4
  %shr521.i4029 = lshr i32 %3419, 18
  %and522.i4030 = and i32 %shr521.i4029, 63
  %idxprom523.i4031 = zext i32 %and522.i4030 to i64
  %arrayidx524.i4032 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i4031
  %3420 = load i32, i32* %arrayidx524.i4032, align 4
  %xor525.i4033 = xor i32 %xor520.i4028, %3420
  %3421 = load i32, i32* %u.i3469, align 4
  %shr526.i4034 = lshr i32 %3421, 26
  %idxprom528.i4035 = zext i32 %shr526.i4034 to i64
  %arrayidx529.i4036 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i4035
  %3422 = load i32, i32* %arrayidx529.i4036, align 4
  %xor530.i4037 = xor i32 %xor525.i4033, %3422
  %3423 = load i32, i32* %t.i3468, align 4
  %shr531.i4038 = lshr i32 %3423, 2
  %and532.i4039 = and i32 %shr531.i4038, 63
  %idxprom533.i4040 = zext i32 %and532.i4039 to i64
  %arrayidx534.i4041 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i4040
  %3424 = load i32, i32* %arrayidx534.i4041, align 4
  %xor535.i4042 = xor i32 %xor530.i4037, %3424
  %3425 = load i32, i32* %t.i3468, align 4
  %shr536.i4043 = lshr i32 %3425, 10
  %and537.i4044 = and i32 %shr536.i4043, 63
  %idxprom538.i4045 = zext i32 %and537.i4044 to i64
  %arrayidx539.i4046 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i4045
  %3426 = load i32, i32* %arrayidx539.i4046, align 4
  %xor540.i4047 = xor i32 %xor535.i4042, %3426
  %3427 = load i32, i32* %t.i3468, align 4
  %shr541.i4048 = lshr i32 %3427, 18
  %and542.i4049 = and i32 %shr541.i4048, 63
  %idxprom543.i4050 = zext i32 %and542.i4049 to i64
  %arrayidx544.i4051 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i4050
  %3428 = load i32, i32* %arrayidx544.i4051, align 4
  %xor545.i4052 = xor i32 %xor540.i4047, %3428
  %3429 = load i32, i32* %t.i3468, align 4
  %shr546.i4053 = lshr i32 %3429, 26
  %idxprom548.i4054 = zext i32 %shr546.i4053 to i64
  %arrayidx549.i4055 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i4054
  %3430 = load i32, i32* %arrayidx549.i4055, align 4
  %xor550.i4056 = xor i32 %xor545.i4052, %3430
  %3431 = load i32, i32* %l.i3466, align 4
  %xor551.i4057 = xor i32 %3431, %xor550.i4056
  store i32 %xor551.i4057, i32* %l.i3466, align 4
  %3432 = load i32, i32* %l.i3466, align 4
  %3433 = load i32*, i32** %s.i3470, align 8
  %arrayidx552.i4058 = getelementptr inbounds i32, i32* %3433, i64 22
  %3434 = load i32, i32* %arrayidx552.i4058, align 4
  %xor553.i4059 = xor i32 %3432, %3434
  store i32 %xor553.i4059, i32* %u.i3469, align 4
  %3435 = load i32, i32* %l.i3466, align 4
  %3436 = load i32*, i32** %s.i3470, align 8
  %arrayidx554.i4060 = getelementptr inbounds i32, i32* %3436, i64 23
  %3437 = load i32, i32* %arrayidx554.i4060, align 4
  %xor555.i4061 = xor i32 %3435, %3437
  store i32 %xor555.i4061, i32* %t.i3468, align 4
  %3438 = load i32, i32* %t.i3468, align 4
  %3439 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3438) #5, !srcloc !15
  store i32 %3439, i32* %ret556.i3498, align 4
  %3440 = load i32, i32* %ret556.i3498, align 4
  store i32 %3440, i32* %tmp557.i3499, align 4
  %3441 = load i32, i32* %tmp557.i3499, align 4
  store i32 %3441, i32* %t.i3468, align 4
  %3442 = load i32, i32* %u.i3469, align 4
  %shr558.i4062 = lshr i32 %3442, 2
  %and559.i4063 = and i32 %shr558.i4062, 63
  %idxprom560.i4064 = zext i32 %and559.i4063 to i64
  %arrayidx561.i4065 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i4064
  %3443 = load i32, i32* %arrayidx561.i4065, align 4
  %3444 = load i32, i32* %u.i3469, align 4
  %shr562.i4066 = lshr i32 %3444, 10
  %and563.i4067 = and i32 %shr562.i4066, 63
  %idxprom564.i4068 = zext i32 %and563.i4067 to i64
  %arrayidx565.i4069 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i4068
  %3445 = load i32, i32* %arrayidx565.i4069, align 4
  %xor566.i4070 = xor i32 %3443, %3445
  %3446 = load i32, i32* %u.i3469, align 4
  %shr567.i4071 = lshr i32 %3446, 18
  %and568.i4072 = and i32 %shr567.i4071, 63
  %idxprom569.i4073 = zext i32 %and568.i4072 to i64
  %arrayidx570.i4074 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i4073
  %3447 = load i32, i32* %arrayidx570.i4074, align 4
  %xor571.i4075 = xor i32 %xor566.i4070, %3447
  %3448 = load i32, i32* %u.i3469, align 4
  %shr572.i4076 = lshr i32 %3448, 26
  %idxprom574.i4077 = zext i32 %shr572.i4076 to i64
  %arrayidx575.i4078 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i4077
  %3449 = load i32, i32* %arrayidx575.i4078, align 4
  %xor576.i4079 = xor i32 %xor571.i4075, %3449
  %3450 = load i32, i32* %t.i3468, align 4
  %shr577.i4080 = lshr i32 %3450, 2
  %and578.i4081 = and i32 %shr577.i4080, 63
  %idxprom579.i4082 = zext i32 %and578.i4081 to i64
  %arrayidx580.i4083 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i4082
  %3451 = load i32, i32* %arrayidx580.i4083, align 4
  %xor581.i4084 = xor i32 %xor576.i4079, %3451
  %3452 = load i32, i32* %t.i3468, align 4
  %shr582.i4085 = lshr i32 %3452, 10
  %and583.i4086 = and i32 %shr582.i4085, 63
  %idxprom584.i4087 = zext i32 %and583.i4086 to i64
  %arrayidx585.i4088 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i4087
  %3453 = load i32, i32* %arrayidx585.i4088, align 4
  %xor586.i4089 = xor i32 %xor581.i4084, %3453
  %3454 = load i32, i32* %t.i3468, align 4
  %shr587.i4090 = lshr i32 %3454, 18
  %and588.i4091 = and i32 %shr587.i4090, 63
  %idxprom589.i4092 = zext i32 %and588.i4091 to i64
  %arrayidx590.i4093 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i4092
  %3455 = load i32, i32* %arrayidx590.i4093, align 4
  %xor591.i4094 = xor i32 %xor586.i4089, %3455
  %3456 = load i32, i32* %t.i3468, align 4
  %shr592.i4095 = lshr i32 %3456, 26
  %idxprom594.i4096 = zext i32 %shr592.i4095 to i64
  %arrayidx595.i4097 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i4096
  %3457 = load i32, i32* %arrayidx595.i4097, align 4
  %xor596.i4098 = xor i32 %xor591.i4094, %3457
  %3458 = load i32, i32* %r.i3467, align 4
  %xor597.i4099 = xor i32 %3458, %xor596.i4098
  store i32 %xor597.i4099, i32* %r.i3467, align 4
  %3459 = load i32, i32* %r.i3467, align 4
  %3460 = load i32*, i32** %s.i3470, align 8
  %arrayidx598.i4100 = getelementptr inbounds i32, i32* %3460, i64 24
  %3461 = load i32, i32* %arrayidx598.i4100, align 4
  %xor599.i4101 = xor i32 %3459, %3461
  store i32 %xor599.i4101, i32* %u.i3469, align 4
  %3462 = load i32, i32* %r.i3467, align 4
  %3463 = load i32*, i32** %s.i3470, align 8
  %arrayidx600.i4102 = getelementptr inbounds i32, i32* %3463, i64 25
  %3464 = load i32, i32* %arrayidx600.i4102, align 4
  %xor601.i4103 = xor i32 %3462, %3464
  store i32 %xor601.i4103, i32* %t.i3468, align 4
  %3465 = load i32, i32* %t.i3468, align 4
  %3466 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3465) #5, !srcloc !16
  store i32 %3466, i32* %ret602.i3500, align 4
  %3467 = load i32, i32* %ret602.i3500, align 4
  store i32 %3467, i32* %tmp603.i3501, align 4
  %3468 = load i32, i32* %tmp603.i3501, align 4
  store i32 %3468, i32* %t.i3468, align 4
  %3469 = load i32, i32* %u.i3469, align 4
  %shr604.i4104 = lshr i32 %3469, 2
  %and605.i4105 = and i32 %shr604.i4104, 63
  %idxprom606.i4106 = zext i32 %and605.i4105 to i64
  %arrayidx607.i4107 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i4106
  %3470 = load i32, i32* %arrayidx607.i4107, align 4
  %3471 = load i32, i32* %u.i3469, align 4
  %shr608.i4108 = lshr i32 %3471, 10
  %and609.i4109 = and i32 %shr608.i4108, 63
  %idxprom610.i4110 = zext i32 %and609.i4109 to i64
  %arrayidx611.i4111 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i4110
  %3472 = load i32, i32* %arrayidx611.i4111, align 4
  %xor612.i4112 = xor i32 %3470, %3472
  %3473 = load i32, i32* %u.i3469, align 4
  %shr613.i4113 = lshr i32 %3473, 18
  %and614.i4114 = and i32 %shr613.i4113, 63
  %idxprom615.i4115 = zext i32 %and614.i4114 to i64
  %arrayidx616.i4116 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i4115
  %3474 = load i32, i32* %arrayidx616.i4116, align 4
  %xor617.i4117 = xor i32 %xor612.i4112, %3474
  %3475 = load i32, i32* %u.i3469, align 4
  %shr618.i4118 = lshr i32 %3475, 26
  %idxprom620.i4119 = zext i32 %shr618.i4118 to i64
  %arrayidx621.i4120 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i4119
  %3476 = load i32, i32* %arrayidx621.i4120, align 4
  %xor622.i4121 = xor i32 %xor617.i4117, %3476
  %3477 = load i32, i32* %t.i3468, align 4
  %shr623.i4122 = lshr i32 %3477, 2
  %and624.i4123 = and i32 %shr623.i4122, 63
  %idxprom625.i4124 = zext i32 %and624.i4123 to i64
  %arrayidx626.i4125 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i4124
  %3478 = load i32, i32* %arrayidx626.i4125, align 4
  %xor627.i4126 = xor i32 %xor622.i4121, %3478
  %3479 = load i32, i32* %t.i3468, align 4
  %shr628.i4127 = lshr i32 %3479, 10
  %and629.i4128 = and i32 %shr628.i4127, 63
  %idxprom630.i4129 = zext i32 %and629.i4128 to i64
  %arrayidx631.i4130 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i4129
  %3480 = load i32, i32* %arrayidx631.i4130, align 4
  %xor632.i4131 = xor i32 %xor627.i4126, %3480
  %3481 = load i32, i32* %t.i3468, align 4
  %shr633.i4132 = lshr i32 %3481, 18
  %and634.i4133 = and i32 %shr633.i4132, 63
  %idxprom635.i4134 = zext i32 %and634.i4133 to i64
  %arrayidx636.i4135 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i4134
  %3482 = load i32, i32* %arrayidx636.i4135, align 4
  %xor637.i4136 = xor i32 %xor632.i4131, %3482
  %3483 = load i32, i32* %t.i3468, align 4
  %shr638.i4137 = lshr i32 %3483, 26
  %idxprom640.i4138 = zext i32 %shr638.i4137 to i64
  %arrayidx641.i4139 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i4138
  %3484 = load i32, i32* %arrayidx641.i4139, align 4
  %xor642.i4140 = xor i32 %xor637.i4136, %3484
  %3485 = load i32, i32* %l.i3466, align 4
  %xor643.i4141 = xor i32 %3485, %xor642.i4140
  store i32 %xor643.i4141, i32* %l.i3466, align 4
  %3486 = load i32, i32* %l.i3466, align 4
  %3487 = load i32*, i32** %s.i3470, align 8
  %arrayidx644.i4142 = getelementptr inbounds i32, i32* %3487, i64 26
  %3488 = load i32, i32* %arrayidx644.i4142, align 4
  %xor645.i4143 = xor i32 %3486, %3488
  store i32 %xor645.i4143, i32* %u.i3469, align 4
  %3489 = load i32, i32* %l.i3466, align 4
  %3490 = load i32*, i32** %s.i3470, align 8
  %arrayidx646.i4144 = getelementptr inbounds i32, i32* %3490, i64 27
  %3491 = load i32, i32* %arrayidx646.i4144, align 4
  %xor647.i4145 = xor i32 %3489, %3491
  store i32 %xor647.i4145, i32* %t.i3468, align 4
  %3492 = load i32, i32* %t.i3468, align 4
  %3493 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3492) #5, !srcloc !17
  store i32 %3493, i32* %ret648.i3502, align 4
  %3494 = load i32, i32* %ret648.i3502, align 4
  store i32 %3494, i32* %tmp649.i3503, align 4
  %3495 = load i32, i32* %tmp649.i3503, align 4
  store i32 %3495, i32* %t.i3468, align 4
  %3496 = load i32, i32* %u.i3469, align 4
  %shr650.i4146 = lshr i32 %3496, 2
  %and651.i4147 = and i32 %shr650.i4146, 63
  %idxprom652.i4148 = zext i32 %and651.i4147 to i64
  %arrayidx653.i4149 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i4148
  %3497 = load i32, i32* %arrayidx653.i4149, align 4
  %3498 = load i32, i32* %u.i3469, align 4
  %shr654.i4150 = lshr i32 %3498, 10
  %and655.i4151 = and i32 %shr654.i4150, 63
  %idxprom656.i4152 = zext i32 %and655.i4151 to i64
  %arrayidx657.i4153 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i4152
  %3499 = load i32, i32* %arrayidx657.i4153, align 4
  %xor658.i4154 = xor i32 %3497, %3499
  %3500 = load i32, i32* %u.i3469, align 4
  %shr659.i4155 = lshr i32 %3500, 18
  %and660.i4156 = and i32 %shr659.i4155, 63
  %idxprom661.i4157 = zext i32 %and660.i4156 to i64
  %arrayidx662.i4158 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i4157
  %3501 = load i32, i32* %arrayidx662.i4158, align 4
  %xor663.i4159 = xor i32 %xor658.i4154, %3501
  %3502 = load i32, i32* %u.i3469, align 4
  %shr664.i4160 = lshr i32 %3502, 26
  %idxprom666.i4161 = zext i32 %shr664.i4160 to i64
  %arrayidx667.i4162 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i4161
  %3503 = load i32, i32* %arrayidx667.i4162, align 4
  %xor668.i4163 = xor i32 %xor663.i4159, %3503
  %3504 = load i32, i32* %t.i3468, align 4
  %shr669.i4164 = lshr i32 %3504, 2
  %and670.i4165 = and i32 %shr669.i4164, 63
  %idxprom671.i4166 = zext i32 %and670.i4165 to i64
  %arrayidx672.i4167 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i4166
  %3505 = load i32, i32* %arrayidx672.i4167, align 4
  %xor673.i4168 = xor i32 %xor668.i4163, %3505
  %3506 = load i32, i32* %t.i3468, align 4
  %shr674.i4169 = lshr i32 %3506, 10
  %and675.i4170 = and i32 %shr674.i4169, 63
  %idxprom676.i4171 = zext i32 %and675.i4170 to i64
  %arrayidx677.i4172 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i4171
  %3507 = load i32, i32* %arrayidx677.i4172, align 4
  %xor678.i4173 = xor i32 %xor673.i4168, %3507
  %3508 = load i32, i32* %t.i3468, align 4
  %shr679.i4174 = lshr i32 %3508, 18
  %and680.i4175 = and i32 %shr679.i4174, 63
  %idxprom681.i4176 = zext i32 %and680.i4175 to i64
  %arrayidx682.i4177 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i4176
  %3509 = load i32, i32* %arrayidx682.i4177, align 4
  %xor683.i4178 = xor i32 %xor678.i4173, %3509
  %3510 = load i32, i32* %t.i3468, align 4
  %shr684.i4179 = lshr i32 %3510, 26
  %idxprom686.i4180 = zext i32 %shr684.i4179 to i64
  %arrayidx687.i4181 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i4180
  %3511 = load i32, i32* %arrayidx687.i4181, align 4
  %xor688.i4182 = xor i32 %xor683.i4178, %3511
  %3512 = load i32, i32* %r.i3467, align 4
  %xor689.i4183 = xor i32 %3512, %xor688.i4182
  store i32 %xor689.i4183, i32* %r.i3467, align 4
  %3513 = load i32, i32* %r.i3467, align 4
  %3514 = load i32*, i32** %s.i3470, align 8
  %arrayidx690.i4184 = getelementptr inbounds i32, i32* %3514, i64 28
  %3515 = load i32, i32* %arrayidx690.i4184, align 4
  %xor691.i4185 = xor i32 %3513, %3515
  store i32 %xor691.i4185, i32* %u.i3469, align 4
  %3516 = load i32, i32* %r.i3467, align 4
  %3517 = load i32*, i32** %s.i3470, align 8
  %arrayidx692.i4186 = getelementptr inbounds i32, i32* %3517, i64 29
  %3518 = load i32, i32* %arrayidx692.i4186, align 4
  %xor693.i4187 = xor i32 %3516, %3518
  store i32 %xor693.i4187, i32* %t.i3468, align 4
  %3519 = load i32, i32* %t.i3468, align 4
  %3520 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3519) #5, !srcloc !18
  store i32 %3520, i32* %ret694.i3504, align 4
  %3521 = load i32, i32* %ret694.i3504, align 4
  store i32 %3521, i32* %tmp695.i3505, align 4
  %3522 = load i32, i32* %tmp695.i3505, align 4
  store i32 %3522, i32* %t.i3468, align 4
  %3523 = load i32, i32* %u.i3469, align 4
  %shr696.i4188 = lshr i32 %3523, 2
  %and697.i4189 = and i32 %shr696.i4188, 63
  %idxprom698.i4190 = zext i32 %and697.i4189 to i64
  %arrayidx699.i4191 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i4190
  %3524 = load i32, i32* %arrayidx699.i4191, align 4
  %3525 = load i32, i32* %u.i3469, align 4
  %shr700.i4192 = lshr i32 %3525, 10
  %and701.i4193 = and i32 %shr700.i4192, 63
  %idxprom702.i4194 = zext i32 %and701.i4193 to i64
  %arrayidx703.i4195 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i4194
  %3526 = load i32, i32* %arrayidx703.i4195, align 4
  %xor704.i4196 = xor i32 %3524, %3526
  %3527 = load i32, i32* %u.i3469, align 4
  %shr705.i4197 = lshr i32 %3527, 18
  %and706.i4198 = and i32 %shr705.i4197, 63
  %idxprom707.i4199 = zext i32 %and706.i4198 to i64
  %arrayidx708.i4200 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i4199
  %3528 = load i32, i32* %arrayidx708.i4200, align 4
  %xor709.i4201 = xor i32 %xor704.i4196, %3528
  %3529 = load i32, i32* %u.i3469, align 4
  %shr710.i4202 = lshr i32 %3529, 26
  %idxprom712.i4203 = zext i32 %shr710.i4202 to i64
  %arrayidx713.i4204 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i4203
  %3530 = load i32, i32* %arrayidx713.i4204, align 4
  %xor714.i4205 = xor i32 %xor709.i4201, %3530
  %3531 = load i32, i32* %t.i3468, align 4
  %shr715.i4206 = lshr i32 %3531, 2
  %and716.i4207 = and i32 %shr715.i4206, 63
  %idxprom717.i4208 = zext i32 %and716.i4207 to i64
  %arrayidx718.i4209 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i4208
  %3532 = load i32, i32* %arrayidx718.i4209, align 4
  %xor719.i4210 = xor i32 %xor714.i4205, %3532
  %3533 = load i32, i32* %t.i3468, align 4
  %shr720.i4211 = lshr i32 %3533, 10
  %and721.i4212 = and i32 %shr720.i4211, 63
  %idxprom722.i4213 = zext i32 %and721.i4212 to i64
  %arrayidx723.i4214 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i4213
  %3534 = load i32, i32* %arrayidx723.i4214, align 4
  %xor724.i4215 = xor i32 %xor719.i4210, %3534
  %3535 = load i32, i32* %t.i3468, align 4
  %shr725.i4216 = lshr i32 %3535, 18
  %and726.i4217 = and i32 %shr725.i4216, 63
  %idxprom727.i4218 = zext i32 %and726.i4217 to i64
  %arrayidx728.i4219 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i4218
  %3536 = load i32, i32* %arrayidx728.i4219, align 4
  %xor729.i4220 = xor i32 %xor724.i4215, %3536
  %3537 = load i32, i32* %t.i3468, align 4
  %shr730.i4221 = lshr i32 %3537, 26
  %idxprom732.i4222 = zext i32 %shr730.i4221 to i64
  %arrayidx733.i4223 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i4222
  %3538 = load i32, i32* %arrayidx733.i4223, align 4
  %xor734.i4224 = xor i32 %xor729.i4220, %3538
  %3539 = load i32, i32* %l.i3466, align 4
  %xor735.i4225 = xor i32 %3539, %xor734.i4224
  store i32 %xor735.i4225, i32* %l.i3466, align 4
  %3540 = load i32, i32* %l.i3466, align 4
  %3541 = load i32*, i32** %s.i3470, align 8
  %arrayidx736.i4226 = getelementptr inbounds i32, i32* %3541, i64 30
  %3542 = load i32, i32* %arrayidx736.i4226, align 4
  %xor737.i4227 = xor i32 %3540, %3542
  store i32 %xor737.i4227, i32* %u.i3469, align 4
  %3543 = load i32, i32* %l.i3466, align 4
  %3544 = load i32*, i32** %s.i3470, align 8
  %arrayidx738.i4228 = getelementptr inbounds i32, i32* %3544, i64 31
  %3545 = load i32, i32* %arrayidx738.i4228, align 4
  %xor739.i4229 = xor i32 %3543, %3545
  store i32 %xor739.i4229, i32* %t.i3468, align 4
  %3546 = load i32, i32* %t.i3468, align 4
  %3547 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3546) #5, !srcloc !19
  store i32 %3547, i32* %ret740.i3506, align 4
  %3548 = load i32, i32* %ret740.i3506, align 4
  store i32 %3548, i32* %tmp741.i3507, align 4
  %3549 = load i32, i32* %tmp741.i3507, align 4
  store i32 %3549, i32* %t.i3468, align 4
  %3550 = load i32, i32* %u.i3469, align 4
  %shr742.i4230 = lshr i32 %3550, 2
  %and743.i4231 = and i32 %shr742.i4230, 63
  %idxprom744.i4232 = zext i32 %and743.i4231 to i64
  %arrayidx745.i4233 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i4232
  %3551 = load i32, i32* %arrayidx745.i4233, align 4
  %3552 = load i32, i32* %u.i3469, align 4
  %shr746.i4234 = lshr i32 %3552, 10
  %and747.i4235 = and i32 %shr746.i4234, 63
  %idxprom748.i4236 = zext i32 %and747.i4235 to i64
  %arrayidx749.i4237 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i4236
  %3553 = load i32, i32* %arrayidx749.i4237, align 4
  %xor750.i4238 = xor i32 %3551, %3553
  %3554 = load i32, i32* %u.i3469, align 4
  %shr751.i4239 = lshr i32 %3554, 18
  %and752.i4240 = and i32 %shr751.i4239, 63
  %idxprom753.i4241 = zext i32 %and752.i4240 to i64
  %arrayidx754.i4242 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i4241
  %3555 = load i32, i32* %arrayidx754.i4242, align 4
  %xor755.i4243 = xor i32 %xor750.i4238, %3555
  %3556 = load i32, i32* %u.i3469, align 4
  %shr756.i4244 = lshr i32 %3556, 26
  %idxprom758.i4245 = zext i32 %shr756.i4244 to i64
  %arrayidx759.i4246 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i4245
  %3557 = load i32, i32* %arrayidx759.i4246, align 4
  %xor760.i4247 = xor i32 %xor755.i4243, %3557
  %3558 = load i32, i32* %t.i3468, align 4
  %shr761.i4248 = lshr i32 %3558, 2
  %and762.i4249 = and i32 %shr761.i4248, 63
  %idxprom763.i4250 = zext i32 %and762.i4249 to i64
  %arrayidx764.i4251 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i4250
  %3559 = load i32, i32* %arrayidx764.i4251, align 4
  %xor765.i4252 = xor i32 %xor760.i4247, %3559
  %3560 = load i32, i32* %t.i3468, align 4
  %shr766.i4253 = lshr i32 %3560, 10
  %and767.i4254 = and i32 %shr766.i4253, 63
  %idxprom768.i4255 = zext i32 %and767.i4254 to i64
  %arrayidx769.i4256 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i4255
  %3561 = load i32, i32* %arrayidx769.i4256, align 4
  %xor770.i4257 = xor i32 %xor765.i4252, %3561
  %3562 = load i32, i32* %t.i3468, align 4
  %shr771.i4258 = lshr i32 %3562, 18
  %and772.i4259 = and i32 %shr771.i4258, 63
  %idxprom773.i4260 = zext i32 %and772.i4259 to i64
  %arrayidx774.i4261 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i4260
  %3563 = load i32, i32* %arrayidx774.i4261, align 4
  %xor775.i4262 = xor i32 %xor770.i4257, %3563
  %3564 = load i32, i32* %t.i3468, align 4
  %shr776.i4263 = lshr i32 %3564, 26
  %idxprom778.i4264 = zext i32 %shr776.i4263 to i64
  %arrayidx779.i4265 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i4264
  %3565 = load i32, i32* %arrayidx779.i4265, align 4
  %xor780.i4266 = xor i32 %xor775.i4262, %3565
  %3566 = load i32, i32* %r.i3467, align 4
  %xor781.i4267 = xor i32 %3566, %xor780.i4266
  store i32 %xor781.i4267, i32* %r.i3467, align 4
  br label %DES_encrypt1.exit4988

if.else.i4940:                                    ; preds = %if.then298
  %3567 = load i32, i32* %r.i3467, align 4
  %3568 = load i32*, i32** %s.i3470, align 8
  %arrayidx782.i4269 = getelementptr inbounds i32, i32* %3568, i64 30
  %3569 = load i32, i32* %arrayidx782.i4269, align 4
  %xor783.i4270 = xor i32 %3567, %3569
  store i32 %xor783.i4270, i32* %u.i3469, align 4
  %3570 = load i32, i32* %r.i3467, align 4
  %3571 = load i32*, i32** %s.i3470, align 8
  %arrayidx784.i4271 = getelementptr inbounds i32, i32* %3571, i64 31
  %3572 = load i32, i32* %arrayidx784.i4271, align 4
  %xor785.i4272 = xor i32 %3570, %3572
  store i32 %xor785.i4272, i32* %t.i3468, align 4
  %3573 = load i32, i32* %t.i3468, align 4
  %3574 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3573) #5, !srcloc !20
  store i32 %3574, i32* %ret786.i3508, align 4
  %3575 = load i32, i32* %ret786.i3508, align 4
  store i32 %3575, i32* %tmp787.i3509, align 4
  %3576 = load i32, i32* %tmp787.i3509, align 4
  store i32 %3576, i32* %t.i3468, align 4
  %3577 = load i32, i32* %u.i3469, align 4
  %shr788.i4273 = lshr i32 %3577, 2
  %and789.i4274 = and i32 %shr788.i4273, 63
  %idxprom790.i4275 = zext i32 %and789.i4274 to i64
  %arrayidx791.i4276 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i4275
  %3578 = load i32, i32* %arrayidx791.i4276, align 4
  %3579 = load i32, i32* %u.i3469, align 4
  %shr792.i4277 = lshr i32 %3579, 10
  %and793.i4278 = and i32 %shr792.i4277, 63
  %idxprom794.i4279 = zext i32 %and793.i4278 to i64
  %arrayidx795.i4280 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i4279
  %3580 = load i32, i32* %arrayidx795.i4280, align 4
  %xor796.i4281 = xor i32 %3578, %3580
  %3581 = load i32, i32* %u.i3469, align 4
  %shr797.i4282 = lshr i32 %3581, 18
  %and798.i4283 = and i32 %shr797.i4282, 63
  %idxprom799.i4284 = zext i32 %and798.i4283 to i64
  %arrayidx800.i4285 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i4284
  %3582 = load i32, i32* %arrayidx800.i4285, align 4
  %xor801.i4286 = xor i32 %xor796.i4281, %3582
  %3583 = load i32, i32* %u.i3469, align 4
  %shr802.i4287 = lshr i32 %3583, 26
  %idxprom804.i4288 = zext i32 %shr802.i4287 to i64
  %arrayidx805.i4289 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i4288
  %3584 = load i32, i32* %arrayidx805.i4289, align 4
  %xor806.i4290 = xor i32 %xor801.i4286, %3584
  %3585 = load i32, i32* %t.i3468, align 4
  %shr807.i4291 = lshr i32 %3585, 2
  %and808.i4292 = and i32 %shr807.i4291, 63
  %idxprom809.i4293 = zext i32 %and808.i4292 to i64
  %arrayidx810.i4294 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i4293
  %3586 = load i32, i32* %arrayidx810.i4294, align 4
  %xor811.i4295 = xor i32 %xor806.i4290, %3586
  %3587 = load i32, i32* %t.i3468, align 4
  %shr812.i4296 = lshr i32 %3587, 10
  %and813.i4297 = and i32 %shr812.i4296, 63
  %idxprom814.i4298 = zext i32 %and813.i4297 to i64
  %arrayidx815.i4299 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i4298
  %3588 = load i32, i32* %arrayidx815.i4299, align 4
  %xor816.i4300 = xor i32 %xor811.i4295, %3588
  %3589 = load i32, i32* %t.i3468, align 4
  %shr817.i4301 = lshr i32 %3589, 18
  %and818.i4302 = and i32 %shr817.i4301, 63
  %idxprom819.i4303 = zext i32 %and818.i4302 to i64
  %arrayidx820.i4304 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i4303
  %3590 = load i32, i32* %arrayidx820.i4304, align 4
  %xor821.i4305 = xor i32 %xor816.i4300, %3590
  %3591 = load i32, i32* %t.i3468, align 4
  %shr822.i4306 = lshr i32 %3591, 26
  %idxprom824.i4307 = zext i32 %shr822.i4306 to i64
  %arrayidx825.i4308 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i4307
  %3592 = load i32, i32* %arrayidx825.i4308, align 4
  %xor826.i4309 = xor i32 %xor821.i4305, %3592
  %3593 = load i32, i32* %l.i3466, align 4
  %xor827.i4310 = xor i32 %3593, %xor826.i4309
  store i32 %xor827.i4310, i32* %l.i3466, align 4
  %3594 = load i32, i32* %l.i3466, align 4
  %3595 = load i32*, i32** %s.i3470, align 8
  %arrayidx828.i4311 = getelementptr inbounds i32, i32* %3595, i64 28
  %3596 = load i32, i32* %arrayidx828.i4311, align 4
  %xor829.i4312 = xor i32 %3594, %3596
  store i32 %xor829.i4312, i32* %u.i3469, align 4
  %3597 = load i32, i32* %l.i3466, align 4
  %3598 = load i32*, i32** %s.i3470, align 8
  %arrayidx830.i4313 = getelementptr inbounds i32, i32* %3598, i64 29
  %3599 = load i32, i32* %arrayidx830.i4313, align 4
  %xor831.i4314 = xor i32 %3597, %3599
  store i32 %xor831.i4314, i32* %t.i3468, align 4
  %3600 = load i32, i32* %t.i3468, align 4
  %3601 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3600) #5, !srcloc !21
  store i32 %3601, i32* %ret832.i3510, align 4
  %3602 = load i32, i32* %ret832.i3510, align 4
  store i32 %3602, i32* %tmp833.i3511, align 4
  %3603 = load i32, i32* %tmp833.i3511, align 4
  store i32 %3603, i32* %t.i3468, align 4
  %3604 = load i32, i32* %u.i3469, align 4
  %shr834.i4315 = lshr i32 %3604, 2
  %and835.i4316 = and i32 %shr834.i4315, 63
  %idxprom836.i4317 = zext i32 %and835.i4316 to i64
  %arrayidx837.i4318 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i4317
  %3605 = load i32, i32* %arrayidx837.i4318, align 4
  %3606 = load i32, i32* %u.i3469, align 4
  %shr838.i4319 = lshr i32 %3606, 10
  %and839.i4320 = and i32 %shr838.i4319, 63
  %idxprom840.i4321 = zext i32 %and839.i4320 to i64
  %arrayidx841.i4322 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i4321
  %3607 = load i32, i32* %arrayidx841.i4322, align 4
  %xor842.i4323 = xor i32 %3605, %3607
  %3608 = load i32, i32* %u.i3469, align 4
  %shr843.i4324 = lshr i32 %3608, 18
  %and844.i4325 = and i32 %shr843.i4324, 63
  %idxprom845.i4326 = zext i32 %and844.i4325 to i64
  %arrayidx846.i4327 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i4326
  %3609 = load i32, i32* %arrayidx846.i4327, align 4
  %xor847.i4328 = xor i32 %xor842.i4323, %3609
  %3610 = load i32, i32* %u.i3469, align 4
  %shr848.i4329 = lshr i32 %3610, 26
  %idxprom850.i4330 = zext i32 %shr848.i4329 to i64
  %arrayidx851.i4331 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i4330
  %3611 = load i32, i32* %arrayidx851.i4331, align 4
  %xor852.i4332 = xor i32 %xor847.i4328, %3611
  %3612 = load i32, i32* %t.i3468, align 4
  %shr853.i4333 = lshr i32 %3612, 2
  %and854.i4334 = and i32 %shr853.i4333, 63
  %idxprom855.i4335 = zext i32 %and854.i4334 to i64
  %arrayidx856.i4336 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i4335
  %3613 = load i32, i32* %arrayidx856.i4336, align 4
  %xor857.i4337 = xor i32 %xor852.i4332, %3613
  %3614 = load i32, i32* %t.i3468, align 4
  %shr858.i4338 = lshr i32 %3614, 10
  %and859.i4339 = and i32 %shr858.i4338, 63
  %idxprom860.i4340 = zext i32 %and859.i4339 to i64
  %arrayidx861.i4341 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i4340
  %3615 = load i32, i32* %arrayidx861.i4341, align 4
  %xor862.i4342 = xor i32 %xor857.i4337, %3615
  %3616 = load i32, i32* %t.i3468, align 4
  %shr863.i4343 = lshr i32 %3616, 18
  %and864.i4344 = and i32 %shr863.i4343, 63
  %idxprom865.i4345 = zext i32 %and864.i4344 to i64
  %arrayidx866.i4346 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i4345
  %3617 = load i32, i32* %arrayidx866.i4346, align 4
  %xor867.i4347 = xor i32 %xor862.i4342, %3617
  %3618 = load i32, i32* %t.i3468, align 4
  %shr868.i4348 = lshr i32 %3618, 26
  %idxprom870.i4349 = zext i32 %shr868.i4348 to i64
  %arrayidx871.i4350 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i4349
  %3619 = load i32, i32* %arrayidx871.i4350, align 4
  %xor872.i4351 = xor i32 %xor867.i4347, %3619
  %3620 = load i32, i32* %r.i3467, align 4
  %xor873.i4352 = xor i32 %3620, %xor872.i4351
  store i32 %xor873.i4352, i32* %r.i3467, align 4
  %3621 = load i32, i32* %r.i3467, align 4
  %3622 = load i32*, i32** %s.i3470, align 8
  %arrayidx874.i4353 = getelementptr inbounds i32, i32* %3622, i64 26
  %3623 = load i32, i32* %arrayidx874.i4353, align 4
  %xor875.i4354 = xor i32 %3621, %3623
  store i32 %xor875.i4354, i32* %u.i3469, align 4
  %3624 = load i32, i32* %r.i3467, align 4
  %3625 = load i32*, i32** %s.i3470, align 8
  %arrayidx876.i4355 = getelementptr inbounds i32, i32* %3625, i64 27
  %3626 = load i32, i32* %arrayidx876.i4355, align 4
  %xor877.i4356 = xor i32 %3624, %3626
  store i32 %xor877.i4356, i32* %t.i3468, align 4
  %3627 = load i32, i32* %t.i3468, align 4
  %3628 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3627) #5, !srcloc !22
  store i32 %3628, i32* %ret878.i3512, align 4
  %3629 = load i32, i32* %ret878.i3512, align 4
  store i32 %3629, i32* %tmp879.i3513, align 4
  %3630 = load i32, i32* %tmp879.i3513, align 4
  store i32 %3630, i32* %t.i3468, align 4
  %3631 = load i32, i32* %u.i3469, align 4
  %shr880.i4357 = lshr i32 %3631, 2
  %and881.i4358 = and i32 %shr880.i4357, 63
  %idxprom882.i4359 = zext i32 %and881.i4358 to i64
  %arrayidx883.i4360 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i4359
  %3632 = load i32, i32* %arrayidx883.i4360, align 4
  %3633 = load i32, i32* %u.i3469, align 4
  %shr884.i4361 = lshr i32 %3633, 10
  %and885.i4362 = and i32 %shr884.i4361, 63
  %idxprom886.i4363 = zext i32 %and885.i4362 to i64
  %arrayidx887.i4364 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i4363
  %3634 = load i32, i32* %arrayidx887.i4364, align 4
  %xor888.i4365 = xor i32 %3632, %3634
  %3635 = load i32, i32* %u.i3469, align 4
  %shr889.i4366 = lshr i32 %3635, 18
  %and890.i4367 = and i32 %shr889.i4366, 63
  %idxprom891.i4368 = zext i32 %and890.i4367 to i64
  %arrayidx892.i4369 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i4368
  %3636 = load i32, i32* %arrayidx892.i4369, align 4
  %xor893.i4370 = xor i32 %xor888.i4365, %3636
  %3637 = load i32, i32* %u.i3469, align 4
  %shr894.i4371 = lshr i32 %3637, 26
  %idxprom896.i4372 = zext i32 %shr894.i4371 to i64
  %arrayidx897.i4373 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i4372
  %3638 = load i32, i32* %arrayidx897.i4373, align 4
  %xor898.i4374 = xor i32 %xor893.i4370, %3638
  %3639 = load i32, i32* %t.i3468, align 4
  %shr899.i4375 = lshr i32 %3639, 2
  %and900.i4376 = and i32 %shr899.i4375, 63
  %idxprom901.i4377 = zext i32 %and900.i4376 to i64
  %arrayidx902.i4378 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i4377
  %3640 = load i32, i32* %arrayidx902.i4378, align 4
  %xor903.i4379 = xor i32 %xor898.i4374, %3640
  %3641 = load i32, i32* %t.i3468, align 4
  %shr904.i4380 = lshr i32 %3641, 10
  %and905.i4381 = and i32 %shr904.i4380, 63
  %idxprom906.i4382 = zext i32 %and905.i4381 to i64
  %arrayidx907.i4383 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i4382
  %3642 = load i32, i32* %arrayidx907.i4383, align 4
  %xor908.i4384 = xor i32 %xor903.i4379, %3642
  %3643 = load i32, i32* %t.i3468, align 4
  %shr909.i4385 = lshr i32 %3643, 18
  %and910.i4386 = and i32 %shr909.i4385, 63
  %idxprom911.i4387 = zext i32 %and910.i4386 to i64
  %arrayidx912.i4388 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i4387
  %3644 = load i32, i32* %arrayidx912.i4388, align 4
  %xor913.i4389 = xor i32 %xor908.i4384, %3644
  %3645 = load i32, i32* %t.i3468, align 4
  %shr914.i4390 = lshr i32 %3645, 26
  %idxprom916.i4391 = zext i32 %shr914.i4390 to i64
  %arrayidx917.i4392 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i4391
  %3646 = load i32, i32* %arrayidx917.i4392, align 4
  %xor918.i4393 = xor i32 %xor913.i4389, %3646
  %3647 = load i32, i32* %l.i3466, align 4
  %xor919.i4394 = xor i32 %3647, %xor918.i4393
  store i32 %xor919.i4394, i32* %l.i3466, align 4
  %3648 = load i32, i32* %l.i3466, align 4
  %3649 = load i32*, i32** %s.i3470, align 8
  %arrayidx920.i4395 = getelementptr inbounds i32, i32* %3649, i64 24
  %3650 = load i32, i32* %arrayidx920.i4395, align 4
  %xor921.i4396 = xor i32 %3648, %3650
  store i32 %xor921.i4396, i32* %u.i3469, align 4
  %3651 = load i32, i32* %l.i3466, align 4
  %3652 = load i32*, i32** %s.i3470, align 8
  %arrayidx922.i4397 = getelementptr inbounds i32, i32* %3652, i64 25
  %3653 = load i32, i32* %arrayidx922.i4397, align 4
  %xor923.i4398 = xor i32 %3651, %3653
  store i32 %xor923.i4398, i32* %t.i3468, align 4
  %3654 = load i32, i32* %t.i3468, align 4
  %3655 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3654) #5, !srcloc !23
  store i32 %3655, i32* %ret924.i3514, align 4
  %3656 = load i32, i32* %ret924.i3514, align 4
  store i32 %3656, i32* %tmp925.i3515, align 4
  %3657 = load i32, i32* %tmp925.i3515, align 4
  store i32 %3657, i32* %t.i3468, align 4
  %3658 = load i32, i32* %u.i3469, align 4
  %shr926.i4399 = lshr i32 %3658, 2
  %and927.i4400 = and i32 %shr926.i4399, 63
  %idxprom928.i4401 = zext i32 %and927.i4400 to i64
  %arrayidx929.i4402 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i4401
  %3659 = load i32, i32* %arrayidx929.i4402, align 4
  %3660 = load i32, i32* %u.i3469, align 4
  %shr930.i4403 = lshr i32 %3660, 10
  %and931.i4404 = and i32 %shr930.i4403, 63
  %idxprom932.i4405 = zext i32 %and931.i4404 to i64
  %arrayidx933.i4406 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i4405
  %3661 = load i32, i32* %arrayidx933.i4406, align 4
  %xor934.i4407 = xor i32 %3659, %3661
  %3662 = load i32, i32* %u.i3469, align 4
  %shr935.i4408 = lshr i32 %3662, 18
  %and936.i4409 = and i32 %shr935.i4408, 63
  %idxprom937.i4410 = zext i32 %and936.i4409 to i64
  %arrayidx938.i4411 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i4410
  %3663 = load i32, i32* %arrayidx938.i4411, align 4
  %xor939.i4412 = xor i32 %xor934.i4407, %3663
  %3664 = load i32, i32* %u.i3469, align 4
  %shr940.i4413 = lshr i32 %3664, 26
  %idxprom942.i4414 = zext i32 %shr940.i4413 to i64
  %arrayidx943.i4415 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i4414
  %3665 = load i32, i32* %arrayidx943.i4415, align 4
  %xor944.i4416 = xor i32 %xor939.i4412, %3665
  %3666 = load i32, i32* %t.i3468, align 4
  %shr945.i4417 = lshr i32 %3666, 2
  %and946.i4418 = and i32 %shr945.i4417, 63
  %idxprom947.i4419 = zext i32 %and946.i4418 to i64
  %arrayidx948.i4420 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i4419
  %3667 = load i32, i32* %arrayidx948.i4420, align 4
  %xor949.i4421 = xor i32 %xor944.i4416, %3667
  %3668 = load i32, i32* %t.i3468, align 4
  %shr950.i4422 = lshr i32 %3668, 10
  %and951.i4423 = and i32 %shr950.i4422, 63
  %idxprom952.i4424 = zext i32 %and951.i4423 to i64
  %arrayidx953.i4425 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i4424
  %3669 = load i32, i32* %arrayidx953.i4425, align 4
  %xor954.i4426 = xor i32 %xor949.i4421, %3669
  %3670 = load i32, i32* %t.i3468, align 4
  %shr955.i4427 = lshr i32 %3670, 18
  %and956.i4428 = and i32 %shr955.i4427, 63
  %idxprom957.i4429 = zext i32 %and956.i4428 to i64
  %arrayidx958.i4430 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i4429
  %3671 = load i32, i32* %arrayidx958.i4430, align 4
  %xor959.i4431 = xor i32 %xor954.i4426, %3671
  %3672 = load i32, i32* %t.i3468, align 4
  %shr960.i4432 = lshr i32 %3672, 26
  %idxprom962.i4433 = zext i32 %shr960.i4432 to i64
  %arrayidx963.i4434 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i4433
  %3673 = load i32, i32* %arrayidx963.i4434, align 4
  %xor964.i4435 = xor i32 %xor959.i4431, %3673
  %3674 = load i32, i32* %r.i3467, align 4
  %xor965.i4436 = xor i32 %3674, %xor964.i4435
  store i32 %xor965.i4436, i32* %r.i3467, align 4
  %3675 = load i32, i32* %r.i3467, align 4
  %3676 = load i32*, i32** %s.i3470, align 8
  %arrayidx966.i4437 = getelementptr inbounds i32, i32* %3676, i64 22
  %3677 = load i32, i32* %arrayidx966.i4437, align 4
  %xor967.i4438 = xor i32 %3675, %3677
  store i32 %xor967.i4438, i32* %u.i3469, align 4
  %3678 = load i32, i32* %r.i3467, align 4
  %3679 = load i32*, i32** %s.i3470, align 8
  %arrayidx968.i4439 = getelementptr inbounds i32, i32* %3679, i64 23
  %3680 = load i32, i32* %arrayidx968.i4439, align 4
  %xor969.i4440 = xor i32 %3678, %3680
  store i32 %xor969.i4440, i32* %t.i3468, align 4
  %3681 = load i32, i32* %t.i3468, align 4
  %3682 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3681) #5, !srcloc !24
  store i32 %3682, i32* %ret970.i3516, align 4
  %3683 = load i32, i32* %ret970.i3516, align 4
  store i32 %3683, i32* %tmp971.i3517, align 4
  %3684 = load i32, i32* %tmp971.i3517, align 4
  store i32 %3684, i32* %t.i3468, align 4
  %3685 = load i32, i32* %u.i3469, align 4
  %shr972.i4441 = lshr i32 %3685, 2
  %and973.i4442 = and i32 %shr972.i4441, 63
  %idxprom974.i4443 = zext i32 %and973.i4442 to i64
  %arrayidx975.i4444 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i4443
  %3686 = load i32, i32* %arrayidx975.i4444, align 4
  %3687 = load i32, i32* %u.i3469, align 4
  %shr976.i4445 = lshr i32 %3687, 10
  %and977.i4446 = and i32 %shr976.i4445, 63
  %idxprom978.i4447 = zext i32 %and977.i4446 to i64
  %arrayidx979.i4448 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i4447
  %3688 = load i32, i32* %arrayidx979.i4448, align 4
  %xor980.i4449 = xor i32 %3686, %3688
  %3689 = load i32, i32* %u.i3469, align 4
  %shr981.i4450 = lshr i32 %3689, 18
  %and982.i4451 = and i32 %shr981.i4450, 63
  %idxprom983.i4452 = zext i32 %and982.i4451 to i64
  %arrayidx984.i4453 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i4452
  %3690 = load i32, i32* %arrayidx984.i4453, align 4
  %xor985.i4454 = xor i32 %xor980.i4449, %3690
  %3691 = load i32, i32* %u.i3469, align 4
  %shr986.i4455 = lshr i32 %3691, 26
  %idxprom988.i4456 = zext i32 %shr986.i4455 to i64
  %arrayidx989.i4457 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i4456
  %3692 = load i32, i32* %arrayidx989.i4457, align 4
  %xor990.i4458 = xor i32 %xor985.i4454, %3692
  %3693 = load i32, i32* %t.i3468, align 4
  %shr991.i4459 = lshr i32 %3693, 2
  %and992.i4460 = and i32 %shr991.i4459, 63
  %idxprom993.i4461 = zext i32 %and992.i4460 to i64
  %arrayidx994.i4462 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i4461
  %3694 = load i32, i32* %arrayidx994.i4462, align 4
  %xor995.i4463 = xor i32 %xor990.i4458, %3694
  %3695 = load i32, i32* %t.i3468, align 4
  %shr996.i4464 = lshr i32 %3695, 10
  %and997.i4465 = and i32 %shr996.i4464, 63
  %idxprom998.i4466 = zext i32 %and997.i4465 to i64
  %arrayidx999.i4467 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i4466
  %3696 = load i32, i32* %arrayidx999.i4467, align 4
  %xor1000.i4468 = xor i32 %xor995.i4463, %3696
  %3697 = load i32, i32* %t.i3468, align 4
  %shr1001.i4469 = lshr i32 %3697, 18
  %and1002.i4470 = and i32 %shr1001.i4469, 63
  %idxprom1003.i4471 = zext i32 %and1002.i4470 to i64
  %arrayidx1004.i4472 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i4471
  %3698 = load i32, i32* %arrayidx1004.i4472, align 4
  %xor1005.i4473 = xor i32 %xor1000.i4468, %3698
  %3699 = load i32, i32* %t.i3468, align 4
  %shr1006.i4474 = lshr i32 %3699, 26
  %idxprom1008.i4475 = zext i32 %shr1006.i4474 to i64
  %arrayidx1009.i4476 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i4475
  %3700 = load i32, i32* %arrayidx1009.i4476, align 4
  %xor1010.i4477 = xor i32 %xor1005.i4473, %3700
  %3701 = load i32, i32* %l.i3466, align 4
  %xor1011.i4478 = xor i32 %3701, %xor1010.i4477
  store i32 %xor1011.i4478, i32* %l.i3466, align 4
  %3702 = load i32, i32* %l.i3466, align 4
  %3703 = load i32*, i32** %s.i3470, align 8
  %arrayidx1012.i4479 = getelementptr inbounds i32, i32* %3703, i64 20
  %3704 = load i32, i32* %arrayidx1012.i4479, align 4
  %xor1013.i4480 = xor i32 %3702, %3704
  store i32 %xor1013.i4480, i32* %u.i3469, align 4
  %3705 = load i32, i32* %l.i3466, align 4
  %3706 = load i32*, i32** %s.i3470, align 8
  %arrayidx1014.i4481 = getelementptr inbounds i32, i32* %3706, i64 21
  %3707 = load i32, i32* %arrayidx1014.i4481, align 4
  %xor1015.i4482 = xor i32 %3705, %3707
  store i32 %xor1015.i4482, i32* %t.i3468, align 4
  %3708 = load i32, i32* %t.i3468, align 4
  %3709 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3708) #5, !srcloc !25
  store i32 %3709, i32* %ret1016.i3518, align 4
  %3710 = load i32, i32* %ret1016.i3518, align 4
  store i32 %3710, i32* %tmp1017.i3519, align 4
  %3711 = load i32, i32* %tmp1017.i3519, align 4
  store i32 %3711, i32* %t.i3468, align 4
  %3712 = load i32, i32* %u.i3469, align 4
  %shr1018.i4483 = lshr i32 %3712, 2
  %and1019.i4484 = and i32 %shr1018.i4483, 63
  %idxprom1020.i4485 = zext i32 %and1019.i4484 to i64
  %arrayidx1021.i4486 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i4485
  %3713 = load i32, i32* %arrayidx1021.i4486, align 4
  %3714 = load i32, i32* %u.i3469, align 4
  %shr1022.i4487 = lshr i32 %3714, 10
  %and1023.i4488 = and i32 %shr1022.i4487, 63
  %idxprom1024.i4489 = zext i32 %and1023.i4488 to i64
  %arrayidx1025.i4490 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i4489
  %3715 = load i32, i32* %arrayidx1025.i4490, align 4
  %xor1026.i4491 = xor i32 %3713, %3715
  %3716 = load i32, i32* %u.i3469, align 4
  %shr1027.i4492 = lshr i32 %3716, 18
  %and1028.i4493 = and i32 %shr1027.i4492, 63
  %idxprom1029.i4494 = zext i32 %and1028.i4493 to i64
  %arrayidx1030.i4495 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i4494
  %3717 = load i32, i32* %arrayidx1030.i4495, align 4
  %xor1031.i4496 = xor i32 %xor1026.i4491, %3717
  %3718 = load i32, i32* %u.i3469, align 4
  %shr1032.i4497 = lshr i32 %3718, 26
  %idxprom1034.i4498 = zext i32 %shr1032.i4497 to i64
  %arrayidx1035.i4499 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i4498
  %3719 = load i32, i32* %arrayidx1035.i4499, align 4
  %xor1036.i4500 = xor i32 %xor1031.i4496, %3719
  %3720 = load i32, i32* %t.i3468, align 4
  %shr1037.i4501 = lshr i32 %3720, 2
  %and1038.i4502 = and i32 %shr1037.i4501, 63
  %idxprom1039.i4503 = zext i32 %and1038.i4502 to i64
  %arrayidx1040.i4504 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i4503
  %3721 = load i32, i32* %arrayidx1040.i4504, align 4
  %xor1041.i4505 = xor i32 %xor1036.i4500, %3721
  %3722 = load i32, i32* %t.i3468, align 4
  %shr1042.i4506 = lshr i32 %3722, 10
  %and1043.i4507 = and i32 %shr1042.i4506, 63
  %idxprom1044.i4508 = zext i32 %and1043.i4507 to i64
  %arrayidx1045.i4509 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i4508
  %3723 = load i32, i32* %arrayidx1045.i4509, align 4
  %xor1046.i4510 = xor i32 %xor1041.i4505, %3723
  %3724 = load i32, i32* %t.i3468, align 4
  %shr1047.i4511 = lshr i32 %3724, 18
  %and1048.i4512 = and i32 %shr1047.i4511, 63
  %idxprom1049.i4513 = zext i32 %and1048.i4512 to i64
  %arrayidx1050.i4514 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i4513
  %3725 = load i32, i32* %arrayidx1050.i4514, align 4
  %xor1051.i4515 = xor i32 %xor1046.i4510, %3725
  %3726 = load i32, i32* %t.i3468, align 4
  %shr1052.i4516 = lshr i32 %3726, 26
  %idxprom1054.i4517 = zext i32 %shr1052.i4516 to i64
  %arrayidx1055.i4518 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i4517
  %3727 = load i32, i32* %arrayidx1055.i4518, align 4
  %xor1056.i4519 = xor i32 %xor1051.i4515, %3727
  %3728 = load i32, i32* %r.i3467, align 4
  %xor1057.i4520 = xor i32 %3728, %xor1056.i4519
  store i32 %xor1057.i4520, i32* %r.i3467, align 4
  %3729 = load i32, i32* %r.i3467, align 4
  %3730 = load i32*, i32** %s.i3470, align 8
  %arrayidx1058.i4521 = getelementptr inbounds i32, i32* %3730, i64 18
  %3731 = load i32, i32* %arrayidx1058.i4521, align 4
  %xor1059.i4522 = xor i32 %3729, %3731
  store i32 %xor1059.i4522, i32* %u.i3469, align 4
  %3732 = load i32, i32* %r.i3467, align 4
  %3733 = load i32*, i32** %s.i3470, align 8
  %arrayidx1060.i4523 = getelementptr inbounds i32, i32* %3733, i64 19
  %3734 = load i32, i32* %arrayidx1060.i4523, align 4
  %xor1061.i4524 = xor i32 %3732, %3734
  store i32 %xor1061.i4524, i32* %t.i3468, align 4
  %3735 = load i32, i32* %t.i3468, align 4
  %3736 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3735) #5, !srcloc !26
  store i32 %3736, i32* %ret1062.i3520, align 4
  %3737 = load i32, i32* %ret1062.i3520, align 4
  store i32 %3737, i32* %tmp1063.i3521, align 4
  %3738 = load i32, i32* %tmp1063.i3521, align 4
  store i32 %3738, i32* %t.i3468, align 4
  %3739 = load i32, i32* %u.i3469, align 4
  %shr1064.i4525 = lshr i32 %3739, 2
  %and1065.i4526 = and i32 %shr1064.i4525, 63
  %idxprom1066.i4527 = zext i32 %and1065.i4526 to i64
  %arrayidx1067.i4528 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i4527
  %3740 = load i32, i32* %arrayidx1067.i4528, align 4
  %3741 = load i32, i32* %u.i3469, align 4
  %shr1068.i4529 = lshr i32 %3741, 10
  %and1069.i4530 = and i32 %shr1068.i4529, 63
  %idxprom1070.i4531 = zext i32 %and1069.i4530 to i64
  %arrayidx1071.i4532 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i4531
  %3742 = load i32, i32* %arrayidx1071.i4532, align 4
  %xor1072.i4533 = xor i32 %3740, %3742
  %3743 = load i32, i32* %u.i3469, align 4
  %shr1073.i4534 = lshr i32 %3743, 18
  %and1074.i4535 = and i32 %shr1073.i4534, 63
  %idxprom1075.i4536 = zext i32 %and1074.i4535 to i64
  %arrayidx1076.i4537 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i4536
  %3744 = load i32, i32* %arrayidx1076.i4537, align 4
  %xor1077.i4538 = xor i32 %xor1072.i4533, %3744
  %3745 = load i32, i32* %u.i3469, align 4
  %shr1078.i4539 = lshr i32 %3745, 26
  %idxprom1080.i4540 = zext i32 %shr1078.i4539 to i64
  %arrayidx1081.i4541 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i4540
  %3746 = load i32, i32* %arrayidx1081.i4541, align 4
  %xor1082.i4542 = xor i32 %xor1077.i4538, %3746
  %3747 = load i32, i32* %t.i3468, align 4
  %shr1083.i4543 = lshr i32 %3747, 2
  %and1084.i4544 = and i32 %shr1083.i4543, 63
  %idxprom1085.i4545 = zext i32 %and1084.i4544 to i64
  %arrayidx1086.i4546 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i4545
  %3748 = load i32, i32* %arrayidx1086.i4546, align 4
  %xor1087.i4547 = xor i32 %xor1082.i4542, %3748
  %3749 = load i32, i32* %t.i3468, align 4
  %shr1088.i4548 = lshr i32 %3749, 10
  %and1089.i4549 = and i32 %shr1088.i4548, 63
  %idxprom1090.i4550 = zext i32 %and1089.i4549 to i64
  %arrayidx1091.i4551 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i4550
  %3750 = load i32, i32* %arrayidx1091.i4551, align 4
  %xor1092.i4552 = xor i32 %xor1087.i4547, %3750
  %3751 = load i32, i32* %t.i3468, align 4
  %shr1093.i4553 = lshr i32 %3751, 18
  %and1094.i4554 = and i32 %shr1093.i4553, 63
  %idxprom1095.i4555 = zext i32 %and1094.i4554 to i64
  %arrayidx1096.i4556 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i4555
  %3752 = load i32, i32* %arrayidx1096.i4556, align 4
  %xor1097.i4557 = xor i32 %xor1092.i4552, %3752
  %3753 = load i32, i32* %t.i3468, align 4
  %shr1098.i4558 = lshr i32 %3753, 26
  %idxprom1100.i4559 = zext i32 %shr1098.i4558 to i64
  %arrayidx1101.i4560 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i4559
  %3754 = load i32, i32* %arrayidx1101.i4560, align 4
  %xor1102.i4561 = xor i32 %xor1097.i4557, %3754
  %3755 = load i32, i32* %l.i3466, align 4
  %xor1103.i4562 = xor i32 %3755, %xor1102.i4561
  store i32 %xor1103.i4562, i32* %l.i3466, align 4
  %3756 = load i32, i32* %l.i3466, align 4
  %3757 = load i32*, i32** %s.i3470, align 8
  %arrayidx1104.i4563 = getelementptr inbounds i32, i32* %3757, i64 16
  %3758 = load i32, i32* %arrayidx1104.i4563, align 4
  %xor1105.i4564 = xor i32 %3756, %3758
  store i32 %xor1105.i4564, i32* %u.i3469, align 4
  %3759 = load i32, i32* %l.i3466, align 4
  %3760 = load i32*, i32** %s.i3470, align 8
  %arrayidx1106.i4565 = getelementptr inbounds i32, i32* %3760, i64 17
  %3761 = load i32, i32* %arrayidx1106.i4565, align 4
  %xor1107.i4566 = xor i32 %3759, %3761
  store i32 %xor1107.i4566, i32* %t.i3468, align 4
  %3762 = load i32, i32* %t.i3468, align 4
  %3763 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3762) #5, !srcloc !27
  store i32 %3763, i32* %ret1108.i3522, align 4
  %3764 = load i32, i32* %ret1108.i3522, align 4
  store i32 %3764, i32* %tmp1109.i3523, align 4
  %3765 = load i32, i32* %tmp1109.i3523, align 4
  store i32 %3765, i32* %t.i3468, align 4
  %3766 = load i32, i32* %u.i3469, align 4
  %shr1110.i4567 = lshr i32 %3766, 2
  %and1111.i4568 = and i32 %shr1110.i4567, 63
  %idxprom1112.i4569 = zext i32 %and1111.i4568 to i64
  %arrayidx1113.i4570 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i4569
  %3767 = load i32, i32* %arrayidx1113.i4570, align 4
  %3768 = load i32, i32* %u.i3469, align 4
  %shr1114.i4571 = lshr i32 %3768, 10
  %and1115.i4572 = and i32 %shr1114.i4571, 63
  %idxprom1116.i4573 = zext i32 %and1115.i4572 to i64
  %arrayidx1117.i4574 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i4573
  %3769 = load i32, i32* %arrayidx1117.i4574, align 4
  %xor1118.i4575 = xor i32 %3767, %3769
  %3770 = load i32, i32* %u.i3469, align 4
  %shr1119.i4576 = lshr i32 %3770, 18
  %and1120.i4577 = and i32 %shr1119.i4576, 63
  %idxprom1121.i4578 = zext i32 %and1120.i4577 to i64
  %arrayidx1122.i4579 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i4578
  %3771 = load i32, i32* %arrayidx1122.i4579, align 4
  %xor1123.i4580 = xor i32 %xor1118.i4575, %3771
  %3772 = load i32, i32* %u.i3469, align 4
  %shr1124.i4581 = lshr i32 %3772, 26
  %idxprom1126.i4582 = zext i32 %shr1124.i4581 to i64
  %arrayidx1127.i4583 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i4582
  %3773 = load i32, i32* %arrayidx1127.i4583, align 4
  %xor1128.i4584 = xor i32 %xor1123.i4580, %3773
  %3774 = load i32, i32* %t.i3468, align 4
  %shr1129.i4585 = lshr i32 %3774, 2
  %and1130.i4586 = and i32 %shr1129.i4585, 63
  %idxprom1131.i4587 = zext i32 %and1130.i4586 to i64
  %arrayidx1132.i4588 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i4587
  %3775 = load i32, i32* %arrayidx1132.i4588, align 4
  %xor1133.i4589 = xor i32 %xor1128.i4584, %3775
  %3776 = load i32, i32* %t.i3468, align 4
  %shr1134.i4590 = lshr i32 %3776, 10
  %and1135.i4591 = and i32 %shr1134.i4590, 63
  %idxprom1136.i4592 = zext i32 %and1135.i4591 to i64
  %arrayidx1137.i4593 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i4592
  %3777 = load i32, i32* %arrayidx1137.i4593, align 4
  %xor1138.i4594 = xor i32 %xor1133.i4589, %3777
  %3778 = load i32, i32* %t.i3468, align 4
  %shr1139.i4595 = lshr i32 %3778, 18
  %and1140.i4596 = and i32 %shr1139.i4595, 63
  %idxprom1141.i4597 = zext i32 %and1140.i4596 to i64
  %arrayidx1142.i4598 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i4597
  %3779 = load i32, i32* %arrayidx1142.i4598, align 4
  %xor1143.i4599 = xor i32 %xor1138.i4594, %3779
  %3780 = load i32, i32* %t.i3468, align 4
  %shr1144.i4600 = lshr i32 %3780, 26
  %idxprom1146.i4601 = zext i32 %shr1144.i4600 to i64
  %arrayidx1147.i4602 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i4601
  %3781 = load i32, i32* %arrayidx1147.i4602, align 4
  %xor1148.i4603 = xor i32 %xor1143.i4599, %3781
  %3782 = load i32, i32* %r.i3467, align 4
  %xor1149.i4604 = xor i32 %3782, %xor1148.i4603
  store i32 %xor1149.i4604, i32* %r.i3467, align 4
  %3783 = load i32, i32* %r.i3467, align 4
  %3784 = load i32*, i32** %s.i3470, align 8
  %arrayidx1150.i4605 = getelementptr inbounds i32, i32* %3784, i64 14
  %3785 = load i32, i32* %arrayidx1150.i4605, align 4
  %xor1151.i4606 = xor i32 %3783, %3785
  store i32 %xor1151.i4606, i32* %u.i3469, align 4
  %3786 = load i32, i32* %r.i3467, align 4
  %3787 = load i32*, i32** %s.i3470, align 8
  %arrayidx1152.i4607 = getelementptr inbounds i32, i32* %3787, i64 15
  %3788 = load i32, i32* %arrayidx1152.i4607, align 4
  %xor1153.i4608 = xor i32 %3786, %3788
  store i32 %xor1153.i4608, i32* %t.i3468, align 4
  %3789 = load i32, i32* %t.i3468, align 4
  %3790 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3789) #5, !srcloc !28
  store i32 %3790, i32* %ret1154.i3524, align 4
  %3791 = load i32, i32* %ret1154.i3524, align 4
  store i32 %3791, i32* %tmp1155.i3525, align 4
  %3792 = load i32, i32* %tmp1155.i3525, align 4
  store i32 %3792, i32* %t.i3468, align 4
  %3793 = load i32, i32* %u.i3469, align 4
  %shr1156.i4609 = lshr i32 %3793, 2
  %and1157.i4610 = and i32 %shr1156.i4609, 63
  %idxprom1158.i4611 = zext i32 %and1157.i4610 to i64
  %arrayidx1159.i4612 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i4611
  %3794 = load i32, i32* %arrayidx1159.i4612, align 4
  %3795 = load i32, i32* %u.i3469, align 4
  %shr1160.i4613 = lshr i32 %3795, 10
  %and1161.i4614 = and i32 %shr1160.i4613, 63
  %idxprom1162.i4615 = zext i32 %and1161.i4614 to i64
  %arrayidx1163.i4616 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i4615
  %3796 = load i32, i32* %arrayidx1163.i4616, align 4
  %xor1164.i4617 = xor i32 %3794, %3796
  %3797 = load i32, i32* %u.i3469, align 4
  %shr1165.i4618 = lshr i32 %3797, 18
  %and1166.i4619 = and i32 %shr1165.i4618, 63
  %idxprom1167.i4620 = zext i32 %and1166.i4619 to i64
  %arrayidx1168.i4621 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i4620
  %3798 = load i32, i32* %arrayidx1168.i4621, align 4
  %xor1169.i4622 = xor i32 %xor1164.i4617, %3798
  %3799 = load i32, i32* %u.i3469, align 4
  %shr1170.i4623 = lshr i32 %3799, 26
  %idxprom1172.i4624 = zext i32 %shr1170.i4623 to i64
  %arrayidx1173.i4625 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i4624
  %3800 = load i32, i32* %arrayidx1173.i4625, align 4
  %xor1174.i4626 = xor i32 %xor1169.i4622, %3800
  %3801 = load i32, i32* %t.i3468, align 4
  %shr1175.i4627 = lshr i32 %3801, 2
  %and1176.i4628 = and i32 %shr1175.i4627, 63
  %idxprom1177.i4629 = zext i32 %and1176.i4628 to i64
  %arrayidx1178.i4630 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i4629
  %3802 = load i32, i32* %arrayidx1178.i4630, align 4
  %xor1179.i4631 = xor i32 %xor1174.i4626, %3802
  %3803 = load i32, i32* %t.i3468, align 4
  %shr1180.i4632 = lshr i32 %3803, 10
  %and1181.i4633 = and i32 %shr1180.i4632, 63
  %idxprom1182.i4634 = zext i32 %and1181.i4633 to i64
  %arrayidx1183.i4635 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i4634
  %3804 = load i32, i32* %arrayidx1183.i4635, align 4
  %xor1184.i4636 = xor i32 %xor1179.i4631, %3804
  %3805 = load i32, i32* %t.i3468, align 4
  %shr1185.i4637 = lshr i32 %3805, 18
  %and1186.i4638 = and i32 %shr1185.i4637, 63
  %idxprom1187.i4639 = zext i32 %and1186.i4638 to i64
  %arrayidx1188.i4640 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i4639
  %3806 = load i32, i32* %arrayidx1188.i4640, align 4
  %xor1189.i4641 = xor i32 %xor1184.i4636, %3806
  %3807 = load i32, i32* %t.i3468, align 4
  %shr1190.i4642 = lshr i32 %3807, 26
  %idxprom1192.i4643 = zext i32 %shr1190.i4642 to i64
  %arrayidx1193.i4644 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i4643
  %3808 = load i32, i32* %arrayidx1193.i4644, align 4
  %xor1194.i4645 = xor i32 %xor1189.i4641, %3808
  %3809 = load i32, i32* %l.i3466, align 4
  %xor1195.i4646 = xor i32 %3809, %xor1194.i4645
  store i32 %xor1195.i4646, i32* %l.i3466, align 4
  %3810 = load i32, i32* %l.i3466, align 4
  %3811 = load i32*, i32** %s.i3470, align 8
  %arrayidx1196.i4647 = getelementptr inbounds i32, i32* %3811, i64 12
  %3812 = load i32, i32* %arrayidx1196.i4647, align 4
  %xor1197.i4648 = xor i32 %3810, %3812
  store i32 %xor1197.i4648, i32* %u.i3469, align 4
  %3813 = load i32, i32* %l.i3466, align 4
  %3814 = load i32*, i32** %s.i3470, align 8
  %arrayidx1198.i4649 = getelementptr inbounds i32, i32* %3814, i64 13
  %3815 = load i32, i32* %arrayidx1198.i4649, align 4
  %xor1199.i4650 = xor i32 %3813, %3815
  store i32 %xor1199.i4650, i32* %t.i3468, align 4
  %3816 = load i32, i32* %t.i3468, align 4
  %3817 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3816) #5, !srcloc !29
  store i32 %3817, i32* %ret1200.i3526, align 4
  %3818 = load i32, i32* %ret1200.i3526, align 4
  store i32 %3818, i32* %tmp1201.i3527, align 4
  %3819 = load i32, i32* %tmp1201.i3527, align 4
  store i32 %3819, i32* %t.i3468, align 4
  %3820 = load i32, i32* %u.i3469, align 4
  %shr1202.i4651 = lshr i32 %3820, 2
  %and1203.i4652 = and i32 %shr1202.i4651, 63
  %idxprom1204.i4653 = zext i32 %and1203.i4652 to i64
  %arrayidx1205.i4654 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i4653
  %3821 = load i32, i32* %arrayidx1205.i4654, align 4
  %3822 = load i32, i32* %u.i3469, align 4
  %shr1206.i4655 = lshr i32 %3822, 10
  %and1207.i4656 = and i32 %shr1206.i4655, 63
  %idxprom1208.i4657 = zext i32 %and1207.i4656 to i64
  %arrayidx1209.i4658 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i4657
  %3823 = load i32, i32* %arrayidx1209.i4658, align 4
  %xor1210.i4659 = xor i32 %3821, %3823
  %3824 = load i32, i32* %u.i3469, align 4
  %shr1211.i4660 = lshr i32 %3824, 18
  %and1212.i4661 = and i32 %shr1211.i4660, 63
  %idxprom1213.i4662 = zext i32 %and1212.i4661 to i64
  %arrayidx1214.i4663 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i4662
  %3825 = load i32, i32* %arrayidx1214.i4663, align 4
  %xor1215.i4664 = xor i32 %xor1210.i4659, %3825
  %3826 = load i32, i32* %u.i3469, align 4
  %shr1216.i4665 = lshr i32 %3826, 26
  %idxprom1218.i4666 = zext i32 %shr1216.i4665 to i64
  %arrayidx1219.i4667 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i4666
  %3827 = load i32, i32* %arrayidx1219.i4667, align 4
  %xor1220.i4668 = xor i32 %xor1215.i4664, %3827
  %3828 = load i32, i32* %t.i3468, align 4
  %shr1221.i4669 = lshr i32 %3828, 2
  %and1222.i4670 = and i32 %shr1221.i4669, 63
  %idxprom1223.i4671 = zext i32 %and1222.i4670 to i64
  %arrayidx1224.i4672 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i4671
  %3829 = load i32, i32* %arrayidx1224.i4672, align 4
  %xor1225.i4673 = xor i32 %xor1220.i4668, %3829
  %3830 = load i32, i32* %t.i3468, align 4
  %shr1226.i4674 = lshr i32 %3830, 10
  %and1227.i4675 = and i32 %shr1226.i4674, 63
  %idxprom1228.i4676 = zext i32 %and1227.i4675 to i64
  %arrayidx1229.i4677 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i4676
  %3831 = load i32, i32* %arrayidx1229.i4677, align 4
  %xor1230.i4678 = xor i32 %xor1225.i4673, %3831
  %3832 = load i32, i32* %t.i3468, align 4
  %shr1231.i4679 = lshr i32 %3832, 18
  %and1232.i4680 = and i32 %shr1231.i4679, 63
  %idxprom1233.i4681 = zext i32 %and1232.i4680 to i64
  %arrayidx1234.i4682 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i4681
  %3833 = load i32, i32* %arrayidx1234.i4682, align 4
  %xor1235.i4683 = xor i32 %xor1230.i4678, %3833
  %3834 = load i32, i32* %t.i3468, align 4
  %shr1236.i4684 = lshr i32 %3834, 26
  %idxprom1238.i4685 = zext i32 %shr1236.i4684 to i64
  %arrayidx1239.i4686 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i4685
  %3835 = load i32, i32* %arrayidx1239.i4686, align 4
  %xor1240.i4687 = xor i32 %xor1235.i4683, %3835
  %3836 = load i32, i32* %r.i3467, align 4
  %xor1241.i4688 = xor i32 %3836, %xor1240.i4687
  store i32 %xor1241.i4688, i32* %r.i3467, align 4
  %3837 = load i32, i32* %r.i3467, align 4
  %3838 = load i32*, i32** %s.i3470, align 8
  %arrayidx1242.i4689 = getelementptr inbounds i32, i32* %3838, i64 10
  %3839 = load i32, i32* %arrayidx1242.i4689, align 4
  %xor1243.i4690 = xor i32 %3837, %3839
  store i32 %xor1243.i4690, i32* %u.i3469, align 4
  %3840 = load i32, i32* %r.i3467, align 4
  %3841 = load i32*, i32** %s.i3470, align 8
  %arrayidx1244.i4691 = getelementptr inbounds i32, i32* %3841, i64 11
  %3842 = load i32, i32* %arrayidx1244.i4691, align 4
  %xor1245.i4692 = xor i32 %3840, %3842
  store i32 %xor1245.i4692, i32* %t.i3468, align 4
  %3843 = load i32, i32* %t.i3468, align 4
  %3844 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3843) #5, !srcloc !30
  store i32 %3844, i32* %ret1246.i3528, align 4
  %3845 = load i32, i32* %ret1246.i3528, align 4
  store i32 %3845, i32* %tmp1247.i3529, align 4
  %3846 = load i32, i32* %tmp1247.i3529, align 4
  store i32 %3846, i32* %t.i3468, align 4
  %3847 = load i32, i32* %u.i3469, align 4
  %shr1248.i4693 = lshr i32 %3847, 2
  %and1249.i4694 = and i32 %shr1248.i4693, 63
  %idxprom1250.i4695 = zext i32 %and1249.i4694 to i64
  %arrayidx1251.i4696 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i4695
  %3848 = load i32, i32* %arrayidx1251.i4696, align 4
  %3849 = load i32, i32* %u.i3469, align 4
  %shr1252.i4697 = lshr i32 %3849, 10
  %and1253.i4698 = and i32 %shr1252.i4697, 63
  %idxprom1254.i4699 = zext i32 %and1253.i4698 to i64
  %arrayidx1255.i4700 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i4699
  %3850 = load i32, i32* %arrayidx1255.i4700, align 4
  %xor1256.i4701 = xor i32 %3848, %3850
  %3851 = load i32, i32* %u.i3469, align 4
  %shr1257.i4702 = lshr i32 %3851, 18
  %and1258.i4703 = and i32 %shr1257.i4702, 63
  %idxprom1259.i4704 = zext i32 %and1258.i4703 to i64
  %arrayidx1260.i4705 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i4704
  %3852 = load i32, i32* %arrayidx1260.i4705, align 4
  %xor1261.i4706 = xor i32 %xor1256.i4701, %3852
  %3853 = load i32, i32* %u.i3469, align 4
  %shr1262.i4707 = lshr i32 %3853, 26
  %idxprom1264.i4708 = zext i32 %shr1262.i4707 to i64
  %arrayidx1265.i4709 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i4708
  %3854 = load i32, i32* %arrayidx1265.i4709, align 4
  %xor1266.i4710 = xor i32 %xor1261.i4706, %3854
  %3855 = load i32, i32* %t.i3468, align 4
  %shr1267.i4711 = lshr i32 %3855, 2
  %and1268.i4712 = and i32 %shr1267.i4711, 63
  %idxprom1269.i4713 = zext i32 %and1268.i4712 to i64
  %arrayidx1270.i4714 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i4713
  %3856 = load i32, i32* %arrayidx1270.i4714, align 4
  %xor1271.i4715 = xor i32 %xor1266.i4710, %3856
  %3857 = load i32, i32* %t.i3468, align 4
  %shr1272.i4716 = lshr i32 %3857, 10
  %and1273.i4717 = and i32 %shr1272.i4716, 63
  %idxprom1274.i4718 = zext i32 %and1273.i4717 to i64
  %arrayidx1275.i4719 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i4718
  %3858 = load i32, i32* %arrayidx1275.i4719, align 4
  %xor1276.i4720 = xor i32 %xor1271.i4715, %3858
  %3859 = load i32, i32* %t.i3468, align 4
  %shr1277.i4721 = lshr i32 %3859, 18
  %and1278.i4722 = and i32 %shr1277.i4721, 63
  %idxprom1279.i4723 = zext i32 %and1278.i4722 to i64
  %arrayidx1280.i4724 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i4723
  %3860 = load i32, i32* %arrayidx1280.i4724, align 4
  %xor1281.i4725 = xor i32 %xor1276.i4720, %3860
  %3861 = load i32, i32* %t.i3468, align 4
  %shr1282.i4726 = lshr i32 %3861, 26
  %idxprom1284.i4727 = zext i32 %shr1282.i4726 to i64
  %arrayidx1285.i4728 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i4727
  %3862 = load i32, i32* %arrayidx1285.i4728, align 4
  %xor1286.i4729 = xor i32 %xor1281.i4725, %3862
  %3863 = load i32, i32* %l.i3466, align 4
  %xor1287.i4730 = xor i32 %3863, %xor1286.i4729
  store i32 %xor1287.i4730, i32* %l.i3466, align 4
  %3864 = load i32, i32* %l.i3466, align 4
  %3865 = load i32*, i32** %s.i3470, align 8
  %arrayidx1288.i4731 = getelementptr inbounds i32, i32* %3865, i64 8
  %3866 = load i32, i32* %arrayidx1288.i4731, align 4
  %xor1289.i4732 = xor i32 %3864, %3866
  store i32 %xor1289.i4732, i32* %u.i3469, align 4
  %3867 = load i32, i32* %l.i3466, align 4
  %3868 = load i32*, i32** %s.i3470, align 8
  %arrayidx1290.i4733 = getelementptr inbounds i32, i32* %3868, i64 9
  %3869 = load i32, i32* %arrayidx1290.i4733, align 4
  %xor1291.i4734 = xor i32 %3867, %3869
  store i32 %xor1291.i4734, i32* %t.i3468, align 4
  %3870 = load i32, i32* %t.i3468, align 4
  %3871 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3870) #5, !srcloc !31
  store i32 %3871, i32* %ret1292.i3530, align 4
  %3872 = load i32, i32* %ret1292.i3530, align 4
  store i32 %3872, i32* %tmp1293.i3531, align 4
  %3873 = load i32, i32* %tmp1293.i3531, align 4
  store i32 %3873, i32* %t.i3468, align 4
  %3874 = load i32, i32* %u.i3469, align 4
  %shr1294.i4735 = lshr i32 %3874, 2
  %and1295.i4736 = and i32 %shr1294.i4735, 63
  %idxprom1296.i4737 = zext i32 %and1295.i4736 to i64
  %arrayidx1297.i4738 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i4737
  %3875 = load i32, i32* %arrayidx1297.i4738, align 4
  %3876 = load i32, i32* %u.i3469, align 4
  %shr1298.i4739 = lshr i32 %3876, 10
  %and1299.i4740 = and i32 %shr1298.i4739, 63
  %idxprom1300.i4741 = zext i32 %and1299.i4740 to i64
  %arrayidx1301.i4742 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i4741
  %3877 = load i32, i32* %arrayidx1301.i4742, align 4
  %xor1302.i4743 = xor i32 %3875, %3877
  %3878 = load i32, i32* %u.i3469, align 4
  %shr1303.i4744 = lshr i32 %3878, 18
  %and1304.i4745 = and i32 %shr1303.i4744, 63
  %idxprom1305.i4746 = zext i32 %and1304.i4745 to i64
  %arrayidx1306.i4747 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i4746
  %3879 = load i32, i32* %arrayidx1306.i4747, align 4
  %xor1307.i4748 = xor i32 %xor1302.i4743, %3879
  %3880 = load i32, i32* %u.i3469, align 4
  %shr1308.i4749 = lshr i32 %3880, 26
  %idxprom1310.i4750 = zext i32 %shr1308.i4749 to i64
  %arrayidx1311.i4751 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i4750
  %3881 = load i32, i32* %arrayidx1311.i4751, align 4
  %xor1312.i4752 = xor i32 %xor1307.i4748, %3881
  %3882 = load i32, i32* %t.i3468, align 4
  %shr1313.i4753 = lshr i32 %3882, 2
  %and1314.i4754 = and i32 %shr1313.i4753, 63
  %idxprom1315.i4755 = zext i32 %and1314.i4754 to i64
  %arrayidx1316.i4756 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i4755
  %3883 = load i32, i32* %arrayidx1316.i4756, align 4
  %xor1317.i4757 = xor i32 %xor1312.i4752, %3883
  %3884 = load i32, i32* %t.i3468, align 4
  %shr1318.i4758 = lshr i32 %3884, 10
  %and1319.i4759 = and i32 %shr1318.i4758, 63
  %idxprom1320.i4760 = zext i32 %and1319.i4759 to i64
  %arrayidx1321.i4761 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i4760
  %3885 = load i32, i32* %arrayidx1321.i4761, align 4
  %xor1322.i4762 = xor i32 %xor1317.i4757, %3885
  %3886 = load i32, i32* %t.i3468, align 4
  %shr1323.i4763 = lshr i32 %3886, 18
  %and1324.i4764 = and i32 %shr1323.i4763, 63
  %idxprom1325.i4765 = zext i32 %and1324.i4764 to i64
  %arrayidx1326.i4766 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i4765
  %3887 = load i32, i32* %arrayidx1326.i4766, align 4
  %xor1327.i4767 = xor i32 %xor1322.i4762, %3887
  %3888 = load i32, i32* %t.i3468, align 4
  %shr1328.i4768 = lshr i32 %3888, 26
  %idxprom1330.i4769 = zext i32 %shr1328.i4768 to i64
  %arrayidx1331.i4770 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i4769
  %3889 = load i32, i32* %arrayidx1331.i4770, align 4
  %xor1332.i4771 = xor i32 %xor1327.i4767, %3889
  %3890 = load i32, i32* %r.i3467, align 4
  %xor1333.i4772 = xor i32 %3890, %xor1332.i4771
  store i32 %xor1333.i4772, i32* %r.i3467, align 4
  %3891 = load i32, i32* %r.i3467, align 4
  %3892 = load i32*, i32** %s.i3470, align 8
  %arrayidx1334.i4773 = getelementptr inbounds i32, i32* %3892, i64 6
  %3893 = load i32, i32* %arrayidx1334.i4773, align 4
  %xor1335.i4774 = xor i32 %3891, %3893
  store i32 %xor1335.i4774, i32* %u.i3469, align 4
  %3894 = load i32, i32* %r.i3467, align 4
  %3895 = load i32*, i32** %s.i3470, align 8
  %arrayidx1336.i4775 = getelementptr inbounds i32, i32* %3895, i64 7
  %3896 = load i32, i32* %arrayidx1336.i4775, align 4
  %xor1337.i4776 = xor i32 %3894, %3896
  store i32 %xor1337.i4776, i32* %t.i3468, align 4
  %3897 = load i32, i32* %t.i3468, align 4
  %3898 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3897) #5, !srcloc !32
  store i32 %3898, i32* %ret1338.i3532, align 4
  %3899 = load i32, i32* %ret1338.i3532, align 4
  store i32 %3899, i32* %tmp1339.i3533, align 4
  %3900 = load i32, i32* %tmp1339.i3533, align 4
  store i32 %3900, i32* %t.i3468, align 4
  %3901 = load i32, i32* %u.i3469, align 4
  %shr1340.i4777 = lshr i32 %3901, 2
  %and1341.i4778 = and i32 %shr1340.i4777, 63
  %idxprom1342.i4779 = zext i32 %and1341.i4778 to i64
  %arrayidx1343.i4780 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i4779
  %3902 = load i32, i32* %arrayidx1343.i4780, align 4
  %3903 = load i32, i32* %u.i3469, align 4
  %shr1344.i4781 = lshr i32 %3903, 10
  %and1345.i4782 = and i32 %shr1344.i4781, 63
  %idxprom1346.i4783 = zext i32 %and1345.i4782 to i64
  %arrayidx1347.i4784 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i4783
  %3904 = load i32, i32* %arrayidx1347.i4784, align 4
  %xor1348.i4785 = xor i32 %3902, %3904
  %3905 = load i32, i32* %u.i3469, align 4
  %shr1349.i4786 = lshr i32 %3905, 18
  %and1350.i4787 = and i32 %shr1349.i4786, 63
  %idxprom1351.i4788 = zext i32 %and1350.i4787 to i64
  %arrayidx1352.i4789 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i4788
  %3906 = load i32, i32* %arrayidx1352.i4789, align 4
  %xor1353.i4790 = xor i32 %xor1348.i4785, %3906
  %3907 = load i32, i32* %u.i3469, align 4
  %shr1354.i4791 = lshr i32 %3907, 26
  %idxprom1356.i4792 = zext i32 %shr1354.i4791 to i64
  %arrayidx1357.i4793 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i4792
  %3908 = load i32, i32* %arrayidx1357.i4793, align 4
  %xor1358.i4794 = xor i32 %xor1353.i4790, %3908
  %3909 = load i32, i32* %t.i3468, align 4
  %shr1359.i4795 = lshr i32 %3909, 2
  %and1360.i4796 = and i32 %shr1359.i4795, 63
  %idxprom1361.i4797 = zext i32 %and1360.i4796 to i64
  %arrayidx1362.i4798 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i4797
  %3910 = load i32, i32* %arrayidx1362.i4798, align 4
  %xor1363.i4799 = xor i32 %xor1358.i4794, %3910
  %3911 = load i32, i32* %t.i3468, align 4
  %shr1364.i4800 = lshr i32 %3911, 10
  %and1365.i4801 = and i32 %shr1364.i4800, 63
  %idxprom1366.i4802 = zext i32 %and1365.i4801 to i64
  %arrayidx1367.i4803 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i4802
  %3912 = load i32, i32* %arrayidx1367.i4803, align 4
  %xor1368.i4804 = xor i32 %xor1363.i4799, %3912
  %3913 = load i32, i32* %t.i3468, align 4
  %shr1369.i4805 = lshr i32 %3913, 18
  %and1370.i4806 = and i32 %shr1369.i4805, 63
  %idxprom1371.i4807 = zext i32 %and1370.i4806 to i64
  %arrayidx1372.i4808 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i4807
  %3914 = load i32, i32* %arrayidx1372.i4808, align 4
  %xor1373.i4809 = xor i32 %xor1368.i4804, %3914
  %3915 = load i32, i32* %t.i3468, align 4
  %shr1374.i4810 = lshr i32 %3915, 26
  %idxprom1376.i4811 = zext i32 %shr1374.i4810 to i64
  %arrayidx1377.i4812 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i4811
  %3916 = load i32, i32* %arrayidx1377.i4812, align 4
  %xor1378.i4813 = xor i32 %xor1373.i4809, %3916
  %3917 = load i32, i32* %l.i3466, align 4
  %xor1379.i4814 = xor i32 %3917, %xor1378.i4813
  store i32 %xor1379.i4814, i32* %l.i3466, align 4
  %3918 = load i32, i32* %l.i3466, align 4
  %3919 = load i32*, i32** %s.i3470, align 8
  %arrayidx1380.i4815 = getelementptr inbounds i32, i32* %3919, i64 4
  %3920 = load i32, i32* %arrayidx1380.i4815, align 4
  %xor1381.i4816 = xor i32 %3918, %3920
  store i32 %xor1381.i4816, i32* %u.i3469, align 4
  %3921 = load i32, i32* %l.i3466, align 4
  %3922 = load i32*, i32** %s.i3470, align 8
  %arrayidx1382.i4817 = getelementptr inbounds i32, i32* %3922, i64 5
  %3923 = load i32, i32* %arrayidx1382.i4817, align 4
  %xor1383.i4818 = xor i32 %3921, %3923
  store i32 %xor1383.i4818, i32* %t.i3468, align 4
  %3924 = load i32, i32* %t.i3468, align 4
  %3925 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3924) #5, !srcloc !33
  store i32 %3925, i32* %ret1384.i3534, align 4
  %3926 = load i32, i32* %ret1384.i3534, align 4
  store i32 %3926, i32* %tmp1385.i3535, align 4
  %3927 = load i32, i32* %tmp1385.i3535, align 4
  store i32 %3927, i32* %t.i3468, align 4
  %3928 = load i32, i32* %u.i3469, align 4
  %shr1386.i4819 = lshr i32 %3928, 2
  %and1387.i4820 = and i32 %shr1386.i4819, 63
  %idxprom1388.i4821 = zext i32 %and1387.i4820 to i64
  %arrayidx1389.i4822 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i4821
  %3929 = load i32, i32* %arrayidx1389.i4822, align 4
  %3930 = load i32, i32* %u.i3469, align 4
  %shr1390.i4823 = lshr i32 %3930, 10
  %and1391.i4824 = and i32 %shr1390.i4823, 63
  %idxprom1392.i4825 = zext i32 %and1391.i4824 to i64
  %arrayidx1393.i4826 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i4825
  %3931 = load i32, i32* %arrayidx1393.i4826, align 4
  %xor1394.i4827 = xor i32 %3929, %3931
  %3932 = load i32, i32* %u.i3469, align 4
  %shr1395.i4828 = lshr i32 %3932, 18
  %and1396.i4829 = and i32 %shr1395.i4828, 63
  %idxprom1397.i4830 = zext i32 %and1396.i4829 to i64
  %arrayidx1398.i4831 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i4830
  %3933 = load i32, i32* %arrayidx1398.i4831, align 4
  %xor1399.i4832 = xor i32 %xor1394.i4827, %3933
  %3934 = load i32, i32* %u.i3469, align 4
  %shr1400.i4833 = lshr i32 %3934, 26
  %idxprom1402.i4834 = zext i32 %shr1400.i4833 to i64
  %arrayidx1403.i4835 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i4834
  %3935 = load i32, i32* %arrayidx1403.i4835, align 4
  %xor1404.i4836 = xor i32 %xor1399.i4832, %3935
  %3936 = load i32, i32* %t.i3468, align 4
  %shr1405.i4837 = lshr i32 %3936, 2
  %and1406.i4838 = and i32 %shr1405.i4837, 63
  %idxprom1407.i4839 = zext i32 %and1406.i4838 to i64
  %arrayidx1408.i4840 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i4839
  %3937 = load i32, i32* %arrayidx1408.i4840, align 4
  %xor1409.i4841 = xor i32 %xor1404.i4836, %3937
  %3938 = load i32, i32* %t.i3468, align 4
  %shr1410.i4842 = lshr i32 %3938, 10
  %and1411.i4843 = and i32 %shr1410.i4842, 63
  %idxprom1412.i4844 = zext i32 %and1411.i4843 to i64
  %arrayidx1413.i4845 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i4844
  %3939 = load i32, i32* %arrayidx1413.i4845, align 4
  %xor1414.i4846 = xor i32 %xor1409.i4841, %3939
  %3940 = load i32, i32* %t.i3468, align 4
  %shr1415.i4847 = lshr i32 %3940, 18
  %and1416.i4848 = and i32 %shr1415.i4847, 63
  %idxprom1417.i4849 = zext i32 %and1416.i4848 to i64
  %arrayidx1418.i4850 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i4849
  %3941 = load i32, i32* %arrayidx1418.i4850, align 4
  %xor1419.i4851 = xor i32 %xor1414.i4846, %3941
  %3942 = load i32, i32* %t.i3468, align 4
  %shr1420.i4852 = lshr i32 %3942, 26
  %idxprom1422.i4853 = zext i32 %shr1420.i4852 to i64
  %arrayidx1423.i4854 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i4853
  %3943 = load i32, i32* %arrayidx1423.i4854, align 4
  %xor1424.i4855 = xor i32 %xor1419.i4851, %3943
  %3944 = load i32, i32* %r.i3467, align 4
  %xor1425.i4856 = xor i32 %3944, %xor1424.i4855
  store i32 %xor1425.i4856, i32* %r.i3467, align 4
  %3945 = load i32, i32* %r.i3467, align 4
  %3946 = load i32*, i32** %s.i3470, align 8
  %arrayidx1426.i4857 = getelementptr inbounds i32, i32* %3946, i64 2
  %3947 = load i32, i32* %arrayidx1426.i4857, align 4
  %xor1427.i4858 = xor i32 %3945, %3947
  store i32 %xor1427.i4858, i32* %u.i3469, align 4
  %3948 = load i32, i32* %r.i3467, align 4
  %3949 = load i32*, i32** %s.i3470, align 8
  %arrayidx1428.i4859 = getelementptr inbounds i32, i32* %3949, i64 3
  %3950 = load i32, i32* %arrayidx1428.i4859, align 4
  %xor1429.i4860 = xor i32 %3948, %3950
  store i32 %xor1429.i4860, i32* %t.i3468, align 4
  %3951 = load i32, i32* %t.i3468, align 4
  %3952 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3951) #5, !srcloc !34
  store i32 %3952, i32* %ret1430.i3536, align 4
  %3953 = load i32, i32* %ret1430.i3536, align 4
  store i32 %3953, i32* %tmp1431.i3537, align 4
  %3954 = load i32, i32* %tmp1431.i3537, align 4
  store i32 %3954, i32* %t.i3468, align 4
  %3955 = load i32, i32* %u.i3469, align 4
  %shr1432.i4861 = lshr i32 %3955, 2
  %and1433.i4862 = and i32 %shr1432.i4861, 63
  %idxprom1434.i4863 = zext i32 %and1433.i4862 to i64
  %arrayidx1435.i4864 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i4863
  %3956 = load i32, i32* %arrayidx1435.i4864, align 4
  %3957 = load i32, i32* %u.i3469, align 4
  %shr1436.i4865 = lshr i32 %3957, 10
  %and1437.i4866 = and i32 %shr1436.i4865, 63
  %idxprom1438.i4867 = zext i32 %and1437.i4866 to i64
  %arrayidx1439.i4868 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i4867
  %3958 = load i32, i32* %arrayidx1439.i4868, align 4
  %xor1440.i4869 = xor i32 %3956, %3958
  %3959 = load i32, i32* %u.i3469, align 4
  %shr1441.i4870 = lshr i32 %3959, 18
  %and1442.i4871 = and i32 %shr1441.i4870, 63
  %idxprom1443.i4872 = zext i32 %and1442.i4871 to i64
  %arrayidx1444.i4873 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i4872
  %3960 = load i32, i32* %arrayidx1444.i4873, align 4
  %xor1445.i4874 = xor i32 %xor1440.i4869, %3960
  %3961 = load i32, i32* %u.i3469, align 4
  %shr1446.i4875 = lshr i32 %3961, 26
  %idxprom1448.i4876 = zext i32 %shr1446.i4875 to i64
  %arrayidx1449.i4877 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i4876
  %3962 = load i32, i32* %arrayidx1449.i4877, align 4
  %xor1450.i4878 = xor i32 %xor1445.i4874, %3962
  %3963 = load i32, i32* %t.i3468, align 4
  %shr1451.i4879 = lshr i32 %3963, 2
  %and1452.i4880 = and i32 %shr1451.i4879, 63
  %idxprom1453.i4881 = zext i32 %and1452.i4880 to i64
  %arrayidx1454.i4882 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i4881
  %3964 = load i32, i32* %arrayidx1454.i4882, align 4
  %xor1455.i4883 = xor i32 %xor1450.i4878, %3964
  %3965 = load i32, i32* %t.i3468, align 4
  %shr1456.i4884 = lshr i32 %3965, 10
  %and1457.i4885 = and i32 %shr1456.i4884, 63
  %idxprom1458.i4886 = zext i32 %and1457.i4885 to i64
  %arrayidx1459.i4887 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i4886
  %3966 = load i32, i32* %arrayidx1459.i4887, align 4
  %xor1460.i4888 = xor i32 %xor1455.i4883, %3966
  %3967 = load i32, i32* %t.i3468, align 4
  %shr1461.i4889 = lshr i32 %3967, 18
  %and1462.i4890 = and i32 %shr1461.i4889, 63
  %idxprom1463.i4891 = zext i32 %and1462.i4890 to i64
  %arrayidx1464.i4892 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i4891
  %3968 = load i32, i32* %arrayidx1464.i4892, align 4
  %xor1465.i4893 = xor i32 %xor1460.i4888, %3968
  %3969 = load i32, i32* %t.i3468, align 4
  %shr1466.i4894 = lshr i32 %3969, 26
  %idxprom1468.i4895 = zext i32 %shr1466.i4894 to i64
  %arrayidx1469.i4896 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i4895
  %3970 = load i32, i32* %arrayidx1469.i4896, align 4
  %xor1470.i4897 = xor i32 %xor1465.i4893, %3970
  %3971 = load i32, i32* %l.i3466, align 4
  %xor1471.i4898 = xor i32 %3971, %xor1470.i4897
  store i32 %xor1471.i4898, i32* %l.i3466, align 4
  %3972 = load i32, i32* %l.i3466, align 4
  %3973 = load i32*, i32** %s.i3470, align 8
  %3974 = load i32, i32* %3973, align 4
  %xor1473.i4899 = xor i32 %3972, %3974
  store i32 %xor1473.i4899, i32* %u.i3469, align 4
  %3975 = load i32, i32* %l.i3466, align 4
  %3976 = load i32*, i32** %s.i3470, align 8
  %arrayidx1474.i4900 = getelementptr inbounds i32, i32* %3976, i64 1
  %3977 = load i32, i32* %arrayidx1474.i4900, align 4
  %xor1475.i4901 = xor i32 %3975, %3977
  store i32 %xor1475.i4901, i32* %t.i3468, align 4
  %3978 = load i32, i32* %t.i3468, align 4
  %3979 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3978) #5, !srcloc !35
  store i32 %3979, i32* %ret1476.i3538, align 4
  %3980 = load i32, i32* %ret1476.i3538, align 4
  store i32 %3980, i32* %tmp1477.i3539, align 4
  %3981 = load i32, i32* %tmp1477.i3539, align 4
  store i32 %3981, i32* %t.i3468, align 4
  %3982 = load i32, i32* %u.i3469, align 4
  %shr1478.i4902 = lshr i32 %3982, 2
  %and1479.i4903 = and i32 %shr1478.i4902, 63
  %idxprom1480.i4904 = zext i32 %and1479.i4903 to i64
  %arrayidx1481.i4905 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i4904
  %3983 = load i32, i32* %arrayidx1481.i4905, align 4
  %3984 = load i32, i32* %u.i3469, align 4
  %shr1482.i4906 = lshr i32 %3984, 10
  %and1483.i4907 = and i32 %shr1482.i4906, 63
  %idxprom1484.i4908 = zext i32 %and1483.i4907 to i64
  %arrayidx1485.i4909 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i4908
  %3985 = load i32, i32* %arrayidx1485.i4909, align 4
  %xor1486.i4910 = xor i32 %3983, %3985
  %3986 = load i32, i32* %u.i3469, align 4
  %shr1487.i4911 = lshr i32 %3986, 18
  %and1488.i4912 = and i32 %shr1487.i4911, 63
  %idxprom1489.i4913 = zext i32 %and1488.i4912 to i64
  %arrayidx1490.i4914 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i4913
  %3987 = load i32, i32* %arrayidx1490.i4914, align 4
  %xor1491.i4915 = xor i32 %xor1486.i4910, %3987
  %3988 = load i32, i32* %u.i3469, align 4
  %shr1492.i4916 = lshr i32 %3988, 26
  %idxprom1494.i4917 = zext i32 %shr1492.i4916 to i64
  %arrayidx1495.i4918 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i4917
  %3989 = load i32, i32* %arrayidx1495.i4918, align 4
  %xor1496.i4919 = xor i32 %xor1491.i4915, %3989
  %3990 = load i32, i32* %t.i3468, align 4
  %shr1497.i4920 = lshr i32 %3990, 2
  %and1498.i4921 = and i32 %shr1497.i4920, 63
  %idxprom1499.i4922 = zext i32 %and1498.i4921 to i64
  %arrayidx1500.i4923 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i4922
  %3991 = load i32, i32* %arrayidx1500.i4923, align 4
  %xor1501.i4924 = xor i32 %xor1496.i4919, %3991
  %3992 = load i32, i32* %t.i3468, align 4
  %shr1502.i4925 = lshr i32 %3992, 10
  %and1503.i4926 = and i32 %shr1502.i4925, 63
  %idxprom1504.i4927 = zext i32 %and1503.i4926 to i64
  %arrayidx1505.i4928 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i4927
  %3993 = load i32, i32* %arrayidx1505.i4928, align 4
  %xor1506.i4929 = xor i32 %xor1501.i4924, %3993
  %3994 = load i32, i32* %t.i3468, align 4
  %shr1507.i4930 = lshr i32 %3994, 18
  %and1508.i4931 = and i32 %shr1507.i4930, 63
  %idxprom1509.i4932 = zext i32 %and1508.i4931 to i64
  %arrayidx1510.i4933 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i4932
  %3995 = load i32, i32* %arrayidx1510.i4933, align 4
  %xor1511.i4934 = xor i32 %xor1506.i4929, %3995
  %3996 = load i32, i32* %t.i3468, align 4
  %shr1512.i4935 = lshr i32 %3996, 26
  %idxprom1514.i4936 = zext i32 %shr1512.i4935 to i64
  %arrayidx1515.i4937 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i4936
  %3997 = load i32, i32* %arrayidx1515.i4937, align 4
  %xor1516.i4938 = xor i32 %xor1511.i4934, %3997
  %3998 = load i32, i32* %r.i3467, align 4
  %xor1517.i4939 = xor i32 %3998, %xor1516.i4938
  store i32 %xor1517.i4939, i32* %r.i3467, align 4
  br label %DES_encrypt1.exit4988

DES_encrypt1.exit4988:                            ; preds = %if.then.i4268, %if.else.i4940
  %3999 = load i32, i32* %l.i3466, align 4
  %4000 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %3999) #5, !srcloc !36
  store i32 %4000, i32* %ret1518.i3540, align 4
  %4001 = load i32, i32* %ret1518.i3540, align 4
  store i32 %4001, i32* %tmp1519.i3541, align 4
  %4002 = load i32, i32* %tmp1519.i3541, align 4
  %conv1520.i4941 = zext i32 %4002 to i64
  %and1521.i4942 = and i64 %conv1520.i4941, 4294967295
  %conv1522.i4943 = trunc i64 %and1521.i4942 to i32
  store i32 %conv1522.i4943, i32* %l.i3466, align 4
  %4003 = load i32, i32* %r.i3467, align 4
  %4004 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %4003) #5, !srcloc !37
  store i32 %4004, i32* %ret1523.i3542, align 4
  %4005 = load i32, i32* %ret1523.i3542, align 4
  store i32 %4005, i32* %tmp1524.i3543, align 4
  %4006 = load i32, i32* %tmp1524.i3543, align 4
  %conv1525.i4944 = zext i32 %4006 to i64
  %and1526.i4945 = and i64 %conv1525.i4944, 4294967295
  %conv1527.i4946 = trunc i64 %and1526.i4945 to i32
  store i32 %conv1527.i4946, i32* %r.i3467, align 4
  %4007 = load i32, i32* %r.i3467, align 4
  %shr1529.i4947 = lshr i32 %4007, 1
  %4008 = load i32, i32* %l.i3466, align 4
  %xor1530.i4948 = xor i32 %shr1529.i4947, %4008
  %conv1531.i4949 = zext i32 %xor1530.i4948 to i64
  %and1532.i4950 = and i64 %conv1531.i4949, 1431655765
  %conv1533.i4951 = trunc i64 %and1532.i4950 to i32
  store i32 %conv1533.i4951, i32* %tt1528.i3544, align 4
  %4009 = load i32, i32* %tt1528.i3544, align 4
  %4010 = load i32, i32* %l.i3466, align 4
  %xor1534.i4952 = xor i32 %4010, %4009
  store i32 %xor1534.i4952, i32* %l.i3466, align 4
  %4011 = load i32, i32* %tt1528.i3544, align 4
  %shl1535.i4953 = shl i32 %4011, 1
  %4012 = load i32, i32* %r.i3467, align 4
  %xor1536.i4954 = xor i32 %4012, %shl1535.i4953
  store i32 %xor1536.i4954, i32* %r.i3467, align 4
  %4013 = load i32, i32* %l.i3466, align 4
  %shr1537.i4955 = lshr i32 %4013, 8
  %4014 = load i32, i32* %r.i3467, align 4
  %xor1538.i4956 = xor i32 %shr1537.i4955, %4014
  %conv1539.i4957 = zext i32 %xor1538.i4956 to i64
  %and1540.i4958 = and i64 %conv1539.i4957, 16711935
  %conv1541.i4959 = trunc i64 %and1540.i4958 to i32
  store i32 %conv1541.i4959, i32* %tt1528.i3544, align 4
  %4015 = load i32, i32* %tt1528.i3544, align 4
  %4016 = load i32, i32* %r.i3467, align 4
  %xor1542.i4960 = xor i32 %4016, %4015
  store i32 %xor1542.i4960, i32* %r.i3467, align 4
  %4017 = load i32, i32* %tt1528.i3544, align 4
  %shl1543.i4961 = shl i32 %4017, 8
  %4018 = load i32, i32* %l.i3466, align 4
  %xor1544.i4962 = xor i32 %4018, %shl1543.i4961
  store i32 %xor1544.i4962, i32* %l.i3466, align 4
  %4019 = load i32, i32* %r.i3467, align 4
  %shr1545.i4963 = lshr i32 %4019, 2
  %4020 = load i32, i32* %l.i3466, align 4
  %xor1546.i4964 = xor i32 %shr1545.i4963, %4020
  %conv1547.i4965 = zext i32 %xor1546.i4964 to i64
  %and1548.i4966 = and i64 %conv1547.i4965, 858993459
  %conv1549.i4967 = trunc i64 %and1548.i4966 to i32
  store i32 %conv1549.i4967, i32* %tt1528.i3544, align 4
  %4021 = load i32, i32* %tt1528.i3544, align 4
  %4022 = load i32, i32* %l.i3466, align 4
  %xor1550.i4968 = xor i32 %4022, %4021
  store i32 %xor1550.i4968, i32* %l.i3466, align 4
  %4023 = load i32, i32* %tt1528.i3544, align 4
  %shl1551.i4969 = shl i32 %4023, 2
  %4024 = load i32, i32* %r.i3467, align 4
  %xor1552.i4970 = xor i32 %4024, %shl1551.i4969
  store i32 %xor1552.i4970, i32* %r.i3467, align 4
  %4025 = load i32, i32* %l.i3466, align 4
  %shr1553.i4971 = lshr i32 %4025, 16
  %4026 = load i32, i32* %r.i3467, align 4
  %xor1554.i4972 = xor i32 %shr1553.i4971, %4026
  %conv1555.i4973 = zext i32 %xor1554.i4972 to i64
  %and1556.i4974 = and i64 %conv1555.i4973, 65535
  %conv1557.i4975 = trunc i64 %and1556.i4974 to i32
  store i32 %conv1557.i4975, i32* %tt1528.i3544, align 4
  %4027 = load i32, i32* %tt1528.i3544, align 4
  %4028 = load i32, i32* %r.i3467, align 4
  %xor1558.i4976 = xor i32 %4028, %4027
  store i32 %xor1558.i4976, i32* %r.i3467, align 4
  %4029 = load i32, i32* %tt1528.i3544, align 4
  %shl1559.i4977 = shl i32 %4029, 16
  %4030 = load i32, i32* %l.i3466, align 4
  %xor1560.i4978 = xor i32 %4030, %shl1559.i4977
  store i32 %xor1560.i4978, i32* %l.i3466, align 4
  %4031 = load i32, i32* %r.i3467, align 4
  %shr1561.i4979 = lshr i32 %4031, 4
  %4032 = load i32, i32* %l.i3466, align 4
  %xor1562.i4980 = xor i32 %shr1561.i4979, %4032
  %conv1563.i4981 = zext i32 %xor1562.i4980 to i64
  %and1564.i4982 = and i64 %conv1563.i4981, 252645135
  %conv1565.i4983 = trunc i64 %and1564.i4982 to i32
  store i32 %conv1565.i4983, i32* %tt1528.i3544, align 4
  %4033 = load i32, i32* %tt1528.i3544, align 4
  %4034 = load i32, i32* %l.i3466, align 4
  %xor1566.i4984 = xor i32 %4034, %4033
  store i32 %xor1566.i4984, i32* %l.i3466, align 4
  %4035 = load i32, i32* %tt1528.i3544, align 4
  %shl1567.i4985 = shl i32 %4035, 4
  %4036 = load i32, i32* %r.i3467, align 4
  %xor1568.i4986 = xor i32 %4036, %shl1567.i4985
  store i32 %xor1568.i4986, i32* %r.i3467, align 4
  %4037 = load i32, i32* %l.i3466, align 4
  %4038 = load i32*, i32** %data.addr.i3463, align 8
  store i32 %4037, i32* %4038, align 4
  %4039 = load i32, i32* %r.i3467, align 4
  %4040 = load i32*, i32** %data.addr.i3463, align 8
  %arrayidx1570.i4987 = getelementptr inbounds i32, i32* %4040, i64 1
  store i32 %4039, i32* %arrayidx1570.i4987, align 4
  store i32 0, i32* %u.i3469, align 4
  store i32 0, i32* %t.i3468, align 4
  store i32 0, i32* %r.i3467, align 4
  store i32 0, i32* %l.i3466, align 4
  %arrayidx330 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %4041 = load i32, i32* %arrayidx330, align 4
  %4042 = load i32, i32* %xor0, align 4
  %xor331 = xor i32 %4041, %4042
  store i32 %xor331, i32* %tout0, align 4
  %arrayidx332 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  %4043 = load i32, i32* %arrayidx332, align 4
  %4044 = load i32, i32* %xor1, align 4
  %xor333 = xor i32 %4043, %4044
  store i32 %xor333, i32* %tout1, align 4
  %4045 = load i64, i64* %l, align 8
  %add334 = add nsw i64 %4045, 8
  %4046 = load i8*, i8** %out.addr, align 8
  %add.ptr335 = getelementptr inbounds i8, i8* %4046, i64 %add334
  store i8* %add.ptr335, i8** %out.addr, align 8
  %4047 = load i64, i64* %l, align 8
  %add336 = add nsw i64 %4047, 8
  switch i64 %add336, label %sw.epilog375 [
    i64 8, label %sw.bb337
    i64 7, label %sw.bb342
    i64 6, label %sw.bb347
    i64 5, label %sw.bb352
    i64 4, label %sw.bb356
    i64 3, label %sw.bb361
    i64 2, label %sw.bb366
    i64 1, label %sw.bb371
  ]

sw.bb337:                                         ; preds = %DES_encrypt1.exit4988
  %4048 = load i32, i32* %tout1, align 4
  %shr338 = lshr i32 %4048, 24
  %and339 = and i32 %shr338, 255
  %conv340 = trunc i32 %and339 to i8
  %4049 = load i8*, i8** %out.addr, align 8
  %incdec.ptr341 = getelementptr inbounds i8, i8* %4049, i32 -1
  store i8* %incdec.ptr341, i8** %out.addr, align 8
  store i8 %conv340, i8* %incdec.ptr341, align 1
  br label %sw.bb342

sw.bb342:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb337
  %4050 = load i32, i32* %tout1, align 4
  %shr343 = lshr i32 %4050, 16
  %and344 = and i32 %shr343, 255
  %conv345 = trunc i32 %and344 to i8
  %4051 = load i8*, i8** %out.addr, align 8
  %incdec.ptr346 = getelementptr inbounds i8, i8* %4051, i32 -1
  store i8* %incdec.ptr346, i8** %out.addr, align 8
  store i8 %conv345, i8* %incdec.ptr346, align 1
  br label %sw.bb347

sw.bb347:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb342
  %4052 = load i32, i32* %tout1, align 4
  %shr348 = lshr i32 %4052, 8
  %and349 = and i32 %shr348, 255
  %conv350 = trunc i32 %and349 to i8
  %4053 = load i8*, i8** %out.addr, align 8
  %incdec.ptr351 = getelementptr inbounds i8, i8* %4053, i32 -1
  store i8* %incdec.ptr351, i8** %out.addr, align 8
  store i8 %conv350, i8* %incdec.ptr351, align 1
  br label %sw.bb352

sw.bb352:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb347
  %4054 = load i32, i32* %tout1, align 4
  %and353 = and i32 %4054, 255
  %conv354 = trunc i32 %and353 to i8
  %4055 = load i8*, i8** %out.addr, align 8
  %incdec.ptr355 = getelementptr inbounds i8, i8* %4055, i32 -1
  store i8* %incdec.ptr355, i8** %out.addr, align 8
  store i8 %conv354, i8* %incdec.ptr355, align 1
  br label %sw.bb356

sw.bb356:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb352
  %4056 = load i32, i32* %tout0, align 4
  %shr357 = lshr i32 %4056, 24
  %and358 = and i32 %shr357, 255
  %conv359 = trunc i32 %and358 to i8
  %4057 = load i8*, i8** %out.addr, align 8
  %incdec.ptr360 = getelementptr inbounds i8, i8* %4057, i32 -1
  store i8* %incdec.ptr360, i8** %out.addr, align 8
  store i8 %conv359, i8* %incdec.ptr360, align 1
  br label %sw.bb361

sw.bb361:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb356
  %4058 = load i32, i32* %tout0, align 4
  %shr362 = lshr i32 %4058, 16
  %and363 = and i32 %shr362, 255
  %conv364 = trunc i32 %and363 to i8
  %4059 = load i8*, i8** %out.addr, align 8
  %incdec.ptr365 = getelementptr inbounds i8, i8* %4059, i32 -1
  store i8* %incdec.ptr365, i8** %out.addr, align 8
  store i8 %conv364, i8* %incdec.ptr365, align 1
  br label %sw.bb366

sw.bb366:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb361
  %4060 = load i32, i32* %tout0, align 4
  %shr367 = lshr i32 %4060, 8
  %and368 = and i32 %shr367, 255
  %conv369 = trunc i32 %and368 to i8
  %4061 = load i8*, i8** %out.addr, align 8
  %incdec.ptr370 = getelementptr inbounds i8, i8* %4061, i32 -1
  store i8* %incdec.ptr370, i8** %out.addr, align 8
  store i8 %conv369, i8* %incdec.ptr370, align 1
  br label %sw.bb371

sw.bb371:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb366
  %4062 = load i32, i32* %tout0, align 4
  %and372 = and i32 %4062, 255
  %conv373 = trunc i32 %and372 to i8
  %4063 = load i8*, i8** %out.addr, align 8
  %incdec.ptr374 = getelementptr inbounds i8, i8* %4063, i32 -1
  store i8* %incdec.ptr374, i8** %out.addr, align 8
  store i8 %conv373, i8* %incdec.ptr374, align 1
  br label %sw.epilog375

sw.epilog375:                                     ; preds = %sw.bb371, %DES_encrypt1.exit4988
  %4064 = load i32, i32* %tin0, align 4
  store i32 %4064, i32* %xor0, align 4
  %4065 = load i32, i32* %tin1, align 4
  store i32 %4065, i32* %xor1, align 4
  br label %if.end376

if.end376:                                        ; preds = %sw.epilog375, %for.end295
  %4066 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8
  %arrayidx377 = getelementptr inbounds [8 x i8], [8 x i8]* %4066, i64 0, i64 0
  store i8* %arrayidx377, i8** %iv, align 8
  %4067 = load i32, i32* %xor0, align 4
  %and378 = and i32 %4067, 255
  %conv379 = trunc i32 %and378 to i8
  %4068 = load i8*, i8** %iv, align 8
  %incdec.ptr380 = getelementptr inbounds i8, i8* %4068, i32 1
  store i8* %incdec.ptr380, i8** %iv, align 8
  store i8 %conv379, i8* %4068, align 1
  %4069 = load i32, i32* %xor0, align 4
  %shr381 = lshr i32 %4069, 8
  %and382 = and i32 %shr381, 255
  %conv383 = trunc i32 %and382 to i8
  %4070 = load i8*, i8** %iv, align 8
  %incdec.ptr384 = getelementptr inbounds i8, i8* %4070, i32 1
  store i8* %incdec.ptr384, i8** %iv, align 8
  store i8 %conv383, i8* %4070, align 1
  %4071 = load i32, i32* %xor0, align 4
  %shr385 = lshr i32 %4071, 16
  %and386 = and i32 %shr385, 255
  %conv387 = trunc i32 %and386 to i8
  %4072 = load i8*, i8** %iv, align 8
  %incdec.ptr388 = getelementptr inbounds i8, i8* %4072, i32 1
  store i8* %incdec.ptr388, i8** %iv, align 8
  store i8 %conv387, i8* %4072, align 1
  %4073 = load i32, i32* %xor0, align 4
  %shr389 = lshr i32 %4073, 24
  %and390 = and i32 %shr389, 255
  %conv391 = trunc i32 %and390 to i8
  %4074 = load i8*, i8** %iv, align 8
  %incdec.ptr392 = getelementptr inbounds i8, i8* %4074, i32 1
  store i8* %incdec.ptr392, i8** %iv, align 8
  store i8 %conv391, i8* %4074, align 1
  %4075 = load i32, i32* %xor1, align 4
  %and393 = and i32 %4075, 255
  %conv394 = trunc i32 %and393 to i8
  %4076 = load i8*, i8** %iv, align 8
  %incdec.ptr395 = getelementptr inbounds i8, i8* %4076, i32 1
  store i8* %incdec.ptr395, i8** %iv, align 8
  store i8 %conv394, i8* %4076, align 1
  %4077 = load i32, i32* %xor1, align 4
  %shr396 = lshr i32 %4077, 8
  %and397 = and i32 %shr396, 255
  %conv398 = trunc i32 %and397 to i8
  %4078 = load i8*, i8** %iv, align 8
  %incdec.ptr399 = getelementptr inbounds i8, i8* %4078, i32 1
  store i8* %incdec.ptr399, i8** %iv, align 8
  store i8 %conv398, i8* %4078, align 1
  %4079 = load i32, i32* %xor1, align 4
  %shr400 = lshr i32 %4079, 16
  %and401 = and i32 %shr400, 255
  %conv402 = trunc i32 %and401 to i8
  %4080 = load i8*, i8** %iv, align 8
  %incdec.ptr403 = getelementptr inbounds i8, i8* %4080, i32 1
  store i8* %incdec.ptr403, i8** %iv, align 8
  store i8 %conv402, i8* %4080, align 1
  %4081 = load i32, i32* %xor1, align 4
  %shr404 = lshr i32 %4081, 24
  %and405 = and i32 %shr404, 255
  %conv406 = trunc i32 %and405 to i8
  %4082 = load i8*, i8** %iv, align 8
  %incdec.ptr407 = getelementptr inbounds i8, i8* %4082, i32 1
  store i8* %incdec.ptr407, i8** %iv, align 8
  store i8 %conv406, i8* %4082, align 1
  br label %if.end408

if.end408:                                        ; preds = %if.end376, %if.end
  store i32 0, i32* %xor1, align 4
  store i32 0, i32* %xor0, align 4
  store i32 0, i32* %tout1, align 4
  store i32 0, i32* %tout0, align 4
  store i32 0, i32* %tin1, align 4
  store i32 0, i32* %tin0, align 4
  %arrayidx409 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 0, i32* %arrayidx409, align 4
  %arrayidx410 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 0, i32* %arrayidx410, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_ede3_cbc_encrypt(i8* %input, i8* %output, i64 %length, %struct.DES_ks* %ks1, %struct.DES_ks* %ks2, %struct.DES_ks* %ks3, [8 x i8]* %ivec, i32 %enc) #1 {
entry:
  %input.addr = alloca i8*, align 8
  %output.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %ks1.addr = alloca %struct.DES_ks*, align 8
  %ks2.addr = alloca %struct.DES_ks*, align 8
  %ks3.addr = alloca %struct.DES_ks*, align 8
  %ivec.addr = alloca [8 x i8]*, align 8
  %enc.addr = alloca i32, align 4
  %tin0 = alloca i32, align 4
  %tin1 = alloca i32, align 4
  %tout0 = alloca i32, align 4
  %tout1 = alloca i32, align 4
  %xor0 = alloca i32, align 4
  %xor1 = alloca i32, align 4
  %in = alloca i8*, align 8
  %out = alloca i8*, align 8
  %l = alloca i64, align 8
  %tin = alloca [2 x i32], align 4
  %iv = alloca i8*, align 8
  %t0 = alloca i32, align 4
  %t1 = alloca i32, align 4
  store i8* %input, i8** %input.addr, align 8
  store i8* %output, i8** %output.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  store %struct.DES_ks* %ks1, %struct.DES_ks** %ks1.addr, align 8
  store %struct.DES_ks* %ks2, %struct.DES_ks** %ks2.addr, align 8
  store %struct.DES_ks* %ks3, %struct.DES_ks** %ks3.addr, align 8
  store [8 x i8]* %ivec, [8 x i8]** %ivec.addr, align 8
  store i32 %enc, i32* %enc.addr, align 4
  %0 = load i64, i64* %length.addr, align 8
  store i64 %0, i64* %l, align 8
  %1 = load i8*, i8** %input.addr, align 8
  store i8* %1, i8** %in, align 8
  %2 = load i8*, i8** %output.addr, align 8
  store i8* %2, i8** %out, align 8
  %3 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 0
  store i8* %arrayidx, i8** %iv, align 8
  %4 = load i32, i32* %enc.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %iv, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr, i8** %iv, align 8
  %6 = load i8, i8* %5, align 1
  %conv = zext i8 %6 to i32
  store i32 %conv, i32* %tout0, align 4
  %7 = load i8*, i8** %iv, align 8
  %incdec.ptr1 = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr1, i8** %iv, align 8
  %8 = load i8, i8* %7, align 1
  %conv2 = zext i8 %8 to i32
  %shl = shl i32 %conv2, 8
  %9 = load i32, i32* %tout0, align 4
  %or = or i32 %9, %shl
  store i32 %or, i32* %tout0, align 4
  %10 = load i8*, i8** %iv, align 8
  %incdec.ptr3 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr3, i8** %iv, align 8
  %11 = load i8, i8* %10, align 1
  %conv4 = zext i8 %11 to i32
  %shl5 = shl i32 %conv4, 16
  %12 = load i32, i32* %tout0, align 4
  %or6 = or i32 %12, %shl5
  store i32 %or6, i32* %tout0, align 4
  %13 = load i8*, i8** %iv, align 8
  %incdec.ptr7 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr7, i8** %iv, align 8
  %14 = load i8, i8* %13, align 1
  %conv8 = zext i8 %14 to i32
  %shl9 = shl i32 %conv8, 24
  %15 = load i32, i32* %tout0, align 4
  %or10 = or i32 %15, %shl9
  store i32 %or10, i32* %tout0, align 4
  %16 = load i8*, i8** %iv, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr11, i8** %iv, align 8
  %17 = load i8, i8* %16, align 1
  %conv12 = zext i8 %17 to i32
  store i32 %conv12, i32* %tout1, align 4
  %18 = load i8*, i8** %iv, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr13, i8** %iv, align 8
  %19 = load i8, i8* %18, align 1
  %conv14 = zext i8 %19 to i32
  %shl15 = shl i32 %conv14, 8
  %20 = load i32, i32* %tout1, align 4
  %or16 = or i32 %20, %shl15
  store i32 %or16, i32* %tout1, align 4
  %21 = load i8*, i8** %iv, align 8
  %incdec.ptr17 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr17, i8** %iv, align 8
  %22 = load i8, i8* %21, align 1
  %conv18 = zext i8 %22 to i32
  %shl19 = shl i32 %conv18, 16
  %23 = load i32, i32* %tout1, align 4
  %or20 = or i32 %23, %shl19
  store i32 %or20, i32* %tout1, align 4
  %24 = load i8*, i8** %iv, align 8
  %incdec.ptr21 = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %incdec.ptr21, i8** %iv, align 8
  %25 = load i8, i8* %24, align 1
  %conv22 = zext i8 %25 to i32
  %shl23 = shl i32 %conv22, 24
  %26 = load i32, i32* %tout1, align 4
  %or24 = or i32 %26, %shl23
  store i32 %or24, i32* %tout1, align 4
  %27 = load i64, i64* %l, align 8
  %sub = sub nsw i64 %27, 8
  store i64 %sub, i64* %l, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %28 = load i64, i64* %l, align 8
  %cmp = icmp sge i64 %28, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %29 = load i8*, i8** %in, align 8
  %incdec.ptr26 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %incdec.ptr26, i8** %in, align 8
  %30 = load i8, i8* %29, align 1
  %conv27 = zext i8 %30 to i32
  store i32 %conv27, i32* %tin0, align 4
  %31 = load i8*, i8** %in, align 8
  %incdec.ptr28 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %incdec.ptr28, i8** %in, align 8
  %32 = load i8, i8* %31, align 1
  %conv29 = zext i8 %32 to i32
  %shl30 = shl i32 %conv29, 8
  %33 = load i32, i32* %tin0, align 4
  %or31 = or i32 %33, %shl30
  store i32 %or31, i32* %tin0, align 4
  %34 = load i8*, i8** %in, align 8
  %incdec.ptr32 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr32, i8** %in, align 8
  %35 = load i8, i8* %34, align 1
  %conv33 = zext i8 %35 to i32
  %shl34 = shl i32 %conv33, 16
  %36 = load i32, i32* %tin0, align 4
  %or35 = or i32 %36, %shl34
  store i32 %or35, i32* %tin0, align 4
  %37 = load i8*, i8** %in, align 8
  %incdec.ptr36 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %incdec.ptr36, i8** %in, align 8
  %38 = load i8, i8* %37, align 1
  %conv37 = zext i8 %38 to i32
  %shl38 = shl i32 %conv37, 24
  %39 = load i32, i32* %tin0, align 4
  %or39 = or i32 %39, %shl38
  store i32 %or39, i32* %tin0, align 4
  %40 = load i8*, i8** %in, align 8
  %incdec.ptr40 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %incdec.ptr40, i8** %in, align 8
  %41 = load i8, i8* %40, align 1
  %conv41 = zext i8 %41 to i32
  store i32 %conv41, i32* %tin1, align 4
  %42 = load i8*, i8** %in, align 8
  %incdec.ptr42 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %incdec.ptr42, i8** %in, align 8
  %43 = load i8, i8* %42, align 1
  %conv43 = zext i8 %43 to i32
  %shl44 = shl i32 %conv43, 8
  %44 = load i32, i32* %tin1, align 4
  %or45 = or i32 %44, %shl44
  store i32 %or45, i32* %tin1, align 4
  %45 = load i8*, i8** %in, align 8
  %incdec.ptr46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %incdec.ptr46, i8** %in, align 8
  %46 = load i8, i8* %45, align 1
  %conv47 = zext i8 %46 to i32
  %shl48 = shl i32 %conv47, 16
  %47 = load i32, i32* %tin1, align 4
  %or49 = or i32 %47, %shl48
  store i32 %or49, i32* %tin1, align 4
  %48 = load i8*, i8** %in, align 8
  %incdec.ptr50 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr50, i8** %in, align 8
  %49 = load i8, i8* %48, align 1
  %conv51 = zext i8 %49 to i32
  %shl52 = shl i32 %conv51, 24
  %50 = load i32, i32* %tin1, align 4
  %or53 = or i32 %50, %shl52
  store i32 %or53, i32* %tin1, align 4
  %51 = load i32, i32* %tout0, align 4
  %52 = load i32, i32* %tin0, align 4
  %xor = xor i32 %52, %51
  store i32 %xor, i32* %tin0, align 4
  %53 = load i32, i32* %tout1, align 4
  %54 = load i32, i32* %tin1, align 4
  %xor54 = xor i32 %54, %53
  store i32 %xor54, i32* %tin1, align 4
  %55 = load i32, i32* %tin0, align 4
  %arrayidx55 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %55, i32* %arrayidx55, align 4
  %56 = load i32, i32* %tin1, align 4
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %56, i32* %arrayidx56, align 4
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %57 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8
  %58 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8
  %59 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8
  call void @DES_encrypt3(i32* %arraydecay, %struct.DES_ks* %57, %struct.DES_ks* %58, %struct.DES_ks* %59)
  %arrayidx57 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %60 = load i32, i32* %arrayidx57, align 4
  store i32 %60, i32* %tout0, align 4
  %arrayidx58 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  %61 = load i32, i32* %arrayidx58, align 4
  store i32 %61, i32* %tout1, align 4
  %62 = load i32, i32* %tout0, align 4
  %and = and i32 %62, 255
  %conv59 = trunc i32 %and to i8
  %63 = load i8*, i8** %out, align 8
  %incdec.ptr60 = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %incdec.ptr60, i8** %out, align 8
  store i8 %conv59, i8* %63, align 1
  %64 = load i32, i32* %tout0, align 4
  %shr = lshr i32 %64, 8
  %and61 = and i32 %shr, 255
  %conv62 = trunc i32 %and61 to i8
  %65 = load i8*, i8** %out, align 8
  %incdec.ptr63 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %incdec.ptr63, i8** %out, align 8
  store i8 %conv62, i8* %65, align 1
  %66 = load i32, i32* %tout0, align 4
  %shr64 = lshr i32 %66, 16
  %and65 = and i32 %shr64, 255
  %conv66 = trunc i32 %and65 to i8
  %67 = load i8*, i8** %out, align 8
  %incdec.ptr67 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %incdec.ptr67, i8** %out, align 8
  store i8 %conv66, i8* %67, align 1
  %68 = load i32, i32* %tout0, align 4
  %shr68 = lshr i32 %68, 24
  %and69 = and i32 %shr68, 255
  %conv70 = trunc i32 %and69 to i8
  %69 = load i8*, i8** %out, align 8
  %incdec.ptr71 = getelementptr inbounds i8, i8* %69, i32 1
  store i8* %incdec.ptr71, i8** %out, align 8
  store i8 %conv70, i8* %69, align 1
  %70 = load i32, i32* %tout1, align 4
  %and72 = and i32 %70, 255
  %conv73 = trunc i32 %and72 to i8
  %71 = load i8*, i8** %out, align 8
  %incdec.ptr74 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %incdec.ptr74, i8** %out, align 8
  store i8 %conv73, i8* %71, align 1
  %72 = load i32, i32* %tout1, align 4
  %shr75 = lshr i32 %72, 8
  %and76 = and i32 %shr75, 255
  %conv77 = trunc i32 %and76 to i8
  %73 = load i8*, i8** %out, align 8
  %incdec.ptr78 = getelementptr inbounds i8, i8* %73, i32 1
  store i8* %incdec.ptr78, i8** %out, align 8
  store i8 %conv77, i8* %73, align 1
  %74 = load i32, i32* %tout1, align 4
  %shr79 = lshr i32 %74, 16
  %and80 = and i32 %shr79, 255
  %conv81 = trunc i32 %and80 to i8
  %75 = load i8*, i8** %out, align 8
  %incdec.ptr82 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %incdec.ptr82, i8** %out, align 8
  store i8 %conv81, i8* %75, align 1
  %76 = load i32, i32* %tout1, align 4
  %shr83 = lshr i32 %76, 24
  %and84 = and i32 %shr83, 255
  %conv85 = trunc i32 %and84 to i8
  %77 = load i8*, i8** %out, align 8
  %incdec.ptr86 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %incdec.ptr86, i8** %out, align 8
  store i8 %conv85, i8* %77, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %78 = load i64, i64* %l, align 8
  %sub87 = sub nsw i64 %78, 8
  store i64 %sub87, i64* %l, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %79 = load i64, i64* %l, align 8
  %cmp88 = icmp ne i64 %79, -8
  br i1 %cmp88, label %if.then90, label %if.end

if.then90:                                        ; preds = %for.end
  %80 = load i64, i64* %l, align 8
  %add = add nsw i64 %80, 8
  %81 = load i8*, i8** %in, align 8
  %add.ptr = getelementptr inbounds i8, i8* %81, i64 %add
  store i8* %add.ptr, i8** %in, align 8
  store i32 0, i32* %tin1, align 4
  store i32 0, i32* %tin0, align 4
  %82 = load i64, i64* %l, align 8
  %add91 = add nsw i64 %82, 8
  switch i64 %add91, label %sw.epilog [
    i64 8, label %sw.bb
    i64 7, label %sw.bb95
    i64 6, label %sw.bb100
    i64 5, label %sw.bb105
    i64 4, label %sw.bb109
    i64 3, label %sw.bb113
    i64 2, label %sw.bb118
    i64 1, label %sw.bb123
  ]

sw.bb:                                            ; preds = %if.then90
  %83 = load i8*, i8** %in, align 8
  %incdec.ptr92 = getelementptr inbounds i8, i8* %83, i32 -1
  store i8* %incdec.ptr92, i8** %in, align 8
  %84 = load i8, i8* %incdec.ptr92, align 1
  %conv93 = zext i8 %84 to i32
  %shl94 = shl i32 %conv93, 24
  store i32 %shl94, i32* %tin1, align 4
  br label %sw.bb95

sw.bb95:                                          ; preds = %if.then90, %sw.bb
  %85 = load i8*, i8** %in, align 8
  %incdec.ptr96 = getelementptr inbounds i8, i8* %85, i32 -1
  store i8* %incdec.ptr96, i8** %in, align 8
  %86 = load i8, i8* %incdec.ptr96, align 1
  %conv97 = zext i8 %86 to i32
  %shl98 = shl i32 %conv97, 16
  %87 = load i32, i32* %tin1, align 4
  %or99 = or i32 %87, %shl98
  store i32 %or99, i32* %tin1, align 4
  br label %sw.bb100

sw.bb100:                                         ; preds = %if.then90, %sw.bb95
  %88 = load i8*, i8** %in, align 8
  %incdec.ptr101 = getelementptr inbounds i8, i8* %88, i32 -1
  store i8* %incdec.ptr101, i8** %in, align 8
  %89 = load i8, i8* %incdec.ptr101, align 1
  %conv102 = zext i8 %89 to i32
  %shl103 = shl i32 %conv102, 8
  %90 = load i32, i32* %tin1, align 4
  %or104 = or i32 %90, %shl103
  store i32 %or104, i32* %tin1, align 4
  br label %sw.bb105

sw.bb105:                                         ; preds = %if.then90, %sw.bb100
  %91 = load i8*, i8** %in, align 8
  %incdec.ptr106 = getelementptr inbounds i8, i8* %91, i32 -1
  store i8* %incdec.ptr106, i8** %in, align 8
  %92 = load i8, i8* %incdec.ptr106, align 1
  %conv107 = zext i8 %92 to i32
  %93 = load i32, i32* %tin1, align 4
  %or108 = or i32 %93, %conv107
  store i32 %or108, i32* %tin1, align 4
  br label %sw.bb109

sw.bb109:                                         ; preds = %if.then90, %sw.bb105
  %94 = load i8*, i8** %in, align 8
  %incdec.ptr110 = getelementptr inbounds i8, i8* %94, i32 -1
  store i8* %incdec.ptr110, i8** %in, align 8
  %95 = load i8, i8* %incdec.ptr110, align 1
  %conv111 = zext i8 %95 to i32
  %shl112 = shl i32 %conv111, 24
  store i32 %shl112, i32* %tin0, align 4
  br label %sw.bb113

sw.bb113:                                         ; preds = %if.then90, %sw.bb109
  %96 = load i8*, i8** %in, align 8
  %incdec.ptr114 = getelementptr inbounds i8, i8* %96, i32 -1
  store i8* %incdec.ptr114, i8** %in, align 8
  %97 = load i8, i8* %incdec.ptr114, align 1
  %conv115 = zext i8 %97 to i32
  %shl116 = shl i32 %conv115, 16
  %98 = load i32, i32* %tin0, align 4
  %or117 = or i32 %98, %shl116
  store i32 %or117, i32* %tin0, align 4
  br label %sw.bb118

sw.bb118:                                         ; preds = %if.then90, %sw.bb113
  %99 = load i8*, i8** %in, align 8
  %incdec.ptr119 = getelementptr inbounds i8, i8* %99, i32 -1
  store i8* %incdec.ptr119, i8** %in, align 8
  %100 = load i8, i8* %incdec.ptr119, align 1
  %conv120 = zext i8 %100 to i32
  %shl121 = shl i32 %conv120, 8
  %101 = load i32, i32* %tin0, align 4
  %or122 = or i32 %101, %shl121
  store i32 %or122, i32* %tin0, align 4
  br label %sw.bb123

sw.bb123:                                         ; preds = %if.then90, %sw.bb118
  %102 = load i8*, i8** %in, align 8
  %incdec.ptr124 = getelementptr inbounds i8, i8* %102, i32 -1
  store i8* %incdec.ptr124, i8** %in, align 8
  %103 = load i8, i8* %incdec.ptr124, align 1
  %conv125 = zext i8 %103 to i32
  %104 = load i32, i32* %tin0, align 4
  %or126 = or i32 %104, %conv125
  store i32 %or126, i32* %tin0, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb123, %if.then90
  %105 = load i32, i32* %tout0, align 4
  %106 = load i32, i32* %tin0, align 4
  %xor127 = xor i32 %106, %105
  store i32 %xor127, i32* %tin0, align 4
  %107 = load i32, i32* %tout1, align 4
  %108 = load i32, i32* %tin1, align 4
  %xor128 = xor i32 %108, %107
  store i32 %xor128, i32* %tin1, align 4
  %109 = load i32, i32* %tin0, align 4
  %arrayidx129 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %109, i32* %arrayidx129, align 4
  %110 = load i32, i32* %tin1, align 4
  %arrayidx130 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %110, i32* %arrayidx130, align 4
  %arraydecay131 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %111 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8
  %112 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8
  %113 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8
  call void @DES_encrypt3(i32* %arraydecay131, %struct.DES_ks* %111, %struct.DES_ks* %112, %struct.DES_ks* %113)
  %arrayidx132 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %114 = load i32, i32* %arrayidx132, align 4
  store i32 %114, i32* %tout0, align 4
  %arrayidx133 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  %115 = load i32, i32* %arrayidx133, align 4
  store i32 %115, i32* %tout1, align 4
  %116 = load i32, i32* %tout0, align 4
  %and134 = and i32 %116, 255
  %conv135 = trunc i32 %and134 to i8
  %117 = load i8*, i8** %out, align 8
  %incdec.ptr136 = getelementptr inbounds i8, i8* %117, i32 1
  store i8* %incdec.ptr136, i8** %out, align 8
  store i8 %conv135, i8* %117, align 1
  %118 = load i32, i32* %tout0, align 4
  %shr137 = lshr i32 %118, 8
  %and138 = and i32 %shr137, 255
  %conv139 = trunc i32 %and138 to i8
  %119 = load i8*, i8** %out, align 8
  %incdec.ptr140 = getelementptr inbounds i8, i8* %119, i32 1
  store i8* %incdec.ptr140, i8** %out, align 8
  store i8 %conv139, i8* %119, align 1
  %120 = load i32, i32* %tout0, align 4
  %shr141 = lshr i32 %120, 16
  %and142 = and i32 %shr141, 255
  %conv143 = trunc i32 %and142 to i8
  %121 = load i8*, i8** %out, align 8
  %incdec.ptr144 = getelementptr inbounds i8, i8* %121, i32 1
  store i8* %incdec.ptr144, i8** %out, align 8
  store i8 %conv143, i8* %121, align 1
  %122 = load i32, i32* %tout0, align 4
  %shr145 = lshr i32 %122, 24
  %and146 = and i32 %shr145, 255
  %conv147 = trunc i32 %and146 to i8
  %123 = load i8*, i8** %out, align 8
  %incdec.ptr148 = getelementptr inbounds i8, i8* %123, i32 1
  store i8* %incdec.ptr148, i8** %out, align 8
  store i8 %conv147, i8* %123, align 1
  %124 = load i32, i32* %tout1, align 4
  %and149 = and i32 %124, 255
  %conv150 = trunc i32 %and149 to i8
  %125 = load i8*, i8** %out, align 8
  %incdec.ptr151 = getelementptr inbounds i8, i8* %125, i32 1
  store i8* %incdec.ptr151, i8** %out, align 8
  store i8 %conv150, i8* %125, align 1
  %126 = load i32, i32* %tout1, align 4
  %shr152 = lshr i32 %126, 8
  %and153 = and i32 %shr152, 255
  %conv154 = trunc i32 %and153 to i8
  %127 = load i8*, i8** %out, align 8
  %incdec.ptr155 = getelementptr inbounds i8, i8* %127, i32 1
  store i8* %incdec.ptr155, i8** %out, align 8
  store i8 %conv154, i8* %127, align 1
  %128 = load i32, i32* %tout1, align 4
  %shr156 = lshr i32 %128, 16
  %and157 = and i32 %shr156, 255
  %conv158 = trunc i32 %and157 to i8
  %129 = load i8*, i8** %out, align 8
  %incdec.ptr159 = getelementptr inbounds i8, i8* %129, i32 1
  store i8* %incdec.ptr159, i8** %out, align 8
  store i8 %conv158, i8* %129, align 1
  %130 = load i32, i32* %tout1, align 4
  %shr160 = lshr i32 %130, 24
  %and161 = and i32 %shr160, 255
  %conv162 = trunc i32 %and161 to i8
  %131 = load i8*, i8** %out, align 8
  %incdec.ptr163 = getelementptr inbounds i8, i8* %131, i32 1
  store i8* %incdec.ptr163, i8** %out, align 8
  store i8 %conv162, i8* %131, align 1
  br label %if.end

if.end:                                           ; preds = %sw.epilog, %for.end
  %132 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8
  %arrayidx164 = getelementptr inbounds [8 x i8], [8 x i8]* %132, i64 0, i64 0
  store i8* %arrayidx164, i8** %iv, align 8
  %133 = load i32, i32* %tout0, align 4
  %and165 = and i32 %133, 255
  %conv166 = trunc i32 %and165 to i8
  %134 = load i8*, i8** %iv, align 8
  %incdec.ptr167 = getelementptr inbounds i8, i8* %134, i32 1
  store i8* %incdec.ptr167, i8** %iv, align 8
  store i8 %conv166, i8* %134, align 1
  %135 = load i32, i32* %tout0, align 4
  %shr168 = lshr i32 %135, 8
  %and169 = and i32 %shr168, 255
  %conv170 = trunc i32 %and169 to i8
  %136 = load i8*, i8** %iv, align 8
  %incdec.ptr171 = getelementptr inbounds i8, i8* %136, i32 1
  store i8* %incdec.ptr171, i8** %iv, align 8
  store i8 %conv170, i8* %136, align 1
  %137 = load i32, i32* %tout0, align 4
  %shr172 = lshr i32 %137, 16
  %and173 = and i32 %shr172, 255
  %conv174 = trunc i32 %and173 to i8
  %138 = load i8*, i8** %iv, align 8
  %incdec.ptr175 = getelementptr inbounds i8, i8* %138, i32 1
  store i8* %incdec.ptr175, i8** %iv, align 8
  store i8 %conv174, i8* %138, align 1
  %139 = load i32, i32* %tout0, align 4
  %shr176 = lshr i32 %139, 24
  %and177 = and i32 %shr176, 255
  %conv178 = trunc i32 %and177 to i8
  %140 = load i8*, i8** %iv, align 8
  %incdec.ptr179 = getelementptr inbounds i8, i8* %140, i32 1
  store i8* %incdec.ptr179, i8** %iv, align 8
  store i8 %conv178, i8* %140, align 1
  %141 = load i32, i32* %tout1, align 4
  %and180 = and i32 %141, 255
  %conv181 = trunc i32 %and180 to i8
  %142 = load i8*, i8** %iv, align 8
  %incdec.ptr182 = getelementptr inbounds i8, i8* %142, i32 1
  store i8* %incdec.ptr182, i8** %iv, align 8
  store i8 %conv181, i8* %142, align 1
  %143 = load i32, i32* %tout1, align 4
  %shr183 = lshr i32 %143, 8
  %and184 = and i32 %shr183, 255
  %conv185 = trunc i32 %and184 to i8
  %144 = load i8*, i8** %iv, align 8
  %incdec.ptr186 = getelementptr inbounds i8, i8* %144, i32 1
  store i8* %incdec.ptr186, i8** %iv, align 8
  store i8 %conv185, i8* %144, align 1
  %145 = load i32, i32* %tout1, align 4
  %shr187 = lshr i32 %145, 16
  %and188 = and i32 %shr187, 255
  %conv189 = trunc i32 %and188 to i8
  %146 = load i8*, i8** %iv, align 8
  %incdec.ptr190 = getelementptr inbounds i8, i8* %146, i32 1
  store i8* %incdec.ptr190, i8** %iv, align 8
  store i8 %conv189, i8* %146, align 1
  %147 = load i32, i32* %tout1, align 4
  %shr191 = lshr i32 %147, 24
  %and192 = and i32 %shr191, 255
  %conv193 = trunc i32 %and192 to i8
  %148 = load i8*, i8** %iv, align 8
  %incdec.ptr194 = getelementptr inbounds i8, i8* %148, i32 1
  store i8* %incdec.ptr194, i8** %iv, align 8
  store i8 %conv193, i8* %148, align 1
  br label %if.end408

if.else:                                          ; preds = %entry
  %149 = load i8*, i8** %iv, align 8
  %incdec.ptr195 = getelementptr inbounds i8, i8* %149, i32 1
  store i8* %incdec.ptr195, i8** %iv, align 8
  %150 = load i8, i8* %149, align 1
  %conv196 = zext i8 %150 to i32
  store i32 %conv196, i32* %xor0, align 4
  %151 = load i8*, i8** %iv, align 8
  %incdec.ptr197 = getelementptr inbounds i8, i8* %151, i32 1
  store i8* %incdec.ptr197, i8** %iv, align 8
  %152 = load i8, i8* %151, align 1
  %conv198 = zext i8 %152 to i32
  %shl199 = shl i32 %conv198, 8
  %153 = load i32, i32* %xor0, align 4
  %or200 = or i32 %153, %shl199
  store i32 %or200, i32* %xor0, align 4
  %154 = load i8*, i8** %iv, align 8
  %incdec.ptr201 = getelementptr inbounds i8, i8* %154, i32 1
  store i8* %incdec.ptr201, i8** %iv, align 8
  %155 = load i8, i8* %154, align 1
  %conv202 = zext i8 %155 to i32
  %shl203 = shl i32 %conv202, 16
  %156 = load i32, i32* %xor0, align 4
  %or204 = or i32 %156, %shl203
  store i32 %or204, i32* %xor0, align 4
  %157 = load i8*, i8** %iv, align 8
  %incdec.ptr205 = getelementptr inbounds i8, i8* %157, i32 1
  store i8* %incdec.ptr205, i8** %iv, align 8
  %158 = load i8, i8* %157, align 1
  %conv206 = zext i8 %158 to i32
  %shl207 = shl i32 %conv206, 24
  %159 = load i32, i32* %xor0, align 4
  %or208 = or i32 %159, %shl207
  store i32 %or208, i32* %xor0, align 4
  %160 = load i8*, i8** %iv, align 8
  %incdec.ptr209 = getelementptr inbounds i8, i8* %160, i32 1
  store i8* %incdec.ptr209, i8** %iv, align 8
  %161 = load i8, i8* %160, align 1
  %conv210 = zext i8 %161 to i32
  store i32 %conv210, i32* %xor1, align 4
  %162 = load i8*, i8** %iv, align 8
  %incdec.ptr211 = getelementptr inbounds i8, i8* %162, i32 1
  store i8* %incdec.ptr211, i8** %iv, align 8
  %163 = load i8, i8* %162, align 1
  %conv212 = zext i8 %163 to i32
  %shl213 = shl i32 %conv212, 8
  %164 = load i32, i32* %xor1, align 4
  %or214 = or i32 %164, %shl213
  store i32 %or214, i32* %xor1, align 4
  %165 = load i8*, i8** %iv, align 8
  %incdec.ptr215 = getelementptr inbounds i8, i8* %165, i32 1
  store i8* %incdec.ptr215, i8** %iv, align 8
  %166 = load i8, i8* %165, align 1
  %conv216 = zext i8 %166 to i32
  %shl217 = shl i32 %conv216, 16
  %167 = load i32, i32* %xor1, align 4
  %or218 = or i32 %167, %shl217
  store i32 %or218, i32* %xor1, align 4
  %168 = load i8*, i8** %iv, align 8
  %incdec.ptr219 = getelementptr inbounds i8, i8* %168, i32 1
  store i8* %incdec.ptr219, i8** %iv, align 8
  %169 = load i8, i8* %168, align 1
  %conv220 = zext i8 %169 to i32
  %shl221 = shl i32 %conv220, 24
  %170 = load i32, i32* %xor1, align 4
  %or222 = or i32 %170, %shl221
  store i32 %or222, i32* %xor1, align 4
  %171 = load i64, i64* %l, align 8
  %sub223 = sub nsw i64 %171, 8
  store i64 %sub223, i64* %l, align 8
  br label %for.cond224

for.cond224:                                      ; preds = %for.inc293, %if.else
  %172 = load i64, i64* %l, align 8
  %cmp225 = icmp sge i64 %172, 0
  br i1 %cmp225, label %for.body227, label %for.end295

for.body227:                                      ; preds = %for.cond224
  %173 = load i8*, i8** %in, align 8
  %incdec.ptr228 = getelementptr inbounds i8, i8* %173, i32 1
  store i8* %incdec.ptr228, i8** %in, align 8
  %174 = load i8, i8* %173, align 1
  %conv229 = zext i8 %174 to i32
  store i32 %conv229, i32* %tin0, align 4
  %175 = load i8*, i8** %in, align 8
  %incdec.ptr230 = getelementptr inbounds i8, i8* %175, i32 1
  store i8* %incdec.ptr230, i8** %in, align 8
  %176 = load i8, i8* %175, align 1
  %conv231 = zext i8 %176 to i32
  %shl232 = shl i32 %conv231, 8
  %177 = load i32, i32* %tin0, align 4
  %or233 = or i32 %177, %shl232
  store i32 %or233, i32* %tin0, align 4
  %178 = load i8*, i8** %in, align 8
  %incdec.ptr234 = getelementptr inbounds i8, i8* %178, i32 1
  store i8* %incdec.ptr234, i8** %in, align 8
  %179 = load i8, i8* %178, align 1
  %conv235 = zext i8 %179 to i32
  %shl236 = shl i32 %conv235, 16
  %180 = load i32, i32* %tin0, align 4
  %or237 = or i32 %180, %shl236
  store i32 %or237, i32* %tin0, align 4
  %181 = load i8*, i8** %in, align 8
  %incdec.ptr238 = getelementptr inbounds i8, i8* %181, i32 1
  store i8* %incdec.ptr238, i8** %in, align 8
  %182 = load i8, i8* %181, align 1
  %conv239 = zext i8 %182 to i32
  %shl240 = shl i32 %conv239, 24
  %183 = load i32, i32* %tin0, align 4
  %or241 = or i32 %183, %shl240
  store i32 %or241, i32* %tin0, align 4
  %184 = load i8*, i8** %in, align 8
  %incdec.ptr242 = getelementptr inbounds i8, i8* %184, i32 1
  store i8* %incdec.ptr242, i8** %in, align 8
  %185 = load i8, i8* %184, align 1
  %conv243 = zext i8 %185 to i32
  store i32 %conv243, i32* %tin1, align 4
  %186 = load i8*, i8** %in, align 8
  %incdec.ptr244 = getelementptr inbounds i8, i8* %186, i32 1
  store i8* %incdec.ptr244, i8** %in, align 8
  %187 = load i8, i8* %186, align 1
  %conv245 = zext i8 %187 to i32
  %shl246 = shl i32 %conv245, 8
  %188 = load i32, i32* %tin1, align 4
  %or247 = or i32 %188, %shl246
  store i32 %or247, i32* %tin1, align 4
  %189 = load i8*, i8** %in, align 8
  %incdec.ptr248 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %incdec.ptr248, i8** %in, align 8
  %190 = load i8, i8* %189, align 1
  %conv249 = zext i8 %190 to i32
  %shl250 = shl i32 %conv249, 16
  %191 = load i32, i32* %tin1, align 4
  %or251 = or i32 %191, %shl250
  store i32 %or251, i32* %tin1, align 4
  %192 = load i8*, i8** %in, align 8
  %incdec.ptr252 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %incdec.ptr252, i8** %in, align 8
  %193 = load i8, i8* %192, align 1
  %conv253 = zext i8 %193 to i32
  %shl254 = shl i32 %conv253, 24
  %194 = load i32, i32* %tin1, align 4
  %or255 = or i32 %194, %shl254
  store i32 %or255, i32* %tin1, align 4
  %195 = load i32, i32* %tin0, align 4
  store i32 %195, i32* %t0, align 4
  %196 = load i32, i32* %tin1, align 4
  store i32 %196, i32* %t1, align 4
  %197 = load i32, i32* %tin0, align 4
  %arrayidx256 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %197, i32* %arrayidx256, align 4
  %198 = load i32, i32* %tin1, align 4
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %198, i32* %arrayidx257, align 4
  %arraydecay258 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %199 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8
  %200 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8
  %201 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8
  call void @DES_decrypt3(i32* %arraydecay258, %struct.DES_ks* %199, %struct.DES_ks* %200, %struct.DES_ks* %201)
  %arrayidx259 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %202 = load i32, i32* %arrayidx259, align 4
  store i32 %202, i32* %tout0, align 4
  %arrayidx260 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  %203 = load i32, i32* %arrayidx260, align 4
  store i32 %203, i32* %tout1, align 4
  %204 = load i32, i32* %xor0, align 4
  %205 = load i32, i32* %tout0, align 4
  %xor261 = xor i32 %205, %204
  store i32 %xor261, i32* %tout0, align 4
  %206 = load i32, i32* %xor1, align 4
  %207 = load i32, i32* %tout1, align 4
  %xor262 = xor i32 %207, %206
  store i32 %xor262, i32* %tout1, align 4
  %208 = load i32, i32* %tout0, align 4
  %and263 = and i32 %208, 255
  %conv264 = trunc i32 %and263 to i8
  %209 = load i8*, i8** %out, align 8
  %incdec.ptr265 = getelementptr inbounds i8, i8* %209, i32 1
  store i8* %incdec.ptr265, i8** %out, align 8
  store i8 %conv264, i8* %209, align 1
  %210 = load i32, i32* %tout0, align 4
  %shr266 = lshr i32 %210, 8
  %and267 = and i32 %shr266, 255
  %conv268 = trunc i32 %and267 to i8
  %211 = load i8*, i8** %out, align 8
  %incdec.ptr269 = getelementptr inbounds i8, i8* %211, i32 1
  store i8* %incdec.ptr269, i8** %out, align 8
  store i8 %conv268, i8* %211, align 1
  %212 = load i32, i32* %tout0, align 4
  %shr270 = lshr i32 %212, 16
  %and271 = and i32 %shr270, 255
  %conv272 = trunc i32 %and271 to i8
  %213 = load i8*, i8** %out, align 8
  %incdec.ptr273 = getelementptr inbounds i8, i8* %213, i32 1
  store i8* %incdec.ptr273, i8** %out, align 8
  store i8 %conv272, i8* %213, align 1
  %214 = load i32, i32* %tout0, align 4
  %shr274 = lshr i32 %214, 24
  %and275 = and i32 %shr274, 255
  %conv276 = trunc i32 %and275 to i8
  %215 = load i8*, i8** %out, align 8
  %incdec.ptr277 = getelementptr inbounds i8, i8* %215, i32 1
  store i8* %incdec.ptr277, i8** %out, align 8
  store i8 %conv276, i8* %215, align 1
  %216 = load i32, i32* %tout1, align 4
  %and278 = and i32 %216, 255
  %conv279 = trunc i32 %and278 to i8
  %217 = load i8*, i8** %out, align 8
  %incdec.ptr280 = getelementptr inbounds i8, i8* %217, i32 1
  store i8* %incdec.ptr280, i8** %out, align 8
  store i8 %conv279, i8* %217, align 1
  %218 = load i32, i32* %tout1, align 4
  %shr281 = lshr i32 %218, 8
  %and282 = and i32 %shr281, 255
  %conv283 = trunc i32 %and282 to i8
  %219 = load i8*, i8** %out, align 8
  %incdec.ptr284 = getelementptr inbounds i8, i8* %219, i32 1
  store i8* %incdec.ptr284, i8** %out, align 8
  store i8 %conv283, i8* %219, align 1
  %220 = load i32, i32* %tout1, align 4
  %shr285 = lshr i32 %220, 16
  %and286 = and i32 %shr285, 255
  %conv287 = trunc i32 %and286 to i8
  %221 = load i8*, i8** %out, align 8
  %incdec.ptr288 = getelementptr inbounds i8, i8* %221, i32 1
  store i8* %incdec.ptr288, i8** %out, align 8
  store i8 %conv287, i8* %221, align 1
  %222 = load i32, i32* %tout1, align 4
  %shr289 = lshr i32 %222, 24
  %and290 = and i32 %shr289, 255
  %conv291 = trunc i32 %and290 to i8
  %223 = load i8*, i8** %out, align 8
  %incdec.ptr292 = getelementptr inbounds i8, i8* %223, i32 1
  store i8* %incdec.ptr292, i8** %out, align 8
  store i8 %conv291, i8* %223, align 1
  %224 = load i32, i32* %t0, align 4
  store i32 %224, i32* %xor0, align 4
  %225 = load i32, i32* %t1, align 4
  store i32 %225, i32* %xor1, align 4
  br label %for.inc293

for.inc293:                                       ; preds = %for.body227
  %226 = load i64, i64* %l, align 8
  %sub294 = sub nsw i64 %226, 8
  store i64 %sub294, i64* %l, align 8
  br label %for.cond224

for.end295:                                       ; preds = %for.cond224
  %227 = load i64, i64* %l, align 8
  %cmp296 = icmp ne i64 %227, -8
  br i1 %cmp296, label %if.then298, label %if.end376

if.then298:                                       ; preds = %for.end295
  %228 = load i8*, i8** %in, align 8
  %incdec.ptr299 = getelementptr inbounds i8, i8* %228, i32 1
  store i8* %incdec.ptr299, i8** %in, align 8
  %229 = load i8, i8* %228, align 1
  %conv300 = zext i8 %229 to i32
  store i32 %conv300, i32* %tin0, align 4
  %230 = load i8*, i8** %in, align 8
  %incdec.ptr301 = getelementptr inbounds i8, i8* %230, i32 1
  store i8* %incdec.ptr301, i8** %in, align 8
  %231 = load i8, i8* %230, align 1
  %conv302 = zext i8 %231 to i32
  %shl303 = shl i32 %conv302, 8
  %232 = load i32, i32* %tin0, align 4
  %or304 = or i32 %232, %shl303
  store i32 %or304, i32* %tin0, align 4
  %233 = load i8*, i8** %in, align 8
  %incdec.ptr305 = getelementptr inbounds i8, i8* %233, i32 1
  store i8* %incdec.ptr305, i8** %in, align 8
  %234 = load i8, i8* %233, align 1
  %conv306 = zext i8 %234 to i32
  %shl307 = shl i32 %conv306, 16
  %235 = load i32, i32* %tin0, align 4
  %or308 = or i32 %235, %shl307
  store i32 %or308, i32* %tin0, align 4
  %236 = load i8*, i8** %in, align 8
  %incdec.ptr309 = getelementptr inbounds i8, i8* %236, i32 1
  store i8* %incdec.ptr309, i8** %in, align 8
  %237 = load i8, i8* %236, align 1
  %conv310 = zext i8 %237 to i32
  %shl311 = shl i32 %conv310, 24
  %238 = load i32, i32* %tin0, align 4
  %or312 = or i32 %238, %shl311
  store i32 %or312, i32* %tin0, align 4
  %239 = load i8*, i8** %in, align 8
  %incdec.ptr313 = getelementptr inbounds i8, i8* %239, i32 1
  store i8* %incdec.ptr313, i8** %in, align 8
  %240 = load i8, i8* %239, align 1
  %conv314 = zext i8 %240 to i32
  store i32 %conv314, i32* %tin1, align 4
  %241 = load i8*, i8** %in, align 8
  %incdec.ptr315 = getelementptr inbounds i8, i8* %241, i32 1
  store i8* %incdec.ptr315, i8** %in, align 8
  %242 = load i8, i8* %241, align 1
  %conv316 = zext i8 %242 to i32
  %shl317 = shl i32 %conv316, 8
  %243 = load i32, i32* %tin1, align 4
  %or318 = or i32 %243, %shl317
  store i32 %or318, i32* %tin1, align 4
  %244 = load i8*, i8** %in, align 8
  %incdec.ptr319 = getelementptr inbounds i8, i8* %244, i32 1
  store i8* %incdec.ptr319, i8** %in, align 8
  %245 = load i8, i8* %244, align 1
  %conv320 = zext i8 %245 to i32
  %shl321 = shl i32 %conv320, 16
  %246 = load i32, i32* %tin1, align 4
  %or322 = or i32 %246, %shl321
  store i32 %or322, i32* %tin1, align 4
  %247 = load i8*, i8** %in, align 8
  %incdec.ptr323 = getelementptr inbounds i8, i8* %247, i32 1
  store i8* %incdec.ptr323, i8** %in, align 8
  %248 = load i8, i8* %247, align 1
  %conv324 = zext i8 %248 to i32
  %shl325 = shl i32 %conv324, 24
  %249 = load i32, i32* %tin1, align 4
  %or326 = or i32 %249, %shl325
  store i32 %or326, i32* %tin1, align 4
  %250 = load i32, i32* %tin0, align 4
  store i32 %250, i32* %t0, align 4
  %251 = load i32, i32* %tin1, align 4
  store i32 %251, i32* %t1, align 4
  %252 = load i32, i32* %tin0, align 4
  %arrayidx327 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %252, i32* %arrayidx327, align 4
  %253 = load i32, i32* %tin1, align 4
  %arrayidx328 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %253, i32* %arrayidx328, align 4
  %arraydecay329 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %254 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8
  %255 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8
  %256 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8
  call void @DES_decrypt3(i32* %arraydecay329, %struct.DES_ks* %254, %struct.DES_ks* %255, %struct.DES_ks* %256)
  %arrayidx330 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %257 = load i32, i32* %arrayidx330, align 4
  store i32 %257, i32* %tout0, align 4
  %arrayidx331 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  %258 = load i32, i32* %arrayidx331, align 4
  store i32 %258, i32* %tout1, align 4
  %259 = load i32, i32* %xor0, align 4
  %260 = load i32, i32* %tout0, align 4
  %xor332 = xor i32 %260, %259
  store i32 %xor332, i32* %tout0, align 4
  %261 = load i32, i32* %xor1, align 4
  %262 = load i32, i32* %tout1, align 4
  %xor333 = xor i32 %262, %261
  store i32 %xor333, i32* %tout1, align 4
  %263 = load i64, i64* %l, align 8
  %add334 = add nsw i64 %263, 8
  %264 = load i8*, i8** %out, align 8
  %add.ptr335 = getelementptr inbounds i8, i8* %264, i64 %add334
  store i8* %add.ptr335, i8** %out, align 8
  %265 = load i64, i64* %l, align 8
  %add336 = add nsw i64 %265, 8
  switch i64 %add336, label %sw.epilog375 [
    i64 8, label %sw.bb337
    i64 7, label %sw.bb342
    i64 6, label %sw.bb347
    i64 5, label %sw.bb352
    i64 4, label %sw.bb356
    i64 3, label %sw.bb361
    i64 2, label %sw.bb366
    i64 1, label %sw.bb371
  ]

sw.bb337:                                         ; preds = %if.then298
  %266 = load i32, i32* %tout1, align 4
  %shr338 = lshr i32 %266, 24
  %and339 = and i32 %shr338, 255
  %conv340 = trunc i32 %and339 to i8
  %267 = load i8*, i8** %out, align 8
  %incdec.ptr341 = getelementptr inbounds i8, i8* %267, i32 -1
  store i8* %incdec.ptr341, i8** %out, align 8
  store i8 %conv340, i8* %incdec.ptr341, align 1
  br label %sw.bb342

sw.bb342:                                         ; preds = %if.then298, %sw.bb337
  %268 = load i32, i32* %tout1, align 4
  %shr343 = lshr i32 %268, 16
  %and344 = and i32 %shr343, 255
  %conv345 = trunc i32 %and344 to i8
  %269 = load i8*, i8** %out, align 8
  %incdec.ptr346 = getelementptr inbounds i8, i8* %269, i32 -1
  store i8* %incdec.ptr346, i8** %out, align 8
  store i8 %conv345, i8* %incdec.ptr346, align 1
  br label %sw.bb347

sw.bb347:                                         ; preds = %if.then298, %sw.bb342
  %270 = load i32, i32* %tout1, align 4
  %shr348 = lshr i32 %270, 8
  %and349 = and i32 %shr348, 255
  %conv350 = trunc i32 %and349 to i8
  %271 = load i8*, i8** %out, align 8
  %incdec.ptr351 = getelementptr inbounds i8, i8* %271, i32 -1
  store i8* %incdec.ptr351, i8** %out, align 8
  store i8 %conv350, i8* %incdec.ptr351, align 1
  br label %sw.bb352

sw.bb352:                                         ; preds = %if.then298, %sw.bb347
  %272 = load i32, i32* %tout1, align 4
  %and353 = and i32 %272, 255
  %conv354 = trunc i32 %and353 to i8
  %273 = load i8*, i8** %out, align 8
  %incdec.ptr355 = getelementptr inbounds i8, i8* %273, i32 -1
  store i8* %incdec.ptr355, i8** %out, align 8
  store i8 %conv354, i8* %incdec.ptr355, align 1
  br label %sw.bb356

sw.bb356:                                         ; preds = %if.then298, %sw.bb352
  %274 = load i32, i32* %tout0, align 4
  %shr357 = lshr i32 %274, 24
  %and358 = and i32 %shr357, 255
  %conv359 = trunc i32 %and358 to i8
  %275 = load i8*, i8** %out, align 8
  %incdec.ptr360 = getelementptr inbounds i8, i8* %275, i32 -1
  store i8* %incdec.ptr360, i8** %out, align 8
  store i8 %conv359, i8* %incdec.ptr360, align 1
  br label %sw.bb361

sw.bb361:                                         ; preds = %if.then298, %sw.bb356
  %276 = load i32, i32* %tout0, align 4
  %shr362 = lshr i32 %276, 16
  %and363 = and i32 %shr362, 255
  %conv364 = trunc i32 %and363 to i8
  %277 = load i8*, i8** %out, align 8
  %incdec.ptr365 = getelementptr inbounds i8, i8* %277, i32 -1
  store i8* %incdec.ptr365, i8** %out, align 8
  store i8 %conv364, i8* %incdec.ptr365, align 1
  br label %sw.bb366

sw.bb366:                                         ; preds = %if.then298, %sw.bb361
  %278 = load i32, i32* %tout0, align 4
  %shr367 = lshr i32 %278, 8
  %and368 = and i32 %shr367, 255
  %conv369 = trunc i32 %and368 to i8
  %279 = load i8*, i8** %out, align 8
  %incdec.ptr370 = getelementptr inbounds i8, i8* %279, i32 -1
  store i8* %incdec.ptr370, i8** %out, align 8
  store i8 %conv369, i8* %incdec.ptr370, align 1
  br label %sw.bb371

sw.bb371:                                         ; preds = %if.then298, %sw.bb366
  %280 = load i32, i32* %tout0, align 4
  %and372 = and i32 %280, 255
  %conv373 = trunc i32 %and372 to i8
  %281 = load i8*, i8** %out, align 8
  %incdec.ptr374 = getelementptr inbounds i8, i8* %281, i32 -1
  store i8* %incdec.ptr374, i8** %out, align 8
  store i8 %conv373, i8* %incdec.ptr374, align 1
  br label %sw.epilog375

sw.epilog375:                                     ; preds = %sw.bb371, %if.then298
  %282 = load i32, i32* %t0, align 4
  store i32 %282, i32* %xor0, align 4
  %283 = load i32, i32* %t1, align 4
  store i32 %283, i32* %xor1, align 4
  br label %if.end376

if.end376:                                        ; preds = %sw.epilog375, %for.end295
  %284 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8
  %arrayidx377 = getelementptr inbounds [8 x i8], [8 x i8]* %284, i64 0, i64 0
  store i8* %arrayidx377, i8** %iv, align 8
  %285 = load i32, i32* %xor0, align 4
  %and378 = and i32 %285, 255
  %conv379 = trunc i32 %and378 to i8
  %286 = load i8*, i8** %iv, align 8
  %incdec.ptr380 = getelementptr inbounds i8, i8* %286, i32 1
  store i8* %incdec.ptr380, i8** %iv, align 8
  store i8 %conv379, i8* %286, align 1
  %287 = load i32, i32* %xor0, align 4
  %shr381 = lshr i32 %287, 8
  %and382 = and i32 %shr381, 255
  %conv383 = trunc i32 %and382 to i8
  %288 = load i8*, i8** %iv, align 8
  %incdec.ptr384 = getelementptr inbounds i8, i8* %288, i32 1
  store i8* %incdec.ptr384, i8** %iv, align 8
  store i8 %conv383, i8* %288, align 1
  %289 = load i32, i32* %xor0, align 4
  %shr385 = lshr i32 %289, 16
  %and386 = and i32 %shr385, 255
  %conv387 = trunc i32 %and386 to i8
  %290 = load i8*, i8** %iv, align 8
  %incdec.ptr388 = getelementptr inbounds i8, i8* %290, i32 1
  store i8* %incdec.ptr388, i8** %iv, align 8
  store i8 %conv387, i8* %290, align 1
  %291 = load i32, i32* %xor0, align 4
  %shr389 = lshr i32 %291, 24
  %and390 = and i32 %shr389, 255
  %conv391 = trunc i32 %and390 to i8
  %292 = load i8*, i8** %iv, align 8
  %incdec.ptr392 = getelementptr inbounds i8, i8* %292, i32 1
  store i8* %incdec.ptr392, i8** %iv, align 8
  store i8 %conv391, i8* %292, align 1
  %293 = load i32, i32* %xor1, align 4
  %and393 = and i32 %293, 255
  %conv394 = trunc i32 %and393 to i8
  %294 = load i8*, i8** %iv, align 8
  %incdec.ptr395 = getelementptr inbounds i8, i8* %294, i32 1
  store i8* %incdec.ptr395, i8** %iv, align 8
  store i8 %conv394, i8* %294, align 1
  %295 = load i32, i32* %xor1, align 4
  %shr396 = lshr i32 %295, 8
  %and397 = and i32 %shr396, 255
  %conv398 = trunc i32 %and397 to i8
  %296 = load i8*, i8** %iv, align 8
  %incdec.ptr399 = getelementptr inbounds i8, i8* %296, i32 1
  store i8* %incdec.ptr399, i8** %iv, align 8
  store i8 %conv398, i8* %296, align 1
  %297 = load i32, i32* %xor1, align 4
  %shr400 = lshr i32 %297, 16
  %and401 = and i32 %shr400, 255
  %conv402 = trunc i32 %and401 to i8
  %298 = load i8*, i8** %iv, align 8
  %incdec.ptr403 = getelementptr inbounds i8, i8* %298, i32 1
  store i8* %incdec.ptr403, i8** %iv, align 8
  store i8 %conv402, i8* %298, align 1
  %299 = load i32, i32* %xor1, align 4
  %shr404 = lshr i32 %299, 24
  %and405 = and i32 %shr404, 255
  %conv406 = trunc i32 %and405 to i8
  %300 = load i8*, i8** %iv, align 8
  %incdec.ptr407 = getelementptr inbounds i8, i8* %300, i32 1
  store i8* %incdec.ptr407, i8** %iv, align 8
  store i8 %conv406, i8* %300, align 1
  br label %if.end408

if.end408:                                        ; preds = %if.end376, %if.end
  store i32 0, i32* %xor1, align 4
  store i32 0, i32* %xor0, align 4
  store i32 0, i32* %tout1, align 4
  store i32 0, i32* %tout0, align 4
  store i32 0, i32* %tin1, align 4
  store i32 0, i32* %tin0, align 4
  %arrayidx409 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 0, i32* %arrayidx409, align 4
  %arrayidx410 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 0, i32* %arrayidx410, align 4
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @DES_ecb_encrypt([8 x i8]* %input, [8 x i8]* %output, %struct.DES_ks* %ks, i32 %enc) #0 {
entry:
  %data.addr.i = alloca i32*, align 8
  %ks.addr.i = alloca %struct.DES_ks*, align 8
  %enc.addr.i = alloca i32, align 4
  %l.i = alloca i32, align 4
  %r.i = alloca i32, align 4
  %t.i = alloca i32, align 4
  %u.i = alloca i32, align 4
  %s.i = alloca i32*, align 8
  %tt.i = alloca i32, align 4
  %ret.i = alloca i32, align 4
  %tmp.i = alloca i32, align 4
  %ret40.i = alloca i32, align 4
  %tmp41.i = alloca i32, align 4
  %ret51.i = alloca i32, align 4
  %tmp52.i = alloca i32, align 4
  %ret96.i = alloca i32, align 4
  %tmp97.i = alloca i32, align 4
  %ret142.i = alloca i32, align 4
  %tmp143.i = alloca i32, align 4
  %ret188.i = alloca i32, align 4
  %tmp189.i = alloca i32, align 4
  %ret234.i = alloca i32, align 4
  %tmp235.i = alloca i32, align 4
  %ret280.i = alloca i32, align 4
  %tmp281.i = alloca i32, align 4
  %ret326.i = alloca i32, align 4
  %tmp327.i = alloca i32, align 4
  %ret372.i = alloca i32, align 4
  %tmp373.i = alloca i32, align 4
  %ret418.i = alloca i32, align 4
  %tmp419.i = alloca i32, align 4
  %ret464.i = alloca i32, align 4
  %tmp465.i = alloca i32, align 4
  %ret510.i = alloca i32, align 4
  %tmp511.i = alloca i32, align 4
  %ret556.i = alloca i32, align 4
  %tmp557.i = alloca i32, align 4
  %ret602.i = alloca i32, align 4
  %tmp603.i = alloca i32, align 4
  %ret648.i = alloca i32, align 4
  %tmp649.i = alloca i32, align 4
  %ret694.i = alloca i32, align 4
  %tmp695.i = alloca i32, align 4
  %ret740.i = alloca i32, align 4
  %tmp741.i = alloca i32, align 4
  %ret786.i = alloca i32, align 4
  %tmp787.i = alloca i32, align 4
  %ret832.i = alloca i32, align 4
  %tmp833.i = alloca i32, align 4
  %ret878.i = alloca i32, align 4
  %tmp879.i = alloca i32, align 4
  %ret924.i = alloca i32, align 4
  %tmp925.i = alloca i32, align 4
  %ret970.i = alloca i32, align 4
  %tmp971.i = alloca i32, align 4
  %ret1016.i = alloca i32, align 4
  %tmp1017.i = alloca i32, align 4
  %ret1062.i = alloca i32, align 4
  %tmp1063.i = alloca i32, align 4
  %ret1108.i = alloca i32, align 4
  %tmp1109.i = alloca i32, align 4
  %ret1154.i = alloca i32, align 4
  %tmp1155.i = alloca i32, align 4
  %ret1200.i = alloca i32, align 4
  %tmp1201.i = alloca i32, align 4
  %ret1246.i = alloca i32, align 4
  %tmp1247.i = alloca i32, align 4
  %ret1292.i = alloca i32, align 4
  %tmp1293.i = alloca i32, align 4
  %ret1338.i = alloca i32, align 4
  %tmp1339.i = alloca i32, align 4
  %ret1384.i = alloca i32, align 4
  %tmp1385.i = alloca i32, align 4
  %ret1430.i = alloca i32, align 4
  %tmp1431.i = alloca i32, align 4
  %ret1476.i = alloca i32, align 4
  %tmp1477.i = alloca i32, align 4
  %ret1518.i = alloca i32, align 4
  %tmp1519.i = alloca i32, align 4
  %ret1523.i = alloca i32, align 4
  %tmp1524.i = alloca i32, align 4
  %tt1528.i = alloca i32, align 4
  %input.addr = alloca [8 x i8]*, align 8
  %output.addr = alloca [8 x i8]*, align 8
  %ks.addr = alloca %struct.DES_ks*, align 8
  %enc.addr = alloca i32, align 4
  %l = alloca i32, align 4
  %ll = alloca [2 x i32], align 4
  %in = alloca i8*, align 8
  %out = alloca i8*, align 8
  store [8 x i8]* %input, [8 x i8]** %input.addr, align 8
  store [8 x i8]* %output, [8 x i8]** %output.addr, align 8
  store %struct.DES_ks* %ks, %struct.DES_ks** %ks.addr, align 8
  store i32 %enc, i32* %enc.addr, align 4
  %0 = load [8 x i8]*, [8 x i8]** %input.addr, align 8
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %0, i64 0, i64 0
  store i8* %arrayidx, i8** %in, align 8
  %1 = load [8 x i8]*, [8 x i8]** %output.addr, align 8
  %arrayidx1 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  store i8* %arrayidx1, i8** %out, align 8
  %2 = load i8*, i8** %in, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1
  store i8* %incdec.ptr, i8** %in, align 8
  %3 = load i8, i8* %2, align 1
  %conv = zext i8 %3 to i32
  store i32 %conv, i32* %l, align 4
  %4 = load i8*, i8** %in, align 8
  %incdec.ptr2 = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr2, i8** %in, align 8
  %5 = load i8, i8* %4, align 1
  %conv3 = zext i8 %5 to i32
  %shl = shl i32 %conv3, 8
  %6 = load i32, i32* %l, align 4
  %or = or i32 %6, %shl
  store i32 %or, i32* %l, align 4
  %7 = load i8*, i8** %in, align 8
  %incdec.ptr4 = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr4, i8** %in, align 8
  %8 = load i8, i8* %7, align 1
  %conv5 = zext i8 %8 to i32
  %shl6 = shl i32 %conv5, 16
  %9 = load i32, i32* %l, align 4
  %or7 = or i32 %9, %shl6
  store i32 %or7, i32* %l, align 4
  %10 = load i8*, i8** %in, align 8
  %incdec.ptr8 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr8, i8** %in, align 8
  %11 = load i8, i8* %10, align 1
  %conv9 = zext i8 %11 to i32
  %shl10 = shl i32 %conv9, 24
  %12 = load i32, i32* %l, align 4
  %or11 = or i32 %12, %shl10
  store i32 %or11, i32* %l, align 4
  %13 = load i32, i32* %l, align 4
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0
  store i32 %13, i32* %arrayidx12, align 4
  %14 = load i8*, i8** %in, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr13, i8** %in, align 8
  %15 = load i8, i8* %14, align 1
  %conv14 = zext i8 %15 to i32
  store i32 %conv14, i32* %l, align 4
  %16 = load i8*, i8** %in, align 8
  %incdec.ptr15 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr15, i8** %in, align 8
  %17 = load i8, i8* %16, align 1
  %conv16 = zext i8 %17 to i32
  %shl17 = shl i32 %conv16, 8
  %18 = load i32, i32* %l, align 4
  %or18 = or i32 %18, %shl17
  store i32 %or18, i32* %l, align 4
  %19 = load i8*, i8** %in, align 8
  %incdec.ptr19 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr19, i8** %in, align 8
  %20 = load i8, i8* %19, align 1
  %conv20 = zext i8 %20 to i32
  %shl21 = shl i32 %conv20, 16
  %21 = load i32, i32* %l, align 4
  %or22 = or i32 %21, %shl21
  store i32 %or22, i32* %l, align 4
  %22 = load i8*, i8** %in, align 8
  %incdec.ptr23 = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr23, i8** %in, align 8
  %23 = load i8, i8* %22, align 1
  %conv24 = zext i8 %23 to i32
  %shl25 = shl i32 %conv24, 24
  %24 = load i32, i32* %l, align 4
  %or26 = or i32 %24, %shl25
  store i32 %or26, i32* %l, align 4
  %25 = load i32, i32* %l, align 4
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 1
  store i32 %25, i32* %arrayidx27, align 4
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0
  %26 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr, align 8
  %27 = load i32, i32* %enc.addr, align 4
  store i32* %arraydecay, i32** %data.addr.i, align 8
  store %struct.DES_ks* %26, %struct.DES_ks** %ks.addr.i, align 8
  store i32 %27, i32* %enc.addr.i, align 4
  %28 = load i32*, i32** %data.addr.i, align 8
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %r.i, align 4
  %30 = load i32*, i32** %data.addr.i, align 8
  %arrayidx1.i = getelementptr inbounds i32, i32* %30, i64 1
  %31 = load i32, i32* %arrayidx1.i, align 4
  store i32 %31, i32* %l.i, align 4
  %32 = load i32, i32* %l.i, align 4
  %shr.i = lshr i32 %32, 4
  %33 = load i32, i32* %r.i, align 4
  %xor.i = xor i32 %shr.i, %33
  %conv.i = zext i32 %xor.i to i64
  %and.i = and i64 %conv.i, 252645135
  %conv2.i = trunc i64 %and.i to i32
  store i32 %conv2.i, i32* %tt.i, align 4
  %34 = load i32, i32* %tt.i, align 4
  %35 = load i32, i32* %r.i, align 4
  %xor3.i = xor i32 %35, %34
  store i32 %xor3.i, i32* %r.i, align 4
  %36 = load i32, i32* %tt.i, align 4
  %shl.i = shl i32 %36, 4
  %37 = load i32, i32* %l.i, align 4
  %xor4.i = xor i32 %37, %shl.i
  store i32 %xor4.i, i32* %l.i, align 4
  %38 = load i32, i32* %r.i, align 4
  %shr5.i = lshr i32 %38, 16
  %39 = load i32, i32* %l.i, align 4
  %xor6.i = xor i32 %shr5.i, %39
  %conv7.i = zext i32 %xor6.i to i64
  %and8.i = and i64 %conv7.i, 65535
  %conv9.i = trunc i64 %and8.i to i32
  store i32 %conv9.i, i32* %tt.i, align 4
  %40 = load i32, i32* %tt.i, align 4
  %41 = load i32, i32* %l.i, align 4
  %xor10.i = xor i32 %41, %40
  store i32 %xor10.i, i32* %l.i, align 4
  %42 = load i32, i32* %tt.i, align 4
  %shl11.i = shl i32 %42, 16
  %43 = load i32, i32* %r.i, align 4
  %xor12.i = xor i32 %43, %shl11.i
  store i32 %xor12.i, i32* %r.i, align 4
  %44 = load i32, i32* %l.i, align 4
  %shr13.i = lshr i32 %44, 2
  %45 = load i32, i32* %r.i, align 4
  %xor14.i = xor i32 %shr13.i, %45
  %conv15.i = zext i32 %xor14.i to i64
  %and16.i = and i64 %conv15.i, 858993459
  %conv17.i = trunc i64 %and16.i to i32
  store i32 %conv17.i, i32* %tt.i, align 4
  %46 = load i32, i32* %tt.i, align 4
  %47 = load i32, i32* %r.i, align 4
  %xor18.i = xor i32 %47, %46
  store i32 %xor18.i, i32* %r.i, align 4
  %48 = load i32, i32* %tt.i, align 4
  %shl19.i = shl i32 %48, 2
  %49 = load i32, i32* %l.i, align 4
  %xor20.i = xor i32 %49, %shl19.i
  store i32 %xor20.i, i32* %l.i, align 4
  %50 = load i32, i32* %r.i, align 4
  %shr21.i = lshr i32 %50, 8
  %51 = load i32, i32* %l.i, align 4
  %xor22.i = xor i32 %shr21.i, %51
  %conv23.i = zext i32 %xor22.i to i64
  %and24.i = and i64 %conv23.i, 16711935
  %conv25.i = trunc i64 %and24.i to i32
  store i32 %conv25.i, i32* %tt.i, align 4
  %52 = load i32, i32* %tt.i, align 4
  %53 = load i32, i32* %l.i, align 4
  %xor26.i = xor i32 %53, %52
  store i32 %xor26.i, i32* %l.i, align 4
  %54 = load i32, i32* %tt.i, align 4
  %shl27.i = shl i32 %54, 8
  %55 = load i32, i32* %r.i, align 4
  %xor28.i = xor i32 %55, %shl27.i
  store i32 %xor28.i, i32* %r.i, align 4
  %56 = load i32, i32* %l.i, align 4
  %shr29.i = lshr i32 %56, 1
  %57 = load i32, i32* %r.i, align 4
  %xor30.i = xor i32 %shr29.i, %57
  %conv31.i = zext i32 %xor30.i to i64
  %and32.i = and i64 %conv31.i, 1431655765
  %conv33.i = trunc i64 %and32.i to i32
  store i32 %conv33.i, i32* %tt.i, align 4
  %58 = load i32, i32* %tt.i, align 4
  %59 = load i32, i32* %r.i, align 4
  %xor34.i = xor i32 %59, %58
  store i32 %xor34.i, i32* %r.i, align 4
  %60 = load i32, i32* %tt.i, align 4
  %shl35.i = shl i32 %60, 1
  %61 = load i32, i32* %l.i, align 4
  %xor36.i = xor i32 %61, %shl35.i
  store i32 %xor36.i, i32* %l.i, align 4
  %62 = load i32, i32* %r.i, align 4
  %63 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %62) #5, !srcloc !2
  store i32 %63, i32* %ret.i, align 4
  %64 = load i32, i32* %ret.i, align 4
  store i32 %64, i32* %tmp.i, align 4
  %65 = load i32, i32* %tmp.i, align 4
  %conv37.i = zext i32 %65 to i64
  %and38.i = and i64 %conv37.i, 4294967295
  %conv39.i = trunc i64 %and38.i to i32
  store i32 %conv39.i, i32* %r.i, align 4
  %66 = load i32, i32* %l.i, align 4
  %67 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %66) #5, !srcloc !3
  store i32 %67, i32* %ret40.i, align 4
  %68 = load i32, i32* %ret40.i, align 4
  store i32 %68, i32* %tmp41.i, align 4
  %69 = load i32, i32* %tmp41.i, align 4
  %conv42.i = zext i32 %69 to i64
  %and43.i = and i64 %conv42.i, 4294967295
  %conv44.i = trunc i64 %and43.i to i32
  store i32 %conv44.i, i32* %l.i, align 4
  %70 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i, align 8
  %ks45.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %70, i32 0, i32 0
  %arraydecay.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i, i64 0, i64 0
  %deslong.i = bitcast %union.anon* %arraydecay.i to [2 x i32]*
  %arraydecay46.i = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i, i64 0, i64 0
  store i32* %arraydecay46.i, i32** %s.i, align 8
  %71 = load i32, i32* %enc.addr.i, align 4
  %tobool.i = icmp ne i32 %71, 0
  br i1 %tobool.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %72 = load i32, i32* %r.i, align 4
  %73 = load i32*, i32** %s.i, align 8
  %74 = load i32, i32* %73, align 4
  %xor48.i = xor i32 %72, %74
  store i32 %xor48.i, i32* %u.i, align 4
  %75 = load i32, i32* %r.i, align 4
  %76 = load i32*, i32** %s.i, align 8
  %arrayidx49.i = getelementptr inbounds i32, i32* %76, i64 1
  %77 = load i32, i32* %arrayidx49.i, align 4
  %xor50.i = xor i32 %75, %77
  store i32 %xor50.i, i32* %t.i, align 4
  %78 = load i32, i32* %t.i, align 4
  %79 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %78) #5, !srcloc !4
  store i32 %79, i32* %ret51.i, align 4
  %80 = load i32, i32* %ret51.i, align 4
  store i32 %80, i32* %tmp52.i, align 4
  %81 = load i32, i32* %tmp52.i, align 4
  store i32 %81, i32* %t.i, align 4
  %82 = load i32, i32* %u.i, align 4
  %shr53.i = lshr i32 %82, 2
  %and54.i = and i32 %shr53.i, 63
  %idxprom.i = zext i32 %and54.i to i64
  %arrayidx55.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i
  %83 = load i32, i32* %arrayidx55.i, align 4
  %84 = load i32, i32* %u.i, align 4
  %shr56.i = lshr i32 %84, 10
  %and57.i = and i32 %shr56.i, 63
  %idxprom58.i = zext i32 %and57.i to i64
  %arrayidx59.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i
  %85 = load i32, i32* %arrayidx59.i, align 4
  %xor60.i = xor i32 %83, %85
  %86 = load i32, i32* %u.i, align 4
  %shr61.i = lshr i32 %86, 18
  %and62.i = and i32 %shr61.i, 63
  %idxprom63.i = zext i32 %and62.i to i64
  %arrayidx64.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i
  %87 = load i32, i32* %arrayidx64.i, align 4
  %xor65.i = xor i32 %xor60.i, %87
  %88 = load i32, i32* %u.i, align 4
  %shr66.i = lshr i32 %88, 26
  %idxprom68.i = zext i32 %shr66.i to i64
  %arrayidx69.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i
  %89 = load i32, i32* %arrayidx69.i, align 4
  %xor70.i = xor i32 %xor65.i, %89
  %90 = load i32, i32* %t.i, align 4
  %shr71.i = lshr i32 %90, 2
  %and72.i = and i32 %shr71.i, 63
  %idxprom73.i = zext i32 %and72.i to i64
  %arrayidx74.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i
  %91 = load i32, i32* %arrayidx74.i, align 4
  %xor75.i = xor i32 %xor70.i, %91
  %92 = load i32, i32* %t.i, align 4
  %shr76.i = lshr i32 %92, 10
  %and77.i = and i32 %shr76.i, 63
  %idxprom78.i = zext i32 %and77.i to i64
  %arrayidx79.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i
  %93 = load i32, i32* %arrayidx79.i, align 4
  %xor80.i = xor i32 %xor75.i, %93
  %94 = load i32, i32* %t.i, align 4
  %shr81.i = lshr i32 %94, 18
  %and82.i = and i32 %shr81.i, 63
  %idxprom83.i = zext i32 %and82.i to i64
  %arrayidx84.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i
  %95 = load i32, i32* %arrayidx84.i, align 4
  %xor85.i = xor i32 %xor80.i, %95
  %96 = load i32, i32* %t.i, align 4
  %shr86.i = lshr i32 %96, 26
  %idxprom88.i = zext i32 %shr86.i to i64
  %arrayidx89.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i
  %97 = load i32, i32* %arrayidx89.i, align 4
  %xor90.i = xor i32 %xor85.i, %97
  %98 = load i32, i32* %l.i, align 4
  %xor91.i = xor i32 %98, %xor90.i
  store i32 %xor91.i, i32* %l.i, align 4
  %99 = load i32, i32* %l.i, align 4
  %100 = load i32*, i32** %s.i, align 8
  %arrayidx92.i = getelementptr inbounds i32, i32* %100, i64 2
  %101 = load i32, i32* %arrayidx92.i, align 4
  %xor93.i = xor i32 %99, %101
  store i32 %xor93.i, i32* %u.i, align 4
  %102 = load i32, i32* %l.i, align 4
  %103 = load i32*, i32** %s.i, align 8
  %arrayidx94.i = getelementptr inbounds i32, i32* %103, i64 3
  %104 = load i32, i32* %arrayidx94.i, align 4
  %xor95.i = xor i32 %102, %104
  store i32 %xor95.i, i32* %t.i, align 4
  %105 = load i32, i32* %t.i, align 4
  %106 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %105) #5, !srcloc !5
  store i32 %106, i32* %ret96.i, align 4
  %107 = load i32, i32* %ret96.i, align 4
  store i32 %107, i32* %tmp97.i, align 4
  %108 = load i32, i32* %tmp97.i, align 4
  store i32 %108, i32* %t.i, align 4
  %109 = load i32, i32* %u.i, align 4
  %shr98.i = lshr i32 %109, 2
  %and99.i = and i32 %shr98.i, 63
  %idxprom100.i = zext i32 %and99.i to i64
  %arrayidx101.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i
  %110 = load i32, i32* %arrayidx101.i, align 4
  %111 = load i32, i32* %u.i, align 4
  %shr102.i = lshr i32 %111, 10
  %and103.i = and i32 %shr102.i, 63
  %idxprom104.i = zext i32 %and103.i to i64
  %arrayidx105.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i
  %112 = load i32, i32* %arrayidx105.i, align 4
  %xor106.i = xor i32 %110, %112
  %113 = load i32, i32* %u.i, align 4
  %shr107.i = lshr i32 %113, 18
  %and108.i = and i32 %shr107.i, 63
  %idxprom109.i = zext i32 %and108.i to i64
  %arrayidx110.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i
  %114 = load i32, i32* %arrayidx110.i, align 4
  %xor111.i = xor i32 %xor106.i, %114
  %115 = load i32, i32* %u.i, align 4
  %shr112.i = lshr i32 %115, 26
  %idxprom114.i = zext i32 %shr112.i to i64
  %arrayidx115.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i
  %116 = load i32, i32* %arrayidx115.i, align 4
  %xor116.i = xor i32 %xor111.i, %116
  %117 = load i32, i32* %t.i, align 4
  %shr117.i = lshr i32 %117, 2
  %and118.i = and i32 %shr117.i, 63
  %idxprom119.i = zext i32 %and118.i to i64
  %arrayidx120.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i
  %118 = load i32, i32* %arrayidx120.i, align 4
  %xor121.i = xor i32 %xor116.i, %118
  %119 = load i32, i32* %t.i, align 4
  %shr122.i = lshr i32 %119, 10
  %and123.i = and i32 %shr122.i, 63
  %idxprom124.i = zext i32 %and123.i to i64
  %arrayidx125.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i
  %120 = load i32, i32* %arrayidx125.i, align 4
  %xor126.i = xor i32 %xor121.i, %120
  %121 = load i32, i32* %t.i, align 4
  %shr127.i = lshr i32 %121, 18
  %and128.i = and i32 %shr127.i, 63
  %idxprom129.i = zext i32 %and128.i to i64
  %arrayidx130.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i
  %122 = load i32, i32* %arrayidx130.i, align 4
  %xor131.i = xor i32 %xor126.i, %122
  %123 = load i32, i32* %t.i, align 4
  %shr132.i = lshr i32 %123, 26
  %idxprom134.i = zext i32 %shr132.i to i64
  %arrayidx135.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i
  %124 = load i32, i32* %arrayidx135.i, align 4
  %xor136.i = xor i32 %xor131.i, %124
  %125 = load i32, i32* %r.i, align 4
  %xor137.i = xor i32 %125, %xor136.i
  store i32 %xor137.i, i32* %r.i, align 4
  %126 = load i32, i32* %r.i, align 4
  %127 = load i32*, i32** %s.i, align 8
  %arrayidx138.i = getelementptr inbounds i32, i32* %127, i64 4
  %128 = load i32, i32* %arrayidx138.i, align 4
  %xor139.i = xor i32 %126, %128
  store i32 %xor139.i, i32* %u.i, align 4
  %129 = load i32, i32* %r.i, align 4
  %130 = load i32*, i32** %s.i, align 8
  %arrayidx140.i = getelementptr inbounds i32, i32* %130, i64 5
  %131 = load i32, i32* %arrayidx140.i, align 4
  %xor141.i = xor i32 %129, %131
  store i32 %xor141.i, i32* %t.i, align 4
  %132 = load i32, i32* %t.i, align 4
  %133 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %132) #5, !srcloc !6
  store i32 %133, i32* %ret142.i, align 4
  %134 = load i32, i32* %ret142.i, align 4
  store i32 %134, i32* %tmp143.i, align 4
  %135 = load i32, i32* %tmp143.i, align 4
  store i32 %135, i32* %t.i, align 4
  %136 = load i32, i32* %u.i, align 4
  %shr144.i = lshr i32 %136, 2
  %and145.i = and i32 %shr144.i, 63
  %idxprom146.i = zext i32 %and145.i to i64
  %arrayidx147.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i
  %137 = load i32, i32* %arrayidx147.i, align 4
  %138 = load i32, i32* %u.i, align 4
  %shr148.i = lshr i32 %138, 10
  %and149.i = and i32 %shr148.i, 63
  %idxprom150.i = zext i32 %and149.i to i64
  %arrayidx151.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i
  %139 = load i32, i32* %arrayidx151.i, align 4
  %xor152.i = xor i32 %137, %139
  %140 = load i32, i32* %u.i, align 4
  %shr153.i = lshr i32 %140, 18
  %and154.i = and i32 %shr153.i, 63
  %idxprom155.i = zext i32 %and154.i to i64
  %arrayidx156.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i
  %141 = load i32, i32* %arrayidx156.i, align 4
  %xor157.i = xor i32 %xor152.i, %141
  %142 = load i32, i32* %u.i, align 4
  %shr158.i = lshr i32 %142, 26
  %idxprom160.i = zext i32 %shr158.i to i64
  %arrayidx161.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i
  %143 = load i32, i32* %arrayidx161.i, align 4
  %xor162.i = xor i32 %xor157.i, %143
  %144 = load i32, i32* %t.i, align 4
  %shr163.i = lshr i32 %144, 2
  %and164.i = and i32 %shr163.i, 63
  %idxprom165.i = zext i32 %and164.i to i64
  %arrayidx166.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i
  %145 = load i32, i32* %arrayidx166.i, align 4
  %xor167.i = xor i32 %xor162.i, %145
  %146 = load i32, i32* %t.i, align 4
  %shr168.i = lshr i32 %146, 10
  %and169.i = and i32 %shr168.i, 63
  %idxprom170.i = zext i32 %and169.i to i64
  %arrayidx171.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i
  %147 = load i32, i32* %arrayidx171.i, align 4
  %xor172.i = xor i32 %xor167.i, %147
  %148 = load i32, i32* %t.i, align 4
  %shr173.i = lshr i32 %148, 18
  %and174.i = and i32 %shr173.i, 63
  %idxprom175.i = zext i32 %and174.i to i64
  %arrayidx176.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i
  %149 = load i32, i32* %arrayidx176.i, align 4
  %xor177.i = xor i32 %xor172.i, %149
  %150 = load i32, i32* %t.i, align 4
  %shr178.i = lshr i32 %150, 26
  %idxprom180.i = zext i32 %shr178.i to i64
  %arrayidx181.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i
  %151 = load i32, i32* %arrayidx181.i, align 4
  %xor182.i = xor i32 %xor177.i, %151
  %152 = load i32, i32* %l.i, align 4
  %xor183.i = xor i32 %152, %xor182.i
  store i32 %xor183.i, i32* %l.i, align 4
  %153 = load i32, i32* %l.i, align 4
  %154 = load i32*, i32** %s.i, align 8
  %arrayidx184.i = getelementptr inbounds i32, i32* %154, i64 6
  %155 = load i32, i32* %arrayidx184.i, align 4
  %xor185.i = xor i32 %153, %155
  store i32 %xor185.i, i32* %u.i, align 4
  %156 = load i32, i32* %l.i, align 4
  %157 = load i32*, i32** %s.i, align 8
  %arrayidx186.i = getelementptr inbounds i32, i32* %157, i64 7
  %158 = load i32, i32* %arrayidx186.i, align 4
  %xor187.i = xor i32 %156, %158
  store i32 %xor187.i, i32* %t.i, align 4
  %159 = load i32, i32* %t.i, align 4
  %160 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %159) #5, !srcloc !7
  store i32 %160, i32* %ret188.i, align 4
  %161 = load i32, i32* %ret188.i, align 4
  store i32 %161, i32* %tmp189.i, align 4
  %162 = load i32, i32* %tmp189.i, align 4
  store i32 %162, i32* %t.i, align 4
  %163 = load i32, i32* %u.i, align 4
  %shr190.i = lshr i32 %163, 2
  %and191.i = and i32 %shr190.i, 63
  %idxprom192.i = zext i32 %and191.i to i64
  %arrayidx193.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i
  %164 = load i32, i32* %arrayidx193.i, align 4
  %165 = load i32, i32* %u.i, align 4
  %shr194.i = lshr i32 %165, 10
  %and195.i = and i32 %shr194.i, 63
  %idxprom196.i = zext i32 %and195.i to i64
  %arrayidx197.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i
  %166 = load i32, i32* %arrayidx197.i, align 4
  %xor198.i = xor i32 %164, %166
  %167 = load i32, i32* %u.i, align 4
  %shr199.i = lshr i32 %167, 18
  %and200.i = and i32 %shr199.i, 63
  %idxprom201.i = zext i32 %and200.i to i64
  %arrayidx202.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i
  %168 = load i32, i32* %arrayidx202.i, align 4
  %xor203.i = xor i32 %xor198.i, %168
  %169 = load i32, i32* %u.i, align 4
  %shr204.i = lshr i32 %169, 26
  %idxprom206.i = zext i32 %shr204.i to i64
  %arrayidx207.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i
  %170 = load i32, i32* %arrayidx207.i, align 4
  %xor208.i = xor i32 %xor203.i, %170
  %171 = load i32, i32* %t.i, align 4
  %shr209.i = lshr i32 %171, 2
  %and210.i = and i32 %shr209.i, 63
  %idxprom211.i = zext i32 %and210.i to i64
  %arrayidx212.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i
  %172 = load i32, i32* %arrayidx212.i, align 4
  %xor213.i = xor i32 %xor208.i, %172
  %173 = load i32, i32* %t.i, align 4
  %shr214.i = lshr i32 %173, 10
  %and215.i = and i32 %shr214.i, 63
  %idxprom216.i = zext i32 %and215.i to i64
  %arrayidx217.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i
  %174 = load i32, i32* %arrayidx217.i, align 4
  %xor218.i = xor i32 %xor213.i, %174
  %175 = load i32, i32* %t.i, align 4
  %shr219.i = lshr i32 %175, 18
  %and220.i = and i32 %shr219.i, 63
  %idxprom221.i = zext i32 %and220.i to i64
  %arrayidx222.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i
  %176 = load i32, i32* %arrayidx222.i, align 4
  %xor223.i = xor i32 %xor218.i, %176
  %177 = load i32, i32* %t.i, align 4
  %shr224.i = lshr i32 %177, 26
  %idxprom226.i = zext i32 %shr224.i to i64
  %arrayidx227.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i
  %178 = load i32, i32* %arrayidx227.i, align 4
  %xor228.i = xor i32 %xor223.i, %178
  %179 = load i32, i32* %r.i, align 4
  %xor229.i = xor i32 %179, %xor228.i
  store i32 %xor229.i, i32* %r.i, align 4
  %180 = load i32, i32* %r.i, align 4
  %181 = load i32*, i32** %s.i, align 8
  %arrayidx230.i = getelementptr inbounds i32, i32* %181, i64 8
  %182 = load i32, i32* %arrayidx230.i, align 4
  %xor231.i = xor i32 %180, %182
  store i32 %xor231.i, i32* %u.i, align 4
  %183 = load i32, i32* %r.i, align 4
  %184 = load i32*, i32** %s.i, align 8
  %arrayidx232.i = getelementptr inbounds i32, i32* %184, i64 9
  %185 = load i32, i32* %arrayidx232.i, align 4
  %xor233.i = xor i32 %183, %185
  store i32 %xor233.i, i32* %t.i, align 4
  %186 = load i32, i32* %t.i, align 4
  %187 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %186) #5, !srcloc !8
  store i32 %187, i32* %ret234.i, align 4
  %188 = load i32, i32* %ret234.i, align 4
  store i32 %188, i32* %tmp235.i, align 4
  %189 = load i32, i32* %tmp235.i, align 4
  store i32 %189, i32* %t.i, align 4
  %190 = load i32, i32* %u.i, align 4
  %shr236.i = lshr i32 %190, 2
  %and237.i = and i32 %shr236.i, 63
  %idxprom238.i = zext i32 %and237.i to i64
  %arrayidx239.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i
  %191 = load i32, i32* %arrayidx239.i, align 4
  %192 = load i32, i32* %u.i, align 4
  %shr240.i = lshr i32 %192, 10
  %and241.i = and i32 %shr240.i, 63
  %idxprom242.i = zext i32 %and241.i to i64
  %arrayidx243.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i
  %193 = load i32, i32* %arrayidx243.i, align 4
  %xor244.i = xor i32 %191, %193
  %194 = load i32, i32* %u.i, align 4
  %shr245.i = lshr i32 %194, 18
  %and246.i = and i32 %shr245.i, 63
  %idxprom247.i = zext i32 %and246.i to i64
  %arrayidx248.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i
  %195 = load i32, i32* %arrayidx248.i, align 4
  %xor249.i = xor i32 %xor244.i, %195
  %196 = load i32, i32* %u.i, align 4
  %shr250.i = lshr i32 %196, 26
  %idxprom252.i = zext i32 %shr250.i to i64
  %arrayidx253.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i
  %197 = load i32, i32* %arrayidx253.i, align 4
  %xor254.i = xor i32 %xor249.i, %197
  %198 = load i32, i32* %t.i, align 4
  %shr255.i = lshr i32 %198, 2
  %and256.i = and i32 %shr255.i, 63
  %idxprom257.i = zext i32 %and256.i to i64
  %arrayidx258.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i
  %199 = load i32, i32* %arrayidx258.i, align 4
  %xor259.i = xor i32 %xor254.i, %199
  %200 = load i32, i32* %t.i, align 4
  %shr260.i = lshr i32 %200, 10
  %and261.i = and i32 %shr260.i, 63
  %idxprom262.i = zext i32 %and261.i to i64
  %arrayidx263.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i
  %201 = load i32, i32* %arrayidx263.i, align 4
  %xor264.i = xor i32 %xor259.i, %201
  %202 = load i32, i32* %t.i, align 4
  %shr265.i = lshr i32 %202, 18
  %and266.i = and i32 %shr265.i, 63
  %idxprom267.i = zext i32 %and266.i to i64
  %arrayidx268.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i
  %203 = load i32, i32* %arrayidx268.i, align 4
  %xor269.i = xor i32 %xor264.i, %203
  %204 = load i32, i32* %t.i, align 4
  %shr270.i = lshr i32 %204, 26
  %idxprom272.i = zext i32 %shr270.i to i64
  %arrayidx273.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i
  %205 = load i32, i32* %arrayidx273.i, align 4
  %xor274.i = xor i32 %xor269.i, %205
  %206 = load i32, i32* %l.i, align 4
  %xor275.i = xor i32 %206, %xor274.i
  store i32 %xor275.i, i32* %l.i, align 4
  %207 = load i32, i32* %l.i, align 4
  %208 = load i32*, i32** %s.i, align 8
  %arrayidx276.i = getelementptr inbounds i32, i32* %208, i64 10
  %209 = load i32, i32* %arrayidx276.i, align 4
  %xor277.i = xor i32 %207, %209
  store i32 %xor277.i, i32* %u.i, align 4
  %210 = load i32, i32* %l.i, align 4
  %211 = load i32*, i32** %s.i, align 8
  %arrayidx278.i = getelementptr inbounds i32, i32* %211, i64 11
  %212 = load i32, i32* %arrayidx278.i, align 4
  %xor279.i = xor i32 %210, %212
  store i32 %xor279.i, i32* %t.i, align 4
  %213 = load i32, i32* %t.i, align 4
  %214 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %213) #5, !srcloc !9
  store i32 %214, i32* %ret280.i, align 4
  %215 = load i32, i32* %ret280.i, align 4
  store i32 %215, i32* %tmp281.i, align 4
  %216 = load i32, i32* %tmp281.i, align 4
  store i32 %216, i32* %t.i, align 4
  %217 = load i32, i32* %u.i, align 4
  %shr282.i = lshr i32 %217, 2
  %and283.i = and i32 %shr282.i, 63
  %idxprom284.i = zext i32 %and283.i to i64
  %arrayidx285.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i
  %218 = load i32, i32* %arrayidx285.i, align 4
  %219 = load i32, i32* %u.i, align 4
  %shr286.i = lshr i32 %219, 10
  %and287.i = and i32 %shr286.i, 63
  %idxprom288.i = zext i32 %and287.i to i64
  %arrayidx289.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i
  %220 = load i32, i32* %arrayidx289.i, align 4
  %xor290.i = xor i32 %218, %220
  %221 = load i32, i32* %u.i, align 4
  %shr291.i = lshr i32 %221, 18
  %and292.i = and i32 %shr291.i, 63
  %idxprom293.i = zext i32 %and292.i to i64
  %arrayidx294.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i
  %222 = load i32, i32* %arrayidx294.i, align 4
  %xor295.i = xor i32 %xor290.i, %222
  %223 = load i32, i32* %u.i, align 4
  %shr296.i = lshr i32 %223, 26
  %idxprom298.i = zext i32 %shr296.i to i64
  %arrayidx299.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i
  %224 = load i32, i32* %arrayidx299.i, align 4
  %xor300.i = xor i32 %xor295.i, %224
  %225 = load i32, i32* %t.i, align 4
  %shr301.i = lshr i32 %225, 2
  %and302.i = and i32 %shr301.i, 63
  %idxprom303.i = zext i32 %and302.i to i64
  %arrayidx304.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i
  %226 = load i32, i32* %arrayidx304.i, align 4
  %xor305.i = xor i32 %xor300.i, %226
  %227 = load i32, i32* %t.i, align 4
  %shr306.i = lshr i32 %227, 10
  %and307.i = and i32 %shr306.i, 63
  %idxprom308.i = zext i32 %and307.i to i64
  %arrayidx309.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i
  %228 = load i32, i32* %arrayidx309.i, align 4
  %xor310.i = xor i32 %xor305.i, %228
  %229 = load i32, i32* %t.i, align 4
  %shr311.i = lshr i32 %229, 18
  %and312.i = and i32 %shr311.i, 63
  %idxprom313.i = zext i32 %and312.i to i64
  %arrayidx314.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i
  %230 = load i32, i32* %arrayidx314.i, align 4
  %xor315.i = xor i32 %xor310.i, %230
  %231 = load i32, i32* %t.i, align 4
  %shr316.i = lshr i32 %231, 26
  %idxprom318.i = zext i32 %shr316.i to i64
  %arrayidx319.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i
  %232 = load i32, i32* %arrayidx319.i, align 4
  %xor320.i = xor i32 %xor315.i, %232
  %233 = load i32, i32* %r.i, align 4
  %xor321.i = xor i32 %233, %xor320.i
  store i32 %xor321.i, i32* %r.i, align 4
  %234 = load i32, i32* %r.i, align 4
  %235 = load i32*, i32** %s.i, align 8
  %arrayidx322.i = getelementptr inbounds i32, i32* %235, i64 12
  %236 = load i32, i32* %arrayidx322.i, align 4
  %xor323.i = xor i32 %234, %236
  store i32 %xor323.i, i32* %u.i, align 4
  %237 = load i32, i32* %r.i, align 4
  %238 = load i32*, i32** %s.i, align 8
  %arrayidx324.i = getelementptr inbounds i32, i32* %238, i64 13
  %239 = load i32, i32* %arrayidx324.i, align 4
  %xor325.i = xor i32 %237, %239
  store i32 %xor325.i, i32* %t.i, align 4
  %240 = load i32, i32* %t.i, align 4
  %241 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %240) #5, !srcloc !10
  store i32 %241, i32* %ret326.i, align 4
  %242 = load i32, i32* %ret326.i, align 4
  store i32 %242, i32* %tmp327.i, align 4
  %243 = load i32, i32* %tmp327.i, align 4
  store i32 %243, i32* %t.i, align 4
  %244 = load i32, i32* %u.i, align 4
  %shr328.i = lshr i32 %244, 2
  %and329.i = and i32 %shr328.i, 63
  %idxprom330.i = zext i32 %and329.i to i64
  %arrayidx331.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i
  %245 = load i32, i32* %arrayidx331.i, align 4
  %246 = load i32, i32* %u.i, align 4
  %shr332.i = lshr i32 %246, 10
  %and333.i = and i32 %shr332.i, 63
  %idxprom334.i = zext i32 %and333.i to i64
  %arrayidx335.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i
  %247 = load i32, i32* %arrayidx335.i, align 4
  %xor336.i = xor i32 %245, %247
  %248 = load i32, i32* %u.i, align 4
  %shr337.i = lshr i32 %248, 18
  %and338.i = and i32 %shr337.i, 63
  %idxprom339.i = zext i32 %and338.i to i64
  %arrayidx340.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i
  %249 = load i32, i32* %arrayidx340.i, align 4
  %xor341.i = xor i32 %xor336.i, %249
  %250 = load i32, i32* %u.i, align 4
  %shr342.i = lshr i32 %250, 26
  %idxprom344.i = zext i32 %shr342.i to i64
  %arrayidx345.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i
  %251 = load i32, i32* %arrayidx345.i, align 4
  %xor346.i = xor i32 %xor341.i, %251
  %252 = load i32, i32* %t.i, align 4
  %shr347.i = lshr i32 %252, 2
  %and348.i = and i32 %shr347.i, 63
  %idxprom349.i = zext i32 %and348.i to i64
  %arrayidx350.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i
  %253 = load i32, i32* %arrayidx350.i, align 4
  %xor351.i = xor i32 %xor346.i, %253
  %254 = load i32, i32* %t.i, align 4
  %shr352.i = lshr i32 %254, 10
  %and353.i = and i32 %shr352.i, 63
  %idxprom354.i = zext i32 %and353.i to i64
  %arrayidx355.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i
  %255 = load i32, i32* %arrayidx355.i, align 4
  %xor356.i = xor i32 %xor351.i, %255
  %256 = load i32, i32* %t.i, align 4
  %shr357.i = lshr i32 %256, 18
  %and358.i = and i32 %shr357.i, 63
  %idxprom359.i = zext i32 %and358.i to i64
  %arrayidx360.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i
  %257 = load i32, i32* %arrayidx360.i, align 4
  %xor361.i = xor i32 %xor356.i, %257
  %258 = load i32, i32* %t.i, align 4
  %shr362.i = lshr i32 %258, 26
  %idxprom364.i = zext i32 %shr362.i to i64
  %arrayidx365.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i
  %259 = load i32, i32* %arrayidx365.i, align 4
  %xor366.i = xor i32 %xor361.i, %259
  %260 = load i32, i32* %l.i, align 4
  %xor367.i = xor i32 %260, %xor366.i
  store i32 %xor367.i, i32* %l.i, align 4
  %261 = load i32, i32* %l.i, align 4
  %262 = load i32*, i32** %s.i, align 8
  %arrayidx368.i = getelementptr inbounds i32, i32* %262, i64 14
  %263 = load i32, i32* %arrayidx368.i, align 4
  %xor369.i = xor i32 %261, %263
  store i32 %xor369.i, i32* %u.i, align 4
  %264 = load i32, i32* %l.i, align 4
  %265 = load i32*, i32** %s.i, align 8
  %arrayidx370.i = getelementptr inbounds i32, i32* %265, i64 15
  %266 = load i32, i32* %arrayidx370.i, align 4
  %xor371.i = xor i32 %264, %266
  store i32 %xor371.i, i32* %t.i, align 4
  %267 = load i32, i32* %t.i, align 4
  %268 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %267) #5, !srcloc !11
  store i32 %268, i32* %ret372.i, align 4
  %269 = load i32, i32* %ret372.i, align 4
  store i32 %269, i32* %tmp373.i, align 4
  %270 = load i32, i32* %tmp373.i, align 4
  store i32 %270, i32* %t.i, align 4
  %271 = load i32, i32* %u.i, align 4
  %shr374.i = lshr i32 %271, 2
  %and375.i = and i32 %shr374.i, 63
  %idxprom376.i = zext i32 %and375.i to i64
  %arrayidx377.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i
  %272 = load i32, i32* %arrayidx377.i, align 4
  %273 = load i32, i32* %u.i, align 4
  %shr378.i = lshr i32 %273, 10
  %and379.i = and i32 %shr378.i, 63
  %idxprom380.i = zext i32 %and379.i to i64
  %arrayidx381.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i
  %274 = load i32, i32* %arrayidx381.i, align 4
  %xor382.i = xor i32 %272, %274
  %275 = load i32, i32* %u.i, align 4
  %shr383.i = lshr i32 %275, 18
  %and384.i = and i32 %shr383.i, 63
  %idxprom385.i = zext i32 %and384.i to i64
  %arrayidx386.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i
  %276 = load i32, i32* %arrayidx386.i, align 4
  %xor387.i = xor i32 %xor382.i, %276
  %277 = load i32, i32* %u.i, align 4
  %shr388.i = lshr i32 %277, 26
  %idxprom390.i = zext i32 %shr388.i to i64
  %arrayidx391.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i
  %278 = load i32, i32* %arrayidx391.i, align 4
  %xor392.i = xor i32 %xor387.i, %278
  %279 = load i32, i32* %t.i, align 4
  %shr393.i = lshr i32 %279, 2
  %and394.i = and i32 %shr393.i, 63
  %idxprom395.i = zext i32 %and394.i to i64
  %arrayidx396.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i
  %280 = load i32, i32* %arrayidx396.i, align 4
  %xor397.i = xor i32 %xor392.i, %280
  %281 = load i32, i32* %t.i, align 4
  %shr398.i = lshr i32 %281, 10
  %and399.i = and i32 %shr398.i, 63
  %idxprom400.i = zext i32 %and399.i to i64
  %arrayidx401.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i
  %282 = load i32, i32* %arrayidx401.i, align 4
  %xor402.i = xor i32 %xor397.i, %282
  %283 = load i32, i32* %t.i, align 4
  %shr403.i = lshr i32 %283, 18
  %and404.i = and i32 %shr403.i, 63
  %idxprom405.i = zext i32 %and404.i to i64
  %arrayidx406.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i
  %284 = load i32, i32* %arrayidx406.i, align 4
  %xor407.i = xor i32 %xor402.i, %284
  %285 = load i32, i32* %t.i, align 4
  %shr408.i = lshr i32 %285, 26
  %idxprom410.i = zext i32 %shr408.i to i64
  %arrayidx411.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i
  %286 = load i32, i32* %arrayidx411.i, align 4
  %xor412.i = xor i32 %xor407.i, %286
  %287 = load i32, i32* %r.i, align 4
  %xor413.i = xor i32 %287, %xor412.i
  store i32 %xor413.i, i32* %r.i, align 4
  %288 = load i32, i32* %r.i, align 4
  %289 = load i32*, i32** %s.i, align 8
  %arrayidx414.i = getelementptr inbounds i32, i32* %289, i64 16
  %290 = load i32, i32* %arrayidx414.i, align 4
  %xor415.i = xor i32 %288, %290
  store i32 %xor415.i, i32* %u.i, align 4
  %291 = load i32, i32* %r.i, align 4
  %292 = load i32*, i32** %s.i, align 8
  %arrayidx416.i = getelementptr inbounds i32, i32* %292, i64 17
  %293 = load i32, i32* %arrayidx416.i, align 4
  %xor417.i = xor i32 %291, %293
  store i32 %xor417.i, i32* %t.i, align 4
  %294 = load i32, i32* %t.i, align 4
  %295 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %294) #5, !srcloc !12
  store i32 %295, i32* %ret418.i, align 4
  %296 = load i32, i32* %ret418.i, align 4
  store i32 %296, i32* %tmp419.i, align 4
  %297 = load i32, i32* %tmp419.i, align 4
  store i32 %297, i32* %t.i, align 4
  %298 = load i32, i32* %u.i, align 4
  %shr420.i = lshr i32 %298, 2
  %and421.i = and i32 %shr420.i, 63
  %idxprom422.i = zext i32 %and421.i to i64
  %arrayidx423.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i
  %299 = load i32, i32* %arrayidx423.i, align 4
  %300 = load i32, i32* %u.i, align 4
  %shr424.i = lshr i32 %300, 10
  %and425.i = and i32 %shr424.i, 63
  %idxprom426.i = zext i32 %and425.i to i64
  %arrayidx427.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i
  %301 = load i32, i32* %arrayidx427.i, align 4
  %xor428.i = xor i32 %299, %301
  %302 = load i32, i32* %u.i, align 4
  %shr429.i = lshr i32 %302, 18
  %and430.i = and i32 %shr429.i, 63
  %idxprom431.i = zext i32 %and430.i to i64
  %arrayidx432.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i
  %303 = load i32, i32* %arrayidx432.i, align 4
  %xor433.i = xor i32 %xor428.i, %303
  %304 = load i32, i32* %u.i, align 4
  %shr434.i = lshr i32 %304, 26
  %idxprom436.i = zext i32 %shr434.i to i64
  %arrayidx437.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i
  %305 = load i32, i32* %arrayidx437.i, align 4
  %xor438.i = xor i32 %xor433.i, %305
  %306 = load i32, i32* %t.i, align 4
  %shr439.i = lshr i32 %306, 2
  %and440.i = and i32 %shr439.i, 63
  %idxprom441.i = zext i32 %and440.i to i64
  %arrayidx442.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i
  %307 = load i32, i32* %arrayidx442.i, align 4
  %xor443.i = xor i32 %xor438.i, %307
  %308 = load i32, i32* %t.i, align 4
  %shr444.i = lshr i32 %308, 10
  %and445.i = and i32 %shr444.i, 63
  %idxprom446.i = zext i32 %and445.i to i64
  %arrayidx447.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i
  %309 = load i32, i32* %arrayidx447.i, align 4
  %xor448.i = xor i32 %xor443.i, %309
  %310 = load i32, i32* %t.i, align 4
  %shr449.i = lshr i32 %310, 18
  %and450.i = and i32 %shr449.i, 63
  %idxprom451.i = zext i32 %and450.i to i64
  %arrayidx452.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i
  %311 = load i32, i32* %arrayidx452.i, align 4
  %xor453.i = xor i32 %xor448.i, %311
  %312 = load i32, i32* %t.i, align 4
  %shr454.i = lshr i32 %312, 26
  %idxprom456.i = zext i32 %shr454.i to i64
  %arrayidx457.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i
  %313 = load i32, i32* %arrayidx457.i, align 4
  %xor458.i = xor i32 %xor453.i, %313
  %314 = load i32, i32* %l.i, align 4
  %xor459.i = xor i32 %314, %xor458.i
  store i32 %xor459.i, i32* %l.i, align 4
  %315 = load i32, i32* %l.i, align 4
  %316 = load i32*, i32** %s.i, align 8
  %arrayidx460.i = getelementptr inbounds i32, i32* %316, i64 18
  %317 = load i32, i32* %arrayidx460.i, align 4
  %xor461.i = xor i32 %315, %317
  store i32 %xor461.i, i32* %u.i, align 4
  %318 = load i32, i32* %l.i, align 4
  %319 = load i32*, i32** %s.i, align 8
  %arrayidx462.i = getelementptr inbounds i32, i32* %319, i64 19
  %320 = load i32, i32* %arrayidx462.i, align 4
  %xor463.i = xor i32 %318, %320
  store i32 %xor463.i, i32* %t.i, align 4
  %321 = load i32, i32* %t.i, align 4
  %322 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %321) #5, !srcloc !13
  store i32 %322, i32* %ret464.i, align 4
  %323 = load i32, i32* %ret464.i, align 4
  store i32 %323, i32* %tmp465.i, align 4
  %324 = load i32, i32* %tmp465.i, align 4
  store i32 %324, i32* %t.i, align 4
  %325 = load i32, i32* %u.i, align 4
  %shr466.i = lshr i32 %325, 2
  %and467.i = and i32 %shr466.i, 63
  %idxprom468.i = zext i32 %and467.i to i64
  %arrayidx469.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i
  %326 = load i32, i32* %arrayidx469.i, align 4
  %327 = load i32, i32* %u.i, align 4
  %shr470.i = lshr i32 %327, 10
  %and471.i = and i32 %shr470.i, 63
  %idxprom472.i = zext i32 %and471.i to i64
  %arrayidx473.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i
  %328 = load i32, i32* %arrayidx473.i, align 4
  %xor474.i = xor i32 %326, %328
  %329 = load i32, i32* %u.i, align 4
  %shr475.i = lshr i32 %329, 18
  %and476.i = and i32 %shr475.i, 63
  %idxprom477.i = zext i32 %and476.i to i64
  %arrayidx478.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i
  %330 = load i32, i32* %arrayidx478.i, align 4
  %xor479.i = xor i32 %xor474.i, %330
  %331 = load i32, i32* %u.i, align 4
  %shr480.i = lshr i32 %331, 26
  %idxprom482.i = zext i32 %shr480.i to i64
  %arrayidx483.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i
  %332 = load i32, i32* %arrayidx483.i, align 4
  %xor484.i = xor i32 %xor479.i, %332
  %333 = load i32, i32* %t.i, align 4
  %shr485.i = lshr i32 %333, 2
  %and486.i = and i32 %shr485.i, 63
  %idxprom487.i = zext i32 %and486.i to i64
  %arrayidx488.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i
  %334 = load i32, i32* %arrayidx488.i, align 4
  %xor489.i = xor i32 %xor484.i, %334
  %335 = load i32, i32* %t.i, align 4
  %shr490.i = lshr i32 %335, 10
  %and491.i = and i32 %shr490.i, 63
  %idxprom492.i = zext i32 %and491.i to i64
  %arrayidx493.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i
  %336 = load i32, i32* %arrayidx493.i, align 4
  %xor494.i = xor i32 %xor489.i, %336
  %337 = load i32, i32* %t.i, align 4
  %shr495.i = lshr i32 %337, 18
  %and496.i = and i32 %shr495.i, 63
  %idxprom497.i = zext i32 %and496.i to i64
  %arrayidx498.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i
  %338 = load i32, i32* %arrayidx498.i, align 4
  %xor499.i = xor i32 %xor494.i, %338
  %339 = load i32, i32* %t.i, align 4
  %shr500.i = lshr i32 %339, 26
  %idxprom502.i = zext i32 %shr500.i to i64
  %arrayidx503.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i
  %340 = load i32, i32* %arrayidx503.i, align 4
  %xor504.i = xor i32 %xor499.i, %340
  %341 = load i32, i32* %r.i, align 4
  %xor505.i = xor i32 %341, %xor504.i
  store i32 %xor505.i, i32* %r.i, align 4
  %342 = load i32, i32* %r.i, align 4
  %343 = load i32*, i32** %s.i, align 8
  %arrayidx506.i = getelementptr inbounds i32, i32* %343, i64 20
  %344 = load i32, i32* %arrayidx506.i, align 4
  %xor507.i = xor i32 %342, %344
  store i32 %xor507.i, i32* %u.i, align 4
  %345 = load i32, i32* %r.i, align 4
  %346 = load i32*, i32** %s.i, align 8
  %arrayidx508.i = getelementptr inbounds i32, i32* %346, i64 21
  %347 = load i32, i32* %arrayidx508.i, align 4
  %xor509.i = xor i32 %345, %347
  store i32 %xor509.i, i32* %t.i, align 4
  %348 = load i32, i32* %t.i, align 4
  %349 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %348) #5, !srcloc !14
  store i32 %349, i32* %ret510.i, align 4
  %350 = load i32, i32* %ret510.i, align 4
  store i32 %350, i32* %tmp511.i, align 4
  %351 = load i32, i32* %tmp511.i, align 4
  store i32 %351, i32* %t.i, align 4
  %352 = load i32, i32* %u.i, align 4
  %shr512.i = lshr i32 %352, 2
  %and513.i = and i32 %shr512.i, 63
  %idxprom514.i = zext i32 %and513.i to i64
  %arrayidx515.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i
  %353 = load i32, i32* %arrayidx515.i, align 4
  %354 = load i32, i32* %u.i, align 4
  %shr516.i = lshr i32 %354, 10
  %and517.i = and i32 %shr516.i, 63
  %idxprom518.i = zext i32 %and517.i to i64
  %arrayidx519.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i
  %355 = load i32, i32* %arrayidx519.i, align 4
  %xor520.i = xor i32 %353, %355
  %356 = load i32, i32* %u.i, align 4
  %shr521.i = lshr i32 %356, 18
  %and522.i = and i32 %shr521.i, 63
  %idxprom523.i = zext i32 %and522.i to i64
  %arrayidx524.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i
  %357 = load i32, i32* %arrayidx524.i, align 4
  %xor525.i = xor i32 %xor520.i, %357
  %358 = load i32, i32* %u.i, align 4
  %shr526.i = lshr i32 %358, 26
  %idxprom528.i = zext i32 %shr526.i to i64
  %arrayidx529.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i
  %359 = load i32, i32* %arrayidx529.i, align 4
  %xor530.i = xor i32 %xor525.i, %359
  %360 = load i32, i32* %t.i, align 4
  %shr531.i = lshr i32 %360, 2
  %and532.i = and i32 %shr531.i, 63
  %idxprom533.i = zext i32 %and532.i to i64
  %arrayidx534.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i
  %361 = load i32, i32* %arrayidx534.i, align 4
  %xor535.i = xor i32 %xor530.i, %361
  %362 = load i32, i32* %t.i, align 4
  %shr536.i = lshr i32 %362, 10
  %and537.i = and i32 %shr536.i, 63
  %idxprom538.i = zext i32 %and537.i to i64
  %arrayidx539.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i
  %363 = load i32, i32* %arrayidx539.i, align 4
  %xor540.i = xor i32 %xor535.i, %363
  %364 = load i32, i32* %t.i, align 4
  %shr541.i = lshr i32 %364, 18
  %and542.i = and i32 %shr541.i, 63
  %idxprom543.i = zext i32 %and542.i to i64
  %arrayidx544.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i
  %365 = load i32, i32* %arrayidx544.i, align 4
  %xor545.i = xor i32 %xor540.i, %365
  %366 = load i32, i32* %t.i, align 4
  %shr546.i = lshr i32 %366, 26
  %idxprom548.i = zext i32 %shr546.i to i64
  %arrayidx549.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i
  %367 = load i32, i32* %arrayidx549.i, align 4
  %xor550.i = xor i32 %xor545.i, %367
  %368 = load i32, i32* %l.i, align 4
  %xor551.i = xor i32 %368, %xor550.i
  store i32 %xor551.i, i32* %l.i, align 4
  %369 = load i32, i32* %l.i, align 4
  %370 = load i32*, i32** %s.i, align 8
  %arrayidx552.i = getelementptr inbounds i32, i32* %370, i64 22
  %371 = load i32, i32* %arrayidx552.i, align 4
  %xor553.i = xor i32 %369, %371
  store i32 %xor553.i, i32* %u.i, align 4
  %372 = load i32, i32* %l.i, align 4
  %373 = load i32*, i32** %s.i, align 8
  %arrayidx554.i = getelementptr inbounds i32, i32* %373, i64 23
  %374 = load i32, i32* %arrayidx554.i, align 4
  %xor555.i = xor i32 %372, %374
  store i32 %xor555.i, i32* %t.i, align 4
  %375 = load i32, i32* %t.i, align 4
  %376 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %375) #5, !srcloc !15
  store i32 %376, i32* %ret556.i, align 4
  %377 = load i32, i32* %ret556.i, align 4
  store i32 %377, i32* %tmp557.i, align 4
  %378 = load i32, i32* %tmp557.i, align 4
  store i32 %378, i32* %t.i, align 4
  %379 = load i32, i32* %u.i, align 4
  %shr558.i = lshr i32 %379, 2
  %and559.i = and i32 %shr558.i, 63
  %idxprom560.i = zext i32 %and559.i to i64
  %arrayidx561.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i
  %380 = load i32, i32* %arrayidx561.i, align 4
  %381 = load i32, i32* %u.i, align 4
  %shr562.i = lshr i32 %381, 10
  %and563.i = and i32 %shr562.i, 63
  %idxprom564.i = zext i32 %and563.i to i64
  %arrayidx565.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i
  %382 = load i32, i32* %arrayidx565.i, align 4
  %xor566.i = xor i32 %380, %382
  %383 = load i32, i32* %u.i, align 4
  %shr567.i = lshr i32 %383, 18
  %and568.i = and i32 %shr567.i, 63
  %idxprom569.i = zext i32 %and568.i to i64
  %arrayidx570.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i
  %384 = load i32, i32* %arrayidx570.i, align 4
  %xor571.i = xor i32 %xor566.i, %384
  %385 = load i32, i32* %u.i, align 4
  %shr572.i = lshr i32 %385, 26
  %idxprom574.i = zext i32 %shr572.i to i64
  %arrayidx575.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i
  %386 = load i32, i32* %arrayidx575.i, align 4
  %xor576.i = xor i32 %xor571.i, %386
  %387 = load i32, i32* %t.i, align 4
  %shr577.i = lshr i32 %387, 2
  %and578.i = and i32 %shr577.i, 63
  %idxprom579.i = zext i32 %and578.i to i64
  %arrayidx580.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i
  %388 = load i32, i32* %arrayidx580.i, align 4
  %xor581.i = xor i32 %xor576.i, %388
  %389 = load i32, i32* %t.i, align 4
  %shr582.i = lshr i32 %389, 10
  %and583.i = and i32 %shr582.i, 63
  %idxprom584.i = zext i32 %and583.i to i64
  %arrayidx585.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i
  %390 = load i32, i32* %arrayidx585.i, align 4
  %xor586.i = xor i32 %xor581.i, %390
  %391 = load i32, i32* %t.i, align 4
  %shr587.i = lshr i32 %391, 18
  %and588.i = and i32 %shr587.i, 63
  %idxprom589.i = zext i32 %and588.i to i64
  %arrayidx590.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i
  %392 = load i32, i32* %arrayidx590.i, align 4
  %xor591.i = xor i32 %xor586.i, %392
  %393 = load i32, i32* %t.i, align 4
  %shr592.i = lshr i32 %393, 26
  %idxprom594.i = zext i32 %shr592.i to i64
  %arrayidx595.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i
  %394 = load i32, i32* %arrayidx595.i, align 4
  %xor596.i = xor i32 %xor591.i, %394
  %395 = load i32, i32* %r.i, align 4
  %xor597.i = xor i32 %395, %xor596.i
  store i32 %xor597.i, i32* %r.i, align 4
  %396 = load i32, i32* %r.i, align 4
  %397 = load i32*, i32** %s.i, align 8
  %arrayidx598.i = getelementptr inbounds i32, i32* %397, i64 24
  %398 = load i32, i32* %arrayidx598.i, align 4
  %xor599.i = xor i32 %396, %398
  store i32 %xor599.i, i32* %u.i, align 4
  %399 = load i32, i32* %r.i, align 4
  %400 = load i32*, i32** %s.i, align 8
  %arrayidx600.i = getelementptr inbounds i32, i32* %400, i64 25
  %401 = load i32, i32* %arrayidx600.i, align 4
  %xor601.i = xor i32 %399, %401
  store i32 %xor601.i, i32* %t.i, align 4
  %402 = load i32, i32* %t.i, align 4
  %403 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %402) #5, !srcloc !16
  store i32 %403, i32* %ret602.i, align 4
  %404 = load i32, i32* %ret602.i, align 4
  store i32 %404, i32* %tmp603.i, align 4
  %405 = load i32, i32* %tmp603.i, align 4
  store i32 %405, i32* %t.i, align 4
  %406 = load i32, i32* %u.i, align 4
  %shr604.i = lshr i32 %406, 2
  %and605.i = and i32 %shr604.i, 63
  %idxprom606.i = zext i32 %and605.i to i64
  %arrayidx607.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i
  %407 = load i32, i32* %arrayidx607.i, align 4
  %408 = load i32, i32* %u.i, align 4
  %shr608.i = lshr i32 %408, 10
  %and609.i = and i32 %shr608.i, 63
  %idxprom610.i = zext i32 %and609.i to i64
  %arrayidx611.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i
  %409 = load i32, i32* %arrayidx611.i, align 4
  %xor612.i = xor i32 %407, %409
  %410 = load i32, i32* %u.i, align 4
  %shr613.i = lshr i32 %410, 18
  %and614.i = and i32 %shr613.i, 63
  %idxprom615.i = zext i32 %and614.i to i64
  %arrayidx616.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i
  %411 = load i32, i32* %arrayidx616.i, align 4
  %xor617.i = xor i32 %xor612.i, %411
  %412 = load i32, i32* %u.i, align 4
  %shr618.i = lshr i32 %412, 26
  %idxprom620.i = zext i32 %shr618.i to i64
  %arrayidx621.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i
  %413 = load i32, i32* %arrayidx621.i, align 4
  %xor622.i = xor i32 %xor617.i, %413
  %414 = load i32, i32* %t.i, align 4
  %shr623.i = lshr i32 %414, 2
  %and624.i = and i32 %shr623.i, 63
  %idxprom625.i = zext i32 %and624.i to i64
  %arrayidx626.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i
  %415 = load i32, i32* %arrayidx626.i, align 4
  %xor627.i = xor i32 %xor622.i, %415
  %416 = load i32, i32* %t.i, align 4
  %shr628.i = lshr i32 %416, 10
  %and629.i = and i32 %shr628.i, 63
  %idxprom630.i = zext i32 %and629.i to i64
  %arrayidx631.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i
  %417 = load i32, i32* %arrayidx631.i, align 4
  %xor632.i = xor i32 %xor627.i, %417
  %418 = load i32, i32* %t.i, align 4
  %shr633.i = lshr i32 %418, 18
  %and634.i = and i32 %shr633.i, 63
  %idxprom635.i = zext i32 %and634.i to i64
  %arrayidx636.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i
  %419 = load i32, i32* %arrayidx636.i, align 4
  %xor637.i = xor i32 %xor632.i, %419
  %420 = load i32, i32* %t.i, align 4
  %shr638.i = lshr i32 %420, 26
  %idxprom640.i = zext i32 %shr638.i to i64
  %arrayidx641.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i
  %421 = load i32, i32* %arrayidx641.i, align 4
  %xor642.i = xor i32 %xor637.i, %421
  %422 = load i32, i32* %l.i, align 4
  %xor643.i = xor i32 %422, %xor642.i
  store i32 %xor643.i, i32* %l.i, align 4
  %423 = load i32, i32* %l.i, align 4
  %424 = load i32*, i32** %s.i, align 8
  %arrayidx644.i = getelementptr inbounds i32, i32* %424, i64 26
  %425 = load i32, i32* %arrayidx644.i, align 4
  %xor645.i = xor i32 %423, %425
  store i32 %xor645.i, i32* %u.i, align 4
  %426 = load i32, i32* %l.i, align 4
  %427 = load i32*, i32** %s.i, align 8
  %arrayidx646.i = getelementptr inbounds i32, i32* %427, i64 27
  %428 = load i32, i32* %arrayidx646.i, align 4
  %xor647.i = xor i32 %426, %428
  store i32 %xor647.i, i32* %t.i, align 4
  %429 = load i32, i32* %t.i, align 4
  %430 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %429) #5, !srcloc !17
  store i32 %430, i32* %ret648.i, align 4
  %431 = load i32, i32* %ret648.i, align 4
  store i32 %431, i32* %tmp649.i, align 4
  %432 = load i32, i32* %tmp649.i, align 4
  store i32 %432, i32* %t.i, align 4
  %433 = load i32, i32* %u.i, align 4
  %shr650.i = lshr i32 %433, 2
  %and651.i = and i32 %shr650.i, 63
  %idxprom652.i = zext i32 %and651.i to i64
  %arrayidx653.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i
  %434 = load i32, i32* %arrayidx653.i, align 4
  %435 = load i32, i32* %u.i, align 4
  %shr654.i = lshr i32 %435, 10
  %and655.i = and i32 %shr654.i, 63
  %idxprom656.i = zext i32 %and655.i to i64
  %arrayidx657.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i
  %436 = load i32, i32* %arrayidx657.i, align 4
  %xor658.i = xor i32 %434, %436
  %437 = load i32, i32* %u.i, align 4
  %shr659.i = lshr i32 %437, 18
  %and660.i = and i32 %shr659.i, 63
  %idxprom661.i = zext i32 %and660.i to i64
  %arrayidx662.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i
  %438 = load i32, i32* %arrayidx662.i, align 4
  %xor663.i = xor i32 %xor658.i, %438
  %439 = load i32, i32* %u.i, align 4
  %shr664.i = lshr i32 %439, 26
  %idxprom666.i = zext i32 %shr664.i to i64
  %arrayidx667.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i
  %440 = load i32, i32* %arrayidx667.i, align 4
  %xor668.i = xor i32 %xor663.i, %440
  %441 = load i32, i32* %t.i, align 4
  %shr669.i = lshr i32 %441, 2
  %and670.i = and i32 %shr669.i, 63
  %idxprom671.i = zext i32 %and670.i to i64
  %arrayidx672.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i
  %442 = load i32, i32* %arrayidx672.i, align 4
  %xor673.i = xor i32 %xor668.i, %442
  %443 = load i32, i32* %t.i, align 4
  %shr674.i = lshr i32 %443, 10
  %and675.i = and i32 %shr674.i, 63
  %idxprom676.i = zext i32 %and675.i to i64
  %arrayidx677.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i
  %444 = load i32, i32* %arrayidx677.i, align 4
  %xor678.i = xor i32 %xor673.i, %444
  %445 = load i32, i32* %t.i, align 4
  %shr679.i = lshr i32 %445, 18
  %and680.i = and i32 %shr679.i, 63
  %idxprom681.i = zext i32 %and680.i to i64
  %arrayidx682.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i
  %446 = load i32, i32* %arrayidx682.i, align 4
  %xor683.i = xor i32 %xor678.i, %446
  %447 = load i32, i32* %t.i, align 4
  %shr684.i = lshr i32 %447, 26
  %idxprom686.i = zext i32 %shr684.i to i64
  %arrayidx687.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i
  %448 = load i32, i32* %arrayidx687.i, align 4
  %xor688.i = xor i32 %xor683.i, %448
  %449 = load i32, i32* %r.i, align 4
  %xor689.i = xor i32 %449, %xor688.i
  store i32 %xor689.i, i32* %r.i, align 4
  %450 = load i32, i32* %r.i, align 4
  %451 = load i32*, i32** %s.i, align 8
  %arrayidx690.i = getelementptr inbounds i32, i32* %451, i64 28
  %452 = load i32, i32* %arrayidx690.i, align 4
  %xor691.i = xor i32 %450, %452
  store i32 %xor691.i, i32* %u.i, align 4
  %453 = load i32, i32* %r.i, align 4
  %454 = load i32*, i32** %s.i, align 8
  %arrayidx692.i = getelementptr inbounds i32, i32* %454, i64 29
  %455 = load i32, i32* %arrayidx692.i, align 4
  %xor693.i = xor i32 %453, %455
  store i32 %xor693.i, i32* %t.i, align 4
  %456 = load i32, i32* %t.i, align 4
  %457 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %456) #5, !srcloc !18
  store i32 %457, i32* %ret694.i, align 4
  %458 = load i32, i32* %ret694.i, align 4
  store i32 %458, i32* %tmp695.i, align 4
  %459 = load i32, i32* %tmp695.i, align 4
  store i32 %459, i32* %t.i, align 4
  %460 = load i32, i32* %u.i, align 4
  %shr696.i = lshr i32 %460, 2
  %and697.i = and i32 %shr696.i, 63
  %idxprom698.i = zext i32 %and697.i to i64
  %arrayidx699.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i
  %461 = load i32, i32* %arrayidx699.i, align 4
  %462 = load i32, i32* %u.i, align 4
  %shr700.i = lshr i32 %462, 10
  %and701.i = and i32 %shr700.i, 63
  %idxprom702.i = zext i32 %and701.i to i64
  %arrayidx703.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i
  %463 = load i32, i32* %arrayidx703.i, align 4
  %xor704.i = xor i32 %461, %463
  %464 = load i32, i32* %u.i, align 4
  %shr705.i = lshr i32 %464, 18
  %and706.i = and i32 %shr705.i, 63
  %idxprom707.i = zext i32 %and706.i to i64
  %arrayidx708.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i
  %465 = load i32, i32* %arrayidx708.i, align 4
  %xor709.i = xor i32 %xor704.i, %465
  %466 = load i32, i32* %u.i, align 4
  %shr710.i = lshr i32 %466, 26
  %idxprom712.i = zext i32 %shr710.i to i64
  %arrayidx713.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i
  %467 = load i32, i32* %arrayidx713.i, align 4
  %xor714.i = xor i32 %xor709.i, %467
  %468 = load i32, i32* %t.i, align 4
  %shr715.i = lshr i32 %468, 2
  %and716.i = and i32 %shr715.i, 63
  %idxprom717.i = zext i32 %and716.i to i64
  %arrayidx718.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i
  %469 = load i32, i32* %arrayidx718.i, align 4
  %xor719.i = xor i32 %xor714.i, %469
  %470 = load i32, i32* %t.i, align 4
  %shr720.i = lshr i32 %470, 10
  %and721.i = and i32 %shr720.i, 63
  %idxprom722.i = zext i32 %and721.i to i64
  %arrayidx723.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i
  %471 = load i32, i32* %arrayidx723.i, align 4
  %xor724.i = xor i32 %xor719.i, %471
  %472 = load i32, i32* %t.i, align 4
  %shr725.i = lshr i32 %472, 18
  %and726.i = and i32 %shr725.i, 63
  %idxprom727.i = zext i32 %and726.i to i64
  %arrayidx728.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i
  %473 = load i32, i32* %arrayidx728.i, align 4
  %xor729.i = xor i32 %xor724.i, %473
  %474 = load i32, i32* %t.i, align 4
  %shr730.i = lshr i32 %474, 26
  %idxprom732.i = zext i32 %shr730.i to i64
  %arrayidx733.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i
  %475 = load i32, i32* %arrayidx733.i, align 4
  %xor734.i = xor i32 %xor729.i, %475
  %476 = load i32, i32* %l.i, align 4
  %xor735.i = xor i32 %476, %xor734.i
  store i32 %xor735.i, i32* %l.i, align 4
  %477 = load i32, i32* %l.i, align 4
  %478 = load i32*, i32** %s.i, align 8
  %arrayidx736.i = getelementptr inbounds i32, i32* %478, i64 30
  %479 = load i32, i32* %arrayidx736.i, align 4
  %xor737.i = xor i32 %477, %479
  store i32 %xor737.i, i32* %u.i, align 4
  %480 = load i32, i32* %l.i, align 4
  %481 = load i32*, i32** %s.i, align 8
  %arrayidx738.i = getelementptr inbounds i32, i32* %481, i64 31
  %482 = load i32, i32* %arrayidx738.i, align 4
  %xor739.i = xor i32 %480, %482
  store i32 %xor739.i, i32* %t.i, align 4
  %483 = load i32, i32* %t.i, align 4
  %484 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %483) #5, !srcloc !19
  store i32 %484, i32* %ret740.i, align 4
  %485 = load i32, i32* %ret740.i, align 4
  store i32 %485, i32* %tmp741.i, align 4
  %486 = load i32, i32* %tmp741.i, align 4
  store i32 %486, i32* %t.i, align 4
  %487 = load i32, i32* %u.i, align 4
  %shr742.i = lshr i32 %487, 2
  %and743.i = and i32 %shr742.i, 63
  %idxprom744.i = zext i32 %and743.i to i64
  %arrayidx745.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i
  %488 = load i32, i32* %arrayidx745.i, align 4
  %489 = load i32, i32* %u.i, align 4
  %shr746.i = lshr i32 %489, 10
  %and747.i = and i32 %shr746.i, 63
  %idxprom748.i = zext i32 %and747.i to i64
  %arrayidx749.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i
  %490 = load i32, i32* %arrayidx749.i, align 4
  %xor750.i = xor i32 %488, %490
  %491 = load i32, i32* %u.i, align 4
  %shr751.i = lshr i32 %491, 18
  %and752.i = and i32 %shr751.i, 63
  %idxprom753.i = zext i32 %and752.i to i64
  %arrayidx754.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i
  %492 = load i32, i32* %arrayidx754.i, align 4
  %xor755.i = xor i32 %xor750.i, %492
  %493 = load i32, i32* %u.i, align 4
  %shr756.i = lshr i32 %493, 26
  %idxprom758.i = zext i32 %shr756.i to i64
  %arrayidx759.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i
  %494 = load i32, i32* %arrayidx759.i, align 4
  %xor760.i = xor i32 %xor755.i, %494
  %495 = load i32, i32* %t.i, align 4
  %shr761.i = lshr i32 %495, 2
  %and762.i = and i32 %shr761.i, 63
  %idxprom763.i = zext i32 %and762.i to i64
  %arrayidx764.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i
  %496 = load i32, i32* %arrayidx764.i, align 4
  %xor765.i = xor i32 %xor760.i, %496
  %497 = load i32, i32* %t.i, align 4
  %shr766.i = lshr i32 %497, 10
  %and767.i = and i32 %shr766.i, 63
  %idxprom768.i = zext i32 %and767.i to i64
  %arrayidx769.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i
  %498 = load i32, i32* %arrayidx769.i, align 4
  %xor770.i = xor i32 %xor765.i, %498
  %499 = load i32, i32* %t.i, align 4
  %shr771.i = lshr i32 %499, 18
  %and772.i = and i32 %shr771.i, 63
  %idxprom773.i = zext i32 %and772.i to i64
  %arrayidx774.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i
  %500 = load i32, i32* %arrayidx774.i, align 4
  %xor775.i = xor i32 %xor770.i, %500
  %501 = load i32, i32* %t.i, align 4
  %shr776.i = lshr i32 %501, 26
  %idxprom778.i = zext i32 %shr776.i to i64
  %arrayidx779.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i
  %502 = load i32, i32* %arrayidx779.i, align 4
  %xor780.i = xor i32 %xor775.i, %502
  %503 = load i32, i32* %r.i, align 4
  %xor781.i = xor i32 %503, %xor780.i
  store i32 %xor781.i, i32* %r.i, align 4
  br label %DES_encrypt1.exit

if.else.i:                                        ; preds = %entry
  %504 = load i32, i32* %r.i, align 4
  %505 = load i32*, i32** %s.i, align 8
  %arrayidx782.i = getelementptr inbounds i32, i32* %505, i64 30
  %506 = load i32, i32* %arrayidx782.i, align 4
  %xor783.i = xor i32 %504, %506
  store i32 %xor783.i, i32* %u.i, align 4
  %507 = load i32, i32* %r.i, align 4
  %508 = load i32*, i32** %s.i, align 8
  %arrayidx784.i = getelementptr inbounds i32, i32* %508, i64 31
  %509 = load i32, i32* %arrayidx784.i, align 4
  %xor785.i = xor i32 %507, %509
  store i32 %xor785.i, i32* %t.i, align 4
  %510 = load i32, i32* %t.i, align 4
  %511 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %510) #5, !srcloc !20
  store i32 %511, i32* %ret786.i, align 4
  %512 = load i32, i32* %ret786.i, align 4
  store i32 %512, i32* %tmp787.i, align 4
  %513 = load i32, i32* %tmp787.i, align 4
  store i32 %513, i32* %t.i, align 4
  %514 = load i32, i32* %u.i, align 4
  %shr788.i = lshr i32 %514, 2
  %and789.i = and i32 %shr788.i, 63
  %idxprom790.i = zext i32 %and789.i to i64
  %arrayidx791.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i
  %515 = load i32, i32* %arrayidx791.i, align 4
  %516 = load i32, i32* %u.i, align 4
  %shr792.i = lshr i32 %516, 10
  %and793.i = and i32 %shr792.i, 63
  %idxprom794.i = zext i32 %and793.i to i64
  %arrayidx795.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i
  %517 = load i32, i32* %arrayidx795.i, align 4
  %xor796.i = xor i32 %515, %517
  %518 = load i32, i32* %u.i, align 4
  %shr797.i = lshr i32 %518, 18
  %and798.i = and i32 %shr797.i, 63
  %idxprom799.i = zext i32 %and798.i to i64
  %arrayidx800.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i
  %519 = load i32, i32* %arrayidx800.i, align 4
  %xor801.i = xor i32 %xor796.i, %519
  %520 = load i32, i32* %u.i, align 4
  %shr802.i = lshr i32 %520, 26
  %idxprom804.i = zext i32 %shr802.i to i64
  %arrayidx805.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i
  %521 = load i32, i32* %arrayidx805.i, align 4
  %xor806.i = xor i32 %xor801.i, %521
  %522 = load i32, i32* %t.i, align 4
  %shr807.i = lshr i32 %522, 2
  %and808.i = and i32 %shr807.i, 63
  %idxprom809.i = zext i32 %and808.i to i64
  %arrayidx810.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i
  %523 = load i32, i32* %arrayidx810.i, align 4
  %xor811.i = xor i32 %xor806.i, %523
  %524 = load i32, i32* %t.i, align 4
  %shr812.i = lshr i32 %524, 10
  %and813.i = and i32 %shr812.i, 63
  %idxprom814.i = zext i32 %and813.i to i64
  %arrayidx815.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i
  %525 = load i32, i32* %arrayidx815.i, align 4
  %xor816.i = xor i32 %xor811.i, %525
  %526 = load i32, i32* %t.i, align 4
  %shr817.i = lshr i32 %526, 18
  %and818.i = and i32 %shr817.i, 63
  %idxprom819.i = zext i32 %and818.i to i64
  %arrayidx820.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i
  %527 = load i32, i32* %arrayidx820.i, align 4
  %xor821.i = xor i32 %xor816.i, %527
  %528 = load i32, i32* %t.i, align 4
  %shr822.i = lshr i32 %528, 26
  %idxprom824.i = zext i32 %shr822.i to i64
  %arrayidx825.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i
  %529 = load i32, i32* %arrayidx825.i, align 4
  %xor826.i = xor i32 %xor821.i, %529
  %530 = load i32, i32* %l.i, align 4
  %xor827.i = xor i32 %530, %xor826.i
  store i32 %xor827.i, i32* %l.i, align 4
  %531 = load i32, i32* %l.i, align 4
  %532 = load i32*, i32** %s.i, align 8
  %arrayidx828.i = getelementptr inbounds i32, i32* %532, i64 28
  %533 = load i32, i32* %arrayidx828.i, align 4
  %xor829.i = xor i32 %531, %533
  store i32 %xor829.i, i32* %u.i, align 4
  %534 = load i32, i32* %l.i, align 4
  %535 = load i32*, i32** %s.i, align 8
  %arrayidx830.i = getelementptr inbounds i32, i32* %535, i64 29
  %536 = load i32, i32* %arrayidx830.i, align 4
  %xor831.i = xor i32 %534, %536
  store i32 %xor831.i, i32* %t.i, align 4
  %537 = load i32, i32* %t.i, align 4
  %538 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %537) #5, !srcloc !21
  store i32 %538, i32* %ret832.i, align 4
  %539 = load i32, i32* %ret832.i, align 4
  store i32 %539, i32* %tmp833.i, align 4
  %540 = load i32, i32* %tmp833.i, align 4
  store i32 %540, i32* %t.i, align 4
  %541 = load i32, i32* %u.i, align 4
  %shr834.i = lshr i32 %541, 2
  %and835.i = and i32 %shr834.i, 63
  %idxprom836.i = zext i32 %and835.i to i64
  %arrayidx837.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i
  %542 = load i32, i32* %arrayidx837.i, align 4
  %543 = load i32, i32* %u.i, align 4
  %shr838.i = lshr i32 %543, 10
  %and839.i = and i32 %shr838.i, 63
  %idxprom840.i = zext i32 %and839.i to i64
  %arrayidx841.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i
  %544 = load i32, i32* %arrayidx841.i, align 4
  %xor842.i = xor i32 %542, %544
  %545 = load i32, i32* %u.i, align 4
  %shr843.i = lshr i32 %545, 18
  %and844.i = and i32 %shr843.i, 63
  %idxprom845.i = zext i32 %and844.i to i64
  %arrayidx846.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i
  %546 = load i32, i32* %arrayidx846.i, align 4
  %xor847.i = xor i32 %xor842.i, %546
  %547 = load i32, i32* %u.i, align 4
  %shr848.i = lshr i32 %547, 26
  %idxprom850.i = zext i32 %shr848.i to i64
  %arrayidx851.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i
  %548 = load i32, i32* %arrayidx851.i, align 4
  %xor852.i = xor i32 %xor847.i, %548
  %549 = load i32, i32* %t.i, align 4
  %shr853.i = lshr i32 %549, 2
  %and854.i = and i32 %shr853.i, 63
  %idxprom855.i = zext i32 %and854.i to i64
  %arrayidx856.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i
  %550 = load i32, i32* %arrayidx856.i, align 4
  %xor857.i = xor i32 %xor852.i, %550
  %551 = load i32, i32* %t.i, align 4
  %shr858.i = lshr i32 %551, 10
  %and859.i = and i32 %shr858.i, 63
  %idxprom860.i = zext i32 %and859.i to i64
  %arrayidx861.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i
  %552 = load i32, i32* %arrayidx861.i, align 4
  %xor862.i = xor i32 %xor857.i, %552
  %553 = load i32, i32* %t.i, align 4
  %shr863.i = lshr i32 %553, 18
  %and864.i = and i32 %shr863.i, 63
  %idxprom865.i = zext i32 %and864.i to i64
  %arrayidx866.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i
  %554 = load i32, i32* %arrayidx866.i, align 4
  %xor867.i = xor i32 %xor862.i, %554
  %555 = load i32, i32* %t.i, align 4
  %shr868.i = lshr i32 %555, 26
  %idxprom870.i = zext i32 %shr868.i to i64
  %arrayidx871.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i
  %556 = load i32, i32* %arrayidx871.i, align 4
  %xor872.i = xor i32 %xor867.i, %556
  %557 = load i32, i32* %r.i, align 4
  %xor873.i = xor i32 %557, %xor872.i
  store i32 %xor873.i, i32* %r.i, align 4
  %558 = load i32, i32* %r.i, align 4
  %559 = load i32*, i32** %s.i, align 8
  %arrayidx874.i = getelementptr inbounds i32, i32* %559, i64 26
  %560 = load i32, i32* %arrayidx874.i, align 4
  %xor875.i = xor i32 %558, %560
  store i32 %xor875.i, i32* %u.i, align 4
  %561 = load i32, i32* %r.i, align 4
  %562 = load i32*, i32** %s.i, align 8
  %arrayidx876.i = getelementptr inbounds i32, i32* %562, i64 27
  %563 = load i32, i32* %arrayidx876.i, align 4
  %xor877.i = xor i32 %561, %563
  store i32 %xor877.i, i32* %t.i, align 4
  %564 = load i32, i32* %t.i, align 4
  %565 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %564) #5, !srcloc !22
  store i32 %565, i32* %ret878.i, align 4
  %566 = load i32, i32* %ret878.i, align 4
  store i32 %566, i32* %tmp879.i, align 4
  %567 = load i32, i32* %tmp879.i, align 4
  store i32 %567, i32* %t.i, align 4
  %568 = load i32, i32* %u.i, align 4
  %shr880.i = lshr i32 %568, 2
  %and881.i = and i32 %shr880.i, 63
  %idxprom882.i = zext i32 %and881.i to i64
  %arrayidx883.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i
  %569 = load i32, i32* %arrayidx883.i, align 4
  %570 = load i32, i32* %u.i, align 4
  %shr884.i = lshr i32 %570, 10
  %and885.i = and i32 %shr884.i, 63
  %idxprom886.i = zext i32 %and885.i to i64
  %arrayidx887.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i
  %571 = load i32, i32* %arrayidx887.i, align 4
  %xor888.i = xor i32 %569, %571
  %572 = load i32, i32* %u.i, align 4
  %shr889.i = lshr i32 %572, 18
  %and890.i = and i32 %shr889.i, 63
  %idxprom891.i = zext i32 %and890.i to i64
  %arrayidx892.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i
  %573 = load i32, i32* %arrayidx892.i, align 4
  %xor893.i = xor i32 %xor888.i, %573
  %574 = load i32, i32* %u.i, align 4
  %shr894.i = lshr i32 %574, 26
  %idxprom896.i = zext i32 %shr894.i to i64
  %arrayidx897.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i
  %575 = load i32, i32* %arrayidx897.i, align 4
  %xor898.i = xor i32 %xor893.i, %575
  %576 = load i32, i32* %t.i, align 4
  %shr899.i = lshr i32 %576, 2
  %and900.i = and i32 %shr899.i, 63
  %idxprom901.i = zext i32 %and900.i to i64
  %arrayidx902.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i
  %577 = load i32, i32* %arrayidx902.i, align 4
  %xor903.i = xor i32 %xor898.i, %577
  %578 = load i32, i32* %t.i, align 4
  %shr904.i = lshr i32 %578, 10
  %and905.i = and i32 %shr904.i, 63
  %idxprom906.i = zext i32 %and905.i to i64
  %arrayidx907.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i
  %579 = load i32, i32* %arrayidx907.i, align 4
  %xor908.i = xor i32 %xor903.i, %579
  %580 = load i32, i32* %t.i, align 4
  %shr909.i = lshr i32 %580, 18
  %and910.i = and i32 %shr909.i, 63
  %idxprom911.i = zext i32 %and910.i to i64
  %arrayidx912.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i
  %581 = load i32, i32* %arrayidx912.i, align 4
  %xor913.i = xor i32 %xor908.i, %581
  %582 = load i32, i32* %t.i, align 4
  %shr914.i = lshr i32 %582, 26
  %idxprom916.i = zext i32 %shr914.i to i64
  %arrayidx917.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i
  %583 = load i32, i32* %arrayidx917.i, align 4
  %xor918.i = xor i32 %xor913.i, %583
  %584 = load i32, i32* %l.i, align 4
  %xor919.i = xor i32 %584, %xor918.i
  store i32 %xor919.i, i32* %l.i, align 4
  %585 = load i32, i32* %l.i, align 4
  %586 = load i32*, i32** %s.i, align 8
  %arrayidx920.i = getelementptr inbounds i32, i32* %586, i64 24
  %587 = load i32, i32* %arrayidx920.i, align 4
  %xor921.i = xor i32 %585, %587
  store i32 %xor921.i, i32* %u.i, align 4
  %588 = load i32, i32* %l.i, align 4
  %589 = load i32*, i32** %s.i, align 8
  %arrayidx922.i = getelementptr inbounds i32, i32* %589, i64 25
  %590 = load i32, i32* %arrayidx922.i, align 4
  %xor923.i = xor i32 %588, %590
  store i32 %xor923.i, i32* %t.i, align 4
  %591 = load i32, i32* %t.i, align 4
  %592 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %591) #5, !srcloc !23
  store i32 %592, i32* %ret924.i, align 4
  %593 = load i32, i32* %ret924.i, align 4
  store i32 %593, i32* %tmp925.i, align 4
  %594 = load i32, i32* %tmp925.i, align 4
  store i32 %594, i32* %t.i, align 4
  %595 = load i32, i32* %u.i, align 4
  %shr926.i = lshr i32 %595, 2
  %and927.i = and i32 %shr926.i, 63
  %idxprom928.i = zext i32 %and927.i to i64
  %arrayidx929.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i
  %596 = load i32, i32* %arrayidx929.i, align 4
  %597 = load i32, i32* %u.i, align 4
  %shr930.i = lshr i32 %597, 10
  %and931.i = and i32 %shr930.i, 63
  %idxprom932.i = zext i32 %and931.i to i64
  %arrayidx933.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i
  %598 = load i32, i32* %arrayidx933.i, align 4
  %xor934.i = xor i32 %596, %598
  %599 = load i32, i32* %u.i, align 4
  %shr935.i = lshr i32 %599, 18
  %and936.i = and i32 %shr935.i, 63
  %idxprom937.i = zext i32 %and936.i to i64
  %arrayidx938.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i
  %600 = load i32, i32* %arrayidx938.i, align 4
  %xor939.i = xor i32 %xor934.i, %600
  %601 = load i32, i32* %u.i, align 4
  %shr940.i = lshr i32 %601, 26
  %idxprom942.i = zext i32 %shr940.i to i64
  %arrayidx943.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i
  %602 = load i32, i32* %arrayidx943.i, align 4
  %xor944.i = xor i32 %xor939.i, %602
  %603 = load i32, i32* %t.i, align 4
  %shr945.i = lshr i32 %603, 2
  %and946.i = and i32 %shr945.i, 63
  %idxprom947.i = zext i32 %and946.i to i64
  %arrayidx948.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i
  %604 = load i32, i32* %arrayidx948.i, align 4
  %xor949.i = xor i32 %xor944.i, %604
  %605 = load i32, i32* %t.i, align 4
  %shr950.i = lshr i32 %605, 10
  %and951.i = and i32 %shr950.i, 63
  %idxprom952.i = zext i32 %and951.i to i64
  %arrayidx953.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i
  %606 = load i32, i32* %arrayidx953.i, align 4
  %xor954.i = xor i32 %xor949.i, %606
  %607 = load i32, i32* %t.i, align 4
  %shr955.i = lshr i32 %607, 18
  %and956.i = and i32 %shr955.i, 63
  %idxprom957.i = zext i32 %and956.i to i64
  %arrayidx958.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i
  %608 = load i32, i32* %arrayidx958.i, align 4
  %xor959.i = xor i32 %xor954.i, %608
  %609 = load i32, i32* %t.i, align 4
  %shr960.i = lshr i32 %609, 26
  %idxprom962.i = zext i32 %shr960.i to i64
  %arrayidx963.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i
  %610 = load i32, i32* %arrayidx963.i, align 4
  %xor964.i = xor i32 %xor959.i, %610
  %611 = load i32, i32* %r.i, align 4
  %xor965.i = xor i32 %611, %xor964.i
  store i32 %xor965.i, i32* %r.i, align 4
  %612 = load i32, i32* %r.i, align 4
  %613 = load i32*, i32** %s.i, align 8
  %arrayidx966.i = getelementptr inbounds i32, i32* %613, i64 22
  %614 = load i32, i32* %arrayidx966.i, align 4
  %xor967.i = xor i32 %612, %614
  store i32 %xor967.i, i32* %u.i, align 4
  %615 = load i32, i32* %r.i, align 4
  %616 = load i32*, i32** %s.i, align 8
  %arrayidx968.i = getelementptr inbounds i32, i32* %616, i64 23
  %617 = load i32, i32* %arrayidx968.i, align 4
  %xor969.i = xor i32 %615, %617
  store i32 %xor969.i, i32* %t.i, align 4
  %618 = load i32, i32* %t.i, align 4
  %619 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %618) #5, !srcloc !24
  store i32 %619, i32* %ret970.i, align 4
  %620 = load i32, i32* %ret970.i, align 4
  store i32 %620, i32* %tmp971.i, align 4
  %621 = load i32, i32* %tmp971.i, align 4
  store i32 %621, i32* %t.i, align 4
  %622 = load i32, i32* %u.i, align 4
  %shr972.i = lshr i32 %622, 2
  %and973.i = and i32 %shr972.i, 63
  %idxprom974.i = zext i32 %and973.i to i64
  %arrayidx975.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i
  %623 = load i32, i32* %arrayidx975.i, align 4
  %624 = load i32, i32* %u.i, align 4
  %shr976.i = lshr i32 %624, 10
  %and977.i = and i32 %shr976.i, 63
  %idxprom978.i = zext i32 %and977.i to i64
  %arrayidx979.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i
  %625 = load i32, i32* %arrayidx979.i, align 4
  %xor980.i = xor i32 %623, %625
  %626 = load i32, i32* %u.i, align 4
  %shr981.i = lshr i32 %626, 18
  %and982.i = and i32 %shr981.i, 63
  %idxprom983.i = zext i32 %and982.i to i64
  %arrayidx984.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i
  %627 = load i32, i32* %arrayidx984.i, align 4
  %xor985.i = xor i32 %xor980.i, %627
  %628 = load i32, i32* %u.i, align 4
  %shr986.i = lshr i32 %628, 26
  %idxprom988.i = zext i32 %shr986.i to i64
  %arrayidx989.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i
  %629 = load i32, i32* %arrayidx989.i, align 4
  %xor990.i = xor i32 %xor985.i, %629
  %630 = load i32, i32* %t.i, align 4
  %shr991.i = lshr i32 %630, 2
  %and992.i = and i32 %shr991.i, 63
  %idxprom993.i = zext i32 %and992.i to i64
  %arrayidx994.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i
  %631 = load i32, i32* %arrayidx994.i, align 4
  %xor995.i = xor i32 %xor990.i, %631
  %632 = load i32, i32* %t.i, align 4
  %shr996.i = lshr i32 %632, 10
  %and997.i = and i32 %shr996.i, 63
  %idxprom998.i = zext i32 %and997.i to i64
  %arrayidx999.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i
  %633 = load i32, i32* %arrayidx999.i, align 4
  %xor1000.i = xor i32 %xor995.i, %633
  %634 = load i32, i32* %t.i, align 4
  %shr1001.i = lshr i32 %634, 18
  %and1002.i = and i32 %shr1001.i, 63
  %idxprom1003.i = zext i32 %and1002.i to i64
  %arrayidx1004.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i
  %635 = load i32, i32* %arrayidx1004.i, align 4
  %xor1005.i = xor i32 %xor1000.i, %635
  %636 = load i32, i32* %t.i, align 4
  %shr1006.i = lshr i32 %636, 26
  %idxprom1008.i = zext i32 %shr1006.i to i64
  %arrayidx1009.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i
  %637 = load i32, i32* %arrayidx1009.i, align 4
  %xor1010.i = xor i32 %xor1005.i, %637
  %638 = load i32, i32* %l.i, align 4
  %xor1011.i = xor i32 %638, %xor1010.i
  store i32 %xor1011.i, i32* %l.i, align 4
  %639 = load i32, i32* %l.i, align 4
  %640 = load i32*, i32** %s.i, align 8
  %arrayidx1012.i = getelementptr inbounds i32, i32* %640, i64 20
  %641 = load i32, i32* %arrayidx1012.i, align 4
  %xor1013.i = xor i32 %639, %641
  store i32 %xor1013.i, i32* %u.i, align 4
  %642 = load i32, i32* %l.i, align 4
  %643 = load i32*, i32** %s.i, align 8
  %arrayidx1014.i = getelementptr inbounds i32, i32* %643, i64 21
  %644 = load i32, i32* %arrayidx1014.i, align 4
  %xor1015.i = xor i32 %642, %644
  store i32 %xor1015.i, i32* %t.i, align 4
  %645 = load i32, i32* %t.i, align 4
  %646 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %645) #5, !srcloc !25
  store i32 %646, i32* %ret1016.i, align 4
  %647 = load i32, i32* %ret1016.i, align 4
  store i32 %647, i32* %tmp1017.i, align 4
  %648 = load i32, i32* %tmp1017.i, align 4
  store i32 %648, i32* %t.i, align 4
  %649 = load i32, i32* %u.i, align 4
  %shr1018.i = lshr i32 %649, 2
  %and1019.i = and i32 %shr1018.i, 63
  %idxprom1020.i = zext i32 %and1019.i to i64
  %arrayidx1021.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i
  %650 = load i32, i32* %arrayidx1021.i, align 4
  %651 = load i32, i32* %u.i, align 4
  %shr1022.i = lshr i32 %651, 10
  %and1023.i = and i32 %shr1022.i, 63
  %idxprom1024.i = zext i32 %and1023.i to i64
  %arrayidx1025.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i
  %652 = load i32, i32* %arrayidx1025.i, align 4
  %xor1026.i = xor i32 %650, %652
  %653 = load i32, i32* %u.i, align 4
  %shr1027.i = lshr i32 %653, 18
  %and1028.i = and i32 %shr1027.i, 63
  %idxprom1029.i = zext i32 %and1028.i to i64
  %arrayidx1030.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i
  %654 = load i32, i32* %arrayidx1030.i, align 4
  %xor1031.i = xor i32 %xor1026.i, %654
  %655 = load i32, i32* %u.i, align 4
  %shr1032.i = lshr i32 %655, 26
  %idxprom1034.i = zext i32 %shr1032.i to i64
  %arrayidx1035.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i
  %656 = load i32, i32* %arrayidx1035.i, align 4
  %xor1036.i = xor i32 %xor1031.i, %656
  %657 = load i32, i32* %t.i, align 4
  %shr1037.i = lshr i32 %657, 2
  %and1038.i = and i32 %shr1037.i, 63
  %idxprom1039.i = zext i32 %and1038.i to i64
  %arrayidx1040.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i
  %658 = load i32, i32* %arrayidx1040.i, align 4
  %xor1041.i = xor i32 %xor1036.i, %658
  %659 = load i32, i32* %t.i, align 4
  %shr1042.i = lshr i32 %659, 10
  %and1043.i = and i32 %shr1042.i, 63
  %idxprom1044.i = zext i32 %and1043.i to i64
  %arrayidx1045.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i
  %660 = load i32, i32* %arrayidx1045.i, align 4
  %xor1046.i = xor i32 %xor1041.i, %660
  %661 = load i32, i32* %t.i, align 4
  %shr1047.i = lshr i32 %661, 18
  %and1048.i = and i32 %shr1047.i, 63
  %idxprom1049.i = zext i32 %and1048.i to i64
  %arrayidx1050.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i
  %662 = load i32, i32* %arrayidx1050.i, align 4
  %xor1051.i = xor i32 %xor1046.i, %662
  %663 = load i32, i32* %t.i, align 4
  %shr1052.i = lshr i32 %663, 26
  %idxprom1054.i = zext i32 %shr1052.i to i64
  %arrayidx1055.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i
  %664 = load i32, i32* %arrayidx1055.i, align 4
  %xor1056.i = xor i32 %xor1051.i, %664
  %665 = load i32, i32* %r.i, align 4
  %xor1057.i = xor i32 %665, %xor1056.i
  store i32 %xor1057.i, i32* %r.i, align 4
  %666 = load i32, i32* %r.i, align 4
  %667 = load i32*, i32** %s.i, align 8
  %arrayidx1058.i = getelementptr inbounds i32, i32* %667, i64 18
  %668 = load i32, i32* %arrayidx1058.i, align 4
  %xor1059.i = xor i32 %666, %668
  store i32 %xor1059.i, i32* %u.i, align 4
  %669 = load i32, i32* %r.i, align 4
  %670 = load i32*, i32** %s.i, align 8
  %arrayidx1060.i = getelementptr inbounds i32, i32* %670, i64 19
  %671 = load i32, i32* %arrayidx1060.i, align 4
  %xor1061.i = xor i32 %669, %671
  store i32 %xor1061.i, i32* %t.i, align 4
  %672 = load i32, i32* %t.i, align 4
  %673 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %672) #5, !srcloc !26
  store i32 %673, i32* %ret1062.i, align 4
  %674 = load i32, i32* %ret1062.i, align 4
  store i32 %674, i32* %tmp1063.i, align 4
  %675 = load i32, i32* %tmp1063.i, align 4
  store i32 %675, i32* %t.i, align 4
  %676 = load i32, i32* %u.i, align 4
  %shr1064.i = lshr i32 %676, 2
  %and1065.i = and i32 %shr1064.i, 63
  %idxprom1066.i = zext i32 %and1065.i to i64
  %arrayidx1067.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i
  %677 = load i32, i32* %arrayidx1067.i, align 4
  %678 = load i32, i32* %u.i, align 4
  %shr1068.i = lshr i32 %678, 10
  %and1069.i = and i32 %shr1068.i, 63
  %idxprom1070.i = zext i32 %and1069.i to i64
  %arrayidx1071.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i
  %679 = load i32, i32* %arrayidx1071.i, align 4
  %xor1072.i = xor i32 %677, %679
  %680 = load i32, i32* %u.i, align 4
  %shr1073.i = lshr i32 %680, 18
  %and1074.i = and i32 %shr1073.i, 63
  %idxprom1075.i = zext i32 %and1074.i to i64
  %arrayidx1076.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i
  %681 = load i32, i32* %arrayidx1076.i, align 4
  %xor1077.i = xor i32 %xor1072.i, %681
  %682 = load i32, i32* %u.i, align 4
  %shr1078.i = lshr i32 %682, 26
  %idxprom1080.i = zext i32 %shr1078.i to i64
  %arrayidx1081.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i
  %683 = load i32, i32* %arrayidx1081.i, align 4
  %xor1082.i = xor i32 %xor1077.i, %683
  %684 = load i32, i32* %t.i, align 4
  %shr1083.i = lshr i32 %684, 2
  %and1084.i = and i32 %shr1083.i, 63
  %idxprom1085.i = zext i32 %and1084.i to i64
  %arrayidx1086.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i
  %685 = load i32, i32* %arrayidx1086.i, align 4
  %xor1087.i = xor i32 %xor1082.i, %685
  %686 = load i32, i32* %t.i, align 4
  %shr1088.i = lshr i32 %686, 10
  %and1089.i = and i32 %shr1088.i, 63
  %idxprom1090.i = zext i32 %and1089.i to i64
  %arrayidx1091.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i
  %687 = load i32, i32* %arrayidx1091.i, align 4
  %xor1092.i = xor i32 %xor1087.i, %687
  %688 = load i32, i32* %t.i, align 4
  %shr1093.i = lshr i32 %688, 18
  %and1094.i = and i32 %shr1093.i, 63
  %idxprom1095.i = zext i32 %and1094.i to i64
  %arrayidx1096.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i
  %689 = load i32, i32* %arrayidx1096.i, align 4
  %xor1097.i = xor i32 %xor1092.i, %689
  %690 = load i32, i32* %t.i, align 4
  %shr1098.i = lshr i32 %690, 26
  %idxprom1100.i = zext i32 %shr1098.i to i64
  %arrayidx1101.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i
  %691 = load i32, i32* %arrayidx1101.i, align 4
  %xor1102.i = xor i32 %xor1097.i, %691
  %692 = load i32, i32* %l.i, align 4
  %xor1103.i = xor i32 %692, %xor1102.i
  store i32 %xor1103.i, i32* %l.i, align 4
  %693 = load i32, i32* %l.i, align 4
  %694 = load i32*, i32** %s.i, align 8
  %arrayidx1104.i = getelementptr inbounds i32, i32* %694, i64 16
  %695 = load i32, i32* %arrayidx1104.i, align 4
  %xor1105.i = xor i32 %693, %695
  store i32 %xor1105.i, i32* %u.i, align 4
  %696 = load i32, i32* %l.i, align 4
  %697 = load i32*, i32** %s.i, align 8
  %arrayidx1106.i = getelementptr inbounds i32, i32* %697, i64 17
  %698 = load i32, i32* %arrayidx1106.i, align 4
  %xor1107.i = xor i32 %696, %698
  store i32 %xor1107.i, i32* %t.i, align 4
  %699 = load i32, i32* %t.i, align 4
  %700 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %699) #5, !srcloc !27
  store i32 %700, i32* %ret1108.i, align 4
  %701 = load i32, i32* %ret1108.i, align 4
  store i32 %701, i32* %tmp1109.i, align 4
  %702 = load i32, i32* %tmp1109.i, align 4
  store i32 %702, i32* %t.i, align 4
  %703 = load i32, i32* %u.i, align 4
  %shr1110.i = lshr i32 %703, 2
  %and1111.i = and i32 %shr1110.i, 63
  %idxprom1112.i = zext i32 %and1111.i to i64
  %arrayidx1113.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i
  %704 = load i32, i32* %arrayidx1113.i, align 4
  %705 = load i32, i32* %u.i, align 4
  %shr1114.i = lshr i32 %705, 10
  %and1115.i = and i32 %shr1114.i, 63
  %idxprom1116.i = zext i32 %and1115.i to i64
  %arrayidx1117.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i
  %706 = load i32, i32* %arrayidx1117.i, align 4
  %xor1118.i = xor i32 %704, %706
  %707 = load i32, i32* %u.i, align 4
  %shr1119.i = lshr i32 %707, 18
  %and1120.i = and i32 %shr1119.i, 63
  %idxprom1121.i = zext i32 %and1120.i to i64
  %arrayidx1122.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i
  %708 = load i32, i32* %arrayidx1122.i, align 4
  %xor1123.i = xor i32 %xor1118.i, %708
  %709 = load i32, i32* %u.i, align 4
  %shr1124.i = lshr i32 %709, 26
  %idxprom1126.i = zext i32 %shr1124.i to i64
  %arrayidx1127.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i
  %710 = load i32, i32* %arrayidx1127.i, align 4
  %xor1128.i = xor i32 %xor1123.i, %710
  %711 = load i32, i32* %t.i, align 4
  %shr1129.i = lshr i32 %711, 2
  %and1130.i = and i32 %shr1129.i, 63
  %idxprom1131.i = zext i32 %and1130.i to i64
  %arrayidx1132.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i
  %712 = load i32, i32* %arrayidx1132.i, align 4
  %xor1133.i = xor i32 %xor1128.i, %712
  %713 = load i32, i32* %t.i, align 4
  %shr1134.i = lshr i32 %713, 10
  %and1135.i = and i32 %shr1134.i, 63
  %idxprom1136.i = zext i32 %and1135.i to i64
  %arrayidx1137.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i
  %714 = load i32, i32* %arrayidx1137.i, align 4
  %xor1138.i = xor i32 %xor1133.i, %714
  %715 = load i32, i32* %t.i, align 4
  %shr1139.i = lshr i32 %715, 18
  %and1140.i = and i32 %shr1139.i, 63
  %idxprom1141.i = zext i32 %and1140.i to i64
  %arrayidx1142.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i
  %716 = load i32, i32* %arrayidx1142.i, align 4
  %xor1143.i = xor i32 %xor1138.i, %716
  %717 = load i32, i32* %t.i, align 4
  %shr1144.i = lshr i32 %717, 26
  %idxprom1146.i = zext i32 %shr1144.i to i64
  %arrayidx1147.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i
  %718 = load i32, i32* %arrayidx1147.i, align 4
  %xor1148.i = xor i32 %xor1143.i, %718
  %719 = load i32, i32* %r.i, align 4
  %xor1149.i = xor i32 %719, %xor1148.i
  store i32 %xor1149.i, i32* %r.i, align 4
  %720 = load i32, i32* %r.i, align 4
  %721 = load i32*, i32** %s.i, align 8
  %arrayidx1150.i = getelementptr inbounds i32, i32* %721, i64 14
  %722 = load i32, i32* %arrayidx1150.i, align 4
  %xor1151.i = xor i32 %720, %722
  store i32 %xor1151.i, i32* %u.i, align 4
  %723 = load i32, i32* %r.i, align 4
  %724 = load i32*, i32** %s.i, align 8
  %arrayidx1152.i = getelementptr inbounds i32, i32* %724, i64 15
  %725 = load i32, i32* %arrayidx1152.i, align 4
  %xor1153.i = xor i32 %723, %725
  store i32 %xor1153.i, i32* %t.i, align 4
  %726 = load i32, i32* %t.i, align 4
  %727 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %726) #5, !srcloc !28
  store i32 %727, i32* %ret1154.i, align 4
  %728 = load i32, i32* %ret1154.i, align 4
  store i32 %728, i32* %tmp1155.i, align 4
  %729 = load i32, i32* %tmp1155.i, align 4
  store i32 %729, i32* %t.i, align 4
  %730 = load i32, i32* %u.i, align 4
  %shr1156.i = lshr i32 %730, 2
  %and1157.i = and i32 %shr1156.i, 63
  %idxprom1158.i = zext i32 %and1157.i to i64
  %arrayidx1159.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i
  %731 = load i32, i32* %arrayidx1159.i, align 4
  %732 = load i32, i32* %u.i, align 4
  %shr1160.i = lshr i32 %732, 10
  %and1161.i = and i32 %shr1160.i, 63
  %idxprom1162.i = zext i32 %and1161.i to i64
  %arrayidx1163.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i
  %733 = load i32, i32* %arrayidx1163.i, align 4
  %xor1164.i = xor i32 %731, %733
  %734 = load i32, i32* %u.i, align 4
  %shr1165.i = lshr i32 %734, 18
  %and1166.i = and i32 %shr1165.i, 63
  %idxprom1167.i = zext i32 %and1166.i to i64
  %arrayidx1168.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i
  %735 = load i32, i32* %arrayidx1168.i, align 4
  %xor1169.i = xor i32 %xor1164.i, %735
  %736 = load i32, i32* %u.i, align 4
  %shr1170.i = lshr i32 %736, 26
  %idxprom1172.i = zext i32 %shr1170.i to i64
  %arrayidx1173.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i
  %737 = load i32, i32* %arrayidx1173.i, align 4
  %xor1174.i = xor i32 %xor1169.i, %737
  %738 = load i32, i32* %t.i, align 4
  %shr1175.i = lshr i32 %738, 2
  %and1176.i = and i32 %shr1175.i, 63
  %idxprom1177.i = zext i32 %and1176.i to i64
  %arrayidx1178.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i
  %739 = load i32, i32* %arrayidx1178.i, align 4
  %xor1179.i = xor i32 %xor1174.i, %739
  %740 = load i32, i32* %t.i, align 4
  %shr1180.i = lshr i32 %740, 10
  %and1181.i = and i32 %shr1180.i, 63
  %idxprom1182.i = zext i32 %and1181.i to i64
  %arrayidx1183.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i
  %741 = load i32, i32* %arrayidx1183.i, align 4
  %xor1184.i = xor i32 %xor1179.i, %741
  %742 = load i32, i32* %t.i, align 4
  %shr1185.i = lshr i32 %742, 18
  %and1186.i = and i32 %shr1185.i, 63
  %idxprom1187.i = zext i32 %and1186.i to i64
  %arrayidx1188.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i
  %743 = load i32, i32* %arrayidx1188.i, align 4
  %xor1189.i = xor i32 %xor1184.i, %743
  %744 = load i32, i32* %t.i, align 4
  %shr1190.i = lshr i32 %744, 26
  %idxprom1192.i = zext i32 %shr1190.i to i64
  %arrayidx1193.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i
  %745 = load i32, i32* %arrayidx1193.i, align 4
  %xor1194.i = xor i32 %xor1189.i, %745
  %746 = load i32, i32* %l.i, align 4
  %xor1195.i = xor i32 %746, %xor1194.i
  store i32 %xor1195.i, i32* %l.i, align 4
  %747 = load i32, i32* %l.i, align 4
  %748 = load i32*, i32** %s.i, align 8
  %arrayidx1196.i = getelementptr inbounds i32, i32* %748, i64 12
  %749 = load i32, i32* %arrayidx1196.i, align 4
  %xor1197.i = xor i32 %747, %749
  store i32 %xor1197.i, i32* %u.i, align 4
  %750 = load i32, i32* %l.i, align 4
  %751 = load i32*, i32** %s.i, align 8
  %arrayidx1198.i = getelementptr inbounds i32, i32* %751, i64 13
  %752 = load i32, i32* %arrayidx1198.i, align 4
  %xor1199.i = xor i32 %750, %752
  store i32 %xor1199.i, i32* %t.i, align 4
  %753 = load i32, i32* %t.i, align 4
  %754 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %753) #5, !srcloc !29
  store i32 %754, i32* %ret1200.i, align 4
  %755 = load i32, i32* %ret1200.i, align 4
  store i32 %755, i32* %tmp1201.i, align 4
  %756 = load i32, i32* %tmp1201.i, align 4
  store i32 %756, i32* %t.i, align 4
  %757 = load i32, i32* %u.i, align 4
  %shr1202.i = lshr i32 %757, 2
  %and1203.i = and i32 %shr1202.i, 63
  %idxprom1204.i = zext i32 %and1203.i to i64
  %arrayidx1205.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i
  %758 = load i32, i32* %arrayidx1205.i, align 4
  %759 = load i32, i32* %u.i, align 4
  %shr1206.i = lshr i32 %759, 10
  %and1207.i = and i32 %shr1206.i, 63
  %idxprom1208.i = zext i32 %and1207.i to i64
  %arrayidx1209.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i
  %760 = load i32, i32* %arrayidx1209.i, align 4
  %xor1210.i = xor i32 %758, %760
  %761 = load i32, i32* %u.i, align 4
  %shr1211.i = lshr i32 %761, 18
  %and1212.i = and i32 %shr1211.i, 63
  %idxprom1213.i = zext i32 %and1212.i to i64
  %arrayidx1214.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i
  %762 = load i32, i32* %arrayidx1214.i, align 4
  %xor1215.i = xor i32 %xor1210.i, %762
  %763 = load i32, i32* %u.i, align 4
  %shr1216.i = lshr i32 %763, 26
  %idxprom1218.i = zext i32 %shr1216.i to i64
  %arrayidx1219.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i
  %764 = load i32, i32* %arrayidx1219.i, align 4
  %xor1220.i = xor i32 %xor1215.i, %764
  %765 = load i32, i32* %t.i, align 4
  %shr1221.i = lshr i32 %765, 2
  %and1222.i = and i32 %shr1221.i, 63
  %idxprom1223.i = zext i32 %and1222.i to i64
  %arrayidx1224.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i
  %766 = load i32, i32* %arrayidx1224.i, align 4
  %xor1225.i = xor i32 %xor1220.i, %766
  %767 = load i32, i32* %t.i, align 4
  %shr1226.i = lshr i32 %767, 10
  %and1227.i = and i32 %shr1226.i, 63
  %idxprom1228.i = zext i32 %and1227.i to i64
  %arrayidx1229.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i
  %768 = load i32, i32* %arrayidx1229.i, align 4
  %xor1230.i = xor i32 %xor1225.i, %768
  %769 = load i32, i32* %t.i, align 4
  %shr1231.i = lshr i32 %769, 18
  %and1232.i = and i32 %shr1231.i, 63
  %idxprom1233.i = zext i32 %and1232.i to i64
  %arrayidx1234.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i
  %770 = load i32, i32* %arrayidx1234.i, align 4
  %xor1235.i = xor i32 %xor1230.i, %770
  %771 = load i32, i32* %t.i, align 4
  %shr1236.i = lshr i32 %771, 26
  %idxprom1238.i = zext i32 %shr1236.i to i64
  %arrayidx1239.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i
  %772 = load i32, i32* %arrayidx1239.i, align 4
  %xor1240.i = xor i32 %xor1235.i, %772
  %773 = load i32, i32* %r.i, align 4
  %xor1241.i = xor i32 %773, %xor1240.i
  store i32 %xor1241.i, i32* %r.i, align 4
  %774 = load i32, i32* %r.i, align 4
  %775 = load i32*, i32** %s.i, align 8
  %arrayidx1242.i = getelementptr inbounds i32, i32* %775, i64 10
  %776 = load i32, i32* %arrayidx1242.i, align 4
  %xor1243.i = xor i32 %774, %776
  store i32 %xor1243.i, i32* %u.i, align 4
  %777 = load i32, i32* %r.i, align 4
  %778 = load i32*, i32** %s.i, align 8
  %arrayidx1244.i = getelementptr inbounds i32, i32* %778, i64 11
  %779 = load i32, i32* %arrayidx1244.i, align 4
  %xor1245.i = xor i32 %777, %779
  store i32 %xor1245.i, i32* %t.i, align 4
  %780 = load i32, i32* %t.i, align 4
  %781 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %780) #5, !srcloc !30
  store i32 %781, i32* %ret1246.i, align 4
  %782 = load i32, i32* %ret1246.i, align 4
  store i32 %782, i32* %tmp1247.i, align 4
  %783 = load i32, i32* %tmp1247.i, align 4
  store i32 %783, i32* %t.i, align 4
  %784 = load i32, i32* %u.i, align 4
  %shr1248.i = lshr i32 %784, 2
  %and1249.i = and i32 %shr1248.i, 63
  %idxprom1250.i = zext i32 %and1249.i to i64
  %arrayidx1251.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i
  %785 = load i32, i32* %arrayidx1251.i, align 4
  %786 = load i32, i32* %u.i, align 4
  %shr1252.i = lshr i32 %786, 10
  %and1253.i = and i32 %shr1252.i, 63
  %idxprom1254.i = zext i32 %and1253.i to i64
  %arrayidx1255.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i
  %787 = load i32, i32* %arrayidx1255.i, align 4
  %xor1256.i = xor i32 %785, %787
  %788 = load i32, i32* %u.i, align 4
  %shr1257.i = lshr i32 %788, 18
  %and1258.i = and i32 %shr1257.i, 63
  %idxprom1259.i = zext i32 %and1258.i to i64
  %arrayidx1260.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i
  %789 = load i32, i32* %arrayidx1260.i, align 4
  %xor1261.i = xor i32 %xor1256.i, %789
  %790 = load i32, i32* %u.i, align 4
  %shr1262.i = lshr i32 %790, 26
  %idxprom1264.i = zext i32 %shr1262.i to i64
  %arrayidx1265.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i
  %791 = load i32, i32* %arrayidx1265.i, align 4
  %xor1266.i = xor i32 %xor1261.i, %791
  %792 = load i32, i32* %t.i, align 4
  %shr1267.i = lshr i32 %792, 2
  %and1268.i = and i32 %shr1267.i, 63
  %idxprom1269.i = zext i32 %and1268.i to i64
  %arrayidx1270.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i
  %793 = load i32, i32* %arrayidx1270.i, align 4
  %xor1271.i = xor i32 %xor1266.i, %793
  %794 = load i32, i32* %t.i, align 4
  %shr1272.i = lshr i32 %794, 10
  %and1273.i = and i32 %shr1272.i, 63
  %idxprom1274.i = zext i32 %and1273.i to i64
  %arrayidx1275.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i
  %795 = load i32, i32* %arrayidx1275.i, align 4
  %xor1276.i = xor i32 %xor1271.i, %795
  %796 = load i32, i32* %t.i, align 4
  %shr1277.i = lshr i32 %796, 18
  %and1278.i = and i32 %shr1277.i, 63
  %idxprom1279.i = zext i32 %and1278.i to i64
  %arrayidx1280.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i
  %797 = load i32, i32* %arrayidx1280.i, align 4
  %xor1281.i = xor i32 %xor1276.i, %797
  %798 = load i32, i32* %t.i, align 4
  %shr1282.i = lshr i32 %798, 26
  %idxprom1284.i = zext i32 %shr1282.i to i64
  %arrayidx1285.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i
  %799 = load i32, i32* %arrayidx1285.i, align 4
  %xor1286.i = xor i32 %xor1281.i, %799
  %800 = load i32, i32* %l.i, align 4
  %xor1287.i = xor i32 %800, %xor1286.i
  store i32 %xor1287.i, i32* %l.i, align 4
  %801 = load i32, i32* %l.i, align 4
  %802 = load i32*, i32** %s.i, align 8
  %arrayidx1288.i = getelementptr inbounds i32, i32* %802, i64 8
  %803 = load i32, i32* %arrayidx1288.i, align 4
  %xor1289.i = xor i32 %801, %803
  store i32 %xor1289.i, i32* %u.i, align 4
  %804 = load i32, i32* %l.i, align 4
  %805 = load i32*, i32** %s.i, align 8
  %arrayidx1290.i = getelementptr inbounds i32, i32* %805, i64 9
  %806 = load i32, i32* %arrayidx1290.i, align 4
  %xor1291.i = xor i32 %804, %806
  store i32 %xor1291.i, i32* %t.i, align 4
  %807 = load i32, i32* %t.i, align 4
  %808 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %807) #5, !srcloc !31
  store i32 %808, i32* %ret1292.i, align 4
  %809 = load i32, i32* %ret1292.i, align 4
  store i32 %809, i32* %tmp1293.i, align 4
  %810 = load i32, i32* %tmp1293.i, align 4
  store i32 %810, i32* %t.i, align 4
  %811 = load i32, i32* %u.i, align 4
  %shr1294.i = lshr i32 %811, 2
  %and1295.i = and i32 %shr1294.i, 63
  %idxprom1296.i = zext i32 %and1295.i to i64
  %arrayidx1297.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i
  %812 = load i32, i32* %arrayidx1297.i, align 4
  %813 = load i32, i32* %u.i, align 4
  %shr1298.i = lshr i32 %813, 10
  %and1299.i = and i32 %shr1298.i, 63
  %idxprom1300.i = zext i32 %and1299.i to i64
  %arrayidx1301.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i
  %814 = load i32, i32* %arrayidx1301.i, align 4
  %xor1302.i = xor i32 %812, %814
  %815 = load i32, i32* %u.i, align 4
  %shr1303.i = lshr i32 %815, 18
  %and1304.i = and i32 %shr1303.i, 63
  %idxprom1305.i = zext i32 %and1304.i to i64
  %arrayidx1306.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i
  %816 = load i32, i32* %arrayidx1306.i, align 4
  %xor1307.i = xor i32 %xor1302.i, %816
  %817 = load i32, i32* %u.i, align 4
  %shr1308.i = lshr i32 %817, 26
  %idxprom1310.i = zext i32 %shr1308.i to i64
  %arrayidx1311.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i
  %818 = load i32, i32* %arrayidx1311.i, align 4
  %xor1312.i = xor i32 %xor1307.i, %818
  %819 = load i32, i32* %t.i, align 4
  %shr1313.i = lshr i32 %819, 2
  %and1314.i = and i32 %shr1313.i, 63
  %idxprom1315.i = zext i32 %and1314.i to i64
  %arrayidx1316.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i
  %820 = load i32, i32* %arrayidx1316.i, align 4
  %xor1317.i = xor i32 %xor1312.i, %820
  %821 = load i32, i32* %t.i, align 4
  %shr1318.i = lshr i32 %821, 10
  %and1319.i = and i32 %shr1318.i, 63
  %idxprom1320.i = zext i32 %and1319.i to i64
  %arrayidx1321.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i
  %822 = load i32, i32* %arrayidx1321.i, align 4
  %xor1322.i = xor i32 %xor1317.i, %822
  %823 = load i32, i32* %t.i, align 4
  %shr1323.i = lshr i32 %823, 18
  %and1324.i = and i32 %shr1323.i, 63
  %idxprom1325.i = zext i32 %and1324.i to i64
  %arrayidx1326.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i
  %824 = load i32, i32* %arrayidx1326.i, align 4
  %xor1327.i = xor i32 %xor1322.i, %824
  %825 = load i32, i32* %t.i, align 4
  %shr1328.i = lshr i32 %825, 26
  %idxprom1330.i = zext i32 %shr1328.i to i64
  %arrayidx1331.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i
  %826 = load i32, i32* %arrayidx1331.i, align 4
  %xor1332.i = xor i32 %xor1327.i, %826
  %827 = load i32, i32* %r.i, align 4
  %xor1333.i = xor i32 %827, %xor1332.i
  store i32 %xor1333.i, i32* %r.i, align 4
  %828 = load i32, i32* %r.i, align 4
  %829 = load i32*, i32** %s.i, align 8
  %arrayidx1334.i = getelementptr inbounds i32, i32* %829, i64 6
  %830 = load i32, i32* %arrayidx1334.i, align 4
  %xor1335.i = xor i32 %828, %830
  store i32 %xor1335.i, i32* %u.i, align 4
  %831 = load i32, i32* %r.i, align 4
  %832 = load i32*, i32** %s.i, align 8
  %arrayidx1336.i = getelementptr inbounds i32, i32* %832, i64 7
  %833 = load i32, i32* %arrayidx1336.i, align 4
  %xor1337.i = xor i32 %831, %833
  store i32 %xor1337.i, i32* %t.i, align 4
  %834 = load i32, i32* %t.i, align 4
  %835 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %834) #5, !srcloc !32
  store i32 %835, i32* %ret1338.i, align 4
  %836 = load i32, i32* %ret1338.i, align 4
  store i32 %836, i32* %tmp1339.i, align 4
  %837 = load i32, i32* %tmp1339.i, align 4
  store i32 %837, i32* %t.i, align 4
  %838 = load i32, i32* %u.i, align 4
  %shr1340.i = lshr i32 %838, 2
  %and1341.i = and i32 %shr1340.i, 63
  %idxprom1342.i = zext i32 %and1341.i to i64
  %arrayidx1343.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i
  %839 = load i32, i32* %arrayidx1343.i, align 4
  %840 = load i32, i32* %u.i, align 4
  %shr1344.i = lshr i32 %840, 10
  %and1345.i = and i32 %shr1344.i, 63
  %idxprom1346.i = zext i32 %and1345.i to i64
  %arrayidx1347.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i
  %841 = load i32, i32* %arrayidx1347.i, align 4
  %xor1348.i = xor i32 %839, %841
  %842 = load i32, i32* %u.i, align 4
  %shr1349.i = lshr i32 %842, 18
  %and1350.i = and i32 %shr1349.i, 63
  %idxprom1351.i = zext i32 %and1350.i to i64
  %arrayidx1352.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i
  %843 = load i32, i32* %arrayidx1352.i, align 4
  %xor1353.i = xor i32 %xor1348.i, %843
  %844 = load i32, i32* %u.i, align 4
  %shr1354.i = lshr i32 %844, 26
  %idxprom1356.i = zext i32 %shr1354.i to i64
  %arrayidx1357.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i
  %845 = load i32, i32* %arrayidx1357.i, align 4
  %xor1358.i = xor i32 %xor1353.i, %845
  %846 = load i32, i32* %t.i, align 4
  %shr1359.i = lshr i32 %846, 2
  %and1360.i = and i32 %shr1359.i, 63
  %idxprom1361.i = zext i32 %and1360.i to i64
  %arrayidx1362.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i
  %847 = load i32, i32* %arrayidx1362.i, align 4
  %xor1363.i = xor i32 %xor1358.i, %847
  %848 = load i32, i32* %t.i, align 4
  %shr1364.i = lshr i32 %848, 10
  %and1365.i = and i32 %shr1364.i, 63
  %idxprom1366.i = zext i32 %and1365.i to i64
  %arrayidx1367.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i
  %849 = load i32, i32* %arrayidx1367.i, align 4
  %xor1368.i = xor i32 %xor1363.i, %849
  %850 = load i32, i32* %t.i, align 4
  %shr1369.i = lshr i32 %850, 18
  %and1370.i = and i32 %shr1369.i, 63
  %idxprom1371.i = zext i32 %and1370.i to i64
  %arrayidx1372.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i
  %851 = load i32, i32* %arrayidx1372.i, align 4
  %xor1373.i = xor i32 %xor1368.i, %851
  %852 = load i32, i32* %t.i, align 4
  %shr1374.i = lshr i32 %852, 26
  %idxprom1376.i = zext i32 %shr1374.i to i64
  %arrayidx1377.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i
  %853 = load i32, i32* %arrayidx1377.i, align 4
  %xor1378.i = xor i32 %xor1373.i, %853
  %854 = load i32, i32* %l.i, align 4
  %xor1379.i = xor i32 %854, %xor1378.i
  store i32 %xor1379.i, i32* %l.i, align 4
  %855 = load i32, i32* %l.i, align 4
  %856 = load i32*, i32** %s.i, align 8
  %arrayidx1380.i = getelementptr inbounds i32, i32* %856, i64 4
  %857 = load i32, i32* %arrayidx1380.i, align 4
  %xor1381.i = xor i32 %855, %857
  store i32 %xor1381.i, i32* %u.i, align 4
  %858 = load i32, i32* %l.i, align 4
  %859 = load i32*, i32** %s.i, align 8
  %arrayidx1382.i = getelementptr inbounds i32, i32* %859, i64 5
  %860 = load i32, i32* %arrayidx1382.i, align 4
  %xor1383.i = xor i32 %858, %860
  store i32 %xor1383.i, i32* %t.i, align 4
  %861 = load i32, i32* %t.i, align 4
  %862 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %861) #5, !srcloc !33
  store i32 %862, i32* %ret1384.i, align 4
  %863 = load i32, i32* %ret1384.i, align 4
  store i32 %863, i32* %tmp1385.i, align 4
  %864 = load i32, i32* %tmp1385.i, align 4
  store i32 %864, i32* %t.i, align 4
  %865 = load i32, i32* %u.i, align 4
  %shr1386.i = lshr i32 %865, 2
  %and1387.i = and i32 %shr1386.i, 63
  %idxprom1388.i = zext i32 %and1387.i to i64
  %arrayidx1389.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i
  %866 = load i32, i32* %arrayidx1389.i, align 4
  %867 = load i32, i32* %u.i, align 4
  %shr1390.i = lshr i32 %867, 10
  %and1391.i = and i32 %shr1390.i, 63
  %idxprom1392.i = zext i32 %and1391.i to i64
  %arrayidx1393.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i
  %868 = load i32, i32* %arrayidx1393.i, align 4
  %xor1394.i = xor i32 %866, %868
  %869 = load i32, i32* %u.i, align 4
  %shr1395.i = lshr i32 %869, 18
  %and1396.i = and i32 %shr1395.i, 63
  %idxprom1397.i = zext i32 %and1396.i to i64
  %arrayidx1398.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i
  %870 = load i32, i32* %arrayidx1398.i, align 4
  %xor1399.i = xor i32 %xor1394.i, %870
  %871 = load i32, i32* %u.i, align 4
  %shr1400.i = lshr i32 %871, 26
  %idxprom1402.i = zext i32 %shr1400.i to i64
  %arrayidx1403.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i
  %872 = load i32, i32* %arrayidx1403.i, align 4
  %xor1404.i = xor i32 %xor1399.i, %872
  %873 = load i32, i32* %t.i, align 4
  %shr1405.i = lshr i32 %873, 2
  %and1406.i = and i32 %shr1405.i, 63
  %idxprom1407.i = zext i32 %and1406.i to i64
  %arrayidx1408.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i
  %874 = load i32, i32* %arrayidx1408.i, align 4
  %xor1409.i = xor i32 %xor1404.i, %874
  %875 = load i32, i32* %t.i, align 4
  %shr1410.i = lshr i32 %875, 10
  %and1411.i = and i32 %shr1410.i, 63
  %idxprom1412.i = zext i32 %and1411.i to i64
  %arrayidx1413.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i
  %876 = load i32, i32* %arrayidx1413.i, align 4
  %xor1414.i = xor i32 %xor1409.i, %876
  %877 = load i32, i32* %t.i, align 4
  %shr1415.i = lshr i32 %877, 18
  %and1416.i = and i32 %shr1415.i, 63
  %idxprom1417.i = zext i32 %and1416.i to i64
  %arrayidx1418.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i
  %878 = load i32, i32* %arrayidx1418.i, align 4
  %xor1419.i = xor i32 %xor1414.i, %878
  %879 = load i32, i32* %t.i, align 4
  %shr1420.i = lshr i32 %879, 26
  %idxprom1422.i = zext i32 %shr1420.i to i64
  %arrayidx1423.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i
  %880 = load i32, i32* %arrayidx1423.i, align 4
  %xor1424.i = xor i32 %xor1419.i, %880
  %881 = load i32, i32* %r.i, align 4
  %xor1425.i = xor i32 %881, %xor1424.i
  store i32 %xor1425.i, i32* %r.i, align 4
  %882 = load i32, i32* %r.i, align 4
  %883 = load i32*, i32** %s.i, align 8
  %arrayidx1426.i = getelementptr inbounds i32, i32* %883, i64 2
  %884 = load i32, i32* %arrayidx1426.i, align 4
  %xor1427.i = xor i32 %882, %884
  store i32 %xor1427.i, i32* %u.i, align 4
  %885 = load i32, i32* %r.i, align 4
  %886 = load i32*, i32** %s.i, align 8
  %arrayidx1428.i = getelementptr inbounds i32, i32* %886, i64 3
  %887 = load i32, i32* %arrayidx1428.i, align 4
  %xor1429.i = xor i32 %885, %887
  store i32 %xor1429.i, i32* %t.i, align 4
  %888 = load i32, i32* %t.i, align 4
  %889 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %888) #5, !srcloc !34
  store i32 %889, i32* %ret1430.i, align 4
  %890 = load i32, i32* %ret1430.i, align 4
  store i32 %890, i32* %tmp1431.i, align 4
  %891 = load i32, i32* %tmp1431.i, align 4
  store i32 %891, i32* %t.i, align 4
  %892 = load i32, i32* %u.i, align 4
  %shr1432.i = lshr i32 %892, 2
  %and1433.i = and i32 %shr1432.i, 63
  %idxprom1434.i = zext i32 %and1433.i to i64
  %arrayidx1435.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i
  %893 = load i32, i32* %arrayidx1435.i, align 4
  %894 = load i32, i32* %u.i, align 4
  %shr1436.i = lshr i32 %894, 10
  %and1437.i = and i32 %shr1436.i, 63
  %idxprom1438.i = zext i32 %and1437.i to i64
  %arrayidx1439.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i
  %895 = load i32, i32* %arrayidx1439.i, align 4
  %xor1440.i = xor i32 %893, %895
  %896 = load i32, i32* %u.i, align 4
  %shr1441.i = lshr i32 %896, 18
  %and1442.i = and i32 %shr1441.i, 63
  %idxprom1443.i = zext i32 %and1442.i to i64
  %arrayidx1444.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i
  %897 = load i32, i32* %arrayidx1444.i, align 4
  %xor1445.i = xor i32 %xor1440.i, %897
  %898 = load i32, i32* %u.i, align 4
  %shr1446.i = lshr i32 %898, 26
  %idxprom1448.i = zext i32 %shr1446.i to i64
  %arrayidx1449.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i
  %899 = load i32, i32* %arrayidx1449.i, align 4
  %xor1450.i = xor i32 %xor1445.i, %899
  %900 = load i32, i32* %t.i, align 4
  %shr1451.i = lshr i32 %900, 2
  %and1452.i = and i32 %shr1451.i, 63
  %idxprom1453.i = zext i32 %and1452.i to i64
  %arrayidx1454.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i
  %901 = load i32, i32* %arrayidx1454.i, align 4
  %xor1455.i = xor i32 %xor1450.i, %901
  %902 = load i32, i32* %t.i, align 4
  %shr1456.i = lshr i32 %902, 10
  %and1457.i = and i32 %shr1456.i, 63
  %idxprom1458.i = zext i32 %and1457.i to i64
  %arrayidx1459.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i
  %903 = load i32, i32* %arrayidx1459.i, align 4
  %xor1460.i = xor i32 %xor1455.i, %903
  %904 = load i32, i32* %t.i, align 4
  %shr1461.i = lshr i32 %904, 18
  %and1462.i = and i32 %shr1461.i, 63
  %idxprom1463.i = zext i32 %and1462.i to i64
  %arrayidx1464.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i
  %905 = load i32, i32* %arrayidx1464.i, align 4
  %xor1465.i = xor i32 %xor1460.i, %905
  %906 = load i32, i32* %t.i, align 4
  %shr1466.i = lshr i32 %906, 26
  %idxprom1468.i = zext i32 %shr1466.i to i64
  %arrayidx1469.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i
  %907 = load i32, i32* %arrayidx1469.i, align 4
  %xor1470.i = xor i32 %xor1465.i, %907
  %908 = load i32, i32* %l.i, align 4
  %xor1471.i = xor i32 %908, %xor1470.i
  store i32 %xor1471.i, i32* %l.i, align 4
  %909 = load i32, i32* %l.i, align 4
  %910 = load i32*, i32** %s.i, align 8
  %911 = load i32, i32* %910, align 4
  %xor1473.i = xor i32 %909, %911
  store i32 %xor1473.i, i32* %u.i, align 4
  %912 = load i32, i32* %l.i, align 4
  %913 = load i32*, i32** %s.i, align 8
  %arrayidx1474.i = getelementptr inbounds i32, i32* %913, i64 1
  %914 = load i32, i32* %arrayidx1474.i, align 4
  %xor1475.i = xor i32 %912, %914
  store i32 %xor1475.i, i32* %t.i, align 4
  %915 = load i32, i32* %t.i, align 4
  %916 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %915) #5, !srcloc !35
  store i32 %916, i32* %ret1476.i, align 4
  %917 = load i32, i32* %ret1476.i, align 4
  store i32 %917, i32* %tmp1477.i, align 4
  %918 = load i32, i32* %tmp1477.i, align 4
  store i32 %918, i32* %t.i, align 4
  %919 = load i32, i32* %u.i, align 4
  %shr1478.i = lshr i32 %919, 2
  %and1479.i = and i32 %shr1478.i, 63
  %idxprom1480.i = zext i32 %and1479.i to i64
  %arrayidx1481.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i
  %920 = load i32, i32* %arrayidx1481.i, align 4
  %921 = load i32, i32* %u.i, align 4
  %shr1482.i = lshr i32 %921, 10
  %and1483.i = and i32 %shr1482.i, 63
  %idxprom1484.i = zext i32 %and1483.i to i64
  %arrayidx1485.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i
  %922 = load i32, i32* %arrayidx1485.i, align 4
  %xor1486.i = xor i32 %920, %922
  %923 = load i32, i32* %u.i, align 4
  %shr1487.i = lshr i32 %923, 18
  %and1488.i = and i32 %shr1487.i, 63
  %idxprom1489.i = zext i32 %and1488.i to i64
  %arrayidx1490.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i
  %924 = load i32, i32* %arrayidx1490.i, align 4
  %xor1491.i = xor i32 %xor1486.i, %924
  %925 = load i32, i32* %u.i, align 4
  %shr1492.i = lshr i32 %925, 26
  %idxprom1494.i = zext i32 %shr1492.i to i64
  %arrayidx1495.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i
  %926 = load i32, i32* %arrayidx1495.i, align 4
  %xor1496.i = xor i32 %xor1491.i, %926
  %927 = load i32, i32* %t.i, align 4
  %shr1497.i = lshr i32 %927, 2
  %and1498.i = and i32 %shr1497.i, 63
  %idxprom1499.i = zext i32 %and1498.i to i64
  %arrayidx1500.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i
  %928 = load i32, i32* %arrayidx1500.i, align 4
  %xor1501.i = xor i32 %xor1496.i, %928
  %929 = load i32, i32* %t.i, align 4
  %shr1502.i = lshr i32 %929, 10
  %and1503.i = and i32 %shr1502.i, 63
  %idxprom1504.i = zext i32 %and1503.i to i64
  %arrayidx1505.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i
  %930 = load i32, i32* %arrayidx1505.i, align 4
  %xor1506.i = xor i32 %xor1501.i, %930
  %931 = load i32, i32* %t.i, align 4
  %shr1507.i = lshr i32 %931, 18
  %and1508.i = and i32 %shr1507.i, 63
  %idxprom1509.i = zext i32 %and1508.i to i64
  %arrayidx1510.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i
  %932 = load i32, i32* %arrayidx1510.i, align 4
  %xor1511.i = xor i32 %xor1506.i, %932
  %933 = load i32, i32* %t.i, align 4
  %shr1512.i = lshr i32 %933, 26
  %idxprom1514.i = zext i32 %shr1512.i to i64
  %arrayidx1515.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i
  %934 = load i32, i32* %arrayidx1515.i, align 4
  %xor1516.i = xor i32 %xor1511.i, %934
  %935 = load i32, i32* %r.i, align 4
  %xor1517.i = xor i32 %935, %xor1516.i
  store i32 %xor1517.i, i32* %r.i, align 4
  br label %DES_encrypt1.exit

DES_encrypt1.exit:                                ; preds = %if.then.i, %if.else.i
  %936 = load i32, i32* %l.i, align 4
  %937 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %936) #5, !srcloc !36
  store i32 %937, i32* %ret1518.i, align 4
  %938 = load i32, i32* %ret1518.i, align 4
  store i32 %938, i32* %tmp1519.i, align 4
  %939 = load i32, i32* %tmp1519.i, align 4
  %conv1520.i = zext i32 %939 to i64
  %and1521.i = and i64 %conv1520.i, 4294967295
  %conv1522.i = trunc i64 %and1521.i to i32
  store i32 %conv1522.i, i32* %l.i, align 4
  %940 = load i32, i32* %r.i, align 4
  %941 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %940) #5, !srcloc !37
  store i32 %941, i32* %ret1523.i, align 4
  %942 = load i32, i32* %ret1523.i, align 4
  store i32 %942, i32* %tmp1524.i, align 4
  %943 = load i32, i32* %tmp1524.i, align 4
  %conv1525.i = zext i32 %943 to i64
  %and1526.i = and i64 %conv1525.i, 4294967295
  %conv1527.i = trunc i64 %and1526.i to i32
  store i32 %conv1527.i, i32* %r.i, align 4
  %944 = load i32, i32* %r.i, align 4
  %shr1529.i = lshr i32 %944, 1
  %945 = load i32, i32* %l.i, align 4
  %xor1530.i = xor i32 %shr1529.i, %945
  %conv1531.i = zext i32 %xor1530.i to i64
  %and1532.i = and i64 %conv1531.i, 1431655765
  %conv1533.i = trunc i64 %and1532.i to i32
  store i32 %conv1533.i, i32* %tt1528.i, align 4
  %946 = load i32, i32* %tt1528.i, align 4
  %947 = load i32, i32* %l.i, align 4
  %xor1534.i = xor i32 %947, %946
  store i32 %xor1534.i, i32* %l.i, align 4
  %948 = load i32, i32* %tt1528.i, align 4
  %shl1535.i = shl i32 %948, 1
  %949 = load i32, i32* %r.i, align 4
  %xor1536.i = xor i32 %949, %shl1535.i
  store i32 %xor1536.i, i32* %r.i, align 4
  %950 = load i32, i32* %l.i, align 4
  %shr1537.i = lshr i32 %950, 8
  %951 = load i32, i32* %r.i, align 4
  %xor1538.i = xor i32 %shr1537.i, %951
  %conv1539.i = zext i32 %xor1538.i to i64
  %and1540.i = and i64 %conv1539.i, 16711935
  %conv1541.i = trunc i64 %and1540.i to i32
  store i32 %conv1541.i, i32* %tt1528.i, align 4
  %952 = load i32, i32* %tt1528.i, align 4
  %953 = load i32, i32* %r.i, align 4
  %xor1542.i = xor i32 %953, %952
  store i32 %xor1542.i, i32* %r.i, align 4
  %954 = load i32, i32* %tt1528.i, align 4
  %shl1543.i = shl i32 %954, 8
  %955 = load i32, i32* %l.i, align 4
  %xor1544.i = xor i32 %955, %shl1543.i
  store i32 %xor1544.i, i32* %l.i, align 4
  %956 = load i32, i32* %r.i, align 4
  %shr1545.i = lshr i32 %956, 2
  %957 = load i32, i32* %l.i, align 4
  %xor1546.i = xor i32 %shr1545.i, %957
  %conv1547.i = zext i32 %xor1546.i to i64
  %and1548.i = and i64 %conv1547.i, 858993459
  %conv1549.i = trunc i64 %and1548.i to i32
  store i32 %conv1549.i, i32* %tt1528.i, align 4
  %958 = load i32, i32* %tt1528.i, align 4
  %959 = load i32, i32* %l.i, align 4
  %xor1550.i = xor i32 %959, %958
  store i32 %xor1550.i, i32* %l.i, align 4
  %960 = load i32, i32* %tt1528.i, align 4
  %shl1551.i = shl i32 %960, 2
  %961 = load i32, i32* %r.i, align 4
  %xor1552.i = xor i32 %961, %shl1551.i
  store i32 %xor1552.i, i32* %r.i, align 4
  %962 = load i32, i32* %l.i, align 4
  %shr1553.i = lshr i32 %962, 16
  %963 = load i32, i32* %r.i, align 4
  %xor1554.i = xor i32 %shr1553.i, %963
  %conv1555.i = zext i32 %xor1554.i to i64
  %and1556.i = and i64 %conv1555.i, 65535
  %conv1557.i = trunc i64 %and1556.i to i32
  store i32 %conv1557.i, i32* %tt1528.i, align 4
  %964 = load i32, i32* %tt1528.i, align 4
  %965 = load i32, i32* %r.i, align 4
  %xor1558.i = xor i32 %965, %964
  store i32 %xor1558.i, i32* %r.i, align 4
  %966 = load i32, i32* %tt1528.i, align 4
  %shl1559.i = shl i32 %966, 16
  %967 = load i32, i32* %l.i, align 4
  %xor1560.i = xor i32 %967, %shl1559.i
  store i32 %xor1560.i, i32* %l.i, align 4
  %968 = load i32, i32* %r.i, align 4
  %shr1561.i = lshr i32 %968, 4
  %969 = load i32, i32* %l.i, align 4
  %xor1562.i = xor i32 %shr1561.i, %969
  %conv1563.i = zext i32 %xor1562.i to i64
  %and1564.i = and i64 %conv1563.i, 252645135
  %conv1565.i = trunc i64 %and1564.i to i32
  store i32 %conv1565.i, i32* %tt1528.i, align 4
  %970 = load i32, i32* %tt1528.i, align 4
  %971 = load i32, i32* %l.i, align 4
  %xor1566.i = xor i32 %971, %970
  store i32 %xor1566.i, i32* %l.i, align 4
  %972 = load i32, i32* %tt1528.i, align 4
  %shl1567.i = shl i32 %972, 4
  %973 = load i32, i32* %r.i, align 4
  %xor1568.i = xor i32 %973, %shl1567.i
  store i32 %xor1568.i, i32* %r.i, align 4
  %974 = load i32, i32* %l.i, align 4
  %975 = load i32*, i32** %data.addr.i, align 8
  store i32 %974, i32* %975, align 4
  %976 = load i32, i32* %r.i, align 4
  %977 = load i32*, i32** %data.addr.i, align 8
  %arrayidx1570.i = getelementptr inbounds i32, i32* %977, i64 1
  store i32 %976, i32* %arrayidx1570.i, align 4
  store i32 0, i32* %u.i, align 4
  store i32 0, i32* %t.i, align 4
  store i32 0, i32* %r.i, align 4
  store i32 0, i32* %l.i, align 4
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0
  %978 = load i32, i32* %arrayidx28, align 4
  store i32 %978, i32* %l, align 4
  %979 = load i32, i32* %l, align 4
  %and = and i32 %979, 255
  %conv29 = trunc i32 %and to i8
  %980 = load i8*, i8** %out, align 8
  %incdec.ptr30 = getelementptr inbounds i8, i8* %980, i32 1
  store i8* %incdec.ptr30, i8** %out, align 8
  store i8 %conv29, i8* %980, align 1
  %981 = load i32, i32* %l, align 4
  %shr = lshr i32 %981, 8
  %and31 = and i32 %shr, 255
  %conv32 = trunc i32 %and31 to i8
  %982 = load i8*, i8** %out, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %982, i32 1
  store i8* %incdec.ptr33, i8** %out, align 8
  store i8 %conv32, i8* %982, align 1
  %983 = load i32, i32* %l, align 4
  %shr34 = lshr i32 %983, 16
  %and35 = and i32 %shr34, 255
  %conv36 = trunc i32 %and35 to i8
  %984 = load i8*, i8** %out, align 8
  %incdec.ptr37 = getelementptr inbounds i8, i8* %984, i32 1
  store i8* %incdec.ptr37, i8** %out, align 8
  store i8 %conv36, i8* %984, align 1
  %985 = load i32, i32* %l, align 4
  %shr38 = lshr i32 %985, 24
  %and39 = and i32 %shr38, 255
  %conv40 = trunc i32 %and39 to i8
  %986 = load i8*, i8** %out, align 8
  %incdec.ptr41 = getelementptr inbounds i8, i8* %986, i32 1
  store i8* %incdec.ptr41, i8** %out, align 8
  store i8 %conv40, i8* %986, align 1
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 1
  %987 = load i32, i32* %arrayidx42, align 4
  store i32 %987, i32* %l, align 4
  %988 = load i32, i32* %l, align 4
  %and43 = and i32 %988, 255
  %conv44 = trunc i32 %and43 to i8
  %989 = load i8*, i8** %out, align 8
  %incdec.ptr45 = getelementptr inbounds i8, i8* %989, i32 1
  store i8* %incdec.ptr45, i8** %out, align 8
  store i8 %conv44, i8* %989, align 1
  %990 = load i32, i32* %l, align 4
  %shr46 = lshr i32 %990, 8
  %and47 = and i32 %shr46, 255
  %conv48 = trunc i32 %and47 to i8
  %991 = load i8*, i8** %out, align 8
  %incdec.ptr49 = getelementptr inbounds i8, i8* %991, i32 1
  store i8* %incdec.ptr49, i8** %out, align 8
  store i8 %conv48, i8* %991, align 1
  %992 = load i32, i32* %l, align 4
  %shr50 = lshr i32 %992, 16
  %and51 = and i32 %shr50, 255
  %conv52 = trunc i32 %and51 to i8
  %993 = load i8*, i8** %out, align 8
  %incdec.ptr53 = getelementptr inbounds i8, i8* %993, i32 1
  store i8* %incdec.ptr53, i8** %out, align 8
  store i8 %conv52, i8* %993, align 1
  %994 = load i32, i32* %l, align 4
  %shr54 = lshr i32 %994, 24
  %and55 = and i32 %shr54, 255
  %conv56 = trunc i32 %and55 to i8
  %995 = load i8*, i8** %out, align 8
  %incdec.ptr57 = getelementptr inbounds i8, i8* %995, i32 1
  store i8* %incdec.ptr57, i8** %out, align 8
  store i8 %conv56, i8* %995, align 1
  %arrayidx58 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 1
  store i32 0, i32* %arrayidx58, align 4
  %arrayidx59 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0
  store i32 0, i32* %arrayidx59, align 4
  store i32 0, i32* %l, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #1 {
entry:
  %key.addr.i = alloca [8 x i8]*, align 8
  %schedule.addr.i = alloca %struct.DES_ks*, align 8
  %data.addr.i.i = alloca i32*, align 8
  %ks.addr.i.i = alloca %struct.DES_ks*, align 8
  %enc.addr.i.i = alloca i32, align 4
  %l.i.i = alloca i32, align 4
  %r.i.i = alloca i32, align 4
  %t.i.i = alloca i32, align 4
  %u.i.i = alloca i32, align 4
  %s.i.i = alloca i32*, align 8
  %tt.i.i = alloca i32, align 4
  %ret.i.i = alloca i32, align 4
  %tmp.i.i = alloca i32, align 4
  %ret40.i.i = alloca i32, align 4
  %tmp41.i.i = alloca i32, align 4
  %ret51.i.i = alloca i32, align 4
  %tmp52.i.i = alloca i32, align 4
  %ret96.i.i = alloca i32, align 4
  %tmp97.i.i = alloca i32, align 4
  %ret142.i.i = alloca i32, align 4
  %tmp143.i.i = alloca i32, align 4
  %ret188.i.i = alloca i32, align 4
  %tmp189.i.i = alloca i32, align 4
  %ret234.i.i = alloca i32, align 4
  %tmp235.i.i = alloca i32, align 4
  %ret280.i.i = alloca i32, align 4
  %tmp281.i.i = alloca i32, align 4
  %ret326.i.i = alloca i32, align 4
  %tmp327.i.i = alloca i32, align 4
  %ret372.i.i = alloca i32, align 4
  %tmp373.i.i = alloca i32, align 4
  %ret418.i.i = alloca i32, align 4
  %tmp419.i.i = alloca i32, align 4
  %ret464.i.i = alloca i32, align 4
  %tmp465.i.i = alloca i32, align 4
  %ret510.i.i = alloca i32, align 4
  %tmp511.i.i = alloca i32, align 4
  %ret556.i.i = alloca i32, align 4
  %tmp557.i.i = alloca i32, align 4
  %ret602.i.i = alloca i32, align 4
  %tmp603.i.i = alloca i32, align 4
  %ret648.i.i = alloca i32, align 4
  %tmp649.i.i = alloca i32, align 4
  %ret694.i.i = alloca i32, align 4
  %tmp695.i.i = alloca i32, align 4
  %ret740.i.i = alloca i32, align 4
  %tmp741.i.i = alloca i32, align 4
  %ret786.i.i = alloca i32, align 4
  %tmp787.i.i = alloca i32, align 4
  %ret832.i.i = alloca i32, align 4
  %tmp833.i.i = alloca i32, align 4
  %ret878.i.i = alloca i32, align 4
  %tmp879.i.i = alloca i32, align 4
  %ret924.i.i = alloca i32, align 4
  %tmp925.i.i = alloca i32, align 4
  %ret970.i.i = alloca i32, align 4
  %tmp971.i.i = alloca i32, align 4
  %ret1016.i.i = alloca i32, align 4
  %tmp1017.i.i = alloca i32, align 4
  %ret1062.i.i = alloca i32, align 4
  %tmp1063.i.i = alloca i32, align 4
  %ret1108.i.i = alloca i32, align 4
  %tmp1109.i.i = alloca i32, align 4
  %ret1154.i.i = alloca i32, align 4
  %tmp1155.i.i = alloca i32, align 4
  %ret1200.i.i = alloca i32, align 4
  %tmp1201.i.i = alloca i32, align 4
  %ret1246.i.i = alloca i32, align 4
  %tmp1247.i.i = alloca i32, align 4
  %ret1292.i.i = alloca i32, align 4
  %tmp1293.i.i = alloca i32, align 4
  %ret1338.i.i = alloca i32, align 4
  %tmp1339.i.i = alloca i32, align 4
  %ret1384.i.i = alloca i32, align 4
  %tmp1385.i.i = alloca i32, align 4
  %ret1430.i.i = alloca i32, align 4
  %tmp1431.i.i = alloca i32, align 4
  %ret1476.i.i = alloca i32, align 4
  %tmp1477.i.i = alloca i32, align 4
  %ret1518.i.i = alloca i32, align 4
  %tmp1519.i.i = alloca i32, align 4
  %ret1523.i.i = alloca i32, align 4
  %tmp1524.i.i = alloca i32, align 4
  %tt1528.i.i = alloca i32, align 4
  %input.addr.i = alloca [8 x i8]*, align 8
  %output.addr.i = alloca [8 x i8]*, align 8
  %ks.addr.i = alloca %struct.DES_ks*, align 8
  %enc.addr.i = alloca i32, align 4
  %l.i = alloca i32, align 4
  %ll.i = alloca [2 x i32], align 4
  %in.i = alloca i8*, align 8
  %out.i = alloca i8*, align 8
  %buf = alloca [8 x i8], align 1
  %key = alloca [8 x i8], align 1
  %output = alloca [8 x i8], align 1
  %ks = alloca %struct.DES_ks*, align 8
  %0 = bitcast [8 x i8]* %buf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @__const.main.buf, i32 0, i32 0), i64 8, i1 false)
  %1 = bitcast [8 x i8]* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @__const.main.key, i32 0, i32 0), i64 8, i1 false)
  %2 = ptrtoint %struct.DES_ks** %ks to i64
  call void @printLoadAddr(i64 %2, i32 101, i32 0, i32 0)
  %3 = load %struct.DES_ks*, %struct.DES_ks** %ks, align 8
  call void @printDDep(i32 100, i32 101)
  %4 = bitcast [8 x i8]** %key.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  %5 = bitcast %struct.DES_ks** %schedule.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5)
  %6 = ptrtoint [8 x i8]** %key.addr.i to i64
  call void @printStoreAddr(i64 %6, i32 107, i32 0, i32 0)
  store [8 x i8]* %key, [8 x i8]** %key.addr.i, align 8
  call void @printDDep(i32 106, i32 107)
  call void @printDDep(i32 106, i32 107)
  %7 = ptrtoint %struct.DES_ks** %schedule.addr.i to i64
  call void @printStoreAddr(i64 %7, i32 110, i32 0, i32 0)
  store %struct.DES_ks* %3, %struct.DES_ks** %schedule.addr.i, align 8
  call void @printDDep(i32 107, i32 110)
  call void @printDDep(i32 106, i32 110)
  %8 = ptrtoint [8 x i8]** %key.addr.i to i64
  call void @printLoadAddr(i64 %8, i32 113, i32 0, i32 0)
  %9 = load [8 x i8]*, [8 x i8]** %key.addr.i, align 8
  call void @printDDep(i32 107, i32 113)
  call void @printDDep(i32 107, i32 113)
  %10 = ptrtoint %struct.DES_ks** %schedule.addr.i to i64
  call void @printLoadAddr(i64 %10, i32 116, i32 0, i32 0)
  %11 = load %struct.DES_ks*, %struct.DES_ks** %schedule.addr.i, align 8
  call void @printDDep(i32 110, i32 116)
  call void @printDDep(i32 110, i32 116)
  %call.i = call i32 @DES_set_key([8 x i8]* %9, %struct.DES_ks* %11) #6
  %12 = bitcast [8 x i8]** %key.addr.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12)
  %13 = bitcast %struct.DES_ks** %schedule.addr.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13)
  %14 = ptrtoint %struct.DES_ks** %ks to i64
  call void @printLoadAddr(i64 %14, i32 124, i32 0, i32 0)
  %15 = load %struct.DES_ks*, %struct.DES_ks** %ks, align 8
  call void @printDDep(i32 123, i32 124)
  %16 = ptrtoint [8 x i8]** %input.addr.i to i64
  call void @printStoreAddr(i64 %16, i32 126, i32 0, i32 0)
  store [8 x i8]* %buf, [8 x i8]** %input.addr.i, align 8
  call void @printDDep(i32 123, i32 126)
  call void @printDDep(i32 123, i32 126)
  %17 = ptrtoint [8 x i8]** %output.addr.i to i64
  call void @printStoreAddr(i64 %17, i32 129, i32 0, i32 0)
  store [8 x i8]* %output, [8 x i8]** %output.addr.i, align 8
  call void @printDDep(i32 126, i32 129)
  call void @printDDep(i32 123, i32 129)
  %18 = ptrtoint %struct.DES_ks** %ks.addr.i to i64
  call void @printStoreAddr(i64 %18, i32 132, i32 0, i32 0)
  store %struct.DES_ks* %15, %struct.DES_ks** %ks.addr.i, align 8
  call void @printDDep(i32 129, i32 132)
  call void @printDDep(i32 123, i32 132)
  %19 = ptrtoint i32* %enc.addr.i to i64
  call void @printStoreAddr(i64 %19, i32 135, i32 0, i32 0)
  store i32 1, i32* %enc.addr.i, align 4
  call void @printDDep(i32 132, i32 135)
  call void @printDDep(i32 123, i32 135)
  %20 = ptrtoint [8 x i8]** %input.addr.i to i64
  call void @printLoadAddr(i64 %20, i32 138, i32 0, i32 0)
  %21 = load [8 x i8]*, [8 x i8]** %input.addr.i, align 8
  call void @printDDep(i32 126, i32 138)
  call void @printDDep(i32 126, i32 138)
  %arrayidx.i = getelementptr inbounds [8 x i8], [8 x i8]* %21, i64 0, i64 0
  %22 = ptrtoint i8** %in.i to i64
  call void @printStoreAddr(i64 %22, i32 142, i32 0, i32 0)
  store i8* %arrayidx.i, i8** %in.i, align 8
  call void @printDDep(i32 135, i32 142)
  call void @printDDep(i32 123, i32 142)
  %23 = ptrtoint [8 x i8]** %output.addr.i to i64
  call void @printLoadAddr(i64 %23, i32 145, i32 0, i32 0)
  %24 = load [8 x i8]*, [8 x i8]** %output.addr.i, align 8
  call void @printDDep(i32 129, i32 145)
  call void @printDDep(i32 129, i32 145)
  %arrayidx1.i = getelementptr inbounds [8 x i8], [8 x i8]* %24, i64 0, i64 0
  %25 = ptrtoint i8** %out.i to i64
  call void @printStoreAddr(i64 %25, i32 149, i32 0, i32 0)
  store i8* %arrayidx1.i, i8** %out.i, align 8
  call void @printDDep(i32 142, i32 149)
  call void @printDDep(i32 123, i32 149)
  %26 = ptrtoint i8** %in.i to i64
  call void @printLoadAddr(i64 %26, i32 152, i32 0, i32 0)
  %27 = load i8*, i8** %in.i, align 8
  call void @printDDep(i32 142, i32 152)
  call void @printDDep(i32 142, i32 152)
  %incdec.ptr.i = getelementptr inbounds i8, i8* %27, i32 1
  %28 = ptrtoint i8** %in.i to i64
  call void @printStoreAddr(i64 %28, i32 156, i32 0, i32 0)
  store i8* %incdec.ptr.i, i8** %in.i, align 8
  call void @printDDep(i32 149, i32 156)
  call void @printDDep(i32 152, i32 156)
  %29 = ptrtoint i8* %27 to i64
  call void @printLoadAddr(i64 %29, i32 159, i32 0, i32 0)
  %30 = load i8, i8* %27, align 1
  call void @printDDep(i32 119, i32 159)
  call void @printDDep(i32 123, i32 159)
  %conv.i = zext i8 %30 to i32
  %31 = ptrtoint i32* %l.i to i64
  call void @printStoreAddr(i64 %31, i32 163, i32 0, i32 0)
  store i32 %conv.i, i32* %l.i, align 4
  call void @printDDep(i32 156, i32 163)
  call void @printDDep(i32 159, i32 163)
  %32 = ptrtoint i8** %in.i to i64
  call void @printLoadAddr(i64 %32, i32 166, i32 0, i32 0)
  %33 = load i8*, i8** %in.i, align 8
  call void @printDDep(i32 156, i32 166)
  call void @printDDep(i32 156, i32 166)
  %incdec.ptr2.i = getelementptr inbounds i8, i8* %33, i32 1
  %34 = ptrtoint i8** %in.i to i64
  call void @printStoreAddr(i64 %34, i32 170, i32 0, i32 0)
  store i8* %incdec.ptr2.i, i8** %in.i, align 8
  call void @printDDep(i32 163, i32 170)
  call void @printDDep(i32 166, i32 170)
  %35 = ptrtoint i8* %33 to i64
  call void @printLoadAddr(i64 %35, i32 173, i32 0, i32 0)
  %36 = load i8, i8* %33, align 1
  call void @printDDep(i32 163, i32 173)
  call void @printDDep(i32 163, i32 173)
  %conv3.i = zext i8 %36 to i32
  %shl.i = shl i32 %conv3.i, 8
  %37 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %37, i32 178, i32 0, i32 0)
  %38 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 163, i32 178)
  call void @printDDep(i32 173, i32 178)
  %or.i = or i32 %38, %shl.i
  %39 = ptrtoint i32* %l.i to i64
  call void @printStoreAddr(i64 %39, i32 182, i32 0, i32 0)
  store i32 %or.i, i32* %l.i, align 4
  call void @printDDep(i32 170, i32 182)
  call void @printDDep(i32 178, i32 182)
  %40 = ptrtoint i8** %in.i to i64
  call void @printLoadAddr(i64 %40, i32 185, i32 0, i32 0)
  %41 = load i8*, i8** %in.i, align 8
  call void @printDDep(i32 170, i32 185)
  call void @printDDep(i32 170, i32 185)
  %incdec.ptr4.i = getelementptr inbounds i8, i8* %41, i32 1
  %42 = ptrtoint i8** %in.i to i64
  call void @printStoreAddr(i64 %42, i32 189, i32 0, i32 0)
  store i8* %incdec.ptr4.i, i8** %in.i, align 8
  call void @printDDep(i32 182, i32 189)
  call void @printDDep(i32 185, i32 189)
  %43 = ptrtoint i8* %41 to i64
  call void @printLoadAddr(i64 %43, i32 192, i32 0, i32 0)
  %44 = load i8, i8* %41, align 1
  call void @printDDep(i32 182, i32 192)
  call void @printDDep(i32 182, i32 192)
  %conv5.i = zext i8 %44 to i32
  %shl6.i = shl i32 %conv5.i, 16
  %45 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %45, i32 197, i32 0, i32 0)
  %46 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 182, i32 197)
  call void @printDDep(i32 192, i32 197)
  %or7.i = or i32 %46, %shl6.i
  %47 = ptrtoint i32* %l.i to i64
  call void @printStoreAddr(i64 %47, i32 201, i32 0, i32 0)
  store i32 %or7.i, i32* %l.i, align 4
  call void @printDDep(i32 189, i32 201)
  call void @printDDep(i32 197, i32 201)
  %48 = ptrtoint i8** %in.i to i64
  call void @printLoadAddr(i64 %48, i32 204, i32 0, i32 0)
  %49 = load i8*, i8** %in.i, align 8
  call void @printDDep(i32 189, i32 204)
  call void @printDDep(i32 189, i32 204)
  %incdec.ptr8.i = getelementptr inbounds i8, i8* %49, i32 1
  %50 = ptrtoint i8** %in.i to i64
  call void @printStoreAddr(i64 %50, i32 208, i32 0, i32 0)
  store i8* %incdec.ptr8.i, i8** %in.i, align 8
  call void @printDDep(i32 201, i32 208)
  call void @printDDep(i32 204, i32 208)
  %51 = ptrtoint i8* %49 to i64
  call void @printLoadAddr(i64 %51, i32 211, i32 0, i32 0)
  %52 = load i8, i8* %49, align 1
  call void @printDDep(i32 201, i32 211)
  call void @printDDep(i32 201, i32 211)
  %conv9.i = zext i8 %52 to i32
  %shl10.i = shl i32 %conv9.i, 24
  %53 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %53, i32 216, i32 0, i32 0)
  %54 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 201, i32 216)
  call void @printDDep(i32 211, i32 216)
  %or11.i = or i32 %54, %shl10.i
  %55 = ptrtoint i32* %l.i to i64
  call void @printStoreAddr(i64 %55, i32 220, i32 0, i32 0)
  store i32 %or11.i, i32* %l.i, align 4
  call void @printDDep(i32 208, i32 220)
  call void @printDDep(i32 216, i32 220)
  %56 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %56, i32 223, i32 0, i32 0)
  %57 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 220, i32 223)
  call void @printDDep(i32 220, i32 223)
  %arrayidx12.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0
  %58 = ptrtoint i32* %arrayidx12.i to i64
  call void @printStoreAddr(i64 %58, i32 227, i32 0, i32 0)
  store i32 %57, i32* %arrayidx12.i, align 4
  call void @printDDep(i32 220, i32 227)
  call void @printDDep(i32 211, i32 227)
  %59 = ptrtoint i8** %in.i to i64
  call void @printLoadAddr(i64 %59, i32 230, i32 0, i32 0)
  %60 = load i8*, i8** %in.i, align 8
  call void @printDDep(i32 208, i32 230)
  call void @printDDep(i32 208, i32 230)
  %incdec.ptr13.i = getelementptr inbounds i8, i8* %60, i32 1
  %61 = ptrtoint i8** %in.i to i64
  call void @printStoreAddr(i64 %61, i32 234, i32 0, i32 0)
  store i8* %incdec.ptr13.i, i8** %in.i, align 8
  call void @printDDep(i32 227, i32 234)
  call void @printDDep(i32 230, i32 234)
  %62 = ptrtoint i8* %60 to i64
  call void @printLoadAddr(i64 %62, i32 237, i32 0, i32 0)
  %63 = load i8, i8* %60, align 1
  call void @printDDep(i32 227, i32 237)
  call void @printDDep(i32 227, i32 237)
  %conv14.i = zext i8 %63 to i32
  %64 = ptrtoint i32* %l.i to i64
  call void @printStoreAddr(i64 %64, i32 241, i32 0, i32 0)
  store i32 %conv14.i, i32* %l.i, align 4
  call void @printDDep(i32 234, i32 241)
  call void @printDDep(i32 237, i32 241)
  %65 = ptrtoint i8** %in.i to i64
  call void @printLoadAddr(i64 %65, i32 244, i32 0, i32 0)
  %66 = load i8*, i8** %in.i, align 8
  call void @printDDep(i32 234, i32 244)
  call void @printDDep(i32 234, i32 244)
  %incdec.ptr15.i = getelementptr inbounds i8, i8* %66, i32 1
  %67 = ptrtoint i8** %in.i to i64
  call void @printStoreAddr(i64 %67, i32 248, i32 0, i32 0)
  store i8* %incdec.ptr15.i, i8** %in.i, align 8
  call void @printDDep(i32 241, i32 248)
  call void @printDDep(i32 244, i32 248)
  %68 = ptrtoint i8* %66 to i64
  call void @printLoadAddr(i64 %68, i32 251, i32 0, i32 0)
  %69 = load i8, i8* %66, align 1
  call void @printDDep(i32 241, i32 251)
  call void @printDDep(i32 241, i32 251)
  %conv16.i = zext i8 %69 to i32
  %shl17.i = shl i32 %conv16.i, 8
  %70 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %70, i32 256, i32 0, i32 0)
  %71 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 241, i32 256)
  call void @printDDep(i32 251, i32 256)
  %or18.i = or i32 %71, %shl17.i
  %72 = ptrtoint i32* %l.i to i64
  call void @printStoreAddr(i64 %72, i32 260, i32 0, i32 0)
  store i32 %or18.i, i32* %l.i, align 4
  call void @printDDep(i32 248, i32 260)
  call void @printDDep(i32 256, i32 260)
  %73 = ptrtoint i8** %in.i to i64
  call void @printLoadAddr(i64 %73, i32 263, i32 0, i32 0)
  %74 = load i8*, i8** %in.i, align 8
  call void @printDDep(i32 248, i32 263)
  call void @printDDep(i32 248, i32 263)
  %incdec.ptr19.i = getelementptr inbounds i8, i8* %74, i32 1
  %75 = ptrtoint i8** %in.i to i64
  call void @printStoreAddr(i64 %75, i32 267, i32 0, i32 0)
  store i8* %incdec.ptr19.i, i8** %in.i, align 8
  call void @printDDep(i32 260, i32 267)
  call void @printDDep(i32 263, i32 267)
  %76 = ptrtoint i8* %74 to i64
  call void @printLoadAddr(i64 %76, i32 270, i32 0, i32 0)
  %77 = load i8, i8* %74, align 1
  call void @printDDep(i32 260, i32 270)
  call void @printDDep(i32 260, i32 270)
  %conv20.i = zext i8 %77 to i32
  %shl21.i = shl i32 %conv20.i, 16
  %78 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %78, i32 275, i32 0, i32 0)
  %79 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 260, i32 275)
  call void @printDDep(i32 270, i32 275)
  %or22.i = or i32 %79, %shl21.i
  %80 = ptrtoint i32* %l.i to i64
  call void @printStoreAddr(i64 %80, i32 279, i32 0, i32 0)
  store i32 %or22.i, i32* %l.i, align 4
  call void @printDDep(i32 267, i32 279)
  call void @printDDep(i32 275, i32 279)
  %81 = ptrtoint i8** %in.i to i64
  call void @printLoadAddr(i64 %81, i32 282, i32 0, i32 0)
  %82 = load i8*, i8** %in.i, align 8
  call void @printDDep(i32 267, i32 282)
  call void @printDDep(i32 267, i32 282)
  %incdec.ptr23.i = getelementptr inbounds i8, i8* %82, i32 1
  %83 = ptrtoint i8** %in.i to i64
  call void @printStoreAddr(i64 %83, i32 286, i32 0, i32 0)
  store i8* %incdec.ptr23.i, i8** %in.i, align 8
  call void @printDDep(i32 279, i32 286)
  call void @printDDep(i32 282, i32 286)
  %84 = ptrtoint i8* %82 to i64
  call void @printLoadAddr(i64 %84, i32 289, i32 0, i32 0)
  %85 = load i8, i8* %82, align 1
  call void @printDDep(i32 279, i32 289)
  call void @printDDep(i32 279, i32 289)
  %conv24.i = zext i8 %85 to i32
  %shl25.i = shl i32 %conv24.i, 24
  %86 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %86, i32 294, i32 0, i32 0)
  %87 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 279, i32 294)
  call void @printDDep(i32 289, i32 294)
  %or26.i = or i32 %87, %shl25.i
  %88 = ptrtoint i32* %l.i to i64
  call void @printStoreAddr(i64 %88, i32 298, i32 0, i32 0)
  store i32 %or26.i, i32* %l.i, align 4
  call void @printDDep(i32 286, i32 298)
  call void @printDDep(i32 294, i32 298)
  %89 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %89, i32 301, i32 0, i32 0)
  %90 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 298, i32 301)
  call void @printDDep(i32 298, i32 301)
  %arrayidx27.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 1
  %91 = ptrtoint i32* %arrayidx27.i to i64
  call void @printStoreAddr(i64 %91, i32 305, i32 0, i32 0)
  store i32 %90, i32* %arrayidx27.i, align 4
  call void @printDDep(i32 298, i32 305)
  call void @printDDep(i32 289, i32 305)
  %arraydecay.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0
  %92 = ptrtoint %struct.DES_ks** %ks.addr.i to i64
  call void @printLoadAddr(i64 %92, i32 309, i32 0, i32 0)
  %93 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i, align 8
  call void @printDDep(i32 132, i32 309)
  call void @printDDep(i32 132, i32 309)
  %94 = ptrtoint i32* %enc.addr.i to i64
  call void @printLoadAddr(i64 %94, i32 312, i32 0, i32 0)
  %95 = load i32, i32* %enc.addr.i, align 4
  call void @printDDep(i32 135, i32 312)
  call void @printDDep(i32 135, i32 312)
  %96 = ptrtoint i32** %data.addr.i.i to i64
  call void @printStoreAddr(i64 %96, i32 315, i32 0, i32 0)
  store i32* %arraydecay.i, i32** %data.addr.i.i, align 8
  call void @printDDep(i32 305, i32 315)
  call void @printDDep(i32 123, i32 315)
  %97 = ptrtoint %struct.DES_ks** %ks.addr.i.i to i64
  call void @printStoreAddr(i64 %97, i32 318, i32 0, i32 0)
  store %struct.DES_ks* %93, %struct.DES_ks** %ks.addr.i.i, align 8
  call void @printDDep(i32 315, i32 318)
  call void @printDDep(i32 123, i32 318)
  %98 = ptrtoint i32* %enc.addr.i.i to i64
  call void @printStoreAddr(i64 %98, i32 321, i32 0, i32 0)
  store i32 %95, i32* %enc.addr.i.i, align 4
  call void @printDDep(i32 318, i32 321)
  call void @printDDep(i32 123, i32 321)
  %99 = ptrtoint i32** %data.addr.i.i to i64
  call void @printLoadAddr(i64 %99, i32 324, i32 0, i32 0)
  %100 = load i32*, i32** %data.addr.i.i, align 8
  call void @printDDep(i32 315, i32 324)
  call void @printDDep(i32 315, i32 324)
  %101 = ptrtoint i32* %100 to i64
  call void @printLoadAddr(i64 %101, i32 327, i32 0, i32 0)
  %102 = load i32, i32* %100, align 4
  call void @printDDep(i32 305, i32 327)
  call void @printDDep(i32 305, i32 327)
  %103 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %103, i32 330, i32 0, i32 0)
  store i32 %102, i32* %r.i.i, align 4
  call void @printDDep(i32 321, i32 330)
  call void @printDDep(i32 327, i32 330)
  %104 = ptrtoint i32** %data.addr.i.i to i64
  call void @printLoadAddr(i64 %104, i32 333, i32 0, i32 0)
  %105 = load i32*, i32** %data.addr.i.i, align 8
  call void @printDDep(i32 315, i32 333)
  call void @printDDep(i32 324, i32 333)
  %arrayidx1.i.i = getelementptr inbounds i32, i32* %105, i64 1
  %106 = ptrtoint i32* %arrayidx1.i.i to i64
  call void @printLoadAddr(i64 %106, i32 337, i32 0, i32 0)
  %107 = load i32, i32* %arrayidx1.i.i, align 4
  call void @printDDep(i32 305, i32 337)
  call void @printDDep(i32 330, i32 337)
  %108 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %108, i32 340, i32 0, i32 0)
  store i32 %107, i32* %l.i.i, align 4
  call void @printDDep(i32 330, i32 340)
  call void @printDDep(i32 337, i32 340)
  %109 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %109, i32 343, i32 0, i32 0)
  %110 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 340, i32 343)
  call void @printDDep(i32 340, i32 343)
  %shr.i.i = lshr i32 %110, 4
  %111 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %111, i32 347, i32 0, i32 0)
  %112 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 330, i32 347)
  call void @printDDep(i32 337, i32 347)
  %xor.i.i = xor i32 %shr.i.i, %112
  %conv.i.i = zext i32 %xor.i.i to i64
  %and.i.i = and i64 %conv.i.i, 252645135
  %conv2.i.i = trunc i64 %and.i.i to i32
  %113 = ptrtoint i32* %tt.i.i to i64
  call void @printStoreAddr(i64 %113, i32 354, i32 0, i32 0)
  store i32 %conv2.i.i, i32* %tt.i.i, align 4
  call void @printDDep(i32 340, i32 354)
  call void @printDDep(i32 123, i32 354)
  %114 = ptrtoint i32* %tt.i.i to i64
  call void @printLoadAddr(i64 %114, i32 357, i32 0, i32 0)
  %115 = load i32, i32* %tt.i.i, align 4
  call void @printDDep(i32 354, i32 357)
  call void @printDDep(i32 354, i32 357)
  %116 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %116, i32 360, i32 0, i32 0)
  %117 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 330, i32 360)
  call void @printDDep(i32 347, i32 360)
  %xor3.i.i = xor i32 %117, %115
  %118 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %118, i32 364, i32 0, i32 0)
  store i32 %xor3.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 354, i32 364)
  call void @printDDep(i32 360, i32 364)
  %119 = ptrtoint i32* %tt.i.i to i64
  call void @printLoadAddr(i64 %119, i32 367, i32 0, i32 0)
  %120 = load i32, i32* %tt.i.i, align 4
  call void @printDDep(i32 354, i32 367)
  call void @printDDep(i32 357, i32 367)
  %shl.i.i = shl i32 %120, 4
  %121 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %121, i32 371, i32 0, i32 0)
  %122 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 340, i32 371)
  call void @printDDep(i32 343, i32 371)
  %xor4.i.i = xor i32 %122, %shl.i.i
  %123 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %123, i32 375, i32 0, i32 0)
  store i32 %xor4.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 364, i32 375)
  call void @printDDep(i32 371, i32 375)
  %124 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %124, i32 378, i32 0, i32 0)
  %125 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 364, i32 378)
  call void @printDDep(i32 364, i32 378)
  %shr5.i.i = lshr i32 %125, 16
  %126 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %126, i32 382, i32 0, i32 0)
  %127 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 375, i32 382)
  call void @printDDep(i32 375, i32 382)
  %xor6.i.i = xor i32 %shr5.i.i, %127
  %conv7.i.i = zext i32 %xor6.i.i to i64
  %and8.i.i = and i64 %conv7.i.i, 65535
  %conv9.i.i = trunc i64 %and8.i.i to i32
  %128 = ptrtoint i32* %tt.i.i to i64
  call void @printStoreAddr(i64 %128, i32 389, i32 0, i32 0)
  store i32 %conv9.i.i, i32* %tt.i.i, align 4
  call void @printDDep(i32 375, i32 389)
  call void @printDDep(i32 367, i32 389)
  %129 = ptrtoint i32* %tt.i.i to i64
  call void @printLoadAddr(i64 %129, i32 392, i32 0, i32 0)
  %130 = load i32, i32* %tt.i.i, align 4
  call void @printDDep(i32 389, i32 392)
  call void @printDDep(i32 389, i32 392)
  %131 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %131, i32 395, i32 0, i32 0)
  %132 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 375, i32 395)
  call void @printDDep(i32 382, i32 395)
  %xor10.i.i = xor i32 %132, %130
  %133 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %133, i32 399, i32 0, i32 0)
  store i32 %xor10.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 389, i32 399)
  call void @printDDep(i32 395, i32 399)
  %134 = ptrtoint i32* %tt.i.i to i64
  call void @printLoadAddr(i64 %134, i32 402, i32 0, i32 0)
  %135 = load i32, i32* %tt.i.i, align 4
  call void @printDDep(i32 389, i32 402)
  call void @printDDep(i32 392, i32 402)
  %shl11.i.i = shl i32 %135, 16
  %136 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %136, i32 406, i32 0, i32 0)
  %137 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 364, i32 406)
  call void @printDDep(i32 378, i32 406)
  %xor12.i.i = xor i32 %137, %shl11.i.i
  %138 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %138, i32 410, i32 0, i32 0)
  store i32 %xor12.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 399, i32 410)
  call void @printDDep(i32 406, i32 410)
  %139 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %139, i32 413, i32 0, i32 0)
  %140 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 399, i32 413)
  call void @printDDep(i32 399, i32 413)
  %shr13.i.i = lshr i32 %140, 2
  %141 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %141, i32 417, i32 0, i32 0)
  %142 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 410, i32 417)
  call void @printDDep(i32 410, i32 417)
  %xor14.i.i = xor i32 %shr13.i.i, %142
  %conv15.i.i = zext i32 %xor14.i.i to i64
  %and16.i.i = and i64 %conv15.i.i, 858993459
  %conv17.i.i = trunc i64 %and16.i.i to i32
  %143 = ptrtoint i32* %tt.i.i to i64
  call void @printStoreAddr(i64 %143, i32 424, i32 0, i32 0)
  store i32 %conv17.i.i, i32* %tt.i.i, align 4
  call void @printDDep(i32 410, i32 424)
  call void @printDDep(i32 402, i32 424)
  %144 = ptrtoint i32* %tt.i.i to i64
  call void @printLoadAddr(i64 %144, i32 427, i32 0, i32 0)
  %145 = load i32, i32* %tt.i.i, align 4
  call void @printDDep(i32 424, i32 427)
  call void @printDDep(i32 424, i32 427)
  %146 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %146, i32 430, i32 0, i32 0)
  %147 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 410, i32 430)
  call void @printDDep(i32 417, i32 430)
  %xor18.i.i = xor i32 %147, %145
  %148 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %148, i32 434, i32 0, i32 0)
  store i32 %xor18.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 424, i32 434)
  call void @printDDep(i32 430, i32 434)
  %149 = ptrtoint i32* %tt.i.i to i64
  call void @printLoadAddr(i64 %149, i32 437, i32 0, i32 0)
  %150 = load i32, i32* %tt.i.i, align 4
  call void @printDDep(i32 424, i32 437)
  call void @printDDep(i32 427, i32 437)
  %shl19.i.i = shl i32 %150, 2
  %151 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %151, i32 441, i32 0, i32 0)
  %152 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 399, i32 441)
  call void @printDDep(i32 413, i32 441)
  %xor20.i.i = xor i32 %152, %shl19.i.i
  %153 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %153, i32 445, i32 0, i32 0)
  store i32 %xor20.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 434, i32 445)
  call void @printDDep(i32 441, i32 445)
  %154 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %154, i32 448, i32 0, i32 0)
  %155 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 434, i32 448)
  call void @printDDep(i32 434, i32 448)
  %shr21.i.i = lshr i32 %155, 8
  %156 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %156, i32 452, i32 0, i32 0)
  %157 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 445, i32 452)
  call void @printDDep(i32 445, i32 452)
  %xor22.i.i = xor i32 %shr21.i.i, %157
  %conv23.i.i = zext i32 %xor22.i.i to i64
  %and24.i.i = and i64 %conv23.i.i, 16711935
  %conv25.i.i = trunc i64 %and24.i.i to i32
  %158 = ptrtoint i32* %tt.i.i to i64
  call void @printStoreAddr(i64 %158, i32 459, i32 0, i32 0)
  store i32 %conv25.i.i, i32* %tt.i.i, align 4
  call void @printDDep(i32 445, i32 459)
  call void @printDDep(i32 437, i32 459)
  %159 = ptrtoint i32* %tt.i.i to i64
  call void @printLoadAddr(i64 %159, i32 462, i32 0, i32 0)
  %160 = load i32, i32* %tt.i.i, align 4
  call void @printDDep(i32 459, i32 462)
  call void @printDDep(i32 459, i32 462)
  %161 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %161, i32 465, i32 0, i32 0)
  %162 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 445, i32 465)
  call void @printDDep(i32 452, i32 465)
  %xor26.i.i = xor i32 %162, %160
  %163 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %163, i32 469, i32 0, i32 0)
  store i32 %xor26.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 459, i32 469)
  call void @printDDep(i32 465, i32 469)
  %164 = ptrtoint i32* %tt.i.i to i64
  call void @printLoadAddr(i64 %164, i32 472, i32 0, i32 0)
  %165 = load i32, i32* %tt.i.i, align 4
  call void @printDDep(i32 459, i32 472)
  call void @printDDep(i32 462, i32 472)
  %shl27.i.i = shl i32 %165, 8
  %166 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %166, i32 476, i32 0, i32 0)
  %167 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 434, i32 476)
  call void @printDDep(i32 448, i32 476)
  %xor28.i.i = xor i32 %167, %shl27.i.i
  %168 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %168, i32 480, i32 0, i32 0)
  store i32 %xor28.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 469, i32 480)
  call void @printDDep(i32 476, i32 480)
  %169 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %169, i32 483, i32 0, i32 0)
  %170 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 469, i32 483)
  call void @printDDep(i32 469, i32 483)
  %shr29.i.i = lshr i32 %170, 1
  %171 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %171, i32 487, i32 0, i32 0)
  %172 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 480, i32 487)
  call void @printDDep(i32 480, i32 487)
  %xor30.i.i = xor i32 %shr29.i.i, %172
  %conv31.i.i = zext i32 %xor30.i.i to i64
  %and32.i.i = and i64 %conv31.i.i, 1431655765
  %conv33.i.i = trunc i64 %and32.i.i to i32
  %173 = ptrtoint i32* %tt.i.i to i64
  call void @printStoreAddr(i64 %173, i32 494, i32 0, i32 0)
  store i32 %conv33.i.i, i32* %tt.i.i, align 4
  call void @printDDep(i32 480, i32 494)
  call void @printDDep(i32 472, i32 494)
  %174 = ptrtoint i32* %tt.i.i to i64
  call void @printLoadAddr(i64 %174, i32 497, i32 0, i32 0)
  %175 = load i32, i32* %tt.i.i, align 4
  call void @printDDep(i32 494, i32 497)
  call void @printDDep(i32 494, i32 497)
  %176 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %176, i32 500, i32 0, i32 0)
  %177 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 480, i32 500)
  call void @printDDep(i32 487, i32 500)
  %xor34.i.i = xor i32 %177, %175
  %178 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %178, i32 504, i32 0, i32 0)
  store i32 %xor34.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 494, i32 504)
  call void @printDDep(i32 500, i32 504)
  %179 = ptrtoint i32* %tt.i.i to i64
  call void @printLoadAddr(i64 %179, i32 507, i32 0, i32 0)
  %180 = load i32, i32* %tt.i.i, align 4
  call void @printDDep(i32 494, i32 507)
  call void @printDDep(i32 497, i32 507)
  %shl35.i.i = shl i32 %180, 1
  %181 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %181, i32 511, i32 0, i32 0)
  %182 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 469, i32 511)
  call void @printDDep(i32 483, i32 511)
  %xor36.i.i = xor i32 %182, %shl35.i.i
  %183 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %183, i32 515, i32 0, i32 0)
  store i32 %xor36.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 504, i32 515)
  call void @printDDep(i32 511, i32 515)
  %184 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %184, i32 518, i32 0, i32 0)
  %185 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 504, i32 518)
  call void @printDDep(i32 504, i32 518)
  %186 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %185) #5, !srcloc !2
  %187 = ptrtoint i32* %ret.i.i to i64
  call void @printStoreAddr(i64 %187, i32 522, i32 0, i32 0)
  store i32 %186, i32* %ret.i.i, align 4
  call void @printDDep(i32 515, i32 522)
  call void @printDDep(i32 123, i32 522)
  %188 = ptrtoint i32* %ret.i.i to i64
  call void @printLoadAddr(i64 %188, i32 525, i32 0, i32 0)
  %189 = load i32, i32* %ret.i.i, align 4
  call void @printDDep(i32 522, i32 525)
  call void @printDDep(i32 522, i32 525)
  %190 = ptrtoint i32* %tmp.i.i to i64
  call void @printStoreAddr(i64 %190, i32 528, i32 0, i32 0)
  store i32 %189, i32* %tmp.i.i, align 4
  call void @printDDep(i32 522, i32 528)
  call void @printDDep(i32 123, i32 528)
  %191 = ptrtoint i32* %tmp.i.i to i64
  call void @printLoadAddr(i64 %191, i32 531, i32 0, i32 0)
  %192 = load i32, i32* %tmp.i.i, align 4
  call void @printDDep(i32 528, i32 531)
  call void @printDDep(i32 528, i32 531)
  %conv37.i.i = zext i32 %192 to i64
  %and38.i.i = and i64 %conv37.i.i, 4294967295
  %conv39.i.i = trunc i64 %and38.i.i to i32
  %193 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %193, i32 537, i32 0, i32 0)
  store i32 %conv39.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 528, i32 537)
  call void @printDDep(i32 518, i32 537)
  %194 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %194, i32 540, i32 0, i32 0)
  %195 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 515, i32 540)
  call void @printDDep(i32 515, i32 540)
  %196 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %195) #5, !srcloc !3
  %197 = ptrtoint i32* %ret40.i.i to i64
  call void @printStoreAddr(i64 %197, i32 544, i32 0, i32 0)
  store i32 %196, i32* %ret40.i.i, align 4
  call void @printDDep(i32 537, i32 544)
  call void @printDDep(i32 123, i32 544)
  %198 = ptrtoint i32* %ret40.i.i to i64
  call void @printLoadAddr(i64 %198, i32 547, i32 0, i32 0)
  %199 = load i32, i32* %ret40.i.i, align 4
  call void @printDDep(i32 544, i32 547)
  call void @printDDep(i32 544, i32 547)
  %200 = ptrtoint i32* %tmp41.i.i to i64
  call void @printStoreAddr(i64 %200, i32 550, i32 0, i32 0)
  store i32 %199, i32* %tmp41.i.i, align 4
  call void @printDDep(i32 544, i32 550)
  call void @printDDep(i32 123, i32 550)
  %201 = ptrtoint i32* %tmp41.i.i to i64
  call void @printLoadAddr(i64 %201, i32 553, i32 0, i32 0)
  %202 = load i32, i32* %tmp41.i.i, align 4
  call void @printDDep(i32 550, i32 553)
  call void @printDDep(i32 550, i32 553)
  %conv42.i.i = zext i32 %202 to i64
  %and43.i.i = and i64 %conv42.i.i, 4294967295
  %conv44.i.i = trunc i64 %and43.i.i to i32
  %203 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %203, i32 559, i32 0, i32 0)
  store i32 %conv44.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 550, i32 559)
  call void @printDDep(i32 540, i32 559)
  %204 = ptrtoint %struct.DES_ks** %ks.addr.i.i to i64
  call void @printLoadAddr(i64 %204, i32 562, i32 0, i32 0)
  %205 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i.i, align 8
  call void @printDDep(i32 318, i32 562)
  call void @printDDep(i32 318, i32 562)
  %ks45.i.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %205, i32 0, i32 0
  %arraydecay.i.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i.i, i64 0, i64 0
  %deslong.i.i = bitcast %union.anon* %arraydecay.i.i to [2 x i32]*
  %arraydecay46.i.i = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i.i, i64 0, i64 0
  %206 = ptrtoint i32** %s.i.i to i64
  call void @printStoreAddr(i64 %206, i32 569, i32 0, i32 0)
  store i32* %arraydecay46.i.i, i32** %s.i.i, align 8
  call void @printDDep(i32 559, i32 569)
  call void @printDDep(i32 337, i32 569)
  %207 = ptrtoint i32* %enc.addr.i.i to i64
  call void @printLoadAddr(i64 %207, i32 572, i32 0, i32 0)
  %208 = load i32, i32* %enc.addr.i.i, align 4
  call void @printDDep(i32 321, i32 572)
  call void @printDDep(i32 321, i32 572)
  %tobool.i.i = icmp ne i32 %208, 0
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %209 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %209, i32 577, i32 0, i32 0)
  %210 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 537, i32 577)
  call void @printDDep(i32 537, i32 577)
  call void @printCDep(i32 572, i32 577)
  %211 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %211, i32 581, i32 0, i32 0)
  %212 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 581)
  call void @printDDep(i32 569, i32 581)
  call void @printCDep(i32 572, i32 581)
  %213 = ptrtoint i32* %212 to i64
  call void @printLoadAddr(i64 %213, i32 585, i32 0, i32 0)
  %214 = load i32, i32* %212, align 4
  call void @printDDep(i32 569, i32 585)
  call void @printDDep(i32 581, i32 585)
  call void @printCDep(i32 572, i32 585)
  %xor48.i.i = xor i32 %210, %214
  %215 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %215, i32 590, i32 0, i32 0)
  store i32 %xor48.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 569, i32 590)
  call void @printDDep(i32 585, i32 590)
  call void @printCDep(i32 572, i32 590)
  %216 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %216, i32 594, i32 0, i32 0)
  %217 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 537, i32 594)
  call void @printDDep(i32 585, i32 594)
  call void @printCDep(i32 572, i32 594)
  %218 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %218, i32 598, i32 0, i32 0)
  %219 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 598)
  call void @printDDep(i32 585, i32 598)
  call void @printCDep(i32 572, i32 598)
  %arrayidx49.i.i = getelementptr inbounds i32, i32* %219, i64 1
  %220 = ptrtoint i32* %arrayidx49.i.i to i64
  call void @printLoadAddr(i64 %220, i32 603, i32 0, i32 0)
  %221 = load i32, i32* %arrayidx49.i.i, align 4
  call void @printDDep(i32 569, i32 603)
  call void @printDDep(i32 598, i32 603)
  call void @printCDep(i32 572, i32 603)
  %xor50.i.i = xor i32 %217, %221
  %222 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %222, i32 608, i32 0, i32 0)
  store i32 %xor50.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 590, i32 608)
  call void @printDDep(i32 603, i32 608)
  call void @printCDep(i32 572, i32 608)
  %223 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %223, i32 612, i32 0, i32 0)
  %224 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 608, i32 612)
  call void @printDDep(i32 608, i32 612)
  call void @printCDep(i32 572, i32 612)
  %225 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %224) #5, !srcloc !4
  %226 = ptrtoint i32* %ret51.i.i to i64
  call void @printStoreAddr(i64 %226, i32 617, i32 0, i32 0)
  store i32 %225, i32* %ret51.i.i, align 4
  call void @printDDep(i32 608, i32 617)
  call void @printDDep(i32 123, i32 617)
  call void @printCDep(i32 572, i32 617)
  %227 = ptrtoint i32* %ret51.i.i to i64
  call void @printLoadAddr(i64 %227, i32 621, i32 0, i32 0)
  %228 = load i32, i32* %ret51.i.i, align 4
  call void @printDDep(i32 617, i32 621)
  call void @printDDep(i32 617, i32 621)
  call void @printCDep(i32 572, i32 621)
  %229 = ptrtoint i32* %tmp52.i.i to i64
  call void @printStoreAddr(i64 %229, i32 625, i32 0, i32 0)
  store i32 %228, i32* %tmp52.i.i, align 4
  call void @printDDep(i32 617, i32 625)
  call void @printDDep(i32 123, i32 625)
  call void @printCDep(i32 572, i32 625)
  %230 = ptrtoint i32* %tmp52.i.i to i64
  call void @printLoadAddr(i64 %230, i32 629, i32 0, i32 0)
  %231 = load i32, i32* %tmp52.i.i, align 4
  call void @printDDep(i32 625, i32 629)
  call void @printDDep(i32 625, i32 629)
  call void @printCDep(i32 572, i32 629)
  %232 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %232, i32 633, i32 0, i32 0)
  store i32 %231, i32* %t.i.i, align 4
  call void @printDDep(i32 625, i32 633)
  call void @printDDep(i32 612, i32 633)
  call void @printCDep(i32 572, i32 633)
  %233 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %233, i32 637, i32 0, i32 0)
  %234 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 590, i32 637)
  call void @printDDep(i32 603, i32 637)
  call void @printCDep(i32 572, i32 637)
  %shr53.i.i = lshr i32 %234, 2
  %and54.i.i = and i32 %shr53.i.i, 63
  %idxprom.i.i = zext i32 %and54.i.i to i64
  %arrayidx55.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i.i
  %235 = ptrtoint i32* %arrayidx55.i.i to i64
  call void @printLoadAddr(i64 %235, i32 645, i32 0, i32 0)
  %236 = load i32, i32* %arrayidx55.i.i, align 4
  call void @printDDep(i32 603, i32 645)
  call void @printCDep(i32 572, i32 645)
  %237 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %237, i32 648, i32 0, i32 0)
  %238 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 590, i32 648)
  call void @printDDep(i32 637, i32 648)
  call void @printCDep(i32 572, i32 648)
  %shr56.i.i = lshr i32 %238, 10
  %and57.i.i = and i32 %shr56.i.i, 63
  %idxprom58.i.i = zext i32 %and57.i.i to i64
  %arrayidx59.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i.i
  %239 = ptrtoint i32* %arrayidx59.i.i to i64
  call void @printLoadAddr(i64 %239, i32 656, i32 0, i32 0)
  %240 = load i32, i32* %arrayidx59.i.i, align 4
  call void @printDDep(i32 603, i32 656)
  call void @printCDep(i32 572, i32 656)
  %xor60.i.i = xor i32 %236, %240
  %241 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %241, i32 660, i32 0, i32 0)
  %242 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 590, i32 660)
  call void @printDDep(i32 648, i32 660)
  call void @printCDep(i32 572, i32 660)
  %shr61.i.i = lshr i32 %242, 18
  %and62.i.i = and i32 %shr61.i.i, 63
  %idxprom63.i.i = zext i32 %and62.i.i to i64
  %arrayidx64.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i.i
  %243 = ptrtoint i32* %arrayidx64.i.i to i64
  call void @printLoadAddr(i64 %243, i32 668, i32 0, i32 0)
  %244 = load i32, i32* %arrayidx64.i.i, align 4
  call void @printDDep(i32 603, i32 668)
  call void @printCDep(i32 572, i32 668)
  %xor65.i.i = xor i32 %xor60.i.i, %244
  %245 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %245, i32 672, i32 0, i32 0)
  %246 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 590, i32 672)
  call void @printDDep(i32 660, i32 672)
  call void @printCDep(i32 572, i32 672)
  %shr66.i.i = lshr i32 %246, 26
  %idxprom68.i.i = zext i32 %shr66.i.i to i64
  %arrayidx69.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i.i
  %247 = ptrtoint i32* %arrayidx69.i.i to i64
  call void @printLoadAddr(i64 %247, i32 679, i32 0, i32 0)
  %248 = load i32, i32* %arrayidx69.i.i, align 4
  call void @printDDep(i32 603, i32 679)
  call void @printCDep(i32 572, i32 679)
  %xor70.i.i = xor i32 %xor65.i.i, %248
  %249 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %249, i32 683, i32 0, i32 0)
  %250 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 633, i32 683)
  call void @printDDep(i32 633, i32 683)
  call void @printCDep(i32 572, i32 683)
  %shr71.i.i = lshr i32 %250, 2
  %and72.i.i = and i32 %shr71.i.i, 63
  %idxprom73.i.i = zext i32 %and72.i.i to i64
  %arrayidx74.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i.i
  %251 = ptrtoint i32* %arrayidx74.i.i to i64
  call void @printLoadAddr(i64 %251, i32 691, i32 0, i32 0)
  %252 = load i32, i32* %arrayidx74.i.i, align 4
  call void @printDDep(i32 603, i32 691)
  call void @printCDep(i32 572, i32 691)
  %xor75.i.i = xor i32 %xor70.i.i, %252
  %253 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %253, i32 695, i32 0, i32 0)
  %254 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 633, i32 695)
  call void @printDDep(i32 683, i32 695)
  call void @printCDep(i32 572, i32 695)
  %shr76.i.i = lshr i32 %254, 10
  %and77.i.i = and i32 %shr76.i.i, 63
  %idxprom78.i.i = zext i32 %and77.i.i to i64
  %arrayidx79.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i.i
  %255 = ptrtoint i32* %arrayidx79.i.i to i64
  call void @printLoadAddr(i64 %255, i32 703, i32 0, i32 0)
  %256 = load i32, i32* %arrayidx79.i.i, align 4
  call void @printDDep(i32 603, i32 703)
  call void @printCDep(i32 572, i32 703)
  %xor80.i.i = xor i32 %xor75.i.i, %256
  %257 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %257, i32 707, i32 0, i32 0)
  %258 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 633, i32 707)
  call void @printDDep(i32 695, i32 707)
  call void @printCDep(i32 572, i32 707)
  %shr81.i.i = lshr i32 %258, 18
  %and82.i.i = and i32 %shr81.i.i, 63
  %idxprom83.i.i = zext i32 %and82.i.i to i64
  %arrayidx84.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i.i
  %259 = ptrtoint i32* %arrayidx84.i.i to i64
  call void @printLoadAddr(i64 %259, i32 715, i32 0, i32 0)
  %260 = load i32, i32* %arrayidx84.i.i, align 4
  call void @printDDep(i32 603, i32 715)
  call void @printCDep(i32 572, i32 715)
  %xor85.i.i = xor i32 %xor80.i.i, %260
  %261 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %261, i32 719, i32 0, i32 0)
  %262 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 633, i32 719)
  call void @printDDep(i32 707, i32 719)
  call void @printCDep(i32 572, i32 719)
  %shr86.i.i = lshr i32 %262, 26
  %idxprom88.i.i = zext i32 %shr86.i.i to i64
  %arrayidx89.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i.i
  %263 = ptrtoint i32* %arrayidx89.i.i to i64
  call void @printLoadAddr(i64 %263, i32 726, i32 0, i32 0)
  %264 = load i32, i32* %arrayidx89.i.i, align 4
  call void @printDDep(i32 603, i32 726)
  call void @printCDep(i32 572, i32 726)
  %xor90.i.i = xor i32 %xor85.i.i, %264
  %265 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %265, i32 730, i32 0, i32 0)
  %266 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 559, i32 730)
  call void @printDDep(i32 603, i32 730)
  call void @printCDep(i32 572, i32 730)
  %xor91.i.i = xor i32 %266, %xor90.i.i
  %267 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %267, i32 735, i32 0, i32 0)
  store i32 %xor91.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 633, i32 735)
  call void @printDDep(i32 730, i32 735)
  call void @printCDep(i32 572, i32 735)
  %268 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %268, i32 739, i32 0, i32 0)
  %269 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 735, i32 739)
  call void @printDDep(i32 735, i32 739)
  call void @printCDep(i32 572, i32 739)
  %270 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %270, i32 743, i32 0, i32 0)
  %271 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 743)
  call void @printDDep(i32 603, i32 743)
  call void @printCDep(i32 572, i32 743)
  %arrayidx92.i.i = getelementptr inbounds i32, i32* %271, i64 2
  %272 = ptrtoint i32* %arrayidx92.i.i to i64
  call void @printLoadAddr(i64 %272, i32 748, i32 0, i32 0)
  %273 = load i32, i32* %arrayidx92.i.i, align 4
  call void @printDDep(i32 119, i32 748)
  call void @printDDep(i32 743, i32 748)
  call void @printCDep(i32 572, i32 748)
  %xor93.i.i = xor i32 %269, %273
  %274 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %274, i32 753, i32 0, i32 0)
  store i32 %xor93.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 735, i32 753)
  call void @printDDep(i32 748, i32 753)
  call void @printCDep(i32 572, i32 753)
  %275 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %275, i32 757, i32 0, i32 0)
  %276 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 735, i32 757)
  call void @printDDep(i32 748, i32 757)
  call void @printCDep(i32 572, i32 757)
  %277 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %277, i32 761, i32 0, i32 0)
  %278 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 761)
  call void @printDDep(i32 748, i32 761)
  call void @printCDep(i32 572, i32 761)
  %arrayidx94.i.i = getelementptr inbounds i32, i32* %278, i64 3
  %279 = ptrtoint i32* %arrayidx94.i.i to i64
  call void @printLoadAddr(i64 %279, i32 766, i32 0, i32 0)
  %280 = load i32, i32* %arrayidx94.i.i, align 4
  call void @printDDep(i32 119, i32 766)
  call void @printDDep(i32 761, i32 766)
  call void @printCDep(i32 572, i32 766)
  %xor95.i.i = xor i32 %276, %280
  %281 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %281, i32 771, i32 0, i32 0)
  store i32 %xor95.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 753, i32 771)
  call void @printDDep(i32 766, i32 771)
  call void @printCDep(i32 572, i32 771)
  %282 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %282, i32 775, i32 0, i32 0)
  %283 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 771, i32 775)
  call void @printDDep(i32 771, i32 775)
  call void @printCDep(i32 572, i32 775)
  %284 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %283) #5, !srcloc !5
  %285 = ptrtoint i32* %ret96.i.i to i64
  call void @printStoreAddr(i64 %285, i32 780, i32 0, i32 0)
  store i32 %284, i32* %ret96.i.i, align 4
  call void @printDDep(i32 771, i32 780)
  call void @printDDep(i32 123, i32 780)
  call void @printCDep(i32 572, i32 780)
  %286 = ptrtoint i32* %ret96.i.i to i64
  call void @printLoadAddr(i64 %286, i32 784, i32 0, i32 0)
  %287 = load i32, i32* %ret96.i.i, align 4
  call void @printDDep(i32 780, i32 784)
  call void @printDDep(i32 780, i32 784)
  call void @printCDep(i32 572, i32 784)
  %288 = ptrtoint i32* %tmp97.i.i to i64
  call void @printStoreAddr(i64 %288, i32 788, i32 0, i32 0)
  store i32 %287, i32* %tmp97.i.i, align 4
  call void @printDDep(i32 780, i32 788)
  call void @printDDep(i32 123, i32 788)
  call void @printCDep(i32 572, i32 788)
  %289 = ptrtoint i32* %tmp97.i.i to i64
  call void @printLoadAddr(i64 %289, i32 792, i32 0, i32 0)
  %290 = load i32, i32* %tmp97.i.i, align 4
  call void @printDDep(i32 788, i32 792)
  call void @printDDep(i32 788, i32 792)
  call void @printCDep(i32 572, i32 792)
  %291 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %291, i32 796, i32 0, i32 0)
  store i32 %290, i32* %t.i.i, align 4
  call void @printDDep(i32 788, i32 796)
  call void @printDDep(i32 775, i32 796)
  call void @printCDep(i32 572, i32 796)
  %292 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %292, i32 800, i32 0, i32 0)
  %293 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 753, i32 800)
  call void @printDDep(i32 766, i32 800)
  call void @printCDep(i32 572, i32 800)
  %shr98.i.i = lshr i32 %293, 2
  %and99.i.i = and i32 %shr98.i.i, 63
  %idxprom100.i.i = zext i32 %and99.i.i to i64
  %arrayidx101.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i.i
  %294 = ptrtoint i32* %arrayidx101.i.i to i64
  call void @printLoadAddr(i64 %294, i32 808, i32 0, i32 0)
  %295 = load i32, i32* %arrayidx101.i.i, align 4
  call void @printDDep(i32 766, i32 808)
  call void @printCDep(i32 572, i32 808)
  %296 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %296, i32 811, i32 0, i32 0)
  %297 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 753, i32 811)
  call void @printDDep(i32 800, i32 811)
  call void @printCDep(i32 572, i32 811)
  %shr102.i.i = lshr i32 %297, 10
  %and103.i.i = and i32 %shr102.i.i, 63
  %idxprom104.i.i = zext i32 %and103.i.i to i64
  %arrayidx105.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i.i
  %298 = ptrtoint i32* %arrayidx105.i.i to i64
  call void @printLoadAddr(i64 %298, i32 819, i32 0, i32 0)
  %299 = load i32, i32* %arrayidx105.i.i, align 4
  call void @printDDep(i32 766, i32 819)
  call void @printCDep(i32 572, i32 819)
  %xor106.i.i = xor i32 %295, %299
  %300 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %300, i32 823, i32 0, i32 0)
  %301 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 753, i32 823)
  call void @printDDep(i32 811, i32 823)
  call void @printCDep(i32 572, i32 823)
  %shr107.i.i = lshr i32 %301, 18
  %and108.i.i = and i32 %shr107.i.i, 63
  %idxprom109.i.i = zext i32 %and108.i.i to i64
  %arrayidx110.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i.i
  %302 = ptrtoint i32* %arrayidx110.i.i to i64
  call void @printLoadAddr(i64 %302, i32 831, i32 0, i32 0)
  %303 = load i32, i32* %arrayidx110.i.i, align 4
  call void @printDDep(i32 766, i32 831)
  call void @printCDep(i32 572, i32 831)
  %xor111.i.i = xor i32 %xor106.i.i, %303
  %304 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %304, i32 835, i32 0, i32 0)
  %305 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 753, i32 835)
  call void @printDDep(i32 823, i32 835)
  call void @printCDep(i32 572, i32 835)
  %shr112.i.i = lshr i32 %305, 26
  %idxprom114.i.i = zext i32 %shr112.i.i to i64
  %arrayidx115.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i.i
  %306 = ptrtoint i32* %arrayidx115.i.i to i64
  call void @printLoadAddr(i64 %306, i32 842, i32 0, i32 0)
  %307 = load i32, i32* %arrayidx115.i.i, align 4
  call void @printDDep(i32 766, i32 842)
  call void @printCDep(i32 572, i32 842)
  %xor116.i.i = xor i32 %xor111.i.i, %307
  %308 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %308, i32 846, i32 0, i32 0)
  %309 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 796, i32 846)
  call void @printDDep(i32 796, i32 846)
  call void @printCDep(i32 572, i32 846)
  %shr117.i.i = lshr i32 %309, 2
  %and118.i.i = and i32 %shr117.i.i, 63
  %idxprom119.i.i = zext i32 %and118.i.i to i64
  %arrayidx120.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i.i
  %310 = ptrtoint i32* %arrayidx120.i.i to i64
  call void @printLoadAddr(i64 %310, i32 854, i32 0, i32 0)
  %311 = load i32, i32* %arrayidx120.i.i, align 4
  call void @printDDep(i32 766, i32 854)
  call void @printCDep(i32 572, i32 854)
  %xor121.i.i = xor i32 %xor116.i.i, %311
  %312 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %312, i32 858, i32 0, i32 0)
  %313 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 796, i32 858)
  call void @printDDep(i32 846, i32 858)
  call void @printCDep(i32 572, i32 858)
  %shr122.i.i = lshr i32 %313, 10
  %and123.i.i = and i32 %shr122.i.i, 63
  %idxprom124.i.i = zext i32 %and123.i.i to i64
  %arrayidx125.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i.i
  %314 = ptrtoint i32* %arrayidx125.i.i to i64
  call void @printLoadAddr(i64 %314, i32 866, i32 0, i32 0)
  %315 = load i32, i32* %arrayidx125.i.i, align 4
  call void @printDDep(i32 766, i32 866)
  call void @printCDep(i32 572, i32 866)
  %xor126.i.i = xor i32 %xor121.i.i, %315
  %316 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %316, i32 870, i32 0, i32 0)
  %317 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 796, i32 870)
  call void @printDDep(i32 858, i32 870)
  call void @printCDep(i32 572, i32 870)
  %shr127.i.i = lshr i32 %317, 18
  %and128.i.i = and i32 %shr127.i.i, 63
  %idxprom129.i.i = zext i32 %and128.i.i to i64
  %arrayidx130.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i.i
  %318 = ptrtoint i32* %arrayidx130.i.i to i64
  call void @printLoadAddr(i64 %318, i32 878, i32 0, i32 0)
  %319 = load i32, i32* %arrayidx130.i.i, align 4
  call void @printDDep(i32 766, i32 878)
  call void @printCDep(i32 572, i32 878)
  %xor131.i.i = xor i32 %xor126.i.i, %319
  %320 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %320, i32 882, i32 0, i32 0)
  %321 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 796, i32 882)
  call void @printDDep(i32 870, i32 882)
  call void @printCDep(i32 572, i32 882)
  %shr132.i.i = lshr i32 %321, 26
  %idxprom134.i.i = zext i32 %shr132.i.i to i64
  %arrayidx135.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i.i
  %322 = ptrtoint i32* %arrayidx135.i.i to i64
  call void @printLoadAddr(i64 %322, i32 889, i32 0, i32 0)
  %323 = load i32, i32* %arrayidx135.i.i, align 4
  call void @printDDep(i32 766, i32 889)
  call void @printCDep(i32 572, i32 889)
  %xor136.i.i = xor i32 %xor131.i.i, %323
  %324 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %324, i32 893, i32 0, i32 0)
  %325 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 537, i32 893)
  call void @printDDep(i32 766, i32 893)
  call void @printCDep(i32 572, i32 893)
  %xor137.i.i = xor i32 %325, %xor136.i.i
  %326 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %326, i32 898, i32 0, i32 0)
  store i32 %xor137.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 796, i32 898)
  call void @printDDep(i32 893, i32 898)
  call void @printCDep(i32 572, i32 898)
  %327 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %327, i32 902, i32 0, i32 0)
  %328 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 898, i32 902)
  call void @printDDep(i32 898, i32 902)
  call void @printCDep(i32 572, i32 902)
  %329 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %329, i32 906, i32 0, i32 0)
  %330 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 906)
  call void @printDDep(i32 766, i32 906)
  call void @printCDep(i32 572, i32 906)
  %arrayidx138.i.i = getelementptr inbounds i32, i32* %330, i64 4
  %331 = ptrtoint i32* %arrayidx138.i.i to i64
  call void @printLoadAddr(i64 %331, i32 911, i32 0, i32 0)
  %332 = load i32, i32* %arrayidx138.i.i, align 4
  call void @printDDep(i32 119, i32 911)
  call void @printDDep(i32 906, i32 911)
  call void @printCDep(i32 572, i32 911)
  %xor139.i.i = xor i32 %328, %332
  %333 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %333, i32 916, i32 0, i32 0)
  store i32 %xor139.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 898, i32 916)
  call void @printDDep(i32 911, i32 916)
  call void @printCDep(i32 572, i32 916)
  %334 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %334, i32 920, i32 0, i32 0)
  %335 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 898, i32 920)
  call void @printDDep(i32 911, i32 920)
  call void @printCDep(i32 572, i32 920)
  %336 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %336, i32 924, i32 0, i32 0)
  %337 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 924)
  call void @printDDep(i32 911, i32 924)
  call void @printCDep(i32 572, i32 924)
  %arrayidx140.i.i = getelementptr inbounds i32, i32* %337, i64 5
  %338 = ptrtoint i32* %arrayidx140.i.i to i64
  call void @printLoadAddr(i64 %338, i32 929, i32 0, i32 0)
  %339 = load i32, i32* %arrayidx140.i.i, align 4
  call void @printDDep(i32 119, i32 929)
  call void @printDDep(i32 924, i32 929)
  call void @printCDep(i32 572, i32 929)
  %xor141.i.i = xor i32 %335, %339
  %340 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %340, i32 934, i32 0, i32 0)
  store i32 %xor141.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 916, i32 934)
  call void @printDDep(i32 929, i32 934)
  call void @printCDep(i32 572, i32 934)
  %341 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %341, i32 938, i32 0, i32 0)
  %342 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 934, i32 938)
  call void @printDDep(i32 934, i32 938)
  call void @printCDep(i32 572, i32 938)
  %343 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %342) #5, !srcloc !6
  %344 = ptrtoint i32* %ret142.i.i to i64
  call void @printStoreAddr(i64 %344, i32 943, i32 0, i32 0)
  store i32 %343, i32* %ret142.i.i, align 4
  call void @printDDep(i32 934, i32 943)
  call void @printDDep(i32 123, i32 943)
  call void @printCDep(i32 572, i32 943)
  %345 = ptrtoint i32* %ret142.i.i to i64
  call void @printLoadAddr(i64 %345, i32 947, i32 0, i32 0)
  %346 = load i32, i32* %ret142.i.i, align 4
  call void @printDDep(i32 943, i32 947)
  call void @printDDep(i32 943, i32 947)
  call void @printCDep(i32 572, i32 947)
  %347 = ptrtoint i32* %tmp143.i.i to i64
  call void @printStoreAddr(i64 %347, i32 951, i32 0, i32 0)
  store i32 %346, i32* %tmp143.i.i, align 4
  call void @printDDep(i32 943, i32 951)
  call void @printDDep(i32 123, i32 951)
  call void @printCDep(i32 572, i32 951)
  %348 = ptrtoint i32* %tmp143.i.i to i64
  call void @printLoadAddr(i64 %348, i32 955, i32 0, i32 0)
  %349 = load i32, i32* %tmp143.i.i, align 4
  call void @printDDep(i32 951, i32 955)
  call void @printDDep(i32 951, i32 955)
  call void @printCDep(i32 572, i32 955)
  %350 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %350, i32 959, i32 0, i32 0)
  store i32 %349, i32* %t.i.i, align 4
  call void @printDDep(i32 951, i32 959)
  call void @printDDep(i32 938, i32 959)
  call void @printCDep(i32 572, i32 959)
  %351 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %351, i32 963, i32 0, i32 0)
  %352 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 916, i32 963)
  call void @printDDep(i32 929, i32 963)
  call void @printCDep(i32 572, i32 963)
  %shr144.i.i = lshr i32 %352, 2
  %and145.i.i = and i32 %shr144.i.i, 63
  %idxprom146.i.i = zext i32 %and145.i.i to i64
  %arrayidx147.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i.i
  %353 = ptrtoint i32* %arrayidx147.i.i to i64
  call void @printLoadAddr(i64 %353, i32 971, i32 0, i32 0)
  %354 = load i32, i32* %arrayidx147.i.i, align 4
  call void @printDDep(i32 929, i32 971)
  call void @printCDep(i32 572, i32 971)
  %355 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %355, i32 974, i32 0, i32 0)
  %356 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 916, i32 974)
  call void @printDDep(i32 963, i32 974)
  call void @printCDep(i32 572, i32 974)
  %shr148.i.i = lshr i32 %356, 10
  %and149.i.i = and i32 %shr148.i.i, 63
  %idxprom150.i.i = zext i32 %and149.i.i to i64
  %arrayidx151.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i.i
  %357 = ptrtoint i32* %arrayidx151.i.i to i64
  call void @printLoadAddr(i64 %357, i32 982, i32 0, i32 0)
  %358 = load i32, i32* %arrayidx151.i.i, align 4
  call void @printDDep(i32 929, i32 982)
  call void @printCDep(i32 572, i32 982)
  %xor152.i.i = xor i32 %354, %358
  %359 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %359, i32 986, i32 0, i32 0)
  %360 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 916, i32 986)
  call void @printDDep(i32 974, i32 986)
  call void @printCDep(i32 572, i32 986)
  %shr153.i.i = lshr i32 %360, 18
  %and154.i.i = and i32 %shr153.i.i, 63
  %idxprom155.i.i = zext i32 %and154.i.i to i64
  %arrayidx156.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i.i
  %361 = ptrtoint i32* %arrayidx156.i.i to i64
  call void @printLoadAddr(i64 %361, i32 994, i32 0, i32 0)
  %362 = load i32, i32* %arrayidx156.i.i, align 4
  call void @printDDep(i32 929, i32 994)
  call void @printCDep(i32 572, i32 994)
  %xor157.i.i = xor i32 %xor152.i.i, %362
  %363 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %363, i32 998, i32 0, i32 0)
  %364 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 916, i32 998)
  call void @printDDep(i32 986, i32 998)
  call void @printCDep(i32 572, i32 998)
  %shr158.i.i = lshr i32 %364, 26
  %idxprom160.i.i = zext i32 %shr158.i.i to i64
  %arrayidx161.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i.i
  %365 = ptrtoint i32* %arrayidx161.i.i to i64
  call void @printLoadAddr(i64 %365, i32 1005, i32 0, i32 0)
  %366 = load i32, i32* %arrayidx161.i.i, align 4
  call void @printDDep(i32 929, i32 1005)
  call void @printCDep(i32 572, i32 1005)
  %xor162.i.i = xor i32 %xor157.i.i, %366
  %367 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %367, i32 1009, i32 0, i32 0)
  %368 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 959, i32 1009)
  call void @printDDep(i32 959, i32 1009)
  call void @printCDep(i32 572, i32 1009)
  %shr163.i.i = lshr i32 %368, 2
  %and164.i.i = and i32 %shr163.i.i, 63
  %idxprom165.i.i = zext i32 %and164.i.i to i64
  %arrayidx166.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i.i
  %369 = ptrtoint i32* %arrayidx166.i.i to i64
  call void @printLoadAddr(i64 %369, i32 1017, i32 0, i32 0)
  %370 = load i32, i32* %arrayidx166.i.i, align 4
  call void @printDDep(i32 929, i32 1017)
  call void @printCDep(i32 572, i32 1017)
  %xor167.i.i = xor i32 %xor162.i.i, %370
  %371 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %371, i32 1021, i32 0, i32 0)
  %372 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 959, i32 1021)
  call void @printDDep(i32 1009, i32 1021)
  call void @printCDep(i32 572, i32 1021)
  %shr168.i.i = lshr i32 %372, 10
  %and169.i.i = and i32 %shr168.i.i, 63
  %idxprom170.i.i = zext i32 %and169.i.i to i64
  %arrayidx171.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i.i
  %373 = ptrtoint i32* %arrayidx171.i.i to i64
  call void @printLoadAddr(i64 %373, i32 1029, i32 0, i32 0)
  %374 = load i32, i32* %arrayidx171.i.i, align 4
  call void @printDDep(i32 929, i32 1029)
  call void @printCDep(i32 572, i32 1029)
  %xor172.i.i = xor i32 %xor167.i.i, %374
  %375 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %375, i32 1033, i32 0, i32 0)
  %376 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 959, i32 1033)
  call void @printDDep(i32 1021, i32 1033)
  call void @printCDep(i32 572, i32 1033)
  %shr173.i.i = lshr i32 %376, 18
  %and174.i.i = and i32 %shr173.i.i, 63
  %idxprom175.i.i = zext i32 %and174.i.i to i64
  %arrayidx176.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i.i
  %377 = ptrtoint i32* %arrayidx176.i.i to i64
  call void @printLoadAddr(i64 %377, i32 1041, i32 0, i32 0)
  %378 = load i32, i32* %arrayidx176.i.i, align 4
  call void @printDDep(i32 929, i32 1041)
  call void @printCDep(i32 572, i32 1041)
  %xor177.i.i = xor i32 %xor172.i.i, %378
  %379 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %379, i32 1045, i32 0, i32 0)
  %380 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 959, i32 1045)
  call void @printDDep(i32 1033, i32 1045)
  call void @printCDep(i32 572, i32 1045)
  %shr178.i.i = lshr i32 %380, 26
  %idxprom180.i.i = zext i32 %shr178.i.i to i64
  %arrayidx181.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i.i
  %381 = ptrtoint i32* %arrayidx181.i.i to i64
  call void @printLoadAddr(i64 %381, i32 1052, i32 0, i32 0)
  %382 = load i32, i32* %arrayidx181.i.i, align 4
  call void @printDDep(i32 929, i32 1052)
  call void @printCDep(i32 572, i32 1052)
  %xor182.i.i = xor i32 %xor177.i.i, %382
  %383 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %383, i32 1056, i32 0, i32 0)
  %384 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 735, i32 1056)
  call void @printDDep(i32 929, i32 1056)
  call void @printCDep(i32 572, i32 1056)
  %xor183.i.i = xor i32 %384, %xor182.i.i
  %385 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %385, i32 1061, i32 0, i32 0)
  store i32 %xor183.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 959, i32 1061)
  call void @printDDep(i32 1056, i32 1061)
  call void @printCDep(i32 572, i32 1061)
  %386 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %386, i32 1065, i32 0, i32 0)
  %387 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 1061, i32 1065)
  call void @printDDep(i32 1061, i32 1065)
  call void @printCDep(i32 572, i32 1065)
  %388 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %388, i32 1069, i32 0, i32 0)
  %389 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1069)
  call void @printDDep(i32 929, i32 1069)
  call void @printCDep(i32 572, i32 1069)
  %arrayidx184.i.i = getelementptr inbounds i32, i32* %389, i64 6
  %390 = ptrtoint i32* %arrayidx184.i.i to i64
  call void @printLoadAddr(i64 %390, i32 1074, i32 0, i32 0)
  %391 = load i32, i32* %arrayidx184.i.i, align 4
  call void @printDDep(i32 119, i32 1074)
  call void @printDDep(i32 1069, i32 1074)
  call void @printCDep(i32 572, i32 1074)
  %xor185.i.i = xor i32 %387, %391
  %392 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %392, i32 1079, i32 0, i32 0)
  store i32 %xor185.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 1061, i32 1079)
  call void @printDDep(i32 1074, i32 1079)
  call void @printCDep(i32 572, i32 1079)
  %393 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %393, i32 1083, i32 0, i32 0)
  %394 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 1061, i32 1083)
  call void @printDDep(i32 1074, i32 1083)
  call void @printCDep(i32 572, i32 1083)
  %395 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %395, i32 1087, i32 0, i32 0)
  %396 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1087)
  call void @printDDep(i32 1074, i32 1087)
  call void @printCDep(i32 572, i32 1087)
  %arrayidx186.i.i = getelementptr inbounds i32, i32* %396, i64 7
  %397 = ptrtoint i32* %arrayidx186.i.i to i64
  call void @printLoadAddr(i64 %397, i32 1092, i32 0, i32 0)
  %398 = load i32, i32* %arrayidx186.i.i, align 4
  call void @printDDep(i32 119, i32 1092)
  call void @printDDep(i32 1087, i32 1092)
  call void @printCDep(i32 572, i32 1092)
  %xor187.i.i = xor i32 %394, %398
  %399 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %399, i32 1097, i32 0, i32 0)
  store i32 %xor187.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 1079, i32 1097)
  call void @printDDep(i32 1092, i32 1097)
  call void @printCDep(i32 572, i32 1097)
  %400 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %400, i32 1101, i32 0, i32 0)
  %401 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1097, i32 1101)
  call void @printDDep(i32 1097, i32 1101)
  call void @printCDep(i32 572, i32 1101)
  %402 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %401) #5, !srcloc !7
  %403 = ptrtoint i32* %ret188.i.i to i64
  call void @printStoreAddr(i64 %403, i32 1106, i32 0, i32 0)
  store i32 %402, i32* %ret188.i.i, align 4
  call void @printDDep(i32 1097, i32 1106)
  call void @printDDep(i32 123, i32 1106)
  call void @printCDep(i32 572, i32 1106)
  %404 = ptrtoint i32* %ret188.i.i to i64
  call void @printLoadAddr(i64 %404, i32 1110, i32 0, i32 0)
  %405 = load i32, i32* %ret188.i.i, align 4
  call void @printDDep(i32 1106, i32 1110)
  call void @printDDep(i32 1106, i32 1110)
  call void @printCDep(i32 572, i32 1110)
  %406 = ptrtoint i32* %tmp189.i.i to i64
  call void @printStoreAddr(i64 %406, i32 1114, i32 0, i32 0)
  store i32 %405, i32* %tmp189.i.i, align 4
  call void @printDDep(i32 1106, i32 1114)
  call void @printDDep(i32 123, i32 1114)
  call void @printCDep(i32 572, i32 1114)
  %407 = ptrtoint i32* %tmp189.i.i to i64
  call void @printLoadAddr(i64 %407, i32 1118, i32 0, i32 0)
  %408 = load i32, i32* %tmp189.i.i, align 4
  call void @printDDep(i32 1114, i32 1118)
  call void @printDDep(i32 1114, i32 1118)
  call void @printCDep(i32 572, i32 1118)
  %409 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %409, i32 1122, i32 0, i32 0)
  store i32 %408, i32* %t.i.i, align 4
  call void @printDDep(i32 1114, i32 1122)
  call void @printDDep(i32 1101, i32 1122)
  call void @printCDep(i32 572, i32 1122)
  %410 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %410, i32 1126, i32 0, i32 0)
  %411 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1079, i32 1126)
  call void @printDDep(i32 1092, i32 1126)
  call void @printCDep(i32 572, i32 1126)
  %shr190.i.i = lshr i32 %411, 2
  %and191.i.i = and i32 %shr190.i.i, 63
  %idxprom192.i.i = zext i32 %and191.i.i to i64
  %arrayidx193.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i.i
  %412 = ptrtoint i32* %arrayidx193.i.i to i64
  call void @printLoadAddr(i64 %412, i32 1134, i32 0, i32 0)
  %413 = load i32, i32* %arrayidx193.i.i, align 4
  call void @printDDep(i32 1092, i32 1134)
  call void @printCDep(i32 572, i32 1134)
  %414 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %414, i32 1137, i32 0, i32 0)
  %415 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1079, i32 1137)
  call void @printDDep(i32 1126, i32 1137)
  call void @printCDep(i32 572, i32 1137)
  %shr194.i.i = lshr i32 %415, 10
  %and195.i.i = and i32 %shr194.i.i, 63
  %idxprom196.i.i = zext i32 %and195.i.i to i64
  %arrayidx197.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i.i
  %416 = ptrtoint i32* %arrayidx197.i.i to i64
  call void @printLoadAddr(i64 %416, i32 1145, i32 0, i32 0)
  %417 = load i32, i32* %arrayidx197.i.i, align 4
  call void @printDDep(i32 1092, i32 1145)
  call void @printCDep(i32 572, i32 1145)
  %xor198.i.i = xor i32 %413, %417
  %418 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %418, i32 1149, i32 0, i32 0)
  %419 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1079, i32 1149)
  call void @printDDep(i32 1137, i32 1149)
  call void @printCDep(i32 572, i32 1149)
  %shr199.i.i = lshr i32 %419, 18
  %and200.i.i = and i32 %shr199.i.i, 63
  %idxprom201.i.i = zext i32 %and200.i.i to i64
  %arrayidx202.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i.i
  %420 = ptrtoint i32* %arrayidx202.i.i to i64
  call void @printLoadAddr(i64 %420, i32 1157, i32 0, i32 0)
  %421 = load i32, i32* %arrayidx202.i.i, align 4
  call void @printDDep(i32 1092, i32 1157)
  call void @printCDep(i32 572, i32 1157)
  %xor203.i.i = xor i32 %xor198.i.i, %421
  %422 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %422, i32 1161, i32 0, i32 0)
  %423 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1079, i32 1161)
  call void @printDDep(i32 1149, i32 1161)
  call void @printCDep(i32 572, i32 1161)
  %shr204.i.i = lshr i32 %423, 26
  %idxprom206.i.i = zext i32 %shr204.i.i to i64
  %arrayidx207.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i.i
  %424 = ptrtoint i32* %arrayidx207.i.i to i64
  call void @printLoadAddr(i64 %424, i32 1168, i32 0, i32 0)
  %425 = load i32, i32* %arrayidx207.i.i, align 4
  call void @printDDep(i32 1092, i32 1168)
  call void @printCDep(i32 572, i32 1168)
  %xor208.i.i = xor i32 %xor203.i.i, %425
  %426 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %426, i32 1172, i32 0, i32 0)
  %427 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1122, i32 1172)
  call void @printDDep(i32 1122, i32 1172)
  call void @printCDep(i32 572, i32 1172)
  %shr209.i.i = lshr i32 %427, 2
  %and210.i.i = and i32 %shr209.i.i, 63
  %idxprom211.i.i = zext i32 %and210.i.i to i64
  %arrayidx212.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i.i
  %428 = ptrtoint i32* %arrayidx212.i.i to i64
  call void @printLoadAddr(i64 %428, i32 1180, i32 0, i32 0)
  %429 = load i32, i32* %arrayidx212.i.i, align 4
  call void @printDDep(i32 1092, i32 1180)
  call void @printCDep(i32 572, i32 1180)
  %xor213.i.i = xor i32 %xor208.i.i, %429
  %430 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %430, i32 1184, i32 0, i32 0)
  %431 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1122, i32 1184)
  call void @printDDep(i32 1172, i32 1184)
  call void @printCDep(i32 572, i32 1184)
  %shr214.i.i = lshr i32 %431, 10
  %and215.i.i = and i32 %shr214.i.i, 63
  %idxprom216.i.i = zext i32 %and215.i.i to i64
  %arrayidx217.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i.i
  %432 = ptrtoint i32* %arrayidx217.i.i to i64
  call void @printLoadAddr(i64 %432, i32 1192, i32 0, i32 0)
  %433 = load i32, i32* %arrayidx217.i.i, align 4
  call void @printDDep(i32 1092, i32 1192)
  call void @printCDep(i32 572, i32 1192)
  %xor218.i.i = xor i32 %xor213.i.i, %433
  %434 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %434, i32 1196, i32 0, i32 0)
  %435 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1122, i32 1196)
  call void @printDDep(i32 1184, i32 1196)
  call void @printCDep(i32 572, i32 1196)
  %shr219.i.i = lshr i32 %435, 18
  %and220.i.i = and i32 %shr219.i.i, 63
  %idxprom221.i.i = zext i32 %and220.i.i to i64
  %arrayidx222.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i.i
  %436 = ptrtoint i32* %arrayidx222.i.i to i64
  call void @printLoadAddr(i64 %436, i32 1204, i32 0, i32 0)
  %437 = load i32, i32* %arrayidx222.i.i, align 4
  call void @printDDep(i32 1092, i32 1204)
  call void @printCDep(i32 572, i32 1204)
  %xor223.i.i = xor i32 %xor218.i.i, %437
  %438 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %438, i32 1208, i32 0, i32 0)
  %439 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1122, i32 1208)
  call void @printDDep(i32 1196, i32 1208)
  call void @printCDep(i32 572, i32 1208)
  %shr224.i.i = lshr i32 %439, 26
  %idxprom226.i.i = zext i32 %shr224.i.i to i64
  %arrayidx227.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i.i
  %440 = ptrtoint i32* %arrayidx227.i.i to i64
  call void @printLoadAddr(i64 %440, i32 1215, i32 0, i32 0)
  %441 = load i32, i32* %arrayidx227.i.i, align 4
  call void @printDDep(i32 1092, i32 1215)
  call void @printCDep(i32 572, i32 1215)
  %xor228.i.i = xor i32 %xor223.i.i, %441
  %442 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %442, i32 1219, i32 0, i32 0)
  %443 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 898, i32 1219)
  call void @printDDep(i32 1092, i32 1219)
  call void @printCDep(i32 572, i32 1219)
  %xor229.i.i = xor i32 %443, %xor228.i.i
  %444 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %444, i32 1224, i32 0, i32 0)
  store i32 %xor229.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 1122, i32 1224)
  call void @printDDep(i32 1219, i32 1224)
  call void @printCDep(i32 572, i32 1224)
  %445 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %445, i32 1228, i32 0, i32 0)
  %446 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 1224, i32 1228)
  call void @printDDep(i32 1224, i32 1228)
  call void @printCDep(i32 572, i32 1228)
  %447 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %447, i32 1232, i32 0, i32 0)
  %448 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1232)
  call void @printDDep(i32 1092, i32 1232)
  call void @printCDep(i32 572, i32 1232)
  %arrayidx230.i.i = getelementptr inbounds i32, i32* %448, i64 8
  %449 = ptrtoint i32* %arrayidx230.i.i to i64
  call void @printLoadAddr(i64 %449, i32 1237, i32 0, i32 0)
  %450 = load i32, i32* %arrayidx230.i.i, align 4
  call void @printDDep(i32 119, i32 1237)
  call void @printDDep(i32 1232, i32 1237)
  call void @printCDep(i32 572, i32 1237)
  %xor231.i.i = xor i32 %446, %450
  %451 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %451, i32 1242, i32 0, i32 0)
  store i32 %xor231.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 1224, i32 1242)
  call void @printDDep(i32 1237, i32 1242)
  call void @printCDep(i32 572, i32 1242)
  %452 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %452, i32 1246, i32 0, i32 0)
  %453 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 1224, i32 1246)
  call void @printDDep(i32 1237, i32 1246)
  call void @printCDep(i32 572, i32 1246)
  %454 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %454, i32 1250, i32 0, i32 0)
  %455 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1250)
  call void @printDDep(i32 1237, i32 1250)
  call void @printCDep(i32 572, i32 1250)
  %arrayidx232.i.i = getelementptr inbounds i32, i32* %455, i64 9
  %456 = ptrtoint i32* %arrayidx232.i.i to i64
  call void @printLoadAddr(i64 %456, i32 1255, i32 0, i32 0)
  %457 = load i32, i32* %arrayidx232.i.i, align 4
  call void @printDDep(i32 119, i32 1255)
  call void @printDDep(i32 1250, i32 1255)
  call void @printCDep(i32 572, i32 1255)
  %xor233.i.i = xor i32 %453, %457
  %458 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %458, i32 1260, i32 0, i32 0)
  store i32 %xor233.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 1242, i32 1260)
  call void @printDDep(i32 1255, i32 1260)
  call void @printCDep(i32 572, i32 1260)
  %459 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %459, i32 1264, i32 0, i32 0)
  %460 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1260, i32 1264)
  call void @printDDep(i32 1260, i32 1264)
  call void @printCDep(i32 572, i32 1264)
  %461 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %460) #5, !srcloc !8
  %462 = ptrtoint i32* %ret234.i.i to i64
  call void @printStoreAddr(i64 %462, i32 1269, i32 0, i32 0)
  store i32 %461, i32* %ret234.i.i, align 4
  call void @printDDep(i32 1260, i32 1269)
  call void @printDDep(i32 123, i32 1269)
  call void @printCDep(i32 572, i32 1269)
  %463 = ptrtoint i32* %ret234.i.i to i64
  call void @printLoadAddr(i64 %463, i32 1273, i32 0, i32 0)
  %464 = load i32, i32* %ret234.i.i, align 4
  call void @printDDep(i32 1269, i32 1273)
  call void @printDDep(i32 1269, i32 1273)
  call void @printCDep(i32 572, i32 1273)
  %465 = ptrtoint i32* %tmp235.i.i to i64
  call void @printStoreAddr(i64 %465, i32 1277, i32 0, i32 0)
  store i32 %464, i32* %tmp235.i.i, align 4
  call void @printDDep(i32 1269, i32 1277)
  call void @printDDep(i32 123, i32 1277)
  call void @printCDep(i32 572, i32 1277)
  %466 = ptrtoint i32* %tmp235.i.i to i64
  call void @printLoadAddr(i64 %466, i32 1281, i32 0, i32 0)
  %467 = load i32, i32* %tmp235.i.i, align 4
  call void @printDDep(i32 1277, i32 1281)
  call void @printDDep(i32 1277, i32 1281)
  call void @printCDep(i32 572, i32 1281)
  %468 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %468, i32 1285, i32 0, i32 0)
  store i32 %467, i32* %t.i.i, align 4
  call void @printDDep(i32 1277, i32 1285)
  call void @printDDep(i32 1264, i32 1285)
  call void @printCDep(i32 572, i32 1285)
  %469 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %469, i32 1289, i32 0, i32 0)
  %470 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1242, i32 1289)
  call void @printDDep(i32 1255, i32 1289)
  call void @printCDep(i32 572, i32 1289)
  %shr236.i.i = lshr i32 %470, 2
  %and237.i.i = and i32 %shr236.i.i, 63
  %idxprom238.i.i = zext i32 %and237.i.i to i64
  %arrayidx239.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i.i
  %471 = ptrtoint i32* %arrayidx239.i.i to i64
  call void @printLoadAddr(i64 %471, i32 1297, i32 0, i32 0)
  %472 = load i32, i32* %arrayidx239.i.i, align 4
  call void @printDDep(i32 1255, i32 1297)
  call void @printCDep(i32 572, i32 1297)
  %473 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %473, i32 1300, i32 0, i32 0)
  %474 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1242, i32 1300)
  call void @printDDep(i32 1289, i32 1300)
  call void @printCDep(i32 572, i32 1300)
  %shr240.i.i = lshr i32 %474, 10
  %and241.i.i = and i32 %shr240.i.i, 63
  %idxprom242.i.i = zext i32 %and241.i.i to i64
  %arrayidx243.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i.i
  %475 = ptrtoint i32* %arrayidx243.i.i to i64
  call void @printLoadAddr(i64 %475, i32 1308, i32 0, i32 0)
  %476 = load i32, i32* %arrayidx243.i.i, align 4
  call void @printDDep(i32 1255, i32 1308)
  call void @printCDep(i32 572, i32 1308)
  %xor244.i.i = xor i32 %472, %476
  %477 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %477, i32 1312, i32 0, i32 0)
  %478 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1242, i32 1312)
  call void @printDDep(i32 1300, i32 1312)
  call void @printCDep(i32 572, i32 1312)
  %shr245.i.i = lshr i32 %478, 18
  %and246.i.i = and i32 %shr245.i.i, 63
  %idxprom247.i.i = zext i32 %and246.i.i to i64
  %arrayidx248.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i.i
  %479 = ptrtoint i32* %arrayidx248.i.i to i64
  call void @printLoadAddr(i64 %479, i32 1320, i32 0, i32 0)
  %480 = load i32, i32* %arrayidx248.i.i, align 4
  call void @printDDep(i32 1255, i32 1320)
  call void @printCDep(i32 572, i32 1320)
  %xor249.i.i = xor i32 %xor244.i.i, %480
  %481 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %481, i32 1324, i32 0, i32 0)
  %482 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1242, i32 1324)
  call void @printDDep(i32 1312, i32 1324)
  call void @printCDep(i32 572, i32 1324)
  %shr250.i.i = lshr i32 %482, 26
  %idxprom252.i.i = zext i32 %shr250.i.i to i64
  %arrayidx253.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i.i
  %483 = ptrtoint i32* %arrayidx253.i.i to i64
  call void @printLoadAddr(i64 %483, i32 1331, i32 0, i32 0)
  %484 = load i32, i32* %arrayidx253.i.i, align 4
  call void @printDDep(i32 1255, i32 1331)
  call void @printCDep(i32 572, i32 1331)
  %xor254.i.i = xor i32 %xor249.i.i, %484
  %485 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %485, i32 1335, i32 0, i32 0)
  %486 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1285, i32 1335)
  call void @printDDep(i32 1285, i32 1335)
  call void @printCDep(i32 572, i32 1335)
  %shr255.i.i = lshr i32 %486, 2
  %and256.i.i = and i32 %shr255.i.i, 63
  %idxprom257.i.i = zext i32 %and256.i.i to i64
  %arrayidx258.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i.i
  %487 = ptrtoint i32* %arrayidx258.i.i to i64
  call void @printLoadAddr(i64 %487, i32 1343, i32 0, i32 0)
  %488 = load i32, i32* %arrayidx258.i.i, align 4
  call void @printDDep(i32 1255, i32 1343)
  call void @printCDep(i32 572, i32 1343)
  %xor259.i.i = xor i32 %xor254.i.i, %488
  %489 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %489, i32 1347, i32 0, i32 0)
  %490 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1285, i32 1347)
  call void @printDDep(i32 1335, i32 1347)
  call void @printCDep(i32 572, i32 1347)
  %shr260.i.i = lshr i32 %490, 10
  %and261.i.i = and i32 %shr260.i.i, 63
  %idxprom262.i.i = zext i32 %and261.i.i to i64
  %arrayidx263.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i.i
  %491 = ptrtoint i32* %arrayidx263.i.i to i64
  call void @printLoadAddr(i64 %491, i32 1355, i32 0, i32 0)
  %492 = load i32, i32* %arrayidx263.i.i, align 4
  call void @printDDep(i32 1255, i32 1355)
  call void @printCDep(i32 572, i32 1355)
  %xor264.i.i = xor i32 %xor259.i.i, %492
  %493 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %493, i32 1359, i32 0, i32 0)
  %494 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1285, i32 1359)
  call void @printDDep(i32 1347, i32 1359)
  call void @printCDep(i32 572, i32 1359)
  %shr265.i.i = lshr i32 %494, 18
  %and266.i.i = and i32 %shr265.i.i, 63
  %idxprom267.i.i = zext i32 %and266.i.i to i64
  %arrayidx268.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i.i
  %495 = ptrtoint i32* %arrayidx268.i.i to i64
  call void @printLoadAddr(i64 %495, i32 1367, i32 0, i32 0)
  %496 = load i32, i32* %arrayidx268.i.i, align 4
  call void @printDDep(i32 1255, i32 1367)
  call void @printCDep(i32 572, i32 1367)
  %xor269.i.i = xor i32 %xor264.i.i, %496
  %497 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %497, i32 1371, i32 0, i32 0)
  %498 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1285, i32 1371)
  call void @printDDep(i32 1359, i32 1371)
  call void @printCDep(i32 572, i32 1371)
  %shr270.i.i = lshr i32 %498, 26
  %idxprom272.i.i = zext i32 %shr270.i.i to i64
  %arrayidx273.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i.i
  %499 = ptrtoint i32* %arrayidx273.i.i to i64
  call void @printLoadAddr(i64 %499, i32 1378, i32 0, i32 0)
  %500 = load i32, i32* %arrayidx273.i.i, align 4
  call void @printDDep(i32 1255, i32 1378)
  call void @printCDep(i32 572, i32 1378)
  %xor274.i.i = xor i32 %xor269.i.i, %500
  %501 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %501, i32 1382, i32 0, i32 0)
  %502 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 1061, i32 1382)
  call void @printDDep(i32 1255, i32 1382)
  call void @printCDep(i32 572, i32 1382)
  %xor275.i.i = xor i32 %502, %xor274.i.i
  %503 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %503, i32 1387, i32 0, i32 0)
  store i32 %xor275.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 1285, i32 1387)
  call void @printDDep(i32 1382, i32 1387)
  call void @printCDep(i32 572, i32 1387)
  %504 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %504, i32 1391, i32 0, i32 0)
  %505 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 1387, i32 1391)
  call void @printDDep(i32 1387, i32 1391)
  call void @printCDep(i32 572, i32 1391)
  %506 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %506, i32 1395, i32 0, i32 0)
  %507 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1395)
  call void @printDDep(i32 1255, i32 1395)
  call void @printCDep(i32 572, i32 1395)
  %arrayidx276.i.i = getelementptr inbounds i32, i32* %507, i64 10
  %508 = ptrtoint i32* %arrayidx276.i.i to i64
  call void @printLoadAddr(i64 %508, i32 1400, i32 0, i32 0)
  %509 = load i32, i32* %arrayidx276.i.i, align 4
  call void @printDDep(i32 119, i32 1400)
  call void @printDDep(i32 1395, i32 1400)
  call void @printCDep(i32 572, i32 1400)
  %xor277.i.i = xor i32 %505, %509
  %510 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %510, i32 1405, i32 0, i32 0)
  store i32 %xor277.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 1387, i32 1405)
  call void @printDDep(i32 1400, i32 1405)
  call void @printCDep(i32 572, i32 1405)
  %511 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %511, i32 1409, i32 0, i32 0)
  %512 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 1387, i32 1409)
  call void @printDDep(i32 1400, i32 1409)
  call void @printCDep(i32 572, i32 1409)
  %513 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %513, i32 1413, i32 0, i32 0)
  %514 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1413)
  call void @printDDep(i32 1400, i32 1413)
  call void @printCDep(i32 572, i32 1413)
  %arrayidx278.i.i = getelementptr inbounds i32, i32* %514, i64 11
  %515 = ptrtoint i32* %arrayidx278.i.i to i64
  call void @printLoadAddr(i64 %515, i32 1418, i32 0, i32 0)
  %516 = load i32, i32* %arrayidx278.i.i, align 4
  call void @printDDep(i32 119, i32 1418)
  call void @printDDep(i32 1413, i32 1418)
  call void @printCDep(i32 572, i32 1418)
  %xor279.i.i = xor i32 %512, %516
  %517 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %517, i32 1423, i32 0, i32 0)
  store i32 %xor279.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 1405, i32 1423)
  call void @printDDep(i32 1418, i32 1423)
  call void @printCDep(i32 572, i32 1423)
  %518 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %518, i32 1427, i32 0, i32 0)
  %519 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1423, i32 1427)
  call void @printDDep(i32 1423, i32 1427)
  call void @printCDep(i32 572, i32 1427)
  %520 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %519) #5, !srcloc !9
  %521 = ptrtoint i32* %ret280.i.i to i64
  call void @printStoreAddr(i64 %521, i32 1432, i32 0, i32 0)
  store i32 %520, i32* %ret280.i.i, align 4
  call void @printDDep(i32 1423, i32 1432)
  call void @printDDep(i32 123, i32 1432)
  call void @printCDep(i32 572, i32 1432)
  %522 = ptrtoint i32* %ret280.i.i to i64
  call void @printLoadAddr(i64 %522, i32 1436, i32 0, i32 0)
  %523 = load i32, i32* %ret280.i.i, align 4
  call void @printDDep(i32 1432, i32 1436)
  call void @printDDep(i32 1432, i32 1436)
  call void @printCDep(i32 572, i32 1436)
  %524 = ptrtoint i32* %tmp281.i.i to i64
  call void @printStoreAddr(i64 %524, i32 1440, i32 0, i32 0)
  store i32 %523, i32* %tmp281.i.i, align 4
  call void @printDDep(i32 1432, i32 1440)
  call void @printDDep(i32 123, i32 1440)
  call void @printCDep(i32 572, i32 1440)
  %525 = ptrtoint i32* %tmp281.i.i to i64
  call void @printLoadAddr(i64 %525, i32 1444, i32 0, i32 0)
  %526 = load i32, i32* %tmp281.i.i, align 4
  call void @printDDep(i32 1440, i32 1444)
  call void @printDDep(i32 1440, i32 1444)
  call void @printCDep(i32 572, i32 1444)
  %527 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %527, i32 1448, i32 0, i32 0)
  store i32 %526, i32* %t.i.i, align 4
  call void @printDDep(i32 1440, i32 1448)
  call void @printDDep(i32 1427, i32 1448)
  call void @printCDep(i32 572, i32 1448)
  %528 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %528, i32 1452, i32 0, i32 0)
  %529 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1405, i32 1452)
  call void @printDDep(i32 1418, i32 1452)
  call void @printCDep(i32 572, i32 1452)
  %shr282.i.i = lshr i32 %529, 2
  %and283.i.i = and i32 %shr282.i.i, 63
  %idxprom284.i.i = zext i32 %and283.i.i to i64
  %arrayidx285.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i.i
  %530 = ptrtoint i32* %arrayidx285.i.i to i64
  call void @printLoadAddr(i64 %530, i32 1460, i32 0, i32 0)
  %531 = load i32, i32* %arrayidx285.i.i, align 4
  call void @printDDep(i32 1418, i32 1460)
  call void @printCDep(i32 572, i32 1460)
  %532 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %532, i32 1463, i32 0, i32 0)
  %533 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1405, i32 1463)
  call void @printDDep(i32 1452, i32 1463)
  call void @printCDep(i32 572, i32 1463)
  %shr286.i.i = lshr i32 %533, 10
  %and287.i.i = and i32 %shr286.i.i, 63
  %idxprom288.i.i = zext i32 %and287.i.i to i64
  %arrayidx289.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i.i
  %534 = ptrtoint i32* %arrayidx289.i.i to i64
  call void @printLoadAddr(i64 %534, i32 1471, i32 0, i32 0)
  %535 = load i32, i32* %arrayidx289.i.i, align 4
  call void @printDDep(i32 1418, i32 1471)
  call void @printCDep(i32 572, i32 1471)
  %xor290.i.i = xor i32 %531, %535
  %536 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %536, i32 1475, i32 0, i32 0)
  %537 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1405, i32 1475)
  call void @printDDep(i32 1463, i32 1475)
  call void @printCDep(i32 572, i32 1475)
  %shr291.i.i = lshr i32 %537, 18
  %and292.i.i = and i32 %shr291.i.i, 63
  %idxprom293.i.i = zext i32 %and292.i.i to i64
  %arrayidx294.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i.i
  %538 = ptrtoint i32* %arrayidx294.i.i to i64
  call void @printLoadAddr(i64 %538, i32 1483, i32 0, i32 0)
  %539 = load i32, i32* %arrayidx294.i.i, align 4
  call void @printDDep(i32 1418, i32 1483)
  call void @printCDep(i32 572, i32 1483)
  %xor295.i.i = xor i32 %xor290.i.i, %539
  %540 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %540, i32 1487, i32 0, i32 0)
  %541 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1405, i32 1487)
  call void @printDDep(i32 1475, i32 1487)
  call void @printCDep(i32 572, i32 1487)
  %shr296.i.i = lshr i32 %541, 26
  %idxprom298.i.i = zext i32 %shr296.i.i to i64
  %arrayidx299.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i.i
  %542 = ptrtoint i32* %arrayidx299.i.i to i64
  call void @printLoadAddr(i64 %542, i32 1494, i32 0, i32 0)
  %543 = load i32, i32* %arrayidx299.i.i, align 4
  call void @printDDep(i32 1418, i32 1494)
  call void @printCDep(i32 572, i32 1494)
  %xor300.i.i = xor i32 %xor295.i.i, %543
  %544 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %544, i32 1498, i32 0, i32 0)
  %545 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1448, i32 1498)
  call void @printDDep(i32 1448, i32 1498)
  call void @printCDep(i32 572, i32 1498)
  %shr301.i.i = lshr i32 %545, 2
  %and302.i.i = and i32 %shr301.i.i, 63
  %idxprom303.i.i = zext i32 %and302.i.i to i64
  %arrayidx304.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i.i
  %546 = ptrtoint i32* %arrayidx304.i.i to i64
  call void @printLoadAddr(i64 %546, i32 1506, i32 0, i32 0)
  %547 = load i32, i32* %arrayidx304.i.i, align 4
  call void @printDDep(i32 1418, i32 1506)
  call void @printCDep(i32 572, i32 1506)
  %xor305.i.i = xor i32 %xor300.i.i, %547
  %548 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %548, i32 1510, i32 0, i32 0)
  %549 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1448, i32 1510)
  call void @printDDep(i32 1498, i32 1510)
  call void @printCDep(i32 572, i32 1510)
  %shr306.i.i = lshr i32 %549, 10
  %and307.i.i = and i32 %shr306.i.i, 63
  %idxprom308.i.i = zext i32 %and307.i.i to i64
  %arrayidx309.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i.i
  %550 = ptrtoint i32* %arrayidx309.i.i to i64
  call void @printLoadAddr(i64 %550, i32 1518, i32 0, i32 0)
  %551 = load i32, i32* %arrayidx309.i.i, align 4
  call void @printDDep(i32 1418, i32 1518)
  call void @printCDep(i32 572, i32 1518)
  %xor310.i.i = xor i32 %xor305.i.i, %551
  %552 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %552, i32 1522, i32 0, i32 0)
  %553 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1448, i32 1522)
  call void @printDDep(i32 1510, i32 1522)
  call void @printCDep(i32 572, i32 1522)
  %shr311.i.i = lshr i32 %553, 18
  %and312.i.i = and i32 %shr311.i.i, 63
  %idxprom313.i.i = zext i32 %and312.i.i to i64
  %arrayidx314.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i.i
  %554 = ptrtoint i32* %arrayidx314.i.i to i64
  call void @printLoadAddr(i64 %554, i32 1530, i32 0, i32 0)
  %555 = load i32, i32* %arrayidx314.i.i, align 4
  call void @printDDep(i32 1418, i32 1530)
  call void @printCDep(i32 572, i32 1530)
  %xor315.i.i = xor i32 %xor310.i.i, %555
  %556 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %556, i32 1534, i32 0, i32 0)
  %557 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1448, i32 1534)
  call void @printDDep(i32 1522, i32 1534)
  call void @printCDep(i32 572, i32 1534)
  %shr316.i.i = lshr i32 %557, 26
  %idxprom318.i.i = zext i32 %shr316.i.i to i64
  %arrayidx319.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i.i
  %558 = ptrtoint i32* %arrayidx319.i.i to i64
  call void @printLoadAddr(i64 %558, i32 1541, i32 0, i32 0)
  %559 = load i32, i32* %arrayidx319.i.i, align 4
  call void @printDDep(i32 1418, i32 1541)
  call void @printCDep(i32 572, i32 1541)
  %xor320.i.i = xor i32 %xor315.i.i, %559
  %560 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %560, i32 1545, i32 0, i32 0)
  %561 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 1224, i32 1545)
  call void @printDDep(i32 1418, i32 1545)
  call void @printCDep(i32 572, i32 1545)
  %xor321.i.i = xor i32 %561, %xor320.i.i
  %562 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %562, i32 1550, i32 0, i32 0)
  store i32 %xor321.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 1448, i32 1550)
  call void @printDDep(i32 1545, i32 1550)
  call void @printCDep(i32 572, i32 1550)
  %563 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %563, i32 1554, i32 0, i32 0)
  %564 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 1550, i32 1554)
  call void @printDDep(i32 1550, i32 1554)
  call void @printCDep(i32 572, i32 1554)
  %565 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %565, i32 1558, i32 0, i32 0)
  %566 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1558)
  call void @printDDep(i32 1418, i32 1558)
  call void @printCDep(i32 572, i32 1558)
  %arrayidx322.i.i = getelementptr inbounds i32, i32* %566, i64 12
  %567 = ptrtoint i32* %arrayidx322.i.i to i64
  call void @printLoadAddr(i64 %567, i32 1563, i32 0, i32 0)
  %568 = load i32, i32* %arrayidx322.i.i, align 4
  call void @printDDep(i32 119, i32 1563)
  call void @printDDep(i32 1558, i32 1563)
  call void @printCDep(i32 572, i32 1563)
  %xor323.i.i = xor i32 %564, %568
  %569 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %569, i32 1568, i32 0, i32 0)
  store i32 %xor323.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 1550, i32 1568)
  call void @printDDep(i32 1563, i32 1568)
  call void @printCDep(i32 572, i32 1568)
  %570 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %570, i32 1572, i32 0, i32 0)
  %571 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 1550, i32 1572)
  call void @printDDep(i32 1563, i32 1572)
  call void @printCDep(i32 572, i32 1572)
  %572 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %572, i32 1576, i32 0, i32 0)
  %573 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1576)
  call void @printDDep(i32 1563, i32 1576)
  call void @printCDep(i32 572, i32 1576)
  %arrayidx324.i.i = getelementptr inbounds i32, i32* %573, i64 13
  %574 = ptrtoint i32* %arrayidx324.i.i to i64
  call void @printLoadAddr(i64 %574, i32 1581, i32 0, i32 0)
  %575 = load i32, i32* %arrayidx324.i.i, align 4
  call void @printDDep(i32 119, i32 1581)
  call void @printDDep(i32 1576, i32 1581)
  call void @printCDep(i32 572, i32 1581)
  %xor325.i.i = xor i32 %571, %575
  %576 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %576, i32 1586, i32 0, i32 0)
  store i32 %xor325.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 1568, i32 1586)
  call void @printDDep(i32 1581, i32 1586)
  call void @printCDep(i32 572, i32 1586)
  %577 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %577, i32 1590, i32 0, i32 0)
  %578 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1586, i32 1590)
  call void @printDDep(i32 1586, i32 1590)
  call void @printCDep(i32 572, i32 1590)
  %579 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %578) #5, !srcloc !10
  %580 = ptrtoint i32* %ret326.i.i to i64
  call void @printStoreAddr(i64 %580, i32 1595, i32 0, i32 0)
  store i32 %579, i32* %ret326.i.i, align 4
  call void @printDDep(i32 1586, i32 1595)
  call void @printDDep(i32 123, i32 1595)
  call void @printCDep(i32 572, i32 1595)
  %581 = ptrtoint i32* %ret326.i.i to i64
  call void @printLoadAddr(i64 %581, i32 1599, i32 0, i32 0)
  %582 = load i32, i32* %ret326.i.i, align 4
  call void @printDDep(i32 1595, i32 1599)
  call void @printDDep(i32 1595, i32 1599)
  call void @printCDep(i32 572, i32 1599)
  %583 = ptrtoint i32* %tmp327.i.i to i64
  call void @printStoreAddr(i64 %583, i32 1603, i32 0, i32 0)
  store i32 %582, i32* %tmp327.i.i, align 4
  call void @printDDep(i32 1595, i32 1603)
  call void @printDDep(i32 123, i32 1603)
  call void @printCDep(i32 572, i32 1603)
  %584 = ptrtoint i32* %tmp327.i.i to i64
  call void @printLoadAddr(i64 %584, i32 1607, i32 0, i32 0)
  %585 = load i32, i32* %tmp327.i.i, align 4
  call void @printDDep(i32 1603, i32 1607)
  call void @printDDep(i32 1603, i32 1607)
  call void @printCDep(i32 572, i32 1607)
  %586 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %586, i32 1611, i32 0, i32 0)
  store i32 %585, i32* %t.i.i, align 4
  call void @printDDep(i32 1603, i32 1611)
  call void @printDDep(i32 1590, i32 1611)
  call void @printCDep(i32 572, i32 1611)
  %587 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %587, i32 1615, i32 0, i32 0)
  %588 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1568, i32 1615)
  call void @printDDep(i32 1581, i32 1615)
  call void @printCDep(i32 572, i32 1615)
  %shr328.i.i = lshr i32 %588, 2
  %and329.i.i = and i32 %shr328.i.i, 63
  %idxprom330.i.i = zext i32 %and329.i.i to i64
  %arrayidx331.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i.i
  %589 = ptrtoint i32* %arrayidx331.i.i to i64
  call void @printLoadAddr(i64 %589, i32 1623, i32 0, i32 0)
  %590 = load i32, i32* %arrayidx331.i.i, align 4
  call void @printDDep(i32 1581, i32 1623)
  call void @printCDep(i32 572, i32 1623)
  %591 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %591, i32 1626, i32 0, i32 0)
  %592 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1568, i32 1626)
  call void @printDDep(i32 1615, i32 1626)
  call void @printCDep(i32 572, i32 1626)
  %shr332.i.i = lshr i32 %592, 10
  %and333.i.i = and i32 %shr332.i.i, 63
  %idxprom334.i.i = zext i32 %and333.i.i to i64
  %arrayidx335.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i.i
  %593 = ptrtoint i32* %arrayidx335.i.i to i64
  call void @printLoadAddr(i64 %593, i32 1634, i32 0, i32 0)
  %594 = load i32, i32* %arrayidx335.i.i, align 4
  call void @printDDep(i32 1581, i32 1634)
  call void @printCDep(i32 572, i32 1634)
  %xor336.i.i = xor i32 %590, %594
  %595 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %595, i32 1638, i32 0, i32 0)
  %596 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1568, i32 1638)
  call void @printDDep(i32 1626, i32 1638)
  call void @printCDep(i32 572, i32 1638)
  %shr337.i.i = lshr i32 %596, 18
  %and338.i.i = and i32 %shr337.i.i, 63
  %idxprom339.i.i = zext i32 %and338.i.i to i64
  %arrayidx340.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i.i
  %597 = ptrtoint i32* %arrayidx340.i.i to i64
  call void @printLoadAddr(i64 %597, i32 1646, i32 0, i32 0)
  %598 = load i32, i32* %arrayidx340.i.i, align 4
  call void @printDDep(i32 1581, i32 1646)
  call void @printCDep(i32 572, i32 1646)
  %xor341.i.i = xor i32 %xor336.i.i, %598
  %599 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %599, i32 1650, i32 0, i32 0)
  %600 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1568, i32 1650)
  call void @printDDep(i32 1638, i32 1650)
  call void @printCDep(i32 572, i32 1650)
  %shr342.i.i = lshr i32 %600, 26
  %idxprom344.i.i = zext i32 %shr342.i.i to i64
  %arrayidx345.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i.i
  %601 = ptrtoint i32* %arrayidx345.i.i to i64
  call void @printLoadAddr(i64 %601, i32 1657, i32 0, i32 0)
  %602 = load i32, i32* %arrayidx345.i.i, align 4
  call void @printDDep(i32 1581, i32 1657)
  call void @printCDep(i32 572, i32 1657)
  %xor346.i.i = xor i32 %xor341.i.i, %602
  %603 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %603, i32 1661, i32 0, i32 0)
  %604 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1611, i32 1661)
  call void @printDDep(i32 1611, i32 1661)
  call void @printCDep(i32 572, i32 1661)
  %shr347.i.i = lshr i32 %604, 2
  %and348.i.i = and i32 %shr347.i.i, 63
  %idxprom349.i.i = zext i32 %and348.i.i to i64
  %arrayidx350.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i.i
  %605 = ptrtoint i32* %arrayidx350.i.i to i64
  call void @printLoadAddr(i64 %605, i32 1669, i32 0, i32 0)
  %606 = load i32, i32* %arrayidx350.i.i, align 4
  call void @printDDep(i32 1581, i32 1669)
  call void @printCDep(i32 572, i32 1669)
  %xor351.i.i = xor i32 %xor346.i.i, %606
  %607 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %607, i32 1673, i32 0, i32 0)
  %608 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1611, i32 1673)
  call void @printDDep(i32 1661, i32 1673)
  call void @printCDep(i32 572, i32 1673)
  %shr352.i.i = lshr i32 %608, 10
  %and353.i.i = and i32 %shr352.i.i, 63
  %idxprom354.i.i = zext i32 %and353.i.i to i64
  %arrayidx355.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i.i
  %609 = ptrtoint i32* %arrayidx355.i.i to i64
  call void @printLoadAddr(i64 %609, i32 1681, i32 0, i32 0)
  %610 = load i32, i32* %arrayidx355.i.i, align 4
  call void @printDDep(i32 1581, i32 1681)
  call void @printCDep(i32 572, i32 1681)
  %xor356.i.i = xor i32 %xor351.i.i, %610
  %611 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %611, i32 1685, i32 0, i32 0)
  %612 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1611, i32 1685)
  call void @printDDep(i32 1673, i32 1685)
  call void @printCDep(i32 572, i32 1685)
  %shr357.i.i = lshr i32 %612, 18
  %and358.i.i = and i32 %shr357.i.i, 63
  %idxprom359.i.i = zext i32 %and358.i.i to i64
  %arrayidx360.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i.i
  %613 = ptrtoint i32* %arrayidx360.i.i to i64
  call void @printLoadAddr(i64 %613, i32 1693, i32 0, i32 0)
  %614 = load i32, i32* %arrayidx360.i.i, align 4
  call void @printDDep(i32 1581, i32 1693)
  call void @printCDep(i32 572, i32 1693)
  %xor361.i.i = xor i32 %xor356.i.i, %614
  %615 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %615, i32 1697, i32 0, i32 0)
  %616 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1611, i32 1697)
  call void @printDDep(i32 1685, i32 1697)
  call void @printCDep(i32 572, i32 1697)
  %shr362.i.i = lshr i32 %616, 26
  %idxprom364.i.i = zext i32 %shr362.i.i to i64
  %arrayidx365.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i.i
  %617 = ptrtoint i32* %arrayidx365.i.i to i64
  call void @printLoadAddr(i64 %617, i32 1704, i32 0, i32 0)
  %618 = load i32, i32* %arrayidx365.i.i, align 4
  call void @printDDep(i32 1581, i32 1704)
  call void @printCDep(i32 572, i32 1704)
  %xor366.i.i = xor i32 %xor361.i.i, %618
  %619 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %619, i32 1708, i32 0, i32 0)
  %620 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 1387, i32 1708)
  call void @printDDep(i32 1581, i32 1708)
  call void @printCDep(i32 572, i32 1708)
  %xor367.i.i = xor i32 %620, %xor366.i.i
  %621 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %621, i32 1713, i32 0, i32 0)
  store i32 %xor367.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 1611, i32 1713)
  call void @printDDep(i32 1708, i32 1713)
  call void @printCDep(i32 572, i32 1713)
  %622 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %622, i32 1717, i32 0, i32 0)
  %623 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 1713, i32 1717)
  call void @printDDep(i32 1713, i32 1717)
  call void @printCDep(i32 572, i32 1717)
  %624 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %624, i32 1721, i32 0, i32 0)
  %625 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1721)
  call void @printDDep(i32 1581, i32 1721)
  call void @printCDep(i32 572, i32 1721)
  %arrayidx368.i.i = getelementptr inbounds i32, i32* %625, i64 14
  %626 = ptrtoint i32* %arrayidx368.i.i to i64
  call void @printLoadAddr(i64 %626, i32 1726, i32 0, i32 0)
  %627 = load i32, i32* %arrayidx368.i.i, align 4
  call void @printDDep(i32 1713, i32 1726)
  call void @printDDep(i32 1721, i32 1726)
  call void @printCDep(i32 572, i32 1726)
  %xor369.i.i = xor i32 %623, %627
  %628 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %628, i32 1731, i32 0, i32 0)
  store i32 %xor369.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 1713, i32 1731)
  call void @printDDep(i32 1726, i32 1731)
  call void @printCDep(i32 572, i32 1731)
  %629 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %629, i32 1735, i32 0, i32 0)
  %630 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 1713, i32 1735)
  call void @printDDep(i32 1726, i32 1735)
  call void @printCDep(i32 572, i32 1735)
  %631 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %631, i32 1739, i32 0, i32 0)
  %632 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1739)
  call void @printDDep(i32 1726, i32 1739)
  call void @printCDep(i32 572, i32 1739)
  %arrayidx370.i.i = getelementptr inbounds i32, i32* %632, i64 15
  %633 = ptrtoint i32* %arrayidx370.i.i to i64
  call void @printLoadAddr(i64 %633, i32 1744, i32 0, i32 0)
  %634 = load i32, i32* %arrayidx370.i.i, align 4
  call void @printDDep(i32 1731, i32 1744)
  call void @printDDep(i32 1739, i32 1744)
  call void @printCDep(i32 572, i32 1744)
  %xor371.i.i = xor i32 %630, %634
  %635 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %635, i32 1749, i32 0, i32 0)
  store i32 %xor371.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 1731, i32 1749)
  call void @printDDep(i32 1744, i32 1749)
  call void @printCDep(i32 572, i32 1749)
  %636 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %636, i32 1753, i32 0, i32 0)
  %637 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1749, i32 1753)
  call void @printDDep(i32 1749, i32 1753)
  call void @printCDep(i32 572, i32 1753)
  %638 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %637) #5, !srcloc !11
  %639 = ptrtoint i32* %ret372.i.i to i64
  call void @printStoreAddr(i64 %639, i32 1758, i32 0, i32 0)
  store i32 %638, i32* %ret372.i.i, align 4
  call void @printDDep(i32 1749, i32 1758)
  call void @printDDep(i32 123, i32 1758)
  call void @printCDep(i32 572, i32 1758)
  %640 = ptrtoint i32* %ret372.i.i to i64
  call void @printLoadAddr(i64 %640, i32 1762, i32 0, i32 0)
  %641 = load i32, i32* %ret372.i.i, align 4
  call void @printDDep(i32 1758, i32 1762)
  call void @printDDep(i32 1758, i32 1762)
  call void @printCDep(i32 572, i32 1762)
  %642 = ptrtoint i32* %tmp373.i.i to i64
  call void @printStoreAddr(i64 %642, i32 1766, i32 0, i32 0)
  store i32 %641, i32* %tmp373.i.i, align 4
  call void @printDDep(i32 1758, i32 1766)
  call void @printDDep(i32 123, i32 1766)
  call void @printCDep(i32 572, i32 1766)
  %643 = ptrtoint i32* %tmp373.i.i to i64
  call void @printLoadAddr(i64 %643, i32 1770, i32 0, i32 0)
  %644 = load i32, i32* %tmp373.i.i, align 4
  call void @printDDep(i32 1766, i32 1770)
  call void @printDDep(i32 1766, i32 1770)
  call void @printCDep(i32 572, i32 1770)
  %645 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %645, i32 1774, i32 0, i32 0)
  store i32 %644, i32* %t.i.i, align 4
  call void @printDDep(i32 1766, i32 1774)
  call void @printDDep(i32 1753, i32 1774)
  call void @printCDep(i32 572, i32 1774)
  %646 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %646, i32 1778, i32 0, i32 0)
  %647 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1731, i32 1778)
  call void @printDDep(i32 1744, i32 1778)
  call void @printCDep(i32 572, i32 1778)
  %shr374.i.i = lshr i32 %647, 2
  %and375.i.i = and i32 %shr374.i.i, 63
  %idxprom376.i.i = zext i32 %and375.i.i to i64
  %arrayidx377.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i.i
  %648 = ptrtoint i32* %arrayidx377.i.i to i64
  call void @printLoadAddr(i64 %648, i32 1786, i32 0, i32 0)
  %649 = load i32, i32* %arrayidx377.i.i, align 4
  call void @printDDep(i32 1744, i32 1786)
  call void @printCDep(i32 572, i32 1786)
  %650 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %650, i32 1789, i32 0, i32 0)
  %651 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1731, i32 1789)
  call void @printDDep(i32 1778, i32 1789)
  call void @printCDep(i32 572, i32 1789)
  %shr378.i.i = lshr i32 %651, 10
  %and379.i.i = and i32 %shr378.i.i, 63
  %idxprom380.i.i = zext i32 %and379.i.i to i64
  %arrayidx381.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i.i
  %652 = ptrtoint i32* %arrayidx381.i.i to i64
  call void @printLoadAddr(i64 %652, i32 1797, i32 0, i32 0)
  %653 = load i32, i32* %arrayidx381.i.i, align 4
  call void @printDDep(i32 1744, i32 1797)
  call void @printCDep(i32 572, i32 1797)
  %xor382.i.i = xor i32 %649, %653
  %654 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %654, i32 1801, i32 0, i32 0)
  %655 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1731, i32 1801)
  call void @printDDep(i32 1789, i32 1801)
  call void @printCDep(i32 572, i32 1801)
  %shr383.i.i = lshr i32 %655, 18
  %and384.i.i = and i32 %shr383.i.i, 63
  %idxprom385.i.i = zext i32 %and384.i.i to i64
  %arrayidx386.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i.i
  %656 = ptrtoint i32* %arrayidx386.i.i to i64
  call void @printLoadAddr(i64 %656, i32 1809, i32 0, i32 0)
  %657 = load i32, i32* %arrayidx386.i.i, align 4
  call void @printDDep(i32 1744, i32 1809)
  call void @printCDep(i32 572, i32 1809)
  %xor387.i.i = xor i32 %xor382.i.i, %657
  %658 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %658, i32 1813, i32 0, i32 0)
  %659 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1731, i32 1813)
  call void @printDDep(i32 1801, i32 1813)
  call void @printCDep(i32 572, i32 1813)
  %shr388.i.i = lshr i32 %659, 26
  %idxprom390.i.i = zext i32 %shr388.i.i to i64
  %arrayidx391.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i.i
  %660 = ptrtoint i32* %arrayidx391.i.i to i64
  call void @printLoadAddr(i64 %660, i32 1820, i32 0, i32 0)
  %661 = load i32, i32* %arrayidx391.i.i, align 4
  call void @printDDep(i32 1744, i32 1820)
  call void @printCDep(i32 572, i32 1820)
  %xor392.i.i = xor i32 %xor387.i.i, %661
  %662 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %662, i32 1824, i32 0, i32 0)
  %663 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1774, i32 1824)
  call void @printDDep(i32 1774, i32 1824)
  call void @printCDep(i32 572, i32 1824)
  %shr393.i.i = lshr i32 %663, 2
  %and394.i.i = and i32 %shr393.i.i, 63
  %idxprom395.i.i = zext i32 %and394.i.i to i64
  %arrayidx396.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i.i
  %664 = ptrtoint i32* %arrayidx396.i.i to i64
  call void @printLoadAddr(i64 %664, i32 1832, i32 0, i32 0)
  %665 = load i32, i32* %arrayidx396.i.i, align 4
  call void @printDDep(i32 1744, i32 1832)
  call void @printCDep(i32 572, i32 1832)
  %xor397.i.i = xor i32 %xor392.i.i, %665
  %666 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %666, i32 1836, i32 0, i32 0)
  %667 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1774, i32 1836)
  call void @printDDep(i32 1824, i32 1836)
  call void @printCDep(i32 572, i32 1836)
  %shr398.i.i = lshr i32 %667, 10
  %and399.i.i = and i32 %shr398.i.i, 63
  %idxprom400.i.i = zext i32 %and399.i.i to i64
  %arrayidx401.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i.i
  %668 = ptrtoint i32* %arrayidx401.i.i to i64
  call void @printLoadAddr(i64 %668, i32 1844, i32 0, i32 0)
  %669 = load i32, i32* %arrayidx401.i.i, align 4
  call void @printDDep(i32 1744, i32 1844)
  call void @printCDep(i32 572, i32 1844)
  %xor402.i.i = xor i32 %xor397.i.i, %669
  %670 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %670, i32 1848, i32 0, i32 0)
  %671 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1774, i32 1848)
  call void @printDDep(i32 1836, i32 1848)
  call void @printCDep(i32 572, i32 1848)
  %shr403.i.i = lshr i32 %671, 18
  %and404.i.i = and i32 %shr403.i.i, 63
  %idxprom405.i.i = zext i32 %and404.i.i to i64
  %arrayidx406.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i.i
  %672 = ptrtoint i32* %arrayidx406.i.i to i64
  call void @printLoadAddr(i64 %672, i32 1856, i32 0, i32 0)
  %673 = load i32, i32* %arrayidx406.i.i, align 4
  call void @printDDep(i32 1744, i32 1856)
  call void @printCDep(i32 572, i32 1856)
  %xor407.i.i = xor i32 %xor402.i.i, %673
  %674 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %674, i32 1860, i32 0, i32 0)
  %675 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1774, i32 1860)
  call void @printDDep(i32 1848, i32 1860)
  call void @printCDep(i32 572, i32 1860)
  %shr408.i.i = lshr i32 %675, 26
  %idxprom410.i.i = zext i32 %shr408.i.i to i64
  %arrayidx411.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i.i
  %676 = ptrtoint i32* %arrayidx411.i.i to i64
  call void @printLoadAddr(i64 %676, i32 1867, i32 0, i32 0)
  %677 = load i32, i32* %arrayidx411.i.i, align 4
  call void @printDDep(i32 1744, i32 1867)
  call void @printCDep(i32 572, i32 1867)
  %xor412.i.i = xor i32 %xor407.i.i, %677
  %678 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %678, i32 1871, i32 0, i32 0)
  %679 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 1550, i32 1871)
  call void @printDDep(i32 1744, i32 1871)
  call void @printCDep(i32 572, i32 1871)
  %xor413.i.i = xor i32 %679, %xor412.i.i
  %680 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %680, i32 1876, i32 0, i32 0)
  store i32 %xor413.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 1774, i32 1876)
  call void @printDDep(i32 1871, i32 1876)
  call void @printCDep(i32 572, i32 1876)
  %681 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %681, i32 1880, i32 0, i32 0)
  %682 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 1876, i32 1880)
  call void @printDDep(i32 1876, i32 1880)
  call void @printCDep(i32 572, i32 1880)
  %683 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %683, i32 1884, i32 0, i32 0)
  %684 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1884)
  call void @printDDep(i32 1744, i32 1884)
  call void @printCDep(i32 572, i32 1884)
  %arrayidx414.i.i = getelementptr inbounds i32, i32* %684, i64 16
  %685 = ptrtoint i32* %arrayidx414.i.i to i64
  call void @printLoadAddr(i64 %685, i32 1889, i32 0, i32 0)
  %686 = load i32, i32* %arrayidx414.i.i, align 4
  call void @printDDep(i32 1876, i32 1889)
  call void @printDDep(i32 1884, i32 1889)
  call void @printCDep(i32 572, i32 1889)
  %xor415.i.i = xor i32 %682, %686
  %687 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %687, i32 1894, i32 0, i32 0)
  store i32 %xor415.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 1876, i32 1894)
  call void @printDDep(i32 1889, i32 1894)
  call void @printCDep(i32 572, i32 1894)
  %688 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %688, i32 1898, i32 0, i32 0)
  %689 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 1876, i32 1898)
  call void @printDDep(i32 1889, i32 1898)
  call void @printCDep(i32 572, i32 1898)
  %690 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %690, i32 1902, i32 0, i32 0)
  %691 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 1902)
  call void @printDDep(i32 1889, i32 1902)
  call void @printCDep(i32 572, i32 1902)
  %arrayidx416.i.i = getelementptr inbounds i32, i32* %691, i64 17
  %692 = ptrtoint i32* %arrayidx416.i.i to i64
  call void @printLoadAddr(i64 %692, i32 1907, i32 0, i32 0)
  %693 = load i32, i32* %arrayidx416.i.i, align 4
  call void @printDDep(i32 1894, i32 1907)
  call void @printDDep(i32 1902, i32 1907)
  call void @printCDep(i32 572, i32 1907)
  %xor417.i.i = xor i32 %689, %693
  %694 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %694, i32 1912, i32 0, i32 0)
  store i32 %xor417.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 1894, i32 1912)
  call void @printDDep(i32 1907, i32 1912)
  call void @printCDep(i32 572, i32 1912)
  %695 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %695, i32 1916, i32 0, i32 0)
  %696 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1912, i32 1916)
  call void @printDDep(i32 1912, i32 1916)
  call void @printCDep(i32 572, i32 1916)
  %697 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %696) #5, !srcloc !12
  %698 = ptrtoint i32* %ret418.i.i to i64
  call void @printStoreAddr(i64 %698, i32 1921, i32 0, i32 0)
  store i32 %697, i32* %ret418.i.i, align 4
  call void @printDDep(i32 1912, i32 1921)
  call void @printDDep(i32 123, i32 1921)
  call void @printCDep(i32 572, i32 1921)
  %699 = ptrtoint i32* %ret418.i.i to i64
  call void @printLoadAddr(i64 %699, i32 1925, i32 0, i32 0)
  %700 = load i32, i32* %ret418.i.i, align 4
  call void @printDDep(i32 1921, i32 1925)
  call void @printDDep(i32 1921, i32 1925)
  call void @printCDep(i32 572, i32 1925)
  %701 = ptrtoint i32* %tmp419.i.i to i64
  call void @printStoreAddr(i64 %701, i32 1929, i32 0, i32 0)
  store i32 %700, i32* %tmp419.i.i, align 4
  call void @printDDep(i32 1921, i32 1929)
  call void @printDDep(i32 123, i32 1929)
  call void @printCDep(i32 572, i32 1929)
  %702 = ptrtoint i32* %tmp419.i.i to i64
  call void @printLoadAddr(i64 %702, i32 1933, i32 0, i32 0)
  %703 = load i32, i32* %tmp419.i.i, align 4
  call void @printDDep(i32 1929, i32 1933)
  call void @printDDep(i32 1929, i32 1933)
  call void @printCDep(i32 572, i32 1933)
  %704 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %704, i32 1937, i32 0, i32 0)
  store i32 %703, i32* %t.i.i, align 4
  call void @printDDep(i32 1929, i32 1937)
  call void @printDDep(i32 1916, i32 1937)
  call void @printCDep(i32 572, i32 1937)
  %705 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %705, i32 1941, i32 0, i32 0)
  %706 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1894, i32 1941)
  call void @printDDep(i32 1907, i32 1941)
  call void @printCDep(i32 572, i32 1941)
  %shr420.i.i = lshr i32 %706, 2
  %and421.i.i = and i32 %shr420.i.i, 63
  %idxprom422.i.i = zext i32 %and421.i.i to i64
  %arrayidx423.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i.i
  %707 = ptrtoint i32* %arrayidx423.i.i to i64
  call void @printLoadAddr(i64 %707, i32 1949, i32 0, i32 0)
  %708 = load i32, i32* %arrayidx423.i.i, align 4
  call void @printDDep(i32 1907, i32 1949)
  call void @printCDep(i32 572, i32 1949)
  %709 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %709, i32 1952, i32 0, i32 0)
  %710 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1894, i32 1952)
  call void @printDDep(i32 1941, i32 1952)
  call void @printCDep(i32 572, i32 1952)
  %shr424.i.i = lshr i32 %710, 10
  %and425.i.i = and i32 %shr424.i.i, 63
  %idxprom426.i.i = zext i32 %and425.i.i to i64
  %arrayidx427.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i.i
  %711 = ptrtoint i32* %arrayidx427.i.i to i64
  call void @printLoadAddr(i64 %711, i32 1960, i32 0, i32 0)
  %712 = load i32, i32* %arrayidx427.i.i, align 4
  call void @printDDep(i32 1907, i32 1960)
  call void @printCDep(i32 572, i32 1960)
  %xor428.i.i = xor i32 %708, %712
  %713 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %713, i32 1964, i32 0, i32 0)
  %714 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1894, i32 1964)
  call void @printDDep(i32 1952, i32 1964)
  call void @printCDep(i32 572, i32 1964)
  %shr429.i.i = lshr i32 %714, 18
  %and430.i.i = and i32 %shr429.i.i, 63
  %idxprom431.i.i = zext i32 %and430.i.i to i64
  %arrayidx432.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i.i
  %715 = ptrtoint i32* %arrayidx432.i.i to i64
  call void @printLoadAddr(i64 %715, i32 1972, i32 0, i32 0)
  %716 = load i32, i32* %arrayidx432.i.i, align 4
  call void @printDDep(i32 1907, i32 1972)
  call void @printCDep(i32 572, i32 1972)
  %xor433.i.i = xor i32 %xor428.i.i, %716
  %717 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %717, i32 1976, i32 0, i32 0)
  %718 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 1894, i32 1976)
  call void @printDDep(i32 1964, i32 1976)
  call void @printCDep(i32 572, i32 1976)
  %shr434.i.i = lshr i32 %718, 26
  %idxprom436.i.i = zext i32 %shr434.i.i to i64
  %arrayidx437.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i.i
  %719 = ptrtoint i32* %arrayidx437.i.i to i64
  call void @printLoadAddr(i64 %719, i32 1983, i32 0, i32 0)
  %720 = load i32, i32* %arrayidx437.i.i, align 4
  call void @printDDep(i32 1907, i32 1983)
  call void @printCDep(i32 572, i32 1983)
  %xor438.i.i = xor i32 %xor433.i.i, %720
  %721 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %721, i32 1987, i32 0, i32 0)
  %722 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1937, i32 1987)
  call void @printDDep(i32 1937, i32 1987)
  call void @printCDep(i32 572, i32 1987)
  %shr439.i.i = lshr i32 %722, 2
  %and440.i.i = and i32 %shr439.i.i, 63
  %idxprom441.i.i = zext i32 %and440.i.i to i64
  %arrayidx442.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i.i
  %723 = ptrtoint i32* %arrayidx442.i.i to i64
  call void @printLoadAddr(i64 %723, i32 1995, i32 0, i32 0)
  %724 = load i32, i32* %arrayidx442.i.i, align 4
  call void @printDDep(i32 1907, i32 1995)
  call void @printCDep(i32 572, i32 1995)
  %xor443.i.i = xor i32 %xor438.i.i, %724
  %725 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %725, i32 1999, i32 0, i32 0)
  %726 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1937, i32 1999)
  call void @printDDep(i32 1987, i32 1999)
  call void @printCDep(i32 572, i32 1999)
  %shr444.i.i = lshr i32 %726, 10
  %and445.i.i = and i32 %shr444.i.i, 63
  %idxprom446.i.i = zext i32 %and445.i.i to i64
  %arrayidx447.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i.i
  %727 = ptrtoint i32* %arrayidx447.i.i to i64
  call void @printLoadAddr(i64 %727, i32 2007, i32 0, i32 0)
  %728 = load i32, i32* %arrayidx447.i.i, align 4
  call void @printDDep(i32 1907, i32 2007)
  call void @printCDep(i32 572, i32 2007)
  %xor448.i.i = xor i32 %xor443.i.i, %728
  %729 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %729, i32 2011, i32 0, i32 0)
  %730 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1937, i32 2011)
  call void @printDDep(i32 1999, i32 2011)
  call void @printCDep(i32 572, i32 2011)
  %shr449.i.i = lshr i32 %730, 18
  %and450.i.i = and i32 %shr449.i.i, 63
  %idxprom451.i.i = zext i32 %and450.i.i to i64
  %arrayidx452.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i.i
  %731 = ptrtoint i32* %arrayidx452.i.i to i64
  call void @printLoadAddr(i64 %731, i32 2019, i32 0, i32 0)
  %732 = load i32, i32* %arrayidx452.i.i, align 4
  call void @printDDep(i32 1907, i32 2019)
  call void @printCDep(i32 572, i32 2019)
  %xor453.i.i = xor i32 %xor448.i.i, %732
  %733 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %733, i32 2023, i32 0, i32 0)
  %734 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 1937, i32 2023)
  call void @printDDep(i32 2011, i32 2023)
  call void @printCDep(i32 572, i32 2023)
  %shr454.i.i = lshr i32 %734, 26
  %idxprom456.i.i = zext i32 %shr454.i.i to i64
  %arrayidx457.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i.i
  %735 = ptrtoint i32* %arrayidx457.i.i to i64
  call void @printLoadAddr(i64 %735, i32 2030, i32 0, i32 0)
  %736 = load i32, i32* %arrayidx457.i.i, align 4
  call void @printDDep(i32 1907, i32 2030)
  call void @printCDep(i32 572, i32 2030)
  %xor458.i.i = xor i32 %xor453.i.i, %736
  %737 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %737, i32 2034, i32 0, i32 0)
  %738 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 1713, i32 2034)
  call void @printDDep(i32 1907, i32 2034)
  call void @printCDep(i32 572, i32 2034)
  %xor459.i.i = xor i32 %738, %xor458.i.i
  %739 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %739, i32 2039, i32 0, i32 0)
  store i32 %xor459.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 1937, i32 2039)
  call void @printDDep(i32 2034, i32 2039)
  call void @printCDep(i32 572, i32 2039)
  %740 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %740, i32 2043, i32 0, i32 0)
  %741 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 2039, i32 2043)
  call void @printDDep(i32 2039, i32 2043)
  call void @printCDep(i32 572, i32 2043)
  %742 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %742, i32 2047, i32 0, i32 0)
  %743 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2047)
  call void @printDDep(i32 1907, i32 2047)
  call void @printCDep(i32 572, i32 2047)
  %arrayidx460.i.i = getelementptr inbounds i32, i32* %743, i64 18
  %744 = ptrtoint i32* %arrayidx460.i.i to i64
  call void @printLoadAddr(i64 %744, i32 2052, i32 0, i32 0)
  %745 = load i32, i32* %arrayidx460.i.i, align 4
  call void @printDDep(i32 2039, i32 2052)
  call void @printDDep(i32 2047, i32 2052)
  call void @printCDep(i32 572, i32 2052)
  %xor461.i.i = xor i32 %741, %745
  %746 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %746, i32 2057, i32 0, i32 0)
  store i32 %xor461.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 2039, i32 2057)
  call void @printDDep(i32 2052, i32 2057)
  call void @printCDep(i32 572, i32 2057)
  %747 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %747, i32 2061, i32 0, i32 0)
  %748 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 2039, i32 2061)
  call void @printDDep(i32 2052, i32 2061)
  call void @printCDep(i32 572, i32 2061)
  %749 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %749, i32 2065, i32 0, i32 0)
  %750 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2065)
  call void @printDDep(i32 2052, i32 2065)
  call void @printCDep(i32 572, i32 2065)
  %arrayidx462.i.i = getelementptr inbounds i32, i32* %750, i64 19
  %751 = ptrtoint i32* %arrayidx462.i.i to i64
  call void @printLoadAddr(i64 %751, i32 2070, i32 0, i32 0)
  %752 = load i32, i32* %arrayidx462.i.i, align 4
  call void @printDDep(i32 2057, i32 2070)
  call void @printDDep(i32 2065, i32 2070)
  call void @printCDep(i32 572, i32 2070)
  %xor463.i.i = xor i32 %748, %752
  %753 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %753, i32 2075, i32 0, i32 0)
  store i32 %xor463.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 2057, i32 2075)
  call void @printDDep(i32 2070, i32 2075)
  call void @printCDep(i32 572, i32 2075)
  %754 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %754, i32 2079, i32 0, i32 0)
  %755 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2075, i32 2079)
  call void @printDDep(i32 2075, i32 2079)
  call void @printCDep(i32 572, i32 2079)
  %756 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %755) #5, !srcloc !13
  %757 = ptrtoint i32* %ret464.i.i to i64
  call void @printStoreAddr(i64 %757, i32 2084, i32 0, i32 0)
  store i32 %756, i32* %ret464.i.i, align 4
  call void @printDDep(i32 2075, i32 2084)
  call void @printDDep(i32 123, i32 2084)
  call void @printCDep(i32 572, i32 2084)
  %758 = ptrtoint i32* %ret464.i.i to i64
  call void @printLoadAddr(i64 %758, i32 2088, i32 0, i32 0)
  %759 = load i32, i32* %ret464.i.i, align 4
  call void @printDDep(i32 2084, i32 2088)
  call void @printDDep(i32 2084, i32 2088)
  call void @printCDep(i32 572, i32 2088)
  %760 = ptrtoint i32* %tmp465.i.i to i64
  call void @printStoreAddr(i64 %760, i32 2092, i32 0, i32 0)
  store i32 %759, i32* %tmp465.i.i, align 4
  call void @printDDep(i32 2084, i32 2092)
  call void @printDDep(i32 123, i32 2092)
  call void @printCDep(i32 572, i32 2092)
  %761 = ptrtoint i32* %tmp465.i.i to i64
  call void @printLoadAddr(i64 %761, i32 2096, i32 0, i32 0)
  %762 = load i32, i32* %tmp465.i.i, align 4
  call void @printDDep(i32 2092, i32 2096)
  call void @printDDep(i32 2092, i32 2096)
  call void @printCDep(i32 572, i32 2096)
  %763 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %763, i32 2100, i32 0, i32 0)
  store i32 %762, i32* %t.i.i, align 4
  call void @printDDep(i32 2092, i32 2100)
  call void @printDDep(i32 2079, i32 2100)
  call void @printCDep(i32 572, i32 2100)
  %764 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %764, i32 2104, i32 0, i32 0)
  %765 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2057, i32 2104)
  call void @printDDep(i32 2070, i32 2104)
  call void @printCDep(i32 572, i32 2104)
  %shr466.i.i = lshr i32 %765, 2
  %and467.i.i = and i32 %shr466.i.i, 63
  %idxprom468.i.i = zext i32 %and467.i.i to i64
  %arrayidx469.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i.i
  %766 = ptrtoint i32* %arrayidx469.i.i to i64
  call void @printLoadAddr(i64 %766, i32 2112, i32 0, i32 0)
  %767 = load i32, i32* %arrayidx469.i.i, align 4
  call void @printDDep(i32 2070, i32 2112)
  call void @printCDep(i32 572, i32 2112)
  %768 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %768, i32 2115, i32 0, i32 0)
  %769 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2057, i32 2115)
  call void @printDDep(i32 2104, i32 2115)
  call void @printCDep(i32 572, i32 2115)
  %shr470.i.i = lshr i32 %769, 10
  %and471.i.i = and i32 %shr470.i.i, 63
  %idxprom472.i.i = zext i32 %and471.i.i to i64
  %arrayidx473.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i.i
  %770 = ptrtoint i32* %arrayidx473.i.i to i64
  call void @printLoadAddr(i64 %770, i32 2123, i32 0, i32 0)
  %771 = load i32, i32* %arrayidx473.i.i, align 4
  call void @printDDep(i32 2070, i32 2123)
  call void @printCDep(i32 572, i32 2123)
  %xor474.i.i = xor i32 %767, %771
  %772 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %772, i32 2127, i32 0, i32 0)
  %773 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2057, i32 2127)
  call void @printDDep(i32 2115, i32 2127)
  call void @printCDep(i32 572, i32 2127)
  %shr475.i.i = lshr i32 %773, 18
  %and476.i.i = and i32 %shr475.i.i, 63
  %idxprom477.i.i = zext i32 %and476.i.i to i64
  %arrayidx478.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i.i
  %774 = ptrtoint i32* %arrayidx478.i.i to i64
  call void @printLoadAddr(i64 %774, i32 2135, i32 0, i32 0)
  %775 = load i32, i32* %arrayidx478.i.i, align 4
  call void @printDDep(i32 2070, i32 2135)
  call void @printCDep(i32 572, i32 2135)
  %xor479.i.i = xor i32 %xor474.i.i, %775
  %776 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %776, i32 2139, i32 0, i32 0)
  %777 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2057, i32 2139)
  call void @printDDep(i32 2127, i32 2139)
  call void @printCDep(i32 572, i32 2139)
  %shr480.i.i = lshr i32 %777, 26
  %idxprom482.i.i = zext i32 %shr480.i.i to i64
  %arrayidx483.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i.i
  %778 = ptrtoint i32* %arrayidx483.i.i to i64
  call void @printLoadAddr(i64 %778, i32 2146, i32 0, i32 0)
  %779 = load i32, i32* %arrayidx483.i.i, align 4
  call void @printDDep(i32 2070, i32 2146)
  call void @printCDep(i32 572, i32 2146)
  %xor484.i.i = xor i32 %xor479.i.i, %779
  %780 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %780, i32 2150, i32 0, i32 0)
  %781 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2100, i32 2150)
  call void @printDDep(i32 2100, i32 2150)
  call void @printCDep(i32 572, i32 2150)
  %shr485.i.i = lshr i32 %781, 2
  %and486.i.i = and i32 %shr485.i.i, 63
  %idxprom487.i.i = zext i32 %and486.i.i to i64
  %arrayidx488.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i.i
  %782 = ptrtoint i32* %arrayidx488.i.i to i64
  call void @printLoadAddr(i64 %782, i32 2158, i32 0, i32 0)
  %783 = load i32, i32* %arrayidx488.i.i, align 4
  call void @printDDep(i32 2070, i32 2158)
  call void @printCDep(i32 572, i32 2158)
  %xor489.i.i = xor i32 %xor484.i.i, %783
  %784 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %784, i32 2162, i32 0, i32 0)
  %785 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2100, i32 2162)
  call void @printDDep(i32 2150, i32 2162)
  call void @printCDep(i32 572, i32 2162)
  %shr490.i.i = lshr i32 %785, 10
  %and491.i.i = and i32 %shr490.i.i, 63
  %idxprom492.i.i = zext i32 %and491.i.i to i64
  %arrayidx493.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i.i
  %786 = ptrtoint i32* %arrayidx493.i.i to i64
  call void @printLoadAddr(i64 %786, i32 2170, i32 0, i32 0)
  %787 = load i32, i32* %arrayidx493.i.i, align 4
  call void @printDDep(i32 2070, i32 2170)
  call void @printCDep(i32 572, i32 2170)
  %xor494.i.i = xor i32 %xor489.i.i, %787
  %788 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %788, i32 2174, i32 0, i32 0)
  %789 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2100, i32 2174)
  call void @printDDep(i32 2162, i32 2174)
  call void @printCDep(i32 572, i32 2174)
  %shr495.i.i = lshr i32 %789, 18
  %and496.i.i = and i32 %shr495.i.i, 63
  %idxprom497.i.i = zext i32 %and496.i.i to i64
  %arrayidx498.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i.i
  %790 = ptrtoint i32* %arrayidx498.i.i to i64
  call void @printLoadAddr(i64 %790, i32 2182, i32 0, i32 0)
  %791 = load i32, i32* %arrayidx498.i.i, align 4
  call void @printDDep(i32 2070, i32 2182)
  call void @printCDep(i32 572, i32 2182)
  %xor499.i.i = xor i32 %xor494.i.i, %791
  %792 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %792, i32 2186, i32 0, i32 0)
  %793 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2100, i32 2186)
  call void @printDDep(i32 2174, i32 2186)
  call void @printCDep(i32 572, i32 2186)
  %shr500.i.i = lshr i32 %793, 26
  %idxprom502.i.i = zext i32 %shr500.i.i to i64
  %arrayidx503.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i.i
  %794 = ptrtoint i32* %arrayidx503.i.i to i64
  call void @printLoadAddr(i64 %794, i32 2193, i32 0, i32 0)
  %795 = load i32, i32* %arrayidx503.i.i, align 4
  call void @printDDep(i32 2070, i32 2193)
  call void @printCDep(i32 572, i32 2193)
  %xor504.i.i = xor i32 %xor499.i.i, %795
  %796 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %796, i32 2197, i32 0, i32 0)
  %797 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 1876, i32 2197)
  call void @printDDep(i32 2070, i32 2197)
  call void @printCDep(i32 572, i32 2197)
  %xor505.i.i = xor i32 %797, %xor504.i.i
  %798 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %798, i32 2202, i32 0, i32 0)
  store i32 %xor505.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 2100, i32 2202)
  call void @printDDep(i32 2197, i32 2202)
  call void @printCDep(i32 572, i32 2202)
  %799 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %799, i32 2206, i32 0, i32 0)
  %800 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 2202, i32 2206)
  call void @printDDep(i32 2202, i32 2206)
  call void @printCDep(i32 572, i32 2206)
  %801 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %801, i32 2210, i32 0, i32 0)
  %802 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2210)
  call void @printDDep(i32 2070, i32 2210)
  call void @printCDep(i32 572, i32 2210)
  %arrayidx506.i.i = getelementptr inbounds i32, i32* %802, i64 20
  %803 = ptrtoint i32* %arrayidx506.i.i to i64
  call void @printLoadAddr(i64 %803, i32 2215, i32 0, i32 0)
  %804 = load i32, i32* %arrayidx506.i.i, align 4
  call void @printDDep(i32 2202, i32 2215)
  call void @printDDep(i32 2210, i32 2215)
  call void @printCDep(i32 572, i32 2215)
  %xor507.i.i = xor i32 %800, %804
  %805 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %805, i32 2220, i32 0, i32 0)
  store i32 %xor507.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 2202, i32 2220)
  call void @printDDep(i32 2215, i32 2220)
  call void @printCDep(i32 572, i32 2220)
  %806 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %806, i32 2224, i32 0, i32 0)
  %807 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 2202, i32 2224)
  call void @printDDep(i32 2215, i32 2224)
  call void @printCDep(i32 572, i32 2224)
  %808 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %808, i32 2228, i32 0, i32 0)
  %809 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2228)
  call void @printDDep(i32 2215, i32 2228)
  call void @printCDep(i32 572, i32 2228)
  %arrayidx508.i.i = getelementptr inbounds i32, i32* %809, i64 21
  %810 = ptrtoint i32* %arrayidx508.i.i to i64
  call void @printLoadAddr(i64 %810, i32 2233, i32 0, i32 0)
  %811 = load i32, i32* %arrayidx508.i.i, align 4
  call void @printDDep(i32 2220, i32 2233)
  call void @printDDep(i32 2228, i32 2233)
  call void @printCDep(i32 572, i32 2233)
  %xor509.i.i = xor i32 %807, %811
  %812 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %812, i32 2238, i32 0, i32 0)
  store i32 %xor509.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 2220, i32 2238)
  call void @printDDep(i32 2233, i32 2238)
  call void @printCDep(i32 572, i32 2238)
  %813 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %813, i32 2242, i32 0, i32 0)
  %814 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2238, i32 2242)
  call void @printDDep(i32 2238, i32 2242)
  call void @printCDep(i32 572, i32 2242)
  %815 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %814) #5, !srcloc !14
  %816 = ptrtoint i32* %ret510.i.i to i64
  call void @printStoreAddr(i64 %816, i32 2247, i32 0, i32 0)
  store i32 %815, i32* %ret510.i.i, align 4
  call void @printDDep(i32 2238, i32 2247)
  call void @printDDep(i32 123, i32 2247)
  call void @printCDep(i32 572, i32 2247)
  %817 = ptrtoint i32* %ret510.i.i to i64
  call void @printLoadAddr(i64 %817, i32 2251, i32 0, i32 0)
  %818 = load i32, i32* %ret510.i.i, align 4
  call void @printDDep(i32 2247, i32 2251)
  call void @printDDep(i32 2247, i32 2251)
  call void @printCDep(i32 572, i32 2251)
  %819 = ptrtoint i32* %tmp511.i.i to i64
  call void @printStoreAddr(i64 %819, i32 2255, i32 0, i32 0)
  store i32 %818, i32* %tmp511.i.i, align 4
  call void @printDDep(i32 2247, i32 2255)
  call void @printDDep(i32 123, i32 2255)
  call void @printCDep(i32 572, i32 2255)
  %820 = ptrtoint i32* %tmp511.i.i to i64
  call void @printLoadAddr(i64 %820, i32 2259, i32 0, i32 0)
  %821 = load i32, i32* %tmp511.i.i, align 4
  call void @printDDep(i32 2255, i32 2259)
  call void @printDDep(i32 2255, i32 2259)
  call void @printCDep(i32 572, i32 2259)
  %822 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %822, i32 2263, i32 0, i32 0)
  store i32 %821, i32* %t.i.i, align 4
  call void @printDDep(i32 2255, i32 2263)
  call void @printDDep(i32 2242, i32 2263)
  call void @printCDep(i32 572, i32 2263)
  %823 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %823, i32 2267, i32 0, i32 0)
  %824 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2220, i32 2267)
  call void @printDDep(i32 2233, i32 2267)
  call void @printCDep(i32 572, i32 2267)
  %shr512.i.i = lshr i32 %824, 2
  %and513.i.i = and i32 %shr512.i.i, 63
  %idxprom514.i.i = zext i32 %and513.i.i to i64
  %arrayidx515.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i.i
  %825 = ptrtoint i32* %arrayidx515.i.i to i64
  call void @printLoadAddr(i64 %825, i32 2275, i32 0, i32 0)
  %826 = load i32, i32* %arrayidx515.i.i, align 4
  call void @printDDep(i32 2233, i32 2275)
  call void @printCDep(i32 572, i32 2275)
  %827 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %827, i32 2278, i32 0, i32 0)
  %828 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2220, i32 2278)
  call void @printDDep(i32 2267, i32 2278)
  call void @printCDep(i32 572, i32 2278)
  %shr516.i.i = lshr i32 %828, 10
  %and517.i.i = and i32 %shr516.i.i, 63
  %idxprom518.i.i = zext i32 %and517.i.i to i64
  %arrayidx519.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i.i
  %829 = ptrtoint i32* %arrayidx519.i.i to i64
  call void @printLoadAddr(i64 %829, i32 2286, i32 0, i32 0)
  %830 = load i32, i32* %arrayidx519.i.i, align 4
  call void @printDDep(i32 2233, i32 2286)
  call void @printCDep(i32 572, i32 2286)
  %xor520.i.i = xor i32 %826, %830
  %831 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %831, i32 2290, i32 0, i32 0)
  %832 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2220, i32 2290)
  call void @printDDep(i32 2278, i32 2290)
  call void @printCDep(i32 572, i32 2290)
  %shr521.i.i = lshr i32 %832, 18
  %and522.i.i = and i32 %shr521.i.i, 63
  %idxprom523.i.i = zext i32 %and522.i.i to i64
  %arrayidx524.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i.i
  %833 = ptrtoint i32* %arrayidx524.i.i to i64
  call void @printLoadAddr(i64 %833, i32 2298, i32 0, i32 0)
  %834 = load i32, i32* %arrayidx524.i.i, align 4
  call void @printDDep(i32 2233, i32 2298)
  call void @printCDep(i32 572, i32 2298)
  %xor525.i.i = xor i32 %xor520.i.i, %834
  %835 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %835, i32 2302, i32 0, i32 0)
  %836 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2220, i32 2302)
  call void @printDDep(i32 2290, i32 2302)
  call void @printCDep(i32 572, i32 2302)
  %shr526.i.i = lshr i32 %836, 26
  %idxprom528.i.i = zext i32 %shr526.i.i to i64
  %arrayidx529.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i.i
  %837 = ptrtoint i32* %arrayidx529.i.i to i64
  call void @printLoadAddr(i64 %837, i32 2309, i32 0, i32 0)
  %838 = load i32, i32* %arrayidx529.i.i, align 4
  call void @printDDep(i32 2233, i32 2309)
  call void @printCDep(i32 572, i32 2309)
  %xor530.i.i = xor i32 %xor525.i.i, %838
  %839 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %839, i32 2313, i32 0, i32 0)
  %840 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2263, i32 2313)
  call void @printDDep(i32 2263, i32 2313)
  call void @printCDep(i32 572, i32 2313)
  %shr531.i.i = lshr i32 %840, 2
  %and532.i.i = and i32 %shr531.i.i, 63
  %idxprom533.i.i = zext i32 %and532.i.i to i64
  %arrayidx534.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i.i
  %841 = ptrtoint i32* %arrayidx534.i.i to i64
  call void @printLoadAddr(i64 %841, i32 2321, i32 0, i32 0)
  %842 = load i32, i32* %arrayidx534.i.i, align 4
  call void @printDDep(i32 2233, i32 2321)
  call void @printCDep(i32 572, i32 2321)
  %xor535.i.i = xor i32 %xor530.i.i, %842
  %843 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %843, i32 2325, i32 0, i32 0)
  %844 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2263, i32 2325)
  call void @printDDep(i32 2313, i32 2325)
  call void @printCDep(i32 572, i32 2325)
  %shr536.i.i = lshr i32 %844, 10
  %and537.i.i = and i32 %shr536.i.i, 63
  %idxprom538.i.i = zext i32 %and537.i.i to i64
  %arrayidx539.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i.i
  %845 = ptrtoint i32* %arrayidx539.i.i to i64
  call void @printLoadAddr(i64 %845, i32 2333, i32 0, i32 0)
  %846 = load i32, i32* %arrayidx539.i.i, align 4
  call void @printDDep(i32 2233, i32 2333)
  call void @printCDep(i32 572, i32 2333)
  %xor540.i.i = xor i32 %xor535.i.i, %846
  %847 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %847, i32 2337, i32 0, i32 0)
  %848 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2263, i32 2337)
  call void @printDDep(i32 2325, i32 2337)
  call void @printCDep(i32 572, i32 2337)
  %shr541.i.i = lshr i32 %848, 18
  %and542.i.i = and i32 %shr541.i.i, 63
  %idxprom543.i.i = zext i32 %and542.i.i to i64
  %arrayidx544.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i.i
  %849 = ptrtoint i32* %arrayidx544.i.i to i64
  call void @printLoadAddr(i64 %849, i32 2345, i32 0, i32 0)
  %850 = load i32, i32* %arrayidx544.i.i, align 4
  call void @printDDep(i32 2233, i32 2345)
  call void @printCDep(i32 572, i32 2345)
  %xor545.i.i = xor i32 %xor540.i.i, %850
  %851 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %851, i32 2349, i32 0, i32 0)
  %852 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2263, i32 2349)
  call void @printDDep(i32 2337, i32 2349)
  call void @printCDep(i32 572, i32 2349)
  %shr546.i.i = lshr i32 %852, 26
  %idxprom548.i.i = zext i32 %shr546.i.i to i64
  %arrayidx549.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i.i
  %853 = ptrtoint i32* %arrayidx549.i.i to i64
  call void @printLoadAddr(i64 %853, i32 2356, i32 0, i32 0)
  %854 = load i32, i32* %arrayidx549.i.i, align 4
  call void @printDDep(i32 2233, i32 2356)
  call void @printCDep(i32 572, i32 2356)
  %xor550.i.i = xor i32 %xor545.i.i, %854
  %855 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %855, i32 2360, i32 0, i32 0)
  %856 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 2039, i32 2360)
  call void @printDDep(i32 2233, i32 2360)
  call void @printCDep(i32 572, i32 2360)
  %xor551.i.i = xor i32 %856, %xor550.i.i
  %857 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %857, i32 2365, i32 0, i32 0)
  store i32 %xor551.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 2263, i32 2365)
  call void @printDDep(i32 2360, i32 2365)
  call void @printCDep(i32 572, i32 2365)
  %858 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %858, i32 2369, i32 0, i32 0)
  %859 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 2365, i32 2369)
  call void @printDDep(i32 2365, i32 2369)
  call void @printCDep(i32 572, i32 2369)
  %860 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %860, i32 2373, i32 0, i32 0)
  %861 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2373)
  call void @printDDep(i32 2233, i32 2373)
  call void @printCDep(i32 572, i32 2373)
  %arrayidx552.i.i = getelementptr inbounds i32, i32* %861, i64 22
  %862 = ptrtoint i32* %arrayidx552.i.i to i64
  call void @printLoadAddr(i64 %862, i32 2378, i32 0, i32 0)
  %863 = load i32, i32* %arrayidx552.i.i, align 4
  call void @printDDep(i32 2365, i32 2378)
  call void @printDDep(i32 2373, i32 2378)
  call void @printCDep(i32 572, i32 2378)
  %xor553.i.i = xor i32 %859, %863
  %864 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %864, i32 2383, i32 0, i32 0)
  store i32 %xor553.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 2365, i32 2383)
  call void @printDDep(i32 2378, i32 2383)
  call void @printCDep(i32 572, i32 2383)
  %865 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %865, i32 2387, i32 0, i32 0)
  %866 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 2365, i32 2387)
  call void @printDDep(i32 2378, i32 2387)
  call void @printCDep(i32 572, i32 2387)
  %867 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %867, i32 2391, i32 0, i32 0)
  %868 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2391)
  call void @printDDep(i32 2378, i32 2391)
  call void @printCDep(i32 572, i32 2391)
  %arrayidx554.i.i = getelementptr inbounds i32, i32* %868, i64 23
  %869 = ptrtoint i32* %arrayidx554.i.i to i64
  call void @printLoadAddr(i64 %869, i32 2396, i32 0, i32 0)
  %870 = load i32, i32* %arrayidx554.i.i, align 4
  call void @printDDep(i32 2383, i32 2396)
  call void @printDDep(i32 2391, i32 2396)
  call void @printCDep(i32 572, i32 2396)
  %xor555.i.i = xor i32 %866, %870
  %871 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %871, i32 2401, i32 0, i32 0)
  store i32 %xor555.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 2383, i32 2401)
  call void @printDDep(i32 2396, i32 2401)
  call void @printCDep(i32 572, i32 2401)
  %872 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %872, i32 2405, i32 0, i32 0)
  %873 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2401, i32 2405)
  call void @printDDep(i32 2401, i32 2405)
  call void @printCDep(i32 572, i32 2405)
  %874 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %873) #5, !srcloc !15
  %875 = ptrtoint i32* %ret556.i.i to i64
  call void @printStoreAddr(i64 %875, i32 2410, i32 0, i32 0)
  store i32 %874, i32* %ret556.i.i, align 4
  call void @printDDep(i32 2401, i32 2410)
  call void @printDDep(i32 123, i32 2410)
  call void @printCDep(i32 572, i32 2410)
  %876 = ptrtoint i32* %ret556.i.i to i64
  call void @printLoadAddr(i64 %876, i32 2414, i32 0, i32 0)
  %877 = load i32, i32* %ret556.i.i, align 4
  call void @printDDep(i32 2410, i32 2414)
  call void @printDDep(i32 2410, i32 2414)
  call void @printCDep(i32 572, i32 2414)
  %878 = ptrtoint i32* %tmp557.i.i to i64
  call void @printStoreAddr(i64 %878, i32 2418, i32 0, i32 0)
  store i32 %877, i32* %tmp557.i.i, align 4
  call void @printDDep(i32 2410, i32 2418)
  call void @printDDep(i32 123, i32 2418)
  call void @printCDep(i32 572, i32 2418)
  %879 = ptrtoint i32* %tmp557.i.i to i64
  call void @printLoadAddr(i64 %879, i32 2422, i32 0, i32 0)
  %880 = load i32, i32* %tmp557.i.i, align 4
  call void @printDDep(i32 2418, i32 2422)
  call void @printDDep(i32 2418, i32 2422)
  call void @printCDep(i32 572, i32 2422)
  %881 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %881, i32 2426, i32 0, i32 0)
  store i32 %880, i32* %t.i.i, align 4
  call void @printDDep(i32 2418, i32 2426)
  call void @printDDep(i32 2405, i32 2426)
  call void @printCDep(i32 572, i32 2426)
  %882 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %882, i32 2430, i32 0, i32 0)
  %883 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2383, i32 2430)
  call void @printDDep(i32 2396, i32 2430)
  call void @printCDep(i32 572, i32 2430)
  %shr558.i.i = lshr i32 %883, 2
  %and559.i.i = and i32 %shr558.i.i, 63
  %idxprom560.i.i = zext i32 %and559.i.i to i64
  %arrayidx561.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i.i
  %884 = ptrtoint i32* %arrayidx561.i.i to i64
  call void @printLoadAddr(i64 %884, i32 2438, i32 0, i32 0)
  %885 = load i32, i32* %arrayidx561.i.i, align 4
  call void @printDDep(i32 2396, i32 2438)
  call void @printCDep(i32 572, i32 2438)
  %886 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %886, i32 2441, i32 0, i32 0)
  %887 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2383, i32 2441)
  call void @printDDep(i32 2430, i32 2441)
  call void @printCDep(i32 572, i32 2441)
  %shr562.i.i = lshr i32 %887, 10
  %and563.i.i = and i32 %shr562.i.i, 63
  %idxprom564.i.i = zext i32 %and563.i.i to i64
  %arrayidx565.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i.i
  %888 = ptrtoint i32* %arrayidx565.i.i to i64
  call void @printLoadAddr(i64 %888, i32 2449, i32 0, i32 0)
  %889 = load i32, i32* %arrayidx565.i.i, align 4
  call void @printDDep(i32 2396, i32 2449)
  call void @printCDep(i32 572, i32 2449)
  %xor566.i.i = xor i32 %885, %889
  %890 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %890, i32 2453, i32 0, i32 0)
  %891 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2383, i32 2453)
  call void @printDDep(i32 2441, i32 2453)
  call void @printCDep(i32 572, i32 2453)
  %shr567.i.i = lshr i32 %891, 18
  %and568.i.i = and i32 %shr567.i.i, 63
  %idxprom569.i.i = zext i32 %and568.i.i to i64
  %arrayidx570.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i.i
  %892 = ptrtoint i32* %arrayidx570.i.i to i64
  call void @printLoadAddr(i64 %892, i32 2461, i32 0, i32 0)
  %893 = load i32, i32* %arrayidx570.i.i, align 4
  call void @printDDep(i32 2396, i32 2461)
  call void @printCDep(i32 572, i32 2461)
  %xor571.i.i = xor i32 %xor566.i.i, %893
  %894 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %894, i32 2465, i32 0, i32 0)
  %895 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2383, i32 2465)
  call void @printDDep(i32 2453, i32 2465)
  call void @printCDep(i32 572, i32 2465)
  %shr572.i.i = lshr i32 %895, 26
  %idxprom574.i.i = zext i32 %shr572.i.i to i64
  %arrayidx575.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i.i
  %896 = ptrtoint i32* %arrayidx575.i.i to i64
  call void @printLoadAddr(i64 %896, i32 2472, i32 0, i32 0)
  %897 = load i32, i32* %arrayidx575.i.i, align 4
  call void @printDDep(i32 2396, i32 2472)
  call void @printCDep(i32 572, i32 2472)
  %xor576.i.i = xor i32 %xor571.i.i, %897
  %898 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %898, i32 2476, i32 0, i32 0)
  %899 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2426, i32 2476)
  call void @printDDep(i32 2426, i32 2476)
  call void @printCDep(i32 572, i32 2476)
  %shr577.i.i = lshr i32 %899, 2
  %and578.i.i = and i32 %shr577.i.i, 63
  %idxprom579.i.i = zext i32 %and578.i.i to i64
  %arrayidx580.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i.i
  %900 = ptrtoint i32* %arrayidx580.i.i to i64
  call void @printLoadAddr(i64 %900, i32 2484, i32 0, i32 0)
  %901 = load i32, i32* %arrayidx580.i.i, align 4
  call void @printDDep(i32 2396, i32 2484)
  call void @printCDep(i32 572, i32 2484)
  %xor581.i.i = xor i32 %xor576.i.i, %901
  %902 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %902, i32 2488, i32 0, i32 0)
  %903 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2426, i32 2488)
  call void @printDDep(i32 2476, i32 2488)
  call void @printCDep(i32 572, i32 2488)
  %shr582.i.i = lshr i32 %903, 10
  %and583.i.i = and i32 %shr582.i.i, 63
  %idxprom584.i.i = zext i32 %and583.i.i to i64
  %arrayidx585.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i.i
  %904 = ptrtoint i32* %arrayidx585.i.i to i64
  call void @printLoadAddr(i64 %904, i32 2496, i32 0, i32 0)
  %905 = load i32, i32* %arrayidx585.i.i, align 4
  call void @printDDep(i32 2396, i32 2496)
  call void @printCDep(i32 572, i32 2496)
  %xor586.i.i = xor i32 %xor581.i.i, %905
  %906 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %906, i32 2500, i32 0, i32 0)
  %907 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2426, i32 2500)
  call void @printDDep(i32 2488, i32 2500)
  call void @printCDep(i32 572, i32 2500)
  %shr587.i.i = lshr i32 %907, 18
  %and588.i.i = and i32 %shr587.i.i, 63
  %idxprom589.i.i = zext i32 %and588.i.i to i64
  %arrayidx590.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i.i
  %908 = ptrtoint i32* %arrayidx590.i.i to i64
  call void @printLoadAddr(i64 %908, i32 2508, i32 0, i32 0)
  %909 = load i32, i32* %arrayidx590.i.i, align 4
  call void @printDDep(i32 2396, i32 2508)
  call void @printCDep(i32 572, i32 2508)
  %xor591.i.i = xor i32 %xor586.i.i, %909
  %910 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %910, i32 2512, i32 0, i32 0)
  %911 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2426, i32 2512)
  call void @printDDep(i32 2500, i32 2512)
  call void @printCDep(i32 572, i32 2512)
  %shr592.i.i = lshr i32 %911, 26
  %idxprom594.i.i = zext i32 %shr592.i.i to i64
  %arrayidx595.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i.i
  %912 = ptrtoint i32* %arrayidx595.i.i to i64
  call void @printLoadAddr(i64 %912, i32 2519, i32 0, i32 0)
  %913 = load i32, i32* %arrayidx595.i.i, align 4
  call void @printDDep(i32 2396, i32 2519)
  call void @printCDep(i32 572, i32 2519)
  %xor596.i.i = xor i32 %xor591.i.i, %913
  %914 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %914, i32 2523, i32 0, i32 0)
  %915 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 2202, i32 2523)
  call void @printDDep(i32 2396, i32 2523)
  call void @printCDep(i32 572, i32 2523)
  %xor597.i.i = xor i32 %915, %xor596.i.i
  %916 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %916, i32 2528, i32 0, i32 0)
  store i32 %xor597.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 2426, i32 2528)
  call void @printDDep(i32 2523, i32 2528)
  call void @printCDep(i32 572, i32 2528)
  %917 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %917, i32 2532, i32 0, i32 0)
  %918 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 2528, i32 2532)
  call void @printDDep(i32 2528, i32 2532)
  call void @printCDep(i32 572, i32 2532)
  %919 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %919, i32 2536, i32 0, i32 0)
  %920 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2536)
  call void @printDDep(i32 2396, i32 2536)
  call void @printCDep(i32 572, i32 2536)
  %arrayidx598.i.i = getelementptr inbounds i32, i32* %920, i64 24
  %921 = ptrtoint i32* %arrayidx598.i.i to i64
  call void @printLoadAddr(i64 %921, i32 2541, i32 0, i32 0)
  %922 = load i32, i32* %arrayidx598.i.i, align 4
  call void @printDDep(i32 2528, i32 2541)
  call void @printDDep(i32 2536, i32 2541)
  call void @printCDep(i32 572, i32 2541)
  %xor599.i.i = xor i32 %918, %922
  %923 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %923, i32 2546, i32 0, i32 0)
  store i32 %xor599.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 2528, i32 2546)
  call void @printDDep(i32 2541, i32 2546)
  call void @printCDep(i32 572, i32 2546)
  %924 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %924, i32 2550, i32 0, i32 0)
  %925 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 2528, i32 2550)
  call void @printDDep(i32 2541, i32 2550)
  call void @printCDep(i32 572, i32 2550)
  %926 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %926, i32 2554, i32 0, i32 0)
  %927 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2554)
  call void @printDDep(i32 2541, i32 2554)
  call void @printCDep(i32 572, i32 2554)
  %arrayidx600.i.i = getelementptr inbounds i32, i32* %927, i64 25
  %928 = ptrtoint i32* %arrayidx600.i.i to i64
  call void @printLoadAddr(i64 %928, i32 2559, i32 0, i32 0)
  %929 = load i32, i32* %arrayidx600.i.i, align 4
  call void @printDDep(i32 2546, i32 2559)
  call void @printDDep(i32 2554, i32 2559)
  call void @printCDep(i32 572, i32 2559)
  %xor601.i.i = xor i32 %925, %929
  %930 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %930, i32 2564, i32 0, i32 0)
  store i32 %xor601.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 2546, i32 2564)
  call void @printDDep(i32 2559, i32 2564)
  call void @printCDep(i32 572, i32 2564)
  %931 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %931, i32 2568, i32 0, i32 0)
  %932 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2564, i32 2568)
  call void @printDDep(i32 2564, i32 2568)
  call void @printCDep(i32 572, i32 2568)
  %933 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %932) #5, !srcloc !16
  %934 = ptrtoint i32* %ret602.i.i to i64
  call void @printStoreAddr(i64 %934, i32 2573, i32 0, i32 0)
  store i32 %933, i32* %ret602.i.i, align 4
  call void @printDDep(i32 2564, i32 2573)
  call void @printDDep(i32 123, i32 2573)
  call void @printCDep(i32 572, i32 2573)
  %935 = ptrtoint i32* %ret602.i.i to i64
  call void @printLoadAddr(i64 %935, i32 2577, i32 0, i32 0)
  %936 = load i32, i32* %ret602.i.i, align 4
  call void @printDDep(i32 2573, i32 2577)
  call void @printDDep(i32 2573, i32 2577)
  call void @printCDep(i32 572, i32 2577)
  %937 = ptrtoint i32* %tmp603.i.i to i64
  call void @printStoreAddr(i64 %937, i32 2581, i32 0, i32 0)
  store i32 %936, i32* %tmp603.i.i, align 4
  call void @printDDep(i32 2573, i32 2581)
  call void @printDDep(i32 123, i32 2581)
  call void @printCDep(i32 572, i32 2581)
  %938 = ptrtoint i32* %tmp603.i.i to i64
  call void @printLoadAddr(i64 %938, i32 2585, i32 0, i32 0)
  %939 = load i32, i32* %tmp603.i.i, align 4
  call void @printDDep(i32 2581, i32 2585)
  call void @printDDep(i32 2581, i32 2585)
  call void @printCDep(i32 572, i32 2585)
  %940 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %940, i32 2589, i32 0, i32 0)
  store i32 %939, i32* %t.i.i, align 4
  call void @printDDep(i32 2581, i32 2589)
  call void @printDDep(i32 2568, i32 2589)
  call void @printCDep(i32 572, i32 2589)
  %941 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %941, i32 2593, i32 0, i32 0)
  %942 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2546, i32 2593)
  call void @printDDep(i32 2559, i32 2593)
  call void @printCDep(i32 572, i32 2593)
  %shr604.i.i = lshr i32 %942, 2
  %and605.i.i = and i32 %shr604.i.i, 63
  %idxprom606.i.i = zext i32 %and605.i.i to i64
  %arrayidx607.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i.i
  %943 = ptrtoint i32* %arrayidx607.i.i to i64
  call void @printLoadAddr(i64 %943, i32 2601, i32 0, i32 0)
  %944 = load i32, i32* %arrayidx607.i.i, align 4
  call void @printDDep(i32 2559, i32 2601)
  call void @printCDep(i32 572, i32 2601)
  %945 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %945, i32 2604, i32 0, i32 0)
  %946 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2546, i32 2604)
  call void @printDDep(i32 2593, i32 2604)
  call void @printCDep(i32 572, i32 2604)
  %shr608.i.i = lshr i32 %946, 10
  %and609.i.i = and i32 %shr608.i.i, 63
  %idxprom610.i.i = zext i32 %and609.i.i to i64
  %arrayidx611.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i.i
  %947 = ptrtoint i32* %arrayidx611.i.i to i64
  call void @printLoadAddr(i64 %947, i32 2612, i32 0, i32 0)
  %948 = load i32, i32* %arrayidx611.i.i, align 4
  call void @printDDep(i32 2559, i32 2612)
  call void @printCDep(i32 572, i32 2612)
  %xor612.i.i = xor i32 %944, %948
  %949 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %949, i32 2616, i32 0, i32 0)
  %950 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2546, i32 2616)
  call void @printDDep(i32 2604, i32 2616)
  call void @printCDep(i32 572, i32 2616)
  %shr613.i.i = lshr i32 %950, 18
  %and614.i.i = and i32 %shr613.i.i, 63
  %idxprom615.i.i = zext i32 %and614.i.i to i64
  %arrayidx616.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i.i
  %951 = ptrtoint i32* %arrayidx616.i.i to i64
  call void @printLoadAddr(i64 %951, i32 2624, i32 0, i32 0)
  %952 = load i32, i32* %arrayidx616.i.i, align 4
  call void @printDDep(i32 2559, i32 2624)
  call void @printCDep(i32 572, i32 2624)
  %xor617.i.i = xor i32 %xor612.i.i, %952
  %953 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %953, i32 2628, i32 0, i32 0)
  %954 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2546, i32 2628)
  call void @printDDep(i32 2616, i32 2628)
  call void @printCDep(i32 572, i32 2628)
  %shr618.i.i = lshr i32 %954, 26
  %idxprom620.i.i = zext i32 %shr618.i.i to i64
  %arrayidx621.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i.i
  %955 = ptrtoint i32* %arrayidx621.i.i to i64
  call void @printLoadAddr(i64 %955, i32 2635, i32 0, i32 0)
  %956 = load i32, i32* %arrayidx621.i.i, align 4
  call void @printDDep(i32 2559, i32 2635)
  call void @printCDep(i32 572, i32 2635)
  %xor622.i.i = xor i32 %xor617.i.i, %956
  %957 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %957, i32 2639, i32 0, i32 0)
  %958 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2589, i32 2639)
  call void @printDDep(i32 2589, i32 2639)
  call void @printCDep(i32 572, i32 2639)
  %shr623.i.i = lshr i32 %958, 2
  %and624.i.i = and i32 %shr623.i.i, 63
  %idxprom625.i.i = zext i32 %and624.i.i to i64
  %arrayidx626.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i.i
  %959 = ptrtoint i32* %arrayidx626.i.i to i64
  call void @printLoadAddr(i64 %959, i32 2647, i32 0, i32 0)
  %960 = load i32, i32* %arrayidx626.i.i, align 4
  call void @printDDep(i32 2559, i32 2647)
  call void @printCDep(i32 572, i32 2647)
  %xor627.i.i = xor i32 %xor622.i.i, %960
  %961 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %961, i32 2651, i32 0, i32 0)
  %962 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2589, i32 2651)
  call void @printDDep(i32 2639, i32 2651)
  call void @printCDep(i32 572, i32 2651)
  %shr628.i.i = lshr i32 %962, 10
  %and629.i.i = and i32 %shr628.i.i, 63
  %idxprom630.i.i = zext i32 %and629.i.i to i64
  %arrayidx631.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i.i
  %963 = ptrtoint i32* %arrayidx631.i.i to i64
  call void @printLoadAddr(i64 %963, i32 2659, i32 0, i32 0)
  %964 = load i32, i32* %arrayidx631.i.i, align 4
  call void @printDDep(i32 2559, i32 2659)
  call void @printCDep(i32 572, i32 2659)
  %xor632.i.i = xor i32 %xor627.i.i, %964
  %965 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %965, i32 2663, i32 0, i32 0)
  %966 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2589, i32 2663)
  call void @printDDep(i32 2651, i32 2663)
  call void @printCDep(i32 572, i32 2663)
  %shr633.i.i = lshr i32 %966, 18
  %and634.i.i = and i32 %shr633.i.i, 63
  %idxprom635.i.i = zext i32 %and634.i.i to i64
  %arrayidx636.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i.i
  %967 = ptrtoint i32* %arrayidx636.i.i to i64
  call void @printLoadAddr(i64 %967, i32 2671, i32 0, i32 0)
  %968 = load i32, i32* %arrayidx636.i.i, align 4
  call void @printDDep(i32 2559, i32 2671)
  call void @printCDep(i32 572, i32 2671)
  %xor637.i.i = xor i32 %xor632.i.i, %968
  %969 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %969, i32 2675, i32 0, i32 0)
  %970 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2589, i32 2675)
  call void @printDDep(i32 2663, i32 2675)
  call void @printCDep(i32 572, i32 2675)
  %shr638.i.i = lshr i32 %970, 26
  %idxprom640.i.i = zext i32 %shr638.i.i to i64
  %arrayidx641.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i.i
  %971 = ptrtoint i32* %arrayidx641.i.i to i64
  call void @printLoadAddr(i64 %971, i32 2682, i32 0, i32 0)
  %972 = load i32, i32* %arrayidx641.i.i, align 4
  call void @printDDep(i32 2559, i32 2682)
  call void @printCDep(i32 572, i32 2682)
  %xor642.i.i = xor i32 %xor637.i.i, %972
  %973 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %973, i32 2686, i32 0, i32 0)
  %974 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 2365, i32 2686)
  call void @printDDep(i32 2559, i32 2686)
  call void @printCDep(i32 572, i32 2686)
  %xor643.i.i = xor i32 %974, %xor642.i.i
  %975 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %975, i32 2691, i32 0, i32 0)
  store i32 %xor643.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 2589, i32 2691)
  call void @printDDep(i32 2686, i32 2691)
  call void @printCDep(i32 572, i32 2691)
  %976 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %976, i32 2695, i32 0, i32 0)
  %977 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 2691, i32 2695)
  call void @printDDep(i32 2691, i32 2695)
  call void @printCDep(i32 572, i32 2695)
  %978 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %978, i32 2699, i32 0, i32 0)
  %979 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2699)
  call void @printDDep(i32 2559, i32 2699)
  call void @printCDep(i32 572, i32 2699)
  %arrayidx644.i.i = getelementptr inbounds i32, i32* %979, i64 26
  %980 = ptrtoint i32* %arrayidx644.i.i to i64
  call void @printLoadAddr(i64 %980, i32 2704, i32 0, i32 0)
  %981 = load i32, i32* %arrayidx644.i.i, align 4
  call void @printDDep(i32 2691, i32 2704)
  call void @printDDep(i32 2699, i32 2704)
  call void @printCDep(i32 572, i32 2704)
  %xor645.i.i = xor i32 %977, %981
  %982 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %982, i32 2709, i32 0, i32 0)
  store i32 %xor645.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 2691, i32 2709)
  call void @printDDep(i32 2704, i32 2709)
  call void @printCDep(i32 572, i32 2709)
  %983 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %983, i32 2713, i32 0, i32 0)
  %984 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 2691, i32 2713)
  call void @printDDep(i32 2704, i32 2713)
  call void @printCDep(i32 572, i32 2713)
  %985 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %985, i32 2717, i32 0, i32 0)
  %986 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2717)
  call void @printDDep(i32 2704, i32 2717)
  call void @printCDep(i32 572, i32 2717)
  %arrayidx646.i.i = getelementptr inbounds i32, i32* %986, i64 27
  %987 = ptrtoint i32* %arrayidx646.i.i to i64
  call void @printLoadAddr(i64 %987, i32 2722, i32 0, i32 0)
  %988 = load i32, i32* %arrayidx646.i.i, align 4
  call void @printDDep(i32 2709, i32 2722)
  call void @printDDep(i32 2717, i32 2722)
  call void @printCDep(i32 572, i32 2722)
  %xor647.i.i = xor i32 %984, %988
  %989 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %989, i32 2727, i32 0, i32 0)
  store i32 %xor647.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 2709, i32 2727)
  call void @printDDep(i32 2722, i32 2727)
  call void @printCDep(i32 572, i32 2727)
  %990 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %990, i32 2731, i32 0, i32 0)
  %991 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2727, i32 2731)
  call void @printDDep(i32 2727, i32 2731)
  call void @printCDep(i32 572, i32 2731)
  %992 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %991) #5, !srcloc !17
  %993 = ptrtoint i32* %ret648.i.i to i64
  call void @printStoreAddr(i64 %993, i32 2736, i32 0, i32 0)
  store i32 %992, i32* %ret648.i.i, align 4
  call void @printDDep(i32 2727, i32 2736)
  call void @printDDep(i32 123, i32 2736)
  call void @printCDep(i32 572, i32 2736)
  %994 = ptrtoint i32* %ret648.i.i to i64
  call void @printLoadAddr(i64 %994, i32 2740, i32 0, i32 0)
  %995 = load i32, i32* %ret648.i.i, align 4
  call void @printDDep(i32 2736, i32 2740)
  call void @printDDep(i32 2736, i32 2740)
  call void @printCDep(i32 572, i32 2740)
  %996 = ptrtoint i32* %tmp649.i.i to i64
  call void @printStoreAddr(i64 %996, i32 2744, i32 0, i32 0)
  store i32 %995, i32* %tmp649.i.i, align 4
  call void @printDDep(i32 2736, i32 2744)
  call void @printDDep(i32 123, i32 2744)
  call void @printCDep(i32 572, i32 2744)
  %997 = ptrtoint i32* %tmp649.i.i to i64
  call void @printLoadAddr(i64 %997, i32 2748, i32 0, i32 0)
  %998 = load i32, i32* %tmp649.i.i, align 4
  call void @printDDep(i32 2744, i32 2748)
  call void @printDDep(i32 2744, i32 2748)
  call void @printCDep(i32 572, i32 2748)
  %999 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %999, i32 2752, i32 0, i32 0)
  store i32 %998, i32* %t.i.i, align 4
  call void @printDDep(i32 2744, i32 2752)
  call void @printDDep(i32 2731, i32 2752)
  call void @printCDep(i32 572, i32 2752)
  %1000 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1000, i32 2756, i32 0, i32 0)
  %1001 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2709, i32 2756)
  call void @printDDep(i32 2722, i32 2756)
  call void @printCDep(i32 572, i32 2756)
  %shr650.i.i = lshr i32 %1001, 2
  %and651.i.i = and i32 %shr650.i.i, 63
  %idxprom652.i.i = zext i32 %and651.i.i to i64
  %arrayidx653.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i.i
  %1002 = ptrtoint i32* %arrayidx653.i.i to i64
  call void @printLoadAddr(i64 %1002, i32 2764, i32 0, i32 0)
  %1003 = load i32, i32* %arrayidx653.i.i, align 4
  call void @printDDep(i32 2722, i32 2764)
  call void @printCDep(i32 572, i32 2764)
  %1004 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1004, i32 2767, i32 0, i32 0)
  %1005 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2709, i32 2767)
  call void @printDDep(i32 2756, i32 2767)
  call void @printCDep(i32 572, i32 2767)
  %shr654.i.i = lshr i32 %1005, 10
  %and655.i.i = and i32 %shr654.i.i, 63
  %idxprom656.i.i = zext i32 %and655.i.i to i64
  %arrayidx657.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i.i
  %1006 = ptrtoint i32* %arrayidx657.i.i to i64
  call void @printLoadAddr(i64 %1006, i32 2775, i32 0, i32 0)
  %1007 = load i32, i32* %arrayidx657.i.i, align 4
  call void @printDDep(i32 2722, i32 2775)
  call void @printCDep(i32 572, i32 2775)
  %xor658.i.i = xor i32 %1003, %1007
  %1008 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1008, i32 2779, i32 0, i32 0)
  %1009 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2709, i32 2779)
  call void @printDDep(i32 2767, i32 2779)
  call void @printCDep(i32 572, i32 2779)
  %shr659.i.i = lshr i32 %1009, 18
  %and660.i.i = and i32 %shr659.i.i, 63
  %idxprom661.i.i = zext i32 %and660.i.i to i64
  %arrayidx662.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i.i
  %1010 = ptrtoint i32* %arrayidx662.i.i to i64
  call void @printLoadAddr(i64 %1010, i32 2787, i32 0, i32 0)
  %1011 = load i32, i32* %arrayidx662.i.i, align 4
  call void @printDDep(i32 2722, i32 2787)
  call void @printCDep(i32 572, i32 2787)
  %xor663.i.i = xor i32 %xor658.i.i, %1011
  %1012 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1012, i32 2791, i32 0, i32 0)
  %1013 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2709, i32 2791)
  call void @printDDep(i32 2779, i32 2791)
  call void @printCDep(i32 572, i32 2791)
  %shr664.i.i = lshr i32 %1013, 26
  %idxprom666.i.i = zext i32 %shr664.i.i to i64
  %arrayidx667.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i.i
  %1014 = ptrtoint i32* %arrayidx667.i.i to i64
  call void @printLoadAddr(i64 %1014, i32 2798, i32 0, i32 0)
  %1015 = load i32, i32* %arrayidx667.i.i, align 4
  call void @printDDep(i32 2722, i32 2798)
  call void @printCDep(i32 572, i32 2798)
  %xor668.i.i = xor i32 %xor663.i.i, %1015
  %1016 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1016, i32 2802, i32 0, i32 0)
  %1017 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2752, i32 2802)
  call void @printDDep(i32 2752, i32 2802)
  call void @printCDep(i32 572, i32 2802)
  %shr669.i.i = lshr i32 %1017, 2
  %and670.i.i = and i32 %shr669.i.i, 63
  %idxprom671.i.i = zext i32 %and670.i.i to i64
  %arrayidx672.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i.i
  %1018 = ptrtoint i32* %arrayidx672.i.i to i64
  call void @printLoadAddr(i64 %1018, i32 2810, i32 0, i32 0)
  %1019 = load i32, i32* %arrayidx672.i.i, align 4
  call void @printDDep(i32 2722, i32 2810)
  call void @printCDep(i32 572, i32 2810)
  %xor673.i.i = xor i32 %xor668.i.i, %1019
  %1020 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1020, i32 2814, i32 0, i32 0)
  %1021 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2752, i32 2814)
  call void @printDDep(i32 2802, i32 2814)
  call void @printCDep(i32 572, i32 2814)
  %shr674.i.i = lshr i32 %1021, 10
  %and675.i.i = and i32 %shr674.i.i, 63
  %idxprom676.i.i = zext i32 %and675.i.i to i64
  %arrayidx677.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i.i
  %1022 = ptrtoint i32* %arrayidx677.i.i to i64
  call void @printLoadAddr(i64 %1022, i32 2822, i32 0, i32 0)
  %1023 = load i32, i32* %arrayidx677.i.i, align 4
  call void @printDDep(i32 2722, i32 2822)
  call void @printCDep(i32 572, i32 2822)
  %xor678.i.i = xor i32 %xor673.i.i, %1023
  %1024 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1024, i32 2826, i32 0, i32 0)
  %1025 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2752, i32 2826)
  call void @printDDep(i32 2814, i32 2826)
  call void @printCDep(i32 572, i32 2826)
  %shr679.i.i = lshr i32 %1025, 18
  %and680.i.i = and i32 %shr679.i.i, 63
  %idxprom681.i.i = zext i32 %and680.i.i to i64
  %arrayidx682.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i.i
  %1026 = ptrtoint i32* %arrayidx682.i.i to i64
  call void @printLoadAddr(i64 %1026, i32 2834, i32 0, i32 0)
  %1027 = load i32, i32* %arrayidx682.i.i, align 4
  call void @printDDep(i32 2722, i32 2834)
  call void @printCDep(i32 572, i32 2834)
  %xor683.i.i = xor i32 %xor678.i.i, %1027
  %1028 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1028, i32 2838, i32 0, i32 0)
  %1029 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2752, i32 2838)
  call void @printDDep(i32 2826, i32 2838)
  call void @printCDep(i32 572, i32 2838)
  %shr684.i.i = lshr i32 %1029, 26
  %idxprom686.i.i = zext i32 %shr684.i.i to i64
  %arrayidx687.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i.i
  %1030 = ptrtoint i32* %arrayidx687.i.i to i64
  call void @printLoadAddr(i64 %1030, i32 2845, i32 0, i32 0)
  %1031 = load i32, i32* %arrayidx687.i.i, align 4
  call void @printDDep(i32 2722, i32 2845)
  call void @printCDep(i32 572, i32 2845)
  %xor688.i.i = xor i32 %xor683.i.i, %1031
  %1032 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1032, i32 2849, i32 0, i32 0)
  %1033 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 2528, i32 2849)
  call void @printDDep(i32 2722, i32 2849)
  call void @printCDep(i32 572, i32 2849)
  %xor689.i.i = xor i32 %1033, %xor688.i.i
  %1034 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %1034, i32 2854, i32 0, i32 0)
  store i32 %xor689.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 2752, i32 2854)
  call void @printDDep(i32 2849, i32 2854)
  call void @printCDep(i32 572, i32 2854)
  %1035 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1035, i32 2858, i32 0, i32 0)
  %1036 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 2854, i32 2858)
  call void @printDDep(i32 2854, i32 2858)
  call void @printCDep(i32 572, i32 2858)
  %1037 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1037, i32 2862, i32 0, i32 0)
  %1038 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2862)
  call void @printDDep(i32 2722, i32 2862)
  call void @printCDep(i32 572, i32 2862)
  %arrayidx690.i.i = getelementptr inbounds i32, i32* %1038, i64 28
  %1039 = ptrtoint i32* %arrayidx690.i.i to i64
  call void @printLoadAddr(i64 %1039, i32 2867, i32 0, i32 0)
  %1040 = load i32, i32* %arrayidx690.i.i, align 4
  call void @printDDep(i32 2854, i32 2867)
  call void @printDDep(i32 2862, i32 2867)
  call void @printCDep(i32 572, i32 2867)
  %xor691.i.i = xor i32 %1036, %1040
  %1041 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1041, i32 2872, i32 0, i32 0)
  store i32 %xor691.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 2854, i32 2872)
  call void @printDDep(i32 2867, i32 2872)
  call void @printCDep(i32 572, i32 2872)
  %1042 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1042, i32 2876, i32 0, i32 0)
  %1043 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 2854, i32 2876)
  call void @printDDep(i32 2867, i32 2876)
  call void @printCDep(i32 572, i32 2876)
  %1044 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1044, i32 2880, i32 0, i32 0)
  %1045 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 2880)
  call void @printDDep(i32 2867, i32 2880)
  call void @printCDep(i32 572, i32 2880)
  %arrayidx692.i.i = getelementptr inbounds i32, i32* %1045, i64 29
  %1046 = ptrtoint i32* %arrayidx692.i.i to i64
  call void @printLoadAddr(i64 %1046, i32 2885, i32 0, i32 0)
  %1047 = load i32, i32* %arrayidx692.i.i, align 4
  call void @printDDep(i32 2872, i32 2885)
  call void @printDDep(i32 2880, i32 2885)
  call void @printCDep(i32 572, i32 2885)
  %xor693.i.i = xor i32 %1043, %1047
  %1048 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1048, i32 2890, i32 0, i32 0)
  store i32 %xor693.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 2872, i32 2890)
  call void @printDDep(i32 2885, i32 2890)
  call void @printCDep(i32 572, i32 2890)
  %1049 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1049, i32 2894, i32 0, i32 0)
  %1050 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2890, i32 2894)
  call void @printDDep(i32 2890, i32 2894)
  call void @printCDep(i32 572, i32 2894)
  %1051 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1050) #5, !srcloc !18
  %1052 = ptrtoint i32* %ret694.i.i to i64
  call void @printStoreAddr(i64 %1052, i32 2899, i32 0, i32 0)
  store i32 %1051, i32* %ret694.i.i, align 4
  call void @printDDep(i32 2890, i32 2899)
  call void @printDDep(i32 123, i32 2899)
  call void @printCDep(i32 572, i32 2899)
  %1053 = ptrtoint i32* %ret694.i.i to i64
  call void @printLoadAddr(i64 %1053, i32 2903, i32 0, i32 0)
  %1054 = load i32, i32* %ret694.i.i, align 4
  call void @printDDep(i32 2899, i32 2903)
  call void @printDDep(i32 2899, i32 2903)
  call void @printCDep(i32 572, i32 2903)
  %1055 = ptrtoint i32* %tmp695.i.i to i64
  call void @printStoreAddr(i64 %1055, i32 2907, i32 0, i32 0)
  store i32 %1054, i32* %tmp695.i.i, align 4
  call void @printDDep(i32 2899, i32 2907)
  call void @printDDep(i32 123, i32 2907)
  call void @printCDep(i32 572, i32 2907)
  %1056 = ptrtoint i32* %tmp695.i.i to i64
  call void @printLoadAddr(i64 %1056, i32 2911, i32 0, i32 0)
  %1057 = load i32, i32* %tmp695.i.i, align 4
  call void @printDDep(i32 2907, i32 2911)
  call void @printDDep(i32 2907, i32 2911)
  call void @printCDep(i32 572, i32 2911)
  %1058 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1058, i32 2915, i32 0, i32 0)
  store i32 %1057, i32* %t.i.i, align 4
  call void @printDDep(i32 2907, i32 2915)
  call void @printDDep(i32 2894, i32 2915)
  call void @printCDep(i32 572, i32 2915)
  %1059 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1059, i32 2919, i32 0, i32 0)
  %1060 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2872, i32 2919)
  call void @printDDep(i32 2885, i32 2919)
  call void @printCDep(i32 572, i32 2919)
  %shr696.i.i = lshr i32 %1060, 2
  %and697.i.i = and i32 %shr696.i.i, 63
  %idxprom698.i.i = zext i32 %and697.i.i to i64
  %arrayidx699.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i.i
  %1061 = ptrtoint i32* %arrayidx699.i.i to i64
  call void @printLoadAddr(i64 %1061, i32 2927, i32 0, i32 0)
  %1062 = load i32, i32* %arrayidx699.i.i, align 4
  call void @printDDep(i32 2885, i32 2927)
  call void @printCDep(i32 572, i32 2927)
  %1063 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1063, i32 2930, i32 0, i32 0)
  %1064 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2872, i32 2930)
  call void @printDDep(i32 2919, i32 2930)
  call void @printCDep(i32 572, i32 2930)
  %shr700.i.i = lshr i32 %1064, 10
  %and701.i.i = and i32 %shr700.i.i, 63
  %idxprom702.i.i = zext i32 %and701.i.i to i64
  %arrayidx703.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i.i
  %1065 = ptrtoint i32* %arrayidx703.i.i to i64
  call void @printLoadAddr(i64 %1065, i32 2938, i32 0, i32 0)
  %1066 = load i32, i32* %arrayidx703.i.i, align 4
  call void @printDDep(i32 2885, i32 2938)
  call void @printCDep(i32 572, i32 2938)
  %xor704.i.i = xor i32 %1062, %1066
  %1067 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1067, i32 2942, i32 0, i32 0)
  %1068 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2872, i32 2942)
  call void @printDDep(i32 2930, i32 2942)
  call void @printCDep(i32 572, i32 2942)
  %shr705.i.i = lshr i32 %1068, 18
  %and706.i.i = and i32 %shr705.i.i, 63
  %idxprom707.i.i = zext i32 %and706.i.i to i64
  %arrayidx708.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i.i
  %1069 = ptrtoint i32* %arrayidx708.i.i to i64
  call void @printLoadAddr(i64 %1069, i32 2950, i32 0, i32 0)
  %1070 = load i32, i32* %arrayidx708.i.i, align 4
  call void @printDDep(i32 2885, i32 2950)
  call void @printCDep(i32 572, i32 2950)
  %xor709.i.i = xor i32 %xor704.i.i, %1070
  %1071 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1071, i32 2954, i32 0, i32 0)
  %1072 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 2872, i32 2954)
  call void @printDDep(i32 2942, i32 2954)
  call void @printCDep(i32 572, i32 2954)
  %shr710.i.i = lshr i32 %1072, 26
  %idxprom712.i.i = zext i32 %shr710.i.i to i64
  %arrayidx713.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i.i
  %1073 = ptrtoint i32* %arrayidx713.i.i to i64
  call void @printLoadAddr(i64 %1073, i32 2961, i32 0, i32 0)
  %1074 = load i32, i32* %arrayidx713.i.i, align 4
  call void @printDDep(i32 2885, i32 2961)
  call void @printCDep(i32 572, i32 2961)
  %xor714.i.i = xor i32 %xor709.i.i, %1074
  %1075 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1075, i32 2965, i32 0, i32 0)
  %1076 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2915, i32 2965)
  call void @printDDep(i32 2915, i32 2965)
  call void @printCDep(i32 572, i32 2965)
  %shr715.i.i = lshr i32 %1076, 2
  %and716.i.i = and i32 %shr715.i.i, 63
  %idxprom717.i.i = zext i32 %and716.i.i to i64
  %arrayidx718.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i.i
  %1077 = ptrtoint i32* %arrayidx718.i.i to i64
  call void @printLoadAddr(i64 %1077, i32 2973, i32 0, i32 0)
  %1078 = load i32, i32* %arrayidx718.i.i, align 4
  call void @printDDep(i32 2885, i32 2973)
  call void @printCDep(i32 572, i32 2973)
  %xor719.i.i = xor i32 %xor714.i.i, %1078
  %1079 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1079, i32 2977, i32 0, i32 0)
  %1080 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2915, i32 2977)
  call void @printDDep(i32 2965, i32 2977)
  call void @printCDep(i32 572, i32 2977)
  %shr720.i.i = lshr i32 %1080, 10
  %and721.i.i = and i32 %shr720.i.i, 63
  %idxprom722.i.i = zext i32 %and721.i.i to i64
  %arrayidx723.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i.i
  %1081 = ptrtoint i32* %arrayidx723.i.i to i64
  call void @printLoadAddr(i64 %1081, i32 2985, i32 0, i32 0)
  %1082 = load i32, i32* %arrayidx723.i.i, align 4
  call void @printDDep(i32 2885, i32 2985)
  call void @printCDep(i32 572, i32 2985)
  %xor724.i.i = xor i32 %xor719.i.i, %1082
  %1083 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1083, i32 2989, i32 0, i32 0)
  %1084 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2915, i32 2989)
  call void @printDDep(i32 2977, i32 2989)
  call void @printCDep(i32 572, i32 2989)
  %shr725.i.i = lshr i32 %1084, 18
  %and726.i.i = and i32 %shr725.i.i, 63
  %idxprom727.i.i = zext i32 %and726.i.i to i64
  %arrayidx728.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i.i
  %1085 = ptrtoint i32* %arrayidx728.i.i to i64
  call void @printLoadAddr(i64 %1085, i32 2997, i32 0, i32 0)
  %1086 = load i32, i32* %arrayidx728.i.i, align 4
  call void @printDDep(i32 2885, i32 2997)
  call void @printCDep(i32 572, i32 2997)
  %xor729.i.i = xor i32 %xor724.i.i, %1086
  %1087 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1087, i32 3001, i32 0, i32 0)
  %1088 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 2915, i32 3001)
  call void @printDDep(i32 2989, i32 3001)
  call void @printCDep(i32 572, i32 3001)
  %shr730.i.i = lshr i32 %1088, 26
  %idxprom732.i.i = zext i32 %shr730.i.i to i64
  %arrayidx733.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i.i
  %1089 = ptrtoint i32* %arrayidx733.i.i to i64
  call void @printLoadAddr(i64 %1089, i32 3008, i32 0, i32 0)
  %1090 = load i32, i32* %arrayidx733.i.i, align 4
  call void @printDDep(i32 2885, i32 3008)
  call void @printCDep(i32 572, i32 3008)
  %xor734.i.i = xor i32 %xor729.i.i, %1090
  %1091 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1091, i32 3012, i32 0, i32 0)
  %1092 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 2691, i32 3012)
  call void @printDDep(i32 2885, i32 3012)
  call void @printCDep(i32 572, i32 3012)
  %xor735.i.i = xor i32 %1092, %xor734.i.i
  %1093 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %1093, i32 3017, i32 0, i32 0)
  store i32 %xor735.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 2915, i32 3017)
  call void @printDDep(i32 3012, i32 3017)
  call void @printCDep(i32 572, i32 3017)
  %1094 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1094, i32 3021, i32 0, i32 0)
  %1095 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3017, i32 3021)
  call void @printDDep(i32 3017, i32 3021)
  call void @printCDep(i32 572, i32 3021)
  %1096 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1096, i32 3025, i32 0, i32 0)
  %1097 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3025)
  call void @printDDep(i32 2885, i32 3025)
  call void @printCDep(i32 572, i32 3025)
  %arrayidx736.i.i = getelementptr inbounds i32, i32* %1097, i64 30
  %1098 = ptrtoint i32* %arrayidx736.i.i to i64
  call void @printLoadAddr(i64 %1098, i32 3030, i32 0, i32 0)
  %1099 = load i32, i32* %arrayidx736.i.i, align 4
  call void @printDDep(i32 3017, i32 3030)
  call void @printDDep(i32 3025, i32 3030)
  call void @printCDep(i32 572, i32 3030)
  %xor737.i.i = xor i32 %1095, %1099
  %1100 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1100, i32 3035, i32 0, i32 0)
  store i32 %xor737.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 3017, i32 3035)
  call void @printDDep(i32 3030, i32 3035)
  call void @printCDep(i32 572, i32 3035)
  %1101 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1101, i32 3039, i32 0, i32 0)
  %1102 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3017, i32 3039)
  call void @printDDep(i32 3030, i32 3039)
  call void @printCDep(i32 572, i32 3039)
  %1103 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1103, i32 3043, i32 0, i32 0)
  %1104 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3043)
  call void @printDDep(i32 3030, i32 3043)
  call void @printCDep(i32 572, i32 3043)
  %arrayidx738.i.i = getelementptr inbounds i32, i32* %1104, i64 31
  %1105 = ptrtoint i32* %arrayidx738.i.i to i64
  call void @printLoadAddr(i64 %1105, i32 3048, i32 0, i32 0)
  %1106 = load i32, i32* %arrayidx738.i.i, align 4
  call void @printDDep(i32 3035, i32 3048)
  call void @printDDep(i32 3043, i32 3048)
  call void @printCDep(i32 572, i32 3048)
  %xor739.i.i = xor i32 %1102, %1106
  %1107 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1107, i32 3053, i32 0, i32 0)
  store i32 %xor739.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 3035, i32 3053)
  call void @printDDep(i32 3048, i32 3053)
  call void @printCDep(i32 572, i32 3053)
  %1108 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1108, i32 3057, i32 0, i32 0)
  %1109 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3053, i32 3057)
  call void @printDDep(i32 3053, i32 3057)
  call void @printCDep(i32 572, i32 3057)
  %1110 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1109) #5, !srcloc !19
  %1111 = ptrtoint i32* %ret740.i.i to i64
  call void @printStoreAddr(i64 %1111, i32 3062, i32 0, i32 0)
  store i32 %1110, i32* %ret740.i.i, align 4
  call void @printDDep(i32 3053, i32 3062)
  call void @printDDep(i32 123, i32 3062)
  call void @printCDep(i32 572, i32 3062)
  %1112 = ptrtoint i32* %ret740.i.i to i64
  call void @printLoadAddr(i64 %1112, i32 3066, i32 0, i32 0)
  %1113 = load i32, i32* %ret740.i.i, align 4
  call void @printDDep(i32 3062, i32 3066)
  call void @printDDep(i32 3062, i32 3066)
  call void @printCDep(i32 572, i32 3066)
  %1114 = ptrtoint i32* %tmp741.i.i to i64
  call void @printStoreAddr(i64 %1114, i32 3070, i32 0, i32 0)
  store i32 %1113, i32* %tmp741.i.i, align 4
  call void @printDDep(i32 3062, i32 3070)
  call void @printDDep(i32 123, i32 3070)
  call void @printCDep(i32 572, i32 3070)
  %1115 = ptrtoint i32* %tmp741.i.i to i64
  call void @printLoadAddr(i64 %1115, i32 3074, i32 0, i32 0)
  %1116 = load i32, i32* %tmp741.i.i, align 4
  call void @printDDep(i32 3070, i32 3074)
  call void @printDDep(i32 3070, i32 3074)
  call void @printCDep(i32 572, i32 3074)
  %1117 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1117, i32 3078, i32 0, i32 0)
  store i32 %1116, i32* %t.i.i, align 4
  call void @printDDep(i32 3070, i32 3078)
  call void @printDDep(i32 3057, i32 3078)
  call void @printCDep(i32 572, i32 3078)
  %1118 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1118, i32 3082, i32 0, i32 0)
  %1119 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3035, i32 3082)
  call void @printDDep(i32 3048, i32 3082)
  call void @printCDep(i32 572, i32 3082)
  %shr742.i.i = lshr i32 %1119, 2
  %and743.i.i = and i32 %shr742.i.i, 63
  %idxprom744.i.i = zext i32 %and743.i.i to i64
  %arrayidx745.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i.i
  %1120 = ptrtoint i32* %arrayidx745.i.i to i64
  call void @printLoadAddr(i64 %1120, i32 3090, i32 0, i32 0)
  %1121 = load i32, i32* %arrayidx745.i.i, align 4
  call void @printDDep(i32 3048, i32 3090)
  call void @printCDep(i32 572, i32 3090)
  %1122 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1122, i32 3093, i32 0, i32 0)
  %1123 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3035, i32 3093)
  call void @printDDep(i32 3082, i32 3093)
  call void @printCDep(i32 572, i32 3093)
  %shr746.i.i = lshr i32 %1123, 10
  %and747.i.i = and i32 %shr746.i.i, 63
  %idxprom748.i.i = zext i32 %and747.i.i to i64
  %arrayidx749.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i.i
  %1124 = ptrtoint i32* %arrayidx749.i.i to i64
  call void @printLoadAddr(i64 %1124, i32 3101, i32 0, i32 0)
  %1125 = load i32, i32* %arrayidx749.i.i, align 4
  call void @printDDep(i32 3048, i32 3101)
  call void @printCDep(i32 572, i32 3101)
  %xor750.i.i = xor i32 %1121, %1125
  %1126 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1126, i32 3105, i32 0, i32 0)
  %1127 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3035, i32 3105)
  call void @printDDep(i32 3093, i32 3105)
  call void @printCDep(i32 572, i32 3105)
  %shr751.i.i = lshr i32 %1127, 18
  %and752.i.i = and i32 %shr751.i.i, 63
  %idxprom753.i.i = zext i32 %and752.i.i to i64
  %arrayidx754.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i.i
  %1128 = ptrtoint i32* %arrayidx754.i.i to i64
  call void @printLoadAddr(i64 %1128, i32 3113, i32 0, i32 0)
  %1129 = load i32, i32* %arrayidx754.i.i, align 4
  call void @printDDep(i32 3048, i32 3113)
  call void @printCDep(i32 572, i32 3113)
  %xor755.i.i = xor i32 %xor750.i.i, %1129
  %1130 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1130, i32 3117, i32 0, i32 0)
  %1131 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3035, i32 3117)
  call void @printDDep(i32 3105, i32 3117)
  call void @printCDep(i32 572, i32 3117)
  %shr756.i.i = lshr i32 %1131, 26
  %idxprom758.i.i = zext i32 %shr756.i.i to i64
  %arrayidx759.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i.i
  %1132 = ptrtoint i32* %arrayidx759.i.i to i64
  call void @printLoadAddr(i64 %1132, i32 3124, i32 0, i32 0)
  %1133 = load i32, i32* %arrayidx759.i.i, align 4
  call void @printDDep(i32 3048, i32 3124)
  call void @printCDep(i32 572, i32 3124)
  %xor760.i.i = xor i32 %xor755.i.i, %1133
  %1134 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1134, i32 3128, i32 0, i32 0)
  %1135 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3078, i32 3128)
  call void @printDDep(i32 3078, i32 3128)
  call void @printCDep(i32 572, i32 3128)
  %shr761.i.i = lshr i32 %1135, 2
  %and762.i.i = and i32 %shr761.i.i, 63
  %idxprom763.i.i = zext i32 %and762.i.i to i64
  %arrayidx764.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i.i
  %1136 = ptrtoint i32* %arrayidx764.i.i to i64
  call void @printLoadAddr(i64 %1136, i32 3136, i32 0, i32 0)
  %1137 = load i32, i32* %arrayidx764.i.i, align 4
  call void @printDDep(i32 3048, i32 3136)
  call void @printCDep(i32 572, i32 3136)
  %xor765.i.i = xor i32 %xor760.i.i, %1137
  %1138 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1138, i32 3140, i32 0, i32 0)
  %1139 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3078, i32 3140)
  call void @printDDep(i32 3128, i32 3140)
  call void @printCDep(i32 572, i32 3140)
  %shr766.i.i = lshr i32 %1139, 10
  %and767.i.i = and i32 %shr766.i.i, 63
  %idxprom768.i.i = zext i32 %and767.i.i to i64
  %arrayidx769.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i.i
  %1140 = ptrtoint i32* %arrayidx769.i.i to i64
  call void @printLoadAddr(i64 %1140, i32 3148, i32 0, i32 0)
  %1141 = load i32, i32* %arrayidx769.i.i, align 4
  call void @printDDep(i32 3048, i32 3148)
  call void @printCDep(i32 572, i32 3148)
  %xor770.i.i = xor i32 %xor765.i.i, %1141
  %1142 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1142, i32 3152, i32 0, i32 0)
  %1143 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3078, i32 3152)
  call void @printDDep(i32 3140, i32 3152)
  call void @printCDep(i32 572, i32 3152)
  %shr771.i.i = lshr i32 %1143, 18
  %and772.i.i = and i32 %shr771.i.i, 63
  %idxprom773.i.i = zext i32 %and772.i.i to i64
  %arrayidx774.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i.i
  %1144 = ptrtoint i32* %arrayidx774.i.i to i64
  call void @printLoadAddr(i64 %1144, i32 3160, i32 0, i32 0)
  %1145 = load i32, i32* %arrayidx774.i.i, align 4
  call void @printDDep(i32 3048, i32 3160)
  call void @printCDep(i32 572, i32 3160)
  %xor775.i.i = xor i32 %xor770.i.i, %1145
  %1146 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1146, i32 3164, i32 0, i32 0)
  %1147 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3078, i32 3164)
  call void @printDDep(i32 3152, i32 3164)
  call void @printCDep(i32 572, i32 3164)
  %shr776.i.i = lshr i32 %1147, 26
  %idxprom778.i.i = zext i32 %shr776.i.i to i64
  %arrayidx779.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i.i
  %1148 = ptrtoint i32* %arrayidx779.i.i to i64
  call void @printLoadAddr(i64 %1148, i32 3171, i32 0, i32 0)
  %1149 = load i32, i32* %arrayidx779.i.i, align 4
  call void @printDDep(i32 3048, i32 3171)
  call void @printCDep(i32 572, i32 3171)
  %xor780.i.i = xor i32 %xor775.i.i, %1149
  %1150 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1150, i32 3175, i32 0, i32 0)
  %1151 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 2854, i32 3175)
  call void @printDDep(i32 3048, i32 3175)
  call void @printCDep(i32 572, i32 3175)
  %xor781.i.i = xor i32 %1151, %xor780.i.i
  %1152 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %1152, i32 3180, i32 0, i32 0)
  store i32 %xor781.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 3078, i32 3180)
  call void @printDDep(i32 3175, i32 3180)
  call void @printCDep(i32 572, i32 3180)
  br label %DES_ecb_encrypt.exit

if.else.i.i:                                      ; preds = %entry
  %1153 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1153, i32 3185, i32 0, i32 0)
  %1154 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 537, i32 3185)
  call void @printDDep(i32 3180, i32 3185)
  call void @printCDep(i32 572, i32 3185)
  %1155 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1155, i32 3189, i32 0, i32 0)
  %1156 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3189)
  call void @printDDep(i32 3048, i32 3189)
  call void @printCDep(i32 572, i32 3189)
  %arrayidx782.i.i = getelementptr inbounds i32, i32* %1156, i64 30
  %1157 = ptrtoint i32* %arrayidx782.i.i to i64
  call void @printLoadAddr(i64 %1157, i32 3194, i32 0, i32 0)
  %1158 = load i32, i32* %arrayidx782.i.i, align 4
  call void @printDDep(i32 119, i32 3194)
  call void @printDDep(i32 3189, i32 3194)
  call void @printCDep(i32 572, i32 3194)
  %xor783.i.i = xor i32 %1154, %1158
  %1159 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1159, i32 3199, i32 0, i32 0)
  store i32 %xor783.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 569, i32 3199)
  call void @printDDep(i32 3194, i32 3199)
  call void @printCDep(i32 572, i32 3199)
  %1160 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1160, i32 3203, i32 0, i32 0)
  %1161 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 537, i32 3203)
  call void @printDDep(i32 3194, i32 3203)
  call void @printCDep(i32 572, i32 3203)
  %1162 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1162, i32 3207, i32 0, i32 0)
  %1163 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3207)
  call void @printDDep(i32 3194, i32 3207)
  call void @printCDep(i32 572, i32 3207)
  %arrayidx784.i.i = getelementptr inbounds i32, i32* %1163, i64 31
  %1164 = ptrtoint i32* %arrayidx784.i.i to i64
  call void @printLoadAddr(i64 %1164, i32 3212, i32 0, i32 0)
  %1165 = load i32, i32* %arrayidx784.i.i, align 4
  call void @printDDep(i32 119, i32 3212)
  call void @printDDep(i32 3207, i32 3212)
  call void @printCDep(i32 572, i32 3212)
  %xor785.i.i = xor i32 %1161, %1165
  %1166 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1166, i32 3217, i32 0, i32 0)
  store i32 %xor785.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 3199, i32 3217)
  call void @printDDep(i32 3212, i32 3217)
  call void @printCDep(i32 572, i32 3217)
  %1167 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1167, i32 3221, i32 0, i32 0)
  %1168 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3217, i32 3221)
  call void @printDDep(i32 3217, i32 3221)
  call void @printCDep(i32 572, i32 3221)
  %1169 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1168) #5, !srcloc !20
  %1170 = ptrtoint i32* %ret786.i.i to i64
  call void @printStoreAddr(i64 %1170, i32 3226, i32 0, i32 0)
  store i32 %1169, i32* %ret786.i.i, align 4
  call void @printDDep(i32 3217, i32 3226)
  call void @printDDep(i32 123, i32 3226)
  call void @printCDep(i32 572, i32 3226)
  %1171 = ptrtoint i32* %ret786.i.i to i64
  call void @printLoadAddr(i64 %1171, i32 3230, i32 0, i32 0)
  %1172 = load i32, i32* %ret786.i.i, align 4
  call void @printDDep(i32 3226, i32 3230)
  call void @printDDep(i32 3226, i32 3230)
  call void @printCDep(i32 572, i32 3230)
  %1173 = ptrtoint i32* %tmp787.i.i to i64
  call void @printStoreAddr(i64 %1173, i32 3234, i32 0, i32 0)
  store i32 %1172, i32* %tmp787.i.i, align 4
  call void @printDDep(i32 3226, i32 3234)
  call void @printDDep(i32 123, i32 3234)
  call void @printCDep(i32 572, i32 3234)
  %1174 = ptrtoint i32* %tmp787.i.i to i64
  call void @printLoadAddr(i64 %1174, i32 3238, i32 0, i32 0)
  %1175 = load i32, i32* %tmp787.i.i, align 4
  call void @printDDep(i32 3234, i32 3238)
  call void @printDDep(i32 3234, i32 3238)
  call void @printCDep(i32 572, i32 3238)
  %1176 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1176, i32 3242, i32 0, i32 0)
  store i32 %1175, i32* %t.i.i, align 4
  call void @printDDep(i32 3234, i32 3242)
  call void @printDDep(i32 3221, i32 3242)
  call void @printCDep(i32 572, i32 3242)
  %1177 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1177, i32 3246, i32 0, i32 0)
  %1178 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3199, i32 3246)
  call void @printDDep(i32 3212, i32 3246)
  call void @printCDep(i32 572, i32 3246)
  %shr788.i.i = lshr i32 %1178, 2
  %and789.i.i = and i32 %shr788.i.i, 63
  %idxprom790.i.i = zext i32 %and789.i.i to i64
  %arrayidx791.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i.i
  %1179 = ptrtoint i32* %arrayidx791.i.i to i64
  call void @printLoadAddr(i64 %1179, i32 3254, i32 0, i32 0)
  %1180 = load i32, i32* %arrayidx791.i.i, align 4
  call void @printDDep(i32 3212, i32 3254)
  call void @printCDep(i32 572, i32 3254)
  %1181 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1181, i32 3257, i32 0, i32 0)
  %1182 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3199, i32 3257)
  call void @printDDep(i32 3246, i32 3257)
  call void @printCDep(i32 572, i32 3257)
  %shr792.i.i = lshr i32 %1182, 10
  %and793.i.i = and i32 %shr792.i.i, 63
  %idxprom794.i.i = zext i32 %and793.i.i to i64
  %arrayidx795.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i.i
  %1183 = ptrtoint i32* %arrayidx795.i.i to i64
  call void @printLoadAddr(i64 %1183, i32 3265, i32 0, i32 0)
  %1184 = load i32, i32* %arrayidx795.i.i, align 4
  call void @printDDep(i32 3212, i32 3265)
  call void @printCDep(i32 572, i32 3265)
  %xor796.i.i = xor i32 %1180, %1184
  %1185 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1185, i32 3269, i32 0, i32 0)
  %1186 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3199, i32 3269)
  call void @printDDep(i32 3257, i32 3269)
  call void @printCDep(i32 572, i32 3269)
  %shr797.i.i = lshr i32 %1186, 18
  %and798.i.i = and i32 %shr797.i.i, 63
  %idxprom799.i.i = zext i32 %and798.i.i to i64
  %arrayidx800.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i.i
  %1187 = ptrtoint i32* %arrayidx800.i.i to i64
  call void @printLoadAddr(i64 %1187, i32 3277, i32 0, i32 0)
  %1188 = load i32, i32* %arrayidx800.i.i, align 4
  call void @printDDep(i32 3212, i32 3277)
  call void @printCDep(i32 572, i32 3277)
  %xor801.i.i = xor i32 %xor796.i.i, %1188
  %1189 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1189, i32 3281, i32 0, i32 0)
  %1190 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3199, i32 3281)
  call void @printDDep(i32 3269, i32 3281)
  call void @printCDep(i32 572, i32 3281)
  %shr802.i.i = lshr i32 %1190, 26
  %idxprom804.i.i = zext i32 %shr802.i.i to i64
  %arrayidx805.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i.i
  %1191 = ptrtoint i32* %arrayidx805.i.i to i64
  call void @printLoadAddr(i64 %1191, i32 3288, i32 0, i32 0)
  %1192 = load i32, i32* %arrayidx805.i.i, align 4
  call void @printDDep(i32 3212, i32 3288)
  call void @printCDep(i32 572, i32 3288)
  %xor806.i.i = xor i32 %xor801.i.i, %1192
  %1193 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1193, i32 3292, i32 0, i32 0)
  %1194 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3242, i32 3292)
  call void @printDDep(i32 3242, i32 3292)
  call void @printCDep(i32 572, i32 3292)
  %shr807.i.i = lshr i32 %1194, 2
  %and808.i.i = and i32 %shr807.i.i, 63
  %idxprom809.i.i = zext i32 %and808.i.i to i64
  %arrayidx810.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i.i
  %1195 = ptrtoint i32* %arrayidx810.i.i to i64
  call void @printLoadAddr(i64 %1195, i32 3300, i32 0, i32 0)
  %1196 = load i32, i32* %arrayidx810.i.i, align 4
  call void @printDDep(i32 3212, i32 3300)
  call void @printCDep(i32 572, i32 3300)
  %xor811.i.i = xor i32 %xor806.i.i, %1196
  %1197 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1197, i32 3304, i32 0, i32 0)
  %1198 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3242, i32 3304)
  call void @printDDep(i32 3292, i32 3304)
  call void @printCDep(i32 572, i32 3304)
  %shr812.i.i = lshr i32 %1198, 10
  %and813.i.i = and i32 %shr812.i.i, 63
  %idxprom814.i.i = zext i32 %and813.i.i to i64
  %arrayidx815.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i.i
  %1199 = ptrtoint i32* %arrayidx815.i.i to i64
  call void @printLoadAddr(i64 %1199, i32 3312, i32 0, i32 0)
  %1200 = load i32, i32* %arrayidx815.i.i, align 4
  call void @printDDep(i32 3212, i32 3312)
  call void @printCDep(i32 572, i32 3312)
  %xor816.i.i = xor i32 %xor811.i.i, %1200
  %1201 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1201, i32 3316, i32 0, i32 0)
  %1202 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3242, i32 3316)
  call void @printDDep(i32 3304, i32 3316)
  call void @printCDep(i32 572, i32 3316)
  %shr817.i.i = lshr i32 %1202, 18
  %and818.i.i = and i32 %shr817.i.i, 63
  %idxprom819.i.i = zext i32 %and818.i.i to i64
  %arrayidx820.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i.i
  %1203 = ptrtoint i32* %arrayidx820.i.i to i64
  call void @printLoadAddr(i64 %1203, i32 3324, i32 0, i32 0)
  %1204 = load i32, i32* %arrayidx820.i.i, align 4
  call void @printDDep(i32 3212, i32 3324)
  call void @printCDep(i32 572, i32 3324)
  %xor821.i.i = xor i32 %xor816.i.i, %1204
  %1205 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1205, i32 3328, i32 0, i32 0)
  %1206 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3242, i32 3328)
  call void @printDDep(i32 3316, i32 3328)
  call void @printCDep(i32 572, i32 3328)
  %shr822.i.i = lshr i32 %1206, 26
  %idxprom824.i.i = zext i32 %shr822.i.i to i64
  %arrayidx825.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i.i
  %1207 = ptrtoint i32* %arrayidx825.i.i to i64
  call void @printLoadAddr(i64 %1207, i32 3335, i32 0, i32 0)
  %1208 = load i32, i32* %arrayidx825.i.i, align 4
  call void @printDDep(i32 3212, i32 3335)
  call void @printCDep(i32 572, i32 3335)
  %xor826.i.i = xor i32 %xor821.i.i, %1208
  %1209 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1209, i32 3339, i32 0, i32 0)
  %1210 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 559, i32 3339)
  call void @printDDep(i32 3212, i32 3339)
  call void @printCDep(i32 572, i32 3339)
  %xor827.i.i = xor i32 %1210, %xor826.i.i
  %1211 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %1211, i32 3344, i32 0, i32 0)
  store i32 %xor827.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 3242, i32 3344)
  call void @printDDep(i32 3339, i32 3344)
  call void @printCDep(i32 572, i32 3344)
  %1212 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1212, i32 3348, i32 0, i32 0)
  %1213 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3344, i32 3348)
  call void @printDDep(i32 3344, i32 3348)
  call void @printCDep(i32 572, i32 3348)
  %1214 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1214, i32 3352, i32 0, i32 0)
  %1215 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3352)
  call void @printDDep(i32 3212, i32 3352)
  call void @printCDep(i32 572, i32 3352)
  %arrayidx828.i.i = getelementptr inbounds i32, i32* %1215, i64 28
  %1216 = ptrtoint i32* %arrayidx828.i.i to i64
  call void @printLoadAddr(i64 %1216, i32 3357, i32 0, i32 0)
  %1217 = load i32, i32* %arrayidx828.i.i, align 4
  call void @printDDep(i32 119, i32 3357)
  call void @printDDep(i32 3352, i32 3357)
  call void @printCDep(i32 572, i32 3357)
  %xor829.i.i = xor i32 %1213, %1217
  %1218 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1218, i32 3362, i32 0, i32 0)
  store i32 %xor829.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 3344, i32 3362)
  call void @printDDep(i32 3357, i32 3362)
  call void @printCDep(i32 572, i32 3362)
  %1219 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1219, i32 3366, i32 0, i32 0)
  %1220 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3344, i32 3366)
  call void @printDDep(i32 3357, i32 3366)
  call void @printCDep(i32 572, i32 3366)
  %1221 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1221, i32 3370, i32 0, i32 0)
  %1222 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3370)
  call void @printDDep(i32 3357, i32 3370)
  call void @printCDep(i32 572, i32 3370)
  %arrayidx830.i.i = getelementptr inbounds i32, i32* %1222, i64 29
  %1223 = ptrtoint i32* %arrayidx830.i.i to i64
  call void @printLoadAddr(i64 %1223, i32 3375, i32 0, i32 0)
  %1224 = load i32, i32* %arrayidx830.i.i, align 4
  call void @printDDep(i32 119, i32 3375)
  call void @printDDep(i32 3370, i32 3375)
  call void @printCDep(i32 572, i32 3375)
  %xor831.i.i = xor i32 %1220, %1224
  %1225 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1225, i32 3380, i32 0, i32 0)
  store i32 %xor831.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 3362, i32 3380)
  call void @printDDep(i32 3375, i32 3380)
  call void @printCDep(i32 572, i32 3380)
  %1226 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1226, i32 3384, i32 0, i32 0)
  %1227 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3380, i32 3384)
  call void @printDDep(i32 3380, i32 3384)
  call void @printCDep(i32 572, i32 3384)
  %1228 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1227) #5, !srcloc !21
  %1229 = ptrtoint i32* %ret832.i.i to i64
  call void @printStoreAddr(i64 %1229, i32 3389, i32 0, i32 0)
  store i32 %1228, i32* %ret832.i.i, align 4
  call void @printDDep(i32 3380, i32 3389)
  call void @printDDep(i32 123, i32 3389)
  call void @printCDep(i32 572, i32 3389)
  %1230 = ptrtoint i32* %ret832.i.i to i64
  call void @printLoadAddr(i64 %1230, i32 3393, i32 0, i32 0)
  %1231 = load i32, i32* %ret832.i.i, align 4
  call void @printDDep(i32 3389, i32 3393)
  call void @printDDep(i32 3389, i32 3393)
  call void @printCDep(i32 572, i32 3393)
  %1232 = ptrtoint i32* %tmp833.i.i to i64
  call void @printStoreAddr(i64 %1232, i32 3397, i32 0, i32 0)
  store i32 %1231, i32* %tmp833.i.i, align 4
  call void @printDDep(i32 3389, i32 3397)
  call void @printDDep(i32 123, i32 3397)
  call void @printCDep(i32 572, i32 3397)
  %1233 = ptrtoint i32* %tmp833.i.i to i64
  call void @printLoadAddr(i64 %1233, i32 3401, i32 0, i32 0)
  %1234 = load i32, i32* %tmp833.i.i, align 4
  call void @printDDep(i32 3397, i32 3401)
  call void @printDDep(i32 3397, i32 3401)
  call void @printCDep(i32 572, i32 3401)
  %1235 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1235, i32 3405, i32 0, i32 0)
  store i32 %1234, i32* %t.i.i, align 4
  call void @printDDep(i32 3397, i32 3405)
  call void @printDDep(i32 3384, i32 3405)
  call void @printCDep(i32 572, i32 3405)
  %1236 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1236, i32 3409, i32 0, i32 0)
  %1237 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3362, i32 3409)
  call void @printDDep(i32 3375, i32 3409)
  call void @printCDep(i32 572, i32 3409)
  %shr834.i.i = lshr i32 %1237, 2
  %and835.i.i = and i32 %shr834.i.i, 63
  %idxprom836.i.i = zext i32 %and835.i.i to i64
  %arrayidx837.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i.i
  %1238 = ptrtoint i32* %arrayidx837.i.i to i64
  call void @printLoadAddr(i64 %1238, i32 3417, i32 0, i32 0)
  %1239 = load i32, i32* %arrayidx837.i.i, align 4
  call void @printDDep(i32 3375, i32 3417)
  call void @printCDep(i32 572, i32 3417)
  %1240 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1240, i32 3420, i32 0, i32 0)
  %1241 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3362, i32 3420)
  call void @printDDep(i32 3409, i32 3420)
  call void @printCDep(i32 572, i32 3420)
  %shr838.i.i = lshr i32 %1241, 10
  %and839.i.i = and i32 %shr838.i.i, 63
  %idxprom840.i.i = zext i32 %and839.i.i to i64
  %arrayidx841.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i.i
  %1242 = ptrtoint i32* %arrayidx841.i.i to i64
  call void @printLoadAddr(i64 %1242, i32 3428, i32 0, i32 0)
  %1243 = load i32, i32* %arrayidx841.i.i, align 4
  call void @printDDep(i32 3375, i32 3428)
  call void @printCDep(i32 572, i32 3428)
  %xor842.i.i = xor i32 %1239, %1243
  %1244 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1244, i32 3432, i32 0, i32 0)
  %1245 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3362, i32 3432)
  call void @printDDep(i32 3420, i32 3432)
  call void @printCDep(i32 572, i32 3432)
  %shr843.i.i = lshr i32 %1245, 18
  %and844.i.i = and i32 %shr843.i.i, 63
  %idxprom845.i.i = zext i32 %and844.i.i to i64
  %arrayidx846.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i.i
  %1246 = ptrtoint i32* %arrayidx846.i.i to i64
  call void @printLoadAddr(i64 %1246, i32 3440, i32 0, i32 0)
  %1247 = load i32, i32* %arrayidx846.i.i, align 4
  call void @printDDep(i32 3375, i32 3440)
  call void @printCDep(i32 572, i32 3440)
  %xor847.i.i = xor i32 %xor842.i.i, %1247
  %1248 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1248, i32 3444, i32 0, i32 0)
  %1249 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3362, i32 3444)
  call void @printDDep(i32 3432, i32 3444)
  call void @printCDep(i32 572, i32 3444)
  %shr848.i.i = lshr i32 %1249, 26
  %idxprom850.i.i = zext i32 %shr848.i.i to i64
  %arrayidx851.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i.i
  %1250 = ptrtoint i32* %arrayidx851.i.i to i64
  call void @printLoadAddr(i64 %1250, i32 3451, i32 0, i32 0)
  %1251 = load i32, i32* %arrayidx851.i.i, align 4
  call void @printDDep(i32 3375, i32 3451)
  call void @printCDep(i32 572, i32 3451)
  %xor852.i.i = xor i32 %xor847.i.i, %1251
  %1252 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1252, i32 3455, i32 0, i32 0)
  %1253 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3405, i32 3455)
  call void @printDDep(i32 3405, i32 3455)
  call void @printCDep(i32 572, i32 3455)
  %shr853.i.i = lshr i32 %1253, 2
  %and854.i.i = and i32 %shr853.i.i, 63
  %idxprom855.i.i = zext i32 %and854.i.i to i64
  %arrayidx856.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i.i
  %1254 = ptrtoint i32* %arrayidx856.i.i to i64
  call void @printLoadAddr(i64 %1254, i32 3463, i32 0, i32 0)
  %1255 = load i32, i32* %arrayidx856.i.i, align 4
  call void @printDDep(i32 3375, i32 3463)
  call void @printCDep(i32 572, i32 3463)
  %xor857.i.i = xor i32 %xor852.i.i, %1255
  %1256 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1256, i32 3467, i32 0, i32 0)
  %1257 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3405, i32 3467)
  call void @printDDep(i32 3455, i32 3467)
  call void @printCDep(i32 572, i32 3467)
  %shr858.i.i = lshr i32 %1257, 10
  %and859.i.i = and i32 %shr858.i.i, 63
  %idxprom860.i.i = zext i32 %and859.i.i to i64
  %arrayidx861.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i.i
  %1258 = ptrtoint i32* %arrayidx861.i.i to i64
  call void @printLoadAddr(i64 %1258, i32 3475, i32 0, i32 0)
  %1259 = load i32, i32* %arrayidx861.i.i, align 4
  call void @printDDep(i32 3375, i32 3475)
  call void @printCDep(i32 572, i32 3475)
  %xor862.i.i = xor i32 %xor857.i.i, %1259
  %1260 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1260, i32 3479, i32 0, i32 0)
  %1261 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3405, i32 3479)
  call void @printDDep(i32 3467, i32 3479)
  call void @printCDep(i32 572, i32 3479)
  %shr863.i.i = lshr i32 %1261, 18
  %and864.i.i = and i32 %shr863.i.i, 63
  %idxprom865.i.i = zext i32 %and864.i.i to i64
  %arrayidx866.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i.i
  %1262 = ptrtoint i32* %arrayidx866.i.i to i64
  call void @printLoadAddr(i64 %1262, i32 3487, i32 0, i32 0)
  %1263 = load i32, i32* %arrayidx866.i.i, align 4
  call void @printDDep(i32 3375, i32 3487)
  call void @printCDep(i32 572, i32 3487)
  %xor867.i.i = xor i32 %xor862.i.i, %1263
  %1264 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1264, i32 3491, i32 0, i32 0)
  %1265 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3405, i32 3491)
  call void @printDDep(i32 3479, i32 3491)
  call void @printCDep(i32 572, i32 3491)
  %shr868.i.i = lshr i32 %1265, 26
  %idxprom870.i.i = zext i32 %shr868.i.i to i64
  %arrayidx871.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i.i
  %1266 = ptrtoint i32* %arrayidx871.i.i to i64
  call void @printLoadAddr(i64 %1266, i32 3498, i32 0, i32 0)
  %1267 = load i32, i32* %arrayidx871.i.i, align 4
  call void @printDDep(i32 3375, i32 3498)
  call void @printCDep(i32 572, i32 3498)
  %xor872.i.i = xor i32 %xor867.i.i, %1267
  %1268 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1268, i32 3502, i32 0, i32 0)
  %1269 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 537, i32 3502)
  call void @printDDep(i32 3375, i32 3502)
  call void @printCDep(i32 572, i32 3502)
  %xor873.i.i = xor i32 %1269, %xor872.i.i
  %1270 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %1270, i32 3507, i32 0, i32 0)
  store i32 %xor873.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 3405, i32 3507)
  call void @printDDep(i32 3502, i32 3507)
  call void @printCDep(i32 572, i32 3507)
  %1271 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1271, i32 3511, i32 0, i32 0)
  %1272 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 3507, i32 3511)
  call void @printDDep(i32 3507, i32 3511)
  call void @printCDep(i32 572, i32 3511)
  %1273 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1273, i32 3515, i32 0, i32 0)
  %1274 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3515)
  call void @printDDep(i32 3375, i32 3515)
  call void @printCDep(i32 572, i32 3515)
  %arrayidx874.i.i = getelementptr inbounds i32, i32* %1274, i64 26
  %1275 = ptrtoint i32* %arrayidx874.i.i to i64
  call void @printLoadAddr(i64 %1275, i32 3520, i32 0, i32 0)
  %1276 = load i32, i32* %arrayidx874.i.i, align 4
  call void @printDDep(i32 119, i32 3520)
  call void @printDDep(i32 3515, i32 3520)
  call void @printCDep(i32 572, i32 3520)
  %xor875.i.i = xor i32 %1272, %1276
  %1277 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1277, i32 3525, i32 0, i32 0)
  store i32 %xor875.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 3507, i32 3525)
  call void @printDDep(i32 3520, i32 3525)
  call void @printCDep(i32 572, i32 3525)
  %1278 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1278, i32 3529, i32 0, i32 0)
  %1279 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 3507, i32 3529)
  call void @printDDep(i32 3520, i32 3529)
  call void @printCDep(i32 572, i32 3529)
  %1280 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1280, i32 3533, i32 0, i32 0)
  %1281 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3533)
  call void @printDDep(i32 3520, i32 3533)
  call void @printCDep(i32 572, i32 3533)
  %arrayidx876.i.i = getelementptr inbounds i32, i32* %1281, i64 27
  %1282 = ptrtoint i32* %arrayidx876.i.i to i64
  call void @printLoadAddr(i64 %1282, i32 3538, i32 0, i32 0)
  %1283 = load i32, i32* %arrayidx876.i.i, align 4
  call void @printDDep(i32 119, i32 3538)
  call void @printDDep(i32 3533, i32 3538)
  call void @printCDep(i32 572, i32 3538)
  %xor877.i.i = xor i32 %1279, %1283
  %1284 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1284, i32 3543, i32 0, i32 0)
  store i32 %xor877.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 3525, i32 3543)
  call void @printDDep(i32 3538, i32 3543)
  call void @printCDep(i32 572, i32 3543)
  %1285 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1285, i32 3547, i32 0, i32 0)
  %1286 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3543, i32 3547)
  call void @printDDep(i32 3543, i32 3547)
  call void @printCDep(i32 572, i32 3547)
  %1287 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1286) #5, !srcloc !22
  %1288 = ptrtoint i32* %ret878.i.i to i64
  call void @printStoreAddr(i64 %1288, i32 3552, i32 0, i32 0)
  store i32 %1287, i32* %ret878.i.i, align 4
  call void @printDDep(i32 3543, i32 3552)
  call void @printDDep(i32 123, i32 3552)
  call void @printCDep(i32 572, i32 3552)
  %1289 = ptrtoint i32* %ret878.i.i to i64
  call void @printLoadAddr(i64 %1289, i32 3556, i32 0, i32 0)
  %1290 = load i32, i32* %ret878.i.i, align 4
  call void @printDDep(i32 3552, i32 3556)
  call void @printDDep(i32 3552, i32 3556)
  call void @printCDep(i32 572, i32 3556)
  %1291 = ptrtoint i32* %tmp879.i.i to i64
  call void @printStoreAddr(i64 %1291, i32 3560, i32 0, i32 0)
  store i32 %1290, i32* %tmp879.i.i, align 4
  call void @printDDep(i32 3552, i32 3560)
  call void @printDDep(i32 123, i32 3560)
  call void @printCDep(i32 572, i32 3560)
  %1292 = ptrtoint i32* %tmp879.i.i to i64
  call void @printLoadAddr(i64 %1292, i32 3564, i32 0, i32 0)
  %1293 = load i32, i32* %tmp879.i.i, align 4
  call void @printDDep(i32 3560, i32 3564)
  call void @printDDep(i32 3560, i32 3564)
  call void @printCDep(i32 572, i32 3564)
  %1294 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1294, i32 3568, i32 0, i32 0)
  store i32 %1293, i32* %t.i.i, align 4
  call void @printDDep(i32 3560, i32 3568)
  call void @printDDep(i32 3547, i32 3568)
  call void @printCDep(i32 572, i32 3568)
  %1295 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1295, i32 3572, i32 0, i32 0)
  %1296 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3525, i32 3572)
  call void @printDDep(i32 3538, i32 3572)
  call void @printCDep(i32 572, i32 3572)
  %shr880.i.i = lshr i32 %1296, 2
  %and881.i.i = and i32 %shr880.i.i, 63
  %idxprom882.i.i = zext i32 %and881.i.i to i64
  %arrayidx883.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i.i
  %1297 = ptrtoint i32* %arrayidx883.i.i to i64
  call void @printLoadAddr(i64 %1297, i32 3580, i32 0, i32 0)
  %1298 = load i32, i32* %arrayidx883.i.i, align 4
  call void @printDDep(i32 3538, i32 3580)
  call void @printCDep(i32 572, i32 3580)
  %1299 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1299, i32 3583, i32 0, i32 0)
  %1300 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3525, i32 3583)
  call void @printDDep(i32 3572, i32 3583)
  call void @printCDep(i32 572, i32 3583)
  %shr884.i.i = lshr i32 %1300, 10
  %and885.i.i = and i32 %shr884.i.i, 63
  %idxprom886.i.i = zext i32 %and885.i.i to i64
  %arrayidx887.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i.i
  %1301 = ptrtoint i32* %arrayidx887.i.i to i64
  call void @printLoadAddr(i64 %1301, i32 3591, i32 0, i32 0)
  %1302 = load i32, i32* %arrayidx887.i.i, align 4
  call void @printDDep(i32 3538, i32 3591)
  call void @printCDep(i32 572, i32 3591)
  %xor888.i.i = xor i32 %1298, %1302
  %1303 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1303, i32 3595, i32 0, i32 0)
  %1304 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3525, i32 3595)
  call void @printDDep(i32 3583, i32 3595)
  call void @printCDep(i32 572, i32 3595)
  %shr889.i.i = lshr i32 %1304, 18
  %and890.i.i = and i32 %shr889.i.i, 63
  %idxprom891.i.i = zext i32 %and890.i.i to i64
  %arrayidx892.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i.i
  %1305 = ptrtoint i32* %arrayidx892.i.i to i64
  call void @printLoadAddr(i64 %1305, i32 3603, i32 0, i32 0)
  %1306 = load i32, i32* %arrayidx892.i.i, align 4
  call void @printDDep(i32 3538, i32 3603)
  call void @printCDep(i32 572, i32 3603)
  %xor893.i.i = xor i32 %xor888.i.i, %1306
  %1307 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1307, i32 3607, i32 0, i32 0)
  %1308 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3525, i32 3607)
  call void @printDDep(i32 3595, i32 3607)
  call void @printCDep(i32 572, i32 3607)
  %shr894.i.i = lshr i32 %1308, 26
  %idxprom896.i.i = zext i32 %shr894.i.i to i64
  %arrayidx897.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i.i
  %1309 = ptrtoint i32* %arrayidx897.i.i to i64
  call void @printLoadAddr(i64 %1309, i32 3614, i32 0, i32 0)
  %1310 = load i32, i32* %arrayidx897.i.i, align 4
  call void @printDDep(i32 3538, i32 3614)
  call void @printCDep(i32 572, i32 3614)
  %xor898.i.i = xor i32 %xor893.i.i, %1310
  %1311 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1311, i32 3618, i32 0, i32 0)
  %1312 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3568, i32 3618)
  call void @printDDep(i32 3568, i32 3618)
  call void @printCDep(i32 572, i32 3618)
  %shr899.i.i = lshr i32 %1312, 2
  %and900.i.i = and i32 %shr899.i.i, 63
  %idxprom901.i.i = zext i32 %and900.i.i to i64
  %arrayidx902.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i.i
  %1313 = ptrtoint i32* %arrayidx902.i.i to i64
  call void @printLoadAddr(i64 %1313, i32 3626, i32 0, i32 0)
  %1314 = load i32, i32* %arrayidx902.i.i, align 4
  call void @printDDep(i32 3538, i32 3626)
  call void @printCDep(i32 572, i32 3626)
  %xor903.i.i = xor i32 %xor898.i.i, %1314
  %1315 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1315, i32 3630, i32 0, i32 0)
  %1316 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3568, i32 3630)
  call void @printDDep(i32 3618, i32 3630)
  call void @printCDep(i32 572, i32 3630)
  %shr904.i.i = lshr i32 %1316, 10
  %and905.i.i = and i32 %shr904.i.i, 63
  %idxprom906.i.i = zext i32 %and905.i.i to i64
  %arrayidx907.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i.i
  %1317 = ptrtoint i32* %arrayidx907.i.i to i64
  call void @printLoadAddr(i64 %1317, i32 3638, i32 0, i32 0)
  %1318 = load i32, i32* %arrayidx907.i.i, align 4
  call void @printDDep(i32 3538, i32 3638)
  call void @printCDep(i32 572, i32 3638)
  %xor908.i.i = xor i32 %xor903.i.i, %1318
  %1319 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1319, i32 3642, i32 0, i32 0)
  %1320 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3568, i32 3642)
  call void @printDDep(i32 3630, i32 3642)
  call void @printCDep(i32 572, i32 3642)
  %shr909.i.i = lshr i32 %1320, 18
  %and910.i.i = and i32 %shr909.i.i, 63
  %idxprom911.i.i = zext i32 %and910.i.i to i64
  %arrayidx912.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i.i
  %1321 = ptrtoint i32* %arrayidx912.i.i to i64
  call void @printLoadAddr(i64 %1321, i32 3650, i32 0, i32 0)
  %1322 = load i32, i32* %arrayidx912.i.i, align 4
  call void @printDDep(i32 3538, i32 3650)
  call void @printCDep(i32 572, i32 3650)
  %xor913.i.i = xor i32 %xor908.i.i, %1322
  %1323 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1323, i32 3654, i32 0, i32 0)
  %1324 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3568, i32 3654)
  call void @printDDep(i32 3642, i32 3654)
  call void @printCDep(i32 572, i32 3654)
  %shr914.i.i = lshr i32 %1324, 26
  %idxprom916.i.i = zext i32 %shr914.i.i to i64
  %arrayidx917.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i.i
  %1325 = ptrtoint i32* %arrayidx917.i.i to i64
  call void @printLoadAddr(i64 %1325, i32 3661, i32 0, i32 0)
  %1326 = load i32, i32* %arrayidx917.i.i, align 4
  call void @printDDep(i32 3538, i32 3661)
  call void @printCDep(i32 572, i32 3661)
  %xor918.i.i = xor i32 %xor913.i.i, %1326
  %1327 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1327, i32 3665, i32 0, i32 0)
  %1328 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3344, i32 3665)
  call void @printDDep(i32 3538, i32 3665)
  call void @printCDep(i32 572, i32 3665)
  %xor919.i.i = xor i32 %1328, %xor918.i.i
  %1329 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %1329, i32 3670, i32 0, i32 0)
  store i32 %xor919.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 3568, i32 3670)
  call void @printDDep(i32 3665, i32 3670)
  call void @printCDep(i32 572, i32 3670)
  %1330 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1330, i32 3674, i32 0, i32 0)
  %1331 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3670, i32 3674)
  call void @printDDep(i32 3670, i32 3674)
  call void @printCDep(i32 572, i32 3674)
  %1332 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1332, i32 3678, i32 0, i32 0)
  %1333 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3678)
  call void @printDDep(i32 3538, i32 3678)
  call void @printCDep(i32 572, i32 3678)
  %arrayidx920.i.i = getelementptr inbounds i32, i32* %1333, i64 24
  %1334 = ptrtoint i32* %arrayidx920.i.i to i64
  call void @printLoadAddr(i64 %1334, i32 3683, i32 0, i32 0)
  %1335 = load i32, i32* %arrayidx920.i.i, align 4
  call void @printDDep(i32 119, i32 3683)
  call void @printDDep(i32 3678, i32 3683)
  call void @printCDep(i32 572, i32 3683)
  %xor921.i.i = xor i32 %1331, %1335
  %1336 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1336, i32 3688, i32 0, i32 0)
  store i32 %xor921.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 3670, i32 3688)
  call void @printDDep(i32 3683, i32 3688)
  call void @printCDep(i32 572, i32 3688)
  %1337 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1337, i32 3692, i32 0, i32 0)
  %1338 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3670, i32 3692)
  call void @printDDep(i32 3683, i32 3692)
  call void @printCDep(i32 572, i32 3692)
  %1339 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1339, i32 3696, i32 0, i32 0)
  %1340 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3696)
  call void @printDDep(i32 3683, i32 3696)
  call void @printCDep(i32 572, i32 3696)
  %arrayidx922.i.i = getelementptr inbounds i32, i32* %1340, i64 25
  %1341 = ptrtoint i32* %arrayidx922.i.i to i64
  call void @printLoadAddr(i64 %1341, i32 3701, i32 0, i32 0)
  %1342 = load i32, i32* %arrayidx922.i.i, align 4
  call void @printDDep(i32 119, i32 3701)
  call void @printDDep(i32 3696, i32 3701)
  call void @printCDep(i32 572, i32 3701)
  %xor923.i.i = xor i32 %1338, %1342
  %1343 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1343, i32 3706, i32 0, i32 0)
  store i32 %xor923.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 3688, i32 3706)
  call void @printDDep(i32 3701, i32 3706)
  call void @printCDep(i32 572, i32 3706)
  %1344 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1344, i32 3710, i32 0, i32 0)
  %1345 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3706, i32 3710)
  call void @printDDep(i32 3706, i32 3710)
  call void @printCDep(i32 572, i32 3710)
  %1346 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1345) #5, !srcloc !23
  %1347 = ptrtoint i32* %ret924.i.i to i64
  call void @printStoreAddr(i64 %1347, i32 3715, i32 0, i32 0)
  store i32 %1346, i32* %ret924.i.i, align 4
  call void @printDDep(i32 3706, i32 3715)
  call void @printDDep(i32 123, i32 3715)
  call void @printCDep(i32 572, i32 3715)
  %1348 = ptrtoint i32* %ret924.i.i to i64
  call void @printLoadAddr(i64 %1348, i32 3719, i32 0, i32 0)
  %1349 = load i32, i32* %ret924.i.i, align 4
  call void @printDDep(i32 3715, i32 3719)
  call void @printDDep(i32 3715, i32 3719)
  call void @printCDep(i32 572, i32 3719)
  %1350 = ptrtoint i32* %tmp925.i.i to i64
  call void @printStoreAddr(i64 %1350, i32 3723, i32 0, i32 0)
  store i32 %1349, i32* %tmp925.i.i, align 4
  call void @printDDep(i32 3715, i32 3723)
  call void @printDDep(i32 123, i32 3723)
  call void @printCDep(i32 572, i32 3723)
  %1351 = ptrtoint i32* %tmp925.i.i to i64
  call void @printLoadAddr(i64 %1351, i32 3727, i32 0, i32 0)
  %1352 = load i32, i32* %tmp925.i.i, align 4
  call void @printDDep(i32 3723, i32 3727)
  call void @printDDep(i32 3723, i32 3727)
  call void @printCDep(i32 572, i32 3727)
  %1353 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1353, i32 3731, i32 0, i32 0)
  store i32 %1352, i32* %t.i.i, align 4
  call void @printDDep(i32 3723, i32 3731)
  call void @printDDep(i32 3710, i32 3731)
  call void @printCDep(i32 572, i32 3731)
  %1354 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1354, i32 3735, i32 0, i32 0)
  %1355 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3688, i32 3735)
  call void @printDDep(i32 3701, i32 3735)
  call void @printCDep(i32 572, i32 3735)
  %shr926.i.i = lshr i32 %1355, 2
  %and927.i.i = and i32 %shr926.i.i, 63
  %idxprom928.i.i = zext i32 %and927.i.i to i64
  %arrayidx929.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i.i
  %1356 = ptrtoint i32* %arrayidx929.i.i to i64
  call void @printLoadAddr(i64 %1356, i32 3743, i32 0, i32 0)
  %1357 = load i32, i32* %arrayidx929.i.i, align 4
  call void @printDDep(i32 3701, i32 3743)
  call void @printCDep(i32 572, i32 3743)
  %1358 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1358, i32 3746, i32 0, i32 0)
  %1359 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3688, i32 3746)
  call void @printDDep(i32 3735, i32 3746)
  call void @printCDep(i32 572, i32 3746)
  %shr930.i.i = lshr i32 %1359, 10
  %and931.i.i = and i32 %shr930.i.i, 63
  %idxprom932.i.i = zext i32 %and931.i.i to i64
  %arrayidx933.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i.i
  %1360 = ptrtoint i32* %arrayidx933.i.i to i64
  call void @printLoadAddr(i64 %1360, i32 3754, i32 0, i32 0)
  %1361 = load i32, i32* %arrayidx933.i.i, align 4
  call void @printDDep(i32 3701, i32 3754)
  call void @printCDep(i32 572, i32 3754)
  %xor934.i.i = xor i32 %1357, %1361
  %1362 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1362, i32 3758, i32 0, i32 0)
  %1363 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3688, i32 3758)
  call void @printDDep(i32 3746, i32 3758)
  call void @printCDep(i32 572, i32 3758)
  %shr935.i.i = lshr i32 %1363, 18
  %and936.i.i = and i32 %shr935.i.i, 63
  %idxprom937.i.i = zext i32 %and936.i.i to i64
  %arrayidx938.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i.i
  %1364 = ptrtoint i32* %arrayidx938.i.i to i64
  call void @printLoadAddr(i64 %1364, i32 3766, i32 0, i32 0)
  %1365 = load i32, i32* %arrayidx938.i.i, align 4
  call void @printDDep(i32 3701, i32 3766)
  call void @printCDep(i32 572, i32 3766)
  %xor939.i.i = xor i32 %xor934.i.i, %1365
  %1366 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1366, i32 3770, i32 0, i32 0)
  %1367 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3688, i32 3770)
  call void @printDDep(i32 3758, i32 3770)
  call void @printCDep(i32 572, i32 3770)
  %shr940.i.i = lshr i32 %1367, 26
  %idxprom942.i.i = zext i32 %shr940.i.i to i64
  %arrayidx943.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i.i
  %1368 = ptrtoint i32* %arrayidx943.i.i to i64
  call void @printLoadAddr(i64 %1368, i32 3777, i32 0, i32 0)
  %1369 = load i32, i32* %arrayidx943.i.i, align 4
  call void @printDDep(i32 3701, i32 3777)
  call void @printCDep(i32 572, i32 3777)
  %xor944.i.i = xor i32 %xor939.i.i, %1369
  %1370 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1370, i32 3781, i32 0, i32 0)
  %1371 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3731, i32 3781)
  call void @printDDep(i32 3731, i32 3781)
  call void @printCDep(i32 572, i32 3781)
  %shr945.i.i = lshr i32 %1371, 2
  %and946.i.i = and i32 %shr945.i.i, 63
  %idxprom947.i.i = zext i32 %and946.i.i to i64
  %arrayidx948.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i.i
  %1372 = ptrtoint i32* %arrayidx948.i.i to i64
  call void @printLoadAddr(i64 %1372, i32 3789, i32 0, i32 0)
  %1373 = load i32, i32* %arrayidx948.i.i, align 4
  call void @printDDep(i32 3701, i32 3789)
  call void @printCDep(i32 572, i32 3789)
  %xor949.i.i = xor i32 %xor944.i.i, %1373
  %1374 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1374, i32 3793, i32 0, i32 0)
  %1375 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3731, i32 3793)
  call void @printDDep(i32 3781, i32 3793)
  call void @printCDep(i32 572, i32 3793)
  %shr950.i.i = lshr i32 %1375, 10
  %and951.i.i = and i32 %shr950.i.i, 63
  %idxprom952.i.i = zext i32 %and951.i.i to i64
  %arrayidx953.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i.i
  %1376 = ptrtoint i32* %arrayidx953.i.i to i64
  call void @printLoadAddr(i64 %1376, i32 3801, i32 0, i32 0)
  %1377 = load i32, i32* %arrayidx953.i.i, align 4
  call void @printDDep(i32 3701, i32 3801)
  call void @printCDep(i32 572, i32 3801)
  %xor954.i.i = xor i32 %xor949.i.i, %1377
  %1378 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1378, i32 3805, i32 0, i32 0)
  %1379 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3731, i32 3805)
  call void @printDDep(i32 3793, i32 3805)
  call void @printCDep(i32 572, i32 3805)
  %shr955.i.i = lshr i32 %1379, 18
  %and956.i.i = and i32 %shr955.i.i, 63
  %idxprom957.i.i = zext i32 %and956.i.i to i64
  %arrayidx958.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i.i
  %1380 = ptrtoint i32* %arrayidx958.i.i to i64
  call void @printLoadAddr(i64 %1380, i32 3813, i32 0, i32 0)
  %1381 = load i32, i32* %arrayidx958.i.i, align 4
  call void @printDDep(i32 3701, i32 3813)
  call void @printCDep(i32 572, i32 3813)
  %xor959.i.i = xor i32 %xor954.i.i, %1381
  %1382 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1382, i32 3817, i32 0, i32 0)
  %1383 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3731, i32 3817)
  call void @printDDep(i32 3805, i32 3817)
  call void @printCDep(i32 572, i32 3817)
  %shr960.i.i = lshr i32 %1383, 26
  %idxprom962.i.i = zext i32 %shr960.i.i to i64
  %arrayidx963.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i.i
  %1384 = ptrtoint i32* %arrayidx963.i.i to i64
  call void @printLoadAddr(i64 %1384, i32 3824, i32 0, i32 0)
  %1385 = load i32, i32* %arrayidx963.i.i, align 4
  call void @printDDep(i32 3701, i32 3824)
  call void @printCDep(i32 572, i32 3824)
  %xor964.i.i = xor i32 %xor959.i.i, %1385
  %1386 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1386, i32 3828, i32 0, i32 0)
  %1387 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 3507, i32 3828)
  call void @printDDep(i32 3701, i32 3828)
  call void @printCDep(i32 572, i32 3828)
  %xor965.i.i = xor i32 %1387, %xor964.i.i
  %1388 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %1388, i32 3833, i32 0, i32 0)
  store i32 %xor965.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 3731, i32 3833)
  call void @printDDep(i32 3828, i32 3833)
  call void @printCDep(i32 572, i32 3833)
  %1389 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1389, i32 3837, i32 0, i32 0)
  %1390 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 3833, i32 3837)
  call void @printDDep(i32 3833, i32 3837)
  call void @printCDep(i32 572, i32 3837)
  %1391 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1391, i32 3841, i32 0, i32 0)
  %1392 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3841)
  call void @printDDep(i32 3701, i32 3841)
  call void @printCDep(i32 572, i32 3841)
  %arrayidx966.i.i = getelementptr inbounds i32, i32* %1392, i64 22
  %1393 = ptrtoint i32* %arrayidx966.i.i to i64
  call void @printLoadAddr(i64 %1393, i32 3846, i32 0, i32 0)
  %1394 = load i32, i32* %arrayidx966.i.i, align 4
  call void @printDDep(i32 119, i32 3846)
  call void @printDDep(i32 3841, i32 3846)
  call void @printCDep(i32 572, i32 3846)
  %xor967.i.i = xor i32 %1390, %1394
  %1395 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1395, i32 3851, i32 0, i32 0)
  store i32 %xor967.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 3833, i32 3851)
  call void @printDDep(i32 3846, i32 3851)
  call void @printCDep(i32 572, i32 3851)
  %1396 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1396, i32 3855, i32 0, i32 0)
  %1397 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 3833, i32 3855)
  call void @printDDep(i32 3846, i32 3855)
  call void @printCDep(i32 572, i32 3855)
  %1398 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1398, i32 3859, i32 0, i32 0)
  %1399 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 3859)
  call void @printDDep(i32 3846, i32 3859)
  call void @printCDep(i32 572, i32 3859)
  %arrayidx968.i.i = getelementptr inbounds i32, i32* %1399, i64 23
  %1400 = ptrtoint i32* %arrayidx968.i.i to i64
  call void @printLoadAddr(i64 %1400, i32 3864, i32 0, i32 0)
  %1401 = load i32, i32* %arrayidx968.i.i, align 4
  call void @printDDep(i32 119, i32 3864)
  call void @printDDep(i32 3859, i32 3864)
  call void @printCDep(i32 572, i32 3864)
  %xor969.i.i = xor i32 %1397, %1401
  %1402 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1402, i32 3869, i32 0, i32 0)
  store i32 %xor969.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 3851, i32 3869)
  call void @printDDep(i32 3864, i32 3869)
  call void @printCDep(i32 572, i32 3869)
  %1403 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1403, i32 3873, i32 0, i32 0)
  %1404 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3869, i32 3873)
  call void @printDDep(i32 3869, i32 3873)
  call void @printCDep(i32 572, i32 3873)
  %1405 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1404) #5, !srcloc !24
  %1406 = ptrtoint i32* %ret970.i.i to i64
  call void @printStoreAddr(i64 %1406, i32 3878, i32 0, i32 0)
  store i32 %1405, i32* %ret970.i.i, align 4
  call void @printDDep(i32 3869, i32 3878)
  call void @printDDep(i32 123, i32 3878)
  call void @printCDep(i32 572, i32 3878)
  %1407 = ptrtoint i32* %ret970.i.i to i64
  call void @printLoadAddr(i64 %1407, i32 3882, i32 0, i32 0)
  %1408 = load i32, i32* %ret970.i.i, align 4
  call void @printDDep(i32 3878, i32 3882)
  call void @printDDep(i32 3878, i32 3882)
  call void @printCDep(i32 572, i32 3882)
  %1409 = ptrtoint i32* %tmp971.i.i to i64
  call void @printStoreAddr(i64 %1409, i32 3886, i32 0, i32 0)
  store i32 %1408, i32* %tmp971.i.i, align 4
  call void @printDDep(i32 3878, i32 3886)
  call void @printDDep(i32 123, i32 3886)
  call void @printCDep(i32 572, i32 3886)
  %1410 = ptrtoint i32* %tmp971.i.i to i64
  call void @printLoadAddr(i64 %1410, i32 3890, i32 0, i32 0)
  %1411 = load i32, i32* %tmp971.i.i, align 4
  call void @printDDep(i32 3886, i32 3890)
  call void @printDDep(i32 3886, i32 3890)
  call void @printCDep(i32 572, i32 3890)
  %1412 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1412, i32 3894, i32 0, i32 0)
  store i32 %1411, i32* %t.i.i, align 4
  call void @printDDep(i32 3886, i32 3894)
  call void @printDDep(i32 3873, i32 3894)
  call void @printCDep(i32 572, i32 3894)
  %1413 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1413, i32 3898, i32 0, i32 0)
  %1414 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3851, i32 3898)
  call void @printDDep(i32 3864, i32 3898)
  call void @printCDep(i32 572, i32 3898)
  %shr972.i.i = lshr i32 %1414, 2
  %and973.i.i = and i32 %shr972.i.i, 63
  %idxprom974.i.i = zext i32 %and973.i.i to i64
  %arrayidx975.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i.i
  %1415 = ptrtoint i32* %arrayidx975.i.i to i64
  call void @printLoadAddr(i64 %1415, i32 3906, i32 0, i32 0)
  %1416 = load i32, i32* %arrayidx975.i.i, align 4
  call void @printDDep(i32 3864, i32 3906)
  call void @printCDep(i32 572, i32 3906)
  %1417 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1417, i32 3909, i32 0, i32 0)
  %1418 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3851, i32 3909)
  call void @printDDep(i32 3898, i32 3909)
  call void @printCDep(i32 572, i32 3909)
  %shr976.i.i = lshr i32 %1418, 10
  %and977.i.i = and i32 %shr976.i.i, 63
  %idxprom978.i.i = zext i32 %and977.i.i to i64
  %arrayidx979.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i.i
  %1419 = ptrtoint i32* %arrayidx979.i.i to i64
  call void @printLoadAddr(i64 %1419, i32 3917, i32 0, i32 0)
  %1420 = load i32, i32* %arrayidx979.i.i, align 4
  call void @printDDep(i32 3864, i32 3917)
  call void @printCDep(i32 572, i32 3917)
  %xor980.i.i = xor i32 %1416, %1420
  %1421 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1421, i32 3921, i32 0, i32 0)
  %1422 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3851, i32 3921)
  call void @printDDep(i32 3909, i32 3921)
  call void @printCDep(i32 572, i32 3921)
  %shr981.i.i = lshr i32 %1422, 18
  %and982.i.i = and i32 %shr981.i.i, 63
  %idxprom983.i.i = zext i32 %and982.i.i to i64
  %arrayidx984.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i.i
  %1423 = ptrtoint i32* %arrayidx984.i.i to i64
  call void @printLoadAddr(i64 %1423, i32 3929, i32 0, i32 0)
  %1424 = load i32, i32* %arrayidx984.i.i, align 4
  call void @printDDep(i32 3864, i32 3929)
  call void @printCDep(i32 572, i32 3929)
  %xor985.i.i = xor i32 %xor980.i.i, %1424
  %1425 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1425, i32 3933, i32 0, i32 0)
  %1426 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 3851, i32 3933)
  call void @printDDep(i32 3921, i32 3933)
  call void @printCDep(i32 572, i32 3933)
  %shr986.i.i = lshr i32 %1426, 26
  %idxprom988.i.i = zext i32 %shr986.i.i to i64
  %arrayidx989.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i.i
  %1427 = ptrtoint i32* %arrayidx989.i.i to i64
  call void @printLoadAddr(i64 %1427, i32 3940, i32 0, i32 0)
  %1428 = load i32, i32* %arrayidx989.i.i, align 4
  call void @printDDep(i32 3864, i32 3940)
  call void @printCDep(i32 572, i32 3940)
  %xor990.i.i = xor i32 %xor985.i.i, %1428
  %1429 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1429, i32 3944, i32 0, i32 0)
  %1430 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3894, i32 3944)
  call void @printDDep(i32 3894, i32 3944)
  call void @printCDep(i32 572, i32 3944)
  %shr991.i.i = lshr i32 %1430, 2
  %and992.i.i = and i32 %shr991.i.i, 63
  %idxprom993.i.i = zext i32 %and992.i.i to i64
  %arrayidx994.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i.i
  %1431 = ptrtoint i32* %arrayidx994.i.i to i64
  call void @printLoadAddr(i64 %1431, i32 3952, i32 0, i32 0)
  %1432 = load i32, i32* %arrayidx994.i.i, align 4
  call void @printDDep(i32 3864, i32 3952)
  call void @printCDep(i32 572, i32 3952)
  %xor995.i.i = xor i32 %xor990.i.i, %1432
  %1433 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1433, i32 3956, i32 0, i32 0)
  %1434 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3894, i32 3956)
  call void @printDDep(i32 3944, i32 3956)
  call void @printCDep(i32 572, i32 3956)
  %shr996.i.i = lshr i32 %1434, 10
  %and997.i.i = and i32 %shr996.i.i, 63
  %idxprom998.i.i = zext i32 %and997.i.i to i64
  %arrayidx999.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i.i
  %1435 = ptrtoint i32* %arrayidx999.i.i to i64
  call void @printLoadAddr(i64 %1435, i32 3964, i32 0, i32 0)
  %1436 = load i32, i32* %arrayidx999.i.i, align 4
  call void @printDDep(i32 3864, i32 3964)
  call void @printCDep(i32 572, i32 3964)
  %xor1000.i.i = xor i32 %xor995.i.i, %1436
  %1437 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1437, i32 3968, i32 0, i32 0)
  %1438 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3894, i32 3968)
  call void @printDDep(i32 3956, i32 3968)
  call void @printCDep(i32 572, i32 3968)
  %shr1001.i.i = lshr i32 %1438, 18
  %and1002.i.i = and i32 %shr1001.i.i, 63
  %idxprom1003.i.i = zext i32 %and1002.i.i to i64
  %arrayidx1004.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i.i
  %1439 = ptrtoint i32* %arrayidx1004.i.i to i64
  call void @printLoadAddr(i64 %1439, i32 3976, i32 0, i32 0)
  %1440 = load i32, i32* %arrayidx1004.i.i, align 4
  call void @printDDep(i32 3864, i32 3976)
  call void @printCDep(i32 572, i32 3976)
  %xor1005.i.i = xor i32 %xor1000.i.i, %1440
  %1441 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1441, i32 3980, i32 0, i32 0)
  %1442 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 3894, i32 3980)
  call void @printDDep(i32 3968, i32 3980)
  call void @printCDep(i32 572, i32 3980)
  %shr1006.i.i = lshr i32 %1442, 26
  %idxprom1008.i.i = zext i32 %shr1006.i.i to i64
  %arrayidx1009.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i.i
  %1443 = ptrtoint i32* %arrayidx1009.i.i to i64
  call void @printLoadAddr(i64 %1443, i32 3987, i32 0, i32 0)
  %1444 = load i32, i32* %arrayidx1009.i.i, align 4
  call void @printDDep(i32 3864, i32 3987)
  call void @printCDep(i32 572, i32 3987)
  %xor1010.i.i = xor i32 %xor1005.i.i, %1444
  %1445 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1445, i32 3991, i32 0, i32 0)
  %1446 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3670, i32 3991)
  call void @printDDep(i32 3864, i32 3991)
  call void @printCDep(i32 572, i32 3991)
  %xor1011.i.i = xor i32 %1446, %xor1010.i.i
  %1447 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %1447, i32 3996, i32 0, i32 0)
  store i32 %xor1011.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 3894, i32 3996)
  call void @printDDep(i32 3991, i32 3996)
  call void @printCDep(i32 572, i32 3996)
  %1448 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1448, i32 4000, i32 0, i32 0)
  %1449 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3996, i32 4000)
  call void @printDDep(i32 3996, i32 4000)
  call void @printCDep(i32 572, i32 4000)
  %1450 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1450, i32 4004, i32 0, i32 0)
  %1451 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4004)
  call void @printDDep(i32 3864, i32 4004)
  call void @printCDep(i32 572, i32 4004)
  %arrayidx1012.i.i = getelementptr inbounds i32, i32* %1451, i64 20
  %1452 = ptrtoint i32* %arrayidx1012.i.i to i64
  call void @printLoadAddr(i64 %1452, i32 4009, i32 0, i32 0)
  %1453 = load i32, i32* %arrayidx1012.i.i, align 4
  call void @printDDep(i32 119, i32 4009)
  call void @printDDep(i32 4004, i32 4009)
  call void @printCDep(i32 572, i32 4009)
  %xor1013.i.i = xor i32 %1449, %1453
  %1454 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1454, i32 4014, i32 0, i32 0)
  store i32 %xor1013.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 3996, i32 4014)
  call void @printDDep(i32 4009, i32 4014)
  call void @printCDep(i32 572, i32 4014)
  %1455 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1455, i32 4018, i32 0, i32 0)
  %1456 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3996, i32 4018)
  call void @printDDep(i32 4009, i32 4018)
  call void @printCDep(i32 572, i32 4018)
  %1457 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1457, i32 4022, i32 0, i32 0)
  %1458 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4022)
  call void @printDDep(i32 4009, i32 4022)
  call void @printCDep(i32 572, i32 4022)
  %arrayidx1014.i.i = getelementptr inbounds i32, i32* %1458, i64 21
  %1459 = ptrtoint i32* %arrayidx1014.i.i to i64
  call void @printLoadAddr(i64 %1459, i32 4027, i32 0, i32 0)
  %1460 = load i32, i32* %arrayidx1014.i.i, align 4
  call void @printDDep(i32 119, i32 4027)
  call void @printDDep(i32 4022, i32 4027)
  call void @printCDep(i32 572, i32 4027)
  %xor1015.i.i = xor i32 %1456, %1460
  %1461 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1461, i32 4032, i32 0, i32 0)
  store i32 %xor1015.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 4014, i32 4032)
  call void @printDDep(i32 4027, i32 4032)
  call void @printCDep(i32 572, i32 4032)
  %1462 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1462, i32 4036, i32 0, i32 0)
  %1463 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4032, i32 4036)
  call void @printDDep(i32 4032, i32 4036)
  call void @printCDep(i32 572, i32 4036)
  %1464 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1463) #5, !srcloc !25
  %1465 = ptrtoint i32* %ret1016.i.i to i64
  call void @printStoreAddr(i64 %1465, i32 4041, i32 0, i32 0)
  store i32 %1464, i32* %ret1016.i.i, align 4
  call void @printDDep(i32 4032, i32 4041)
  call void @printDDep(i32 123, i32 4041)
  call void @printCDep(i32 572, i32 4041)
  %1466 = ptrtoint i32* %ret1016.i.i to i64
  call void @printLoadAddr(i64 %1466, i32 4045, i32 0, i32 0)
  %1467 = load i32, i32* %ret1016.i.i, align 4
  call void @printDDep(i32 4041, i32 4045)
  call void @printDDep(i32 4041, i32 4045)
  call void @printCDep(i32 572, i32 4045)
  %1468 = ptrtoint i32* %tmp1017.i.i to i64
  call void @printStoreAddr(i64 %1468, i32 4049, i32 0, i32 0)
  store i32 %1467, i32* %tmp1017.i.i, align 4
  call void @printDDep(i32 4041, i32 4049)
  call void @printDDep(i32 123, i32 4049)
  call void @printCDep(i32 572, i32 4049)
  %1469 = ptrtoint i32* %tmp1017.i.i to i64
  call void @printLoadAddr(i64 %1469, i32 4053, i32 0, i32 0)
  %1470 = load i32, i32* %tmp1017.i.i, align 4
  call void @printDDep(i32 4049, i32 4053)
  call void @printDDep(i32 4049, i32 4053)
  call void @printCDep(i32 572, i32 4053)
  %1471 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1471, i32 4057, i32 0, i32 0)
  store i32 %1470, i32* %t.i.i, align 4
  call void @printDDep(i32 4049, i32 4057)
  call void @printDDep(i32 4036, i32 4057)
  call void @printCDep(i32 572, i32 4057)
  %1472 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1472, i32 4061, i32 0, i32 0)
  %1473 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4014, i32 4061)
  call void @printDDep(i32 4027, i32 4061)
  call void @printCDep(i32 572, i32 4061)
  %shr1018.i.i = lshr i32 %1473, 2
  %and1019.i.i = and i32 %shr1018.i.i, 63
  %idxprom1020.i.i = zext i32 %and1019.i.i to i64
  %arrayidx1021.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i.i
  %1474 = ptrtoint i32* %arrayidx1021.i.i to i64
  call void @printLoadAddr(i64 %1474, i32 4069, i32 0, i32 0)
  %1475 = load i32, i32* %arrayidx1021.i.i, align 4
  call void @printDDep(i32 4027, i32 4069)
  call void @printCDep(i32 572, i32 4069)
  %1476 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1476, i32 4072, i32 0, i32 0)
  %1477 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4014, i32 4072)
  call void @printDDep(i32 4061, i32 4072)
  call void @printCDep(i32 572, i32 4072)
  %shr1022.i.i = lshr i32 %1477, 10
  %and1023.i.i = and i32 %shr1022.i.i, 63
  %idxprom1024.i.i = zext i32 %and1023.i.i to i64
  %arrayidx1025.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i.i
  %1478 = ptrtoint i32* %arrayidx1025.i.i to i64
  call void @printLoadAddr(i64 %1478, i32 4080, i32 0, i32 0)
  %1479 = load i32, i32* %arrayidx1025.i.i, align 4
  call void @printDDep(i32 4027, i32 4080)
  call void @printCDep(i32 572, i32 4080)
  %xor1026.i.i = xor i32 %1475, %1479
  %1480 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1480, i32 4084, i32 0, i32 0)
  %1481 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4014, i32 4084)
  call void @printDDep(i32 4072, i32 4084)
  call void @printCDep(i32 572, i32 4084)
  %shr1027.i.i = lshr i32 %1481, 18
  %and1028.i.i = and i32 %shr1027.i.i, 63
  %idxprom1029.i.i = zext i32 %and1028.i.i to i64
  %arrayidx1030.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i.i
  %1482 = ptrtoint i32* %arrayidx1030.i.i to i64
  call void @printLoadAddr(i64 %1482, i32 4092, i32 0, i32 0)
  %1483 = load i32, i32* %arrayidx1030.i.i, align 4
  call void @printDDep(i32 4027, i32 4092)
  call void @printCDep(i32 572, i32 4092)
  %xor1031.i.i = xor i32 %xor1026.i.i, %1483
  %1484 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1484, i32 4096, i32 0, i32 0)
  %1485 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4014, i32 4096)
  call void @printDDep(i32 4084, i32 4096)
  call void @printCDep(i32 572, i32 4096)
  %shr1032.i.i = lshr i32 %1485, 26
  %idxprom1034.i.i = zext i32 %shr1032.i.i to i64
  %arrayidx1035.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i.i
  %1486 = ptrtoint i32* %arrayidx1035.i.i to i64
  call void @printLoadAddr(i64 %1486, i32 4103, i32 0, i32 0)
  %1487 = load i32, i32* %arrayidx1035.i.i, align 4
  call void @printDDep(i32 4027, i32 4103)
  call void @printCDep(i32 572, i32 4103)
  %xor1036.i.i = xor i32 %xor1031.i.i, %1487
  %1488 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1488, i32 4107, i32 0, i32 0)
  %1489 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4057, i32 4107)
  call void @printDDep(i32 4057, i32 4107)
  call void @printCDep(i32 572, i32 4107)
  %shr1037.i.i = lshr i32 %1489, 2
  %and1038.i.i = and i32 %shr1037.i.i, 63
  %idxprom1039.i.i = zext i32 %and1038.i.i to i64
  %arrayidx1040.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i.i
  %1490 = ptrtoint i32* %arrayidx1040.i.i to i64
  call void @printLoadAddr(i64 %1490, i32 4115, i32 0, i32 0)
  %1491 = load i32, i32* %arrayidx1040.i.i, align 4
  call void @printDDep(i32 4027, i32 4115)
  call void @printCDep(i32 572, i32 4115)
  %xor1041.i.i = xor i32 %xor1036.i.i, %1491
  %1492 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1492, i32 4119, i32 0, i32 0)
  %1493 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4057, i32 4119)
  call void @printDDep(i32 4107, i32 4119)
  call void @printCDep(i32 572, i32 4119)
  %shr1042.i.i = lshr i32 %1493, 10
  %and1043.i.i = and i32 %shr1042.i.i, 63
  %idxprom1044.i.i = zext i32 %and1043.i.i to i64
  %arrayidx1045.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i.i
  %1494 = ptrtoint i32* %arrayidx1045.i.i to i64
  call void @printLoadAddr(i64 %1494, i32 4127, i32 0, i32 0)
  %1495 = load i32, i32* %arrayidx1045.i.i, align 4
  call void @printDDep(i32 4027, i32 4127)
  call void @printCDep(i32 572, i32 4127)
  %xor1046.i.i = xor i32 %xor1041.i.i, %1495
  %1496 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1496, i32 4131, i32 0, i32 0)
  %1497 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4057, i32 4131)
  call void @printDDep(i32 4119, i32 4131)
  call void @printCDep(i32 572, i32 4131)
  %shr1047.i.i = lshr i32 %1497, 18
  %and1048.i.i = and i32 %shr1047.i.i, 63
  %idxprom1049.i.i = zext i32 %and1048.i.i to i64
  %arrayidx1050.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i.i
  %1498 = ptrtoint i32* %arrayidx1050.i.i to i64
  call void @printLoadAddr(i64 %1498, i32 4139, i32 0, i32 0)
  %1499 = load i32, i32* %arrayidx1050.i.i, align 4
  call void @printDDep(i32 4027, i32 4139)
  call void @printCDep(i32 572, i32 4139)
  %xor1051.i.i = xor i32 %xor1046.i.i, %1499
  %1500 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1500, i32 4143, i32 0, i32 0)
  %1501 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4057, i32 4143)
  call void @printDDep(i32 4131, i32 4143)
  call void @printCDep(i32 572, i32 4143)
  %shr1052.i.i = lshr i32 %1501, 26
  %idxprom1054.i.i = zext i32 %shr1052.i.i to i64
  %arrayidx1055.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i.i
  %1502 = ptrtoint i32* %arrayidx1055.i.i to i64
  call void @printLoadAddr(i64 %1502, i32 4150, i32 0, i32 0)
  %1503 = load i32, i32* %arrayidx1055.i.i, align 4
  call void @printDDep(i32 4027, i32 4150)
  call void @printCDep(i32 572, i32 4150)
  %xor1056.i.i = xor i32 %xor1051.i.i, %1503
  %1504 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1504, i32 4154, i32 0, i32 0)
  %1505 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 3833, i32 4154)
  call void @printDDep(i32 4027, i32 4154)
  call void @printCDep(i32 572, i32 4154)
  %xor1057.i.i = xor i32 %1505, %xor1056.i.i
  %1506 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %1506, i32 4159, i32 0, i32 0)
  store i32 %xor1057.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 4057, i32 4159)
  call void @printDDep(i32 4154, i32 4159)
  call void @printCDep(i32 572, i32 4159)
  %1507 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1507, i32 4163, i32 0, i32 0)
  %1508 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 4159, i32 4163)
  call void @printDDep(i32 4159, i32 4163)
  call void @printCDep(i32 572, i32 4163)
  %1509 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1509, i32 4167, i32 0, i32 0)
  %1510 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4167)
  call void @printDDep(i32 4027, i32 4167)
  call void @printCDep(i32 572, i32 4167)
  %arrayidx1058.i.i = getelementptr inbounds i32, i32* %1510, i64 18
  %1511 = ptrtoint i32* %arrayidx1058.i.i to i64
  call void @printLoadAddr(i64 %1511, i32 4172, i32 0, i32 0)
  %1512 = load i32, i32* %arrayidx1058.i.i, align 4
  call void @printDDep(i32 119, i32 4172)
  call void @printDDep(i32 4167, i32 4172)
  call void @printCDep(i32 572, i32 4172)
  %xor1059.i.i = xor i32 %1508, %1512
  %1513 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1513, i32 4177, i32 0, i32 0)
  store i32 %xor1059.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 4159, i32 4177)
  call void @printDDep(i32 4172, i32 4177)
  call void @printCDep(i32 572, i32 4177)
  %1514 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1514, i32 4181, i32 0, i32 0)
  %1515 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 4159, i32 4181)
  call void @printDDep(i32 4172, i32 4181)
  call void @printCDep(i32 572, i32 4181)
  %1516 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1516, i32 4185, i32 0, i32 0)
  %1517 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4185)
  call void @printDDep(i32 4172, i32 4185)
  call void @printCDep(i32 572, i32 4185)
  %arrayidx1060.i.i = getelementptr inbounds i32, i32* %1517, i64 19
  %1518 = ptrtoint i32* %arrayidx1060.i.i to i64
  call void @printLoadAddr(i64 %1518, i32 4190, i32 0, i32 0)
  %1519 = load i32, i32* %arrayidx1060.i.i, align 4
  call void @printDDep(i32 119, i32 4190)
  call void @printDDep(i32 4185, i32 4190)
  call void @printCDep(i32 572, i32 4190)
  %xor1061.i.i = xor i32 %1515, %1519
  %1520 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1520, i32 4195, i32 0, i32 0)
  store i32 %xor1061.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 4177, i32 4195)
  call void @printDDep(i32 4190, i32 4195)
  call void @printCDep(i32 572, i32 4195)
  %1521 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1521, i32 4199, i32 0, i32 0)
  %1522 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4195, i32 4199)
  call void @printDDep(i32 4195, i32 4199)
  call void @printCDep(i32 572, i32 4199)
  %1523 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1522) #5, !srcloc !26
  %1524 = ptrtoint i32* %ret1062.i.i to i64
  call void @printStoreAddr(i64 %1524, i32 4204, i32 0, i32 0)
  store i32 %1523, i32* %ret1062.i.i, align 4
  call void @printDDep(i32 4195, i32 4204)
  call void @printDDep(i32 123, i32 4204)
  call void @printCDep(i32 572, i32 4204)
  %1525 = ptrtoint i32* %ret1062.i.i to i64
  call void @printLoadAddr(i64 %1525, i32 4208, i32 0, i32 0)
  %1526 = load i32, i32* %ret1062.i.i, align 4
  call void @printDDep(i32 4204, i32 4208)
  call void @printDDep(i32 4204, i32 4208)
  call void @printCDep(i32 572, i32 4208)
  %1527 = ptrtoint i32* %tmp1063.i.i to i64
  call void @printStoreAddr(i64 %1527, i32 4212, i32 0, i32 0)
  store i32 %1526, i32* %tmp1063.i.i, align 4
  call void @printDDep(i32 4204, i32 4212)
  call void @printDDep(i32 123, i32 4212)
  call void @printCDep(i32 572, i32 4212)
  %1528 = ptrtoint i32* %tmp1063.i.i to i64
  call void @printLoadAddr(i64 %1528, i32 4216, i32 0, i32 0)
  %1529 = load i32, i32* %tmp1063.i.i, align 4
  call void @printDDep(i32 4212, i32 4216)
  call void @printDDep(i32 4212, i32 4216)
  call void @printCDep(i32 572, i32 4216)
  %1530 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1530, i32 4220, i32 0, i32 0)
  store i32 %1529, i32* %t.i.i, align 4
  call void @printDDep(i32 4212, i32 4220)
  call void @printDDep(i32 4199, i32 4220)
  call void @printCDep(i32 572, i32 4220)
  %1531 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1531, i32 4224, i32 0, i32 0)
  %1532 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4177, i32 4224)
  call void @printDDep(i32 4190, i32 4224)
  call void @printCDep(i32 572, i32 4224)
  %shr1064.i.i = lshr i32 %1532, 2
  %and1065.i.i = and i32 %shr1064.i.i, 63
  %idxprom1066.i.i = zext i32 %and1065.i.i to i64
  %arrayidx1067.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i.i
  %1533 = ptrtoint i32* %arrayidx1067.i.i to i64
  call void @printLoadAddr(i64 %1533, i32 4232, i32 0, i32 0)
  %1534 = load i32, i32* %arrayidx1067.i.i, align 4
  call void @printDDep(i32 4190, i32 4232)
  call void @printCDep(i32 572, i32 4232)
  %1535 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1535, i32 4235, i32 0, i32 0)
  %1536 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4177, i32 4235)
  call void @printDDep(i32 4224, i32 4235)
  call void @printCDep(i32 572, i32 4235)
  %shr1068.i.i = lshr i32 %1536, 10
  %and1069.i.i = and i32 %shr1068.i.i, 63
  %idxprom1070.i.i = zext i32 %and1069.i.i to i64
  %arrayidx1071.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i.i
  %1537 = ptrtoint i32* %arrayidx1071.i.i to i64
  call void @printLoadAddr(i64 %1537, i32 4243, i32 0, i32 0)
  %1538 = load i32, i32* %arrayidx1071.i.i, align 4
  call void @printDDep(i32 4190, i32 4243)
  call void @printCDep(i32 572, i32 4243)
  %xor1072.i.i = xor i32 %1534, %1538
  %1539 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1539, i32 4247, i32 0, i32 0)
  %1540 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4177, i32 4247)
  call void @printDDep(i32 4235, i32 4247)
  call void @printCDep(i32 572, i32 4247)
  %shr1073.i.i = lshr i32 %1540, 18
  %and1074.i.i = and i32 %shr1073.i.i, 63
  %idxprom1075.i.i = zext i32 %and1074.i.i to i64
  %arrayidx1076.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i.i
  %1541 = ptrtoint i32* %arrayidx1076.i.i to i64
  call void @printLoadAddr(i64 %1541, i32 4255, i32 0, i32 0)
  %1542 = load i32, i32* %arrayidx1076.i.i, align 4
  call void @printDDep(i32 4190, i32 4255)
  call void @printCDep(i32 572, i32 4255)
  %xor1077.i.i = xor i32 %xor1072.i.i, %1542
  %1543 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1543, i32 4259, i32 0, i32 0)
  %1544 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4177, i32 4259)
  call void @printDDep(i32 4247, i32 4259)
  call void @printCDep(i32 572, i32 4259)
  %shr1078.i.i = lshr i32 %1544, 26
  %idxprom1080.i.i = zext i32 %shr1078.i.i to i64
  %arrayidx1081.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i.i
  %1545 = ptrtoint i32* %arrayidx1081.i.i to i64
  call void @printLoadAddr(i64 %1545, i32 4266, i32 0, i32 0)
  %1546 = load i32, i32* %arrayidx1081.i.i, align 4
  call void @printDDep(i32 4190, i32 4266)
  call void @printCDep(i32 572, i32 4266)
  %xor1082.i.i = xor i32 %xor1077.i.i, %1546
  %1547 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1547, i32 4270, i32 0, i32 0)
  %1548 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4220, i32 4270)
  call void @printDDep(i32 4220, i32 4270)
  call void @printCDep(i32 572, i32 4270)
  %shr1083.i.i = lshr i32 %1548, 2
  %and1084.i.i = and i32 %shr1083.i.i, 63
  %idxprom1085.i.i = zext i32 %and1084.i.i to i64
  %arrayidx1086.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i.i
  %1549 = ptrtoint i32* %arrayidx1086.i.i to i64
  call void @printLoadAddr(i64 %1549, i32 4278, i32 0, i32 0)
  %1550 = load i32, i32* %arrayidx1086.i.i, align 4
  call void @printDDep(i32 4190, i32 4278)
  call void @printCDep(i32 572, i32 4278)
  %xor1087.i.i = xor i32 %xor1082.i.i, %1550
  %1551 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1551, i32 4282, i32 0, i32 0)
  %1552 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4220, i32 4282)
  call void @printDDep(i32 4270, i32 4282)
  call void @printCDep(i32 572, i32 4282)
  %shr1088.i.i = lshr i32 %1552, 10
  %and1089.i.i = and i32 %shr1088.i.i, 63
  %idxprom1090.i.i = zext i32 %and1089.i.i to i64
  %arrayidx1091.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i.i
  %1553 = ptrtoint i32* %arrayidx1091.i.i to i64
  call void @printLoadAddr(i64 %1553, i32 4290, i32 0, i32 0)
  %1554 = load i32, i32* %arrayidx1091.i.i, align 4
  call void @printDDep(i32 4190, i32 4290)
  call void @printCDep(i32 572, i32 4290)
  %xor1092.i.i = xor i32 %xor1087.i.i, %1554
  %1555 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1555, i32 4294, i32 0, i32 0)
  %1556 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4220, i32 4294)
  call void @printDDep(i32 4282, i32 4294)
  call void @printCDep(i32 572, i32 4294)
  %shr1093.i.i = lshr i32 %1556, 18
  %and1094.i.i = and i32 %shr1093.i.i, 63
  %idxprom1095.i.i = zext i32 %and1094.i.i to i64
  %arrayidx1096.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i.i
  %1557 = ptrtoint i32* %arrayidx1096.i.i to i64
  call void @printLoadAddr(i64 %1557, i32 4302, i32 0, i32 0)
  %1558 = load i32, i32* %arrayidx1096.i.i, align 4
  call void @printDDep(i32 4190, i32 4302)
  call void @printCDep(i32 572, i32 4302)
  %xor1097.i.i = xor i32 %xor1092.i.i, %1558
  %1559 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1559, i32 4306, i32 0, i32 0)
  %1560 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4220, i32 4306)
  call void @printDDep(i32 4294, i32 4306)
  call void @printCDep(i32 572, i32 4306)
  %shr1098.i.i = lshr i32 %1560, 26
  %idxprom1100.i.i = zext i32 %shr1098.i.i to i64
  %arrayidx1101.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i.i
  %1561 = ptrtoint i32* %arrayidx1101.i.i to i64
  call void @printLoadAddr(i64 %1561, i32 4313, i32 0, i32 0)
  %1562 = load i32, i32* %arrayidx1101.i.i, align 4
  call void @printDDep(i32 4190, i32 4313)
  call void @printCDep(i32 572, i32 4313)
  %xor1102.i.i = xor i32 %xor1097.i.i, %1562
  %1563 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1563, i32 4317, i32 0, i32 0)
  %1564 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3996, i32 4317)
  call void @printDDep(i32 4190, i32 4317)
  call void @printCDep(i32 572, i32 4317)
  %xor1103.i.i = xor i32 %1564, %xor1102.i.i
  %1565 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %1565, i32 4322, i32 0, i32 0)
  store i32 %xor1103.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 4220, i32 4322)
  call void @printDDep(i32 4317, i32 4322)
  call void @printCDep(i32 572, i32 4322)
  %1566 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1566, i32 4326, i32 0, i32 0)
  %1567 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 4322, i32 4326)
  call void @printDDep(i32 4322, i32 4326)
  call void @printCDep(i32 572, i32 4326)
  %1568 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1568, i32 4330, i32 0, i32 0)
  %1569 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4330)
  call void @printDDep(i32 4190, i32 4330)
  call void @printCDep(i32 572, i32 4330)
  %arrayidx1104.i.i = getelementptr inbounds i32, i32* %1569, i64 16
  %1570 = ptrtoint i32* %arrayidx1104.i.i to i64
  call void @printLoadAddr(i64 %1570, i32 4335, i32 0, i32 0)
  %1571 = load i32, i32* %arrayidx1104.i.i, align 4
  call void @printDDep(i32 4322, i32 4335)
  call void @printDDep(i32 4330, i32 4335)
  call void @printCDep(i32 572, i32 4335)
  %xor1105.i.i = xor i32 %1567, %1571
  %1572 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1572, i32 4340, i32 0, i32 0)
  store i32 %xor1105.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 4322, i32 4340)
  call void @printDDep(i32 4335, i32 4340)
  call void @printCDep(i32 572, i32 4340)
  %1573 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1573, i32 4344, i32 0, i32 0)
  %1574 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 4322, i32 4344)
  call void @printDDep(i32 4335, i32 4344)
  call void @printCDep(i32 572, i32 4344)
  %1575 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1575, i32 4348, i32 0, i32 0)
  %1576 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4348)
  call void @printDDep(i32 4335, i32 4348)
  call void @printCDep(i32 572, i32 4348)
  %arrayidx1106.i.i = getelementptr inbounds i32, i32* %1576, i64 17
  %1577 = ptrtoint i32* %arrayidx1106.i.i to i64
  call void @printLoadAddr(i64 %1577, i32 4353, i32 0, i32 0)
  %1578 = load i32, i32* %arrayidx1106.i.i, align 4
  call void @printDDep(i32 4340, i32 4353)
  call void @printDDep(i32 4348, i32 4353)
  call void @printCDep(i32 572, i32 4353)
  %xor1107.i.i = xor i32 %1574, %1578
  %1579 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1579, i32 4358, i32 0, i32 0)
  store i32 %xor1107.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 4340, i32 4358)
  call void @printDDep(i32 4353, i32 4358)
  call void @printCDep(i32 572, i32 4358)
  %1580 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1580, i32 4362, i32 0, i32 0)
  %1581 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4358, i32 4362)
  call void @printDDep(i32 4358, i32 4362)
  call void @printCDep(i32 572, i32 4362)
  %1582 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1581) #5, !srcloc !27
  %1583 = ptrtoint i32* %ret1108.i.i to i64
  call void @printStoreAddr(i64 %1583, i32 4367, i32 0, i32 0)
  store i32 %1582, i32* %ret1108.i.i, align 4
  call void @printDDep(i32 4358, i32 4367)
  call void @printDDep(i32 123, i32 4367)
  call void @printCDep(i32 572, i32 4367)
  %1584 = ptrtoint i32* %ret1108.i.i to i64
  call void @printLoadAddr(i64 %1584, i32 4371, i32 0, i32 0)
  %1585 = load i32, i32* %ret1108.i.i, align 4
  call void @printDDep(i32 4367, i32 4371)
  call void @printDDep(i32 4367, i32 4371)
  call void @printCDep(i32 572, i32 4371)
  %1586 = ptrtoint i32* %tmp1109.i.i to i64
  call void @printStoreAddr(i64 %1586, i32 4375, i32 0, i32 0)
  store i32 %1585, i32* %tmp1109.i.i, align 4
  call void @printDDep(i32 4367, i32 4375)
  call void @printDDep(i32 123, i32 4375)
  call void @printCDep(i32 572, i32 4375)
  %1587 = ptrtoint i32* %tmp1109.i.i to i64
  call void @printLoadAddr(i64 %1587, i32 4379, i32 0, i32 0)
  %1588 = load i32, i32* %tmp1109.i.i, align 4
  call void @printDDep(i32 4375, i32 4379)
  call void @printDDep(i32 4375, i32 4379)
  call void @printCDep(i32 572, i32 4379)
  %1589 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1589, i32 4383, i32 0, i32 0)
  store i32 %1588, i32* %t.i.i, align 4
  call void @printDDep(i32 4375, i32 4383)
  call void @printDDep(i32 4362, i32 4383)
  call void @printCDep(i32 572, i32 4383)
  %1590 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1590, i32 4387, i32 0, i32 0)
  %1591 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4340, i32 4387)
  call void @printDDep(i32 4353, i32 4387)
  call void @printCDep(i32 572, i32 4387)
  %shr1110.i.i = lshr i32 %1591, 2
  %and1111.i.i = and i32 %shr1110.i.i, 63
  %idxprom1112.i.i = zext i32 %and1111.i.i to i64
  %arrayidx1113.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i.i
  %1592 = ptrtoint i32* %arrayidx1113.i.i to i64
  call void @printLoadAddr(i64 %1592, i32 4395, i32 0, i32 0)
  %1593 = load i32, i32* %arrayidx1113.i.i, align 4
  call void @printDDep(i32 4353, i32 4395)
  call void @printCDep(i32 572, i32 4395)
  %1594 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1594, i32 4398, i32 0, i32 0)
  %1595 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4340, i32 4398)
  call void @printDDep(i32 4387, i32 4398)
  call void @printCDep(i32 572, i32 4398)
  %shr1114.i.i = lshr i32 %1595, 10
  %and1115.i.i = and i32 %shr1114.i.i, 63
  %idxprom1116.i.i = zext i32 %and1115.i.i to i64
  %arrayidx1117.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i.i
  %1596 = ptrtoint i32* %arrayidx1117.i.i to i64
  call void @printLoadAddr(i64 %1596, i32 4406, i32 0, i32 0)
  %1597 = load i32, i32* %arrayidx1117.i.i, align 4
  call void @printDDep(i32 4353, i32 4406)
  call void @printCDep(i32 572, i32 4406)
  %xor1118.i.i = xor i32 %1593, %1597
  %1598 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1598, i32 4410, i32 0, i32 0)
  %1599 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4340, i32 4410)
  call void @printDDep(i32 4398, i32 4410)
  call void @printCDep(i32 572, i32 4410)
  %shr1119.i.i = lshr i32 %1599, 18
  %and1120.i.i = and i32 %shr1119.i.i, 63
  %idxprom1121.i.i = zext i32 %and1120.i.i to i64
  %arrayidx1122.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i.i
  %1600 = ptrtoint i32* %arrayidx1122.i.i to i64
  call void @printLoadAddr(i64 %1600, i32 4418, i32 0, i32 0)
  %1601 = load i32, i32* %arrayidx1122.i.i, align 4
  call void @printDDep(i32 4353, i32 4418)
  call void @printCDep(i32 572, i32 4418)
  %xor1123.i.i = xor i32 %xor1118.i.i, %1601
  %1602 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1602, i32 4422, i32 0, i32 0)
  %1603 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4340, i32 4422)
  call void @printDDep(i32 4410, i32 4422)
  call void @printCDep(i32 572, i32 4422)
  %shr1124.i.i = lshr i32 %1603, 26
  %idxprom1126.i.i = zext i32 %shr1124.i.i to i64
  %arrayidx1127.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i.i
  %1604 = ptrtoint i32* %arrayidx1127.i.i to i64
  call void @printLoadAddr(i64 %1604, i32 4429, i32 0, i32 0)
  %1605 = load i32, i32* %arrayidx1127.i.i, align 4
  call void @printDDep(i32 4353, i32 4429)
  call void @printCDep(i32 572, i32 4429)
  %xor1128.i.i = xor i32 %xor1123.i.i, %1605
  %1606 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1606, i32 4433, i32 0, i32 0)
  %1607 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4383, i32 4433)
  call void @printDDep(i32 4383, i32 4433)
  call void @printCDep(i32 572, i32 4433)
  %shr1129.i.i = lshr i32 %1607, 2
  %and1130.i.i = and i32 %shr1129.i.i, 63
  %idxprom1131.i.i = zext i32 %and1130.i.i to i64
  %arrayidx1132.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i.i
  %1608 = ptrtoint i32* %arrayidx1132.i.i to i64
  call void @printLoadAddr(i64 %1608, i32 4441, i32 0, i32 0)
  %1609 = load i32, i32* %arrayidx1132.i.i, align 4
  call void @printDDep(i32 4353, i32 4441)
  call void @printCDep(i32 572, i32 4441)
  %xor1133.i.i = xor i32 %xor1128.i.i, %1609
  %1610 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1610, i32 4445, i32 0, i32 0)
  %1611 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4383, i32 4445)
  call void @printDDep(i32 4433, i32 4445)
  call void @printCDep(i32 572, i32 4445)
  %shr1134.i.i = lshr i32 %1611, 10
  %and1135.i.i = and i32 %shr1134.i.i, 63
  %idxprom1136.i.i = zext i32 %and1135.i.i to i64
  %arrayidx1137.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i.i
  %1612 = ptrtoint i32* %arrayidx1137.i.i to i64
  call void @printLoadAddr(i64 %1612, i32 4453, i32 0, i32 0)
  %1613 = load i32, i32* %arrayidx1137.i.i, align 4
  call void @printDDep(i32 4353, i32 4453)
  call void @printCDep(i32 572, i32 4453)
  %xor1138.i.i = xor i32 %xor1133.i.i, %1613
  %1614 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1614, i32 4457, i32 0, i32 0)
  %1615 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4383, i32 4457)
  call void @printDDep(i32 4445, i32 4457)
  call void @printCDep(i32 572, i32 4457)
  %shr1139.i.i = lshr i32 %1615, 18
  %and1140.i.i = and i32 %shr1139.i.i, 63
  %idxprom1141.i.i = zext i32 %and1140.i.i to i64
  %arrayidx1142.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i.i
  %1616 = ptrtoint i32* %arrayidx1142.i.i to i64
  call void @printLoadAddr(i64 %1616, i32 4465, i32 0, i32 0)
  %1617 = load i32, i32* %arrayidx1142.i.i, align 4
  call void @printDDep(i32 4353, i32 4465)
  call void @printCDep(i32 572, i32 4465)
  %xor1143.i.i = xor i32 %xor1138.i.i, %1617
  %1618 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1618, i32 4469, i32 0, i32 0)
  %1619 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4383, i32 4469)
  call void @printDDep(i32 4457, i32 4469)
  call void @printCDep(i32 572, i32 4469)
  %shr1144.i.i = lshr i32 %1619, 26
  %idxprom1146.i.i = zext i32 %shr1144.i.i to i64
  %arrayidx1147.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i.i
  %1620 = ptrtoint i32* %arrayidx1147.i.i to i64
  call void @printLoadAddr(i64 %1620, i32 4476, i32 0, i32 0)
  %1621 = load i32, i32* %arrayidx1147.i.i, align 4
  call void @printDDep(i32 4353, i32 4476)
  call void @printCDep(i32 572, i32 4476)
  %xor1148.i.i = xor i32 %xor1143.i.i, %1621
  %1622 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1622, i32 4480, i32 0, i32 0)
  %1623 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 4159, i32 4480)
  call void @printDDep(i32 4353, i32 4480)
  call void @printCDep(i32 572, i32 4480)
  %xor1149.i.i = xor i32 %1623, %xor1148.i.i
  %1624 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %1624, i32 4485, i32 0, i32 0)
  store i32 %xor1149.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 4383, i32 4485)
  call void @printDDep(i32 4480, i32 4485)
  call void @printCDep(i32 572, i32 4485)
  %1625 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1625, i32 4489, i32 0, i32 0)
  %1626 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 4485, i32 4489)
  call void @printDDep(i32 4485, i32 4489)
  call void @printCDep(i32 572, i32 4489)
  %1627 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1627, i32 4493, i32 0, i32 0)
  %1628 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4493)
  call void @printDDep(i32 4353, i32 4493)
  call void @printCDep(i32 572, i32 4493)
  %arrayidx1150.i.i = getelementptr inbounds i32, i32* %1628, i64 14
  %1629 = ptrtoint i32* %arrayidx1150.i.i to i64
  call void @printLoadAddr(i64 %1629, i32 4498, i32 0, i32 0)
  %1630 = load i32, i32* %arrayidx1150.i.i, align 4
  call void @printDDep(i32 4485, i32 4498)
  call void @printDDep(i32 4493, i32 4498)
  call void @printCDep(i32 572, i32 4498)
  %xor1151.i.i = xor i32 %1626, %1630
  %1631 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1631, i32 4503, i32 0, i32 0)
  store i32 %xor1151.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 4485, i32 4503)
  call void @printDDep(i32 4498, i32 4503)
  call void @printCDep(i32 572, i32 4503)
  %1632 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1632, i32 4507, i32 0, i32 0)
  %1633 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 4485, i32 4507)
  call void @printDDep(i32 4498, i32 4507)
  call void @printCDep(i32 572, i32 4507)
  %1634 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1634, i32 4511, i32 0, i32 0)
  %1635 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4511)
  call void @printDDep(i32 4498, i32 4511)
  call void @printCDep(i32 572, i32 4511)
  %arrayidx1152.i.i = getelementptr inbounds i32, i32* %1635, i64 15
  %1636 = ptrtoint i32* %arrayidx1152.i.i to i64
  call void @printLoadAddr(i64 %1636, i32 4516, i32 0, i32 0)
  %1637 = load i32, i32* %arrayidx1152.i.i, align 4
  call void @printDDep(i32 4503, i32 4516)
  call void @printDDep(i32 4511, i32 4516)
  call void @printCDep(i32 572, i32 4516)
  %xor1153.i.i = xor i32 %1633, %1637
  %1638 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1638, i32 4521, i32 0, i32 0)
  store i32 %xor1153.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 4503, i32 4521)
  call void @printDDep(i32 4516, i32 4521)
  call void @printCDep(i32 572, i32 4521)
  %1639 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1639, i32 4525, i32 0, i32 0)
  %1640 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4521, i32 4525)
  call void @printDDep(i32 4521, i32 4525)
  call void @printCDep(i32 572, i32 4525)
  %1641 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1640) #5, !srcloc !28
  %1642 = ptrtoint i32* %ret1154.i.i to i64
  call void @printStoreAddr(i64 %1642, i32 4530, i32 0, i32 0)
  store i32 %1641, i32* %ret1154.i.i, align 4
  call void @printDDep(i32 4521, i32 4530)
  call void @printDDep(i32 123, i32 4530)
  call void @printCDep(i32 572, i32 4530)
  %1643 = ptrtoint i32* %ret1154.i.i to i64
  call void @printLoadAddr(i64 %1643, i32 4534, i32 0, i32 0)
  %1644 = load i32, i32* %ret1154.i.i, align 4
  call void @printDDep(i32 4530, i32 4534)
  call void @printDDep(i32 4530, i32 4534)
  call void @printCDep(i32 572, i32 4534)
  %1645 = ptrtoint i32* %tmp1155.i.i to i64
  call void @printStoreAddr(i64 %1645, i32 4538, i32 0, i32 0)
  store i32 %1644, i32* %tmp1155.i.i, align 4
  call void @printDDep(i32 4530, i32 4538)
  call void @printDDep(i32 123, i32 4538)
  call void @printCDep(i32 572, i32 4538)
  %1646 = ptrtoint i32* %tmp1155.i.i to i64
  call void @printLoadAddr(i64 %1646, i32 4542, i32 0, i32 0)
  %1647 = load i32, i32* %tmp1155.i.i, align 4
  call void @printDDep(i32 4538, i32 4542)
  call void @printDDep(i32 4538, i32 4542)
  call void @printCDep(i32 572, i32 4542)
  %1648 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1648, i32 4546, i32 0, i32 0)
  store i32 %1647, i32* %t.i.i, align 4
  call void @printDDep(i32 4538, i32 4546)
  call void @printDDep(i32 4525, i32 4546)
  call void @printCDep(i32 572, i32 4546)
  %1649 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1649, i32 4550, i32 0, i32 0)
  %1650 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4503, i32 4550)
  call void @printDDep(i32 4516, i32 4550)
  call void @printCDep(i32 572, i32 4550)
  %shr1156.i.i = lshr i32 %1650, 2
  %and1157.i.i = and i32 %shr1156.i.i, 63
  %idxprom1158.i.i = zext i32 %and1157.i.i to i64
  %arrayidx1159.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i.i
  %1651 = ptrtoint i32* %arrayidx1159.i.i to i64
  call void @printLoadAddr(i64 %1651, i32 4558, i32 0, i32 0)
  %1652 = load i32, i32* %arrayidx1159.i.i, align 4
  call void @printDDep(i32 4516, i32 4558)
  call void @printCDep(i32 572, i32 4558)
  %1653 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1653, i32 4561, i32 0, i32 0)
  %1654 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4503, i32 4561)
  call void @printDDep(i32 4550, i32 4561)
  call void @printCDep(i32 572, i32 4561)
  %shr1160.i.i = lshr i32 %1654, 10
  %and1161.i.i = and i32 %shr1160.i.i, 63
  %idxprom1162.i.i = zext i32 %and1161.i.i to i64
  %arrayidx1163.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i.i
  %1655 = ptrtoint i32* %arrayidx1163.i.i to i64
  call void @printLoadAddr(i64 %1655, i32 4569, i32 0, i32 0)
  %1656 = load i32, i32* %arrayidx1163.i.i, align 4
  call void @printDDep(i32 4516, i32 4569)
  call void @printCDep(i32 572, i32 4569)
  %xor1164.i.i = xor i32 %1652, %1656
  %1657 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1657, i32 4573, i32 0, i32 0)
  %1658 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4503, i32 4573)
  call void @printDDep(i32 4561, i32 4573)
  call void @printCDep(i32 572, i32 4573)
  %shr1165.i.i = lshr i32 %1658, 18
  %and1166.i.i = and i32 %shr1165.i.i, 63
  %idxprom1167.i.i = zext i32 %and1166.i.i to i64
  %arrayidx1168.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i.i
  %1659 = ptrtoint i32* %arrayidx1168.i.i to i64
  call void @printLoadAddr(i64 %1659, i32 4581, i32 0, i32 0)
  %1660 = load i32, i32* %arrayidx1168.i.i, align 4
  call void @printDDep(i32 4516, i32 4581)
  call void @printCDep(i32 572, i32 4581)
  %xor1169.i.i = xor i32 %xor1164.i.i, %1660
  %1661 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1661, i32 4585, i32 0, i32 0)
  %1662 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4503, i32 4585)
  call void @printDDep(i32 4573, i32 4585)
  call void @printCDep(i32 572, i32 4585)
  %shr1170.i.i = lshr i32 %1662, 26
  %idxprom1172.i.i = zext i32 %shr1170.i.i to i64
  %arrayidx1173.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i.i
  %1663 = ptrtoint i32* %arrayidx1173.i.i to i64
  call void @printLoadAddr(i64 %1663, i32 4592, i32 0, i32 0)
  %1664 = load i32, i32* %arrayidx1173.i.i, align 4
  call void @printDDep(i32 4516, i32 4592)
  call void @printCDep(i32 572, i32 4592)
  %xor1174.i.i = xor i32 %xor1169.i.i, %1664
  %1665 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1665, i32 4596, i32 0, i32 0)
  %1666 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4546, i32 4596)
  call void @printDDep(i32 4546, i32 4596)
  call void @printCDep(i32 572, i32 4596)
  %shr1175.i.i = lshr i32 %1666, 2
  %and1176.i.i = and i32 %shr1175.i.i, 63
  %idxprom1177.i.i = zext i32 %and1176.i.i to i64
  %arrayidx1178.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i.i
  %1667 = ptrtoint i32* %arrayidx1178.i.i to i64
  call void @printLoadAddr(i64 %1667, i32 4604, i32 0, i32 0)
  %1668 = load i32, i32* %arrayidx1178.i.i, align 4
  call void @printDDep(i32 4516, i32 4604)
  call void @printCDep(i32 572, i32 4604)
  %xor1179.i.i = xor i32 %xor1174.i.i, %1668
  %1669 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1669, i32 4608, i32 0, i32 0)
  %1670 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4546, i32 4608)
  call void @printDDep(i32 4596, i32 4608)
  call void @printCDep(i32 572, i32 4608)
  %shr1180.i.i = lshr i32 %1670, 10
  %and1181.i.i = and i32 %shr1180.i.i, 63
  %idxprom1182.i.i = zext i32 %and1181.i.i to i64
  %arrayidx1183.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i.i
  %1671 = ptrtoint i32* %arrayidx1183.i.i to i64
  call void @printLoadAddr(i64 %1671, i32 4616, i32 0, i32 0)
  %1672 = load i32, i32* %arrayidx1183.i.i, align 4
  call void @printDDep(i32 4516, i32 4616)
  call void @printCDep(i32 572, i32 4616)
  %xor1184.i.i = xor i32 %xor1179.i.i, %1672
  %1673 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1673, i32 4620, i32 0, i32 0)
  %1674 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4546, i32 4620)
  call void @printDDep(i32 4608, i32 4620)
  call void @printCDep(i32 572, i32 4620)
  %shr1185.i.i = lshr i32 %1674, 18
  %and1186.i.i = and i32 %shr1185.i.i, 63
  %idxprom1187.i.i = zext i32 %and1186.i.i to i64
  %arrayidx1188.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i.i
  %1675 = ptrtoint i32* %arrayidx1188.i.i to i64
  call void @printLoadAddr(i64 %1675, i32 4628, i32 0, i32 0)
  %1676 = load i32, i32* %arrayidx1188.i.i, align 4
  call void @printDDep(i32 4516, i32 4628)
  call void @printCDep(i32 572, i32 4628)
  %xor1189.i.i = xor i32 %xor1184.i.i, %1676
  %1677 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1677, i32 4632, i32 0, i32 0)
  %1678 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4546, i32 4632)
  call void @printDDep(i32 4620, i32 4632)
  call void @printCDep(i32 572, i32 4632)
  %shr1190.i.i = lshr i32 %1678, 26
  %idxprom1192.i.i = zext i32 %shr1190.i.i to i64
  %arrayidx1193.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i.i
  %1679 = ptrtoint i32* %arrayidx1193.i.i to i64
  call void @printLoadAddr(i64 %1679, i32 4639, i32 0, i32 0)
  %1680 = load i32, i32* %arrayidx1193.i.i, align 4
  call void @printDDep(i32 4516, i32 4639)
  call void @printCDep(i32 572, i32 4639)
  %xor1194.i.i = xor i32 %xor1189.i.i, %1680
  %1681 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1681, i32 4643, i32 0, i32 0)
  %1682 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 4322, i32 4643)
  call void @printDDep(i32 4516, i32 4643)
  call void @printCDep(i32 572, i32 4643)
  %xor1195.i.i = xor i32 %1682, %xor1194.i.i
  %1683 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %1683, i32 4648, i32 0, i32 0)
  store i32 %xor1195.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 4546, i32 4648)
  call void @printDDep(i32 4643, i32 4648)
  call void @printCDep(i32 572, i32 4648)
  %1684 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1684, i32 4652, i32 0, i32 0)
  %1685 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 4648, i32 4652)
  call void @printDDep(i32 4648, i32 4652)
  call void @printCDep(i32 572, i32 4652)
  %1686 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1686, i32 4656, i32 0, i32 0)
  %1687 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4656)
  call void @printDDep(i32 4516, i32 4656)
  call void @printCDep(i32 572, i32 4656)
  %arrayidx1196.i.i = getelementptr inbounds i32, i32* %1687, i64 12
  %1688 = ptrtoint i32* %arrayidx1196.i.i to i64
  call void @printLoadAddr(i64 %1688, i32 4661, i32 0, i32 0)
  %1689 = load i32, i32* %arrayidx1196.i.i, align 4
  call void @printDDep(i32 4648, i32 4661)
  call void @printDDep(i32 4656, i32 4661)
  call void @printCDep(i32 572, i32 4661)
  %xor1197.i.i = xor i32 %1685, %1689
  %1690 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1690, i32 4666, i32 0, i32 0)
  store i32 %xor1197.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 4648, i32 4666)
  call void @printDDep(i32 4661, i32 4666)
  call void @printCDep(i32 572, i32 4666)
  %1691 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1691, i32 4670, i32 0, i32 0)
  %1692 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 4648, i32 4670)
  call void @printDDep(i32 4661, i32 4670)
  call void @printCDep(i32 572, i32 4670)
  %1693 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1693, i32 4674, i32 0, i32 0)
  %1694 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4674)
  call void @printDDep(i32 4661, i32 4674)
  call void @printCDep(i32 572, i32 4674)
  %arrayidx1198.i.i = getelementptr inbounds i32, i32* %1694, i64 13
  %1695 = ptrtoint i32* %arrayidx1198.i.i to i64
  call void @printLoadAddr(i64 %1695, i32 4679, i32 0, i32 0)
  %1696 = load i32, i32* %arrayidx1198.i.i, align 4
  call void @printDDep(i32 4666, i32 4679)
  call void @printDDep(i32 4674, i32 4679)
  call void @printCDep(i32 572, i32 4679)
  %xor1199.i.i = xor i32 %1692, %1696
  %1697 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1697, i32 4684, i32 0, i32 0)
  store i32 %xor1199.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 4666, i32 4684)
  call void @printDDep(i32 4679, i32 4684)
  call void @printCDep(i32 572, i32 4684)
  %1698 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1698, i32 4688, i32 0, i32 0)
  %1699 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4684, i32 4688)
  call void @printDDep(i32 4684, i32 4688)
  call void @printCDep(i32 572, i32 4688)
  %1700 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1699) #5, !srcloc !29
  %1701 = ptrtoint i32* %ret1200.i.i to i64
  call void @printStoreAddr(i64 %1701, i32 4693, i32 0, i32 0)
  store i32 %1700, i32* %ret1200.i.i, align 4
  call void @printDDep(i32 4684, i32 4693)
  call void @printDDep(i32 123, i32 4693)
  call void @printCDep(i32 572, i32 4693)
  %1702 = ptrtoint i32* %ret1200.i.i to i64
  call void @printLoadAddr(i64 %1702, i32 4697, i32 0, i32 0)
  %1703 = load i32, i32* %ret1200.i.i, align 4
  call void @printDDep(i32 4693, i32 4697)
  call void @printDDep(i32 4693, i32 4697)
  call void @printCDep(i32 572, i32 4697)
  %1704 = ptrtoint i32* %tmp1201.i.i to i64
  call void @printStoreAddr(i64 %1704, i32 4701, i32 0, i32 0)
  store i32 %1703, i32* %tmp1201.i.i, align 4
  call void @printDDep(i32 4693, i32 4701)
  call void @printDDep(i32 123, i32 4701)
  call void @printCDep(i32 572, i32 4701)
  %1705 = ptrtoint i32* %tmp1201.i.i to i64
  call void @printLoadAddr(i64 %1705, i32 4705, i32 0, i32 0)
  %1706 = load i32, i32* %tmp1201.i.i, align 4
  call void @printDDep(i32 4701, i32 4705)
  call void @printDDep(i32 4701, i32 4705)
  call void @printCDep(i32 572, i32 4705)
  %1707 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1707, i32 4709, i32 0, i32 0)
  store i32 %1706, i32* %t.i.i, align 4
  call void @printDDep(i32 4701, i32 4709)
  call void @printDDep(i32 4688, i32 4709)
  call void @printCDep(i32 572, i32 4709)
  %1708 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1708, i32 4713, i32 0, i32 0)
  %1709 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4666, i32 4713)
  call void @printDDep(i32 4679, i32 4713)
  call void @printCDep(i32 572, i32 4713)
  %shr1202.i.i = lshr i32 %1709, 2
  %and1203.i.i = and i32 %shr1202.i.i, 63
  %idxprom1204.i.i = zext i32 %and1203.i.i to i64
  %arrayidx1205.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i.i
  %1710 = ptrtoint i32* %arrayidx1205.i.i to i64
  call void @printLoadAddr(i64 %1710, i32 4721, i32 0, i32 0)
  %1711 = load i32, i32* %arrayidx1205.i.i, align 4
  call void @printDDep(i32 4679, i32 4721)
  call void @printCDep(i32 572, i32 4721)
  %1712 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1712, i32 4724, i32 0, i32 0)
  %1713 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4666, i32 4724)
  call void @printDDep(i32 4713, i32 4724)
  call void @printCDep(i32 572, i32 4724)
  %shr1206.i.i = lshr i32 %1713, 10
  %and1207.i.i = and i32 %shr1206.i.i, 63
  %idxprom1208.i.i = zext i32 %and1207.i.i to i64
  %arrayidx1209.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i.i
  %1714 = ptrtoint i32* %arrayidx1209.i.i to i64
  call void @printLoadAddr(i64 %1714, i32 4732, i32 0, i32 0)
  %1715 = load i32, i32* %arrayidx1209.i.i, align 4
  call void @printDDep(i32 4679, i32 4732)
  call void @printCDep(i32 572, i32 4732)
  %xor1210.i.i = xor i32 %1711, %1715
  %1716 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1716, i32 4736, i32 0, i32 0)
  %1717 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4666, i32 4736)
  call void @printDDep(i32 4724, i32 4736)
  call void @printCDep(i32 572, i32 4736)
  %shr1211.i.i = lshr i32 %1717, 18
  %and1212.i.i = and i32 %shr1211.i.i, 63
  %idxprom1213.i.i = zext i32 %and1212.i.i to i64
  %arrayidx1214.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i.i
  %1718 = ptrtoint i32* %arrayidx1214.i.i to i64
  call void @printLoadAddr(i64 %1718, i32 4744, i32 0, i32 0)
  %1719 = load i32, i32* %arrayidx1214.i.i, align 4
  call void @printDDep(i32 4679, i32 4744)
  call void @printCDep(i32 572, i32 4744)
  %xor1215.i.i = xor i32 %xor1210.i.i, %1719
  %1720 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1720, i32 4748, i32 0, i32 0)
  %1721 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4666, i32 4748)
  call void @printDDep(i32 4736, i32 4748)
  call void @printCDep(i32 572, i32 4748)
  %shr1216.i.i = lshr i32 %1721, 26
  %idxprom1218.i.i = zext i32 %shr1216.i.i to i64
  %arrayidx1219.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i.i
  %1722 = ptrtoint i32* %arrayidx1219.i.i to i64
  call void @printLoadAddr(i64 %1722, i32 4755, i32 0, i32 0)
  %1723 = load i32, i32* %arrayidx1219.i.i, align 4
  call void @printDDep(i32 4679, i32 4755)
  call void @printCDep(i32 572, i32 4755)
  %xor1220.i.i = xor i32 %xor1215.i.i, %1723
  %1724 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1724, i32 4759, i32 0, i32 0)
  %1725 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4709, i32 4759)
  call void @printDDep(i32 4709, i32 4759)
  call void @printCDep(i32 572, i32 4759)
  %shr1221.i.i = lshr i32 %1725, 2
  %and1222.i.i = and i32 %shr1221.i.i, 63
  %idxprom1223.i.i = zext i32 %and1222.i.i to i64
  %arrayidx1224.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i.i
  %1726 = ptrtoint i32* %arrayidx1224.i.i to i64
  call void @printLoadAddr(i64 %1726, i32 4767, i32 0, i32 0)
  %1727 = load i32, i32* %arrayidx1224.i.i, align 4
  call void @printDDep(i32 4679, i32 4767)
  call void @printCDep(i32 572, i32 4767)
  %xor1225.i.i = xor i32 %xor1220.i.i, %1727
  %1728 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1728, i32 4771, i32 0, i32 0)
  %1729 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4709, i32 4771)
  call void @printDDep(i32 4759, i32 4771)
  call void @printCDep(i32 572, i32 4771)
  %shr1226.i.i = lshr i32 %1729, 10
  %and1227.i.i = and i32 %shr1226.i.i, 63
  %idxprom1228.i.i = zext i32 %and1227.i.i to i64
  %arrayidx1229.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i.i
  %1730 = ptrtoint i32* %arrayidx1229.i.i to i64
  call void @printLoadAddr(i64 %1730, i32 4779, i32 0, i32 0)
  %1731 = load i32, i32* %arrayidx1229.i.i, align 4
  call void @printDDep(i32 4679, i32 4779)
  call void @printCDep(i32 572, i32 4779)
  %xor1230.i.i = xor i32 %xor1225.i.i, %1731
  %1732 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1732, i32 4783, i32 0, i32 0)
  %1733 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4709, i32 4783)
  call void @printDDep(i32 4771, i32 4783)
  call void @printCDep(i32 572, i32 4783)
  %shr1231.i.i = lshr i32 %1733, 18
  %and1232.i.i = and i32 %shr1231.i.i, 63
  %idxprom1233.i.i = zext i32 %and1232.i.i to i64
  %arrayidx1234.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i.i
  %1734 = ptrtoint i32* %arrayidx1234.i.i to i64
  call void @printLoadAddr(i64 %1734, i32 4791, i32 0, i32 0)
  %1735 = load i32, i32* %arrayidx1234.i.i, align 4
  call void @printDDep(i32 4679, i32 4791)
  call void @printCDep(i32 572, i32 4791)
  %xor1235.i.i = xor i32 %xor1230.i.i, %1735
  %1736 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1736, i32 4795, i32 0, i32 0)
  %1737 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4709, i32 4795)
  call void @printDDep(i32 4783, i32 4795)
  call void @printCDep(i32 572, i32 4795)
  %shr1236.i.i = lshr i32 %1737, 26
  %idxprom1238.i.i = zext i32 %shr1236.i.i to i64
  %arrayidx1239.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i.i
  %1738 = ptrtoint i32* %arrayidx1239.i.i to i64
  call void @printLoadAddr(i64 %1738, i32 4802, i32 0, i32 0)
  %1739 = load i32, i32* %arrayidx1239.i.i, align 4
  call void @printDDep(i32 4679, i32 4802)
  call void @printCDep(i32 572, i32 4802)
  %xor1240.i.i = xor i32 %xor1235.i.i, %1739
  %1740 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1740, i32 4806, i32 0, i32 0)
  %1741 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 4485, i32 4806)
  call void @printDDep(i32 4679, i32 4806)
  call void @printCDep(i32 572, i32 4806)
  %xor1241.i.i = xor i32 %1741, %xor1240.i.i
  %1742 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %1742, i32 4811, i32 0, i32 0)
  store i32 %xor1241.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 4709, i32 4811)
  call void @printDDep(i32 4806, i32 4811)
  call void @printCDep(i32 572, i32 4811)
  %1743 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1743, i32 4815, i32 0, i32 0)
  %1744 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 4811, i32 4815)
  call void @printDDep(i32 4811, i32 4815)
  call void @printCDep(i32 572, i32 4815)
  %1745 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1745, i32 4819, i32 0, i32 0)
  %1746 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4819)
  call void @printDDep(i32 4679, i32 4819)
  call void @printCDep(i32 572, i32 4819)
  %arrayidx1242.i.i = getelementptr inbounds i32, i32* %1746, i64 10
  %1747 = ptrtoint i32* %arrayidx1242.i.i to i64
  call void @printLoadAddr(i64 %1747, i32 4824, i32 0, i32 0)
  %1748 = load i32, i32* %arrayidx1242.i.i, align 4
  call void @printDDep(i32 4811, i32 4824)
  call void @printDDep(i32 4819, i32 4824)
  call void @printCDep(i32 572, i32 4824)
  %xor1243.i.i = xor i32 %1744, %1748
  %1749 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1749, i32 4829, i32 0, i32 0)
  store i32 %xor1243.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 4811, i32 4829)
  call void @printDDep(i32 4824, i32 4829)
  call void @printCDep(i32 572, i32 4829)
  %1750 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1750, i32 4833, i32 0, i32 0)
  %1751 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 4811, i32 4833)
  call void @printDDep(i32 4824, i32 4833)
  call void @printCDep(i32 572, i32 4833)
  %1752 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1752, i32 4837, i32 0, i32 0)
  %1753 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4837)
  call void @printDDep(i32 4824, i32 4837)
  call void @printCDep(i32 572, i32 4837)
  %arrayidx1244.i.i = getelementptr inbounds i32, i32* %1753, i64 11
  %1754 = ptrtoint i32* %arrayidx1244.i.i to i64
  call void @printLoadAddr(i64 %1754, i32 4842, i32 0, i32 0)
  %1755 = load i32, i32* %arrayidx1244.i.i, align 4
  call void @printDDep(i32 4829, i32 4842)
  call void @printDDep(i32 4837, i32 4842)
  call void @printCDep(i32 572, i32 4842)
  %xor1245.i.i = xor i32 %1751, %1755
  %1756 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1756, i32 4847, i32 0, i32 0)
  store i32 %xor1245.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 4829, i32 4847)
  call void @printDDep(i32 4842, i32 4847)
  call void @printCDep(i32 572, i32 4847)
  %1757 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1757, i32 4851, i32 0, i32 0)
  %1758 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4847, i32 4851)
  call void @printDDep(i32 4847, i32 4851)
  call void @printCDep(i32 572, i32 4851)
  %1759 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1758) #5, !srcloc !30
  %1760 = ptrtoint i32* %ret1246.i.i to i64
  call void @printStoreAddr(i64 %1760, i32 4856, i32 0, i32 0)
  store i32 %1759, i32* %ret1246.i.i, align 4
  call void @printDDep(i32 4847, i32 4856)
  call void @printDDep(i32 123, i32 4856)
  call void @printCDep(i32 572, i32 4856)
  %1761 = ptrtoint i32* %ret1246.i.i to i64
  call void @printLoadAddr(i64 %1761, i32 4860, i32 0, i32 0)
  %1762 = load i32, i32* %ret1246.i.i, align 4
  call void @printDDep(i32 4856, i32 4860)
  call void @printDDep(i32 4856, i32 4860)
  call void @printCDep(i32 572, i32 4860)
  %1763 = ptrtoint i32* %tmp1247.i.i to i64
  call void @printStoreAddr(i64 %1763, i32 4864, i32 0, i32 0)
  store i32 %1762, i32* %tmp1247.i.i, align 4
  call void @printDDep(i32 4856, i32 4864)
  call void @printDDep(i32 123, i32 4864)
  call void @printCDep(i32 572, i32 4864)
  %1764 = ptrtoint i32* %tmp1247.i.i to i64
  call void @printLoadAddr(i64 %1764, i32 4868, i32 0, i32 0)
  %1765 = load i32, i32* %tmp1247.i.i, align 4
  call void @printDDep(i32 4864, i32 4868)
  call void @printDDep(i32 4864, i32 4868)
  call void @printCDep(i32 572, i32 4868)
  %1766 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1766, i32 4872, i32 0, i32 0)
  store i32 %1765, i32* %t.i.i, align 4
  call void @printDDep(i32 4864, i32 4872)
  call void @printDDep(i32 4851, i32 4872)
  call void @printCDep(i32 572, i32 4872)
  %1767 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1767, i32 4876, i32 0, i32 0)
  %1768 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4829, i32 4876)
  call void @printDDep(i32 4842, i32 4876)
  call void @printCDep(i32 572, i32 4876)
  %shr1248.i.i = lshr i32 %1768, 2
  %and1249.i.i = and i32 %shr1248.i.i, 63
  %idxprom1250.i.i = zext i32 %and1249.i.i to i64
  %arrayidx1251.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i.i
  %1769 = ptrtoint i32* %arrayidx1251.i.i to i64
  call void @printLoadAddr(i64 %1769, i32 4884, i32 0, i32 0)
  %1770 = load i32, i32* %arrayidx1251.i.i, align 4
  call void @printDDep(i32 4842, i32 4884)
  call void @printCDep(i32 572, i32 4884)
  %1771 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1771, i32 4887, i32 0, i32 0)
  %1772 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4829, i32 4887)
  call void @printDDep(i32 4876, i32 4887)
  call void @printCDep(i32 572, i32 4887)
  %shr1252.i.i = lshr i32 %1772, 10
  %and1253.i.i = and i32 %shr1252.i.i, 63
  %idxprom1254.i.i = zext i32 %and1253.i.i to i64
  %arrayidx1255.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i.i
  %1773 = ptrtoint i32* %arrayidx1255.i.i to i64
  call void @printLoadAddr(i64 %1773, i32 4895, i32 0, i32 0)
  %1774 = load i32, i32* %arrayidx1255.i.i, align 4
  call void @printDDep(i32 4842, i32 4895)
  call void @printCDep(i32 572, i32 4895)
  %xor1256.i.i = xor i32 %1770, %1774
  %1775 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1775, i32 4899, i32 0, i32 0)
  %1776 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4829, i32 4899)
  call void @printDDep(i32 4887, i32 4899)
  call void @printCDep(i32 572, i32 4899)
  %shr1257.i.i = lshr i32 %1776, 18
  %and1258.i.i = and i32 %shr1257.i.i, 63
  %idxprom1259.i.i = zext i32 %and1258.i.i to i64
  %arrayidx1260.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i.i
  %1777 = ptrtoint i32* %arrayidx1260.i.i to i64
  call void @printLoadAddr(i64 %1777, i32 4907, i32 0, i32 0)
  %1778 = load i32, i32* %arrayidx1260.i.i, align 4
  call void @printDDep(i32 4842, i32 4907)
  call void @printCDep(i32 572, i32 4907)
  %xor1261.i.i = xor i32 %xor1256.i.i, %1778
  %1779 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1779, i32 4911, i32 0, i32 0)
  %1780 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4829, i32 4911)
  call void @printDDep(i32 4899, i32 4911)
  call void @printCDep(i32 572, i32 4911)
  %shr1262.i.i = lshr i32 %1780, 26
  %idxprom1264.i.i = zext i32 %shr1262.i.i to i64
  %arrayidx1265.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i.i
  %1781 = ptrtoint i32* %arrayidx1265.i.i to i64
  call void @printLoadAddr(i64 %1781, i32 4918, i32 0, i32 0)
  %1782 = load i32, i32* %arrayidx1265.i.i, align 4
  call void @printDDep(i32 4842, i32 4918)
  call void @printCDep(i32 572, i32 4918)
  %xor1266.i.i = xor i32 %xor1261.i.i, %1782
  %1783 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1783, i32 4922, i32 0, i32 0)
  %1784 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4872, i32 4922)
  call void @printDDep(i32 4872, i32 4922)
  call void @printCDep(i32 572, i32 4922)
  %shr1267.i.i = lshr i32 %1784, 2
  %and1268.i.i = and i32 %shr1267.i.i, 63
  %idxprom1269.i.i = zext i32 %and1268.i.i to i64
  %arrayidx1270.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i.i
  %1785 = ptrtoint i32* %arrayidx1270.i.i to i64
  call void @printLoadAddr(i64 %1785, i32 4930, i32 0, i32 0)
  %1786 = load i32, i32* %arrayidx1270.i.i, align 4
  call void @printDDep(i32 4842, i32 4930)
  call void @printCDep(i32 572, i32 4930)
  %xor1271.i.i = xor i32 %xor1266.i.i, %1786
  %1787 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1787, i32 4934, i32 0, i32 0)
  %1788 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4872, i32 4934)
  call void @printDDep(i32 4922, i32 4934)
  call void @printCDep(i32 572, i32 4934)
  %shr1272.i.i = lshr i32 %1788, 10
  %and1273.i.i = and i32 %shr1272.i.i, 63
  %idxprom1274.i.i = zext i32 %and1273.i.i to i64
  %arrayidx1275.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i.i
  %1789 = ptrtoint i32* %arrayidx1275.i.i to i64
  call void @printLoadAddr(i64 %1789, i32 4942, i32 0, i32 0)
  %1790 = load i32, i32* %arrayidx1275.i.i, align 4
  call void @printDDep(i32 4842, i32 4942)
  call void @printCDep(i32 572, i32 4942)
  %xor1276.i.i = xor i32 %xor1271.i.i, %1790
  %1791 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1791, i32 4946, i32 0, i32 0)
  %1792 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4872, i32 4946)
  call void @printDDep(i32 4934, i32 4946)
  call void @printCDep(i32 572, i32 4946)
  %shr1277.i.i = lshr i32 %1792, 18
  %and1278.i.i = and i32 %shr1277.i.i, 63
  %idxprom1279.i.i = zext i32 %and1278.i.i to i64
  %arrayidx1280.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i.i
  %1793 = ptrtoint i32* %arrayidx1280.i.i to i64
  call void @printLoadAddr(i64 %1793, i32 4954, i32 0, i32 0)
  %1794 = load i32, i32* %arrayidx1280.i.i, align 4
  call void @printDDep(i32 4842, i32 4954)
  call void @printCDep(i32 572, i32 4954)
  %xor1281.i.i = xor i32 %xor1276.i.i, %1794
  %1795 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1795, i32 4958, i32 0, i32 0)
  %1796 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 4872, i32 4958)
  call void @printDDep(i32 4946, i32 4958)
  call void @printCDep(i32 572, i32 4958)
  %shr1282.i.i = lshr i32 %1796, 26
  %idxprom1284.i.i = zext i32 %shr1282.i.i to i64
  %arrayidx1285.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i.i
  %1797 = ptrtoint i32* %arrayidx1285.i.i to i64
  call void @printLoadAddr(i64 %1797, i32 4965, i32 0, i32 0)
  %1798 = load i32, i32* %arrayidx1285.i.i, align 4
  call void @printDDep(i32 4842, i32 4965)
  call void @printCDep(i32 572, i32 4965)
  %xor1286.i.i = xor i32 %xor1281.i.i, %1798
  %1799 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1799, i32 4969, i32 0, i32 0)
  %1800 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 4648, i32 4969)
  call void @printDDep(i32 4842, i32 4969)
  call void @printCDep(i32 572, i32 4969)
  %xor1287.i.i = xor i32 %1800, %xor1286.i.i
  %1801 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %1801, i32 4974, i32 0, i32 0)
  store i32 %xor1287.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 4872, i32 4974)
  call void @printDDep(i32 4969, i32 4974)
  call void @printCDep(i32 572, i32 4974)
  %1802 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1802, i32 4978, i32 0, i32 0)
  %1803 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 4974, i32 4978)
  call void @printDDep(i32 4974, i32 4978)
  call void @printCDep(i32 572, i32 4978)
  %1804 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1804, i32 4982, i32 0, i32 0)
  %1805 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 4982)
  call void @printDDep(i32 4842, i32 4982)
  call void @printCDep(i32 572, i32 4982)
  %arrayidx1288.i.i = getelementptr inbounds i32, i32* %1805, i64 8
  %1806 = ptrtoint i32* %arrayidx1288.i.i to i64
  call void @printLoadAddr(i64 %1806, i32 4987, i32 0, i32 0)
  %1807 = load i32, i32* %arrayidx1288.i.i, align 4
  call void @printDDep(i32 4974, i32 4987)
  call void @printDDep(i32 4982, i32 4987)
  call void @printCDep(i32 572, i32 4987)
  %xor1289.i.i = xor i32 %1803, %1807
  %1808 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1808, i32 4992, i32 0, i32 0)
  store i32 %xor1289.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 4974, i32 4992)
  call void @printDDep(i32 4987, i32 4992)
  call void @printCDep(i32 572, i32 4992)
  %1809 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1809, i32 4996, i32 0, i32 0)
  %1810 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 4974, i32 4996)
  call void @printDDep(i32 4987, i32 4996)
  call void @printCDep(i32 572, i32 4996)
  %1811 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1811, i32 5000, i32 0, i32 0)
  %1812 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 5000)
  call void @printDDep(i32 4987, i32 5000)
  call void @printCDep(i32 572, i32 5000)
  %arrayidx1290.i.i = getelementptr inbounds i32, i32* %1812, i64 9
  %1813 = ptrtoint i32* %arrayidx1290.i.i to i64
  call void @printLoadAddr(i64 %1813, i32 5005, i32 0, i32 0)
  %1814 = load i32, i32* %arrayidx1290.i.i, align 4
  call void @printDDep(i32 4992, i32 5005)
  call void @printDDep(i32 5000, i32 5005)
  call void @printCDep(i32 572, i32 5005)
  %xor1291.i.i = xor i32 %1810, %1814
  %1815 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1815, i32 5010, i32 0, i32 0)
  store i32 %xor1291.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 4992, i32 5010)
  call void @printDDep(i32 5005, i32 5010)
  call void @printCDep(i32 572, i32 5010)
  %1816 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1816, i32 5014, i32 0, i32 0)
  %1817 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5010, i32 5014)
  call void @printDDep(i32 5010, i32 5014)
  call void @printCDep(i32 572, i32 5014)
  %1818 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1817) #5, !srcloc !31
  %1819 = ptrtoint i32* %ret1292.i.i to i64
  call void @printStoreAddr(i64 %1819, i32 5019, i32 0, i32 0)
  store i32 %1818, i32* %ret1292.i.i, align 4
  call void @printDDep(i32 5010, i32 5019)
  call void @printDDep(i32 123, i32 5019)
  call void @printCDep(i32 572, i32 5019)
  %1820 = ptrtoint i32* %ret1292.i.i to i64
  call void @printLoadAddr(i64 %1820, i32 5023, i32 0, i32 0)
  %1821 = load i32, i32* %ret1292.i.i, align 4
  call void @printDDep(i32 5019, i32 5023)
  call void @printDDep(i32 5019, i32 5023)
  call void @printCDep(i32 572, i32 5023)
  %1822 = ptrtoint i32* %tmp1293.i.i to i64
  call void @printStoreAddr(i64 %1822, i32 5027, i32 0, i32 0)
  store i32 %1821, i32* %tmp1293.i.i, align 4
  call void @printDDep(i32 5019, i32 5027)
  call void @printDDep(i32 123, i32 5027)
  call void @printCDep(i32 572, i32 5027)
  %1823 = ptrtoint i32* %tmp1293.i.i to i64
  call void @printLoadAddr(i64 %1823, i32 5031, i32 0, i32 0)
  %1824 = load i32, i32* %tmp1293.i.i, align 4
  call void @printDDep(i32 5027, i32 5031)
  call void @printDDep(i32 5027, i32 5031)
  call void @printCDep(i32 572, i32 5031)
  %1825 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1825, i32 5035, i32 0, i32 0)
  store i32 %1824, i32* %t.i.i, align 4
  call void @printDDep(i32 5027, i32 5035)
  call void @printDDep(i32 5014, i32 5035)
  call void @printCDep(i32 572, i32 5035)
  %1826 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1826, i32 5039, i32 0, i32 0)
  %1827 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4992, i32 5039)
  call void @printDDep(i32 5005, i32 5039)
  call void @printCDep(i32 572, i32 5039)
  %shr1294.i.i = lshr i32 %1827, 2
  %and1295.i.i = and i32 %shr1294.i.i, 63
  %idxprom1296.i.i = zext i32 %and1295.i.i to i64
  %arrayidx1297.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i.i
  %1828 = ptrtoint i32* %arrayidx1297.i.i to i64
  call void @printLoadAddr(i64 %1828, i32 5047, i32 0, i32 0)
  %1829 = load i32, i32* %arrayidx1297.i.i, align 4
  call void @printDDep(i32 5005, i32 5047)
  call void @printCDep(i32 572, i32 5047)
  %1830 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1830, i32 5050, i32 0, i32 0)
  %1831 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4992, i32 5050)
  call void @printDDep(i32 5039, i32 5050)
  call void @printCDep(i32 572, i32 5050)
  %shr1298.i.i = lshr i32 %1831, 10
  %and1299.i.i = and i32 %shr1298.i.i, 63
  %idxprom1300.i.i = zext i32 %and1299.i.i to i64
  %arrayidx1301.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i.i
  %1832 = ptrtoint i32* %arrayidx1301.i.i to i64
  call void @printLoadAddr(i64 %1832, i32 5058, i32 0, i32 0)
  %1833 = load i32, i32* %arrayidx1301.i.i, align 4
  call void @printDDep(i32 5005, i32 5058)
  call void @printCDep(i32 572, i32 5058)
  %xor1302.i.i = xor i32 %1829, %1833
  %1834 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1834, i32 5062, i32 0, i32 0)
  %1835 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4992, i32 5062)
  call void @printDDep(i32 5050, i32 5062)
  call void @printCDep(i32 572, i32 5062)
  %shr1303.i.i = lshr i32 %1835, 18
  %and1304.i.i = and i32 %shr1303.i.i, 63
  %idxprom1305.i.i = zext i32 %and1304.i.i to i64
  %arrayidx1306.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i.i
  %1836 = ptrtoint i32* %arrayidx1306.i.i to i64
  call void @printLoadAddr(i64 %1836, i32 5070, i32 0, i32 0)
  %1837 = load i32, i32* %arrayidx1306.i.i, align 4
  call void @printDDep(i32 5005, i32 5070)
  call void @printCDep(i32 572, i32 5070)
  %xor1307.i.i = xor i32 %xor1302.i.i, %1837
  %1838 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1838, i32 5074, i32 0, i32 0)
  %1839 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 4992, i32 5074)
  call void @printDDep(i32 5062, i32 5074)
  call void @printCDep(i32 572, i32 5074)
  %shr1308.i.i = lshr i32 %1839, 26
  %idxprom1310.i.i = zext i32 %shr1308.i.i to i64
  %arrayidx1311.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i.i
  %1840 = ptrtoint i32* %arrayidx1311.i.i to i64
  call void @printLoadAddr(i64 %1840, i32 5081, i32 0, i32 0)
  %1841 = load i32, i32* %arrayidx1311.i.i, align 4
  call void @printDDep(i32 5005, i32 5081)
  call void @printCDep(i32 572, i32 5081)
  %xor1312.i.i = xor i32 %xor1307.i.i, %1841
  %1842 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1842, i32 5085, i32 0, i32 0)
  %1843 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5035, i32 5085)
  call void @printDDep(i32 5035, i32 5085)
  call void @printCDep(i32 572, i32 5085)
  %shr1313.i.i = lshr i32 %1843, 2
  %and1314.i.i = and i32 %shr1313.i.i, 63
  %idxprom1315.i.i = zext i32 %and1314.i.i to i64
  %arrayidx1316.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i.i
  %1844 = ptrtoint i32* %arrayidx1316.i.i to i64
  call void @printLoadAddr(i64 %1844, i32 5093, i32 0, i32 0)
  %1845 = load i32, i32* %arrayidx1316.i.i, align 4
  call void @printDDep(i32 5005, i32 5093)
  call void @printCDep(i32 572, i32 5093)
  %xor1317.i.i = xor i32 %xor1312.i.i, %1845
  %1846 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1846, i32 5097, i32 0, i32 0)
  %1847 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5035, i32 5097)
  call void @printDDep(i32 5085, i32 5097)
  call void @printCDep(i32 572, i32 5097)
  %shr1318.i.i = lshr i32 %1847, 10
  %and1319.i.i = and i32 %shr1318.i.i, 63
  %idxprom1320.i.i = zext i32 %and1319.i.i to i64
  %arrayidx1321.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i.i
  %1848 = ptrtoint i32* %arrayidx1321.i.i to i64
  call void @printLoadAddr(i64 %1848, i32 5105, i32 0, i32 0)
  %1849 = load i32, i32* %arrayidx1321.i.i, align 4
  call void @printDDep(i32 5005, i32 5105)
  call void @printCDep(i32 572, i32 5105)
  %xor1322.i.i = xor i32 %xor1317.i.i, %1849
  %1850 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1850, i32 5109, i32 0, i32 0)
  %1851 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5035, i32 5109)
  call void @printDDep(i32 5097, i32 5109)
  call void @printCDep(i32 572, i32 5109)
  %shr1323.i.i = lshr i32 %1851, 18
  %and1324.i.i = and i32 %shr1323.i.i, 63
  %idxprom1325.i.i = zext i32 %and1324.i.i to i64
  %arrayidx1326.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i.i
  %1852 = ptrtoint i32* %arrayidx1326.i.i to i64
  call void @printLoadAddr(i64 %1852, i32 5117, i32 0, i32 0)
  %1853 = load i32, i32* %arrayidx1326.i.i, align 4
  call void @printDDep(i32 5005, i32 5117)
  call void @printCDep(i32 572, i32 5117)
  %xor1327.i.i = xor i32 %xor1322.i.i, %1853
  %1854 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1854, i32 5121, i32 0, i32 0)
  %1855 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5035, i32 5121)
  call void @printDDep(i32 5109, i32 5121)
  call void @printCDep(i32 572, i32 5121)
  %shr1328.i.i = lshr i32 %1855, 26
  %idxprom1330.i.i = zext i32 %shr1328.i.i to i64
  %arrayidx1331.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i.i
  %1856 = ptrtoint i32* %arrayidx1331.i.i to i64
  call void @printLoadAddr(i64 %1856, i32 5128, i32 0, i32 0)
  %1857 = load i32, i32* %arrayidx1331.i.i, align 4
  call void @printDDep(i32 5005, i32 5128)
  call void @printCDep(i32 572, i32 5128)
  %xor1332.i.i = xor i32 %xor1327.i.i, %1857
  %1858 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1858, i32 5132, i32 0, i32 0)
  %1859 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 4811, i32 5132)
  call void @printDDep(i32 5005, i32 5132)
  call void @printCDep(i32 572, i32 5132)
  %xor1333.i.i = xor i32 %1859, %xor1332.i.i
  %1860 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %1860, i32 5137, i32 0, i32 0)
  store i32 %xor1333.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 5035, i32 5137)
  call void @printDDep(i32 5132, i32 5137)
  call void @printCDep(i32 572, i32 5137)
  %1861 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1861, i32 5141, i32 0, i32 0)
  %1862 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5137, i32 5141)
  call void @printDDep(i32 5137, i32 5141)
  call void @printCDep(i32 572, i32 5141)
  %1863 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1863, i32 5145, i32 0, i32 0)
  %1864 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 5145)
  call void @printDDep(i32 5005, i32 5145)
  call void @printCDep(i32 572, i32 5145)
  %arrayidx1334.i.i = getelementptr inbounds i32, i32* %1864, i64 6
  %1865 = ptrtoint i32* %arrayidx1334.i.i to i64
  call void @printLoadAddr(i64 %1865, i32 5150, i32 0, i32 0)
  %1866 = load i32, i32* %arrayidx1334.i.i, align 4
  call void @printDDep(i32 5137, i32 5150)
  call void @printDDep(i32 5145, i32 5150)
  call void @printCDep(i32 572, i32 5150)
  %xor1335.i.i = xor i32 %1862, %1866
  %1867 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1867, i32 5155, i32 0, i32 0)
  store i32 %xor1335.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 5137, i32 5155)
  call void @printDDep(i32 5150, i32 5155)
  call void @printCDep(i32 572, i32 5155)
  %1868 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1868, i32 5159, i32 0, i32 0)
  %1869 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5137, i32 5159)
  call void @printDDep(i32 5150, i32 5159)
  call void @printCDep(i32 572, i32 5159)
  %1870 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1870, i32 5163, i32 0, i32 0)
  %1871 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 5163)
  call void @printDDep(i32 5150, i32 5163)
  call void @printCDep(i32 572, i32 5163)
  %arrayidx1336.i.i = getelementptr inbounds i32, i32* %1871, i64 7
  %1872 = ptrtoint i32* %arrayidx1336.i.i to i64
  call void @printLoadAddr(i64 %1872, i32 5168, i32 0, i32 0)
  %1873 = load i32, i32* %arrayidx1336.i.i, align 4
  call void @printDDep(i32 5155, i32 5168)
  call void @printDDep(i32 5163, i32 5168)
  call void @printCDep(i32 572, i32 5168)
  %xor1337.i.i = xor i32 %1869, %1873
  %1874 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1874, i32 5173, i32 0, i32 0)
  store i32 %xor1337.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 5155, i32 5173)
  call void @printDDep(i32 5168, i32 5173)
  call void @printCDep(i32 572, i32 5173)
  %1875 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1875, i32 5177, i32 0, i32 0)
  %1876 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5173, i32 5177)
  call void @printDDep(i32 5173, i32 5177)
  call void @printCDep(i32 572, i32 5177)
  %1877 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1876) #5, !srcloc !32
  %1878 = ptrtoint i32* %ret1338.i.i to i64
  call void @printStoreAddr(i64 %1878, i32 5182, i32 0, i32 0)
  store i32 %1877, i32* %ret1338.i.i, align 4
  call void @printDDep(i32 5173, i32 5182)
  call void @printDDep(i32 123, i32 5182)
  call void @printCDep(i32 572, i32 5182)
  %1879 = ptrtoint i32* %ret1338.i.i to i64
  call void @printLoadAddr(i64 %1879, i32 5186, i32 0, i32 0)
  %1880 = load i32, i32* %ret1338.i.i, align 4
  call void @printDDep(i32 5182, i32 5186)
  call void @printDDep(i32 5182, i32 5186)
  call void @printCDep(i32 572, i32 5186)
  %1881 = ptrtoint i32* %tmp1339.i.i to i64
  call void @printStoreAddr(i64 %1881, i32 5190, i32 0, i32 0)
  store i32 %1880, i32* %tmp1339.i.i, align 4
  call void @printDDep(i32 5182, i32 5190)
  call void @printDDep(i32 123, i32 5190)
  call void @printCDep(i32 572, i32 5190)
  %1882 = ptrtoint i32* %tmp1339.i.i to i64
  call void @printLoadAddr(i64 %1882, i32 5194, i32 0, i32 0)
  %1883 = load i32, i32* %tmp1339.i.i, align 4
  call void @printDDep(i32 5190, i32 5194)
  call void @printDDep(i32 5190, i32 5194)
  call void @printCDep(i32 572, i32 5194)
  %1884 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1884, i32 5198, i32 0, i32 0)
  store i32 %1883, i32* %t.i.i, align 4
  call void @printDDep(i32 5190, i32 5198)
  call void @printDDep(i32 5177, i32 5198)
  call void @printCDep(i32 572, i32 5198)
  %1885 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1885, i32 5202, i32 0, i32 0)
  %1886 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5155, i32 5202)
  call void @printDDep(i32 5168, i32 5202)
  call void @printCDep(i32 572, i32 5202)
  %shr1340.i.i = lshr i32 %1886, 2
  %and1341.i.i = and i32 %shr1340.i.i, 63
  %idxprom1342.i.i = zext i32 %and1341.i.i to i64
  %arrayidx1343.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i.i
  %1887 = ptrtoint i32* %arrayidx1343.i.i to i64
  call void @printLoadAddr(i64 %1887, i32 5210, i32 0, i32 0)
  %1888 = load i32, i32* %arrayidx1343.i.i, align 4
  call void @printDDep(i32 5168, i32 5210)
  call void @printCDep(i32 572, i32 5210)
  %1889 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1889, i32 5213, i32 0, i32 0)
  %1890 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5155, i32 5213)
  call void @printDDep(i32 5202, i32 5213)
  call void @printCDep(i32 572, i32 5213)
  %shr1344.i.i = lshr i32 %1890, 10
  %and1345.i.i = and i32 %shr1344.i.i, 63
  %idxprom1346.i.i = zext i32 %and1345.i.i to i64
  %arrayidx1347.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i.i
  %1891 = ptrtoint i32* %arrayidx1347.i.i to i64
  call void @printLoadAddr(i64 %1891, i32 5221, i32 0, i32 0)
  %1892 = load i32, i32* %arrayidx1347.i.i, align 4
  call void @printDDep(i32 5168, i32 5221)
  call void @printCDep(i32 572, i32 5221)
  %xor1348.i.i = xor i32 %1888, %1892
  %1893 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1893, i32 5225, i32 0, i32 0)
  %1894 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5155, i32 5225)
  call void @printDDep(i32 5213, i32 5225)
  call void @printCDep(i32 572, i32 5225)
  %shr1349.i.i = lshr i32 %1894, 18
  %and1350.i.i = and i32 %shr1349.i.i, 63
  %idxprom1351.i.i = zext i32 %and1350.i.i to i64
  %arrayidx1352.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i.i
  %1895 = ptrtoint i32* %arrayidx1352.i.i to i64
  call void @printLoadAddr(i64 %1895, i32 5233, i32 0, i32 0)
  %1896 = load i32, i32* %arrayidx1352.i.i, align 4
  call void @printDDep(i32 5168, i32 5233)
  call void @printCDep(i32 572, i32 5233)
  %xor1353.i.i = xor i32 %xor1348.i.i, %1896
  %1897 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1897, i32 5237, i32 0, i32 0)
  %1898 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5155, i32 5237)
  call void @printDDep(i32 5225, i32 5237)
  call void @printCDep(i32 572, i32 5237)
  %shr1354.i.i = lshr i32 %1898, 26
  %idxprom1356.i.i = zext i32 %shr1354.i.i to i64
  %arrayidx1357.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i.i
  %1899 = ptrtoint i32* %arrayidx1357.i.i to i64
  call void @printLoadAddr(i64 %1899, i32 5244, i32 0, i32 0)
  %1900 = load i32, i32* %arrayidx1357.i.i, align 4
  call void @printDDep(i32 5168, i32 5244)
  call void @printCDep(i32 572, i32 5244)
  %xor1358.i.i = xor i32 %xor1353.i.i, %1900
  %1901 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1901, i32 5248, i32 0, i32 0)
  %1902 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5198, i32 5248)
  call void @printDDep(i32 5198, i32 5248)
  call void @printCDep(i32 572, i32 5248)
  %shr1359.i.i = lshr i32 %1902, 2
  %and1360.i.i = and i32 %shr1359.i.i, 63
  %idxprom1361.i.i = zext i32 %and1360.i.i to i64
  %arrayidx1362.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i.i
  %1903 = ptrtoint i32* %arrayidx1362.i.i to i64
  call void @printLoadAddr(i64 %1903, i32 5256, i32 0, i32 0)
  %1904 = load i32, i32* %arrayidx1362.i.i, align 4
  call void @printDDep(i32 5168, i32 5256)
  call void @printCDep(i32 572, i32 5256)
  %xor1363.i.i = xor i32 %xor1358.i.i, %1904
  %1905 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1905, i32 5260, i32 0, i32 0)
  %1906 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5198, i32 5260)
  call void @printDDep(i32 5248, i32 5260)
  call void @printCDep(i32 572, i32 5260)
  %shr1364.i.i = lshr i32 %1906, 10
  %and1365.i.i = and i32 %shr1364.i.i, 63
  %idxprom1366.i.i = zext i32 %and1365.i.i to i64
  %arrayidx1367.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i.i
  %1907 = ptrtoint i32* %arrayidx1367.i.i to i64
  call void @printLoadAddr(i64 %1907, i32 5268, i32 0, i32 0)
  %1908 = load i32, i32* %arrayidx1367.i.i, align 4
  call void @printDDep(i32 5168, i32 5268)
  call void @printCDep(i32 572, i32 5268)
  %xor1368.i.i = xor i32 %xor1363.i.i, %1908
  %1909 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1909, i32 5272, i32 0, i32 0)
  %1910 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5198, i32 5272)
  call void @printDDep(i32 5260, i32 5272)
  call void @printCDep(i32 572, i32 5272)
  %shr1369.i.i = lshr i32 %1910, 18
  %and1370.i.i = and i32 %shr1369.i.i, 63
  %idxprom1371.i.i = zext i32 %and1370.i.i to i64
  %arrayidx1372.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i.i
  %1911 = ptrtoint i32* %arrayidx1372.i.i to i64
  call void @printLoadAddr(i64 %1911, i32 5280, i32 0, i32 0)
  %1912 = load i32, i32* %arrayidx1372.i.i, align 4
  call void @printDDep(i32 5168, i32 5280)
  call void @printCDep(i32 572, i32 5280)
  %xor1373.i.i = xor i32 %xor1368.i.i, %1912
  %1913 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1913, i32 5284, i32 0, i32 0)
  %1914 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5198, i32 5284)
  call void @printDDep(i32 5272, i32 5284)
  call void @printCDep(i32 572, i32 5284)
  %shr1374.i.i = lshr i32 %1914, 26
  %idxprom1376.i.i = zext i32 %shr1374.i.i to i64
  %arrayidx1377.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i.i
  %1915 = ptrtoint i32* %arrayidx1377.i.i to i64
  call void @printLoadAddr(i64 %1915, i32 5291, i32 0, i32 0)
  %1916 = load i32, i32* %arrayidx1377.i.i, align 4
  call void @printDDep(i32 5168, i32 5291)
  call void @printCDep(i32 572, i32 5291)
  %xor1378.i.i = xor i32 %xor1373.i.i, %1916
  %1917 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1917, i32 5295, i32 0, i32 0)
  %1918 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 4974, i32 5295)
  call void @printDDep(i32 5168, i32 5295)
  call void @printCDep(i32 572, i32 5295)
  %xor1379.i.i = xor i32 %1918, %xor1378.i.i
  %1919 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %1919, i32 5300, i32 0, i32 0)
  store i32 %xor1379.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 5198, i32 5300)
  call void @printDDep(i32 5295, i32 5300)
  call void @printCDep(i32 572, i32 5300)
  %1920 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1920, i32 5304, i32 0, i32 0)
  %1921 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5300, i32 5304)
  call void @printDDep(i32 5300, i32 5304)
  call void @printCDep(i32 572, i32 5304)
  %1922 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1922, i32 5308, i32 0, i32 0)
  %1923 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 5308)
  call void @printDDep(i32 5168, i32 5308)
  call void @printCDep(i32 572, i32 5308)
  %arrayidx1380.i.i = getelementptr inbounds i32, i32* %1923, i64 4
  %1924 = ptrtoint i32* %arrayidx1380.i.i to i64
  call void @printLoadAddr(i64 %1924, i32 5313, i32 0, i32 0)
  %1925 = load i32, i32* %arrayidx1380.i.i, align 4
  call void @printDDep(i32 5300, i32 5313)
  call void @printDDep(i32 5308, i32 5313)
  call void @printCDep(i32 572, i32 5313)
  %xor1381.i.i = xor i32 %1921, %1925
  %1926 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1926, i32 5318, i32 0, i32 0)
  store i32 %xor1381.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 5300, i32 5318)
  call void @printDDep(i32 5313, i32 5318)
  call void @printCDep(i32 572, i32 5318)
  %1927 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %1927, i32 5322, i32 0, i32 0)
  %1928 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5300, i32 5322)
  call void @printDDep(i32 5313, i32 5322)
  call void @printCDep(i32 572, i32 5322)
  %1929 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1929, i32 5326, i32 0, i32 0)
  %1930 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 5326)
  call void @printDDep(i32 5313, i32 5326)
  call void @printCDep(i32 572, i32 5326)
  %arrayidx1382.i.i = getelementptr inbounds i32, i32* %1930, i64 5
  %1931 = ptrtoint i32* %arrayidx1382.i.i to i64
  call void @printLoadAddr(i64 %1931, i32 5331, i32 0, i32 0)
  %1932 = load i32, i32* %arrayidx1382.i.i, align 4
  call void @printDDep(i32 5318, i32 5331)
  call void @printDDep(i32 5326, i32 5331)
  call void @printCDep(i32 572, i32 5331)
  %xor1383.i.i = xor i32 %1928, %1932
  %1933 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1933, i32 5336, i32 0, i32 0)
  store i32 %xor1383.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 5318, i32 5336)
  call void @printDDep(i32 5331, i32 5336)
  call void @printCDep(i32 572, i32 5336)
  %1934 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1934, i32 5340, i32 0, i32 0)
  %1935 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5336, i32 5340)
  call void @printDDep(i32 5336, i32 5340)
  call void @printCDep(i32 572, i32 5340)
  %1936 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1935) #5, !srcloc !33
  %1937 = ptrtoint i32* %ret1384.i.i to i64
  call void @printStoreAddr(i64 %1937, i32 5345, i32 0, i32 0)
  store i32 %1936, i32* %ret1384.i.i, align 4
  call void @printDDep(i32 5336, i32 5345)
  call void @printDDep(i32 123, i32 5345)
  call void @printCDep(i32 572, i32 5345)
  %1938 = ptrtoint i32* %ret1384.i.i to i64
  call void @printLoadAddr(i64 %1938, i32 5349, i32 0, i32 0)
  %1939 = load i32, i32* %ret1384.i.i, align 4
  call void @printDDep(i32 5345, i32 5349)
  call void @printDDep(i32 5345, i32 5349)
  call void @printCDep(i32 572, i32 5349)
  %1940 = ptrtoint i32* %tmp1385.i.i to i64
  call void @printStoreAddr(i64 %1940, i32 5353, i32 0, i32 0)
  store i32 %1939, i32* %tmp1385.i.i, align 4
  call void @printDDep(i32 5345, i32 5353)
  call void @printDDep(i32 123, i32 5353)
  call void @printCDep(i32 572, i32 5353)
  %1941 = ptrtoint i32* %tmp1385.i.i to i64
  call void @printLoadAddr(i64 %1941, i32 5357, i32 0, i32 0)
  %1942 = load i32, i32* %tmp1385.i.i, align 4
  call void @printDDep(i32 5353, i32 5357)
  call void @printDDep(i32 5353, i32 5357)
  call void @printCDep(i32 572, i32 5357)
  %1943 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1943, i32 5361, i32 0, i32 0)
  store i32 %1942, i32* %t.i.i, align 4
  call void @printDDep(i32 5353, i32 5361)
  call void @printDDep(i32 5340, i32 5361)
  call void @printCDep(i32 572, i32 5361)
  %1944 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1944, i32 5365, i32 0, i32 0)
  %1945 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5318, i32 5365)
  call void @printDDep(i32 5331, i32 5365)
  call void @printCDep(i32 572, i32 5365)
  %shr1386.i.i = lshr i32 %1945, 2
  %and1387.i.i = and i32 %shr1386.i.i, 63
  %idxprom1388.i.i = zext i32 %and1387.i.i to i64
  %arrayidx1389.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i.i
  %1946 = ptrtoint i32* %arrayidx1389.i.i to i64
  call void @printLoadAddr(i64 %1946, i32 5373, i32 0, i32 0)
  %1947 = load i32, i32* %arrayidx1389.i.i, align 4
  call void @printDDep(i32 5331, i32 5373)
  call void @printCDep(i32 572, i32 5373)
  %1948 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1948, i32 5376, i32 0, i32 0)
  %1949 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5318, i32 5376)
  call void @printDDep(i32 5365, i32 5376)
  call void @printCDep(i32 572, i32 5376)
  %shr1390.i.i = lshr i32 %1949, 10
  %and1391.i.i = and i32 %shr1390.i.i, 63
  %idxprom1392.i.i = zext i32 %and1391.i.i to i64
  %arrayidx1393.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i.i
  %1950 = ptrtoint i32* %arrayidx1393.i.i to i64
  call void @printLoadAddr(i64 %1950, i32 5384, i32 0, i32 0)
  %1951 = load i32, i32* %arrayidx1393.i.i, align 4
  call void @printDDep(i32 5331, i32 5384)
  call void @printCDep(i32 572, i32 5384)
  %xor1394.i.i = xor i32 %1947, %1951
  %1952 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1952, i32 5388, i32 0, i32 0)
  %1953 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5318, i32 5388)
  call void @printDDep(i32 5376, i32 5388)
  call void @printCDep(i32 572, i32 5388)
  %shr1395.i.i = lshr i32 %1953, 18
  %and1396.i.i = and i32 %shr1395.i.i, 63
  %idxprom1397.i.i = zext i32 %and1396.i.i to i64
  %arrayidx1398.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i.i
  %1954 = ptrtoint i32* %arrayidx1398.i.i to i64
  call void @printLoadAddr(i64 %1954, i32 5396, i32 0, i32 0)
  %1955 = load i32, i32* %arrayidx1398.i.i, align 4
  call void @printDDep(i32 5331, i32 5396)
  call void @printCDep(i32 572, i32 5396)
  %xor1399.i.i = xor i32 %xor1394.i.i, %1955
  %1956 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %1956, i32 5400, i32 0, i32 0)
  %1957 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5318, i32 5400)
  call void @printDDep(i32 5388, i32 5400)
  call void @printCDep(i32 572, i32 5400)
  %shr1400.i.i = lshr i32 %1957, 26
  %idxprom1402.i.i = zext i32 %shr1400.i.i to i64
  %arrayidx1403.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i.i
  %1958 = ptrtoint i32* %arrayidx1403.i.i to i64
  call void @printLoadAddr(i64 %1958, i32 5407, i32 0, i32 0)
  %1959 = load i32, i32* %arrayidx1403.i.i, align 4
  call void @printDDep(i32 5331, i32 5407)
  call void @printCDep(i32 572, i32 5407)
  %xor1404.i.i = xor i32 %xor1399.i.i, %1959
  %1960 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1960, i32 5411, i32 0, i32 0)
  %1961 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5361, i32 5411)
  call void @printDDep(i32 5361, i32 5411)
  call void @printCDep(i32 572, i32 5411)
  %shr1405.i.i = lshr i32 %1961, 2
  %and1406.i.i = and i32 %shr1405.i.i, 63
  %idxprom1407.i.i = zext i32 %and1406.i.i to i64
  %arrayidx1408.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i.i
  %1962 = ptrtoint i32* %arrayidx1408.i.i to i64
  call void @printLoadAddr(i64 %1962, i32 5419, i32 0, i32 0)
  %1963 = load i32, i32* %arrayidx1408.i.i, align 4
  call void @printDDep(i32 5331, i32 5419)
  call void @printCDep(i32 572, i32 5419)
  %xor1409.i.i = xor i32 %xor1404.i.i, %1963
  %1964 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1964, i32 5423, i32 0, i32 0)
  %1965 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5361, i32 5423)
  call void @printDDep(i32 5411, i32 5423)
  call void @printCDep(i32 572, i32 5423)
  %shr1410.i.i = lshr i32 %1965, 10
  %and1411.i.i = and i32 %shr1410.i.i, 63
  %idxprom1412.i.i = zext i32 %and1411.i.i to i64
  %arrayidx1413.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i.i
  %1966 = ptrtoint i32* %arrayidx1413.i.i to i64
  call void @printLoadAddr(i64 %1966, i32 5431, i32 0, i32 0)
  %1967 = load i32, i32* %arrayidx1413.i.i, align 4
  call void @printDDep(i32 5331, i32 5431)
  call void @printCDep(i32 572, i32 5431)
  %xor1414.i.i = xor i32 %xor1409.i.i, %1967
  %1968 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1968, i32 5435, i32 0, i32 0)
  %1969 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5361, i32 5435)
  call void @printDDep(i32 5423, i32 5435)
  call void @printCDep(i32 572, i32 5435)
  %shr1415.i.i = lshr i32 %1969, 18
  %and1416.i.i = and i32 %shr1415.i.i, 63
  %idxprom1417.i.i = zext i32 %and1416.i.i to i64
  %arrayidx1418.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i.i
  %1970 = ptrtoint i32* %arrayidx1418.i.i to i64
  call void @printLoadAddr(i64 %1970, i32 5443, i32 0, i32 0)
  %1971 = load i32, i32* %arrayidx1418.i.i, align 4
  call void @printDDep(i32 5331, i32 5443)
  call void @printCDep(i32 572, i32 5443)
  %xor1419.i.i = xor i32 %xor1414.i.i, %1971
  %1972 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1972, i32 5447, i32 0, i32 0)
  %1973 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5361, i32 5447)
  call void @printDDep(i32 5435, i32 5447)
  call void @printCDep(i32 572, i32 5447)
  %shr1420.i.i = lshr i32 %1973, 26
  %idxprom1422.i.i = zext i32 %shr1420.i.i to i64
  %arrayidx1423.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i.i
  %1974 = ptrtoint i32* %arrayidx1423.i.i to i64
  call void @printLoadAddr(i64 %1974, i32 5454, i32 0, i32 0)
  %1975 = load i32, i32* %arrayidx1423.i.i, align 4
  call void @printDDep(i32 5331, i32 5454)
  call void @printCDep(i32 572, i32 5454)
  %xor1424.i.i = xor i32 %xor1419.i.i, %1975
  %1976 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1976, i32 5458, i32 0, i32 0)
  %1977 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5137, i32 5458)
  call void @printDDep(i32 5331, i32 5458)
  call void @printCDep(i32 572, i32 5458)
  %xor1425.i.i = xor i32 %1977, %xor1424.i.i
  %1978 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %1978, i32 5463, i32 0, i32 0)
  store i32 %xor1425.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 5361, i32 5463)
  call void @printDDep(i32 5458, i32 5463)
  call void @printCDep(i32 572, i32 5463)
  %1979 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1979, i32 5467, i32 0, i32 0)
  %1980 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5463, i32 5467)
  call void @printDDep(i32 5463, i32 5467)
  call void @printCDep(i32 572, i32 5467)
  %1981 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1981, i32 5471, i32 0, i32 0)
  %1982 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 5471)
  call void @printDDep(i32 5331, i32 5471)
  call void @printCDep(i32 572, i32 5471)
  %arrayidx1426.i.i = getelementptr inbounds i32, i32* %1982, i64 2
  %1983 = ptrtoint i32* %arrayidx1426.i.i to i64
  call void @printLoadAddr(i64 %1983, i32 5476, i32 0, i32 0)
  %1984 = load i32, i32* %arrayidx1426.i.i, align 4
  call void @printDDep(i32 5463, i32 5476)
  call void @printDDep(i32 5471, i32 5476)
  call void @printCDep(i32 572, i32 5476)
  %xor1427.i.i = xor i32 %1980, %1984
  %1985 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %1985, i32 5481, i32 0, i32 0)
  store i32 %xor1427.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 5463, i32 5481)
  call void @printDDep(i32 5476, i32 5481)
  call void @printCDep(i32 572, i32 5481)
  %1986 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %1986, i32 5485, i32 0, i32 0)
  %1987 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5463, i32 5485)
  call void @printDDep(i32 5476, i32 5485)
  call void @printCDep(i32 572, i32 5485)
  %1988 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %1988, i32 5489, i32 0, i32 0)
  %1989 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 5489)
  call void @printDDep(i32 5476, i32 5489)
  call void @printCDep(i32 572, i32 5489)
  %arrayidx1428.i.i = getelementptr inbounds i32, i32* %1989, i64 3
  %1990 = ptrtoint i32* %arrayidx1428.i.i to i64
  call void @printLoadAddr(i64 %1990, i32 5494, i32 0, i32 0)
  %1991 = load i32, i32* %arrayidx1428.i.i, align 4
  call void @printDDep(i32 5481, i32 5494)
  call void @printDDep(i32 5489, i32 5494)
  call void @printCDep(i32 572, i32 5494)
  %xor1429.i.i = xor i32 %1987, %1991
  %1992 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %1992, i32 5499, i32 0, i32 0)
  store i32 %xor1429.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 5481, i32 5499)
  call void @printDDep(i32 5494, i32 5499)
  call void @printCDep(i32 572, i32 5499)
  %1993 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %1993, i32 5503, i32 0, i32 0)
  %1994 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5499, i32 5503)
  call void @printDDep(i32 5499, i32 5503)
  call void @printCDep(i32 572, i32 5503)
  %1995 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1994) #5, !srcloc !34
  %1996 = ptrtoint i32* %ret1430.i.i to i64
  call void @printStoreAddr(i64 %1996, i32 5508, i32 0, i32 0)
  store i32 %1995, i32* %ret1430.i.i, align 4
  call void @printDDep(i32 5499, i32 5508)
  call void @printDDep(i32 123, i32 5508)
  call void @printCDep(i32 572, i32 5508)
  %1997 = ptrtoint i32* %ret1430.i.i to i64
  call void @printLoadAddr(i64 %1997, i32 5512, i32 0, i32 0)
  %1998 = load i32, i32* %ret1430.i.i, align 4
  call void @printDDep(i32 5508, i32 5512)
  call void @printDDep(i32 5508, i32 5512)
  call void @printCDep(i32 572, i32 5512)
  %1999 = ptrtoint i32* %tmp1431.i.i to i64
  call void @printStoreAddr(i64 %1999, i32 5516, i32 0, i32 0)
  store i32 %1998, i32* %tmp1431.i.i, align 4
  call void @printDDep(i32 5508, i32 5516)
  call void @printDDep(i32 123, i32 5516)
  call void @printCDep(i32 572, i32 5516)
  %2000 = ptrtoint i32* %tmp1431.i.i to i64
  call void @printLoadAddr(i64 %2000, i32 5520, i32 0, i32 0)
  %2001 = load i32, i32* %tmp1431.i.i, align 4
  call void @printDDep(i32 5516, i32 5520)
  call void @printDDep(i32 5516, i32 5520)
  call void @printCDep(i32 572, i32 5520)
  %2002 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %2002, i32 5524, i32 0, i32 0)
  store i32 %2001, i32* %t.i.i, align 4
  call void @printDDep(i32 5516, i32 5524)
  call void @printDDep(i32 5503, i32 5524)
  call void @printCDep(i32 572, i32 5524)
  %2003 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %2003, i32 5528, i32 0, i32 0)
  %2004 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5481, i32 5528)
  call void @printDDep(i32 5494, i32 5528)
  call void @printCDep(i32 572, i32 5528)
  %shr1432.i.i = lshr i32 %2004, 2
  %and1433.i.i = and i32 %shr1432.i.i, 63
  %idxprom1434.i.i = zext i32 %and1433.i.i to i64
  %arrayidx1435.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i.i
  %2005 = ptrtoint i32* %arrayidx1435.i.i to i64
  call void @printLoadAddr(i64 %2005, i32 5536, i32 0, i32 0)
  %2006 = load i32, i32* %arrayidx1435.i.i, align 4
  call void @printDDep(i32 5494, i32 5536)
  call void @printCDep(i32 572, i32 5536)
  %2007 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %2007, i32 5539, i32 0, i32 0)
  %2008 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5481, i32 5539)
  call void @printDDep(i32 5528, i32 5539)
  call void @printCDep(i32 572, i32 5539)
  %shr1436.i.i = lshr i32 %2008, 10
  %and1437.i.i = and i32 %shr1436.i.i, 63
  %idxprom1438.i.i = zext i32 %and1437.i.i to i64
  %arrayidx1439.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i.i
  %2009 = ptrtoint i32* %arrayidx1439.i.i to i64
  call void @printLoadAddr(i64 %2009, i32 5547, i32 0, i32 0)
  %2010 = load i32, i32* %arrayidx1439.i.i, align 4
  call void @printDDep(i32 5494, i32 5547)
  call void @printCDep(i32 572, i32 5547)
  %xor1440.i.i = xor i32 %2006, %2010
  %2011 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %2011, i32 5551, i32 0, i32 0)
  %2012 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5481, i32 5551)
  call void @printDDep(i32 5539, i32 5551)
  call void @printCDep(i32 572, i32 5551)
  %shr1441.i.i = lshr i32 %2012, 18
  %and1442.i.i = and i32 %shr1441.i.i, 63
  %idxprom1443.i.i = zext i32 %and1442.i.i to i64
  %arrayidx1444.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i.i
  %2013 = ptrtoint i32* %arrayidx1444.i.i to i64
  call void @printLoadAddr(i64 %2013, i32 5559, i32 0, i32 0)
  %2014 = load i32, i32* %arrayidx1444.i.i, align 4
  call void @printDDep(i32 5494, i32 5559)
  call void @printCDep(i32 572, i32 5559)
  %xor1445.i.i = xor i32 %xor1440.i.i, %2014
  %2015 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %2015, i32 5563, i32 0, i32 0)
  %2016 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5481, i32 5563)
  call void @printDDep(i32 5551, i32 5563)
  call void @printCDep(i32 572, i32 5563)
  %shr1446.i.i = lshr i32 %2016, 26
  %idxprom1448.i.i = zext i32 %shr1446.i.i to i64
  %arrayidx1449.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i.i
  %2017 = ptrtoint i32* %arrayidx1449.i.i to i64
  call void @printLoadAddr(i64 %2017, i32 5570, i32 0, i32 0)
  %2018 = load i32, i32* %arrayidx1449.i.i, align 4
  call void @printDDep(i32 5494, i32 5570)
  call void @printCDep(i32 572, i32 5570)
  %xor1450.i.i = xor i32 %xor1445.i.i, %2018
  %2019 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %2019, i32 5574, i32 0, i32 0)
  %2020 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5524, i32 5574)
  call void @printDDep(i32 5524, i32 5574)
  call void @printCDep(i32 572, i32 5574)
  %shr1451.i.i = lshr i32 %2020, 2
  %and1452.i.i = and i32 %shr1451.i.i, 63
  %idxprom1453.i.i = zext i32 %and1452.i.i to i64
  %arrayidx1454.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i.i
  %2021 = ptrtoint i32* %arrayidx1454.i.i to i64
  call void @printLoadAddr(i64 %2021, i32 5582, i32 0, i32 0)
  %2022 = load i32, i32* %arrayidx1454.i.i, align 4
  call void @printDDep(i32 5494, i32 5582)
  call void @printCDep(i32 572, i32 5582)
  %xor1455.i.i = xor i32 %xor1450.i.i, %2022
  %2023 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %2023, i32 5586, i32 0, i32 0)
  %2024 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5524, i32 5586)
  call void @printDDep(i32 5574, i32 5586)
  call void @printCDep(i32 572, i32 5586)
  %shr1456.i.i = lshr i32 %2024, 10
  %and1457.i.i = and i32 %shr1456.i.i, 63
  %idxprom1458.i.i = zext i32 %and1457.i.i to i64
  %arrayidx1459.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i.i
  %2025 = ptrtoint i32* %arrayidx1459.i.i to i64
  call void @printLoadAddr(i64 %2025, i32 5594, i32 0, i32 0)
  %2026 = load i32, i32* %arrayidx1459.i.i, align 4
  call void @printDDep(i32 5494, i32 5594)
  call void @printCDep(i32 572, i32 5594)
  %xor1460.i.i = xor i32 %xor1455.i.i, %2026
  %2027 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %2027, i32 5598, i32 0, i32 0)
  %2028 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5524, i32 5598)
  call void @printDDep(i32 5586, i32 5598)
  call void @printCDep(i32 572, i32 5598)
  %shr1461.i.i = lshr i32 %2028, 18
  %and1462.i.i = and i32 %shr1461.i.i, 63
  %idxprom1463.i.i = zext i32 %and1462.i.i to i64
  %arrayidx1464.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i.i
  %2029 = ptrtoint i32* %arrayidx1464.i.i to i64
  call void @printLoadAddr(i64 %2029, i32 5606, i32 0, i32 0)
  %2030 = load i32, i32* %arrayidx1464.i.i, align 4
  call void @printDDep(i32 5494, i32 5606)
  call void @printCDep(i32 572, i32 5606)
  %xor1465.i.i = xor i32 %xor1460.i.i, %2030
  %2031 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %2031, i32 5610, i32 0, i32 0)
  %2032 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5524, i32 5610)
  call void @printDDep(i32 5598, i32 5610)
  call void @printCDep(i32 572, i32 5610)
  %shr1466.i.i = lshr i32 %2032, 26
  %idxprom1468.i.i = zext i32 %shr1466.i.i to i64
  %arrayidx1469.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i.i
  %2033 = ptrtoint i32* %arrayidx1469.i.i to i64
  call void @printLoadAddr(i64 %2033, i32 5617, i32 0, i32 0)
  %2034 = load i32, i32* %arrayidx1469.i.i, align 4
  call void @printDDep(i32 5494, i32 5617)
  call void @printCDep(i32 572, i32 5617)
  %xor1470.i.i = xor i32 %xor1465.i.i, %2034
  %2035 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2035, i32 5621, i32 0, i32 0)
  %2036 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5300, i32 5621)
  call void @printDDep(i32 5494, i32 5621)
  call void @printCDep(i32 572, i32 5621)
  %xor1471.i.i = xor i32 %2036, %xor1470.i.i
  %2037 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %2037, i32 5626, i32 0, i32 0)
  store i32 %xor1471.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 5524, i32 5626)
  call void @printDDep(i32 5621, i32 5626)
  call void @printCDep(i32 572, i32 5626)
  %2038 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2038, i32 5630, i32 0, i32 0)
  %2039 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5626, i32 5630)
  call void @printDDep(i32 5626, i32 5630)
  call void @printCDep(i32 572, i32 5630)
  %2040 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %2040, i32 5634, i32 0, i32 0)
  %2041 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 5634)
  call void @printDDep(i32 5494, i32 5634)
  call void @printCDep(i32 572, i32 5634)
  %2042 = ptrtoint i32* %2041 to i64
  call void @printLoadAddr(i64 %2042, i32 5638, i32 0, i32 0)
  %2043 = load i32, i32* %2041, align 4
  call void @printDDep(i32 5626, i32 5638)
  call void @printDDep(i32 5634, i32 5638)
  call void @printCDep(i32 572, i32 5638)
  %xor1473.i.i = xor i32 %2039, %2043
  %2044 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %2044, i32 5643, i32 0, i32 0)
  store i32 %xor1473.i.i, i32* %u.i.i, align 4
  call void @printDDep(i32 5626, i32 5643)
  call void @printDDep(i32 5638, i32 5643)
  call void @printCDep(i32 572, i32 5643)
  %2045 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2045, i32 5647, i32 0, i32 0)
  %2046 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5626, i32 5647)
  call void @printDDep(i32 5638, i32 5647)
  call void @printCDep(i32 572, i32 5647)
  %2047 = ptrtoint i32** %s.i.i to i64
  call void @printLoadAddr(i64 %2047, i32 5651, i32 0, i32 0)
  %2048 = load i32*, i32** %s.i.i, align 8
  call void @printDDep(i32 569, i32 5651)
  call void @printDDep(i32 5638, i32 5651)
  call void @printCDep(i32 572, i32 5651)
  %arrayidx1474.i.i = getelementptr inbounds i32, i32* %2048, i64 1
  %2049 = ptrtoint i32* %arrayidx1474.i.i to i64
  call void @printLoadAddr(i64 %2049, i32 5656, i32 0, i32 0)
  %2050 = load i32, i32* %arrayidx1474.i.i, align 4
  call void @printDDep(i32 5643, i32 5656)
  call void @printDDep(i32 5651, i32 5656)
  call void @printCDep(i32 572, i32 5656)
  %xor1475.i.i = xor i32 %2046, %2050
  %2051 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %2051, i32 5661, i32 0, i32 0)
  store i32 %xor1475.i.i, i32* %t.i.i, align 4
  call void @printDDep(i32 5643, i32 5661)
  call void @printDDep(i32 5656, i32 5661)
  call void @printCDep(i32 572, i32 5661)
  %2052 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %2052, i32 5665, i32 0, i32 0)
  %2053 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5661, i32 5665)
  call void @printDDep(i32 5661, i32 5665)
  call void @printCDep(i32 572, i32 5665)
  %2054 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2053) #5, !srcloc !35
  %2055 = ptrtoint i32* %ret1476.i.i to i64
  call void @printStoreAddr(i64 %2055, i32 5670, i32 0, i32 0)
  store i32 %2054, i32* %ret1476.i.i, align 4
  call void @printDDep(i32 5661, i32 5670)
  call void @printDDep(i32 123, i32 5670)
  call void @printCDep(i32 572, i32 5670)
  %2056 = ptrtoint i32* %ret1476.i.i to i64
  call void @printLoadAddr(i64 %2056, i32 5674, i32 0, i32 0)
  %2057 = load i32, i32* %ret1476.i.i, align 4
  call void @printDDep(i32 5670, i32 5674)
  call void @printDDep(i32 5670, i32 5674)
  call void @printCDep(i32 572, i32 5674)
  %2058 = ptrtoint i32* %tmp1477.i.i to i64
  call void @printStoreAddr(i64 %2058, i32 5678, i32 0, i32 0)
  store i32 %2057, i32* %tmp1477.i.i, align 4
  call void @printDDep(i32 5670, i32 5678)
  call void @printDDep(i32 123, i32 5678)
  call void @printCDep(i32 572, i32 5678)
  %2059 = ptrtoint i32* %tmp1477.i.i to i64
  call void @printLoadAddr(i64 %2059, i32 5682, i32 0, i32 0)
  %2060 = load i32, i32* %tmp1477.i.i, align 4
  call void @printDDep(i32 5678, i32 5682)
  call void @printDDep(i32 5678, i32 5682)
  call void @printCDep(i32 572, i32 5682)
  %2061 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %2061, i32 5686, i32 0, i32 0)
  store i32 %2060, i32* %t.i.i, align 4
  call void @printDDep(i32 5678, i32 5686)
  call void @printDDep(i32 5665, i32 5686)
  call void @printCDep(i32 572, i32 5686)
  %2062 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %2062, i32 5690, i32 0, i32 0)
  %2063 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5643, i32 5690)
  call void @printDDep(i32 5656, i32 5690)
  call void @printCDep(i32 572, i32 5690)
  %shr1478.i.i = lshr i32 %2063, 2
  %and1479.i.i = and i32 %shr1478.i.i, 63
  %idxprom1480.i.i = zext i32 %and1479.i.i to i64
  %arrayidx1481.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i.i
  %2064 = ptrtoint i32* %arrayidx1481.i.i to i64
  call void @printLoadAddr(i64 %2064, i32 5698, i32 0, i32 0)
  %2065 = load i32, i32* %arrayidx1481.i.i, align 4
  call void @printDDep(i32 5656, i32 5698)
  call void @printCDep(i32 572, i32 5698)
  %2066 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %2066, i32 5701, i32 0, i32 0)
  %2067 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5643, i32 5701)
  call void @printDDep(i32 5690, i32 5701)
  call void @printCDep(i32 572, i32 5701)
  %shr1482.i.i = lshr i32 %2067, 10
  %and1483.i.i = and i32 %shr1482.i.i, 63
  %idxprom1484.i.i = zext i32 %and1483.i.i to i64
  %arrayidx1485.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i.i
  %2068 = ptrtoint i32* %arrayidx1485.i.i to i64
  call void @printLoadAddr(i64 %2068, i32 5709, i32 0, i32 0)
  %2069 = load i32, i32* %arrayidx1485.i.i, align 4
  call void @printDDep(i32 5656, i32 5709)
  call void @printCDep(i32 572, i32 5709)
  %xor1486.i.i = xor i32 %2065, %2069
  %2070 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %2070, i32 5713, i32 0, i32 0)
  %2071 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5643, i32 5713)
  call void @printDDep(i32 5701, i32 5713)
  call void @printCDep(i32 572, i32 5713)
  %shr1487.i.i = lshr i32 %2071, 18
  %and1488.i.i = and i32 %shr1487.i.i, 63
  %idxprom1489.i.i = zext i32 %and1488.i.i to i64
  %arrayidx1490.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i.i
  %2072 = ptrtoint i32* %arrayidx1490.i.i to i64
  call void @printLoadAddr(i64 %2072, i32 5721, i32 0, i32 0)
  %2073 = load i32, i32* %arrayidx1490.i.i, align 4
  call void @printDDep(i32 5656, i32 5721)
  call void @printCDep(i32 572, i32 5721)
  %xor1491.i.i = xor i32 %xor1486.i.i, %2073
  %2074 = ptrtoint i32* %u.i.i to i64
  call void @printLoadAddr(i64 %2074, i32 5725, i32 0, i32 0)
  %2075 = load i32, i32* %u.i.i, align 4
  call void @printDDep(i32 5643, i32 5725)
  call void @printDDep(i32 5713, i32 5725)
  call void @printCDep(i32 572, i32 5725)
  %shr1492.i.i = lshr i32 %2075, 26
  %idxprom1494.i.i = zext i32 %shr1492.i.i to i64
  %arrayidx1495.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i.i
  %2076 = ptrtoint i32* %arrayidx1495.i.i to i64
  call void @printLoadAddr(i64 %2076, i32 5732, i32 0, i32 0)
  %2077 = load i32, i32* %arrayidx1495.i.i, align 4
  call void @printDDep(i32 5656, i32 5732)
  call void @printCDep(i32 572, i32 5732)
  %xor1496.i.i = xor i32 %xor1491.i.i, %2077
  %2078 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %2078, i32 5736, i32 0, i32 0)
  %2079 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5686, i32 5736)
  call void @printDDep(i32 5686, i32 5736)
  call void @printCDep(i32 572, i32 5736)
  %shr1497.i.i = lshr i32 %2079, 2
  %and1498.i.i = and i32 %shr1497.i.i, 63
  %idxprom1499.i.i = zext i32 %and1498.i.i to i64
  %arrayidx1500.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i.i
  %2080 = ptrtoint i32* %arrayidx1500.i.i to i64
  call void @printLoadAddr(i64 %2080, i32 5744, i32 0, i32 0)
  %2081 = load i32, i32* %arrayidx1500.i.i, align 4
  call void @printDDep(i32 5656, i32 5744)
  call void @printCDep(i32 572, i32 5744)
  %xor1501.i.i = xor i32 %xor1496.i.i, %2081
  %2082 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %2082, i32 5748, i32 0, i32 0)
  %2083 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5686, i32 5748)
  call void @printDDep(i32 5736, i32 5748)
  call void @printCDep(i32 572, i32 5748)
  %shr1502.i.i = lshr i32 %2083, 10
  %and1503.i.i = and i32 %shr1502.i.i, 63
  %idxprom1504.i.i = zext i32 %and1503.i.i to i64
  %arrayidx1505.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i.i
  %2084 = ptrtoint i32* %arrayidx1505.i.i to i64
  call void @printLoadAddr(i64 %2084, i32 5756, i32 0, i32 0)
  %2085 = load i32, i32* %arrayidx1505.i.i, align 4
  call void @printDDep(i32 5656, i32 5756)
  call void @printCDep(i32 572, i32 5756)
  %xor1506.i.i = xor i32 %xor1501.i.i, %2085
  %2086 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %2086, i32 5760, i32 0, i32 0)
  %2087 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5686, i32 5760)
  call void @printDDep(i32 5748, i32 5760)
  call void @printCDep(i32 572, i32 5760)
  %shr1507.i.i = lshr i32 %2087, 18
  %and1508.i.i = and i32 %shr1507.i.i, 63
  %idxprom1509.i.i = zext i32 %and1508.i.i to i64
  %arrayidx1510.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i.i
  %2088 = ptrtoint i32* %arrayidx1510.i.i to i64
  call void @printLoadAddr(i64 %2088, i32 5768, i32 0, i32 0)
  %2089 = load i32, i32* %arrayidx1510.i.i, align 4
  call void @printDDep(i32 5656, i32 5768)
  call void @printCDep(i32 572, i32 5768)
  %xor1511.i.i = xor i32 %xor1506.i.i, %2089
  %2090 = ptrtoint i32* %t.i.i to i64
  call void @printLoadAddr(i64 %2090, i32 5772, i32 0, i32 0)
  %2091 = load i32, i32* %t.i.i, align 4
  call void @printDDep(i32 5686, i32 5772)
  call void @printDDep(i32 5760, i32 5772)
  call void @printCDep(i32 572, i32 5772)
  %shr1512.i.i = lshr i32 %2091, 26
  %idxprom1514.i.i = zext i32 %shr1512.i.i to i64
  %arrayidx1515.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i.i
  %2092 = ptrtoint i32* %arrayidx1515.i.i to i64
  call void @printLoadAddr(i64 %2092, i32 5779, i32 0, i32 0)
  %2093 = load i32, i32* %arrayidx1515.i.i, align 4
  call void @printDDep(i32 5656, i32 5779)
  call void @printCDep(i32 572, i32 5779)
  %xor1516.i.i = xor i32 %xor1511.i.i, %2093
  %2094 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2094, i32 5783, i32 0, i32 0)
  %2095 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5463, i32 5783)
  call void @printDDep(i32 5656, i32 5783)
  call void @printCDep(i32 572, i32 5783)
  %xor1517.i.i = xor i32 %2095, %xor1516.i.i
  %2096 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %2096, i32 5788, i32 0, i32 0)
  store i32 %xor1517.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 5686, i32 5788)
  call void @printDDep(i32 5783, i32 5788)
  call void @printCDep(i32 572, i32 5788)
  br label %DES_ecb_encrypt.exit

DES_ecb_encrypt.exit:                             ; preds = %if.then.i.i, %if.else.i.i
  %2097 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2097, i32 5793, i32 0, i32 0)
  %2098 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 3180, i32 5793)
  call void @printDDep(i32 5788, i32 5793)
  call void @printDDep(i32 5656, i32 5793)
  %2099 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %2098) #5, !srcloc !36
  %2100 = ptrtoint i32* %ret1518.i.i to i64
  call void @printStoreAddr(i64 %2100, i32 5798, i32 0, i32 0)
  store i32 %2099, i32* %ret1518.i.i, align 4
  call void @printDDep(i32 3180, i32 5798)
  call void @printDDep(i32 5788, i32 5798)
  call void @printDDep(i32 123, i32 5798)
  %2101 = ptrtoint i32* %ret1518.i.i to i64
  call void @printLoadAddr(i64 %2101, i32 5802, i32 0, i32 0)
  %2102 = load i32, i32* %ret1518.i.i, align 4
  call void @printDDep(i32 5798, i32 5802)
  call void @printDDep(i32 5798, i32 5802)
  %2103 = ptrtoint i32* %tmp1519.i.i to i64
  call void @printStoreAddr(i64 %2103, i32 5805, i32 0, i32 0)
  store i32 %2102, i32* %tmp1519.i.i, align 4
  call void @printDDep(i32 5798, i32 5805)
  call void @printDDep(i32 123, i32 5805)
  %2104 = ptrtoint i32* %tmp1519.i.i to i64
  call void @printLoadAddr(i64 %2104, i32 5808, i32 0, i32 0)
  %2105 = load i32, i32* %tmp1519.i.i, align 4
  call void @printDDep(i32 5805, i32 5808)
  call void @printDDep(i32 5805, i32 5808)
  %conv1520.i.i = zext i32 %2105 to i64
  %and1521.i.i = and i64 %conv1520.i.i, 4294967295
  %conv1522.i.i = trunc i64 %and1521.i.i to i32
  %2106 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %2106, i32 5814, i32 0, i32 0)
  store i32 %conv1522.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 5805, i32 5814)
  call void @printDDep(i32 5793, i32 5814)
  %2107 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2107, i32 5817, i32 0, i32 0)
  %2108 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 3180, i32 5817)
  call void @printDDep(i32 5788, i32 5817)
  call void @printDDep(i32 5788, i32 5817)
  %2109 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %2108) #5, !srcloc !37
  %2110 = ptrtoint i32* %ret1523.i.i to i64
  call void @printStoreAddr(i64 %2110, i32 5822, i32 0, i32 0)
  store i32 %2109, i32* %ret1523.i.i, align 4
  call void @printDDep(i32 5814, i32 5822)
  call void @printDDep(i32 123, i32 5822)
  %2111 = ptrtoint i32* %ret1523.i.i to i64
  call void @printLoadAddr(i64 %2111, i32 5825, i32 0, i32 0)
  %2112 = load i32, i32* %ret1523.i.i, align 4
  call void @printDDep(i32 5822, i32 5825)
  call void @printDDep(i32 5822, i32 5825)
  %2113 = ptrtoint i32* %tmp1524.i.i to i64
  call void @printStoreAddr(i64 %2113, i32 5828, i32 0, i32 0)
  store i32 %2112, i32* %tmp1524.i.i, align 4
  call void @printDDep(i32 5822, i32 5828)
  call void @printDDep(i32 123, i32 5828)
  %2114 = ptrtoint i32* %tmp1524.i.i to i64
  call void @printLoadAddr(i64 %2114, i32 5831, i32 0, i32 0)
  %2115 = load i32, i32* %tmp1524.i.i, align 4
  call void @printDDep(i32 5828, i32 5831)
  call void @printDDep(i32 5828, i32 5831)
  %conv1525.i.i = zext i32 %2115 to i64
  %and1526.i.i = and i64 %conv1525.i.i, 4294967295
  %conv1527.i.i = trunc i64 %and1526.i.i to i32
  %2116 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %2116, i32 5837, i32 0, i32 0)
  store i32 %conv1527.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 5828, i32 5837)
  call void @printDDep(i32 5817, i32 5837)
  %2117 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2117, i32 5840, i32 0, i32 0)
  %2118 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5837, i32 5840)
  call void @printDDep(i32 5837, i32 5840)
  %shr1529.i.i = lshr i32 %2118, 1
  %2119 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2119, i32 5844, i32 0, i32 0)
  %2120 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5814, i32 5844)
  call void @printDDep(i32 5814, i32 5844)
  %xor1530.i.i = xor i32 %shr1529.i.i, %2120
  %conv1531.i.i = zext i32 %xor1530.i.i to i64
  %and1532.i.i = and i64 %conv1531.i.i, 1431655765
  %conv1533.i.i = trunc i64 %and1532.i.i to i32
  %2121 = ptrtoint i32* %tt1528.i.i to i64
  call void @printStoreAddr(i64 %2121, i32 5851, i32 0, i32 0)
  store i32 %conv1533.i.i, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5837, i32 5851)
  call void @printDDep(i32 123, i32 5851)
  %2122 = ptrtoint i32* %tt1528.i.i to i64
  call void @printLoadAddr(i64 %2122, i32 5854, i32 0, i32 0)
  %2123 = load i32, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5851, i32 5854)
  call void @printDDep(i32 5851, i32 5854)
  %2124 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2124, i32 5857, i32 0, i32 0)
  %2125 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5814, i32 5857)
  call void @printDDep(i32 5844, i32 5857)
  %xor1534.i.i = xor i32 %2125, %2123
  %2126 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %2126, i32 5861, i32 0, i32 0)
  store i32 %xor1534.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 5851, i32 5861)
  call void @printDDep(i32 5857, i32 5861)
  %2127 = ptrtoint i32* %tt1528.i.i to i64
  call void @printLoadAddr(i64 %2127, i32 5864, i32 0, i32 0)
  %2128 = load i32, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5851, i32 5864)
  call void @printDDep(i32 5854, i32 5864)
  %shl1535.i.i = shl i32 %2128, 1
  %2129 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2129, i32 5868, i32 0, i32 0)
  %2130 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5837, i32 5868)
  call void @printDDep(i32 5840, i32 5868)
  %xor1536.i.i = xor i32 %2130, %shl1535.i.i
  %2131 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %2131, i32 5872, i32 0, i32 0)
  store i32 %xor1536.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 5861, i32 5872)
  call void @printDDep(i32 5868, i32 5872)
  %2132 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2132, i32 5875, i32 0, i32 0)
  %2133 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5861, i32 5875)
  call void @printDDep(i32 5861, i32 5875)
  %shr1537.i.i = lshr i32 %2133, 8
  %2134 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2134, i32 5879, i32 0, i32 0)
  %2135 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5872, i32 5879)
  call void @printDDep(i32 5872, i32 5879)
  %xor1538.i.i = xor i32 %shr1537.i.i, %2135
  %conv1539.i.i = zext i32 %xor1538.i.i to i64
  %and1540.i.i = and i64 %conv1539.i.i, 16711935
  %conv1541.i.i = trunc i64 %and1540.i.i to i32
  %2136 = ptrtoint i32* %tt1528.i.i to i64
  call void @printStoreAddr(i64 %2136, i32 5886, i32 0, i32 0)
  store i32 %conv1541.i.i, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5872, i32 5886)
  call void @printDDep(i32 5864, i32 5886)
  %2137 = ptrtoint i32* %tt1528.i.i to i64
  call void @printLoadAddr(i64 %2137, i32 5889, i32 0, i32 0)
  %2138 = load i32, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5886, i32 5889)
  call void @printDDep(i32 5886, i32 5889)
  %2139 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2139, i32 5892, i32 0, i32 0)
  %2140 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5872, i32 5892)
  call void @printDDep(i32 5879, i32 5892)
  %xor1542.i.i = xor i32 %2140, %2138
  %2141 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %2141, i32 5896, i32 0, i32 0)
  store i32 %xor1542.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 5886, i32 5896)
  call void @printDDep(i32 5892, i32 5896)
  %2142 = ptrtoint i32* %tt1528.i.i to i64
  call void @printLoadAddr(i64 %2142, i32 5899, i32 0, i32 0)
  %2143 = load i32, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5886, i32 5899)
  call void @printDDep(i32 5889, i32 5899)
  %shl1543.i.i = shl i32 %2143, 8
  %2144 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2144, i32 5903, i32 0, i32 0)
  %2145 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5861, i32 5903)
  call void @printDDep(i32 5875, i32 5903)
  %xor1544.i.i = xor i32 %2145, %shl1543.i.i
  %2146 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %2146, i32 5907, i32 0, i32 0)
  store i32 %xor1544.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 5896, i32 5907)
  call void @printDDep(i32 5903, i32 5907)
  %2147 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2147, i32 5910, i32 0, i32 0)
  %2148 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5896, i32 5910)
  call void @printDDep(i32 5896, i32 5910)
  %shr1545.i.i = lshr i32 %2148, 2
  %2149 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2149, i32 5914, i32 0, i32 0)
  %2150 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5907, i32 5914)
  call void @printDDep(i32 5907, i32 5914)
  %xor1546.i.i = xor i32 %shr1545.i.i, %2150
  %conv1547.i.i = zext i32 %xor1546.i.i to i64
  %and1548.i.i = and i64 %conv1547.i.i, 858993459
  %conv1549.i.i = trunc i64 %and1548.i.i to i32
  %2151 = ptrtoint i32* %tt1528.i.i to i64
  call void @printStoreAddr(i64 %2151, i32 5921, i32 0, i32 0)
  store i32 %conv1549.i.i, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5907, i32 5921)
  call void @printDDep(i32 5899, i32 5921)
  %2152 = ptrtoint i32* %tt1528.i.i to i64
  call void @printLoadAddr(i64 %2152, i32 5924, i32 0, i32 0)
  %2153 = load i32, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5921, i32 5924)
  call void @printDDep(i32 5921, i32 5924)
  %2154 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2154, i32 5927, i32 0, i32 0)
  %2155 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5907, i32 5927)
  call void @printDDep(i32 5914, i32 5927)
  %xor1550.i.i = xor i32 %2155, %2153
  %2156 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %2156, i32 5931, i32 0, i32 0)
  store i32 %xor1550.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 5921, i32 5931)
  call void @printDDep(i32 5927, i32 5931)
  %2157 = ptrtoint i32* %tt1528.i.i to i64
  call void @printLoadAddr(i64 %2157, i32 5934, i32 0, i32 0)
  %2158 = load i32, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5921, i32 5934)
  call void @printDDep(i32 5924, i32 5934)
  %shl1551.i.i = shl i32 %2158, 2
  %2159 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2159, i32 5938, i32 0, i32 0)
  %2160 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5896, i32 5938)
  call void @printDDep(i32 5910, i32 5938)
  %xor1552.i.i = xor i32 %2160, %shl1551.i.i
  %2161 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %2161, i32 5942, i32 0, i32 0)
  store i32 %xor1552.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 5931, i32 5942)
  call void @printDDep(i32 5938, i32 5942)
  %2162 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2162, i32 5945, i32 0, i32 0)
  %2163 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5931, i32 5945)
  call void @printDDep(i32 5931, i32 5945)
  %shr1553.i.i = lshr i32 %2163, 16
  %2164 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2164, i32 5949, i32 0, i32 0)
  %2165 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5942, i32 5949)
  call void @printDDep(i32 5942, i32 5949)
  %xor1554.i.i = xor i32 %shr1553.i.i, %2165
  %conv1555.i.i = zext i32 %xor1554.i.i to i64
  %and1556.i.i = and i64 %conv1555.i.i, 65535
  %conv1557.i.i = trunc i64 %and1556.i.i to i32
  %2166 = ptrtoint i32* %tt1528.i.i to i64
  call void @printStoreAddr(i64 %2166, i32 5956, i32 0, i32 0)
  store i32 %conv1557.i.i, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5942, i32 5956)
  call void @printDDep(i32 5934, i32 5956)
  %2167 = ptrtoint i32* %tt1528.i.i to i64
  call void @printLoadAddr(i64 %2167, i32 5959, i32 0, i32 0)
  %2168 = load i32, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5956, i32 5959)
  call void @printDDep(i32 5956, i32 5959)
  %2169 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2169, i32 5962, i32 0, i32 0)
  %2170 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5942, i32 5962)
  call void @printDDep(i32 5949, i32 5962)
  %xor1558.i.i = xor i32 %2170, %2168
  %2171 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %2171, i32 5966, i32 0, i32 0)
  store i32 %xor1558.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 5956, i32 5966)
  call void @printDDep(i32 5962, i32 5966)
  %2172 = ptrtoint i32* %tt1528.i.i to i64
  call void @printLoadAddr(i64 %2172, i32 5969, i32 0, i32 0)
  %2173 = load i32, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5956, i32 5969)
  call void @printDDep(i32 5959, i32 5969)
  %shl1559.i.i = shl i32 %2173, 16
  %2174 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2174, i32 5973, i32 0, i32 0)
  %2175 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5931, i32 5973)
  call void @printDDep(i32 5945, i32 5973)
  %xor1560.i.i = xor i32 %2175, %shl1559.i.i
  %2176 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %2176, i32 5977, i32 0, i32 0)
  store i32 %xor1560.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 5966, i32 5977)
  call void @printDDep(i32 5973, i32 5977)
  %2177 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2177, i32 5980, i32 0, i32 0)
  %2178 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5966, i32 5980)
  call void @printDDep(i32 5966, i32 5980)
  %shr1561.i.i = lshr i32 %2178, 4
  %2179 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2179, i32 5984, i32 0, i32 0)
  %2180 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5977, i32 5984)
  call void @printDDep(i32 5977, i32 5984)
  %xor1562.i.i = xor i32 %shr1561.i.i, %2180
  %conv1563.i.i = zext i32 %xor1562.i.i to i64
  %and1564.i.i = and i64 %conv1563.i.i, 252645135
  %conv1565.i.i = trunc i64 %and1564.i.i to i32
  %2181 = ptrtoint i32* %tt1528.i.i to i64
  call void @printStoreAddr(i64 %2181, i32 5991, i32 0, i32 0)
  store i32 %conv1565.i.i, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5977, i32 5991)
  call void @printDDep(i32 5969, i32 5991)
  %2182 = ptrtoint i32* %tt1528.i.i to i64
  call void @printLoadAddr(i64 %2182, i32 5994, i32 0, i32 0)
  %2183 = load i32, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5991, i32 5994)
  call void @printDDep(i32 5991, i32 5994)
  %2184 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2184, i32 5997, i32 0, i32 0)
  %2185 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 5977, i32 5997)
  call void @printDDep(i32 5984, i32 5997)
  %xor1566.i.i = xor i32 %2185, %2183
  %2186 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %2186, i32 6001, i32 0, i32 0)
  store i32 %xor1566.i.i, i32* %l.i.i, align 4
  call void @printDDep(i32 5991, i32 6001)
  call void @printDDep(i32 5997, i32 6001)
  %2187 = ptrtoint i32* %tt1528.i.i to i64
  call void @printLoadAddr(i64 %2187, i32 6004, i32 0, i32 0)
  %2188 = load i32, i32* %tt1528.i.i, align 4
  call void @printDDep(i32 5991, i32 6004)
  call void @printDDep(i32 5994, i32 6004)
  %shl1567.i.i = shl i32 %2188, 4
  %2189 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2189, i32 6008, i32 0, i32 0)
  %2190 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 5966, i32 6008)
  call void @printDDep(i32 5980, i32 6008)
  %xor1568.i.i = xor i32 %2190, %shl1567.i.i
  %2191 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %2191, i32 6012, i32 0, i32 0)
  store i32 %xor1568.i.i, i32* %r.i.i, align 4
  call void @printDDep(i32 6001, i32 6012)
  call void @printDDep(i32 6008, i32 6012)
  %2192 = ptrtoint i32* %l.i.i to i64
  call void @printLoadAddr(i64 %2192, i32 6015, i32 0, i32 0)
  %2193 = load i32, i32* %l.i.i, align 4
  call void @printDDep(i32 6001, i32 6015)
  call void @printDDep(i32 6001, i32 6015)
  %2194 = ptrtoint i32** %data.addr.i.i to i64
  call void @printLoadAddr(i64 %2194, i32 6018, i32 0, i32 0)
  %2195 = load i32*, i32** %data.addr.i.i, align 8
  call void @printDDep(i32 3180, i32 6018)
  call void @printDDep(i32 5788, i32 6018)
  call void @printDDep(i32 333, i32 6018)
  %2196 = ptrtoint i32* %2195 to i64
  call void @printStoreAddr(i64 %2196, i32 6022, i32 0, i32 0)
  store i32 %2193, i32* %2195, align 4
  call void @printDDep(i32 6012, i32 6022)
  call void @printDDep(i32 6015, i32 6022)
  %2197 = ptrtoint i32* %r.i.i to i64
  call void @printLoadAddr(i64 %2197, i32 6025, i32 0, i32 0)
  %2198 = load i32, i32* %r.i.i, align 4
  call void @printDDep(i32 6022, i32 6025)
  call void @printDDep(i32 6022, i32 6025)
  %2199 = ptrtoint i32** %data.addr.i.i to i64
  call void @printLoadAddr(i64 %2199, i32 6028, i32 0, i32 0)
  %2200 = load i32*, i32** %data.addr.i.i, align 8
  call void @printDDep(i32 3180, i32 6028)
  call void @printDDep(i32 5788, i32 6028)
  call void @printDDep(i32 6018, i32 6028)
  %arrayidx1570.i.i = getelementptr inbounds i32, i32* %2200, i64 1
  %2201 = ptrtoint i32* %arrayidx1570.i.i to i64
  call void @printStoreAddr(i64 %2201, i32 6033, i32 0, i32 0)
  store i32 %2198, i32* %arrayidx1570.i.i, align 4
  call void @printDDep(i32 6022, i32 6033)
  call void @printDDep(i32 6025, i32 6033)
  %2202 = ptrtoint i32* %u.i.i to i64
  call void @printStoreAddr(i64 %2202, i32 6036, i32 0, i32 0)
  store i32 0, i32* %u.i.i, align 4
  call void @printDDep(i32 6033, i32 6036)
  call void @printDDep(i32 6033, i32 6036)
  %2203 = ptrtoint i32* %t.i.i to i64
  call void @printStoreAddr(i64 %2203, i32 6039, i32 0, i32 0)
  store i32 0, i32* %t.i.i, align 4
  call void @printDDep(i32 6036, i32 6039)
  call void @printDDep(i32 6033, i32 6039)
  %2204 = ptrtoint i32* %r.i.i to i64
  call void @printStoreAddr(i64 %2204, i32 6042, i32 0, i32 0)
  store i32 0, i32* %r.i.i, align 4
  call void @printDDep(i32 6039, i32 6042)
  call void @printDDep(i32 6033, i32 6042)
  %2205 = ptrtoint i32* %l.i.i to i64
  call void @printStoreAddr(i64 %2205, i32 6045, i32 0, i32 0)
  store i32 0, i32* %l.i.i, align 4
  call void @printDDep(i32 6042, i32 6045)
  call void @printDDep(i32 6033, i32 6045)
  %arrayidx28.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0
  %2206 = ptrtoint i32* %arrayidx28.i to i64
  call void @printLoadAddr(i64 %2206, i32 6049, i32 0, i32 0)
  %2207 = load i32, i32* %arrayidx28.i, align 4
  call void @printDDep(i32 6022, i32 6049)
  call void @printDDep(i32 6033, i32 6049)
  %2208 = ptrtoint i32* %l.i to i64
  call void @printStoreAddr(i64 %2208, i32 6052, i32 0, i32 0)
  store i32 %2207, i32* %l.i, align 4
  call void @printDDep(i32 6045, i32 6052)
  call void @printDDep(i32 6033, i32 6052)
  %2209 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %2209, i32 6055, i32 0, i32 0)
  %2210 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 6052, i32 6055)
  call void @printDDep(i32 6052, i32 6055)
  %and.i = and i32 %2210, 255
  %conv29.i = trunc i32 %and.i to i8
  %2211 = ptrtoint i8** %out.i to i64
  call void @printLoadAddr(i64 %2211, i32 6060, i32 0, i32 0)
  %2212 = load i8*, i8** %out.i, align 8
  call void @printDDep(i32 3180, i32 6060)
  call void @printDDep(i32 5788, i32 6060)
  call void @printDDep(i32 149, i32 6060)
  %incdec.ptr30.i = getelementptr inbounds i8, i8* %2212, i32 1
  %2213 = ptrtoint i8** %out.i to i64
  call void @printStoreAddr(i64 %2213, i32 6065, i32 0, i32 0)
  store i8* %incdec.ptr30.i, i8** %out.i, align 8
  call void @printDDep(i32 6052, i32 6065)
  call void @printDDep(i32 6060, i32 6065)
  %2214 = ptrtoint i8* %2212 to i64
  call void @printStoreAddr(i64 %2214, i32 6068, i32 0, i32 0)
  store i8 %conv29.i, i8* %2212, align 1
  call void @printDDep(i32 6065, i32 6068)
  call void @printDDep(i32 6055, i32 6068)
  %2215 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %2215, i32 6071, i32 0, i32 0)
  %2216 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 6068, i32 6071)
  call void @printDDep(i32 6068, i32 6071)
  %shr.i = lshr i32 %2216, 8
  %and31.i = and i32 %shr.i, 255
  %conv32.i = trunc i32 %and31.i to i8
  %2217 = ptrtoint i8** %out.i to i64
  call void @printLoadAddr(i64 %2217, i32 6077, i32 0, i32 0)
  %2218 = load i8*, i8** %out.i, align 8
  call void @printDDep(i32 6065, i32 6077)
  call void @printDDep(i32 6065, i32 6077)
  %incdec.ptr33.i = getelementptr inbounds i8, i8* %2218, i32 1
  %2219 = ptrtoint i8** %out.i to i64
  call void @printStoreAddr(i64 %2219, i32 6081, i32 0, i32 0)
  store i8* %incdec.ptr33.i, i8** %out.i, align 8
  call void @printDDep(i32 6068, i32 6081)
  call void @printDDep(i32 6077, i32 6081)
  %2220 = ptrtoint i8* %2218 to i64
  call void @printStoreAddr(i64 %2220, i32 6084, i32 0, i32 0)
  store i8 %conv32.i, i8* %2218, align 1
  call void @printDDep(i32 6081, i32 6084)
  call void @printDDep(i32 6071, i32 6084)
  %2221 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %2221, i32 6087, i32 0, i32 0)
  %2222 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 6084, i32 6087)
  call void @printDDep(i32 6084, i32 6087)
  %shr34.i = lshr i32 %2222, 16
  %and35.i = and i32 %shr34.i, 255
  %conv36.i = trunc i32 %and35.i to i8
  %2223 = ptrtoint i8** %out.i to i64
  call void @printLoadAddr(i64 %2223, i32 6093, i32 0, i32 0)
  %2224 = load i8*, i8** %out.i, align 8
  call void @printDDep(i32 6081, i32 6093)
  call void @printDDep(i32 6081, i32 6093)
  %incdec.ptr37.i = getelementptr inbounds i8, i8* %2224, i32 1
  %2225 = ptrtoint i8** %out.i to i64
  call void @printStoreAddr(i64 %2225, i32 6097, i32 0, i32 0)
  store i8* %incdec.ptr37.i, i8** %out.i, align 8
  call void @printDDep(i32 6084, i32 6097)
  call void @printDDep(i32 6093, i32 6097)
  %2226 = ptrtoint i8* %2224 to i64
  call void @printStoreAddr(i64 %2226, i32 6100, i32 0, i32 0)
  store i8 %conv36.i, i8* %2224, align 1
  call void @printDDep(i32 6097, i32 6100)
  call void @printDDep(i32 6087, i32 6100)
  %2227 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %2227, i32 6103, i32 0, i32 0)
  %2228 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 6100, i32 6103)
  call void @printDDep(i32 6100, i32 6103)
  %shr38.i = lshr i32 %2228, 24
  %conv40.i = trunc i32 %shr38.i to i8
  %2229 = ptrtoint i8** %out.i to i64
  call void @printLoadAddr(i64 %2229, i32 6108, i32 0, i32 0)
  %2230 = load i8*, i8** %out.i, align 8
  call void @printDDep(i32 6097, i32 6108)
  call void @printDDep(i32 6097, i32 6108)
  %incdec.ptr41.i = getelementptr inbounds i8, i8* %2230, i32 1
  %2231 = ptrtoint i8** %out.i to i64
  call void @printStoreAddr(i64 %2231, i32 6112, i32 0, i32 0)
  store i8* %incdec.ptr41.i, i8** %out.i, align 8
  call void @printDDep(i32 6100, i32 6112)
  call void @printDDep(i32 6108, i32 6112)
  %2232 = ptrtoint i8* %2230 to i64
  call void @printStoreAddr(i64 %2232, i32 6115, i32 0, i32 0)
  store i8 %conv40.i, i8* %2230, align 1
  call void @printDDep(i32 6112, i32 6115)
  call void @printDDep(i32 6103, i32 6115)
  %arrayidx42.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 1
  %2233 = ptrtoint i32* %arrayidx42.i to i64
  call void @printLoadAddr(i64 %2233, i32 6119, i32 0, i32 0)
  %2234 = load i32, i32* %arrayidx42.i, align 4
  call void @printDDep(i32 6115, i32 6119)
  call void @printDDep(i32 6115, i32 6119)
  %2235 = ptrtoint i32* %l.i to i64
  call void @printStoreAddr(i64 %2235, i32 6122, i32 0, i32 0)
  store i32 %2234, i32* %l.i, align 4
  call void @printDDep(i32 6115, i32 6122)
  call void @printDDep(i32 6115, i32 6122)
  %2236 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %2236, i32 6125, i32 0, i32 0)
  %2237 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 6122, i32 6125)
  call void @printDDep(i32 6122, i32 6125)
  %and43.i = and i32 %2237, 255
  %conv44.i = trunc i32 %and43.i to i8
  %2238 = ptrtoint i8** %out.i to i64
  call void @printLoadAddr(i64 %2238, i32 6130, i32 0, i32 0)
  %2239 = load i8*, i8** %out.i, align 8
  call void @printDDep(i32 6112, i32 6130)
  call void @printDDep(i32 6112, i32 6130)
  %incdec.ptr45.i = getelementptr inbounds i8, i8* %2239, i32 1
  %2240 = ptrtoint i8** %out.i to i64
  call void @printStoreAddr(i64 %2240, i32 6134, i32 0, i32 0)
  store i8* %incdec.ptr45.i, i8** %out.i, align 8
  call void @printDDep(i32 6122, i32 6134)
  call void @printDDep(i32 6130, i32 6134)
  %2241 = ptrtoint i8* %2239 to i64
  call void @printStoreAddr(i64 %2241, i32 6137, i32 0, i32 0)
  store i8 %conv44.i, i8* %2239, align 1
  call void @printDDep(i32 6134, i32 6137)
  call void @printDDep(i32 6125, i32 6137)
  %2242 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %2242, i32 6140, i32 0, i32 0)
  %2243 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 6137, i32 6140)
  call void @printDDep(i32 6137, i32 6140)
  %shr46.i = lshr i32 %2243, 8
  %and47.i = and i32 %shr46.i, 255
  %conv48.i = trunc i32 %and47.i to i8
  %2244 = ptrtoint i8** %out.i to i64
  call void @printLoadAddr(i64 %2244, i32 6146, i32 0, i32 0)
  %2245 = load i8*, i8** %out.i, align 8
  call void @printDDep(i32 6134, i32 6146)
  call void @printDDep(i32 6134, i32 6146)
  %incdec.ptr49.i = getelementptr inbounds i8, i8* %2245, i32 1
  %2246 = ptrtoint i8** %out.i to i64
  call void @printStoreAddr(i64 %2246, i32 6150, i32 0, i32 0)
  store i8* %incdec.ptr49.i, i8** %out.i, align 8
  call void @printDDep(i32 6137, i32 6150)
  call void @printDDep(i32 6146, i32 6150)
  %2247 = ptrtoint i8* %2245 to i64
  call void @printStoreAddr(i64 %2247, i32 6153, i32 0, i32 0)
  store i8 %conv48.i, i8* %2245, align 1
  call void @printDDep(i32 6150, i32 6153)
  call void @printDDep(i32 6140, i32 6153)
  %2248 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %2248, i32 6156, i32 0, i32 0)
  %2249 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 6153, i32 6156)
  call void @printDDep(i32 6153, i32 6156)
  %shr50.i = lshr i32 %2249, 16
  %and51.i = and i32 %shr50.i, 255
  %conv52.i = trunc i32 %and51.i to i8
  %2250 = ptrtoint i8** %out.i to i64
  call void @printLoadAddr(i64 %2250, i32 6162, i32 0, i32 0)
  %2251 = load i8*, i8** %out.i, align 8
  call void @printDDep(i32 6150, i32 6162)
  call void @printDDep(i32 6150, i32 6162)
  %incdec.ptr53.i = getelementptr inbounds i8, i8* %2251, i32 1
  %2252 = ptrtoint i8** %out.i to i64
  call void @printStoreAddr(i64 %2252, i32 6166, i32 0, i32 0)
  store i8* %incdec.ptr53.i, i8** %out.i, align 8
  call void @printDDep(i32 6153, i32 6166)
  call void @printDDep(i32 6162, i32 6166)
  %2253 = ptrtoint i8* %2251 to i64
  call void @printStoreAddr(i64 %2253, i32 6169, i32 0, i32 0)
  store i8 %conv52.i, i8* %2251, align 1
  call void @printDDep(i32 6166, i32 6169)
  call void @printDDep(i32 6156, i32 6169)
  %2254 = ptrtoint i32* %l.i to i64
  call void @printLoadAddr(i64 %2254, i32 6172, i32 0, i32 0)
  %2255 = load i32, i32* %l.i, align 4
  call void @printDDep(i32 6169, i32 6172)
  call void @printDDep(i32 6169, i32 6172)
  %shr54.i = lshr i32 %2255, 24
  %conv56.i = trunc i32 %shr54.i to i8
  %2256 = ptrtoint i8** %out.i to i64
  call void @printLoadAddr(i64 %2256, i32 6177, i32 0, i32 0)
  %2257 = load i8*, i8** %out.i, align 8
  call void @printDDep(i32 6166, i32 6177)
  call void @printDDep(i32 6166, i32 6177)
  %incdec.ptr57.i = getelementptr inbounds i8, i8* %2257, i32 1
  %2258 = ptrtoint i8** %out.i to i64
  call void @printStoreAddr(i64 %2258, i32 6181, i32 0, i32 0)
  store i8* %incdec.ptr57.i, i8** %out.i, align 8
  call void @printDDep(i32 6169, i32 6181)
  call void @printDDep(i32 6177, i32 6181)
  %2259 = ptrtoint i8* %2257 to i64
  call void @printStoreAddr(i64 %2259, i32 6184, i32 0, i32 0)
  store i8 %conv56.i, i8* %2257, align 1
  call void @printDDep(i32 6181, i32 6184)
  call void @printDDep(i32 6172, i32 6184)
  %arrayidx58.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 1
  %2260 = ptrtoint i32* %arrayidx58.i to i64
  call void @printStoreAddr(i64 %2260, i32 6188, i32 0, i32 0)
  store i32 0, i32* %arrayidx58.i, align 4
  call void @printDDep(i32 6184, i32 6188)
  call void @printDDep(i32 6184, i32 6188)
  %arrayidx59.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0
  %2261 = ptrtoint i32* %arrayidx59.i to i64
  call void @printStoreAddr(i64 %2261, i32 6192, i32 0, i32 0)
  store i32 0, i32* %arrayidx59.i, align 4
  call void @printDDep(i32 6188, i32 6192)
  call void @printDDep(i32 6184, i32 6192)
  %2262 = ptrtoint i32* %l.i to i64
  call void @printStoreAddr(i64 %2262, i32 6195, i32 0, i32 0)
  store i32 0, i32* %l.i, align 4
  call void @printDDep(i32 6192, i32 6195)
  call void @printDDep(i32 6184, i32 6195)
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @DES_set_odd_parity([8 x i8]* %key) #0 {
entry:
  %key.addr = alloca [8 x i8]*, align 8
  %i = alloca i32, align 4
  store [8 x i8]* %key, [8 x i8]** %key.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %conv = zext i32 %0 to i64
  %cmp = icmp ult i64 %conv, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  %2 = load i32, i32* %i, align 4
  %idxprom = zext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 %idxprom
  %3 = load i8, i8* %arrayidx, align 1
  %idxprom2 = zext i8 %3 to i64
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* @odd_parity, i64 0, i64 %idxprom2
  %4 = load i8, i8* %arrayidx3, align 1
  %5 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  %6 = load i32, i32* %i, align 4
  %idxprom4 = zext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [8 x i8], [8 x i8]* %5, i64 0, i64 %idxprom4
  store i8 %4, i8* %arrayidx5, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  %inc = add i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @DES_check_key_parity([8 x i8]* %key) #0 {
entry:
  %retval = alloca i32, align 4
  %key.addr = alloca [8 x i8]*, align 8
  %i = alloca i32, align 4
  store [8 x i8]* %key, [8 x i8]** %key.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %conv = zext i32 %0 to i64
  %cmp = icmp ult i64 %conv, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  %2 = load i32, i32* %i, align 4
  %idxprom = zext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 %idxprom
  %3 = load i8, i8* %arrayidx, align 1
  %conv2 = zext i8 %3 to i32
  %4 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = zext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %idxprom3
  %6 = load i8, i8* %arrayidx4, align 1
  %idxprom5 = zext i8 %6 to i64
  %arrayidx6 = getelementptr inbounds [256 x i8], [256 x i8]* @odd_parity, i64 0, i64 %idxprom5
  %7 = load i8, i8* %arrayidx6, align 1
  %conv7 = zext i8 %7 to i32
  %cmp8 = icmp ne i32 %conv2, %conv7
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4
  %inc = add i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval, align 4
  ret i32 %9
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @DES_is_weak_key([8 x i8]* %key) #1 {
entry:
  %retval = alloca i32, align 4
  %key.addr = alloca [8 x i8]*, align 8
  %i = alloca i32, align 4
  store [8 x i8]* %key, [8 x i8]** %key.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [16 x [8 x i8]], [16 x [8 x i8]]* @weak_keys, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx, i64 0, i64 0
  %2 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  %3 = bitcast [8 x i8]* %2 to i8*
  %call = call i32 @memcmp(i8* %arraydecay, i8* %3, i64 8) #7
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %5 = load i32, i32* %retval, align 4
  ret i32 %5
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @DES_set_key([8 x i8]* %key, %struct.DES_ks* %schedule) #1 {
entry:
  %key.addr.i1 = alloca [8 x i8]*, align 8
  %schedule.addr.i2 = alloca %struct.DES_ks*, align 8
  %c.i = alloca i32, align 4
  %d.i = alloca i32, align 4
  %t.i = alloca i32, align 4
  %s.i = alloca i32, align 4
  %t2.i = alloca i32, align 4
  %in.i = alloca i8*, align 8
  %k.i = alloca i32*, align 8
  %i.i = alloca i32, align 4
  %ret.i = alloca i32, align 4
  %tmp.i = alloca i32, align 4
  %ret180.i = alloca i32, align 4
  %tmp181.i = alloca i32, align 4
  %key.addr.i5.i = alloca [8 x i8]*, align 8
  %schedule.addr.i.i = alloca %struct.DES_ks*, align 8
  %c.i.i = alloca i32, align 4
  %d.i.i = alloca i32, align 4
  %t.i.i = alloca i32, align 4
  %s.i.i = alloca i32, align 4
  %t2.i.i = alloca i32, align 4
  %in.i.i = alloca i8*, align 8
  %k.i.i = alloca i32*, align 8
  %i.i6.i = alloca i32, align 4
  %ret.i.i = alloca i32, align 4
  %tmp.i.i = alloca i32, align 4
  %ret180.i.i = alloca i32, align 4
  %tmp181.i.i = alloca i32, align 4
  %retval.i.i = alloca i32, align 4
  %key.addr.i.i = alloca [8 x i8]*, align 8
  %i.i.i = alloca i32, align 4
  %retval.i = alloca i32, align 4
  %key.addr.i = alloca [8 x i8]*, align 8
  %schedule.addr.i = alloca %struct.DES_ks*, align 8
  %retval = alloca i32, align 4
  %key.addr = alloca [8 x i8]*, align 8
  %schedule.addr = alloca %struct.DES_ks*, align 8
  store [8 x i8]* %key, [8 x i8]** %key.addr, align 8
  store %struct.DES_ks* %schedule, %struct.DES_ks** %schedule.addr, align 8
  %0 = load i32, i32* @_shadow_DES_check_key, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  %2 = load %struct.DES_ks*, %struct.DES_ks** %schedule.addr, align 8
  store [8 x i8]* %1, [8 x i8]** %key.addr.i, align 8
  store %struct.DES_ks* %2, %struct.DES_ks** %schedule.addr.i, align 8
  %3 = load [8 x i8]*, [8 x i8]** %key.addr.i, align 8
  store [8 x i8]* %3, [8 x i8]** %key.addr.i.i, align 8
  store i32 0, i32* %i.i.i, align 4
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %if.end.i.i, %if.then
  %4 = load i32, i32* %i.i.i, align 4
  %conv.i.i = zext i32 %4 to i64
  %cmp.i.i = icmp ult i64 %conv.i.i, 8
  br i1 %cmp.i.i, label %for.body.i.i, label %for.end.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %5 = load [8 x i8]*, [8 x i8]** %key.addr.i.i, align 8
  %6 = load i32, i32* %i.i.i, align 4
  %idxprom.i.i = zext i32 %6 to i64
  %arrayidx.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %5, i64 0, i64 %idxprom.i.i
  %7 = load i8, i8* %arrayidx.i.i, align 1
  %conv2.i.i = zext i8 %7 to i32
  %8 = load [8 x i8]*, [8 x i8]** %key.addr.i.i, align 8
  %9 = load i32, i32* %i.i.i, align 4
  %idxprom3.i.i = zext i32 %9 to i64
  %arrayidx4.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %8, i64 0, i64 %idxprom3.i.i
  %10 = load i8, i8* %arrayidx4.i.i, align 1
  %idxprom5.i.i = zext i8 %10 to i64
  %arrayidx6.i.i = getelementptr inbounds [256 x i8], [256 x i8]* @odd_parity, i64 0, i64 %idxprom5.i.i
  %11 = load i8, i8* %arrayidx6.i.i, align 1
  %conv7.i.i = zext i8 %11 to i32
  %cmp8.i.i = icmp ne i32 %conv2.i.i, %conv7.i.i
  br i1 %cmp8.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  store i32 0, i32* %retval.i.i, align 4
  br label %DES_check_key_parity.exit.i

if.end.i.i:                                       ; preds = %for.body.i.i
  %12 = load i32, i32* %i.i.i, align 4
  %inc.i.i = add i32 %12, 1
  store i32 %inc.i.i, i32* %i.i.i, align 4
  br label %for.cond.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i
  store i32 1, i32* %retval.i.i, align 4
  br label %DES_check_key_parity.exit.i

DES_check_key_parity.exit.i:                      ; preds = %for.end.i.i, %if.then.i.i
  %13 = load i32, i32* %retval.i.i, align 4
  %tobool.i = icmp ne i32 %13, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %DES_check_key_parity.exit.i
  store i32 -1, i32* %retval.i, align 4
  br label %DES_set_key_checked.exit

if.end.i:                                         ; preds = %DES_check_key_parity.exit.i
  %14 = load [8 x i8]*, [8 x i8]** %key.addr.i, align 8
  %call1.i = call i32 @DES_is_weak_key([8 x i8]* %14) #6
  %tobool2.i = icmp ne i32 %call1.i, 0
  br i1 %tobool2.i, label %if.then3.i, label %if.end4.i

if.then3.i:                                       ; preds = %if.end.i
  store i32 -2, i32* %retval.i, align 4
  br label %DES_set_key_checked.exit

if.end4.i:                                        ; preds = %if.end.i
  %15 = load [8 x i8]*, [8 x i8]** %key.addr.i, align 8
  %16 = load %struct.DES_ks*, %struct.DES_ks** %schedule.addr.i, align 8
  store [8 x i8]* %15, [8 x i8]** %key.addr.i5.i, align 8
  store %struct.DES_ks* %16, %struct.DES_ks** %schedule.addr.i.i, align 8
  %17 = load %struct.DES_ks*, %struct.DES_ks** %schedule.addr.i.i, align 8
  %ks.i.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %17, i32 0, i32 0
  %arraydecay.i.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks.i.i, i64 0, i64 0
  %deslong.i.i = bitcast %union.anon* %arraydecay.i.i to [2 x i32]*
  %arrayidx.i7.i = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i.i, i64 0, i64 0
  store i32* %arrayidx.i7.i, i32** %k.i.i, align 8
  %18 = load [8 x i8]*, [8 x i8]** %key.addr.i5.i, align 8
  %arrayidx1.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %18, i64 0, i64 0
  store i8* %arrayidx1.i.i, i8** %in.i.i, align 8
  %19 = load i8*, i8** %in.i.i, align 8
  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr.i.i, i8** %in.i.i, align 8
  %20 = load i8, i8* %19, align 1
  %conv.i8.i = zext i8 %20 to i32
  store i32 %conv.i8.i, i32* %c.i.i, align 4
  %21 = load i8*, i8** %in.i.i, align 8
  %incdec.ptr2.i.i = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr2.i.i, i8** %in.i.i, align 8
  %22 = load i8, i8* %21, align 1
  %conv3.i.i = zext i8 %22 to i32
  %shl.i.i = shl i32 %conv3.i.i, 8
  %23 = load i32, i32* %c.i.i, align 4
  %or.i.i = or i32 %23, %shl.i.i
  store i32 %or.i.i, i32* %c.i.i, align 4
  %24 = load i8*, i8** %in.i.i, align 8
  %incdec.ptr4.i.i = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %incdec.ptr4.i.i, i8** %in.i.i, align 8
  %25 = load i8, i8* %24, align 1
  %conv5.i.i = zext i8 %25 to i32
  %shl6.i.i = shl i32 %conv5.i.i, 16
  %26 = load i32, i32* %c.i.i, align 4
  %or7.i.i = or i32 %26, %shl6.i.i
  store i32 %or7.i.i, i32* %c.i.i, align 4
  %27 = load i8*, i8** %in.i.i, align 8
  %incdec.ptr8.i.i = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %incdec.ptr8.i.i, i8** %in.i.i, align 8
  %28 = load i8, i8* %27, align 1
  %conv9.i.i = zext i8 %28 to i32
  %shl10.i.i = shl i32 %conv9.i.i, 24
  %29 = load i32, i32* %c.i.i, align 4
  %or11.i.i = or i32 %29, %shl10.i.i
  store i32 %or11.i.i, i32* %c.i.i, align 4
  %30 = load i8*, i8** %in.i.i, align 8
  %incdec.ptr12.i.i = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr12.i.i, i8** %in.i.i, align 8
  %31 = load i8, i8* %30, align 1
  %conv13.i.i = zext i8 %31 to i32
  store i32 %conv13.i.i, i32* %d.i.i, align 4
  %32 = load i8*, i8** %in.i.i, align 8
  %incdec.ptr14.i.i = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %incdec.ptr14.i.i, i8** %in.i.i, align 8
  %33 = load i8, i8* %32, align 1
  %conv15.i.i = zext i8 %33 to i32
  %shl16.i.i = shl i32 %conv15.i.i, 8
  %34 = load i32, i32* %d.i.i, align 4
  %or17.i.i = or i32 %34, %shl16.i.i
  store i32 %or17.i.i, i32* %d.i.i, align 4
  %35 = load i8*, i8** %in.i.i, align 8
  %incdec.ptr18.i.i = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %incdec.ptr18.i.i, i8** %in.i.i, align 8
  %36 = load i8, i8* %35, align 1
  %conv19.i.i = zext i8 %36 to i32
  %shl20.i.i = shl i32 %conv19.i.i, 16
  %37 = load i32, i32* %d.i.i, align 4
  %or21.i.i = or i32 %37, %shl20.i.i
  store i32 %or21.i.i, i32* %d.i.i, align 4
  %38 = load i8*, i8** %in.i.i, align 8
  %incdec.ptr22.i.i = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %incdec.ptr22.i.i, i8** %in.i.i, align 8
  %39 = load i8, i8* %38, align 1
  %conv23.i.i = zext i8 %39 to i32
  %shl24.i.i = shl i32 %conv23.i.i, 24
  %40 = load i32, i32* %d.i.i, align 4
  %or25.i.i = or i32 %40, %shl24.i.i
  store i32 %or25.i.i, i32* %d.i.i, align 4
  %41 = load i32, i32* %d.i.i, align 4
  %shr.i.i = lshr i32 %41, 4
  %42 = load i32, i32* %c.i.i, align 4
  %xor.i.i = xor i32 %shr.i.i, %42
  %conv26.i.i = zext i32 %xor.i.i to i64
  %and.i.i = and i64 %conv26.i.i, 252645135
  %conv27.i.i = trunc i64 %and.i.i to i32
  store i32 %conv27.i.i, i32* %t.i.i, align 4
  %43 = load i32, i32* %t.i.i, align 4
  %44 = load i32, i32* %c.i.i, align 4
  %xor28.i.i = xor i32 %44, %43
  store i32 %xor28.i.i, i32* %c.i.i, align 4
  %45 = load i32, i32* %t.i.i, align 4
  %shl29.i.i = shl i32 %45, 4
  %46 = load i32, i32* %d.i.i, align 4
  %xor30.i.i = xor i32 %46, %shl29.i.i
  store i32 %xor30.i.i, i32* %d.i.i, align 4
  %47 = load i32, i32* %c.i.i, align 4
  %shl31.i.i = shl i32 %47, 18
  %48 = load i32, i32* %c.i.i, align 4
  %xor32.i.i = xor i32 %shl31.i.i, %48
  %conv33.i.i = zext i32 %xor32.i.i to i64
  %and34.i.i = and i64 %conv33.i.i, 3435921408
  %conv35.i.i = trunc i64 %and34.i.i to i32
  store i32 %conv35.i.i, i32* %t.i.i, align 4
  %49 = load i32, i32* %c.i.i, align 4
  %50 = load i32, i32* %t.i.i, align 4
  %xor36.i.i = xor i32 %49, %50
  %51 = load i32, i32* %t.i.i, align 4
  %shr37.i.i = lshr i32 %51, 18
  %xor38.i.i = xor i32 %xor36.i.i, %shr37.i.i
  store i32 %xor38.i.i, i32* %c.i.i, align 4
  %52 = load i32, i32* %d.i.i, align 4
  %shl39.i.i = shl i32 %52, 18
  %53 = load i32, i32* %d.i.i, align 4
  %xor40.i.i = xor i32 %shl39.i.i, %53
  %conv41.i.i = zext i32 %xor40.i.i to i64
  %and42.i.i = and i64 %conv41.i.i, 3435921408
  %conv43.i.i = trunc i64 %and42.i.i to i32
  store i32 %conv43.i.i, i32* %t.i.i, align 4
  %54 = load i32, i32* %d.i.i, align 4
  %55 = load i32, i32* %t.i.i, align 4
  %xor44.i.i = xor i32 %54, %55
  %56 = load i32, i32* %t.i.i, align 4
  %shr45.i.i = lshr i32 %56, 18
  %xor46.i.i = xor i32 %xor44.i.i, %shr45.i.i
  store i32 %xor46.i.i, i32* %d.i.i, align 4
  %57 = load i32, i32* %d.i.i, align 4
  %shr47.i.i = lshr i32 %57, 1
  %58 = load i32, i32* %c.i.i, align 4
  %xor48.i.i = xor i32 %shr47.i.i, %58
  %conv49.i.i = zext i32 %xor48.i.i to i64
  %and50.i.i = and i64 %conv49.i.i, 1431655765
  %conv51.i.i = trunc i64 %and50.i.i to i32
  store i32 %conv51.i.i, i32* %t.i.i, align 4
  %59 = load i32, i32* %t.i.i, align 4
  %60 = load i32, i32* %c.i.i, align 4
  %xor52.i.i = xor i32 %60, %59
  store i32 %xor52.i.i, i32* %c.i.i, align 4
  %61 = load i32, i32* %t.i.i, align 4
  %shl53.i.i = shl i32 %61, 1
  %62 = load i32, i32* %d.i.i, align 4
  %xor54.i.i = xor i32 %62, %shl53.i.i
  store i32 %xor54.i.i, i32* %d.i.i, align 4
  %63 = load i32, i32* %c.i.i, align 4
  %shr55.i.i = lshr i32 %63, 8
  %64 = load i32, i32* %d.i.i, align 4
  %xor56.i.i = xor i32 %shr55.i.i, %64
  %conv57.i.i = zext i32 %xor56.i.i to i64
  %and58.i.i = and i64 %conv57.i.i, 16711935
  %conv59.i.i = trunc i64 %and58.i.i to i32
  store i32 %conv59.i.i, i32* %t.i.i, align 4
  %65 = load i32, i32* %t.i.i, align 4
  %66 = load i32, i32* %d.i.i, align 4
  %xor60.i.i = xor i32 %66, %65
  store i32 %xor60.i.i, i32* %d.i.i, align 4
  %67 = load i32, i32* %t.i.i, align 4
  %shl61.i.i = shl i32 %67, 8
  %68 = load i32, i32* %c.i.i, align 4
  %xor62.i.i = xor i32 %68, %shl61.i.i
  store i32 %xor62.i.i, i32* %c.i.i, align 4
  %69 = load i32, i32* %d.i.i, align 4
  %shr63.i.i = lshr i32 %69, 1
  %70 = load i32, i32* %c.i.i, align 4
  %xor64.i.i = xor i32 %shr63.i.i, %70
  %conv65.i.i = zext i32 %xor64.i.i to i64
  %and66.i.i = and i64 %conv65.i.i, 1431655765
  %conv67.i.i = trunc i64 %and66.i.i to i32
  store i32 %conv67.i.i, i32* %t.i.i, align 4
  %71 = load i32, i32* %t.i.i, align 4
  %72 = load i32, i32* %c.i.i, align 4
  %xor68.i.i = xor i32 %72, %71
  store i32 %xor68.i.i, i32* %c.i.i, align 4
  %73 = load i32, i32* %t.i.i, align 4
  %shl69.i.i = shl i32 %73, 1
  %74 = load i32, i32* %d.i.i, align 4
  %xor70.i.i = xor i32 %74, %shl69.i.i
  store i32 %xor70.i.i, i32* %d.i.i, align 4
  %75 = load i32, i32* %d.i.i, align 4
  %conv71.i.i = zext i32 %75 to i64
  %and72.i.i = and i64 %conv71.i.i, 255
  %shl73.i.i = shl i64 %and72.i.i, 16
  %76 = load i32, i32* %d.i.i, align 4
  %conv74.i.i = zext i32 %76 to i64
  %and75.i.i = and i64 %conv74.i.i, 65280
  %or76.i.i = or i64 %shl73.i.i, %and75.i.i
  %77 = load i32, i32* %d.i.i, align 4
  %conv77.i.i = zext i32 %77 to i64
  %and78.i.i = and i64 %conv77.i.i, 16711680
  %shr79.i.i = ashr i64 %and78.i.i, 16
  %or80.i.i = or i64 %or76.i.i, %shr79.i.i
  %78 = load i32, i32* %c.i.i, align 4
  %conv81.i.i = zext i32 %78 to i64
  %and82.i.i = and i64 %conv81.i.i, 4026531840
  %shr83.i.i = ashr i64 %and82.i.i, 4
  %or84.i.i = or i64 %or80.i.i, %shr83.i.i
  %conv85.i.i = trunc i64 %or84.i.i to i32
  store i32 %conv85.i.i, i32* %d.i.i, align 4
  %79 = load i32, i32* %c.i.i, align 4
  %conv86.i.i = zext i32 %79 to i64
  %and87.i.i = and i64 %conv86.i.i, 268435455
  %conv88.i.i = trunc i64 %and87.i.i to i32
  store i32 %conv88.i.i, i32* %c.i.i, align 4
  store i32 0, i32* %i.i6.i, align 4
  br label %for.cond.i10.i

for.cond.i10.i:                                   ; preds = %if.end.i14.i, %if.end4.i
  %80 = load i32, i32* %i.i6.i, align 4
  %cmp.i9.i = icmp slt i32 %80, 16
  br i1 %cmp.i9.i, label %for.body.i12.i, label %DES_set_key_unchecked.exit.i

for.body.i12.i:                                   ; preds = %for.cond.i10.i
  %81 = load i32, i32* %i.i6.i, align 4
  %idxprom.i11.i = sext i32 %81 to i64
  %arrayidx90.i.i = getelementptr inbounds [16 x i32], [16 x i32]* @DES_set_key_unchecked.shifts2, i64 0, i64 %idxprom.i11.i
  %82 = load i32, i32* %arrayidx90.i.i, align 4
  %tobool.i.i = icmp ne i32 %82, 0
  br i1 %tobool.i.i, label %if.then.i13.i, label %if.else.i.i

if.then.i13.i:                                    ; preds = %for.body.i12.i
  %83 = load i32, i32* %c.i.i, align 4
  %shr91.i.i = lshr i32 %83, 2
  %84 = load i32, i32* %c.i.i, align 4
  %shl92.i.i = shl i32 %84, 26
  %or93.i.i = or i32 %shr91.i.i, %shl92.i.i
  store i32 %or93.i.i, i32* %c.i.i, align 4
  %85 = load i32, i32* %d.i.i, align 4
  %shr94.i.i = lshr i32 %85, 2
  %86 = load i32, i32* %d.i.i, align 4
  %shl95.i.i = shl i32 %86, 26
  %or96.i.i = or i32 %shr94.i.i, %shl95.i.i
  store i32 %or96.i.i, i32* %d.i.i, align 4
  br label %if.end.i14.i

if.else.i.i:                                      ; preds = %for.body.i12.i
  %87 = load i32, i32* %c.i.i, align 4
  %shr97.i.i = lshr i32 %87, 1
  %88 = load i32, i32* %c.i.i, align 4
  %shl98.i.i = shl i32 %88, 27
  %or99.i.i = or i32 %shr97.i.i, %shl98.i.i
  store i32 %or99.i.i, i32* %c.i.i, align 4
  %89 = load i32, i32* %d.i.i, align 4
  %shr100.i.i = lshr i32 %89, 1
  %90 = load i32, i32* %d.i.i, align 4
  %shl101.i.i = shl i32 %90, 27
  %or102.i.i = or i32 %shr100.i.i, %shl101.i.i
  store i32 %or102.i.i, i32* %d.i.i, align 4
  br label %if.end.i14.i

if.end.i14.i:                                     ; preds = %if.else.i.i, %if.then.i13.i
  %91 = load i32, i32* %c.i.i, align 4
  %conv103.i.i = zext i32 %91 to i64
  %and104.i.i = and i64 %conv103.i.i, 268435455
  %conv105.i.i = trunc i64 %and104.i.i to i32
  store i32 %conv105.i.i, i32* %c.i.i, align 4
  %92 = load i32, i32* %d.i.i, align 4
  %conv106.i.i = zext i32 %92 to i64
  %and107.i.i = and i64 %conv106.i.i, 268435455
  %conv108.i.i = trunc i64 %and107.i.i to i32
  store i32 %conv108.i.i, i32* %d.i.i, align 4
  %93 = load i32, i32* %c.i.i, align 4
  %and109.i.i = and i32 %93, 63
  %idxprom110.i.i = zext i32 %and109.i.i to i64
  %arrayidx111.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 0), i64 0, i64 %idxprom110.i.i
  %94 = load i32, i32* %arrayidx111.i.i, align 4
  %95 = load i32, i32* %c.i.i, align 4
  %shr112.i.i = lshr i32 %95, 6
  %and113.i.i = and i32 %shr112.i.i, 3
  %96 = load i32, i32* %c.i.i, align 4
  %shr114.i.i = lshr i32 %96, 7
  %and115.i.i = and i32 %shr114.i.i, 60
  %or116.i.i = or i32 %and113.i.i, %and115.i.i
  %idxprom117.i.i = zext i32 %or116.i.i to i64
  %arrayidx118.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 1), i64 0, i64 %idxprom117.i.i
  %97 = load i32, i32* %arrayidx118.i.i, align 4
  %or119.i.i = or i32 %94, %97
  %98 = load i32, i32* %c.i.i, align 4
  %shr120.i.i = lshr i32 %98, 13
  %and121.i.i = and i32 %shr120.i.i, 15
  %99 = load i32, i32* %c.i.i, align 4
  %shr122.i.i = lshr i32 %99, 14
  %and123.i.i = and i32 %shr122.i.i, 48
  %or124.i.i = or i32 %and121.i.i, %and123.i.i
  %idxprom125.i.i = zext i32 %or124.i.i to i64
  %arrayidx126.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 2), i64 0, i64 %idxprom125.i.i
  %100 = load i32, i32* %arrayidx126.i.i, align 4
  %or127.i.i = or i32 %or119.i.i, %100
  %101 = load i32, i32* %c.i.i, align 4
  %shr128.i.i = lshr i32 %101, 20
  %and129.i.i = and i32 %shr128.i.i, 1
  %102 = load i32, i32* %c.i.i, align 4
  %shr130.i.i = lshr i32 %102, 21
  %and131.i.i = and i32 %shr130.i.i, 6
  %or132.i.i = or i32 %and129.i.i, %and131.i.i
  %103 = load i32, i32* %c.i.i, align 4
  %shr133.i.i = lshr i32 %103, 22
  %and134.i.i = and i32 %shr133.i.i, 56
  %or135.i.i = or i32 %or132.i.i, %and134.i.i
  %idxprom136.i.i = zext i32 %or135.i.i to i64
  %arrayidx137.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 3), i64 0, i64 %idxprom136.i.i
  %104 = load i32, i32* %arrayidx137.i.i, align 4
  %or138.i.i = or i32 %or127.i.i, %104
  store i32 %or138.i.i, i32* %s.i.i, align 4
  %105 = load i32, i32* %d.i.i, align 4
  %and139.i.i = and i32 %105, 63
  %idxprom140.i.i = zext i32 %and139.i.i to i64
  %arrayidx141.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 4), i64 0, i64 %idxprom140.i.i
  %106 = load i32, i32* %arrayidx141.i.i, align 4
  %107 = load i32, i32* %d.i.i, align 4
  %shr142.i.i = lshr i32 %107, 7
  %and143.i.i = and i32 %shr142.i.i, 3
  %108 = load i32, i32* %d.i.i, align 4
  %shr144.i.i = lshr i32 %108, 8
  %and145.i.i = and i32 %shr144.i.i, 60
  %or146.i.i = or i32 %and143.i.i, %and145.i.i
  %idxprom147.i.i = zext i32 %or146.i.i to i64
  %arrayidx148.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 5), i64 0, i64 %idxprom147.i.i
  %109 = load i32, i32* %arrayidx148.i.i, align 4
  %or149.i.i = or i32 %106, %109
  %110 = load i32, i32* %d.i.i, align 4
  %shr150.i.i = lshr i32 %110, 15
  %and151.i.i = and i32 %shr150.i.i, 63
  %idxprom152.i.i = zext i32 %and151.i.i to i64
  %arrayidx153.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 6), i64 0, i64 %idxprom152.i.i
  %111 = load i32, i32* %arrayidx153.i.i, align 4
  %or154.i.i = or i32 %or149.i.i, %111
  %112 = load i32, i32* %d.i.i, align 4
  %shr155.i.i = lshr i32 %112, 21
  %and156.i.i = and i32 %shr155.i.i, 15
  %113 = load i32, i32* %d.i.i, align 4
  %shr157.i.i = lshr i32 %113, 22
  %and158.i.i = and i32 %shr157.i.i, 48
  %or159.i.i = or i32 %and156.i.i, %and158.i.i
  %idxprom160.i.i = zext i32 %or159.i.i to i64
  %arrayidx161.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 7), i64 0, i64 %idxprom160.i.i
  %114 = load i32, i32* %arrayidx161.i.i, align 4
  %or162.i.i = or i32 %or154.i.i, %114
  store i32 %or162.i.i, i32* %t.i.i, align 4
  %115 = load i32, i32* %t.i.i, align 4
  %shl163.i.i = shl i32 %115, 16
  %conv164.i.i = zext i32 %shl163.i.i to i64
  %116 = load i32, i32* %s.i.i, align 4
  %conv165.i.i = zext i32 %116 to i64
  %and166.i.i = and i64 %conv165.i.i, 65535
  %or167.i.i = or i64 %conv164.i.i, %and166.i.i
  %and168.i.i = and i64 %or167.i.i, 4294967295
  %conv169.i.i = trunc i64 %and168.i.i to i32
  store i32 %conv169.i.i, i32* %t2.i.i, align 4
  %117 = load i32, i32* %t2.i.i, align 4
  %118 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 30, i32 %117) #5, !srcloc !74
  store i32 %118, i32* %ret.i.i, align 4
  %119 = load i32, i32* %ret.i.i, align 4
  store i32 %119, i32* %tmp.i.i, align 4
  %120 = load i32, i32* %tmp.i.i, align 4
  %conv170.i.i = zext i32 %120 to i64
  %and171.i.i = and i64 %conv170.i.i, 4294967295
  %conv172.i.i = trunc i64 %and171.i.i to i32
  %121 = load i32*, i32** %k.i.i, align 8
  %incdec.ptr173.i.i = getelementptr inbounds i32, i32* %121, i32 1
  store i32* %incdec.ptr173.i.i, i32** %k.i.i, align 8
  store i32 %conv172.i.i, i32* %121, align 4
  %122 = load i32, i32* %s.i.i, align 4
  %shr174.i.i = lshr i32 %122, 16
  %conv175.i.i = zext i32 %shr174.i.i to i64
  %123 = load i32, i32* %t.i.i, align 4
  %conv176.i.i = zext i32 %123 to i64
  %and177.i.i = and i64 %conv176.i.i, 4294901760
  %or178.i.i = or i64 %conv175.i.i, %and177.i.i
  %conv179.i.i = trunc i64 %or178.i.i to i32
  store i32 %conv179.i.i, i32* %t2.i.i, align 4
  %124 = load i32, i32* %t2.i.i, align 4
  %125 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 26, i32 %124) #5, !srcloc !75
  store i32 %125, i32* %ret180.i.i, align 4
  %126 = load i32, i32* %ret180.i.i, align 4
  store i32 %126, i32* %tmp181.i.i, align 4
  %127 = load i32, i32* %tmp181.i.i, align 4
  %conv182.i.i = zext i32 %127 to i64
  %and183.i.i = and i64 %conv182.i.i, 4294967295
  %conv184.i.i = trunc i64 %and183.i.i to i32
  %128 = load i32*, i32** %k.i.i, align 8
  %incdec.ptr185.i.i = getelementptr inbounds i32, i32* %128, i32 1
  store i32* %incdec.ptr185.i.i, i32** %k.i.i, align 8
  store i32 %conv184.i.i, i32* %128, align 4
  %129 = load i32, i32* %i.i6.i, align 4
  %inc.i15.i = add nsw i32 %129, 1
  store i32 %inc.i15.i, i32* %i.i6.i, align 4
  br label %for.cond.i10.i

DES_set_key_unchecked.exit.i:                     ; preds = %for.cond.i10.i
  store i32 0, i32* %retval.i, align 4
  br label %DES_set_key_checked.exit

DES_set_key_checked.exit:                         ; preds = %if.then.i, %if.then3.i, %DES_set_key_unchecked.exit.i
  %130 = load i32, i32* %retval.i, align 4
  store i32 %130, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %131 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  %132 = load %struct.DES_ks*, %struct.DES_ks** %schedule.addr, align 8
  store [8 x i8]* %131, [8 x i8]** %key.addr.i1, align 8
  store %struct.DES_ks* %132, %struct.DES_ks** %schedule.addr.i2, align 8
  %133 = load %struct.DES_ks*, %struct.DES_ks** %schedule.addr.i2, align 8
  %ks.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %133, i32 0, i32 0
  %arraydecay.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks.i, i64 0, i64 0
  %deslong.i = bitcast %union.anon* %arraydecay.i to [2 x i32]*
  %arrayidx.i = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i, i64 0, i64 0
  store i32* %arrayidx.i, i32** %k.i, align 8
  %134 = load [8 x i8]*, [8 x i8]** %key.addr.i1, align 8
  %arrayidx1.i = getelementptr inbounds [8 x i8], [8 x i8]* %134, i64 0, i64 0
  store i8* %arrayidx1.i, i8** %in.i, align 8
  %135 = load i8*, i8** %in.i, align 8
  %incdec.ptr.i = getelementptr inbounds i8, i8* %135, i32 1
  store i8* %incdec.ptr.i, i8** %in.i, align 8
  %136 = load i8, i8* %135, align 1
  %conv.i = zext i8 %136 to i32
  store i32 %conv.i, i32* %c.i, align 4
  %137 = load i8*, i8** %in.i, align 8
  %incdec.ptr2.i = getelementptr inbounds i8, i8* %137, i32 1
  store i8* %incdec.ptr2.i, i8** %in.i, align 8
  %138 = load i8, i8* %137, align 1
  %conv3.i = zext i8 %138 to i32
  %shl.i = shl i32 %conv3.i, 8
  %139 = load i32, i32* %c.i, align 4
  %or.i = or i32 %139, %shl.i
  store i32 %or.i, i32* %c.i, align 4
  %140 = load i8*, i8** %in.i, align 8
  %incdec.ptr4.i = getelementptr inbounds i8, i8* %140, i32 1
  store i8* %incdec.ptr4.i, i8** %in.i, align 8
  %141 = load i8, i8* %140, align 1
  %conv5.i = zext i8 %141 to i32
  %shl6.i = shl i32 %conv5.i, 16
  %142 = load i32, i32* %c.i, align 4
  %or7.i = or i32 %142, %shl6.i
  store i32 %or7.i, i32* %c.i, align 4
  %143 = load i8*, i8** %in.i, align 8
  %incdec.ptr8.i = getelementptr inbounds i8, i8* %143, i32 1
  store i8* %incdec.ptr8.i, i8** %in.i, align 8
  %144 = load i8, i8* %143, align 1
  %conv9.i = zext i8 %144 to i32
  %shl10.i = shl i32 %conv9.i, 24
  %145 = load i32, i32* %c.i, align 4
  %or11.i = or i32 %145, %shl10.i
  store i32 %or11.i, i32* %c.i, align 4
  %146 = load i8*, i8** %in.i, align 8
  %incdec.ptr12.i = getelementptr inbounds i8, i8* %146, i32 1
  store i8* %incdec.ptr12.i, i8** %in.i, align 8
  %147 = load i8, i8* %146, align 1
  %conv13.i = zext i8 %147 to i32
  store i32 %conv13.i, i32* %d.i, align 4
  %148 = load i8*, i8** %in.i, align 8
  %incdec.ptr14.i = getelementptr inbounds i8, i8* %148, i32 1
  store i8* %incdec.ptr14.i, i8** %in.i, align 8
  %149 = load i8, i8* %148, align 1
  %conv15.i = zext i8 %149 to i32
  %shl16.i = shl i32 %conv15.i, 8
  %150 = load i32, i32* %d.i, align 4
  %or17.i = or i32 %150, %shl16.i
  store i32 %or17.i, i32* %d.i, align 4
  %151 = load i8*, i8** %in.i, align 8
  %incdec.ptr18.i = getelementptr inbounds i8, i8* %151, i32 1
  store i8* %incdec.ptr18.i, i8** %in.i, align 8
  %152 = load i8, i8* %151, align 1
  %conv19.i = zext i8 %152 to i32
  %shl20.i = shl i32 %conv19.i, 16
  %153 = load i32, i32* %d.i, align 4
  %or21.i = or i32 %153, %shl20.i
  store i32 %or21.i, i32* %d.i, align 4
  %154 = load i8*, i8** %in.i, align 8
  %incdec.ptr22.i = getelementptr inbounds i8, i8* %154, i32 1
  store i8* %incdec.ptr22.i, i8** %in.i, align 8
  %155 = load i8, i8* %154, align 1
  %conv23.i = zext i8 %155 to i32
  %shl24.i = shl i32 %conv23.i, 24
  %156 = load i32, i32* %d.i, align 4
  %or25.i = or i32 %156, %shl24.i
  store i32 %or25.i, i32* %d.i, align 4
  %157 = load i32, i32* %d.i, align 4
  %shr.i = lshr i32 %157, 4
  %158 = load i32, i32* %c.i, align 4
  %xor.i = xor i32 %shr.i, %158
  %conv26.i = zext i32 %xor.i to i64
  %and.i = and i64 %conv26.i, 252645135
  %conv27.i = trunc i64 %and.i to i32
  store i32 %conv27.i, i32* %t.i, align 4
  %159 = load i32, i32* %t.i, align 4
  %160 = load i32, i32* %c.i, align 4
  %xor28.i = xor i32 %160, %159
  store i32 %xor28.i, i32* %c.i, align 4
  %161 = load i32, i32* %t.i, align 4
  %shl29.i = shl i32 %161, 4
  %162 = load i32, i32* %d.i, align 4
  %xor30.i = xor i32 %162, %shl29.i
  store i32 %xor30.i, i32* %d.i, align 4
  %163 = load i32, i32* %c.i, align 4
  %shl31.i = shl i32 %163, 18
  %164 = load i32, i32* %c.i, align 4
  %xor32.i = xor i32 %shl31.i, %164
  %conv33.i = zext i32 %xor32.i to i64
  %and34.i = and i64 %conv33.i, 3435921408
  %conv35.i = trunc i64 %and34.i to i32
  store i32 %conv35.i, i32* %t.i, align 4
  %165 = load i32, i32* %c.i, align 4
  %166 = load i32, i32* %t.i, align 4
  %xor36.i = xor i32 %165, %166
  %167 = load i32, i32* %t.i, align 4
  %shr37.i = lshr i32 %167, 18
  %xor38.i = xor i32 %xor36.i, %shr37.i
  store i32 %xor38.i, i32* %c.i, align 4
  %168 = load i32, i32* %d.i, align 4
  %shl39.i = shl i32 %168, 18
  %169 = load i32, i32* %d.i, align 4
  %xor40.i = xor i32 %shl39.i, %169
  %conv41.i = zext i32 %xor40.i to i64
  %and42.i = and i64 %conv41.i, 3435921408
  %conv43.i = trunc i64 %and42.i to i32
  store i32 %conv43.i, i32* %t.i, align 4
  %170 = load i32, i32* %d.i, align 4
  %171 = load i32, i32* %t.i, align 4
  %xor44.i = xor i32 %170, %171
  %172 = load i32, i32* %t.i, align 4
  %shr45.i = lshr i32 %172, 18
  %xor46.i = xor i32 %xor44.i, %shr45.i
  store i32 %xor46.i, i32* %d.i, align 4
  %173 = load i32, i32* %d.i, align 4
  %shr47.i = lshr i32 %173, 1
  %174 = load i32, i32* %c.i, align 4
  %xor48.i = xor i32 %shr47.i, %174
  %conv49.i = zext i32 %xor48.i to i64
  %and50.i = and i64 %conv49.i, 1431655765
  %conv51.i = trunc i64 %and50.i to i32
  store i32 %conv51.i, i32* %t.i, align 4
  %175 = load i32, i32* %t.i, align 4
  %176 = load i32, i32* %c.i, align 4
  %xor52.i = xor i32 %176, %175
  store i32 %xor52.i, i32* %c.i, align 4
  %177 = load i32, i32* %t.i, align 4
  %shl53.i = shl i32 %177, 1
  %178 = load i32, i32* %d.i, align 4
  %xor54.i = xor i32 %178, %shl53.i
  store i32 %xor54.i, i32* %d.i, align 4
  %179 = load i32, i32* %c.i, align 4
  %shr55.i = lshr i32 %179, 8
  %180 = load i32, i32* %d.i, align 4
  %xor56.i = xor i32 %shr55.i, %180
  %conv57.i = zext i32 %xor56.i to i64
  %and58.i = and i64 %conv57.i, 16711935
  %conv59.i = trunc i64 %and58.i to i32
  store i32 %conv59.i, i32* %t.i, align 4
  %181 = load i32, i32* %t.i, align 4
  %182 = load i32, i32* %d.i, align 4
  %xor60.i = xor i32 %182, %181
  store i32 %xor60.i, i32* %d.i, align 4
  %183 = load i32, i32* %t.i, align 4
  %shl61.i = shl i32 %183, 8
  %184 = load i32, i32* %c.i, align 4
  %xor62.i = xor i32 %184, %shl61.i
  store i32 %xor62.i, i32* %c.i, align 4
  %185 = load i32, i32* %d.i, align 4
  %shr63.i = lshr i32 %185, 1
  %186 = load i32, i32* %c.i, align 4
  %xor64.i = xor i32 %shr63.i, %186
  %conv65.i = zext i32 %xor64.i to i64
  %and66.i = and i64 %conv65.i, 1431655765
  %conv67.i = trunc i64 %and66.i to i32
  store i32 %conv67.i, i32* %t.i, align 4
  %187 = load i32, i32* %t.i, align 4
  %188 = load i32, i32* %c.i, align 4
  %xor68.i = xor i32 %188, %187
  store i32 %xor68.i, i32* %c.i, align 4
  %189 = load i32, i32* %t.i, align 4
  %shl69.i = shl i32 %189, 1
  %190 = load i32, i32* %d.i, align 4
  %xor70.i = xor i32 %190, %shl69.i
  store i32 %xor70.i, i32* %d.i, align 4
  %191 = load i32, i32* %d.i, align 4
  %conv71.i = zext i32 %191 to i64
  %and72.i = and i64 %conv71.i, 255
  %shl73.i = shl i64 %and72.i, 16
  %192 = load i32, i32* %d.i, align 4
  %conv74.i = zext i32 %192 to i64
  %and75.i = and i64 %conv74.i, 65280
  %or76.i = or i64 %shl73.i, %and75.i
  %193 = load i32, i32* %d.i, align 4
  %conv77.i = zext i32 %193 to i64
  %and78.i = and i64 %conv77.i, 16711680
  %shr79.i = ashr i64 %and78.i, 16
  %or80.i = or i64 %or76.i, %shr79.i
  %194 = load i32, i32* %c.i, align 4
  %conv81.i = zext i32 %194 to i64
  %and82.i = and i64 %conv81.i, 4026531840
  %shr83.i = ashr i64 %and82.i, 4
  %or84.i = or i64 %or80.i, %shr83.i
  %conv85.i = trunc i64 %or84.i to i32
  store i32 %conv85.i, i32* %d.i, align 4
  %195 = load i32, i32* %c.i, align 4
  %conv86.i = zext i32 %195 to i64
  %and87.i = and i64 %conv86.i, 268435455
  %conv88.i = trunc i64 %and87.i to i32
  store i32 %conv88.i, i32* %c.i, align 4
  store i32 0, i32* %i.i, align 4
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.end.i5, %if.else
  %196 = load i32, i32* %i.i, align 4
  %cmp.i = icmp slt i32 %196, 16
  br i1 %cmp.i, label %for.body.i, label %DES_set_key_unchecked.exit

for.body.i:                                       ; preds = %for.cond.i
  %197 = load i32, i32* %i.i, align 4
  %idxprom.i = sext i32 %197 to i64
  %arrayidx90.i = getelementptr inbounds [16 x i32], [16 x i32]* @DES_set_key_unchecked.shifts2, i64 0, i64 %idxprom.i
  %198 = load i32, i32* %arrayidx90.i, align 4
  %tobool.i3 = icmp ne i32 %198, 0
  br i1 %tobool.i3, label %if.then.i4, label %if.else.i

if.then.i4:                                       ; preds = %for.body.i
  %199 = load i32, i32* %c.i, align 4
  %shr91.i = lshr i32 %199, 2
  %200 = load i32, i32* %c.i, align 4
  %shl92.i = shl i32 %200, 26
  %or93.i = or i32 %shr91.i, %shl92.i
  store i32 %or93.i, i32* %c.i, align 4
  %201 = load i32, i32* %d.i, align 4
  %shr94.i = lshr i32 %201, 2
  %202 = load i32, i32* %d.i, align 4
  %shl95.i = shl i32 %202, 26
  %or96.i = or i32 %shr94.i, %shl95.i
  store i32 %or96.i, i32* %d.i, align 4
  br label %if.end.i5

if.else.i:                                        ; preds = %for.body.i
  %203 = load i32, i32* %c.i, align 4
  %shr97.i = lshr i32 %203, 1
  %204 = load i32, i32* %c.i, align 4
  %shl98.i = shl i32 %204, 27
  %or99.i = or i32 %shr97.i, %shl98.i
  store i32 %or99.i, i32* %c.i, align 4
  %205 = load i32, i32* %d.i, align 4
  %shr100.i = lshr i32 %205, 1
  %206 = load i32, i32* %d.i, align 4
  %shl101.i = shl i32 %206, 27
  %or102.i = or i32 %shr100.i, %shl101.i
  store i32 %or102.i, i32* %d.i, align 4
  br label %if.end.i5

if.end.i5:                                        ; preds = %if.else.i, %if.then.i4
  %207 = load i32, i32* %c.i, align 4
  %conv103.i = zext i32 %207 to i64
  %and104.i = and i64 %conv103.i, 268435455
  %conv105.i = trunc i64 %and104.i to i32
  store i32 %conv105.i, i32* %c.i, align 4
  %208 = load i32, i32* %d.i, align 4
  %conv106.i = zext i32 %208 to i64
  %and107.i = and i64 %conv106.i, 268435455
  %conv108.i = trunc i64 %and107.i to i32
  store i32 %conv108.i, i32* %d.i, align 4
  %209 = load i32, i32* %c.i, align 4
  %and109.i = and i32 %209, 63
  %idxprom110.i = zext i32 %and109.i to i64
  %arrayidx111.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 0), i64 0, i64 %idxprom110.i
  %210 = load i32, i32* %arrayidx111.i, align 4
  %211 = load i32, i32* %c.i, align 4
  %shr112.i = lshr i32 %211, 6
  %and113.i = and i32 %shr112.i, 3
  %212 = load i32, i32* %c.i, align 4
  %shr114.i = lshr i32 %212, 7
  %and115.i = and i32 %shr114.i, 60
  %or116.i = or i32 %and113.i, %and115.i
  %idxprom117.i = zext i32 %or116.i to i64
  %arrayidx118.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 1), i64 0, i64 %idxprom117.i
  %213 = load i32, i32* %arrayidx118.i, align 4
  %or119.i = or i32 %210, %213
  %214 = load i32, i32* %c.i, align 4
  %shr120.i = lshr i32 %214, 13
  %and121.i = and i32 %shr120.i, 15
  %215 = load i32, i32* %c.i, align 4
  %shr122.i = lshr i32 %215, 14
  %and123.i = and i32 %shr122.i, 48
  %or124.i = or i32 %and121.i, %and123.i
  %idxprom125.i = zext i32 %or124.i to i64
  %arrayidx126.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 2), i64 0, i64 %idxprom125.i
  %216 = load i32, i32* %arrayidx126.i, align 4
  %or127.i = or i32 %or119.i, %216
  %217 = load i32, i32* %c.i, align 4
  %shr128.i = lshr i32 %217, 20
  %and129.i = and i32 %shr128.i, 1
  %218 = load i32, i32* %c.i, align 4
  %shr130.i = lshr i32 %218, 21
  %and131.i = and i32 %shr130.i, 6
  %or132.i = or i32 %and129.i, %and131.i
  %219 = load i32, i32* %c.i, align 4
  %shr133.i = lshr i32 %219, 22
  %and134.i = and i32 %shr133.i, 56
  %or135.i = or i32 %or132.i, %and134.i
  %idxprom136.i = zext i32 %or135.i to i64
  %arrayidx137.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 3), i64 0, i64 %idxprom136.i
  %220 = load i32, i32* %arrayidx137.i, align 4
  %or138.i = or i32 %or127.i, %220
  store i32 %or138.i, i32* %s.i, align 4
  %221 = load i32, i32* %d.i, align 4
  %and139.i = and i32 %221, 63
  %idxprom140.i = zext i32 %and139.i to i64
  %arrayidx141.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 4), i64 0, i64 %idxprom140.i
  %222 = load i32, i32* %arrayidx141.i, align 4
  %223 = load i32, i32* %d.i, align 4
  %shr142.i = lshr i32 %223, 7
  %and143.i = and i32 %shr142.i, 3
  %224 = load i32, i32* %d.i, align 4
  %shr144.i = lshr i32 %224, 8
  %and145.i = and i32 %shr144.i, 60
  %or146.i = or i32 %and143.i, %and145.i
  %idxprom147.i = zext i32 %or146.i to i64
  %arrayidx148.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 5), i64 0, i64 %idxprom147.i
  %225 = load i32, i32* %arrayidx148.i, align 4
  %or149.i = or i32 %222, %225
  %226 = load i32, i32* %d.i, align 4
  %shr150.i = lshr i32 %226, 15
  %and151.i = and i32 %shr150.i, 63
  %idxprom152.i = zext i32 %and151.i to i64
  %arrayidx153.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 6), i64 0, i64 %idxprom152.i
  %227 = load i32, i32* %arrayidx153.i, align 4
  %or154.i = or i32 %or149.i, %227
  %228 = load i32, i32* %d.i, align 4
  %shr155.i = lshr i32 %228, 21
  %and156.i = and i32 %shr155.i, 15
  %229 = load i32, i32* %d.i, align 4
  %shr157.i = lshr i32 %229, 22
  %and158.i = and i32 %shr157.i, 48
  %or159.i = or i32 %and156.i, %and158.i
  %idxprom160.i = zext i32 %or159.i to i64
  %arrayidx161.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 7), i64 0, i64 %idxprom160.i
  %230 = load i32, i32* %arrayidx161.i, align 4
  %or162.i = or i32 %or154.i, %230
  store i32 %or162.i, i32* %t.i, align 4
  %231 = load i32, i32* %t.i, align 4
  %shl163.i = shl i32 %231, 16
  %conv164.i = zext i32 %shl163.i to i64
  %232 = load i32, i32* %s.i, align 4
  %conv165.i = zext i32 %232 to i64
  %and166.i = and i64 %conv165.i, 65535
  %or167.i = or i64 %conv164.i, %and166.i
  %and168.i = and i64 %or167.i, 4294967295
  %conv169.i = trunc i64 %and168.i to i32
  store i32 %conv169.i, i32* %t2.i, align 4
  %233 = load i32, i32* %t2.i, align 4
  %234 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 30, i32 %233) #5, !srcloc !74
  store i32 %234, i32* %ret.i, align 4
  %235 = load i32, i32* %ret.i, align 4
  store i32 %235, i32* %tmp.i, align 4
  %236 = load i32, i32* %tmp.i, align 4
  %conv170.i = zext i32 %236 to i64
  %and171.i = and i64 %conv170.i, 4294967295
  %conv172.i = trunc i64 %and171.i to i32
  %237 = load i32*, i32** %k.i, align 8
  %incdec.ptr173.i = getelementptr inbounds i32, i32* %237, i32 1
  store i32* %incdec.ptr173.i, i32** %k.i, align 8
  store i32 %conv172.i, i32* %237, align 4
  %238 = load i32, i32* %s.i, align 4
  %shr174.i = lshr i32 %238, 16
  %conv175.i = zext i32 %shr174.i to i64
  %239 = load i32, i32* %t.i, align 4
  %conv176.i = zext i32 %239 to i64
  %and177.i = and i64 %conv176.i, 4294901760
  %or178.i = or i64 %conv175.i, %and177.i
  %conv179.i = trunc i64 %or178.i to i32
  store i32 %conv179.i, i32* %t2.i, align 4
  %240 = load i32, i32* %t2.i, align 4
  %241 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 26, i32 %240) #5, !srcloc !75
  store i32 %241, i32* %ret180.i, align 4
  %242 = load i32, i32* %ret180.i, align 4
  store i32 %242, i32* %tmp181.i, align 4
  %243 = load i32, i32* %tmp181.i, align 4
  %conv182.i = zext i32 %243 to i64
  %and183.i = and i64 %conv182.i, 4294967295
  %conv184.i = trunc i64 %and183.i to i32
  %244 = load i32*, i32** %k.i, align 8
  %incdec.ptr185.i = getelementptr inbounds i32, i32* %244, i32 1
  store i32* %incdec.ptr185.i, i32** %k.i, align 8
  store i32 %conv184.i, i32* %244, align 4
  %245 = load i32, i32* %i.i, align 4
  %inc.i = add nsw i32 %245, 1
  store i32 %inc.i, i32* %i.i, align 4
  br label %for.cond.i

DES_set_key_unchecked.exit:                       ; preds = %for.cond.i
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %DES_set_key_unchecked.exit, %DES_set_key_checked.exit
  %246 = load i32, i32* %retval, align 4
  ret i32 %246
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @DES_set_key_checked([8 x i8]* %key, %struct.DES_ks* %schedule) #0 {
entry:
  %key.addr.i5 = alloca [8 x i8]*, align 8
  %schedule.addr.i = alloca %struct.DES_ks*, align 8
  %c.i = alloca i32, align 4
  %d.i = alloca i32, align 4
  %t.i = alloca i32, align 4
  %s.i = alloca i32, align 4
  %t2.i = alloca i32, align 4
  %in.i = alloca i8*, align 8
  %k.i = alloca i32*, align 8
  %i.i6 = alloca i32, align 4
  %ret.i = alloca i32, align 4
  %tmp.i = alloca i32, align 4
  %ret180.i = alloca i32, align 4
  %tmp181.i = alloca i32, align 4
  %retval.i = alloca i32, align 4
  %key.addr.i = alloca [8 x i8]*, align 8
  %i.i = alloca i32, align 4
  %retval = alloca i32, align 4
  %key.addr = alloca [8 x i8]*, align 8
  %schedule.addr = alloca %struct.DES_ks*, align 8
  store [8 x i8]* %key, [8 x i8]** %key.addr, align 8
  store %struct.DES_ks* %schedule, %struct.DES_ks** %schedule.addr, align 8
  %0 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  store [8 x i8]* %0, [8 x i8]** %key.addr.i, align 8
  store i32 0, i32* %i.i, align 4
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.end.i, %entry
  %1 = load i32, i32* %i.i, align 4
  %conv.i = zext i32 %1 to i64
  %cmp.i = icmp ult i64 %conv.i, 8
  br i1 %cmp.i, label %for.body.i, label %for.end.i

for.body.i:                                       ; preds = %for.cond.i
  %2 = load [8 x i8]*, [8 x i8]** %key.addr.i, align 8
  %3 = load i32, i32* %i.i, align 4
  %idxprom.i = zext i32 %3 to i64
  %arrayidx.i = getelementptr inbounds [8 x i8], [8 x i8]* %2, i64 0, i64 %idxprom.i
  %4 = load i8, i8* %arrayidx.i, align 1
  %conv2.i = zext i8 %4 to i32
  %5 = load [8 x i8]*, [8 x i8]** %key.addr.i, align 8
  %6 = load i32, i32* %i.i, align 4
  %idxprom3.i = zext i32 %6 to i64
  %arrayidx4.i = getelementptr inbounds [8 x i8], [8 x i8]* %5, i64 0, i64 %idxprom3.i
  %7 = load i8, i8* %arrayidx4.i, align 1
  %idxprom5.i = zext i8 %7 to i64
  %arrayidx6.i = getelementptr inbounds [256 x i8], [256 x i8]* @odd_parity, i64 0, i64 %idxprom5.i
  %8 = load i8, i8* %arrayidx6.i, align 1
  %conv7.i = zext i8 %8 to i32
  %cmp8.i = icmp ne i32 %conv2.i, %conv7.i
  br i1 %cmp8.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %for.body.i
  store i32 0, i32* %retval.i, align 4
  br label %DES_check_key_parity.exit

if.end.i:                                         ; preds = %for.body.i
  %9 = load i32, i32* %i.i, align 4
  %inc.i = add i32 %9, 1
  store i32 %inc.i, i32* %i.i, align 4
  br label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i
  store i32 1, i32* %retval.i, align 4
  br label %DES_check_key_parity.exit

DES_check_key_parity.exit:                        ; preds = %if.then.i, %for.end.i
  %10 = load i32, i32* %retval.i, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %DES_check_key_parity.exit
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %DES_check_key_parity.exit
  %11 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  %call1 = call i32 @DES_is_weak_key([8 x i8]* %11)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  store i32 -2, i32* %retval, align 4
  br label %return

if.end4:                                          ; preds = %if.end
  %12 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  %13 = load %struct.DES_ks*, %struct.DES_ks** %schedule.addr, align 8
  store [8 x i8]* %12, [8 x i8]** %key.addr.i5, align 8
  store %struct.DES_ks* %13, %struct.DES_ks** %schedule.addr.i, align 8
  %14 = load %struct.DES_ks*, %struct.DES_ks** %schedule.addr.i, align 8
  %ks.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %14, i32 0, i32 0
  %arraydecay.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks.i, i64 0, i64 0
  %deslong.i = bitcast %union.anon* %arraydecay.i to [2 x i32]*
  %arrayidx.i7 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i, i64 0, i64 0
  store i32* %arrayidx.i7, i32** %k.i, align 8
  %15 = load [8 x i8]*, [8 x i8]** %key.addr.i5, align 8
  %arrayidx1.i = getelementptr inbounds [8 x i8], [8 x i8]* %15, i64 0, i64 0
  store i8* %arrayidx1.i, i8** %in.i, align 8
  %16 = load i8*, i8** %in.i, align 8
  %incdec.ptr.i = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr.i, i8** %in.i, align 8
  %17 = load i8, i8* %16, align 1
  %conv.i8 = zext i8 %17 to i32
  store i32 %conv.i8, i32* %c.i, align 4
  %18 = load i8*, i8** %in.i, align 8
  %incdec.ptr2.i = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr2.i, i8** %in.i, align 8
  %19 = load i8, i8* %18, align 1
  %conv3.i = zext i8 %19 to i32
  %shl.i = shl i32 %conv3.i, 8
  %20 = load i32, i32* %c.i, align 4
  %or.i = or i32 %20, %shl.i
  store i32 %or.i, i32* %c.i, align 4
  %21 = load i8*, i8** %in.i, align 8
  %incdec.ptr4.i = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr4.i, i8** %in.i, align 8
  %22 = load i8, i8* %21, align 1
  %conv5.i = zext i8 %22 to i32
  %shl6.i = shl i32 %conv5.i, 16
  %23 = load i32, i32* %c.i, align 4
  %or7.i = or i32 %23, %shl6.i
  store i32 %or7.i, i32* %c.i, align 4
  %24 = load i8*, i8** %in.i, align 8
  %incdec.ptr8.i = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %incdec.ptr8.i, i8** %in.i, align 8
  %25 = load i8, i8* %24, align 1
  %conv9.i = zext i8 %25 to i32
  %shl10.i = shl i32 %conv9.i, 24
  %26 = load i32, i32* %c.i, align 4
  %or11.i = or i32 %26, %shl10.i
  store i32 %or11.i, i32* %c.i, align 4
  %27 = load i8*, i8** %in.i, align 8
  %incdec.ptr12.i = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %incdec.ptr12.i, i8** %in.i, align 8
  %28 = load i8, i8* %27, align 1
  %conv13.i = zext i8 %28 to i32
  store i32 %conv13.i, i32* %d.i, align 4
  %29 = load i8*, i8** %in.i, align 8
  %incdec.ptr14.i = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %incdec.ptr14.i, i8** %in.i, align 8
  %30 = load i8, i8* %29, align 1
  %conv15.i = zext i8 %30 to i32
  %shl16.i = shl i32 %conv15.i, 8
  %31 = load i32, i32* %d.i, align 4
  %or17.i = or i32 %31, %shl16.i
  store i32 %or17.i, i32* %d.i, align 4
  %32 = load i8*, i8** %in.i, align 8
  %incdec.ptr18.i = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %incdec.ptr18.i, i8** %in.i, align 8
  %33 = load i8, i8* %32, align 1
  %conv19.i = zext i8 %33 to i32
  %shl20.i = shl i32 %conv19.i, 16
  %34 = load i32, i32* %d.i, align 4
  %or21.i = or i32 %34, %shl20.i
  store i32 %or21.i, i32* %d.i, align 4
  %35 = load i8*, i8** %in.i, align 8
  %incdec.ptr22.i = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %incdec.ptr22.i, i8** %in.i, align 8
  %36 = load i8, i8* %35, align 1
  %conv23.i = zext i8 %36 to i32
  %shl24.i = shl i32 %conv23.i, 24
  %37 = load i32, i32* %d.i, align 4
  %or25.i = or i32 %37, %shl24.i
  store i32 %or25.i, i32* %d.i, align 4
  %38 = load i32, i32* %d.i, align 4
  %shr.i = lshr i32 %38, 4
  %39 = load i32, i32* %c.i, align 4
  %xor.i = xor i32 %shr.i, %39
  %conv26.i = zext i32 %xor.i to i64
  %and.i = and i64 %conv26.i, 252645135
  %conv27.i = trunc i64 %and.i to i32
  store i32 %conv27.i, i32* %t.i, align 4
  %40 = load i32, i32* %t.i, align 4
  %41 = load i32, i32* %c.i, align 4
  %xor28.i = xor i32 %41, %40
  store i32 %xor28.i, i32* %c.i, align 4
  %42 = load i32, i32* %t.i, align 4
  %shl29.i = shl i32 %42, 4
  %43 = load i32, i32* %d.i, align 4
  %xor30.i = xor i32 %43, %shl29.i
  store i32 %xor30.i, i32* %d.i, align 4
  %44 = load i32, i32* %c.i, align 4
  %shl31.i = shl i32 %44, 18
  %45 = load i32, i32* %c.i, align 4
  %xor32.i = xor i32 %shl31.i, %45
  %conv33.i = zext i32 %xor32.i to i64
  %and34.i = and i64 %conv33.i, 3435921408
  %conv35.i = trunc i64 %and34.i to i32
  store i32 %conv35.i, i32* %t.i, align 4
  %46 = load i32, i32* %c.i, align 4
  %47 = load i32, i32* %t.i, align 4
  %xor36.i = xor i32 %46, %47
  %48 = load i32, i32* %t.i, align 4
  %shr37.i = lshr i32 %48, 18
  %xor38.i = xor i32 %xor36.i, %shr37.i
  store i32 %xor38.i, i32* %c.i, align 4
  %49 = load i32, i32* %d.i, align 4
  %shl39.i = shl i32 %49, 18
  %50 = load i32, i32* %d.i, align 4
  %xor40.i = xor i32 %shl39.i, %50
  %conv41.i = zext i32 %xor40.i to i64
  %and42.i = and i64 %conv41.i, 3435921408
  %conv43.i = trunc i64 %and42.i to i32
  store i32 %conv43.i, i32* %t.i, align 4
  %51 = load i32, i32* %d.i, align 4
  %52 = load i32, i32* %t.i, align 4
  %xor44.i = xor i32 %51, %52
  %53 = load i32, i32* %t.i, align 4
  %shr45.i = lshr i32 %53, 18
  %xor46.i = xor i32 %xor44.i, %shr45.i
  store i32 %xor46.i, i32* %d.i, align 4
  %54 = load i32, i32* %d.i, align 4
  %shr47.i = lshr i32 %54, 1
  %55 = load i32, i32* %c.i, align 4
  %xor48.i = xor i32 %shr47.i, %55
  %conv49.i = zext i32 %xor48.i to i64
  %and50.i = and i64 %conv49.i, 1431655765
  %conv51.i = trunc i64 %and50.i to i32
  store i32 %conv51.i, i32* %t.i, align 4
  %56 = load i32, i32* %t.i, align 4
  %57 = load i32, i32* %c.i, align 4
  %xor52.i = xor i32 %57, %56
  store i32 %xor52.i, i32* %c.i, align 4
  %58 = load i32, i32* %t.i, align 4
  %shl53.i = shl i32 %58, 1
  %59 = load i32, i32* %d.i, align 4
  %xor54.i = xor i32 %59, %shl53.i
  store i32 %xor54.i, i32* %d.i, align 4
  %60 = load i32, i32* %c.i, align 4
  %shr55.i = lshr i32 %60, 8
  %61 = load i32, i32* %d.i, align 4
  %xor56.i = xor i32 %shr55.i, %61
  %conv57.i = zext i32 %xor56.i to i64
  %and58.i = and i64 %conv57.i, 16711935
  %conv59.i = trunc i64 %and58.i to i32
  store i32 %conv59.i, i32* %t.i, align 4
  %62 = load i32, i32* %t.i, align 4
  %63 = load i32, i32* %d.i, align 4
  %xor60.i = xor i32 %63, %62
  store i32 %xor60.i, i32* %d.i, align 4
  %64 = load i32, i32* %t.i, align 4
  %shl61.i = shl i32 %64, 8
  %65 = load i32, i32* %c.i, align 4
  %xor62.i = xor i32 %65, %shl61.i
  store i32 %xor62.i, i32* %c.i, align 4
  %66 = load i32, i32* %d.i, align 4
  %shr63.i = lshr i32 %66, 1
  %67 = load i32, i32* %c.i, align 4
  %xor64.i = xor i32 %shr63.i, %67
  %conv65.i = zext i32 %xor64.i to i64
  %and66.i = and i64 %conv65.i, 1431655765
  %conv67.i = trunc i64 %and66.i to i32
  store i32 %conv67.i, i32* %t.i, align 4
  %68 = load i32, i32* %t.i, align 4
  %69 = load i32, i32* %c.i, align 4
  %xor68.i = xor i32 %69, %68
  store i32 %xor68.i, i32* %c.i, align 4
  %70 = load i32, i32* %t.i, align 4
  %shl69.i = shl i32 %70, 1
  %71 = load i32, i32* %d.i, align 4
  %xor70.i = xor i32 %71, %shl69.i
  store i32 %xor70.i, i32* %d.i, align 4
  %72 = load i32, i32* %d.i, align 4
  %conv71.i = zext i32 %72 to i64
  %and72.i = and i64 %conv71.i, 255
  %shl73.i = shl i64 %and72.i, 16
  %73 = load i32, i32* %d.i, align 4
  %conv74.i = zext i32 %73 to i64
  %and75.i = and i64 %conv74.i, 65280
  %or76.i = or i64 %shl73.i, %and75.i
  %74 = load i32, i32* %d.i, align 4
  %conv77.i = zext i32 %74 to i64
  %and78.i = and i64 %conv77.i, 16711680
  %shr79.i = ashr i64 %and78.i, 16
  %or80.i = or i64 %or76.i, %shr79.i
  %75 = load i32, i32* %c.i, align 4
  %conv81.i = zext i32 %75 to i64
  %and82.i = and i64 %conv81.i, 4026531840
  %shr83.i = ashr i64 %and82.i, 4
  %or84.i = or i64 %or80.i, %shr83.i
  %conv85.i = trunc i64 %or84.i to i32
  store i32 %conv85.i, i32* %d.i, align 4
  %76 = load i32, i32* %c.i, align 4
  %conv86.i = zext i32 %76 to i64
  %and87.i = and i64 %conv86.i, 268435455
  %conv88.i = trunc i64 %and87.i to i32
  store i32 %conv88.i, i32* %c.i, align 4
  store i32 0, i32* %i.i6, align 4
  br label %for.cond.i10

for.cond.i10:                                     ; preds = %if.end.i14, %if.end4
  %77 = load i32, i32* %i.i6, align 4
  %cmp.i9 = icmp slt i32 %77, 16
  br i1 %cmp.i9, label %for.body.i12, label %DES_set_key_unchecked.exit

for.body.i12:                                     ; preds = %for.cond.i10
  %78 = load i32, i32* %i.i6, align 4
  %idxprom.i11 = sext i32 %78 to i64
  %arrayidx90.i = getelementptr inbounds [16 x i32], [16 x i32]* @DES_set_key_unchecked.shifts2, i64 0, i64 %idxprom.i11
  %79 = load i32, i32* %arrayidx90.i, align 4
  %tobool.i = icmp ne i32 %79, 0
  br i1 %tobool.i, label %if.then.i13, label %if.else.i

if.then.i13:                                      ; preds = %for.body.i12
  %80 = load i32, i32* %c.i, align 4
  %shr91.i = lshr i32 %80, 2
  %81 = load i32, i32* %c.i, align 4
  %shl92.i = shl i32 %81, 26
  %or93.i = or i32 %shr91.i, %shl92.i
  store i32 %or93.i, i32* %c.i, align 4
  %82 = load i32, i32* %d.i, align 4
  %shr94.i = lshr i32 %82, 2
  %83 = load i32, i32* %d.i, align 4
  %shl95.i = shl i32 %83, 26
  %or96.i = or i32 %shr94.i, %shl95.i
  store i32 %or96.i, i32* %d.i, align 4
  br label %if.end.i14

if.else.i:                                        ; preds = %for.body.i12
  %84 = load i32, i32* %c.i, align 4
  %shr97.i = lshr i32 %84, 1
  %85 = load i32, i32* %c.i, align 4
  %shl98.i = shl i32 %85, 27
  %or99.i = or i32 %shr97.i, %shl98.i
  store i32 %or99.i, i32* %c.i, align 4
  %86 = load i32, i32* %d.i, align 4
  %shr100.i = lshr i32 %86, 1
  %87 = load i32, i32* %d.i, align 4
  %shl101.i = shl i32 %87, 27
  %or102.i = or i32 %shr100.i, %shl101.i
  store i32 %or102.i, i32* %d.i, align 4
  br label %if.end.i14

if.end.i14:                                       ; preds = %if.else.i, %if.then.i13
  %88 = load i32, i32* %c.i, align 4
  %conv103.i = zext i32 %88 to i64
  %and104.i = and i64 %conv103.i, 268435455
  %conv105.i = trunc i64 %and104.i to i32
  store i32 %conv105.i, i32* %c.i, align 4
  %89 = load i32, i32* %d.i, align 4
  %conv106.i = zext i32 %89 to i64
  %and107.i = and i64 %conv106.i, 268435455
  %conv108.i = trunc i64 %and107.i to i32
  store i32 %conv108.i, i32* %d.i, align 4
  %90 = load i32, i32* %c.i, align 4
  %and109.i = and i32 %90, 63
  %idxprom110.i = zext i32 %and109.i to i64
  %arrayidx111.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 0), i64 0, i64 %idxprom110.i
  %91 = load i32, i32* %arrayidx111.i, align 4
  %92 = load i32, i32* %c.i, align 4
  %shr112.i = lshr i32 %92, 6
  %and113.i = and i32 %shr112.i, 3
  %93 = load i32, i32* %c.i, align 4
  %shr114.i = lshr i32 %93, 7
  %and115.i = and i32 %shr114.i, 60
  %or116.i = or i32 %and113.i, %and115.i
  %idxprom117.i = zext i32 %or116.i to i64
  %arrayidx118.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 1), i64 0, i64 %idxprom117.i
  %94 = load i32, i32* %arrayidx118.i, align 4
  %or119.i = or i32 %91, %94
  %95 = load i32, i32* %c.i, align 4
  %shr120.i = lshr i32 %95, 13
  %and121.i = and i32 %shr120.i, 15
  %96 = load i32, i32* %c.i, align 4
  %shr122.i = lshr i32 %96, 14
  %and123.i = and i32 %shr122.i, 48
  %or124.i = or i32 %and121.i, %and123.i
  %idxprom125.i = zext i32 %or124.i to i64
  %arrayidx126.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 2), i64 0, i64 %idxprom125.i
  %97 = load i32, i32* %arrayidx126.i, align 4
  %or127.i = or i32 %or119.i, %97
  %98 = load i32, i32* %c.i, align 4
  %shr128.i = lshr i32 %98, 20
  %and129.i = and i32 %shr128.i, 1
  %99 = load i32, i32* %c.i, align 4
  %shr130.i = lshr i32 %99, 21
  %and131.i = and i32 %shr130.i, 6
  %or132.i = or i32 %and129.i, %and131.i
  %100 = load i32, i32* %c.i, align 4
  %shr133.i = lshr i32 %100, 22
  %and134.i = and i32 %shr133.i, 56
  %or135.i = or i32 %or132.i, %and134.i
  %idxprom136.i = zext i32 %or135.i to i64
  %arrayidx137.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 3), i64 0, i64 %idxprom136.i
  %101 = load i32, i32* %arrayidx137.i, align 4
  %or138.i = or i32 %or127.i, %101
  store i32 %or138.i, i32* %s.i, align 4
  %102 = load i32, i32* %d.i, align 4
  %and139.i = and i32 %102, 63
  %idxprom140.i = zext i32 %and139.i to i64
  %arrayidx141.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 4), i64 0, i64 %idxprom140.i
  %103 = load i32, i32* %arrayidx141.i, align 4
  %104 = load i32, i32* %d.i, align 4
  %shr142.i = lshr i32 %104, 7
  %and143.i = and i32 %shr142.i, 3
  %105 = load i32, i32* %d.i, align 4
  %shr144.i = lshr i32 %105, 8
  %and145.i = and i32 %shr144.i, 60
  %or146.i = or i32 %and143.i, %and145.i
  %idxprom147.i = zext i32 %or146.i to i64
  %arrayidx148.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 5), i64 0, i64 %idxprom147.i
  %106 = load i32, i32* %arrayidx148.i, align 4
  %or149.i = or i32 %103, %106
  %107 = load i32, i32* %d.i, align 4
  %shr150.i = lshr i32 %107, 15
  %and151.i = and i32 %shr150.i, 63
  %idxprom152.i = zext i32 %and151.i to i64
  %arrayidx153.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 6), i64 0, i64 %idxprom152.i
  %108 = load i32, i32* %arrayidx153.i, align 4
  %or154.i = or i32 %or149.i, %108
  %109 = load i32, i32* %d.i, align 4
  %shr155.i = lshr i32 %109, 21
  %and156.i = and i32 %shr155.i, 15
  %110 = load i32, i32* %d.i, align 4
  %shr157.i = lshr i32 %110, 22
  %and158.i = and i32 %shr157.i, 48
  %or159.i = or i32 %and156.i, %and158.i
  %idxprom160.i = zext i32 %or159.i to i64
  %arrayidx161.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 7), i64 0, i64 %idxprom160.i
  %111 = load i32, i32* %arrayidx161.i, align 4
  %or162.i = or i32 %or154.i, %111
  store i32 %or162.i, i32* %t.i, align 4
  %112 = load i32, i32* %t.i, align 4
  %shl163.i = shl i32 %112, 16
  %conv164.i = zext i32 %shl163.i to i64
  %113 = load i32, i32* %s.i, align 4
  %conv165.i = zext i32 %113 to i64
  %and166.i = and i64 %conv165.i, 65535
  %or167.i = or i64 %conv164.i, %and166.i
  %and168.i = and i64 %or167.i, 4294967295
  %conv169.i = trunc i64 %and168.i to i32
  store i32 %conv169.i, i32* %t2.i, align 4
  %114 = load i32, i32* %t2.i, align 4
  %115 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 30, i32 %114) #5, !srcloc !74
  store i32 %115, i32* %ret.i, align 4
  %116 = load i32, i32* %ret.i, align 4
  store i32 %116, i32* %tmp.i, align 4
  %117 = load i32, i32* %tmp.i, align 4
  %conv170.i = zext i32 %117 to i64
  %and171.i = and i64 %conv170.i, 4294967295
  %conv172.i = trunc i64 %and171.i to i32
  %118 = load i32*, i32** %k.i, align 8
  %incdec.ptr173.i = getelementptr inbounds i32, i32* %118, i32 1
  store i32* %incdec.ptr173.i, i32** %k.i, align 8
  store i32 %conv172.i, i32* %118, align 4
  %119 = load i32, i32* %s.i, align 4
  %shr174.i = lshr i32 %119, 16
  %conv175.i = zext i32 %shr174.i to i64
  %120 = load i32, i32* %t.i, align 4
  %conv176.i = zext i32 %120 to i64
  %and177.i = and i64 %conv176.i, 4294901760
  %or178.i = or i64 %conv175.i, %and177.i
  %conv179.i = trunc i64 %or178.i to i32
  store i32 %conv179.i, i32* %t2.i, align 4
  %121 = load i32, i32* %t2.i, align 4
  %122 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 26, i32 %121) #5, !srcloc !75
  store i32 %122, i32* %ret180.i, align 4
  %123 = load i32, i32* %ret180.i, align 4
  store i32 %123, i32* %tmp181.i, align 4
  %124 = load i32, i32* %tmp181.i, align 4
  %conv182.i = zext i32 %124 to i64
  %and183.i = and i64 %conv182.i, 4294967295
  %conv184.i = trunc i64 %and183.i to i32
  %125 = load i32*, i32** %k.i, align 8
  %incdec.ptr185.i = getelementptr inbounds i32, i32* %125, i32 1
  store i32* %incdec.ptr185.i, i32** %k.i, align 8
  store i32 %conv184.i, i32* %125, align 4
  %126 = load i32, i32* %i.i6, align 4
  %inc.i15 = add nsw i32 %126, 1
  store i32 %inc.i15, i32* %i.i6, align 4
  br label %for.cond.i10

DES_set_key_unchecked.exit:                       ; preds = %for.cond.i10
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %DES_set_key_unchecked.exit, %if.then3, %if.then
  %127 = load i32, i32* %retval, align 4
  ret i32 %127
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @DES_set_key_unchecked([8 x i8]* %key, %struct.DES_ks* %schedule) #0 {
entry:
  %key.addr = alloca [8 x i8]*, align 8
  %schedule.addr = alloca %struct.DES_ks*, align 8
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %t = alloca i32, align 4
  %s = alloca i32, align 4
  %t2 = alloca i32, align 4
  %in = alloca i8*, align 8
  %k = alloca i32*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ret180 = alloca i32, align 4
  %tmp181 = alloca i32, align 4
  store [8 x i8]* %key, [8 x i8]** %key.addr, align 8
  store %struct.DES_ks* %schedule, %struct.DES_ks** %schedule.addr, align 8
  %0 = load %struct.DES_ks*, %struct.DES_ks** %schedule.addr, align 8
  %ks = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %0, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks, i64 0, i64 0
  %deslong = bitcast %union.anon* %arraydecay to [2 x i32]*
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %deslong, i64 0, i64 0
  store i32* %arrayidx, i32** %k, align 8
  %1 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  %arrayidx1 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  store i8* %arrayidx1, i8** %in, align 8
  %2 = load i8*, i8** %in, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1
  store i8* %incdec.ptr, i8** %in, align 8
  %3 = load i8, i8* %2, align 1
  %conv = zext i8 %3 to i32
  store i32 %conv, i32* %c, align 4
  %4 = load i8*, i8** %in, align 8
  %incdec.ptr2 = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr2, i8** %in, align 8
  %5 = load i8, i8* %4, align 1
  %conv3 = zext i8 %5 to i32
  %shl = shl i32 %conv3, 8
  %6 = load i32, i32* %c, align 4
  %or = or i32 %6, %shl
  store i32 %or, i32* %c, align 4
  %7 = load i8*, i8** %in, align 8
  %incdec.ptr4 = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr4, i8** %in, align 8
  %8 = load i8, i8* %7, align 1
  %conv5 = zext i8 %8 to i32
  %shl6 = shl i32 %conv5, 16
  %9 = load i32, i32* %c, align 4
  %or7 = or i32 %9, %shl6
  store i32 %or7, i32* %c, align 4
  %10 = load i8*, i8** %in, align 8
  %incdec.ptr8 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr8, i8** %in, align 8
  %11 = load i8, i8* %10, align 1
  %conv9 = zext i8 %11 to i32
  %shl10 = shl i32 %conv9, 24
  %12 = load i32, i32* %c, align 4
  %or11 = or i32 %12, %shl10
  store i32 %or11, i32* %c, align 4
  %13 = load i8*, i8** %in, align 8
  %incdec.ptr12 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr12, i8** %in, align 8
  %14 = load i8, i8* %13, align 1
  %conv13 = zext i8 %14 to i32
  store i32 %conv13, i32* %d, align 4
  %15 = load i8*, i8** %in, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr14, i8** %in, align 8
  %16 = load i8, i8* %15, align 1
  %conv15 = zext i8 %16 to i32
  %shl16 = shl i32 %conv15, 8
  %17 = load i32, i32* %d, align 4
  %or17 = or i32 %17, %shl16
  store i32 %or17, i32* %d, align 4
  %18 = load i8*, i8** %in, align 8
  %incdec.ptr18 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr18, i8** %in, align 8
  %19 = load i8, i8* %18, align 1
  %conv19 = zext i8 %19 to i32
  %shl20 = shl i32 %conv19, 16
  %20 = load i32, i32* %d, align 4
  %or21 = or i32 %20, %shl20
  store i32 %or21, i32* %d, align 4
  %21 = load i8*, i8** %in, align 8
  %incdec.ptr22 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr22, i8** %in, align 8
  %22 = load i8, i8* %21, align 1
  %conv23 = zext i8 %22 to i32
  %shl24 = shl i32 %conv23, 24
  %23 = load i32, i32* %d, align 4
  %or25 = or i32 %23, %shl24
  store i32 %or25, i32* %d, align 4
  %24 = load i32, i32* %d, align 4
  %shr = lshr i32 %24, 4
  %25 = load i32, i32* %c, align 4
  %xor = xor i32 %shr, %25
  %conv26 = zext i32 %xor to i64
  %and = and i64 %conv26, 252645135
  %conv27 = trunc i64 %and to i32
  store i32 %conv27, i32* %t, align 4
  %26 = load i32, i32* %t, align 4
  %27 = load i32, i32* %c, align 4
  %xor28 = xor i32 %27, %26
  store i32 %xor28, i32* %c, align 4
  %28 = load i32, i32* %t, align 4
  %shl29 = shl i32 %28, 4
  %29 = load i32, i32* %d, align 4
  %xor30 = xor i32 %29, %shl29
  store i32 %xor30, i32* %d, align 4
  %30 = load i32, i32* %c, align 4
  %shl31 = shl i32 %30, 18
  %31 = load i32, i32* %c, align 4
  %xor32 = xor i32 %shl31, %31
  %conv33 = zext i32 %xor32 to i64
  %and34 = and i64 %conv33, 3435921408
  %conv35 = trunc i64 %and34 to i32
  store i32 %conv35, i32* %t, align 4
  %32 = load i32, i32* %c, align 4
  %33 = load i32, i32* %t, align 4
  %xor36 = xor i32 %32, %33
  %34 = load i32, i32* %t, align 4
  %shr37 = lshr i32 %34, 18
  %xor38 = xor i32 %xor36, %shr37
  store i32 %xor38, i32* %c, align 4
  %35 = load i32, i32* %d, align 4
  %shl39 = shl i32 %35, 18
  %36 = load i32, i32* %d, align 4
  %xor40 = xor i32 %shl39, %36
  %conv41 = zext i32 %xor40 to i64
  %and42 = and i64 %conv41, 3435921408
  %conv43 = trunc i64 %and42 to i32
  store i32 %conv43, i32* %t, align 4
  %37 = load i32, i32* %d, align 4
  %38 = load i32, i32* %t, align 4
  %xor44 = xor i32 %37, %38
  %39 = load i32, i32* %t, align 4
  %shr45 = lshr i32 %39, 18
  %xor46 = xor i32 %xor44, %shr45
  store i32 %xor46, i32* %d, align 4
  %40 = load i32, i32* %d, align 4
  %shr47 = lshr i32 %40, 1
  %41 = load i32, i32* %c, align 4
  %xor48 = xor i32 %shr47, %41
  %conv49 = zext i32 %xor48 to i64
  %and50 = and i64 %conv49, 1431655765
  %conv51 = trunc i64 %and50 to i32
  store i32 %conv51, i32* %t, align 4
  %42 = load i32, i32* %t, align 4
  %43 = load i32, i32* %c, align 4
  %xor52 = xor i32 %43, %42
  store i32 %xor52, i32* %c, align 4
  %44 = load i32, i32* %t, align 4
  %shl53 = shl i32 %44, 1
  %45 = load i32, i32* %d, align 4
  %xor54 = xor i32 %45, %shl53
  store i32 %xor54, i32* %d, align 4
  %46 = load i32, i32* %c, align 4
  %shr55 = lshr i32 %46, 8
  %47 = load i32, i32* %d, align 4
  %xor56 = xor i32 %shr55, %47
  %conv57 = zext i32 %xor56 to i64
  %and58 = and i64 %conv57, 16711935
  %conv59 = trunc i64 %and58 to i32
  store i32 %conv59, i32* %t, align 4
  %48 = load i32, i32* %t, align 4
  %49 = load i32, i32* %d, align 4
  %xor60 = xor i32 %49, %48
  store i32 %xor60, i32* %d, align 4
  %50 = load i32, i32* %t, align 4
  %shl61 = shl i32 %50, 8
  %51 = load i32, i32* %c, align 4
  %xor62 = xor i32 %51, %shl61
  store i32 %xor62, i32* %c, align 4
  %52 = load i32, i32* %d, align 4
  %shr63 = lshr i32 %52, 1
  %53 = load i32, i32* %c, align 4
  %xor64 = xor i32 %shr63, %53
  %conv65 = zext i32 %xor64 to i64
  %and66 = and i64 %conv65, 1431655765
  %conv67 = trunc i64 %and66 to i32
  store i32 %conv67, i32* %t, align 4
  %54 = load i32, i32* %t, align 4
  %55 = load i32, i32* %c, align 4
  %xor68 = xor i32 %55, %54
  store i32 %xor68, i32* %c, align 4
  %56 = load i32, i32* %t, align 4
  %shl69 = shl i32 %56, 1
  %57 = load i32, i32* %d, align 4
  %xor70 = xor i32 %57, %shl69
  store i32 %xor70, i32* %d, align 4
  %58 = load i32, i32* %d, align 4
  %conv71 = zext i32 %58 to i64
  %and72 = and i64 %conv71, 255
  %shl73 = shl i64 %and72, 16
  %59 = load i32, i32* %d, align 4
  %conv74 = zext i32 %59 to i64
  %and75 = and i64 %conv74, 65280
  %or76 = or i64 %shl73, %and75
  %60 = load i32, i32* %d, align 4
  %conv77 = zext i32 %60 to i64
  %and78 = and i64 %conv77, 16711680
  %shr79 = ashr i64 %and78, 16
  %or80 = or i64 %or76, %shr79
  %61 = load i32, i32* %c, align 4
  %conv81 = zext i32 %61 to i64
  %and82 = and i64 %conv81, 4026531840
  %shr83 = ashr i64 %and82, 4
  %or84 = or i64 %or80, %shr83
  %conv85 = trunc i64 %or84 to i32
  store i32 %conv85, i32* %d, align 4
  %62 = load i32, i32* %c, align 4
  %conv86 = zext i32 %62 to i64
  %and87 = and i64 %conv86, 268435455
  %conv88 = trunc i64 %and87 to i32
  store i32 %conv88, i32* %c, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %63 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %63, 16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %64 = load i32, i32* %i, align 4
  %idxprom = sext i32 %64 to i64
  %arrayidx90 = getelementptr inbounds [16 x i32], [16 x i32]* @DES_set_key_unchecked.shifts2, i64 0, i64 %idxprom
  %65 = load i32, i32* %arrayidx90, align 4
  %tobool = icmp ne i32 %65, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %66 = load i32, i32* %c, align 4
  %shr91 = lshr i32 %66, 2
  %67 = load i32, i32* %c, align 4
  %shl92 = shl i32 %67, 26
  %or93 = or i32 %shr91, %shl92
  store i32 %or93, i32* %c, align 4
  %68 = load i32, i32* %d, align 4
  %shr94 = lshr i32 %68, 2
  %69 = load i32, i32* %d, align 4
  %shl95 = shl i32 %69, 26
  %or96 = or i32 %shr94, %shl95
  store i32 %or96, i32* %d, align 4
  br label %if.end

if.else:                                          ; preds = %for.body
  %70 = load i32, i32* %c, align 4
  %shr97 = lshr i32 %70, 1
  %71 = load i32, i32* %c, align 4
  %shl98 = shl i32 %71, 27
  %or99 = or i32 %shr97, %shl98
  store i32 %or99, i32* %c, align 4
  %72 = load i32, i32* %d, align 4
  %shr100 = lshr i32 %72, 1
  %73 = load i32, i32* %d, align 4
  %shl101 = shl i32 %73, 27
  %or102 = or i32 %shr100, %shl101
  store i32 %or102, i32* %d, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %74 = load i32, i32* %c, align 4
  %conv103 = zext i32 %74 to i64
  %and104 = and i64 %conv103, 268435455
  %conv105 = trunc i64 %and104 to i32
  store i32 %conv105, i32* %c, align 4
  %75 = load i32, i32* %d, align 4
  %conv106 = zext i32 %75 to i64
  %and107 = and i64 %conv106, 268435455
  %conv108 = trunc i64 %and107 to i32
  store i32 %conv108, i32* %d, align 4
  %76 = load i32, i32* %c, align 4
  %and109 = and i32 %76, 63
  %idxprom110 = zext i32 %and109 to i64
  %arrayidx111 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 0), i64 0, i64 %idxprom110
  %77 = load i32, i32* %arrayidx111, align 4
  %78 = load i32, i32* %c, align 4
  %shr112 = lshr i32 %78, 6
  %and113 = and i32 %shr112, 3
  %79 = load i32, i32* %c, align 4
  %shr114 = lshr i32 %79, 7
  %and115 = and i32 %shr114, 60
  %or116 = or i32 %and113, %and115
  %idxprom117 = zext i32 %or116 to i64
  %arrayidx118 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 1), i64 0, i64 %idxprom117
  %80 = load i32, i32* %arrayidx118, align 4
  %or119 = or i32 %77, %80
  %81 = load i32, i32* %c, align 4
  %shr120 = lshr i32 %81, 13
  %and121 = and i32 %shr120, 15
  %82 = load i32, i32* %c, align 4
  %shr122 = lshr i32 %82, 14
  %and123 = and i32 %shr122, 48
  %or124 = or i32 %and121, %and123
  %idxprom125 = zext i32 %or124 to i64
  %arrayidx126 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 2), i64 0, i64 %idxprom125
  %83 = load i32, i32* %arrayidx126, align 4
  %or127 = or i32 %or119, %83
  %84 = load i32, i32* %c, align 4
  %shr128 = lshr i32 %84, 20
  %and129 = and i32 %shr128, 1
  %85 = load i32, i32* %c, align 4
  %shr130 = lshr i32 %85, 21
  %and131 = and i32 %shr130, 6
  %or132 = or i32 %and129, %and131
  %86 = load i32, i32* %c, align 4
  %shr133 = lshr i32 %86, 22
  %and134 = and i32 %shr133, 56
  %or135 = or i32 %or132, %and134
  %idxprom136 = zext i32 %or135 to i64
  %arrayidx137 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 3), i64 0, i64 %idxprom136
  %87 = load i32, i32* %arrayidx137, align 4
  %or138 = or i32 %or127, %87
  store i32 %or138, i32* %s, align 4
  %88 = load i32, i32* %d, align 4
  %and139 = and i32 %88, 63
  %idxprom140 = zext i32 %and139 to i64
  %arrayidx141 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 4), i64 0, i64 %idxprom140
  %89 = load i32, i32* %arrayidx141, align 4
  %90 = load i32, i32* %d, align 4
  %shr142 = lshr i32 %90, 7
  %and143 = and i32 %shr142, 3
  %91 = load i32, i32* %d, align 4
  %shr144 = lshr i32 %91, 8
  %and145 = and i32 %shr144, 60
  %or146 = or i32 %and143, %and145
  %idxprom147 = zext i32 %or146 to i64
  %arrayidx148 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 5), i64 0, i64 %idxprom147
  %92 = load i32, i32* %arrayidx148, align 4
  %or149 = or i32 %89, %92
  %93 = load i32, i32* %d, align 4
  %shr150 = lshr i32 %93, 15
  %and151 = and i32 %shr150, 63
  %idxprom152 = zext i32 %and151 to i64
  %arrayidx153 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 6), i64 0, i64 %idxprom152
  %94 = load i32, i32* %arrayidx153, align 4
  %or154 = or i32 %or149, %94
  %95 = load i32, i32* %d, align 4
  %shr155 = lshr i32 %95, 21
  %and156 = and i32 %shr155, 15
  %96 = load i32, i32* %d, align 4
  %shr157 = lshr i32 %96, 22
  %and158 = and i32 %shr157, 48
  %or159 = or i32 %and156, %and158
  %idxprom160 = zext i32 %or159 to i64
  %arrayidx161 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @des_skb, i64 0, i64 7), i64 0, i64 %idxprom160
  %97 = load i32, i32* %arrayidx161, align 4
  %or162 = or i32 %or154, %97
  store i32 %or162, i32* %t, align 4
  %98 = load i32, i32* %t, align 4
  %shl163 = shl i32 %98, 16
  %conv164 = zext i32 %shl163 to i64
  %99 = load i32, i32* %s, align 4
  %conv165 = zext i32 %99 to i64
  %and166 = and i64 %conv165, 65535
  %or167 = or i64 %conv164, %and166
  %and168 = and i64 %or167, 4294967295
  %conv169 = trunc i64 %and168 to i32
  store i32 %conv169, i32* %t2, align 4
  %100 = load i32, i32* %t2, align 4
  %101 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 30, i32 %100) #5, !srcloc !74
  store i32 %101, i32* %ret, align 4
  %102 = load i32, i32* %ret, align 4
  store i32 %102, i32* %tmp, align 4
  %103 = load i32, i32* %tmp, align 4
  %conv170 = zext i32 %103 to i64
  %and171 = and i64 %conv170, 4294967295
  %conv172 = trunc i64 %and171 to i32
  %104 = load i32*, i32** %k, align 8
  %incdec.ptr173 = getelementptr inbounds i32, i32* %104, i32 1
  store i32* %incdec.ptr173, i32** %k, align 8
  store i32 %conv172, i32* %104, align 4
  %105 = load i32, i32* %s, align 4
  %shr174 = lshr i32 %105, 16
  %conv175 = zext i32 %shr174 to i64
  %106 = load i32, i32* %t, align 4
  %conv176 = zext i32 %106 to i64
  %and177 = and i64 %conv176, 4294901760
  %or178 = or i64 %conv175, %and177
  %conv179 = trunc i64 %or178 to i32
  store i32 %conv179, i32* %t2, align 4
  %107 = load i32, i32* %t2, align 4
  %108 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 26, i32 %107) #5, !srcloc !75
  store i32 %108, i32* %ret180, align 4
  %109 = load i32, i32* %ret180, align 4
  store i32 %109, i32* %tmp181, align 4
  %110 = load i32, i32* %tmp181, align 4
  %conv182 = zext i32 %110 to i64
  %and183 = and i64 %conv182, 4294967295
  %conv184 = trunc i64 %and183 to i32
  %111 = load i32*, i32** %k, align 8
  %incdec.ptr185 = getelementptr inbounds i32, i32* %111, i32 1
  store i32* %incdec.ptr185, i32** %k, align 8
  store i32 %conv184, i32* %111, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %112 = load i32, i32* %i, align 4
  %inc = add nsw i32 %112, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @DES_key_sched([8 x i8]* %key, %struct.DES_ks* %schedule) #0 {
entry:
  %key.addr = alloca [8 x i8]*, align 8
  %schedule.addr = alloca %struct.DES_ks*, align 8
  store [8 x i8]* %key, [8 x i8]** %key.addr, align 8
  store %struct.DES_ks* %schedule, %struct.DES_ks** %schedule.addr, align 8
  %0 = load [8 x i8]*, [8 x i8]** %key.addr, align 8
  %1 = load %struct.DES_ks*, %struct.DES_ks** %schedule.addr, align 8
  %call = call i32 @DES_set_key([8 x i8]* %0, %struct.DES_ks* %1)
  ret i32 %call
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @printDDep(i32 %ID1, i32 %ID2) #1 {
entry:
  %ID1.addr = alloca i32, align 4
  %ID2.addr = alloca i32, align 4
  store i32 %ID1, i32* %ID1.addr, align 4
  store i32 %ID2, i32* %ID2.addr, align 4
  %0 = load i32, i32* %ID1.addr, align 4
  %1 = load i32, i32* %ID2.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 %0, i32 %1)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @printCDep(i32 %ID1, i32 %ID2) #1 {
entry:
  %ID1.addr = alloca i32, align 4
  %ID2.addr = alloca i32, align 4
  store i32 %ID1, i32* %ID1.addr, align 4
  store i32 %ID2, i32* %ID2.addr, align 4
  %0 = load i32, i32* %ID1.addr, align 4
  %1 = load i32, i32* %ID2.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 %0, i32 %1)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @printStoreAddr(i64 %addr, i32 %ID, i32 %LineLoc, i32 %ColLoc) #1 {
entry:
  %addr.addr = alloca i64, align 8
  %ID.addr = alloca i32, align 4
  %LineLoc.addr = alloca i32, align 4
  %ColLoc.addr = alloca i32, align 4
  store i64 %addr, i64* %addr.addr, align 8
  store i32 %ID, i32* %ID.addr, align 4
  store i32 %LineLoc, i32* %LineLoc.addr, align 4
  store i32 %ColLoc, i32* %ColLoc.addr, align 4
  %0 = load i64, i64* %addr.addr, align 8
  %1 = load i32, i32* %ID.addr, align 4
  %2 = load i32, i32* %LineLoc.addr, align 4
  %3 = load i32, i32* %ColLoc.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i64 %0, i32 %1, i32 %2, i32 %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @printLoadAddr(i64 %addr, i32 %ID, i32 %LineLoc, i32 %ColLoc) #1 {
entry:
  %addr.addr = alloca i64, align 8
  %ID.addr = alloca i32, align 4
  %LineLoc.addr = alloca i32, align 4
  %ColLoc.addr = alloca i32, align 4
  store i64 %addr, i64* %addr.addr, align 8
  store i32 %ID, i32* %ID.addr, align 4
  store i32 %LineLoc, i32* %LineLoc.addr, align 4
  store i32 %ColLoc, i32* %ColLoc.addr, align 4
  %0 = load i64, i64* %addr.addr, align 8
  %1 = load i32, i32* %ID.addr, align 4
  %2 = load i32, i32* %LineLoc.addr, align 4
  %3 = load i32, i32* %ColLoc.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i64 %0, i32 %1, i32 %2, i32 %3)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

attributes #0 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 -2146870789}
!3 = !{i32 -2146870433}
!4 = !{i32 -2146869543}
!5 = !{i32 -2146868654}
!6 = !{i32 -2146867765}
!7 = !{i32 -2146866876}
!8 = !{i32 -2146865987}
!9 = !{i32 -2146865094}
!10 = !{i32 -2146864201}
!11 = !{i32 -2146863308}
!12 = !{i32 -2146862415}
!13 = !{i32 -2146861522}
!14 = !{i32 -2146860629}
!15 = !{i32 -2146859736}
!16 = !{i32 -2146858843}
!17 = !{i32 -2146857950}
!18 = !{i32 -2146857057}
!19 = !{i32 -2146856164}
!20 = !{i32 -2146855271}
!21 = !{i32 -2146854378}
!22 = !{i32 -2146853485}
!23 = !{i32 -2146852592}
!24 = !{i32 -2146851699}
!25 = !{i32 -2146850806}
!26 = !{i32 -2146849913}
!27 = !{i32 -2146849020}
!28 = !{i32 -2146848127}
!29 = !{i32 -2146847234}
!30 = !{i32 -2146846341}
!31 = !{i32 -2146845452}
!32 = !{i32 -2146844563}
!33 = !{i32 -2146843674}
!34 = !{i32 -2146842785}
!35 = !{i32 -2146841896}
!36 = !{i32 -2146841541}
!37 = !{i32 -2146841186}
!38 = !{i32 -2146840018}
!39 = !{i32 -2146839662}
!40 = !{i32 -2146838772}
!41 = !{i32 -2146837883}
!42 = !{i32 -2146836994}
!43 = !{i32 -2146836105}
!44 = !{i32 -2146835216}
!45 = !{i32 -2146834323}
!46 = !{i32 -2146833430}
!47 = !{i32 -2146832537}
!48 = !{i32 -2146831644}
!49 = !{i32 -2146830751}
!50 = !{i32 -2146829858}
!51 = !{i32 -2146828965}
!52 = !{i32 -2146828072}
!53 = !{i32 -2146827179}
!54 = !{i32 -2146826286}
!55 = !{i32 -2146825393}
!56 = !{i32 -2146824500}
!57 = !{i32 -2146823607}
!58 = !{i32 -2146822714}
!59 = !{i32 -2146821821}
!60 = !{i32 -2146820928}
!61 = !{i32 -2146820035}
!62 = !{i32 -2146819142}
!63 = !{i32 -2146818249}
!64 = !{i32 -2146817356}
!65 = !{i32 -2146816463}
!66 = !{i32 -2146815570}
!67 = !{i32 -2146814681}
!68 = !{i32 -2146813792}
!69 = !{i32 -2146812903}
!70 = !{i32 -2146812014}
!71 = !{i32 -2146811125}
!72 = !{i32 -2146810770}
!73 = !{i32 -2146810415}
!74 = !{i32 -2146873106}
!75 = !{i32 -2146872749}
