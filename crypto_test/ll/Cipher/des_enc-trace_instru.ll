; ModuleID = 'bc/Cipher/des_enc-trace_instru.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.DES_ks = type { [16 x %union.anon] }
%union.anon = type { [2 x i32] }

@DES_SPtrans = dso_local constant [8 x [64 x i32]] [[64 x i32] [i32 34080768, i32 524288, i32 33554434, i32 34080770, i32 33554432, i32 526338, i32 524290, i32 33554434, i32 526338, i32 34080768, i32 34078720, i32 2050, i32 33556482, i32 33554432, i32 0, i32 524290, i32 524288, i32 2, i32 33556480, i32 526336, i32 34080770, i32 34078720, i32 2050, i32 33556480, i32 2, i32 2048, i32 526336, i32 34078722, i32 2048, i32 33556482, i32 34078722, i32 0, i32 0, i32 34080770, i32 33556480, i32 524290, i32 34080768, i32 524288, i32 2050, i32 33556480, i32 34078722, i32 2048, i32 526336, i32 33554434, i32 526338, i32 2, i32 33554434, i32 34078720, i32 34080770, i32 526336, i32 34078720, i32 33556482, i32 33554432, i32 2050, i32 524290, i32 0, i32 524288, i32 33554432, i32 33556482, i32 34080768, i32 2, i32 34078722, i32 2048, i32 526338], [64 x i32] [i32 1074823184, i32 0, i32 1081344, i32 1074790400, i32 1073741840, i32 32784, i32 1073774592, i32 1081344, i32 32768, i32 1074790416, i32 16, i32 1073774592, i32 1048592, i32 1074823168, i32 1074790400, i32 16, i32 1048576, i32 1073774608, i32 1074790416, i32 32768, i32 1081360, i32 1073741824, i32 0, i32 1048592, i32 1073774608, i32 1081360, i32 1074823168, i32 1073741840, i32 1073741824, i32 1048576, i32 32784, i32 1074823184, i32 1048592, i32 1074823168, i32 1073774592, i32 1081360, i32 1074823184, i32 1048592, i32 1073741840, i32 0, i32 1073741824, i32 32784, i32 1048576, i32 1074790416, i32 32768, i32 1073741824, i32 1081360, i32 1073774608, i32 1074823168, i32 32768, i32 0, i32 1073741840, i32 16, i32 1074823184, i32 1081344, i32 1074790400, i32 1074790416, i32 1048576, i32 32784, i32 1073774592, i32 1073774608, i32 16, i32 1074790400, i32 1081344], [64 x i32] [i32 67108865, i32 67371264, i32 256, i32 67109121, i32 262145, i32 67108864, i32 67109121, i32 262400, i32 67109120, i32 262144, i32 67371008, i32 1, i32 67371265, i32 257, i32 1, i32 67371009, i32 0, i32 262145, i32 67371264, i32 256, i32 257, i32 67371265, i32 262144, i32 67108865, i32 67371009, i32 67109120, i32 262401, i32 67371008, i32 262400, i32 0, i32 67108864, i32 262401, i32 67371264, i32 256, i32 1, i32 262144, i32 257, i32 262145, i32 67371008, i32 67109121, i32 0, i32 67371264, i32 262400, i32 67371009, i32 262145, i32 67108864, i32 67371265, i32 1, i32 262401, i32 67108865, i32 67108864, i32 67371265, i32 262144, i32 67109120, i32 67109121, i32 262400, i32 67109120, i32 0, i32 67371009, i32 257, i32 67108865, i32 262401, i32 256, i32 67371008], [64 x i32] [i32 4198408, i32 268439552, i32 8, i32 272633864, i32 0, i32 272629760, i32 268439560, i32 4194312, i32 272633856, i32 268435464, i32 268435456, i32 4104, i32 268435464, i32 4198408, i32 4194304, i32 268435456, i32 272629768, i32 4198400, i32 4096, i32 8, i32 4198400, i32 268439560, i32 272629760, i32 4096, i32 4104, i32 0, i32 4194312, i32 272633856, i32 268439552, i32 272629768, i32 272633864, i32 4194304, i32 272629768, i32 4104, i32 4194304, i32 268435464, i32 4198400, i32 268439552, i32 8, i32 272629760, i32 268439560, i32 0, i32 4096, i32 4194312, i32 0, i32 272629768, i32 272633856, i32 4096, i32 268435456, i32 272633864, i32 4198408, i32 4194304, i32 272633864, i32 8, i32 268439552, i32 4198408, i32 4194312, i32 4198400, i32 272629760, i32 268439560, i32 4104, i32 268435456, i32 268435464, i32 272633856], [64 x i32] [i32 134217728, i32 65536, i32 1024, i32 134284320, i32 134283296, i32 134218752, i32 66592, i32 134283264, i32 65536, i32 32, i32 134217760, i32 66560, i32 134218784, i32 134283296, i32 134284288, i32 0, i32 66560, i32 134217728, i32 65568, i32 1056, i32 134218752, i32 66592, i32 0, i32 134217760, i32 32, i32 134218784, i32 134284320, i32 65568, i32 134283264, i32 1024, i32 1056, i32 134284288, i32 134284288, i32 134218784, i32 65568, i32 134283264, i32 65536, i32 32, i32 134217760, i32 134218752, i32 134217728, i32 66560, i32 134284320, i32 0, i32 66592, i32 134217728, i32 1024, i32 65568, i32 134218784, i32 1024, i32 0, i32 134284320, i32 134283296, i32 134284288, i32 1056, i32 65536, i32 66560, i32 134283296, i32 134218752, i32 1056, i32 32, i32 66592, i32 134283264, i32 134217760], [64 x i32] [i32 -2147483584, i32 2097216, i32 0, i32 -2145378304, i32 2097216, i32 8192, i32 -2147475392, i32 2097152, i32 8256, i32 -2145378240, i32 2105344, i32 -2147483648, i32 -2147475456, i32 -2147483584, i32 -2145386496, i32 2105408, i32 2097152, i32 -2147475392, i32 -2145386432, i32 0, i32 8192, i32 64, i32 -2145378304, i32 -2145386432, i32 -2145378240, i32 -2145386496, i32 -2147483648, i32 8256, i32 64, i32 2105344, i32 2105408, i32 -2147475456, i32 8256, i32 -2147483648, i32 -2147475456, i32 2105408, i32 -2145378304, i32 2097216, i32 0, i32 -2147475456, i32 -2147483648, i32 8192, i32 -2145386432, i32 2097152, i32 2097216, i32 -2145378240, i32 2105344, i32 64, i32 -2145378240, i32 2105344, i32 2097152, i32 -2147475392, i32 -2147483584, i32 -2145386496, i32 2105408, i32 0, i32 8192, i32 -2147483584, i32 -2147475392, i32 -2145378304, i32 -2145386496, i32 8256, i32 64, i32 -2145386432], [64 x i32] [i32 16384, i32 512, i32 16777728, i32 16777220, i32 16794116, i32 16388, i32 16896, i32 0, i32 16777216, i32 16777732, i32 516, i32 16793600, i32 4, i32 16794112, i32 16793600, i32 516, i32 16777732, i32 16384, i32 16388, i32 16794116, i32 0, i32 16777728, i32 16777220, i32 16896, i32 16793604, i32 16900, i32 16794112, i32 4, i32 16900, i32 16793604, i32 512, i32 16777216, i32 16900, i32 16793600, i32 16793604, i32 516, i32 16384, i32 512, i32 16777216, i32 16793604, i32 16777732, i32 16900, i32 16896, i32 0, i32 512, i32 16777220, i32 4, i32 16777728, i32 0, i32 16777732, i32 16777728, i32 16896, i32 516, i32 16384, i32 16794116, i32 16777216, i32 16794112, i32 4, i32 16388, i32 16794116, i32 16777220, i32 16794112, i32 16793600, i32 16388], [64 x i32] [i32 545259648, i32 545390592, i32 131200, i32 0, i32 537001984, i32 8388736, i32 545259520, i32 545390720, i32 128, i32 536870912, i32 8519680, i32 131200, i32 8519808, i32 537002112, i32 536871040, i32 545259520, i32 131072, i32 8519808, i32 8388736, i32 537001984, i32 545390720, i32 536871040, i32 0, i32 8519680, i32 536870912, i32 8388608, i32 537002112, i32 545259648, i32 8388608, i32 131072, i32 545390592, i32 128, i32 8388608, i32 131072, i32 536871040, i32 545390720, i32 131200, i32 536870912, i32 0, i32 8519680, i32 545259648, i32 537002112, i32 537001984, i32 8388736, i32 545390592, i32 128, i32 8388736, i32 537001984, i32 545390720, i32 8388608, i32 545259520, i32 536871040, i32 8519680, i32 131200, i32 537002112, i32 545259520, i32 128, i32 545390592, i32 8519808, i32 0, i32 536870912, i32 545259648, i32 131072, i32 8519808]], align 16, !dbg !0
@__const.main.buf = private unnamed_addr constant [8 x i8] c"01234567", align 1
@__const.main.key = private unnamed_addr constant [8 x i8] c"0E329232", align 1
@.str = private unnamed_addr constant [28 x i8] c"DDEP: SrcID: %d DestID: %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"CDEP: SrcID: %d DestID: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"Store: %lu ID: %d @Ln,Col: %d,%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Load: %lu ID: %d @Ln,Col: %d,%d\0A\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"InstCounter: %d\0A\00", align 1

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @DES_encrypt1(i32* %data, %struct.DES_ks* %ks, i32 %enc) #0 !dbg !22 {
entry:
  %data.addr = alloca i32*, align 8
  %ks.addr = alloca %struct.DES_ks*, align 8
  %enc.addr = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %t = alloca i32, align 4
  %u = alloca i32, align 4
  %s = alloca i32*, align 8
  %tt = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ret40 = alloca i32, align 4
  %tmp41 = alloca i32, align 4
  %ret51 = alloca i32, align 4
  %tmp52 = alloca i32, align 4
  %ret96 = alloca i32, align 4
  %tmp97 = alloca i32, align 4
  %ret142 = alloca i32, align 4
  %tmp143 = alloca i32, align 4
  %ret188 = alloca i32, align 4
  %tmp189 = alloca i32, align 4
  %ret234 = alloca i32, align 4
  %tmp235 = alloca i32, align 4
  %ret280 = alloca i32, align 4
  %tmp281 = alloca i32, align 4
  %ret326 = alloca i32, align 4
  %tmp327 = alloca i32, align 4
  %ret372 = alloca i32, align 4
  %tmp373 = alloca i32, align 4
  %ret418 = alloca i32, align 4
  %tmp419 = alloca i32, align 4
  %ret464 = alloca i32, align 4
  %tmp465 = alloca i32, align 4
  %ret510 = alloca i32, align 4
  %tmp511 = alloca i32, align 4
  %ret556 = alloca i32, align 4
  %tmp557 = alloca i32, align 4
  %ret602 = alloca i32, align 4
  %tmp603 = alloca i32, align 4
  %ret648 = alloca i32, align 4
  %tmp649 = alloca i32, align 4
  %ret694 = alloca i32, align 4
  %tmp695 = alloca i32, align 4
  %ret740 = alloca i32, align 4
  %tmp741 = alloca i32, align 4
  %ret786 = alloca i32, align 4
  %tmp787 = alloca i32, align 4
  %ret832 = alloca i32, align 4
  %tmp833 = alloca i32, align 4
  %ret878 = alloca i32, align 4
  %tmp879 = alloca i32, align 4
  %ret924 = alloca i32, align 4
  %tmp925 = alloca i32, align 4
  %ret970 = alloca i32, align 4
  %tmp971 = alloca i32, align 4
  %ret1016 = alloca i32, align 4
  %tmp1017 = alloca i32, align 4
  %ret1062 = alloca i32, align 4
  %tmp1063 = alloca i32, align 4
  %ret1108 = alloca i32, align 4
  %tmp1109 = alloca i32, align 4
  %ret1154 = alloca i32, align 4
  %tmp1155 = alloca i32, align 4
  %ret1200 = alloca i32, align 4
  %tmp1201 = alloca i32, align 4
  %ret1246 = alloca i32, align 4
  %tmp1247 = alloca i32, align 4
  %ret1292 = alloca i32, align 4
  %tmp1293 = alloca i32, align 4
  %ret1338 = alloca i32, align 4
  %tmp1339 = alloca i32, align 4
  %ret1384 = alloca i32, align 4
  %tmp1385 = alloca i32, align 4
  %ret1430 = alloca i32, align 4
  %tmp1431 = alloca i32, align 4
  %ret1476 = alloca i32, align 4
  %tmp1477 = alloca i32, align 4
  %ret1518 = alloca i32, align 4
  %tmp1519 = alloca i32, align 4
  %ret1523 = alloca i32, align 4
  %tmp1524 = alloca i32, align 4
  %tt1528 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !44, metadata !DIExpression()), !dbg !45
  store %struct.DES_ks* %ks, %struct.DES_ks** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr, metadata !46, metadata !DIExpression()), !dbg !47
  store i32 %enc, i32* %enc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr, metadata !48, metadata !DIExpression()), !dbg !49
  call void @llvm.dbg.declare(metadata i32* %l, metadata !50, metadata !DIExpression()), !dbg !51
  call void @llvm.dbg.declare(metadata i32* %r, metadata !52, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.declare(metadata i32* %t, metadata !54, metadata !DIExpression()), !dbg !55
  call void @llvm.dbg.declare(metadata i32* %u, metadata !56, metadata !DIExpression()), !dbg !57
  call void @llvm.dbg.declare(metadata i32** %s, metadata !58, metadata !DIExpression()), !dbg !59
  %0 = load i32*, i32** %data.addr, align 8, !dbg !60
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !60
  %1 = load i32, i32* %arrayidx, align 4, !dbg !60
  store i32 %1, i32* %r, align 4, !dbg !61
  %2 = load i32*, i32** %data.addr, align 8, !dbg !62
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !62
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !62
  store i32 %3, i32* %l, align 4, !dbg !63
  call void @llvm.dbg.declare(metadata i32* %tt, metadata !64, metadata !DIExpression()), !dbg !66
  %4 = load i32, i32* %l, align 4, !dbg !66
  %shr = lshr i32 %4, 4, !dbg !66
  %5 = load i32, i32* %r, align 4, !dbg !66
  %xor = xor i32 %shr, %5, !dbg !66
  %conv = zext i32 %xor to i64, !dbg !66
  %and = and i64 %conv, 252645135, !dbg !66
  %conv2 = trunc i64 %and to i32, !dbg !66
  store i32 %conv2, i32* %tt, align 4, !dbg !66
  %6 = load i32, i32* %tt, align 4, !dbg !66
  %7 = load i32, i32* %r, align 4, !dbg !66
  %xor3 = xor i32 %7, %6, !dbg !66
  store i32 %xor3, i32* %r, align 4, !dbg !66
  %8 = load i32, i32* %tt, align 4, !dbg !66
  %shl = shl i32 %8, 4, !dbg !66
  %9 = load i32, i32* %l, align 4, !dbg !66
  %xor4 = xor i32 %9, %shl, !dbg !66
  store i32 %xor4, i32* %l, align 4, !dbg !66
  %10 = load i32, i32* %r, align 4, !dbg !66
  %shr5 = lshr i32 %10, 16, !dbg !66
  %11 = load i32, i32* %l, align 4, !dbg !66
  %xor6 = xor i32 %shr5, %11, !dbg !66
  %conv7 = zext i32 %xor6 to i64, !dbg !66
  %and8 = and i64 %conv7, 65535, !dbg !66
  %conv9 = trunc i64 %and8 to i32, !dbg !66
  store i32 %conv9, i32* %tt, align 4, !dbg !66
  %12 = load i32, i32* %tt, align 4, !dbg !66
  %13 = load i32, i32* %l, align 4, !dbg !66
  %xor10 = xor i32 %13, %12, !dbg !66
  store i32 %xor10, i32* %l, align 4, !dbg !66
  %14 = load i32, i32* %tt, align 4, !dbg !66
  %shl11 = shl i32 %14, 16, !dbg !66
  %15 = load i32, i32* %r, align 4, !dbg !66
  %xor12 = xor i32 %15, %shl11, !dbg !66
  store i32 %xor12, i32* %r, align 4, !dbg !66
  %16 = load i32, i32* %l, align 4, !dbg !66
  %shr13 = lshr i32 %16, 2, !dbg !66
  %17 = load i32, i32* %r, align 4, !dbg !66
  %xor14 = xor i32 %shr13, %17, !dbg !66
  %conv15 = zext i32 %xor14 to i64, !dbg !66
  %and16 = and i64 %conv15, 858993459, !dbg !66
  %conv17 = trunc i64 %and16 to i32, !dbg !66
  store i32 %conv17, i32* %tt, align 4, !dbg !66
  %18 = load i32, i32* %tt, align 4, !dbg !66
  %19 = load i32, i32* %r, align 4, !dbg !66
  %xor18 = xor i32 %19, %18, !dbg !66
  store i32 %xor18, i32* %r, align 4, !dbg !66
  %20 = load i32, i32* %tt, align 4, !dbg !66
  %shl19 = shl i32 %20, 2, !dbg !66
  %21 = load i32, i32* %l, align 4, !dbg !66
  %xor20 = xor i32 %21, %shl19, !dbg !66
  store i32 %xor20, i32* %l, align 4, !dbg !66
  %22 = load i32, i32* %r, align 4, !dbg !66
  %shr21 = lshr i32 %22, 8, !dbg !66
  %23 = load i32, i32* %l, align 4, !dbg !66
  %xor22 = xor i32 %shr21, %23, !dbg !66
  %conv23 = zext i32 %xor22 to i64, !dbg !66
  %and24 = and i64 %conv23, 16711935, !dbg !66
  %conv25 = trunc i64 %and24 to i32, !dbg !66
  store i32 %conv25, i32* %tt, align 4, !dbg !66
  %24 = load i32, i32* %tt, align 4, !dbg !66
  %25 = load i32, i32* %l, align 4, !dbg !66
  %xor26 = xor i32 %25, %24, !dbg !66
  store i32 %xor26, i32* %l, align 4, !dbg !66
  %26 = load i32, i32* %tt, align 4, !dbg !66
  %shl27 = shl i32 %26, 8, !dbg !66
  %27 = load i32, i32* %r, align 4, !dbg !66
  %xor28 = xor i32 %27, %shl27, !dbg !66
  store i32 %xor28, i32* %r, align 4, !dbg !66
  %28 = load i32, i32* %l, align 4, !dbg !66
  %shr29 = lshr i32 %28, 1, !dbg !66
  %29 = load i32, i32* %r, align 4, !dbg !66
  %xor30 = xor i32 %shr29, %29, !dbg !66
  %conv31 = zext i32 %xor30 to i64, !dbg !66
  %and32 = and i64 %conv31, 1431655765, !dbg !66
  %conv33 = trunc i64 %and32 to i32, !dbg !66
  store i32 %conv33, i32* %tt, align 4, !dbg !66
  %30 = load i32, i32* %tt, align 4, !dbg !66
  %31 = load i32, i32* %r, align 4, !dbg !66
  %xor34 = xor i32 %31, %30, !dbg !66
  store i32 %xor34, i32* %r, align 4, !dbg !66
  %32 = load i32, i32* %tt, align 4, !dbg !66
  %shl35 = shl i32 %32, 1, !dbg !66
  %33 = load i32, i32* %l, align 4, !dbg !66
  %xor36 = xor i32 %33, %shl35, !dbg !66
  store i32 %xor36, i32* %l, align 4, !dbg !66
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !67, metadata !DIExpression()), !dbg !69
  %34 = load i32, i32* %r, align 4, !dbg !69
  %35 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %34) #5, !dbg !69, !srcloc !70
  store i32 %35, i32* %ret, align 4, !dbg !69
  %36 = load i32, i32* %ret, align 4, !dbg !69
  store i32 %36, i32* %tmp, align 4, !dbg !69
  %37 = load i32, i32* %tmp, align 4, !dbg !69
  %conv37 = zext i32 %37 to i64, !dbg !71
  %and38 = and i64 %conv37, 4294967295, !dbg !72
  %conv39 = trunc i64 %and38 to i32, !dbg !71
  store i32 %conv39, i32* %r, align 4, !dbg !73
  call void @llvm.dbg.declare(metadata i32* %ret40, metadata !74, metadata !DIExpression()), !dbg !76
  %38 = load i32, i32* %l, align 4, !dbg !76
  %39 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %38) #5, !dbg !76, !srcloc !77
  store i32 %39, i32* %ret40, align 4, !dbg !76
  %40 = load i32, i32* %ret40, align 4, !dbg !76
  store i32 %40, i32* %tmp41, align 4, !dbg !76
  %41 = load i32, i32* %tmp41, align 4, !dbg !76
  %conv42 = zext i32 %41 to i64, !dbg !78
  %and43 = and i64 %conv42, 4294967295, !dbg !79
  %conv44 = trunc i64 %and43 to i32, !dbg !78
  store i32 %conv44, i32* %l, align 4, !dbg !80
  %42 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr, align 8, !dbg !81
  %ks45 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %42, i32 0, i32 0, !dbg !82
  %arraydecay = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45, i64 0, i64 0, !dbg !83
  %deslong = bitcast %union.anon* %arraydecay to [2 x i32]*, !dbg !83
  %arraydecay46 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong, i64 0, i64 0, !dbg !81
  store i32* %arraydecay46, i32** %s, align 8, !dbg !84
  %43 = load i32, i32* %enc.addr, align 4, !dbg !85
  %tobool = icmp ne i32 %43, 0, !dbg !85
  br i1 %tobool, label %if.then, label %if.else, !dbg !87

if.then:                                          ; preds = %entry
  %44 = load i32, i32* %r, align 4, !dbg !88
  %45 = load i32*, i32** %s, align 8, !dbg !88
  %arrayidx47 = getelementptr inbounds i32, i32* %45, i64 0, !dbg !88
  %46 = load i32, i32* %arrayidx47, align 4, !dbg !88
  %xor48 = xor i32 %44, %46, !dbg !88
  store i32 %xor48, i32* %u, align 4, !dbg !88
  %47 = load i32, i32* %r, align 4, !dbg !88
  %48 = load i32*, i32** %s, align 8, !dbg !88
  %arrayidx49 = getelementptr inbounds i32, i32* %48, i64 1, !dbg !88
  %49 = load i32, i32* %arrayidx49, align 4, !dbg !88
  %xor50 = xor i32 %47, %49, !dbg !88
  store i32 %xor50, i32* %t, align 4, !dbg !88
  call void @llvm.dbg.declare(metadata i32* %ret51, metadata !91, metadata !DIExpression()), !dbg !93
  %50 = load i32, i32* %t, align 4, !dbg !93
  %51 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %50) #5, !dbg !93, !srcloc !94
  store i32 %51, i32* %ret51, align 4, !dbg !93
  %52 = load i32, i32* %ret51, align 4, !dbg !93
  store i32 %52, i32* %tmp52, align 4, !dbg !93
  %53 = load i32, i32* %tmp52, align 4, !dbg !93
  store i32 %53, i32* %t, align 4, !dbg !88
  %54 = load i32, i32* %u, align 4, !dbg !88
  %shr53 = lshr i32 %54, 2, !dbg !88
  %and54 = and i32 %shr53, 63, !dbg !88
  %idxprom = zext i32 %and54 to i64, !dbg !88
  %arrayidx55 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom, !dbg !88
  %55 = load i32, i32* %arrayidx55, align 4, !dbg !88
  %56 = load i32, i32* %u, align 4, !dbg !88
  %shr56 = lshr i32 %56, 10, !dbg !88
  %and57 = and i32 %shr56, 63, !dbg !88
  %idxprom58 = zext i32 %and57 to i64, !dbg !88
  %arrayidx59 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58, !dbg !88
  %57 = load i32, i32* %arrayidx59, align 4, !dbg !88
  %xor60 = xor i32 %55, %57, !dbg !88
  %58 = load i32, i32* %u, align 4, !dbg !88
  %shr61 = lshr i32 %58, 18, !dbg !88
  %and62 = and i32 %shr61, 63, !dbg !88
  %idxprom63 = zext i32 %and62 to i64, !dbg !88
  %arrayidx64 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63, !dbg !88
  %59 = load i32, i32* %arrayidx64, align 4, !dbg !88
  %xor65 = xor i32 %xor60, %59, !dbg !88
  %60 = load i32, i32* %u, align 4, !dbg !88
  %shr66 = lshr i32 %60, 26, !dbg !88
  %and67 = and i32 %shr66, 63, !dbg !88
  %idxprom68 = zext i32 %and67 to i64, !dbg !88
  %arrayidx69 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68, !dbg !88
  %61 = load i32, i32* %arrayidx69, align 4, !dbg !88
  %xor70 = xor i32 %xor65, %61, !dbg !88
  %62 = load i32, i32* %t, align 4, !dbg !88
  %shr71 = lshr i32 %62, 2, !dbg !88
  %and72 = and i32 %shr71, 63, !dbg !88
  %idxprom73 = zext i32 %and72 to i64, !dbg !88
  %arrayidx74 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73, !dbg !88
  %63 = load i32, i32* %arrayidx74, align 4, !dbg !88
  %xor75 = xor i32 %xor70, %63, !dbg !88
  %64 = load i32, i32* %t, align 4, !dbg !88
  %shr76 = lshr i32 %64, 10, !dbg !88
  %and77 = and i32 %shr76, 63, !dbg !88
  %idxprom78 = zext i32 %and77 to i64, !dbg !88
  %arrayidx79 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78, !dbg !88
  %65 = load i32, i32* %arrayidx79, align 4, !dbg !88
  %xor80 = xor i32 %xor75, %65, !dbg !88
  %66 = load i32, i32* %t, align 4, !dbg !88
  %shr81 = lshr i32 %66, 18, !dbg !88
  %and82 = and i32 %shr81, 63, !dbg !88
  %idxprom83 = zext i32 %and82 to i64, !dbg !88
  %arrayidx84 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83, !dbg !88
  %67 = load i32, i32* %arrayidx84, align 4, !dbg !88
  %xor85 = xor i32 %xor80, %67, !dbg !88
  %68 = load i32, i32* %t, align 4, !dbg !88
  %shr86 = lshr i32 %68, 26, !dbg !88
  %and87 = and i32 %shr86, 63, !dbg !88
  %idxprom88 = zext i32 %and87 to i64, !dbg !88
  %arrayidx89 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88, !dbg !88
  %69 = load i32, i32* %arrayidx89, align 4, !dbg !88
  %xor90 = xor i32 %xor85, %69, !dbg !88
  %70 = load i32, i32* %l, align 4, !dbg !88
  %xor91 = xor i32 %70, %xor90, !dbg !88
  store i32 %xor91, i32* %l, align 4, !dbg !88
  %71 = load i32, i32* %l, align 4, !dbg !95
  %72 = load i32*, i32** %s, align 8, !dbg !95
  %arrayidx92 = getelementptr inbounds i32, i32* %72, i64 2, !dbg !95
  %73 = load i32, i32* %arrayidx92, align 4, !dbg !95
  %xor93 = xor i32 %71, %73, !dbg !95
  store i32 %xor93, i32* %u, align 4, !dbg !95
  %74 = load i32, i32* %l, align 4, !dbg !95
  %75 = load i32*, i32** %s, align 8, !dbg !95
  %arrayidx94 = getelementptr inbounds i32, i32* %75, i64 3, !dbg !95
  %76 = load i32, i32* %arrayidx94, align 4, !dbg !95
  %xor95 = xor i32 %74, %76, !dbg !95
  store i32 %xor95, i32* %t, align 4, !dbg !95
  call void @llvm.dbg.declare(metadata i32* %ret96, metadata !97, metadata !DIExpression()), !dbg !99
  %77 = load i32, i32* %t, align 4, !dbg !99
  %78 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %77) #5, !dbg !99, !srcloc !100
  store i32 %78, i32* %ret96, align 4, !dbg !99
  %79 = load i32, i32* %ret96, align 4, !dbg !99
  store i32 %79, i32* %tmp97, align 4, !dbg !99
  %80 = load i32, i32* %tmp97, align 4, !dbg !99
  store i32 %80, i32* %t, align 4, !dbg !95
  %81 = load i32, i32* %u, align 4, !dbg !95
  %shr98 = lshr i32 %81, 2, !dbg !95
  %and99 = and i32 %shr98, 63, !dbg !95
  %idxprom100 = zext i32 %and99 to i64, !dbg !95
  %arrayidx101 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100, !dbg !95
  %82 = load i32, i32* %arrayidx101, align 4, !dbg !95
  %83 = load i32, i32* %u, align 4, !dbg !95
  %shr102 = lshr i32 %83, 10, !dbg !95
  %and103 = and i32 %shr102, 63, !dbg !95
  %idxprom104 = zext i32 %and103 to i64, !dbg !95
  %arrayidx105 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104, !dbg !95
  %84 = load i32, i32* %arrayidx105, align 4, !dbg !95
  %xor106 = xor i32 %82, %84, !dbg !95
  %85 = load i32, i32* %u, align 4, !dbg !95
  %shr107 = lshr i32 %85, 18, !dbg !95
  %and108 = and i32 %shr107, 63, !dbg !95
  %idxprom109 = zext i32 %and108 to i64, !dbg !95
  %arrayidx110 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109, !dbg !95
  %86 = load i32, i32* %arrayidx110, align 4, !dbg !95
  %xor111 = xor i32 %xor106, %86, !dbg !95
  %87 = load i32, i32* %u, align 4, !dbg !95
  %shr112 = lshr i32 %87, 26, !dbg !95
  %and113 = and i32 %shr112, 63, !dbg !95
  %idxprom114 = zext i32 %and113 to i64, !dbg !95
  %arrayidx115 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114, !dbg !95
  %88 = load i32, i32* %arrayidx115, align 4, !dbg !95
  %xor116 = xor i32 %xor111, %88, !dbg !95
  %89 = load i32, i32* %t, align 4, !dbg !95
  %shr117 = lshr i32 %89, 2, !dbg !95
  %and118 = and i32 %shr117, 63, !dbg !95
  %idxprom119 = zext i32 %and118 to i64, !dbg !95
  %arrayidx120 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119, !dbg !95
  %90 = load i32, i32* %arrayidx120, align 4, !dbg !95
  %xor121 = xor i32 %xor116, %90, !dbg !95
  %91 = load i32, i32* %t, align 4, !dbg !95
  %shr122 = lshr i32 %91, 10, !dbg !95
  %and123 = and i32 %shr122, 63, !dbg !95
  %idxprom124 = zext i32 %and123 to i64, !dbg !95
  %arrayidx125 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124, !dbg !95
  %92 = load i32, i32* %arrayidx125, align 4, !dbg !95
  %xor126 = xor i32 %xor121, %92, !dbg !95
  %93 = load i32, i32* %t, align 4, !dbg !95
  %shr127 = lshr i32 %93, 18, !dbg !95
  %and128 = and i32 %shr127, 63, !dbg !95
  %idxprom129 = zext i32 %and128 to i64, !dbg !95
  %arrayidx130 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129, !dbg !95
  %94 = load i32, i32* %arrayidx130, align 4, !dbg !95
  %xor131 = xor i32 %xor126, %94, !dbg !95
  %95 = load i32, i32* %t, align 4, !dbg !95
  %shr132 = lshr i32 %95, 26, !dbg !95
  %and133 = and i32 %shr132, 63, !dbg !95
  %idxprom134 = zext i32 %and133 to i64, !dbg !95
  %arrayidx135 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134, !dbg !95
  %96 = load i32, i32* %arrayidx135, align 4, !dbg !95
  %xor136 = xor i32 %xor131, %96, !dbg !95
  %97 = load i32, i32* %r, align 4, !dbg !95
  %xor137 = xor i32 %97, %xor136, !dbg !95
  store i32 %xor137, i32* %r, align 4, !dbg !95
  %98 = load i32, i32* %r, align 4, !dbg !101
  %99 = load i32*, i32** %s, align 8, !dbg !101
  %arrayidx138 = getelementptr inbounds i32, i32* %99, i64 4, !dbg !101
  %100 = load i32, i32* %arrayidx138, align 4, !dbg !101
  %xor139 = xor i32 %98, %100, !dbg !101
  store i32 %xor139, i32* %u, align 4, !dbg !101
  %101 = load i32, i32* %r, align 4, !dbg !101
  %102 = load i32*, i32** %s, align 8, !dbg !101
  %arrayidx140 = getelementptr inbounds i32, i32* %102, i64 5, !dbg !101
  %103 = load i32, i32* %arrayidx140, align 4, !dbg !101
  %xor141 = xor i32 %101, %103, !dbg !101
  store i32 %xor141, i32* %t, align 4, !dbg !101
  call void @llvm.dbg.declare(metadata i32* %ret142, metadata !103, metadata !DIExpression()), !dbg !105
  %104 = load i32, i32* %t, align 4, !dbg !105
  %105 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %104) #5, !dbg !105, !srcloc !106
  store i32 %105, i32* %ret142, align 4, !dbg !105
  %106 = load i32, i32* %ret142, align 4, !dbg !105
  store i32 %106, i32* %tmp143, align 4, !dbg !105
  %107 = load i32, i32* %tmp143, align 4, !dbg !105
  store i32 %107, i32* %t, align 4, !dbg !101
  %108 = load i32, i32* %u, align 4, !dbg !101
  %shr144 = lshr i32 %108, 2, !dbg !101
  %and145 = and i32 %shr144, 63, !dbg !101
  %idxprom146 = zext i32 %and145 to i64, !dbg !101
  %arrayidx147 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146, !dbg !101
  %109 = load i32, i32* %arrayidx147, align 4, !dbg !101
  %110 = load i32, i32* %u, align 4, !dbg !101
  %shr148 = lshr i32 %110, 10, !dbg !101
  %and149 = and i32 %shr148, 63, !dbg !101
  %idxprom150 = zext i32 %and149 to i64, !dbg !101
  %arrayidx151 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150, !dbg !101
  %111 = load i32, i32* %arrayidx151, align 4, !dbg !101
  %xor152 = xor i32 %109, %111, !dbg !101
  %112 = load i32, i32* %u, align 4, !dbg !101
  %shr153 = lshr i32 %112, 18, !dbg !101
  %and154 = and i32 %shr153, 63, !dbg !101
  %idxprom155 = zext i32 %and154 to i64, !dbg !101
  %arrayidx156 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155, !dbg !101
  %113 = load i32, i32* %arrayidx156, align 4, !dbg !101
  %xor157 = xor i32 %xor152, %113, !dbg !101
  %114 = load i32, i32* %u, align 4, !dbg !101
  %shr158 = lshr i32 %114, 26, !dbg !101
  %and159 = and i32 %shr158, 63, !dbg !101
  %idxprom160 = zext i32 %and159 to i64, !dbg !101
  %arrayidx161 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160, !dbg !101
  %115 = load i32, i32* %arrayidx161, align 4, !dbg !101
  %xor162 = xor i32 %xor157, %115, !dbg !101
  %116 = load i32, i32* %t, align 4, !dbg !101
  %shr163 = lshr i32 %116, 2, !dbg !101
  %and164 = and i32 %shr163, 63, !dbg !101
  %idxprom165 = zext i32 %and164 to i64, !dbg !101
  %arrayidx166 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165, !dbg !101
  %117 = load i32, i32* %arrayidx166, align 4, !dbg !101
  %xor167 = xor i32 %xor162, %117, !dbg !101
  %118 = load i32, i32* %t, align 4, !dbg !101
  %shr168 = lshr i32 %118, 10, !dbg !101
  %and169 = and i32 %shr168, 63, !dbg !101
  %idxprom170 = zext i32 %and169 to i64, !dbg !101
  %arrayidx171 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170, !dbg !101
  %119 = load i32, i32* %arrayidx171, align 4, !dbg !101
  %xor172 = xor i32 %xor167, %119, !dbg !101
  %120 = load i32, i32* %t, align 4, !dbg !101
  %shr173 = lshr i32 %120, 18, !dbg !101
  %and174 = and i32 %shr173, 63, !dbg !101
  %idxprom175 = zext i32 %and174 to i64, !dbg !101
  %arrayidx176 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175, !dbg !101
  %121 = load i32, i32* %arrayidx176, align 4, !dbg !101
  %xor177 = xor i32 %xor172, %121, !dbg !101
  %122 = load i32, i32* %t, align 4, !dbg !101
  %shr178 = lshr i32 %122, 26, !dbg !101
  %and179 = and i32 %shr178, 63, !dbg !101
  %idxprom180 = zext i32 %and179 to i64, !dbg !101
  %arrayidx181 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180, !dbg !101
  %123 = load i32, i32* %arrayidx181, align 4, !dbg !101
  %xor182 = xor i32 %xor177, %123, !dbg !101
  %124 = load i32, i32* %l, align 4, !dbg !101
  %xor183 = xor i32 %124, %xor182, !dbg !101
  store i32 %xor183, i32* %l, align 4, !dbg !101
  %125 = load i32, i32* %l, align 4, !dbg !107
  %126 = load i32*, i32** %s, align 8, !dbg !107
  %arrayidx184 = getelementptr inbounds i32, i32* %126, i64 6, !dbg !107
  %127 = load i32, i32* %arrayidx184, align 4, !dbg !107
  %xor185 = xor i32 %125, %127, !dbg !107
  store i32 %xor185, i32* %u, align 4, !dbg !107
  %128 = load i32, i32* %l, align 4, !dbg !107
  %129 = load i32*, i32** %s, align 8, !dbg !107
  %arrayidx186 = getelementptr inbounds i32, i32* %129, i64 7, !dbg !107
  %130 = load i32, i32* %arrayidx186, align 4, !dbg !107
  %xor187 = xor i32 %128, %130, !dbg !107
  store i32 %xor187, i32* %t, align 4, !dbg !107
  call void @llvm.dbg.declare(metadata i32* %ret188, metadata !109, metadata !DIExpression()), !dbg !111
  %131 = load i32, i32* %t, align 4, !dbg !111
  %132 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %131) #5, !dbg !111, !srcloc !112
  store i32 %132, i32* %ret188, align 4, !dbg !111
  %133 = load i32, i32* %ret188, align 4, !dbg !111
  store i32 %133, i32* %tmp189, align 4, !dbg !111
  %134 = load i32, i32* %tmp189, align 4, !dbg !111
  store i32 %134, i32* %t, align 4, !dbg !107
  %135 = load i32, i32* %u, align 4, !dbg !107
  %shr190 = lshr i32 %135, 2, !dbg !107
  %and191 = and i32 %shr190, 63, !dbg !107
  %idxprom192 = zext i32 %and191 to i64, !dbg !107
  %arrayidx193 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192, !dbg !107
  %136 = load i32, i32* %arrayidx193, align 4, !dbg !107
  %137 = load i32, i32* %u, align 4, !dbg !107
  %shr194 = lshr i32 %137, 10, !dbg !107
  %and195 = and i32 %shr194, 63, !dbg !107
  %idxprom196 = zext i32 %and195 to i64, !dbg !107
  %arrayidx197 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196, !dbg !107
  %138 = load i32, i32* %arrayidx197, align 4, !dbg !107
  %xor198 = xor i32 %136, %138, !dbg !107
  %139 = load i32, i32* %u, align 4, !dbg !107
  %shr199 = lshr i32 %139, 18, !dbg !107
  %and200 = and i32 %shr199, 63, !dbg !107
  %idxprom201 = zext i32 %and200 to i64, !dbg !107
  %arrayidx202 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201, !dbg !107
  %140 = load i32, i32* %arrayidx202, align 4, !dbg !107
  %xor203 = xor i32 %xor198, %140, !dbg !107
  %141 = load i32, i32* %u, align 4, !dbg !107
  %shr204 = lshr i32 %141, 26, !dbg !107
  %and205 = and i32 %shr204, 63, !dbg !107
  %idxprom206 = zext i32 %and205 to i64, !dbg !107
  %arrayidx207 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206, !dbg !107
  %142 = load i32, i32* %arrayidx207, align 4, !dbg !107
  %xor208 = xor i32 %xor203, %142, !dbg !107
  %143 = load i32, i32* %t, align 4, !dbg !107
  %shr209 = lshr i32 %143, 2, !dbg !107
  %and210 = and i32 %shr209, 63, !dbg !107
  %idxprom211 = zext i32 %and210 to i64, !dbg !107
  %arrayidx212 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211, !dbg !107
  %144 = load i32, i32* %arrayidx212, align 4, !dbg !107
  %xor213 = xor i32 %xor208, %144, !dbg !107
  %145 = load i32, i32* %t, align 4, !dbg !107
  %shr214 = lshr i32 %145, 10, !dbg !107
  %and215 = and i32 %shr214, 63, !dbg !107
  %idxprom216 = zext i32 %and215 to i64, !dbg !107
  %arrayidx217 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216, !dbg !107
  %146 = load i32, i32* %arrayidx217, align 4, !dbg !107
  %xor218 = xor i32 %xor213, %146, !dbg !107
  %147 = load i32, i32* %t, align 4, !dbg !107
  %shr219 = lshr i32 %147, 18, !dbg !107
  %and220 = and i32 %shr219, 63, !dbg !107
  %idxprom221 = zext i32 %and220 to i64, !dbg !107
  %arrayidx222 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221, !dbg !107
  %148 = load i32, i32* %arrayidx222, align 4, !dbg !107
  %xor223 = xor i32 %xor218, %148, !dbg !107
  %149 = load i32, i32* %t, align 4, !dbg !107
  %shr224 = lshr i32 %149, 26, !dbg !107
  %and225 = and i32 %shr224, 63, !dbg !107
  %idxprom226 = zext i32 %and225 to i64, !dbg !107
  %arrayidx227 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226, !dbg !107
  %150 = load i32, i32* %arrayidx227, align 4, !dbg !107
  %xor228 = xor i32 %xor223, %150, !dbg !107
  %151 = load i32, i32* %r, align 4, !dbg !107
  %xor229 = xor i32 %151, %xor228, !dbg !107
  store i32 %xor229, i32* %r, align 4, !dbg !107
  %152 = load i32, i32* %r, align 4, !dbg !113
  %153 = load i32*, i32** %s, align 8, !dbg !113
  %arrayidx230 = getelementptr inbounds i32, i32* %153, i64 8, !dbg !113
  %154 = load i32, i32* %arrayidx230, align 4, !dbg !113
  %xor231 = xor i32 %152, %154, !dbg !113
  store i32 %xor231, i32* %u, align 4, !dbg !113
  %155 = load i32, i32* %r, align 4, !dbg !113
  %156 = load i32*, i32** %s, align 8, !dbg !113
  %arrayidx232 = getelementptr inbounds i32, i32* %156, i64 9, !dbg !113
  %157 = load i32, i32* %arrayidx232, align 4, !dbg !113
  %xor233 = xor i32 %155, %157, !dbg !113
  store i32 %xor233, i32* %t, align 4, !dbg !113
  call void @llvm.dbg.declare(metadata i32* %ret234, metadata !115, metadata !DIExpression()), !dbg !117
  %158 = load i32, i32* %t, align 4, !dbg !117
  %159 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %158) #5, !dbg !117, !srcloc !118
  store i32 %159, i32* %ret234, align 4, !dbg !117
  %160 = load i32, i32* %ret234, align 4, !dbg !117
  store i32 %160, i32* %tmp235, align 4, !dbg !117
  %161 = load i32, i32* %tmp235, align 4, !dbg !117
  store i32 %161, i32* %t, align 4, !dbg !113
  %162 = load i32, i32* %u, align 4, !dbg !113
  %shr236 = lshr i32 %162, 2, !dbg !113
  %and237 = and i32 %shr236, 63, !dbg !113
  %idxprom238 = zext i32 %and237 to i64, !dbg !113
  %arrayidx239 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238, !dbg !113
  %163 = load i32, i32* %arrayidx239, align 4, !dbg !113
  %164 = load i32, i32* %u, align 4, !dbg !113
  %shr240 = lshr i32 %164, 10, !dbg !113
  %and241 = and i32 %shr240, 63, !dbg !113
  %idxprom242 = zext i32 %and241 to i64, !dbg !113
  %arrayidx243 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242, !dbg !113
  %165 = load i32, i32* %arrayidx243, align 4, !dbg !113
  %xor244 = xor i32 %163, %165, !dbg !113
  %166 = load i32, i32* %u, align 4, !dbg !113
  %shr245 = lshr i32 %166, 18, !dbg !113
  %and246 = and i32 %shr245, 63, !dbg !113
  %idxprom247 = zext i32 %and246 to i64, !dbg !113
  %arrayidx248 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247, !dbg !113
  %167 = load i32, i32* %arrayidx248, align 4, !dbg !113
  %xor249 = xor i32 %xor244, %167, !dbg !113
  %168 = load i32, i32* %u, align 4, !dbg !113
  %shr250 = lshr i32 %168, 26, !dbg !113
  %and251 = and i32 %shr250, 63, !dbg !113
  %idxprom252 = zext i32 %and251 to i64, !dbg !113
  %arrayidx253 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252, !dbg !113
  %169 = load i32, i32* %arrayidx253, align 4, !dbg !113
  %xor254 = xor i32 %xor249, %169, !dbg !113
  %170 = load i32, i32* %t, align 4, !dbg !113
  %shr255 = lshr i32 %170, 2, !dbg !113
  %and256 = and i32 %shr255, 63, !dbg !113
  %idxprom257 = zext i32 %and256 to i64, !dbg !113
  %arrayidx258 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257, !dbg !113
  %171 = load i32, i32* %arrayidx258, align 4, !dbg !113
  %xor259 = xor i32 %xor254, %171, !dbg !113
  %172 = load i32, i32* %t, align 4, !dbg !113
  %shr260 = lshr i32 %172, 10, !dbg !113
  %and261 = and i32 %shr260, 63, !dbg !113
  %idxprom262 = zext i32 %and261 to i64, !dbg !113
  %arrayidx263 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262, !dbg !113
  %173 = load i32, i32* %arrayidx263, align 4, !dbg !113
  %xor264 = xor i32 %xor259, %173, !dbg !113
  %174 = load i32, i32* %t, align 4, !dbg !113
  %shr265 = lshr i32 %174, 18, !dbg !113
  %and266 = and i32 %shr265, 63, !dbg !113
  %idxprom267 = zext i32 %and266 to i64, !dbg !113
  %arrayidx268 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267, !dbg !113
  %175 = load i32, i32* %arrayidx268, align 4, !dbg !113
  %xor269 = xor i32 %xor264, %175, !dbg !113
  %176 = load i32, i32* %t, align 4, !dbg !113
  %shr270 = lshr i32 %176, 26, !dbg !113
  %and271 = and i32 %shr270, 63, !dbg !113
  %idxprom272 = zext i32 %and271 to i64, !dbg !113
  %arrayidx273 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272, !dbg !113
  %177 = load i32, i32* %arrayidx273, align 4, !dbg !113
  %xor274 = xor i32 %xor269, %177, !dbg !113
  %178 = load i32, i32* %l, align 4, !dbg !113
  %xor275 = xor i32 %178, %xor274, !dbg !113
  store i32 %xor275, i32* %l, align 4, !dbg !113
  %179 = load i32, i32* %l, align 4, !dbg !119
  %180 = load i32*, i32** %s, align 8, !dbg !119
  %arrayidx276 = getelementptr inbounds i32, i32* %180, i64 10, !dbg !119
  %181 = load i32, i32* %arrayidx276, align 4, !dbg !119
  %xor277 = xor i32 %179, %181, !dbg !119
  store i32 %xor277, i32* %u, align 4, !dbg !119
  %182 = load i32, i32* %l, align 4, !dbg !119
  %183 = load i32*, i32** %s, align 8, !dbg !119
  %arrayidx278 = getelementptr inbounds i32, i32* %183, i64 11, !dbg !119
  %184 = load i32, i32* %arrayidx278, align 4, !dbg !119
  %xor279 = xor i32 %182, %184, !dbg !119
  store i32 %xor279, i32* %t, align 4, !dbg !119
  call void @llvm.dbg.declare(metadata i32* %ret280, metadata !121, metadata !DIExpression()), !dbg !123
  %185 = load i32, i32* %t, align 4, !dbg !123
  %186 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %185) #5, !dbg !123, !srcloc !124
  store i32 %186, i32* %ret280, align 4, !dbg !123
  %187 = load i32, i32* %ret280, align 4, !dbg !123
  store i32 %187, i32* %tmp281, align 4, !dbg !123
  %188 = load i32, i32* %tmp281, align 4, !dbg !123
  store i32 %188, i32* %t, align 4, !dbg !119
  %189 = load i32, i32* %u, align 4, !dbg !119
  %shr282 = lshr i32 %189, 2, !dbg !119
  %and283 = and i32 %shr282, 63, !dbg !119
  %idxprom284 = zext i32 %and283 to i64, !dbg !119
  %arrayidx285 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284, !dbg !119
  %190 = load i32, i32* %arrayidx285, align 4, !dbg !119
  %191 = load i32, i32* %u, align 4, !dbg !119
  %shr286 = lshr i32 %191, 10, !dbg !119
  %and287 = and i32 %shr286, 63, !dbg !119
  %idxprom288 = zext i32 %and287 to i64, !dbg !119
  %arrayidx289 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288, !dbg !119
  %192 = load i32, i32* %arrayidx289, align 4, !dbg !119
  %xor290 = xor i32 %190, %192, !dbg !119
  %193 = load i32, i32* %u, align 4, !dbg !119
  %shr291 = lshr i32 %193, 18, !dbg !119
  %and292 = and i32 %shr291, 63, !dbg !119
  %idxprom293 = zext i32 %and292 to i64, !dbg !119
  %arrayidx294 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293, !dbg !119
  %194 = load i32, i32* %arrayidx294, align 4, !dbg !119
  %xor295 = xor i32 %xor290, %194, !dbg !119
  %195 = load i32, i32* %u, align 4, !dbg !119
  %shr296 = lshr i32 %195, 26, !dbg !119
  %and297 = and i32 %shr296, 63, !dbg !119
  %idxprom298 = zext i32 %and297 to i64, !dbg !119
  %arrayidx299 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298, !dbg !119
  %196 = load i32, i32* %arrayidx299, align 4, !dbg !119
  %xor300 = xor i32 %xor295, %196, !dbg !119
  %197 = load i32, i32* %t, align 4, !dbg !119
  %shr301 = lshr i32 %197, 2, !dbg !119
  %and302 = and i32 %shr301, 63, !dbg !119
  %idxprom303 = zext i32 %and302 to i64, !dbg !119
  %arrayidx304 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303, !dbg !119
  %198 = load i32, i32* %arrayidx304, align 4, !dbg !119
  %xor305 = xor i32 %xor300, %198, !dbg !119
  %199 = load i32, i32* %t, align 4, !dbg !119
  %shr306 = lshr i32 %199, 10, !dbg !119
  %and307 = and i32 %shr306, 63, !dbg !119
  %idxprom308 = zext i32 %and307 to i64, !dbg !119
  %arrayidx309 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308, !dbg !119
  %200 = load i32, i32* %arrayidx309, align 4, !dbg !119
  %xor310 = xor i32 %xor305, %200, !dbg !119
  %201 = load i32, i32* %t, align 4, !dbg !119
  %shr311 = lshr i32 %201, 18, !dbg !119
  %and312 = and i32 %shr311, 63, !dbg !119
  %idxprom313 = zext i32 %and312 to i64, !dbg !119
  %arrayidx314 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313, !dbg !119
  %202 = load i32, i32* %arrayidx314, align 4, !dbg !119
  %xor315 = xor i32 %xor310, %202, !dbg !119
  %203 = load i32, i32* %t, align 4, !dbg !119
  %shr316 = lshr i32 %203, 26, !dbg !119
  %and317 = and i32 %shr316, 63, !dbg !119
  %idxprom318 = zext i32 %and317 to i64, !dbg !119
  %arrayidx319 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318, !dbg !119
  %204 = load i32, i32* %arrayidx319, align 4, !dbg !119
  %xor320 = xor i32 %xor315, %204, !dbg !119
  %205 = load i32, i32* %r, align 4, !dbg !119
  %xor321 = xor i32 %205, %xor320, !dbg !119
  store i32 %xor321, i32* %r, align 4, !dbg !119
  %206 = load i32, i32* %r, align 4, !dbg !125
  %207 = load i32*, i32** %s, align 8, !dbg !125
  %arrayidx322 = getelementptr inbounds i32, i32* %207, i64 12, !dbg !125
  %208 = load i32, i32* %arrayidx322, align 4, !dbg !125
  %xor323 = xor i32 %206, %208, !dbg !125
  store i32 %xor323, i32* %u, align 4, !dbg !125
  %209 = load i32, i32* %r, align 4, !dbg !125
  %210 = load i32*, i32** %s, align 8, !dbg !125
  %arrayidx324 = getelementptr inbounds i32, i32* %210, i64 13, !dbg !125
  %211 = load i32, i32* %arrayidx324, align 4, !dbg !125
  %xor325 = xor i32 %209, %211, !dbg !125
  store i32 %xor325, i32* %t, align 4, !dbg !125
  call void @llvm.dbg.declare(metadata i32* %ret326, metadata !127, metadata !DIExpression()), !dbg !129
  %212 = load i32, i32* %t, align 4, !dbg !129
  %213 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %212) #5, !dbg !129, !srcloc !130
  store i32 %213, i32* %ret326, align 4, !dbg !129
  %214 = load i32, i32* %ret326, align 4, !dbg !129
  store i32 %214, i32* %tmp327, align 4, !dbg !129
  %215 = load i32, i32* %tmp327, align 4, !dbg !129
  store i32 %215, i32* %t, align 4, !dbg !125
  %216 = load i32, i32* %u, align 4, !dbg !125
  %shr328 = lshr i32 %216, 2, !dbg !125
  %and329 = and i32 %shr328, 63, !dbg !125
  %idxprom330 = zext i32 %and329 to i64, !dbg !125
  %arrayidx331 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330, !dbg !125
  %217 = load i32, i32* %arrayidx331, align 4, !dbg !125
  %218 = load i32, i32* %u, align 4, !dbg !125
  %shr332 = lshr i32 %218, 10, !dbg !125
  %and333 = and i32 %shr332, 63, !dbg !125
  %idxprom334 = zext i32 %and333 to i64, !dbg !125
  %arrayidx335 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334, !dbg !125
  %219 = load i32, i32* %arrayidx335, align 4, !dbg !125
  %xor336 = xor i32 %217, %219, !dbg !125
  %220 = load i32, i32* %u, align 4, !dbg !125
  %shr337 = lshr i32 %220, 18, !dbg !125
  %and338 = and i32 %shr337, 63, !dbg !125
  %idxprom339 = zext i32 %and338 to i64, !dbg !125
  %arrayidx340 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339, !dbg !125
  %221 = load i32, i32* %arrayidx340, align 4, !dbg !125
  %xor341 = xor i32 %xor336, %221, !dbg !125
  %222 = load i32, i32* %u, align 4, !dbg !125
  %shr342 = lshr i32 %222, 26, !dbg !125
  %and343 = and i32 %shr342, 63, !dbg !125
  %idxprom344 = zext i32 %and343 to i64, !dbg !125
  %arrayidx345 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344, !dbg !125
  %223 = load i32, i32* %arrayidx345, align 4, !dbg !125
  %xor346 = xor i32 %xor341, %223, !dbg !125
  %224 = load i32, i32* %t, align 4, !dbg !125
  %shr347 = lshr i32 %224, 2, !dbg !125
  %and348 = and i32 %shr347, 63, !dbg !125
  %idxprom349 = zext i32 %and348 to i64, !dbg !125
  %arrayidx350 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349, !dbg !125
  %225 = load i32, i32* %arrayidx350, align 4, !dbg !125
  %xor351 = xor i32 %xor346, %225, !dbg !125
  %226 = load i32, i32* %t, align 4, !dbg !125
  %shr352 = lshr i32 %226, 10, !dbg !125
  %and353 = and i32 %shr352, 63, !dbg !125
  %idxprom354 = zext i32 %and353 to i64, !dbg !125
  %arrayidx355 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354, !dbg !125
  %227 = load i32, i32* %arrayidx355, align 4, !dbg !125
  %xor356 = xor i32 %xor351, %227, !dbg !125
  %228 = load i32, i32* %t, align 4, !dbg !125
  %shr357 = lshr i32 %228, 18, !dbg !125
  %and358 = and i32 %shr357, 63, !dbg !125
  %idxprom359 = zext i32 %and358 to i64, !dbg !125
  %arrayidx360 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359, !dbg !125
  %229 = load i32, i32* %arrayidx360, align 4, !dbg !125
  %xor361 = xor i32 %xor356, %229, !dbg !125
  %230 = load i32, i32* %t, align 4, !dbg !125
  %shr362 = lshr i32 %230, 26, !dbg !125
  %and363 = and i32 %shr362, 63, !dbg !125
  %idxprom364 = zext i32 %and363 to i64, !dbg !125
  %arrayidx365 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364, !dbg !125
  %231 = load i32, i32* %arrayidx365, align 4, !dbg !125
  %xor366 = xor i32 %xor361, %231, !dbg !125
  %232 = load i32, i32* %l, align 4, !dbg !125
  %xor367 = xor i32 %232, %xor366, !dbg !125
  store i32 %xor367, i32* %l, align 4, !dbg !125
  %233 = load i32, i32* %l, align 4, !dbg !131
  %234 = load i32*, i32** %s, align 8, !dbg !131
  %arrayidx368 = getelementptr inbounds i32, i32* %234, i64 14, !dbg !131
  %235 = load i32, i32* %arrayidx368, align 4, !dbg !131
  %xor369 = xor i32 %233, %235, !dbg !131
  store i32 %xor369, i32* %u, align 4, !dbg !131
  %236 = load i32, i32* %l, align 4, !dbg !131
  %237 = load i32*, i32** %s, align 8, !dbg !131
  %arrayidx370 = getelementptr inbounds i32, i32* %237, i64 15, !dbg !131
  %238 = load i32, i32* %arrayidx370, align 4, !dbg !131
  %xor371 = xor i32 %236, %238, !dbg !131
  store i32 %xor371, i32* %t, align 4, !dbg !131
  call void @llvm.dbg.declare(metadata i32* %ret372, metadata !133, metadata !DIExpression()), !dbg !135
  %239 = load i32, i32* %t, align 4, !dbg !135
  %240 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %239) #5, !dbg !135, !srcloc !136
  store i32 %240, i32* %ret372, align 4, !dbg !135
  %241 = load i32, i32* %ret372, align 4, !dbg !135
  store i32 %241, i32* %tmp373, align 4, !dbg !135
  %242 = load i32, i32* %tmp373, align 4, !dbg !135
  store i32 %242, i32* %t, align 4, !dbg !131
  %243 = load i32, i32* %u, align 4, !dbg !131
  %shr374 = lshr i32 %243, 2, !dbg !131
  %and375 = and i32 %shr374, 63, !dbg !131
  %idxprom376 = zext i32 %and375 to i64, !dbg !131
  %arrayidx377 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376, !dbg !131
  %244 = load i32, i32* %arrayidx377, align 4, !dbg !131
  %245 = load i32, i32* %u, align 4, !dbg !131
  %shr378 = lshr i32 %245, 10, !dbg !131
  %and379 = and i32 %shr378, 63, !dbg !131
  %idxprom380 = zext i32 %and379 to i64, !dbg !131
  %arrayidx381 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380, !dbg !131
  %246 = load i32, i32* %arrayidx381, align 4, !dbg !131
  %xor382 = xor i32 %244, %246, !dbg !131
  %247 = load i32, i32* %u, align 4, !dbg !131
  %shr383 = lshr i32 %247, 18, !dbg !131
  %and384 = and i32 %shr383, 63, !dbg !131
  %idxprom385 = zext i32 %and384 to i64, !dbg !131
  %arrayidx386 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385, !dbg !131
  %248 = load i32, i32* %arrayidx386, align 4, !dbg !131
  %xor387 = xor i32 %xor382, %248, !dbg !131
  %249 = load i32, i32* %u, align 4, !dbg !131
  %shr388 = lshr i32 %249, 26, !dbg !131
  %and389 = and i32 %shr388, 63, !dbg !131
  %idxprom390 = zext i32 %and389 to i64, !dbg !131
  %arrayidx391 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390, !dbg !131
  %250 = load i32, i32* %arrayidx391, align 4, !dbg !131
  %xor392 = xor i32 %xor387, %250, !dbg !131
  %251 = load i32, i32* %t, align 4, !dbg !131
  %shr393 = lshr i32 %251, 2, !dbg !131
  %and394 = and i32 %shr393, 63, !dbg !131
  %idxprom395 = zext i32 %and394 to i64, !dbg !131
  %arrayidx396 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395, !dbg !131
  %252 = load i32, i32* %arrayidx396, align 4, !dbg !131
  %xor397 = xor i32 %xor392, %252, !dbg !131
  %253 = load i32, i32* %t, align 4, !dbg !131
  %shr398 = lshr i32 %253, 10, !dbg !131
  %and399 = and i32 %shr398, 63, !dbg !131
  %idxprom400 = zext i32 %and399 to i64, !dbg !131
  %arrayidx401 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400, !dbg !131
  %254 = load i32, i32* %arrayidx401, align 4, !dbg !131
  %xor402 = xor i32 %xor397, %254, !dbg !131
  %255 = load i32, i32* %t, align 4, !dbg !131
  %shr403 = lshr i32 %255, 18, !dbg !131
  %and404 = and i32 %shr403, 63, !dbg !131
  %idxprom405 = zext i32 %and404 to i64, !dbg !131
  %arrayidx406 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405, !dbg !131
  %256 = load i32, i32* %arrayidx406, align 4, !dbg !131
  %xor407 = xor i32 %xor402, %256, !dbg !131
  %257 = load i32, i32* %t, align 4, !dbg !131
  %shr408 = lshr i32 %257, 26, !dbg !131
  %and409 = and i32 %shr408, 63, !dbg !131
  %idxprom410 = zext i32 %and409 to i64, !dbg !131
  %arrayidx411 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410, !dbg !131
  %258 = load i32, i32* %arrayidx411, align 4, !dbg !131
  %xor412 = xor i32 %xor407, %258, !dbg !131
  %259 = load i32, i32* %r, align 4, !dbg !131
  %xor413 = xor i32 %259, %xor412, !dbg !131
  store i32 %xor413, i32* %r, align 4, !dbg !131
  %260 = load i32, i32* %r, align 4, !dbg !137
  %261 = load i32*, i32** %s, align 8, !dbg !137
  %arrayidx414 = getelementptr inbounds i32, i32* %261, i64 16, !dbg !137
  %262 = load i32, i32* %arrayidx414, align 4, !dbg !137
  %xor415 = xor i32 %260, %262, !dbg !137
  store i32 %xor415, i32* %u, align 4, !dbg !137
  %263 = load i32, i32* %r, align 4, !dbg !137
  %264 = load i32*, i32** %s, align 8, !dbg !137
  %arrayidx416 = getelementptr inbounds i32, i32* %264, i64 17, !dbg !137
  %265 = load i32, i32* %arrayidx416, align 4, !dbg !137
  %xor417 = xor i32 %263, %265, !dbg !137
  store i32 %xor417, i32* %t, align 4, !dbg !137
  call void @llvm.dbg.declare(metadata i32* %ret418, metadata !139, metadata !DIExpression()), !dbg !141
  %266 = load i32, i32* %t, align 4, !dbg !141
  %267 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %266) #5, !dbg !141, !srcloc !142
  store i32 %267, i32* %ret418, align 4, !dbg !141
  %268 = load i32, i32* %ret418, align 4, !dbg !141
  store i32 %268, i32* %tmp419, align 4, !dbg !141
  %269 = load i32, i32* %tmp419, align 4, !dbg !141
  store i32 %269, i32* %t, align 4, !dbg !137
  %270 = load i32, i32* %u, align 4, !dbg !137
  %shr420 = lshr i32 %270, 2, !dbg !137
  %and421 = and i32 %shr420, 63, !dbg !137
  %idxprom422 = zext i32 %and421 to i64, !dbg !137
  %arrayidx423 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422, !dbg !137
  %271 = load i32, i32* %arrayidx423, align 4, !dbg !137
  %272 = load i32, i32* %u, align 4, !dbg !137
  %shr424 = lshr i32 %272, 10, !dbg !137
  %and425 = and i32 %shr424, 63, !dbg !137
  %idxprom426 = zext i32 %and425 to i64, !dbg !137
  %arrayidx427 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426, !dbg !137
  %273 = load i32, i32* %arrayidx427, align 4, !dbg !137
  %xor428 = xor i32 %271, %273, !dbg !137
  %274 = load i32, i32* %u, align 4, !dbg !137
  %shr429 = lshr i32 %274, 18, !dbg !137
  %and430 = and i32 %shr429, 63, !dbg !137
  %idxprom431 = zext i32 %and430 to i64, !dbg !137
  %arrayidx432 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431, !dbg !137
  %275 = load i32, i32* %arrayidx432, align 4, !dbg !137
  %xor433 = xor i32 %xor428, %275, !dbg !137
  %276 = load i32, i32* %u, align 4, !dbg !137
  %shr434 = lshr i32 %276, 26, !dbg !137
  %and435 = and i32 %shr434, 63, !dbg !137
  %idxprom436 = zext i32 %and435 to i64, !dbg !137
  %arrayidx437 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436, !dbg !137
  %277 = load i32, i32* %arrayidx437, align 4, !dbg !137
  %xor438 = xor i32 %xor433, %277, !dbg !137
  %278 = load i32, i32* %t, align 4, !dbg !137
  %shr439 = lshr i32 %278, 2, !dbg !137
  %and440 = and i32 %shr439, 63, !dbg !137
  %idxprom441 = zext i32 %and440 to i64, !dbg !137
  %arrayidx442 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441, !dbg !137
  %279 = load i32, i32* %arrayidx442, align 4, !dbg !137
  %xor443 = xor i32 %xor438, %279, !dbg !137
  %280 = load i32, i32* %t, align 4, !dbg !137
  %shr444 = lshr i32 %280, 10, !dbg !137
  %and445 = and i32 %shr444, 63, !dbg !137
  %idxprom446 = zext i32 %and445 to i64, !dbg !137
  %arrayidx447 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446, !dbg !137
  %281 = load i32, i32* %arrayidx447, align 4, !dbg !137
  %xor448 = xor i32 %xor443, %281, !dbg !137
  %282 = load i32, i32* %t, align 4, !dbg !137
  %shr449 = lshr i32 %282, 18, !dbg !137
  %and450 = and i32 %shr449, 63, !dbg !137
  %idxprom451 = zext i32 %and450 to i64, !dbg !137
  %arrayidx452 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451, !dbg !137
  %283 = load i32, i32* %arrayidx452, align 4, !dbg !137
  %xor453 = xor i32 %xor448, %283, !dbg !137
  %284 = load i32, i32* %t, align 4, !dbg !137
  %shr454 = lshr i32 %284, 26, !dbg !137
  %and455 = and i32 %shr454, 63, !dbg !137
  %idxprom456 = zext i32 %and455 to i64, !dbg !137
  %arrayidx457 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456, !dbg !137
  %285 = load i32, i32* %arrayidx457, align 4, !dbg !137
  %xor458 = xor i32 %xor453, %285, !dbg !137
  %286 = load i32, i32* %l, align 4, !dbg !137
  %xor459 = xor i32 %286, %xor458, !dbg !137
  store i32 %xor459, i32* %l, align 4, !dbg !137
  %287 = load i32, i32* %l, align 4, !dbg !143
  %288 = load i32*, i32** %s, align 8, !dbg !143
  %arrayidx460 = getelementptr inbounds i32, i32* %288, i64 18, !dbg !143
  %289 = load i32, i32* %arrayidx460, align 4, !dbg !143
  %xor461 = xor i32 %287, %289, !dbg !143
  store i32 %xor461, i32* %u, align 4, !dbg !143
  %290 = load i32, i32* %l, align 4, !dbg !143
  %291 = load i32*, i32** %s, align 8, !dbg !143
  %arrayidx462 = getelementptr inbounds i32, i32* %291, i64 19, !dbg !143
  %292 = load i32, i32* %arrayidx462, align 4, !dbg !143
  %xor463 = xor i32 %290, %292, !dbg !143
  store i32 %xor463, i32* %t, align 4, !dbg !143
  call void @llvm.dbg.declare(metadata i32* %ret464, metadata !145, metadata !DIExpression()), !dbg !147
  %293 = load i32, i32* %t, align 4, !dbg !147
  %294 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %293) #5, !dbg !147, !srcloc !148
  store i32 %294, i32* %ret464, align 4, !dbg !147
  %295 = load i32, i32* %ret464, align 4, !dbg !147
  store i32 %295, i32* %tmp465, align 4, !dbg !147
  %296 = load i32, i32* %tmp465, align 4, !dbg !147
  store i32 %296, i32* %t, align 4, !dbg !143
  %297 = load i32, i32* %u, align 4, !dbg !143
  %shr466 = lshr i32 %297, 2, !dbg !143
  %and467 = and i32 %shr466, 63, !dbg !143
  %idxprom468 = zext i32 %and467 to i64, !dbg !143
  %arrayidx469 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468, !dbg !143
  %298 = load i32, i32* %arrayidx469, align 4, !dbg !143
  %299 = load i32, i32* %u, align 4, !dbg !143
  %shr470 = lshr i32 %299, 10, !dbg !143
  %and471 = and i32 %shr470, 63, !dbg !143
  %idxprom472 = zext i32 %and471 to i64, !dbg !143
  %arrayidx473 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472, !dbg !143
  %300 = load i32, i32* %arrayidx473, align 4, !dbg !143
  %xor474 = xor i32 %298, %300, !dbg !143
  %301 = load i32, i32* %u, align 4, !dbg !143
  %shr475 = lshr i32 %301, 18, !dbg !143
  %and476 = and i32 %shr475, 63, !dbg !143
  %idxprom477 = zext i32 %and476 to i64, !dbg !143
  %arrayidx478 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477, !dbg !143
  %302 = load i32, i32* %arrayidx478, align 4, !dbg !143
  %xor479 = xor i32 %xor474, %302, !dbg !143
  %303 = load i32, i32* %u, align 4, !dbg !143
  %shr480 = lshr i32 %303, 26, !dbg !143
  %and481 = and i32 %shr480, 63, !dbg !143
  %idxprom482 = zext i32 %and481 to i64, !dbg !143
  %arrayidx483 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482, !dbg !143
  %304 = load i32, i32* %arrayidx483, align 4, !dbg !143
  %xor484 = xor i32 %xor479, %304, !dbg !143
  %305 = load i32, i32* %t, align 4, !dbg !143
  %shr485 = lshr i32 %305, 2, !dbg !143
  %and486 = and i32 %shr485, 63, !dbg !143
  %idxprom487 = zext i32 %and486 to i64, !dbg !143
  %arrayidx488 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487, !dbg !143
  %306 = load i32, i32* %arrayidx488, align 4, !dbg !143
  %xor489 = xor i32 %xor484, %306, !dbg !143
  %307 = load i32, i32* %t, align 4, !dbg !143
  %shr490 = lshr i32 %307, 10, !dbg !143
  %and491 = and i32 %shr490, 63, !dbg !143
  %idxprom492 = zext i32 %and491 to i64, !dbg !143
  %arrayidx493 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492, !dbg !143
  %308 = load i32, i32* %arrayidx493, align 4, !dbg !143
  %xor494 = xor i32 %xor489, %308, !dbg !143
  %309 = load i32, i32* %t, align 4, !dbg !143
  %shr495 = lshr i32 %309, 18, !dbg !143
  %and496 = and i32 %shr495, 63, !dbg !143
  %idxprom497 = zext i32 %and496 to i64, !dbg !143
  %arrayidx498 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497, !dbg !143
  %310 = load i32, i32* %arrayidx498, align 4, !dbg !143
  %xor499 = xor i32 %xor494, %310, !dbg !143
  %311 = load i32, i32* %t, align 4, !dbg !143
  %shr500 = lshr i32 %311, 26, !dbg !143
  %and501 = and i32 %shr500, 63, !dbg !143
  %idxprom502 = zext i32 %and501 to i64, !dbg !143
  %arrayidx503 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502, !dbg !143
  %312 = load i32, i32* %arrayidx503, align 4, !dbg !143
  %xor504 = xor i32 %xor499, %312, !dbg !143
  %313 = load i32, i32* %r, align 4, !dbg !143
  %xor505 = xor i32 %313, %xor504, !dbg !143
  store i32 %xor505, i32* %r, align 4, !dbg !143
  %314 = load i32, i32* %r, align 4, !dbg !149
  %315 = load i32*, i32** %s, align 8, !dbg !149
  %arrayidx506 = getelementptr inbounds i32, i32* %315, i64 20, !dbg !149
  %316 = load i32, i32* %arrayidx506, align 4, !dbg !149
  %xor507 = xor i32 %314, %316, !dbg !149
  store i32 %xor507, i32* %u, align 4, !dbg !149
  %317 = load i32, i32* %r, align 4, !dbg !149
  %318 = load i32*, i32** %s, align 8, !dbg !149
  %arrayidx508 = getelementptr inbounds i32, i32* %318, i64 21, !dbg !149
  %319 = load i32, i32* %arrayidx508, align 4, !dbg !149
  %xor509 = xor i32 %317, %319, !dbg !149
  store i32 %xor509, i32* %t, align 4, !dbg !149
  call void @llvm.dbg.declare(metadata i32* %ret510, metadata !151, metadata !DIExpression()), !dbg !153
  %320 = load i32, i32* %t, align 4, !dbg !153
  %321 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %320) #5, !dbg !153, !srcloc !154
  store i32 %321, i32* %ret510, align 4, !dbg !153
  %322 = load i32, i32* %ret510, align 4, !dbg !153
  store i32 %322, i32* %tmp511, align 4, !dbg !153
  %323 = load i32, i32* %tmp511, align 4, !dbg !153
  store i32 %323, i32* %t, align 4, !dbg !149
  %324 = load i32, i32* %u, align 4, !dbg !149
  %shr512 = lshr i32 %324, 2, !dbg !149
  %and513 = and i32 %shr512, 63, !dbg !149
  %idxprom514 = zext i32 %and513 to i64, !dbg !149
  %arrayidx515 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514, !dbg !149
  %325 = load i32, i32* %arrayidx515, align 4, !dbg !149
  %326 = load i32, i32* %u, align 4, !dbg !149
  %shr516 = lshr i32 %326, 10, !dbg !149
  %and517 = and i32 %shr516, 63, !dbg !149
  %idxprom518 = zext i32 %and517 to i64, !dbg !149
  %arrayidx519 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518, !dbg !149
  %327 = load i32, i32* %arrayidx519, align 4, !dbg !149
  %xor520 = xor i32 %325, %327, !dbg !149
  %328 = load i32, i32* %u, align 4, !dbg !149
  %shr521 = lshr i32 %328, 18, !dbg !149
  %and522 = and i32 %shr521, 63, !dbg !149
  %idxprom523 = zext i32 %and522 to i64, !dbg !149
  %arrayidx524 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523, !dbg !149
  %329 = load i32, i32* %arrayidx524, align 4, !dbg !149
  %xor525 = xor i32 %xor520, %329, !dbg !149
  %330 = load i32, i32* %u, align 4, !dbg !149
  %shr526 = lshr i32 %330, 26, !dbg !149
  %and527 = and i32 %shr526, 63, !dbg !149
  %idxprom528 = zext i32 %and527 to i64, !dbg !149
  %arrayidx529 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528, !dbg !149
  %331 = load i32, i32* %arrayidx529, align 4, !dbg !149
  %xor530 = xor i32 %xor525, %331, !dbg !149
  %332 = load i32, i32* %t, align 4, !dbg !149
  %shr531 = lshr i32 %332, 2, !dbg !149
  %and532 = and i32 %shr531, 63, !dbg !149
  %idxprom533 = zext i32 %and532 to i64, !dbg !149
  %arrayidx534 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533, !dbg !149
  %333 = load i32, i32* %arrayidx534, align 4, !dbg !149
  %xor535 = xor i32 %xor530, %333, !dbg !149
  %334 = load i32, i32* %t, align 4, !dbg !149
  %shr536 = lshr i32 %334, 10, !dbg !149
  %and537 = and i32 %shr536, 63, !dbg !149
  %idxprom538 = zext i32 %and537 to i64, !dbg !149
  %arrayidx539 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538, !dbg !149
  %335 = load i32, i32* %arrayidx539, align 4, !dbg !149
  %xor540 = xor i32 %xor535, %335, !dbg !149
  %336 = load i32, i32* %t, align 4, !dbg !149
  %shr541 = lshr i32 %336, 18, !dbg !149
  %and542 = and i32 %shr541, 63, !dbg !149
  %idxprom543 = zext i32 %and542 to i64, !dbg !149
  %arrayidx544 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543, !dbg !149
  %337 = load i32, i32* %arrayidx544, align 4, !dbg !149
  %xor545 = xor i32 %xor540, %337, !dbg !149
  %338 = load i32, i32* %t, align 4, !dbg !149
  %shr546 = lshr i32 %338, 26, !dbg !149
  %and547 = and i32 %shr546, 63, !dbg !149
  %idxprom548 = zext i32 %and547 to i64, !dbg !149
  %arrayidx549 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548, !dbg !149
  %339 = load i32, i32* %arrayidx549, align 4, !dbg !149
  %xor550 = xor i32 %xor545, %339, !dbg !149
  %340 = load i32, i32* %l, align 4, !dbg !149
  %xor551 = xor i32 %340, %xor550, !dbg !149
  store i32 %xor551, i32* %l, align 4, !dbg !149
  %341 = load i32, i32* %l, align 4, !dbg !155
  %342 = load i32*, i32** %s, align 8, !dbg !155
  %arrayidx552 = getelementptr inbounds i32, i32* %342, i64 22, !dbg !155
  %343 = load i32, i32* %arrayidx552, align 4, !dbg !155
  %xor553 = xor i32 %341, %343, !dbg !155
  store i32 %xor553, i32* %u, align 4, !dbg !155
  %344 = load i32, i32* %l, align 4, !dbg !155
  %345 = load i32*, i32** %s, align 8, !dbg !155
  %arrayidx554 = getelementptr inbounds i32, i32* %345, i64 23, !dbg !155
  %346 = load i32, i32* %arrayidx554, align 4, !dbg !155
  %xor555 = xor i32 %344, %346, !dbg !155
  store i32 %xor555, i32* %t, align 4, !dbg !155
  call void @llvm.dbg.declare(metadata i32* %ret556, metadata !157, metadata !DIExpression()), !dbg !159
  %347 = load i32, i32* %t, align 4, !dbg !159
  %348 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %347) #5, !dbg !159, !srcloc !160
  store i32 %348, i32* %ret556, align 4, !dbg !159
  %349 = load i32, i32* %ret556, align 4, !dbg !159
  store i32 %349, i32* %tmp557, align 4, !dbg !159
  %350 = load i32, i32* %tmp557, align 4, !dbg !159
  store i32 %350, i32* %t, align 4, !dbg !155
  %351 = load i32, i32* %u, align 4, !dbg !155
  %shr558 = lshr i32 %351, 2, !dbg !155
  %and559 = and i32 %shr558, 63, !dbg !155
  %idxprom560 = zext i32 %and559 to i64, !dbg !155
  %arrayidx561 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560, !dbg !155
  %352 = load i32, i32* %arrayidx561, align 4, !dbg !155
  %353 = load i32, i32* %u, align 4, !dbg !155
  %shr562 = lshr i32 %353, 10, !dbg !155
  %and563 = and i32 %shr562, 63, !dbg !155
  %idxprom564 = zext i32 %and563 to i64, !dbg !155
  %arrayidx565 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564, !dbg !155
  %354 = load i32, i32* %arrayidx565, align 4, !dbg !155
  %xor566 = xor i32 %352, %354, !dbg !155
  %355 = load i32, i32* %u, align 4, !dbg !155
  %shr567 = lshr i32 %355, 18, !dbg !155
  %and568 = and i32 %shr567, 63, !dbg !155
  %idxprom569 = zext i32 %and568 to i64, !dbg !155
  %arrayidx570 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569, !dbg !155
  %356 = load i32, i32* %arrayidx570, align 4, !dbg !155
  %xor571 = xor i32 %xor566, %356, !dbg !155
  %357 = load i32, i32* %u, align 4, !dbg !155
  %shr572 = lshr i32 %357, 26, !dbg !155
  %and573 = and i32 %shr572, 63, !dbg !155
  %idxprom574 = zext i32 %and573 to i64, !dbg !155
  %arrayidx575 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574, !dbg !155
  %358 = load i32, i32* %arrayidx575, align 4, !dbg !155
  %xor576 = xor i32 %xor571, %358, !dbg !155
  %359 = load i32, i32* %t, align 4, !dbg !155
  %shr577 = lshr i32 %359, 2, !dbg !155
  %and578 = and i32 %shr577, 63, !dbg !155
  %idxprom579 = zext i32 %and578 to i64, !dbg !155
  %arrayidx580 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579, !dbg !155
  %360 = load i32, i32* %arrayidx580, align 4, !dbg !155
  %xor581 = xor i32 %xor576, %360, !dbg !155
  %361 = load i32, i32* %t, align 4, !dbg !155
  %shr582 = lshr i32 %361, 10, !dbg !155
  %and583 = and i32 %shr582, 63, !dbg !155
  %idxprom584 = zext i32 %and583 to i64, !dbg !155
  %arrayidx585 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584, !dbg !155
  %362 = load i32, i32* %arrayidx585, align 4, !dbg !155
  %xor586 = xor i32 %xor581, %362, !dbg !155
  %363 = load i32, i32* %t, align 4, !dbg !155
  %shr587 = lshr i32 %363, 18, !dbg !155
  %and588 = and i32 %shr587, 63, !dbg !155
  %idxprom589 = zext i32 %and588 to i64, !dbg !155
  %arrayidx590 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589, !dbg !155
  %364 = load i32, i32* %arrayidx590, align 4, !dbg !155
  %xor591 = xor i32 %xor586, %364, !dbg !155
  %365 = load i32, i32* %t, align 4, !dbg !155
  %shr592 = lshr i32 %365, 26, !dbg !155
  %and593 = and i32 %shr592, 63, !dbg !155
  %idxprom594 = zext i32 %and593 to i64, !dbg !155
  %arrayidx595 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594, !dbg !155
  %366 = load i32, i32* %arrayidx595, align 4, !dbg !155
  %xor596 = xor i32 %xor591, %366, !dbg !155
  %367 = load i32, i32* %r, align 4, !dbg !155
  %xor597 = xor i32 %367, %xor596, !dbg !155
  store i32 %xor597, i32* %r, align 4, !dbg !155
  %368 = load i32, i32* %r, align 4, !dbg !161
  %369 = load i32*, i32** %s, align 8, !dbg !161
  %arrayidx598 = getelementptr inbounds i32, i32* %369, i64 24, !dbg !161
  %370 = load i32, i32* %arrayidx598, align 4, !dbg !161
  %xor599 = xor i32 %368, %370, !dbg !161
  store i32 %xor599, i32* %u, align 4, !dbg !161
  %371 = load i32, i32* %r, align 4, !dbg !161
  %372 = load i32*, i32** %s, align 8, !dbg !161
  %arrayidx600 = getelementptr inbounds i32, i32* %372, i64 25, !dbg !161
  %373 = load i32, i32* %arrayidx600, align 4, !dbg !161
  %xor601 = xor i32 %371, %373, !dbg !161
  store i32 %xor601, i32* %t, align 4, !dbg !161
  call void @llvm.dbg.declare(metadata i32* %ret602, metadata !163, metadata !DIExpression()), !dbg !165
  %374 = load i32, i32* %t, align 4, !dbg !165
  %375 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %374) #5, !dbg !165, !srcloc !166
  store i32 %375, i32* %ret602, align 4, !dbg !165
  %376 = load i32, i32* %ret602, align 4, !dbg !165
  store i32 %376, i32* %tmp603, align 4, !dbg !165
  %377 = load i32, i32* %tmp603, align 4, !dbg !165
  store i32 %377, i32* %t, align 4, !dbg !161
  %378 = load i32, i32* %u, align 4, !dbg !161
  %shr604 = lshr i32 %378, 2, !dbg !161
  %and605 = and i32 %shr604, 63, !dbg !161
  %idxprom606 = zext i32 %and605 to i64, !dbg !161
  %arrayidx607 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606, !dbg !161
  %379 = load i32, i32* %arrayidx607, align 4, !dbg !161
  %380 = load i32, i32* %u, align 4, !dbg !161
  %shr608 = lshr i32 %380, 10, !dbg !161
  %and609 = and i32 %shr608, 63, !dbg !161
  %idxprom610 = zext i32 %and609 to i64, !dbg !161
  %arrayidx611 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610, !dbg !161
  %381 = load i32, i32* %arrayidx611, align 4, !dbg !161
  %xor612 = xor i32 %379, %381, !dbg !161
  %382 = load i32, i32* %u, align 4, !dbg !161
  %shr613 = lshr i32 %382, 18, !dbg !161
  %and614 = and i32 %shr613, 63, !dbg !161
  %idxprom615 = zext i32 %and614 to i64, !dbg !161
  %arrayidx616 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615, !dbg !161
  %383 = load i32, i32* %arrayidx616, align 4, !dbg !161
  %xor617 = xor i32 %xor612, %383, !dbg !161
  %384 = load i32, i32* %u, align 4, !dbg !161
  %shr618 = lshr i32 %384, 26, !dbg !161
  %and619 = and i32 %shr618, 63, !dbg !161
  %idxprom620 = zext i32 %and619 to i64, !dbg !161
  %arrayidx621 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620, !dbg !161
  %385 = load i32, i32* %arrayidx621, align 4, !dbg !161
  %xor622 = xor i32 %xor617, %385, !dbg !161
  %386 = load i32, i32* %t, align 4, !dbg !161
  %shr623 = lshr i32 %386, 2, !dbg !161
  %and624 = and i32 %shr623, 63, !dbg !161
  %idxprom625 = zext i32 %and624 to i64, !dbg !161
  %arrayidx626 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625, !dbg !161
  %387 = load i32, i32* %arrayidx626, align 4, !dbg !161
  %xor627 = xor i32 %xor622, %387, !dbg !161
  %388 = load i32, i32* %t, align 4, !dbg !161
  %shr628 = lshr i32 %388, 10, !dbg !161
  %and629 = and i32 %shr628, 63, !dbg !161
  %idxprom630 = zext i32 %and629 to i64, !dbg !161
  %arrayidx631 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630, !dbg !161
  %389 = load i32, i32* %arrayidx631, align 4, !dbg !161
  %xor632 = xor i32 %xor627, %389, !dbg !161
  %390 = load i32, i32* %t, align 4, !dbg !161
  %shr633 = lshr i32 %390, 18, !dbg !161
  %and634 = and i32 %shr633, 63, !dbg !161
  %idxprom635 = zext i32 %and634 to i64, !dbg !161
  %arrayidx636 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635, !dbg !161
  %391 = load i32, i32* %arrayidx636, align 4, !dbg !161
  %xor637 = xor i32 %xor632, %391, !dbg !161
  %392 = load i32, i32* %t, align 4, !dbg !161
  %shr638 = lshr i32 %392, 26, !dbg !161
  %and639 = and i32 %shr638, 63, !dbg !161
  %idxprom640 = zext i32 %and639 to i64, !dbg !161
  %arrayidx641 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640, !dbg !161
  %393 = load i32, i32* %arrayidx641, align 4, !dbg !161
  %xor642 = xor i32 %xor637, %393, !dbg !161
  %394 = load i32, i32* %l, align 4, !dbg !161
  %xor643 = xor i32 %394, %xor642, !dbg !161
  store i32 %xor643, i32* %l, align 4, !dbg !161
  %395 = load i32, i32* %l, align 4, !dbg !167
  %396 = load i32*, i32** %s, align 8, !dbg !167
  %arrayidx644 = getelementptr inbounds i32, i32* %396, i64 26, !dbg !167
  %397 = load i32, i32* %arrayidx644, align 4, !dbg !167
  %xor645 = xor i32 %395, %397, !dbg !167
  store i32 %xor645, i32* %u, align 4, !dbg !167
  %398 = load i32, i32* %l, align 4, !dbg !167
  %399 = load i32*, i32** %s, align 8, !dbg !167
  %arrayidx646 = getelementptr inbounds i32, i32* %399, i64 27, !dbg !167
  %400 = load i32, i32* %arrayidx646, align 4, !dbg !167
  %xor647 = xor i32 %398, %400, !dbg !167
  store i32 %xor647, i32* %t, align 4, !dbg !167
  call void @llvm.dbg.declare(metadata i32* %ret648, metadata !169, metadata !DIExpression()), !dbg !171
  %401 = load i32, i32* %t, align 4, !dbg !171
  %402 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %401) #5, !dbg !171, !srcloc !172
  store i32 %402, i32* %ret648, align 4, !dbg !171
  %403 = load i32, i32* %ret648, align 4, !dbg !171
  store i32 %403, i32* %tmp649, align 4, !dbg !171
  %404 = load i32, i32* %tmp649, align 4, !dbg !171
  store i32 %404, i32* %t, align 4, !dbg !167
  %405 = load i32, i32* %u, align 4, !dbg !167
  %shr650 = lshr i32 %405, 2, !dbg !167
  %and651 = and i32 %shr650, 63, !dbg !167
  %idxprom652 = zext i32 %and651 to i64, !dbg !167
  %arrayidx653 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652, !dbg !167
  %406 = load i32, i32* %arrayidx653, align 4, !dbg !167
  %407 = load i32, i32* %u, align 4, !dbg !167
  %shr654 = lshr i32 %407, 10, !dbg !167
  %and655 = and i32 %shr654, 63, !dbg !167
  %idxprom656 = zext i32 %and655 to i64, !dbg !167
  %arrayidx657 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656, !dbg !167
  %408 = load i32, i32* %arrayidx657, align 4, !dbg !167
  %xor658 = xor i32 %406, %408, !dbg !167
  %409 = load i32, i32* %u, align 4, !dbg !167
  %shr659 = lshr i32 %409, 18, !dbg !167
  %and660 = and i32 %shr659, 63, !dbg !167
  %idxprom661 = zext i32 %and660 to i64, !dbg !167
  %arrayidx662 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661, !dbg !167
  %410 = load i32, i32* %arrayidx662, align 4, !dbg !167
  %xor663 = xor i32 %xor658, %410, !dbg !167
  %411 = load i32, i32* %u, align 4, !dbg !167
  %shr664 = lshr i32 %411, 26, !dbg !167
  %and665 = and i32 %shr664, 63, !dbg !167
  %idxprom666 = zext i32 %and665 to i64, !dbg !167
  %arrayidx667 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666, !dbg !167
  %412 = load i32, i32* %arrayidx667, align 4, !dbg !167
  %xor668 = xor i32 %xor663, %412, !dbg !167
  %413 = load i32, i32* %t, align 4, !dbg !167
  %shr669 = lshr i32 %413, 2, !dbg !167
  %and670 = and i32 %shr669, 63, !dbg !167
  %idxprom671 = zext i32 %and670 to i64, !dbg !167
  %arrayidx672 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671, !dbg !167
  %414 = load i32, i32* %arrayidx672, align 4, !dbg !167
  %xor673 = xor i32 %xor668, %414, !dbg !167
  %415 = load i32, i32* %t, align 4, !dbg !167
  %shr674 = lshr i32 %415, 10, !dbg !167
  %and675 = and i32 %shr674, 63, !dbg !167
  %idxprom676 = zext i32 %and675 to i64, !dbg !167
  %arrayidx677 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676, !dbg !167
  %416 = load i32, i32* %arrayidx677, align 4, !dbg !167
  %xor678 = xor i32 %xor673, %416, !dbg !167
  %417 = load i32, i32* %t, align 4, !dbg !167
  %shr679 = lshr i32 %417, 18, !dbg !167
  %and680 = and i32 %shr679, 63, !dbg !167
  %idxprom681 = zext i32 %and680 to i64, !dbg !167
  %arrayidx682 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681, !dbg !167
  %418 = load i32, i32* %arrayidx682, align 4, !dbg !167
  %xor683 = xor i32 %xor678, %418, !dbg !167
  %419 = load i32, i32* %t, align 4, !dbg !167
  %shr684 = lshr i32 %419, 26, !dbg !167
  %and685 = and i32 %shr684, 63, !dbg !167
  %idxprom686 = zext i32 %and685 to i64, !dbg !167
  %arrayidx687 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686, !dbg !167
  %420 = load i32, i32* %arrayidx687, align 4, !dbg !167
  %xor688 = xor i32 %xor683, %420, !dbg !167
  %421 = load i32, i32* %r, align 4, !dbg !167
  %xor689 = xor i32 %421, %xor688, !dbg !167
  store i32 %xor689, i32* %r, align 4, !dbg !167
  %422 = load i32, i32* %r, align 4, !dbg !173
  %423 = load i32*, i32** %s, align 8, !dbg !173
  %arrayidx690 = getelementptr inbounds i32, i32* %423, i64 28, !dbg !173
  %424 = load i32, i32* %arrayidx690, align 4, !dbg !173
  %xor691 = xor i32 %422, %424, !dbg !173
  store i32 %xor691, i32* %u, align 4, !dbg !173
  %425 = load i32, i32* %r, align 4, !dbg !173
  %426 = load i32*, i32** %s, align 8, !dbg !173
  %arrayidx692 = getelementptr inbounds i32, i32* %426, i64 29, !dbg !173
  %427 = load i32, i32* %arrayidx692, align 4, !dbg !173
  %xor693 = xor i32 %425, %427, !dbg !173
  store i32 %xor693, i32* %t, align 4, !dbg !173
  call void @llvm.dbg.declare(metadata i32* %ret694, metadata !175, metadata !DIExpression()), !dbg !177
  %428 = load i32, i32* %t, align 4, !dbg !177
  %429 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %428) #5, !dbg !177, !srcloc !178
  store i32 %429, i32* %ret694, align 4, !dbg !177
  %430 = load i32, i32* %ret694, align 4, !dbg !177
  store i32 %430, i32* %tmp695, align 4, !dbg !177
  %431 = load i32, i32* %tmp695, align 4, !dbg !177
  store i32 %431, i32* %t, align 4, !dbg !173
  %432 = load i32, i32* %u, align 4, !dbg !173
  %shr696 = lshr i32 %432, 2, !dbg !173
  %and697 = and i32 %shr696, 63, !dbg !173
  %idxprom698 = zext i32 %and697 to i64, !dbg !173
  %arrayidx699 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698, !dbg !173
  %433 = load i32, i32* %arrayidx699, align 4, !dbg !173
  %434 = load i32, i32* %u, align 4, !dbg !173
  %shr700 = lshr i32 %434, 10, !dbg !173
  %and701 = and i32 %shr700, 63, !dbg !173
  %idxprom702 = zext i32 %and701 to i64, !dbg !173
  %arrayidx703 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702, !dbg !173
  %435 = load i32, i32* %arrayidx703, align 4, !dbg !173
  %xor704 = xor i32 %433, %435, !dbg !173
  %436 = load i32, i32* %u, align 4, !dbg !173
  %shr705 = lshr i32 %436, 18, !dbg !173
  %and706 = and i32 %shr705, 63, !dbg !173
  %idxprom707 = zext i32 %and706 to i64, !dbg !173
  %arrayidx708 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707, !dbg !173
  %437 = load i32, i32* %arrayidx708, align 4, !dbg !173
  %xor709 = xor i32 %xor704, %437, !dbg !173
  %438 = load i32, i32* %u, align 4, !dbg !173
  %shr710 = lshr i32 %438, 26, !dbg !173
  %and711 = and i32 %shr710, 63, !dbg !173
  %idxprom712 = zext i32 %and711 to i64, !dbg !173
  %arrayidx713 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712, !dbg !173
  %439 = load i32, i32* %arrayidx713, align 4, !dbg !173
  %xor714 = xor i32 %xor709, %439, !dbg !173
  %440 = load i32, i32* %t, align 4, !dbg !173
  %shr715 = lshr i32 %440, 2, !dbg !173
  %and716 = and i32 %shr715, 63, !dbg !173
  %idxprom717 = zext i32 %and716 to i64, !dbg !173
  %arrayidx718 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717, !dbg !173
  %441 = load i32, i32* %arrayidx718, align 4, !dbg !173
  %xor719 = xor i32 %xor714, %441, !dbg !173
  %442 = load i32, i32* %t, align 4, !dbg !173
  %shr720 = lshr i32 %442, 10, !dbg !173
  %and721 = and i32 %shr720, 63, !dbg !173
  %idxprom722 = zext i32 %and721 to i64, !dbg !173
  %arrayidx723 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722, !dbg !173
  %443 = load i32, i32* %arrayidx723, align 4, !dbg !173
  %xor724 = xor i32 %xor719, %443, !dbg !173
  %444 = load i32, i32* %t, align 4, !dbg !173
  %shr725 = lshr i32 %444, 18, !dbg !173
  %and726 = and i32 %shr725, 63, !dbg !173
  %idxprom727 = zext i32 %and726 to i64, !dbg !173
  %arrayidx728 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727, !dbg !173
  %445 = load i32, i32* %arrayidx728, align 4, !dbg !173
  %xor729 = xor i32 %xor724, %445, !dbg !173
  %446 = load i32, i32* %t, align 4, !dbg !173
  %shr730 = lshr i32 %446, 26, !dbg !173
  %and731 = and i32 %shr730, 63, !dbg !173
  %idxprom732 = zext i32 %and731 to i64, !dbg !173
  %arrayidx733 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732, !dbg !173
  %447 = load i32, i32* %arrayidx733, align 4, !dbg !173
  %xor734 = xor i32 %xor729, %447, !dbg !173
  %448 = load i32, i32* %l, align 4, !dbg !173
  %xor735 = xor i32 %448, %xor734, !dbg !173
  store i32 %xor735, i32* %l, align 4, !dbg !173
  %449 = load i32, i32* %l, align 4, !dbg !179
  %450 = load i32*, i32** %s, align 8, !dbg !179
  %arrayidx736 = getelementptr inbounds i32, i32* %450, i64 30, !dbg !179
  %451 = load i32, i32* %arrayidx736, align 4, !dbg !179
  %xor737 = xor i32 %449, %451, !dbg !179
  store i32 %xor737, i32* %u, align 4, !dbg !179
  %452 = load i32, i32* %l, align 4, !dbg !179
  %453 = load i32*, i32** %s, align 8, !dbg !179
  %arrayidx738 = getelementptr inbounds i32, i32* %453, i64 31, !dbg !179
  %454 = load i32, i32* %arrayidx738, align 4, !dbg !179
  %xor739 = xor i32 %452, %454, !dbg !179
  store i32 %xor739, i32* %t, align 4, !dbg !179
  call void @llvm.dbg.declare(metadata i32* %ret740, metadata !181, metadata !DIExpression()), !dbg !183
  %455 = load i32, i32* %t, align 4, !dbg !183
  %456 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %455) #5, !dbg !183, !srcloc !184
  store i32 %456, i32* %ret740, align 4, !dbg !183
  %457 = load i32, i32* %ret740, align 4, !dbg !183
  store i32 %457, i32* %tmp741, align 4, !dbg !183
  %458 = load i32, i32* %tmp741, align 4, !dbg !183
  store i32 %458, i32* %t, align 4, !dbg !179
  %459 = load i32, i32* %u, align 4, !dbg !179
  %shr742 = lshr i32 %459, 2, !dbg !179
  %and743 = and i32 %shr742, 63, !dbg !179
  %idxprom744 = zext i32 %and743 to i64, !dbg !179
  %arrayidx745 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744, !dbg !179
  %460 = load i32, i32* %arrayidx745, align 4, !dbg !179
  %461 = load i32, i32* %u, align 4, !dbg !179
  %shr746 = lshr i32 %461, 10, !dbg !179
  %and747 = and i32 %shr746, 63, !dbg !179
  %idxprom748 = zext i32 %and747 to i64, !dbg !179
  %arrayidx749 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748, !dbg !179
  %462 = load i32, i32* %arrayidx749, align 4, !dbg !179
  %xor750 = xor i32 %460, %462, !dbg !179
  %463 = load i32, i32* %u, align 4, !dbg !179
  %shr751 = lshr i32 %463, 18, !dbg !179
  %and752 = and i32 %shr751, 63, !dbg !179
  %idxprom753 = zext i32 %and752 to i64, !dbg !179
  %arrayidx754 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753, !dbg !179
  %464 = load i32, i32* %arrayidx754, align 4, !dbg !179
  %xor755 = xor i32 %xor750, %464, !dbg !179
  %465 = load i32, i32* %u, align 4, !dbg !179
  %shr756 = lshr i32 %465, 26, !dbg !179
  %and757 = and i32 %shr756, 63, !dbg !179
  %idxprom758 = zext i32 %and757 to i64, !dbg !179
  %arrayidx759 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758, !dbg !179
  %466 = load i32, i32* %arrayidx759, align 4, !dbg !179
  %xor760 = xor i32 %xor755, %466, !dbg !179
  %467 = load i32, i32* %t, align 4, !dbg !179
  %shr761 = lshr i32 %467, 2, !dbg !179
  %and762 = and i32 %shr761, 63, !dbg !179
  %idxprom763 = zext i32 %and762 to i64, !dbg !179
  %arrayidx764 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763, !dbg !179
  %468 = load i32, i32* %arrayidx764, align 4, !dbg !179
  %xor765 = xor i32 %xor760, %468, !dbg !179
  %469 = load i32, i32* %t, align 4, !dbg !179
  %shr766 = lshr i32 %469, 10, !dbg !179
  %and767 = and i32 %shr766, 63, !dbg !179
  %idxprom768 = zext i32 %and767 to i64, !dbg !179
  %arrayidx769 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768, !dbg !179
  %470 = load i32, i32* %arrayidx769, align 4, !dbg !179
  %xor770 = xor i32 %xor765, %470, !dbg !179
  %471 = load i32, i32* %t, align 4, !dbg !179
  %shr771 = lshr i32 %471, 18, !dbg !179
  %and772 = and i32 %shr771, 63, !dbg !179
  %idxprom773 = zext i32 %and772 to i64, !dbg !179
  %arrayidx774 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773, !dbg !179
  %472 = load i32, i32* %arrayidx774, align 4, !dbg !179
  %xor775 = xor i32 %xor770, %472, !dbg !179
  %473 = load i32, i32* %t, align 4, !dbg !179
  %shr776 = lshr i32 %473, 26, !dbg !179
  %and777 = and i32 %shr776, 63, !dbg !179
  %idxprom778 = zext i32 %and777 to i64, !dbg !179
  %arrayidx779 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778, !dbg !179
  %474 = load i32, i32* %arrayidx779, align 4, !dbg !179
  %xor780 = xor i32 %xor775, %474, !dbg !179
  %475 = load i32, i32* %r, align 4, !dbg !179
  %xor781 = xor i32 %475, %xor780, !dbg !179
  store i32 %xor781, i32* %r, align 4, !dbg !179
  br label %if.end, !dbg !185

if.else:                                          ; preds = %entry
  %476 = load i32, i32* %r, align 4, !dbg !186
  %477 = load i32*, i32** %s, align 8, !dbg !186
  %arrayidx782 = getelementptr inbounds i32, i32* %477, i64 30, !dbg !186
  %478 = load i32, i32* %arrayidx782, align 4, !dbg !186
  %xor783 = xor i32 %476, %478, !dbg !186
  store i32 %xor783, i32* %u, align 4, !dbg !186
  %479 = load i32, i32* %r, align 4, !dbg !186
  %480 = load i32*, i32** %s, align 8, !dbg !186
  %arrayidx784 = getelementptr inbounds i32, i32* %480, i64 31, !dbg !186
  %481 = load i32, i32* %arrayidx784, align 4, !dbg !186
  %xor785 = xor i32 %479, %481, !dbg !186
  store i32 %xor785, i32* %t, align 4, !dbg !186
  call void @llvm.dbg.declare(metadata i32* %ret786, metadata !189, metadata !DIExpression()), !dbg !191
  %482 = load i32, i32* %t, align 4, !dbg !191
  %483 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %482) #5, !dbg !191, !srcloc !192
  store i32 %483, i32* %ret786, align 4, !dbg !191
  %484 = load i32, i32* %ret786, align 4, !dbg !191
  store i32 %484, i32* %tmp787, align 4, !dbg !191
  %485 = load i32, i32* %tmp787, align 4, !dbg !191
  store i32 %485, i32* %t, align 4, !dbg !186
  %486 = load i32, i32* %u, align 4, !dbg !186
  %shr788 = lshr i32 %486, 2, !dbg !186
  %and789 = and i32 %shr788, 63, !dbg !186
  %idxprom790 = zext i32 %and789 to i64, !dbg !186
  %arrayidx791 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790, !dbg !186
  %487 = load i32, i32* %arrayidx791, align 4, !dbg !186
  %488 = load i32, i32* %u, align 4, !dbg !186
  %shr792 = lshr i32 %488, 10, !dbg !186
  %and793 = and i32 %shr792, 63, !dbg !186
  %idxprom794 = zext i32 %and793 to i64, !dbg !186
  %arrayidx795 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794, !dbg !186
  %489 = load i32, i32* %arrayidx795, align 4, !dbg !186
  %xor796 = xor i32 %487, %489, !dbg !186
  %490 = load i32, i32* %u, align 4, !dbg !186
  %shr797 = lshr i32 %490, 18, !dbg !186
  %and798 = and i32 %shr797, 63, !dbg !186
  %idxprom799 = zext i32 %and798 to i64, !dbg !186
  %arrayidx800 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799, !dbg !186
  %491 = load i32, i32* %arrayidx800, align 4, !dbg !186
  %xor801 = xor i32 %xor796, %491, !dbg !186
  %492 = load i32, i32* %u, align 4, !dbg !186
  %shr802 = lshr i32 %492, 26, !dbg !186
  %and803 = and i32 %shr802, 63, !dbg !186
  %idxprom804 = zext i32 %and803 to i64, !dbg !186
  %arrayidx805 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804, !dbg !186
  %493 = load i32, i32* %arrayidx805, align 4, !dbg !186
  %xor806 = xor i32 %xor801, %493, !dbg !186
  %494 = load i32, i32* %t, align 4, !dbg !186
  %shr807 = lshr i32 %494, 2, !dbg !186
  %and808 = and i32 %shr807, 63, !dbg !186
  %idxprom809 = zext i32 %and808 to i64, !dbg !186
  %arrayidx810 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809, !dbg !186
  %495 = load i32, i32* %arrayidx810, align 4, !dbg !186
  %xor811 = xor i32 %xor806, %495, !dbg !186
  %496 = load i32, i32* %t, align 4, !dbg !186
  %shr812 = lshr i32 %496, 10, !dbg !186
  %and813 = and i32 %shr812, 63, !dbg !186
  %idxprom814 = zext i32 %and813 to i64, !dbg !186
  %arrayidx815 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814, !dbg !186
  %497 = load i32, i32* %arrayidx815, align 4, !dbg !186
  %xor816 = xor i32 %xor811, %497, !dbg !186
  %498 = load i32, i32* %t, align 4, !dbg !186
  %shr817 = lshr i32 %498, 18, !dbg !186
  %and818 = and i32 %shr817, 63, !dbg !186
  %idxprom819 = zext i32 %and818 to i64, !dbg !186
  %arrayidx820 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819, !dbg !186
  %499 = load i32, i32* %arrayidx820, align 4, !dbg !186
  %xor821 = xor i32 %xor816, %499, !dbg !186
  %500 = load i32, i32* %t, align 4, !dbg !186
  %shr822 = lshr i32 %500, 26, !dbg !186
  %and823 = and i32 %shr822, 63, !dbg !186
  %idxprom824 = zext i32 %and823 to i64, !dbg !186
  %arrayidx825 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824, !dbg !186
  %501 = load i32, i32* %arrayidx825, align 4, !dbg !186
  %xor826 = xor i32 %xor821, %501, !dbg !186
  %502 = load i32, i32* %l, align 4, !dbg !186
  %xor827 = xor i32 %502, %xor826, !dbg !186
  store i32 %xor827, i32* %l, align 4, !dbg !186
  %503 = load i32, i32* %l, align 4, !dbg !193
  %504 = load i32*, i32** %s, align 8, !dbg !193
  %arrayidx828 = getelementptr inbounds i32, i32* %504, i64 28, !dbg !193
  %505 = load i32, i32* %arrayidx828, align 4, !dbg !193
  %xor829 = xor i32 %503, %505, !dbg !193
  store i32 %xor829, i32* %u, align 4, !dbg !193
  %506 = load i32, i32* %l, align 4, !dbg !193
  %507 = load i32*, i32** %s, align 8, !dbg !193
  %arrayidx830 = getelementptr inbounds i32, i32* %507, i64 29, !dbg !193
  %508 = load i32, i32* %arrayidx830, align 4, !dbg !193
  %xor831 = xor i32 %506, %508, !dbg !193
  store i32 %xor831, i32* %t, align 4, !dbg !193
  call void @llvm.dbg.declare(metadata i32* %ret832, metadata !195, metadata !DIExpression()), !dbg !197
  %509 = load i32, i32* %t, align 4, !dbg !197
  %510 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %509) #5, !dbg !197, !srcloc !198
  store i32 %510, i32* %ret832, align 4, !dbg !197
  %511 = load i32, i32* %ret832, align 4, !dbg !197
  store i32 %511, i32* %tmp833, align 4, !dbg !197
  %512 = load i32, i32* %tmp833, align 4, !dbg !197
  store i32 %512, i32* %t, align 4, !dbg !193
  %513 = load i32, i32* %u, align 4, !dbg !193
  %shr834 = lshr i32 %513, 2, !dbg !193
  %and835 = and i32 %shr834, 63, !dbg !193
  %idxprom836 = zext i32 %and835 to i64, !dbg !193
  %arrayidx837 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836, !dbg !193
  %514 = load i32, i32* %arrayidx837, align 4, !dbg !193
  %515 = load i32, i32* %u, align 4, !dbg !193
  %shr838 = lshr i32 %515, 10, !dbg !193
  %and839 = and i32 %shr838, 63, !dbg !193
  %idxprom840 = zext i32 %and839 to i64, !dbg !193
  %arrayidx841 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840, !dbg !193
  %516 = load i32, i32* %arrayidx841, align 4, !dbg !193
  %xor842 = xor i32 %514, %516, !dbg !193
  %517 = load i32, i32* %u, align 4, !dbg !193
  %shr843 = lshr i32 %517, 18, !dbg !193
  %and844 = and i32 %shr843, 63, !dbg !193
  %idxprom845 = zext i32 %and844 to i64, !dbg !193
  %arrayidx846 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845, !dbg !193
  %518 = load i32, i32* %arrayidx846, align 4, !dbg !193
  %xor847 = xor i32 %xor842, %518, !dbg !193
  %519 = load i32, i32* %u, align 4, !dbg !193
  %shr848 = lshr i32 %519, 26, !dbg !193
  %and849 = and i32 %shr848, 63, !dbg !193
  %idxprom850 = zext i32 %and849 to i64, !dbg !193
  %arrayidx851 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850, !dbg !193
  %520 = load i32, i32* %arrayidx851, align 4, !dbg !193
  %xor852 = xor i32 %xor847, %520, !dbg !193
  %521 = load i32, i32* %t, align 4, !dbg !193
  %shr853 = lshr i32 %521, 2, !dbg !193
  %and854 = and i32 %shr853, 63, !dbg !193
  %idxprom855 = zext i32 %and854 to i64, !dbg !193
  %arrayidx856 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855, !dbg !193
  %522 = load i32, i32* %arrayidx856, align 4, !dbg !193
  %xor857 = xor i32 %xor852, %522, !dbg !193
  %523 = load i32, i32* %t, align 4, !dbg !193
  %shr858 = lshr i32 %523, 10, !dbg !193
  %and859 = and i32 %shr858, 63, !dbg !193
  %idxprom860 = zext i32 %and859 to i64, !dbg !193
  %arrayidx861 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860, !dbg !193
  %524 = load i32, i32* %arrayidx861, align 4, !dbg !193
  %xor862 = xor i32 %xor857, %524, !dbg !193
  %525 = load i32, i32* %t, align 4, !dbg !193
  %shr863 = lshr i32 %525, 18, !dbg !193
  %and864 = and i32 %shr863, 63, !dbg !193
  %idxprom865 = zext i32 %and864 to i64, !dbg !193
  %arrayidx866 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865, !dbg !193
  %526 = load i32, i32* %arrayidx866, align 4, !dbg !193
  %xor867 = xor i32 %xor862, %526, !dbg !193
  %527 = load i32, i32* %t, align 4, !dbg !193
  %shr868 = lshr i32 %527, 26, !dbg !193
  %and869 = and i32 %shr868, 63, !dbg !193
  %idxprom870 = zext i32 %and869 to i64, !dbg !193
  %arrayidx871 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870, !dbg !193
  %528 = load i32, i32* %arrayidx871, align 4, !dbg !193
  %xor872 = xor i32 %xor867, %528, !dbg !193
  %529 = load i32, i32* %r, align 4, !dbg !193
  %xor873 = xor i32 %529, %xor872, !dbg !193
  store i32 %xor873, i32* %r, align 4, !dbg !193
  %530 = load i32, i32* %r, align 4, !dbg !199
  %531 = load i32*, i32** %s, align 8, !dbg !199
  %arrayidx874 = getelementptr inbounds i32, i32* %531, i64 26, !dbg !199
  %532 = load i32, i32* %arrayidx874, align 4, !dbg !199
  %xor875 = xor i32 %530, %532, !dbg !199
  store i32 %xor875, i32* %u, align 4, !dbg !199
  %533 = load i32, i32* %r, align 4, !dbg !199
  %534 = load i32*, i32** %s, align 8, !dbg !199
  %arrayidx876 = getelementptr inbounds i32, i32* %534, i64 27, !dbg !199
  %535 = load i32, i32* %arrayidx876, align 4, !dbg !199
  %xor877 = xor i32 %533, %535, !dbg !199
  store i32 %xor877, i32* %t, align 4, !dbg !199
  call void @llvm.dbg.declare(metadata i32* %ret878, metadata !201, metadata !DIExpression()), !dbg !203
  %536 = load i32, i32* %t, align 4, !dbg !203
  %537 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %536) #5, !dbg !203, !srcloc !204
  store i32 %537, i32* %ret878, align 4, !dbg !203
  %538 = load i32, i32* %ret878, align 4, !dbg !203
  store i32 %538, i32* %tmp879, align 4, !dbg !203
  %539 = load i32, i32* %tmp879, align 4, !dbg !203
  store i32 %539, i32* %t, align 4, !dbg !199
  %540 = load i32, i32* %u, align 4, !dbg !199
  %shr880 = lshr i32 %540, 2, !dbg !199
  %and881 = and i32 %shr880, 63, !dbg !199
  %idxprom882 = zext i32 %and881 to i64, !dbg !199
  %arrayidx883 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882, !dbg !199
  %541 = load i32, i32* %arrayidx883, align 4, !dbg !199
  %542 = load i32, i32* %u, align 4, !dbg !199
  %shr884 = lshr i32 %542, 10, !dbg !199
  %and885 = and i32 %shr884, 63, !dbg !199
  %idxprom886 = zext i32 %and885 to i64, !dbg !199
  %arrayidx887 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886, !dbg !199
  %543 = load i32, i32* %arrayidx887, align 4, !dbg !199
  %xor888 = xor i32 %541, %543, !dbg !199
  %544 = load i32, i32* %u, align 4, !dbg !199
  %shr889 = lshr i32 %544, 18, !dbg !199
  %and890 = and i32 %shr889, 63, !dbg !199
  %idxprom891 = zext i32 %and890 to i64, !dbg !199
  %arrayidx892 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891, !dbg !199
  %545 = load i32, i32* %arrayidx892, align 4, !dbg !199
  %xor893 = xor i32 %xor888, %545, !dbg !199
  %546 = load i32, i32* %u, align 4, !dbg !199
  %shr894 = lshr i32 %546, 26, !dbg !199
  %and895 = and i32 %shr894, 63, !dbg !199
  %idxprom896 = zext i32 %and895 to i64, !dbg !199
  %arrayidx897 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896, !dbg !199
  %547 = load i32, i32* %arrayidx897, align 4, !dbg !199
  %xor898 = xor i32 %xor893, %547, !dbg !199
  %548 = load i32, i32* %t, align 4, !dbg !199
  %shr899 = lshr i32 %548, 2, !dbg !199
  %and900 = and i32 %shr899, 63, !dbg !199
  %idxprom901 = zext i32 %and900 to i64, !dbg !199
  %arrayidx902 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901, !dbg !199
  %549 = load i32, i32* %arrayidx902, align 4, !dbg !199
  %xor903 = xor i32 %xor898, %549, !dbg !199
  %550 = load i32, i32* %t, align 4, !dbg !199
  %shr904 = lshr i32 %550, 10, !dbg !199
  %and905 = and i32 %shr904, 63, !dbg !199
  %idxprom906 = zext i32 %and905 to i64, !dbg !199
  %arrayidx907 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906, !dbg !199
  %551 = load i32, i32* %arrayidx907, align 4, !dbg !199
  %xor908 = xor i32 %xor903, %551, !dbg !199
  %552 = load i32, i32* %t, align 4, !dbg !199
  %shr909 = lshr i32 %552, 18, !dbg !199
  %and910 = and i32 %shr909, 63, !dbg !199
  %idxprom911 = zext i32 %and910 to i64, !dbg !199
  %arrayidx912 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911, !dbg !199
  %553 = load i32, i32* %arrayidx912, align 4, !dbg !199
  %xor913 = xor i32 %xor908, %553, !dbg !199
  %554 = load i32, i32* %t, align 4, !dbg !199
  %shr914 = lshr i32 %554, 26, !dbg !199
  %and915 = and i32 %shr914, 63, !dbg !199
  %idxprom916 = zext i32 %and915 to i64, !dbg !199
  %arrayidx917 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916, !dbg !199
  %555 = load i32, i32* %arrayidx917, align 4, !dbg !199
  %xor918 = xor i32 %xor913, %555, !dbg !199
  %556 = load i32, i32* %l, align 4, !dbg !199
  %xor919 = xor i32 %556, %xor918, !dbg !199
  store i32 %xor919, i32* %l, align 4, !dbg !199
  %557 = load i32, i32* %l, align 4, !dbg !205
  %558 = load i32*, i32** %s, align 8, !dbg !205
  %arrayidx920 = getelementptr inbounds i32, i32* %558, i64 24, !dbg !205
  %559 = load i32, i32* %arrayidx920, align 4, !dbg !205
  %xor921 = xor i32 %557, %559, !dbg !205
  store i32 %xor921, i32* %u, align 4, !dbg !205
  %560 = load i32, i32* %l, align 4, !dbg !205
  %561 = load i32*, i32** %s, align 8, !dbg !205
  %arrayidx922 = getelementptr inbounds i32, i32* %561, i64 25, !dbg !205
  %562 = load i32, i32* %arrayidx922, align 4, !dbg !205
  %xor923 = xor i32 %560, %562, !dbg !205
  store i32 %xor923, i32* %t, align 4, !dbg !205
  call void @llvm.dbg.declare(metadata i32* %ret924, metadata !207, metadata !DIExpression()), !dbg !209
  %563 = load i32, i32* %t, align 4, !dbg !209
  %564 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %563) #5, !dbg !209, !srcloc !210
  store i32 %564, i32* %ret924, align 4, !dbg !209
  %565 = load i32, i32* %ret924, align 4, !dbg !209
  store i32 %565, i32* %tmp925, align 4, !dbg !209
  %566 = load i32, i32* %tmp925, align 4, !dbg !209
  store i32 %566, i32* %t, align 4, !dbg !205
  %567 = load i32, i32* %u, align 4, !dbg !205
  %shr926 = lshr i32 %567, 2, !dbg !205
  %and927 = and i32 %shr926, 63, !dbg !205
  %idxprom928 = zext i32 %and927 to i64, !dbg !205
  %arrayidx929 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928, !dbg !205
  %568 = load i32, i32* %arrayidx929, align 4, !dbg !205
  %569 = load i32, i32* %u, align 4, !dbg !205
  %shr930 = lshr i32 %569, 10, !dbg !205
  %and931 = and i32 %shr930, 63, !dbg !205
  %idxprom932 = zext i32 %and931 to i64, !dbg !205
  %arrayidx933 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932, !dbg !205
  %570 = load i32, i32* %arrayidx933, align 4, !dbg !205
  %xor934 = xor i32 %568, %570, !dbg !205
  %571 = load i32, i32* %u, align 4, !dbg !205
  %shr935 = lshr i32 %571, 18, !dbg !205
  %and936 = and i32 %shr935, 63, !dbg !205
  %idxprom937 = zext i32 %and936 to i64, !dbg !205
  %arrayidx938 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937, !dbg !205
  %572 = load i32, i32* %arrayidx938, align 4, !dbg !205
  %xor939 = xor i32 %xor934, %572, !dbg !205
  %573 = load i32, i32* %u, align 4, !dbg !205
  %shr940 = lshr i32 %573, 26, !dbg !205
  %and941 = and i32 %shr940, 63, !dbg !205
  %idxprom942 = zext i32 %and941 to i64, !dbg !205
  %arrayidx943 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942, !dbg !205
  %574 = load i32, i32* %arrayidx943, align 4, !dbg !205
  %xor944 = xor i32 %xor939, %574, !dbg !205
  %575 = load i32, i32* %t, align 4, !dbg !205
  %shr945 = lshr i32 %575, 2, !dbg !205
  %and946 = and i32 %shr945, 63, !dbg !205
  %idxprom947 = zext i32 %and946 to i64, !dbg !205
  %arrayidx948 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947, !dbg !205
  %576 = load i32, i32* %arrayidx948, align 4, !dbg !205
  %xor949 = xor i32 %xor944, %576, !dbg !205
  %577 = load i32, i32* %t, align 4, !dbg !205
  %shr950 = lshr i32 %577, 10, !dbg !205
  %and951 = and i32 %shr950, 63, !dbg !205
  %idxprom952 = zext i32 %and951 to i64, !dbg !205
  %arrayidx953 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952, !dbg !205
  %578 = load i32, i32* %arrayidx953, align 4, !dbg !205
  %xor954 = xor i32 %xor949, %578, !dbg !205
  %579 = load i32, i32* %t, align 4, !dbg !205
  %shr955 = lshr i32 %579, 18, !dbg !205
  %and956 = and i32 %shr955, 63, !dbg !205
  %idxprom957 = zext i32 %and956 to i64, !dbg !205
  %arrayidx958 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957, !dbg !205
  %580 = load i32, i32* %arrayidx958, align 4, !dbg !205
  %xor959 = xor i32 %xor954, %580, !dbg !205
  %581 = load i32, i32* %t, align 4, !dbg !205
  %shr960 = lshr i32 %581, 26, !dbg !205
  %and961 = and i32 %shr960, 63, !dbg !205
  %idxprom962 = zext i32 %and961 to i64, !dbg !205
  %arrayidx963 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962, !dbg !205
  %582 = load i32, i32* %arrayidx963, align 4, !dbg !205
  %xor964 = xor i32 %xor959, %582, !dbg !205
  %583 = load i32, i32* %r, align 4, !dbg !205
  %xor965 = xor i32 %583, %xor964, !dbg !205
  store i32 %xor965, i32* %r, align 4, !dbg !205
  %584 = load i32, i32* %r, align 4, !dbg !211
  %585 = load i32*, i32** %s, align 8, !dbg !211
  %arrayidx966 = getelementptr inbounds i32, i32* %585, i64 22, !dbg !211
  %586 = load i32, i32* %arrayidx966, align 4, !dbg !211
  %xor967 = xor i32 %584, %586, !dbg !211
  store i32 %xor967, i32* %u, align 4, !dbg !211
  %587 = load i32, i32* %r, align 4, !dbg !211
  %588 = load i32*, i32** %s, align 8, !dbg !211
  %arrayidx968 = getelementptr inbounds i32, i32* %588, i64 23, !dbg !211
  %589 = load i32, i32* %arrayidx968, align 4, !dbg !211
  %xor969 = xor i32 %587, %589, !dbg !211
  store i32 %xor969, i32* %t, align 4, !dbg !211
  call void @llvm.dbg.declare(metadata i32* %ret970, metadata !213, metadata !DIExpression()), !dbg !215
  %590 = load i32, i32* %t, align 4, !dbg !215
  %591 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %590) #5, !dbg !215, !srcloc !216
  store i32 %591, i32* %ret970, align 4, !dbg !215
  %592 = load i32, i32* %ret970, align 4, !dbg !215
  store i32 %592, i32* %tmp971, align 4, !dbg !215
  %593 = load i32, i32* %tmp971, align 4, !dbg !215
  store i32 %593, i32* %t, align 4, !dbg !211
  %594 = load i32, i32* %u, align 4, !dbg !211
  %shr972 = lshr i32 %594, 2, !dbg !211
  %and973 = and i32 %shr972, 63, !dbg !211
  %idxprom974 = zext i32 %and973 to i64, !dbg !211
  %arrayidx975 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974, !dbg !211
  %595 = load i32, i32* %arrayidx975, align 4, !dbg !211
  %596 = load i32, i32* %u, align 4, !dbg !211
  %shr976 = lshr i32 %596, 10, !dbg !211
  %and977 = and i32 %shr976, 63, !dbg !211
  %idxprom978 = zext i32 %and977 to i64, !dbg !211
  %arrayidx979 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978, !dbg !211
  %597 = load i32, i32* %arrayidx979, align 4, !dbg !211
  %xor980 = xor i32 %595, %597, !dbg !211
  %598 = load i32, i32* %u, align 4, !dbg !211
  %shr981 = lshr i32 %598, 18, !dbg !211
  %and982 = and i32 %shr981, 63, !dbg !211
  %idxprom983 = zext i32 %and982 to i64, !dbg !211
  %arrayidx984 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983, !dbg !211
  %599 = load i32, i32* %arrayidx984, align 4, !dbg !211
  %xor985 = xor i32 %xor980, %599, !dbg !211
  %600 = load i32, i32* %u, align 4, !dbg !211
  %shr986 = lshr i32 %600, 26, !dbg !211
  %and987 = and i32 %shr986, 63, !dbg !211
  %idxprom988 = zext i32 %and987 to i64, !dbg !211
  %arrayidx989 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988, !dbg !211
  %601 = load i32, i32* %arrayidx989, align 4, !dbg !211
  %xor990 = xor i32 %xor985, %601, !dbg !211
  %602 = load i32, i32* %t, align 4, !dbg !211
  %shr991 = lshr i32 %602, 2, !dbg !211
  %and992 = and i32 %shr991, 63, !dbg !211
  %idxprom993 = zext i32 %and992 to i64, !dbg !211
  %arrayidx994 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993, !dbg !211
  %603 = load i32, i32* %arrayidx994, align 4, !dbg !211
  %xor995 = xor i32 %xor990, %603, !dbg !211
  %604 = load i32, i32* %t, align 4, !dbg !211
  %shr996 = lshr i32 %604, 10, !dbg !211
  %and997 = and i32 %shr996, 63, !dbg !211
  %idxprom998 = zext i32 %and997 to i64, !dbg !211
  %arrayidx999 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998, !dbg !211
  %605 = load i32, i32* %arrayidx999, align 4, !dbg !211
  %xor1000 = xor i32 %xor995, %605, !dbg !211
  %606 = load i32, i32* %t, align 4, !dbg !211
  %shr1001 = lshr i32 %606, 18, !dbg !211
  %and1002 = and i32 %shr1001, 63, !dbg !211
  %idxprom1003 = zext i32 %and1002 to i64, !dbg !211
  %arrayidx1004 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003, !dbg !211
  %607 = load i32, i32* %arrayidx1004, align 4, !dbg !211
  %xor1005 = xor i32 %xor1000, %607, !dbg !211
  %608 = load i32, i32* %t, align 4, !dbg !211
  %shr1006 = lshr i32 %608, 26, !dbg !211
  %and1007 = and i32 %shr1006, 63, !dbg !211
  %idxprom1008 = zext i32 %and1007 to i64, !dbg !211
  %arrayidx1009 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008, !dbg !211
  %609 = load i32, i32* %arrayidx1009, align 4, !dbg !211
  %xor1010 = xor i32 %xor1005, %609, !dbg !211
  %610 = load i32, i32* %l, align 4, !dbg !211
  %xor1011 = xor i32 %610, %xor1010, !dbg !211
  store i32 %xor1011, i32* %l, align 4, !dbg !211
  %611 = load i32, i32* %l, align 4, !dbg !217
  %612 = load i32*, i32** %s, align 8, !dbg !217
  %arrayidx1012 = getelementptr inbounds i32, i32* %612, i64 20, !dbg !217
  %613 = load i32, i32* %arrayidx1012, align 4, !dbg !217
  %xor1013 = xor i32 %611, %613, !dbg !217
  store i32 %xor1013, i32* %u, align 4, !dbg !217
  %614 = load i32, i32* %l, align 4, !dbg !217
  %615 = load i32*, i32** %s, align 8, !dbg !217
  %arrayidx1014 = getelementptr inbounds i32, i32* %615, i64 21, !dbg !217
  %616 = load i32, i32* %arrayidx1014, align 4, !dbg !217
  %xor1015 = xor i32 %614, %616, !dbg !217
  store i32 %xor1015, i32* %t, align 4, !dbg !217
  call void @llvm.dbg.declare(metadata i32* %ret1016, metadata !219, metadata !DIExpression()), !dbg !221
  %617 = load i32, i32* %t, align 4, !dbg !221
  %618 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %617) #5, !dbg !221, !srcloc !222
  store i32 %618, i32* %ret1016, align 4, !dbg !221
  %619 = load i32, i32* %ret1016, align 4, !dbg !221
  store i32 %619, i32* %tmp1017, align 4, !dbg !221
  %620 = load i32, i32* %tmp1017, align 4, !dbg !221
  store i32 %620, i32* %t, align 4, !dbg !217
  %621 = load i32, i32* %u, align 4, !dbg !217
  %shr1018 = lshr i32 %621, 2, !dbg !217
  %and1019 = and i32 %shr1018, 63, !dbg !217
  %idxprom1020 = zext i32 %and1019 to i64, !dbg !217
  %arrayidx1021 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020, !dbg !217
  %622 = load i32, i32* %arrayidx1021, align 4, !dbg !217
  %623 = load i32, i32* %u, align 4, !dbg !217
  %shr1022 = lshr i32 %623, 10, !dbg !217
  %and1023 = and i32 %shr1022, 63, !dbg !217
  %idxprom1024 = zext i32 %and1023 to i64, !dbg !217
  %arrayidx1025 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024, !dbg !217
  %624 = load i32, i32* %arrayidx1025, align 4, !dbg !217
  %xor1026 = xor i32 %622, %624, !dbg !217
  %625 = load i32, i32* %u, align 4, !dbg !217
  %shr1027 = lshr i32 %625, 18, !dbg !217
  %and1028 = and i32 %shr1027, 63, !dbg !217
  %idxprom1029 = zext i32 %and1028 to i64, !dbg !217
  %arrayidx1030 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029, !dbg !217
  %626 = load i32, i32* %arrayidx1030, align 4, !dbg !217
  %xor1031 = xor i32 %xor1026, %626, !dbg !217
  %627 = load i32, i32* %u, align 4, !dbg !217
  %shr1032 = lshr i32 %627, 26, !dbg !217
  %and1033 = and i32 %shr1032, 63, !dbg !217
  %idxprom1034 = zext i32 %and1033 to i64, !dbg !217
  %arrayidx1035 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034, !dbg !217
  %628 = load i32, i32* %arrayidx1035, align 4, !dbg !217
  %xor1036 = xor i32 %xor1031, %628, !dbg !217
  %629 = load i32, i32* %t, align 4, !dbg !217
  %shr1037 = lshr i32 %629, 2, !dbg !217
  %and1038 = and i32 %shr1037, 63, !dbg !217
  %idxprom1039 = zext i32 %and1038 to i64, !dbg !217
  %arrayidx1040 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039, !dbg !217
  %630 = load i32, i32* %arrayidx1040, align 4, !dbg !217
  %xor1041 = xor i32 %xor1036, %630, !dbg !217
  %631 = load i32, i32* %t, align 4, !dbg !217
  %shr1042 = lshr i32 %631, 10, !dbg !217
  %and1043 = and i32 %shr1042, 63, !dbg !217
  %idxprom1044 = zext i32 %and1043 to i64, !dbg !217
  %arrayidx1045 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044, !dbg !217
  %632 = load i32, i32* %arrayidx1045, align 4, !dbg !217
  %xor1046 = xor i32 %xor1041, %632, !dbg !217
  %633 = load i32, i32* %t, align 4, !dbg !217
  %shr1047 = lshr i32 %633, 18, !dbg !217
  %and1048 = and i32 %shr1047, 63, !dbg !217
  %idxprom1049 = zext i32 %and1048 to i64, !dbg !217
  %arrayidx1050 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049, !dbg !217
  %634 = load i32, i32* %arrayidx1050, align 4, !dbg !217
  %xor1051 = xor i32 %xor1046, %634, !dbg !217
  %635 = load i32, i32* %t, align 4, !dbg !217
  %shr1052 = lshr i32 %635, 26, !dbg !217
  %and1053 = and i32 %shr1052, 63, !dbg !217
  %idxprom1054 = zext i32 %and1053 to i64, !dbg !217
  %arrayidx1055 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054, !dbg !217
  %636 = load i32, i32* %arrayidx1055, align 4, !dbg !217
  %xor1056 = xor i32 %xor1051, %636, !dbg !217
  %637 = load i32, i32* %r, align 4, !dbg !217
  %xor1057 = xor i32 %637, %xor1056, !dbg !217
  store i32 %xor1057, i32* %r, align 4, !dbg !217
  %638 = load i32, i32* %r, align 4, !dbg !223
  %639 = load i32*, i32** %s, align 8, !dbg !223
  %arrayidx1058 = getelementptr inbounds i32, i32* %639, i64 18, !dbg !223
  %640 = load i32, i32* %arrayidx1058, align 4, !dbg !223
  %xor1059 = xor i32 %638, %640, !dbg !223
  store i32 %xor1059, i32* %u, align 4, !dbg !223
  %641 = load i32, i32* %r, align 4, !dbg !223
  %642 = load i32*, i32** %s, align 8, !dbg !223
  %arrayidx1060 = getelementptr inbounds i32, i32* %642, i64 19, !dbg !223
  %643 = load i32, i32* %arrayidx1060, align 4, !dbg !223
  %xor1061 = xor i32 %641, %643, !dbg !223
  store i32 %xor1061, i32* %t, align 4, !dbg !223
  call void @llvm.dbg.declare(metadata i32* %ret1062, metadata !225, metadata !DIExpression()), !dbg !227
  %644 = load i32, i32* %t, align 4, !dbg !227
  %645 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %644) #5, !dbg !227, !srcloc !228
  store i32 %645, i32* %ret1062, align 4, !dbg !227
  %646 = load i32, i32* %ret1062, align 4, !dbg !227
  store i32 %646, i32* %tmp1063, align 4, !dbg !227
  %647 = load i32, i32* %tmp1063, align 4, !dbg !227
  store i32 %647, i32* %t, align 4, !dbg !223
  %648 = load i32, i32* %u, align 4, !dbg !223
  %shr1064 = lshr i32 %648, 2, !dbg !223
  %and1065 = and i32 %shr1064, 63, !dbg !223
  %idxprom1066 = zext i32 %and1065 to i64, !dbg !223
  %arrayidx1067 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066, !dbg !223
  %649 = load i32, i32* %arrayidx1067, align 4, !dbg !223
  %650 = load i32, i32* %u, align 4, !dbg !223
  %shr1068 = lshr i32 %650, 10, !dbg !223
  %and1069 = and i32 %shr1068, 63, !dbg !223
  %idxprom1070 = zext i32 %and1069 to i64, !dbg !223
  %arrayidx1071 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070, !dbg !223
  %651 = load i32, i32* %arrayidx1071, align 4, !dbg !223
  %xor1072 = xor i32 %649, %651, !dbg !223
  %652 = load i32, i32* %u, align 4, !dbg !223
  %shr1073 = lshr i32 %652, 18, !dbg !223
  %and1074 = and i32 %shr1073, 63, !dbg !223
  %idxprom1075 = zext i32 %and1074 to i64, !dbg !223
  %arrayidx1076 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075, !dbg !223
  %653 = load i32, i32* %arrayidx1076, align 4, !dbg !223
  %xor1077 = xor i32 %xor1072, %653, !dbg !223
  %654 = load i32, i32* %u, align 4, !dbg !223
  %shr1078 = lshr i32 %654, 26, !dbg !223
  %and1079 = and i32 %shr1078, 63, !dbg !223
  %idxprom1080 = zext i32 %and1079 to i64, !dbg !223
  %arrayidx1081 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080, !dbg !223
  %655 = load i32, i32* %arrayidx1081, align 4, !dbg !223
  %xor1082 = xor i32 %xor1077, %655, !dbg !223
  %656 = load i32, i32* %t, align 4, !dbg !223
  %shr1083 = lshr i32 %656, 2, !dbg !223
  %and1084 = and i32 %shr1083, 63, !dbg !223
  %idxprom1085 = zext i32 %and1084 to i64, !dbg !223
  %arrayidx1086 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085, !dbg !223
  %657 = load i32, i32* %arrayidx1086, align 4, !dbg !223
  %xor1087 = xor i32 %xor1082, %657, !dbg !223
  %658 = load i32, i32* %t, align 4, !dbg !223
  %shr1088 = lshr i32 %658, 10, !dbg !223
  %and1089 = and i32 %shr1088, 63, !dbg !223
  %idxprom1090 = zext i32 %and1089 to i64, !dbg !223
  %arrayidx1091 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090, !dbg !223
  %659 = load i32, i32* %arrayidx1091, align 4, !dbg !223
  %xor1092 = xor i32 %xor1087, %659, !dbg !223
  %660 = load i32, i32* %t, align 4, !dbg !223
  %shr1093 = lshr i32 %660, 18, !dbg !223
  %and1094 = and i32 %shr1093, 63, !dbg !223
  %idxprom1095 = zext i32 %and1094 to i64, !dbg !223
  %arrayidx1096 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095, !dbg !223
  %661 = load i32, i32* %arrayidx1096, align 4, !dbg !223
  %xor1097 = xor i32 %xor1092, %661, !dbg !223
  %662 = load i32, i32* %t, align 4, !dbg !223
  %shr1098 = lshr i32 %662, 26, !dbg !223
  %and1099 = and i32 %shr1098, 63, !dbg !223
  %idxprom1100 = zext i32 %and1099 to i64, !dbg !223
  %arrayidx1101 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100, !dbg !223
  %663 = load i32, i32* %arrayidx1101, align 4, !dbg !223
  %xor1102 = xor i32 %xor1097, %663, !dbg !223
  %664 = load i32, i32* %l, align 4, !dbg !223
  %xor1103 = xor i32 %664, %xor1102, !dbg !223
  store i32 %xor1103, i32* %l, align 4, !dbg !223
  %665 = load i32, i32* %l, align 4, !dbg !229
  %666 = load i32*, i32** %s, align 8, !dbg !229
  %arrayidx1104 = getelementptr inbounds i32, i32* %666, i64 16, !dbg !229
  %667 = load i32, i32* %arrayidx1104, align 4, !dbg !229
  %xor1105 = xor i32 %665, %667, !dbg !229
  store i32 %xor1105, i32* %u, align 4, !dbg !229
  %668 = load i32, i32* %l, align 4, !dbg !229
  %669 = load i32*, i32** %s, align 8, !dbg !229
  %arrayidx1106 = getelementptr inbounds i32, i32* %669, i64 17, !dbg !229
  %670 = load i32, i32* %arrayidx1106, align 4, !dbg !229
  %xor1107 = xor i32 %668, %670, !dbg !229
  store i32 %xor1107, i32* %t, align 4, !dbg !229
  call void @llvm.dbg.declare(metadata i32* %ret1108, metadata !231, metadata !DIExpression()), !dbg !233
  %671 = load i32, i32* %t, align 4, !dbg !233
  %672 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %671) #5, !dbg !233, !srcloc !234
  store i32 %672, i32* %ret1108, align 4, !dbg !233
  %673 = load i32, i32* %ret1108, align 4, !dbg !233
  store i32 %673, i32* %tmp1109, align 4, !dbg !233
  %674 = load i32, i32* %tmp1109, align 4, !dbg !233
  store i32 %674, i32* %t, align 4, !dbg !229
  %675 = load i32, i32* %u, align 4, !dbg !229
  %shr1110 = lshr i32 %675, 2, !dbg !229
  %and1111 = and i32 %shr1110, 63, !dbg !229
  %idxprom1112 = zext i32 %and1111 to i64, !dbg !229
  %arrayidx1113 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112, !dbg !229
  %676 = load i32, i32* %arrayidx1113, align 4, !dbg !229
  %677 = load i32, i32* %u, align 4, !dbg !229
  %shr1114 = lshr i32 %677, 10, !dbg !229
  %and1115 = and i32 %shr1114, 63, !dbg !229
  %idxprom1116 = zext i32 %and1115 to i64, !dbg !229
  %arrayidx1117 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116, !dbg !229
  %678 = load i32, i32* %arrayidx1117, align 4, !dbg !229
  %xor1118 = xor i32 %676, %678, !dbg !229
  %679 = load i32, i32* %u, align 4, !dbg !229
  %shr1119 = lshr i32 %679, 18, !dbg !229
  %and1120 = and i32 %shr1119, 63, !dbg !229
  %idxprom1121 = zext i32 %and1120 to i64, !dbg !229
  %arrayidx1122 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121, !dbg !229
  %680 = load i32, i32* %arrayidx1122, align 4, !dbg !229
  %xor1123 = xor i32 %xor1118, %680, !dbg !229
  %681 = load i32, i32* %u, align 4, !dbg !229
  %shr1124 = lshr i32 %681, 26, !dbg !229
  %and1125 = and i32 %shr1124, 63, !dbg !229
  %idxprom1126 = zext i32 %and1125 to i64, !dbg !229
  %arrayidx1127 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126, !dbg !229
  %682 = load i32, i32* %arrayidx1127, align 4, !dbg !229
  %xor1128 = xor i32 %xor1123, %682, !dbg !229
  %683 = load i32, i32* %t, align 4, !dbg !229
  %shr1129 = lshr i32 %683, 2, !dbg !229
  %and1130 = and i32 %shr1129, 63, !dbg !229
  %idxprom1131 = zext i32 %and1130 to i64, !dbg !229
  %arrayidx1132 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131, !dbg !229
  %684 = load i32, i32* %arrayidx1132, align 4, !dbg !229
  %xor1133 = xor i32 %xor1128, %684, !dbg !229
  %685 = load i32, i32* %t, align 4, !dbg !229
  %shr1134 = lshr i32 %685, 10, !dbg !229
  %and1135 = and i32 %shr1134, 63, !dbg !229
  %idxprom1136 = zext i32 %and1135 to i64, !dbg !229
  %arrayidx1137 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136, !dbg !229
  %686 = load i32, i32* %arrayidx1137, align 4, !dbg !229
  %xor1138 = xor i32 %xor1133, %686, !dbg !229
  %687 = load i32, i32* %t, align 4, !dbg !229
  %shr1139 = lshr i32 %687, 18, !dbg !229
  %and1140 = and i32 %shr1139, 63, !dbg !229
  %idxprom1141 = zext i32 %and1140 to i64, !dbg !229
  %arrayidx1142 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141, !dbg !229
  %688 = load i32, i32* %arrayidx1142, align 4, !dbg !229
  %xor1143 = xor i32 %xor1138, %688, !dbg !229
  %689 = load i32, i32* %t, align 4, !dbg !229
  %shr1144 = lshr i32 %689, 26, !dbg !229
  %and1145 = and i32 %shr1144, 63, !dbg !229
  %idxprom1146 = zext i32 %and1145 to i64, !dbg !229
  %arrayidx1147 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146, !dbg !229
  %690 = load i32, i32* %arrayidx1147, align 4, !dbg !229
  %xor1148 = xor i32 %xor1143, %690, !dbg !229
  %691 = load i32, i32* %r, align 4, !dbg !229
  %xor1149 = xor i32 %691, %xor1148, !dbg !229
  store i32 %xor1149, i32* %r, align 4, !dbg !229
  %692 = load i32, i32* %r, align 4, !dbg !235
  %693 = load i32*, i32** %s, align 8, !dbg !235
  %arrayidx1150 = getelementptr inbounds i32, i32* %693, i64 14, !dbg !235
  %694 = load i32, i32* %arrayidx1150, align 4, !dbg !235
  %xor1151 = xor i32 %692, %694, !dbg !235
  store i32 %xor1151, i32* %u, align 4, !dbg !235
  %695 = load i32, i32* %r, align 4, !dbg !235
  %696 = load i32*, i32** %s, align 8, !dbg !235
  %arrayidx1152 = getelementptr inbounds i32, i32* %696, i64 15, !dbg !235
  %697 = load i32, i32* %arrayidx1152, align 4, !dbg !235
  %xor1153 = xor i32 %695, %697, !dbg !235
  store i32 %xor1153, i32* %t, align 4, !dbg !235
  call void @llvm.dbg.declare(metadata i32* %ret1154, metadata !237, metadata !DIExpression()), !dbg !239
  %698 = load i32, i32* %t, align 4, !dbg !239
  %699 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %698) #5, !dbg !239, !srcloc !240
  store i32 %699, i32* %ret1154, align 4, !dbg !239
  %700 = load i32, i32* %ret1154, align 4, !dbg !239
  store i32 %700, i32* %tmp1155, align 4, !dbg !239
  %701 = load i32, i32* %tmp1155, align 4, !dbg !239
  store i32 %701, i32* %t, align 4, !dbg !235
  %702 = load i32, i32* %u, align 4, !dbg !235
  %shr1156 = lshr i32 %702, 2, !dbg !235
  %and1157 = and i32 %shr1156, 63, !dbg !235
  %idxprom1158 = zext i32 %and1157 to i64, !dbg !235
  %arrayidx1159 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158, !dbg !235
  %703 = load i32, i32* %arrayidx1159, align 4, !dbg !235
  %704 = load i32, i32* %u, align 4, !dbg !235
  %shr1160 = lshr i32 %704, 10, !dbg !235
  %and1161 = and i32 %shr1160, 63, !dbg !235
  %idxprom1162 = zext i32 %and1161 to i64, !dbg !235
  %arrayidx1163 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162, !dbg !235
  %705 = load i32, i32* %arrayidx1163, align 4, !dbg !235
  %xor1164 = xor i32 %703, %705, !dbg !235
  %706 = load i32, i32* %u, align 4, !dbg !235
  %shr1165 = lshr i32 %706, 18, !dbg !235
  %and1166 = and i32 %shr1165, 63, !dbg !235
  %idxprom1167 = zext i32 %and1166 to i64, !dbg !235
  %arrayidx1168 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167, !dbg !235
  %707 = load i32, i32* %arrayidx1168, align 4, !dbg !235
  %xor1169 = xor i32 %xor1164, %707, !dbg !235
  %708 = load i32, i32* %u, align 4, !dbg !235
  %shr1170 = lshr i32 %708, 26, !dbg !235
  %and1171 = and i32 %shr1170, 63, !dbg !235
  %idxprom1172 = zext i32 %and1171 to i64, !dbg !235
  %arrayidx1173 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172, !dbg !235
  %709 = load i32, i32* %arrayidx1173, align 4, !dbg !235
  %xor1174 = xor i32 %xor1169, %709, !dbg !235
  %710 = load i32, i32* %t, align 4, !dbg !235
  %shr1175 = lshr i32 %710, 2, !dbg !235
  %and1176 = and i32 %shr1175, 63, !dbg !235
  %idxprom1177 = zext i32 %and1176 to i64, !dbg !235
  %arrayidx1178 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177, !dbg !235
  %711 = load i32, i32* %arrayidx1178, align 4, !dbg !235
  %xor1179 = xor i32 %xor1174, %711, !dbg !235
  %712 = load i32, i32* %t, align 4, !dbg !235
  %shr1180 = lshr i32 %712, 10, !dbg !235
  %and1181 = and i32 %shr1180, 63, !dbg !235
  %idxprom1182 = zext i32 %and1181 to i64, !dbg !235
  %arrayidx1183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182, !dbg !235
  %713 = load i32, i32* %arrayidx1183, align 4, !dbg !235
  %xor1184 = xor i32 %xor1179, %713, !dbg !235
  %714 = load i32, i32* %t, align 4, !dbg !235
  %shr1185 = lshr i32 %714, 18, !dbg !235
  %and1186 = and i32 %shr1185, 63, !dbg !235
  %idxprom1187 = zext i32 %and1186 to i64, !dbg !235
  %arrayidx1188 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187, !dbg !235
  %715 = load i32, i32* %arrayidx1188, align 4, !dbg !235
  %xor1189 = xor i32 %xor1184, %715, !dbg !235
  %716 = load i32, i32* %t, align 4, !dbg !235
  %shr1190 = lshr i32 %716, 26, !dbg !235
  %and1191 = and i32 %shr1190, 63, !dbg !235
  %idxprom1192 = zext i32 %and1191 to i64, !dbg !235
  %arrayidx1193 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192, !dbg !235
  %717 = load i32, i32* %arrayidx1193, align 4, !dbg !235
  %xor1194 = xor i32 %xor1189, %717, !dbg !235
  %718 = load i32, i32* %l, align 4, !dbg !235
  %xor1195 = xor i32 %718, %xor1194, !dbg !235
  store i32 %xor1195, i32* %l, align 4, !dbg !235
  %719 = load i32, i32* %l, align 4, !dbg !241
  %720 = load i32*, i32** %s, align 8, !dbg !241
  %arrayidx1196 = getelementptr inbounds i32, i32* %720, i64 12, !dbg !241
  %721 = load i32, i32* %arrayidx1196, align 4, !dbg !241
  %xor1197 = xor i32 %719, %721, !dbg !241
  store i32 %xor1197, i32* %u, align 4, !dbg !241
  %722 = load i32, i32* %l, align 4, !dbg !241
  %723 = load i32*, i32** %s, align 8, !dbg !241
  %arrayidx1198 = getelementptr inbounds i32, i32* %723, i64 13, !dbg !241
  %724 = load i32, i32* %arrayidx1198, align 4, !dbg !241
  %xor1199 = xor i32 %722, %724, !dbg !241
  store i32 %xor1199, i32* %t, align 4, !dbg !241
  call void @llvm.dbg.declare(metadata i32* %ret1200, metadata !243, metadata !DIExpression()), !dbg !245
  %725 = load i32, i32* %t, align 4, !dbg !245
  %726 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %725) #5, !dbg !245, !srcloc !246
  store i32 %726, i32* %ret1200, align 4, !dbg !245
  %727 = load i32, i32* %ret1200, align 4, !dbg !245
  store i32 %727, i32* %tmp1201, align 4, !dbg !245
  %728 = load i32, i32* %tmp1201, align 4, !dbg !245
  store i32 %728, i32* %t, align 4, !dbg !241
  %729 = load i32, i32* %u, align 4, !dbg !241
  %shr1202 = lshr i32 %729, 2, !dbg !241
  %and1203 = and i32 %shr1202, 63, !dbg !241
  %idxprom1204 = zext i32 %and1203 to i64, !dbg !241
  %arrayidx1205 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204, !dbg !241
  %730 = load i32, i32* %arrayidx1205, align 4, !dbg !241
  %731 = load i32, i32* %u, align 4, !dbg !241
  %shr1206 = lshr i32 %731, 10, !dbg !241
  %and1207 = and i32 %shr1206, 63, !dbg !241
  %idxprom1208 = zext i32 %and1207 to i64, !dbg !241
  %arrayidx1209 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208, !dbg !241
  %732 = load i32, i32* %arrayidx1209, align 4, !dbg !241
  %xor1210 = xor i32 %730, %732, !dbg !241
  %733 = load i32, i32* %u, align 4, !dbg !241
  %shr1211 = lshr i32 %733, 18, !dbg !241
  %and1212 = and i32 %shr1211, 63, !dbg !241
  %idxprom1213 = zext i32 %and1212 to i64, !dbg !241
  %arrayidx1214 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213, !dbg !241
  %734 = load i32, i32* %arrayidx1214, align 4, !dbg !241
  %xor1215 = xor i32 %xor1210, %734, !dbg !241
  %735 = load i32, i32* %u, align 4, !dbg !241
  %shr1216 = lshr i32 %735, 26, !dbg !241
  %and1217 = and i32 %shr1216, 63, !dbg !241
  %idxprom1218 = zext i32 %and1217 to i64, !dbg !241
  %arrayidx1219 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218, !dbg !241
  %736 = load i32, i32* %arrayidx1219, align 4, !dbg !241
  %xor1220 = xor i32 %xor1215, %736, !dbg !241
  %737 = load i32, i32* %t, align 4, !dbg !241
  %shr1221 = lshr i32 %737, 2, !dbg !241
  %and1222 = and i32 %shr1221, 63, !dbg !241
  %idxprom1223 = zext i32 %and1222 to i64, !dbg !241
  %arrayidx1224 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223, !dbg !241
  %738 = load i32, i32* %arrayidx1224, align 4, !dbg !241
  %xor1225 = xor i32 %xor1220, %738, !dbg !241
  %739 = load i32, i32* %t, align 4, !dbg !241
  %shr1226 = lshr i32 %739, 10, !dbg !241
  %and1227 = and i32 %shr1226, 63, !dbg !241
  %idxprom1228 = zext i32 %and1227 to i64, !dbg !241
  %arrayidx1229 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228, !dbg !241
  %740 = load i32, i32* %arrayidx1229, align 4, !dbg !241
  %xor1230 = xor i32 %xor1225, %740, !dbg !241
  %741 = load i32, i32* %t, align 4, !dbg !241
  %shr1231 = lshr i32 %741, 18, !dbg !241
  %and1232 = and i32 %shr1231, 63, !dbg !241
  %idxprom1233 = zext i32 %and1232 to i64, !dbg !241
  %arrayidx1234 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233, !dbg !241
  %742 = load i32, i32* %arrayidx1234, align 4, !dbg !241
  %xor1235 = xor i32 %xor1230, %742, !dbg !241
  %743 = load i32, i32* %t, align 4, !dbg !241
  %shr1236 = lshr i32 %743, 26, !dbg !241
  %and1237 = and i32 %shr1236, 63, !dbg !241
  %idxprom1238 = zext i32 %and1237 to i64, !dbg !241
  %arrayidx1239 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238, !dbg !241
  %744 = load i32, i32* %arrayidx1239, align 4, !dbg !241
  %xor1240 = xor i32 %xor1235, %744, !dbg !241
  %745 = load i32, i32* %r, align 4, !dbg !241
  %xor1241 = xor i32 %745, %xor1240, !dbg !241
  store i32 %xor1241, i32* %r, align 4, !dbg !241
  %746 = load i32, i32* %r, align 4, !dbg !247
  %747 = load i32*, i32** %s, align 8, !dbg !247
  %arrayidx1242 = getelementptr inbounds i32, i32* %747, i64 10, !dbg !247
  %748 = load i32, i32* %arrayidx1242, align 4, !dbg !247
  %xor1243 = xor i32 %746, %748, !dbg !247
  store i32 %xor1243, i32* %u, align 4, !dbg !247
  %749 = load i32, i32* %r, align 4, !dbg !247
  %750 = load i32*, i32** %s, align 8, !dbg !247
  %arrayidx1244 = getelementptr inbounds i32, i32* %750, i64 11, !dbg !247
  %751 = load i32, i32* %arrayidx1244, align 4, !dbg !247
  %xor1245 = xor i32 %749, %751, !dbg !247
  store i32 %xor1245, i32* %t, align 4, !dbg !247
  call void @llvm.dbg.declare(metadata i32* %ret1246, metadata !249, metadata !DIExpression()), !dbg !251
  %752 = load i32, i32* %t, align 4, !dbg !251
  %753 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %752) #5, !dbg !251, !srcloc !252
  store i32 %753, i32* %ret1246, align 4, !dbg !251
  %754 = load i32, i32* %ret1246, align 4, !dbg !251
  store i32 %754, i32* %tmp1247, align 4, !dbg !251
  %755 = load i32, i32* %tmp1247, align 4, !dbg !251
  store i32 %755, i32* %t, align 4, !dbg !247
  %756 = load i32, i32* %u, align 4, !dbg !247
  %shr1248 = lshr i32 %756, 2, !dbg !247
  %and1249 = and i32 %shr1248, 63, !dbg !247
  %idxprom1250 = zext i32 %and1249 to i64, !dbg !247
  %arrayidx1251 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250, !dbg !247
  %757 = load i32, i32* %arrayidx1251, align 4, !dbg !247
  %758 = load i32, i32* %u, align 4, !dbg !247
  %shr1252 = lshr i32 %758, 10, !dbg !247
  %and1253 = and i32 %shr1252, 63, !dbg !247
  %idxprom1254 = zext i32 %and1253 to i64, !dbg !247
  %arrayidx1255 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254, !dbg !247
  %759 = load i32, i32* %arrayidx1255, align 4, !dbg !247
  %xor1256 = xor i32 %757, %759, !dbg !247
  %760 = load i32, i32* %u, align 4, !dbg !247
  %shr1257 = lshr i32 %760, 18, !dbg !247
  %and1258 = and i32 %shr1257, 63, !dbg !247
  %idxprom1259 = zext i32 %and1258 to i64, !dbg !247
  %arrayidx1260 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259, !dbg !247
  %761 = load i32, i32* %arrayidx1260, align 4, !dbg !247
  %xor1261 = xor i32 %xor1256, %761, !dbg !247
  %762 = load i32, i32* %u, align 4, !dbg !247
  %shr1262 = lshr i32 %762, 26, !dbg !247
  %and1263 = and i32 %shr1262, 63, !dbg !247
  %idxprom1264 = zext i32 %and1263 to i64, !dbg !247
  %arrayidx1265 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264, !dbg !247
  %763 = load i32, i32* %arrayidx1265, align 4, !dbg !247
  %xor1266 = xor i32 %xor1261, %763, !dbg !247
  %764 = load i32, i32* %t, align 4, !dbg !247
  %shr1267 = lshr i32 %764, 2, !dbg !247
  %and1268 = and i32 %shr1267, 63, !dbg !247
  %idxprom1269 = zext i32 %and1268 to i64, !dbg !247
  %arrayidx1270 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269, !dbg !247
  %765 = load i32, i32* %arrayidx1270, align 4, !dbg !247
  %xor1271 = xor i32 %xor1266, %765, !dbg !247
  %766 = load i32, i32* %t, align 4, !dbg !247
  %shr1272 = lshr i32 %766, 10, !dbg !247
  %and1273 = and i32 %shr1272, 63, !dbg !247
  %idxprom1274 = zext i32 %and1273 to i64, !dbg !247
  %arrayidx1275 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274, !dbg !247
  %767 = load i32, i32* %arrayidx1275, align 4, !dbg !247
  %xor1276 = xor i32 %xor1271, %767, !dbg !247
  %768 = load i32, i32* %t, align 4, !dbg !247
  %shr1277 = lshr i32 %768, 18, !dbg !247
  %and1278 = and i32 %shr1277, 63, !dbg !247
  %idxprom1279 = zext i32 %and1278 to i64, !dbg !247
  %arrayidx1280 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279, !dbg !247
  %769 = load i32, i32* %arrayidx1280, align 4, !dbg !247
  %xor1281 = xor i32 %xor1276, %769, !dbg !247
  %770 = load i32, i32* %t, align 4, !dbg !247
  %shr1282 = lshr i32 %770, 26, !dbg !247
  %and1283 = and i32 %shr1282, 63, !dbg !247
  %idxprom1284 = zext i32 %and1283 to i64, !dbg !247
  %arrayidx1285 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284, !dbg !247
  %771 = load i32, i32* %arrayidx1285, align 4, !dbg !247
  %xor1286 = xor i32 %xor1281, %771, !dbg !247
  %772 = load i32, i32* %l, align 4, !dbg !247
  %xor1287 = xor i32 %772, %xor1286, !dbg !247
  store i32 %xor1287, i32* %l, align 4, !dbg !247
  %773 = load i32, i32* %l, align 4, !dbg !253
  %774 = load i32*, i32** %s, align 8, !dbg !253
  %arrayidx1288 = getelementptr inbounds i32, i32* %774, i64 8, !dbg !253
  %775 = load i32, i32* %arrayidx1288, align 4, !dbg !253
  %xor1289 = xor i32 %773, %775, !dbg !253
  store i32 %xor1289, i32* %u, align 4, !dbg !253
  %776 = load i32, i32* %l, align 4, !dbg !253
  %777 = load i32*, i32** %s, align 8, !dbg !253
  %arrayidx1290 = getelementptr inbounds i32, i32* %777, i64 9, !dbg !253
  %778 = load i32, i32* %arrayidx1290, align 4, !dbg !253
  %xor1291 = xor i32 %776, %778, !dbg !253
  store i32 %xor1291, i32* %t, align 4, !dbg !253
  call void @llvm.dbg.declare(metadata i32* %ret1292, metadata !255, metadata !DIExpression()), !dbg !257
  %779 = load i32, i32* %t, align 4, !dbg !257
  %780 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %779) #5, !dbg !257, !srcloc !258
  store i32 %780, i32* %ret1292, align 4, !dbg !257
  %781 = load i32, i32* %ret1292, align 4, !dbg !257
  store i32 %781, i32* %tmp1293, align 4, !dbg !257
  %782 = load i32, i32* %tmp1293, align 4, !dbg !257
  store i32 %782, i32* %t, align 4, !dbg !253
  %783 = load i32, i32* %u, align 4, !dbg !253
  %shr1294 = lshr i32 %783, 2, !dbg !253
  %and1295 = and i32 %shr1294, 63, !dbg !253
  %idxprom1296 = zext i32 %and1295 to i64, !dbg !253
  %arrayidx1297 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296, !dbg !253
  %784 = load i32, i32* %arrayidx1297, align 4, !dbg !253
  %785 = load i32, i32* %u, align 4, !dbg !253
  %shr1298 = lshr i32 %785, 10, !dbg !253
  %and1299 = and i32 %shr1298, 63, !dbg !253
  %idxprom1300 = zext i32 %and1299 to i64, !dbg !253
  %arrayidx1301 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300, !dbg !253
  %786 = load i32, i32* %arrayidx1301, align 4, !dbg !253
  %xor1302 = xor i32 %784, %786, !dbg !253
  %787 = load i32, i32* %u, align 4, !dbg !253
  %shr1303 = lshr i32 %787, 18, !dbg !253
  %and1304 = and i32 %shr1303, 63, !dbg !253
  %idxprom1305 = zext i32 %and1304 to i64, !dbg !253
  %arrayidx1306 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305, !dbg !253
  %788 = load i32, i32* %arrayidx1306, align 4, !dbg !253
  %xor1307 = xor i32 %xor1302, %788, !dbg !253
  %789 = load i32, i32* %u, align 4, !dbg !253
  %shr1308 = lshr i32 %789, 26, !dbg !253
  %and1309 = and i32 %shr1308, 63, !dbg !253
  %idxprom1310 = zext i32 %and1309 to i64, !dbg !253
  %arrayidx1311 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310, !dbg !253
  %790 = load i32, i32* %arrayidx1311, align 4, !dbg !253
  %xor1312 = xor i32 %xor1307, %790, !dbg !253
  %791 = load i32, i32* %t, align 4, !dbg !253
  %shr1313 = lshr i32 %791, 2, !dbg !253
  %and1314 = and i32 %shr1313, 63, !dbg !253
  %idxprom1315 = zext i32 %and1314 to i64, !dbg !253
  %arrayidx1316 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315, !dbg !253
  %792 = load i32, i32* %arrayidx1316, align 4, !dbg !253
  %xor1317 = xor i32 %xor1312, %792, !dbg !253
  %793 = load i32, i32* %t, align 4, !dbg !253
  %shr1318 = lshr i32 %793, 10, !dbg !253
  %and1319 = and i32 %shr1318, 63, !dbg !253
  %idxprom1320 = zext i32 %and1319 to i64, !dbg !253
  %arrayidx1321 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320, !dbg !253
  %794 = load i32, i32* %arrayidx1321, align 4, !dbg !253
  %xor1322 = xor i32 %xor1317, %794, !dbg !253
  %795 = load i32, i32* %t, align 4, !dbg !253
  %shr1323 = lshr i32 %795, 18, !dbg !253
  %and1324 = and i32 %shr1323, 63, !dbg !253
  %idxprom1325 = zext i32 %and1324 to i64, !dbg !253
  %arrayidx1326 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325, !dbg !253
  %796 = load i32, i32* %arrayidx1326, align 4, !dbg !253
  %xor1327 = xor i32 %xor1322, %796, !dbg !253
  %797 = load i32, i32* %t, align 4, !dbg !253
  %shr1328 = lshr i32 %797, 26, !dbg !253
  %and1329 = and i32 %shr1328, 63, !dbg !253
  %idxprom1330 = zext i32 %and1329 to i64, !dbg !253
  %arrayidx1331 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330, !dbg !253
  %798 = load i32, i32* %arrayidx1331, align 4, !dbg !253
  %xor1332 = xor i32 %xor1327, %798, !dbg !253
  %799 = load i32, i32* %r, align 4, !dbg !253
  %xor1333 = xor i32 %799, %xor1332, !dbg !253
  store i32 %xor1333, i32* %r, align 4, !dbg !253
  %800 = load i32, i32* %r, align 4, !dbg !259
  %801 = load i32*, i32** %s, align 8, !dbg !259
  %arrayidx1334 = getelementptr inbounds i32, i32* %801, i64 6, !dbg !259
  %802 = load i32, i32* %arrayidx1334, align 4, !dbg !259
  %xor1335 = xor i32 %800, %802, !dbg !259
  store i32 %xor1335, i32* %u, align 4, !dbg !259
  %803 = load i32, i32* %r, align 4, !dbg !259
  %804 = load i32*, i32** %s, align 8, !dbg !259
  %arrayidx1336 = getelementptr inbounds i32, i32* %804, i64 7, !dbg !259
  %805 = load i32, i32* %arrayidx1336, align 4, !dbg !259
  %xor1337 = xor i32 %803, %805, !dbg !259
  store i32 %xor1337, i32* %t, align 4, !dbg !259
  call void @llvm.dbg.declare(metadata i32* %ret1338, metadata !261, metadata !DIExpression()), !dbg !263
  %806 = load i32, i32* %t, align 4, !dbg !263
  %807 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %806) #5, !dbg !263, !srcloc !264
  store i32 %807, i32* %ret1338, align 4, !dbg !263
  %808 = load i32, i32* %ret1338, align 4, !dbg !263
  store i32 %808, i32* %tmp1339, align 4, !dbg !263
  %809 = load i32, i32* %tmp1339, align 4, !dbg !263
  store i32 %809, i32* %t, align 4, !dbg !259
  %810 = load i32, i32* %u, align 4, !dbg !259
  %shr1340 = lshr i32 %810, 2, !dbg !259
  %and1341 = and i32 %shr1340, 63, !dbg !259
  %idxprom1342 = zext i32 %and1341 to i64, !dbg !259
  %arrayidx1343 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342, !dbg !259
  %811 = load i32, i32* %arrayidx1343, align 4, !dbg !259
  %812 = load i32, i32* %u, align 4, !dbg !259
  %shr1344 = lshr i32 %812, 10, !dbg !259
  %and1345 = and i32 %shr1344, 63, !dbg !259
  %idxprom1346 = zext i32 %and1345 to i64, !dbg !259
  %arrayidx1347 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346, !dbg !259
  %813 = load i32, i32* %arrayidx1347, align 4, !dbg !259
  %xor1348 = xor i32 %811, %813, !dbg !259
  %814 = load i32, i32* %u, align 4, !dbg !259
  %shr1349 = lshr i32 %814, 18, !dbg !259
  %and1350 = and i32 %shr1349, 63, !dbg !259
  %idxprom1351 = zext i32 %and1350 to i64, !dbg !259
  %arrayidx1352 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351, !dbg !259
  %815 = load i32, i32* %arrayidx1352, align 4, !dbg !259
  %xor1353 = xor i32 %xor1348, %815, !dbg !259
  %816 = load i32, i32* %u, align 4, !dbg !259
  %shr1354 = lshr i32 %816, 26, !dbg !259
  %and1355 = and i32 %shr1354, 63, !dbg !259
  %idxprom1356 = zext i32 %and1355 to i64, !dbg !259
  %arrayidx1357 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356, !dbg !259
  %817 = load i32, i32* %arrayidx1357, align 4, !dbg !259
  %xor1358 = xor i32 %xor1353, %817, !dbg !259
  %818 = load i32, i32* %t, align 4, !dbg !259
  %shr1359 = lshr i32 %818, 2, !dbg !259
  %and1360 = and i32 %shr1359, 63, !dbg !259
  %idxprom1361 = zext i32 %and1360 to i64, !dbg !259
  %arrayidx1362 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361, !dbg !259
  %819 = load i32, i32* %arrayidx1362, align 4, !dbg !259
  %xor1363 = xor i32 %xor1358, %819, !dbg !259
  %820 = load i32, i32* %t, align 4, !dbg !259
  %shr1364 = lshr i32 %820, 10, !dbg !259
  %and1365 = and i32 %shr1364, 63, !dbg !259
  %idxprom1366 = zext i32 %and1365 to i64, !dbg !259
  %arrayidx1367 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366, !dbg !259
  %821 = load i32, i32* %arrayidx1367, align 4, !dbg !259
  %xor1368 = xor i32 %xor1363, %821, !dbg !259
  %822 = load i32, i32* %t, align 4, !dbg !259
  %shr1369 = lshr i32 %822, 18, !dbg !259
  %and1370 = and i32 %shr1369, 63, !dbg !259
  %idxprom1371 = zext i32 %and1370 to i64, !dbg !259
  %arrayidx1372 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371, !dbg !259
  %823 = load i32, i32* %arrayidx1372, align 4, !dbg !259
  %xor1373 = xor i32 %xor1368, %823, !dbg !259
  %824 = load i32, i32* %t, align 4, !dbg !259
  %shr1374 = lshr i32 %824, 26, !dbg !259
  %and1375 = and i32 %shr1374, 63, !dbg !259
  %idxprom1376 = zext i32 %and1375 to i64, !dbg !259
  %arrayidx1377 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376, !dbg !259
  %825 = load i32, i32* %arrayidx1377, align 4, !dbg !259
  %xor1378 = xor i32 %xor1373, %825, !dbg !259
  %826 = load i32, i32* %l, align 4, !dbg !259
  %xor1379 = xor i32 %826, %xor1378, !dbg !259
  store i32 %xor1379, i32* %l, align 4, !dbg !259
  %827 = load i32, i32* %l, align 4, !dbg !265
  %828 = load i32*, i32** %s, align 8, !dbg !265
  %arrayidx1380 = getelementptr inbounds i32, i32* %828, i64 4, !dbg !265
  %829 = load i32, i32* %arrayidx1380, align 4, !dbg !265
  %xor1381 = xor i32 %827, %829, !dbg !265
  store i32 %xor1381, i32* %u, align 4, !dbg !265
  %830 = load i32, i32* %l, align 4, !dbg !265
  %831 = load i32*, i32** %s, align 8, !dbg !265
  %arrayidx1382 = getelementptr inbounds i32, i32* %831, i64 5, !dbg !265
  %832 = load i32, i32* %arrayidx1382, align 4, !dbg !265
  %xor1383 = xor i32 %830, %832, !dbg !265
  store i32 %xor1383, i32* %t, align 4, !dbg !265
  call void @llvm.dbg.declare(metadata i32* %ret1384, metadata !267, metadata !DIExpression()), !dbg !269
  %833 = load i32, i32* %t, align 4, !dbg !269
  %834 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %833) #5, !dbg !269, !srcloc !270
  store i32 %834, i32* %ret1384, align 4, !dbg !269
  %835 = load i32, i32* %ret1384, align 4, !dbg !269
  store i32 %835, i32* %tmp1385, align 4, !dbg !269
  %836 = load i32, i32* %tmp1385, align 4, !dbg !269
  store i32 %836, i32* %t, align 4, !dbg !265
  %837 = load i32, i32* %u, align 4, !dbg !265
  %shr1386 = lshr i32 %837, 2, !dbg !265
  %and1387 = and i32 %shr1386, 63, !dbg !265
  %idxprom1388 = zext i32 %and1387 to i64, !dbg !265
  %arrayidx1389 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388, !dbg !265
  %838 = load i32, i32* %arrayidx1389, align 4, !dbg !265
  %839 = load i32, i32* %u, align 4, !dbg !265
  %shr1390 = lshr i32 %839, 10, !dbg !265
  %and1391 = and i32 %shr1390, 63, !dbg !265
  %idxprom1392 = zext i32 %and1391 to i64, !dbg !265
  %arrayidx1393 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392, !dbg !265
  %840 = load i32, i32* %arrayidx1393, align 4, !dbg !265
  %xor1394 = xor i32 %838, %840, !dbg !265
  %841 = load i32, i32* %u, align 4, !dbg !265
  %shr1395 = lshr i32 %841, 18, !dbg !265
  %and1396 = and i32 %shr1395, 63, !dbg !265
  %idxprom1397 = zext i32 %and1396 to i64, !dbg !265
  %arrayidx1398 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397, !dbg !265
  %842 = load i32, i32* %arrayidx1398, align 4, !dbg !265
  %xor1399 = xor i32 %xor1394, %842, !dbg !265
  %843 = load i32, i32* %u, align 4, !dbg !265
  %shr1400 = lshr i32 %843, 26, !dbg !265
  %and1401 = and i32 %shr1400, 63, !dbg !265
  %idxprom1402 = zext i32 %and1401 to i64, !dbg !265
  %arrayidx1403 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402, !dbg !265
  %844 = load i32, i32* %arrayidx1403, align 4, !dbg !265
  %xor1404 = xor i32 %xor1399, %844, !dbg !265
  %845 = load i32, i32* %t, align 4, !dbg !265
  %shr1405 = lshr i32 %845, 2, !dbg !265
  %and1406 = and i32 %shr1405, 63, !dbg !265
  %idxprom1407 = zext i32 %and1406 to i64, !dbg !265
  %arrayidx1408 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407, !dbg !265
  %846 = load i32, i32* %arrayidx1408, align 4, !dbg !265
  %xor1409 = xor i32 %xor1404, %846, !dbg !265
  %847 = load i32, i32* %t, align 4, !dbg !265
  %shr1410 = lshr i32 %847, 10, !dbg !265
  %and1411 = and i32 %shr1410, 63, !dbg !265
  %idxprom1412 = zext i32 %and1411 to i64, !dbg !265
  %arrayidx1413 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412, !dbg !265
  %848 = load i32, i32* %arrayidx1413, align 4, !dbg !265
  %xor1414 = xor i32 %xor1409, %848, !dbg !265
  %849 = load i32, i32* %t, align 4, !dbg !265
  %shr1415 = lshr i32 %849, 18, !dbg !265
  %and1416 = and i32 %shr1415, 63, !dbg !265
  %idxprom1417 = zext i32 %and1416 to i64, !dbg !265
  %arrayidx1418 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417, !dbg !265
  %850 = load i32, i32* %arrayidx1418, align 4, !dbg !265
  %xor1419 = xor i32 %xor1414, %850, !dbg !265
  %851 = load i32, i32* %t, align 4, !dbg !265
  %shr1420 = lshr i32 %851, 26, !dbg !265
  %and1421 = and i32 %shr1420, 63, !dbg !265
  %idxprom1422 = zext i32 %and1421 to i64, !dbg !265
  %arrayidx1423 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422, !dbg !265
  %852 = load i32, i32* %arrayidx1423, align 4, !dbg !265
  %xor1424 = xor i32 %xor1419, %852, !dbg !265
  %853 = load i32, i32* %r, align 4, !dbg !265
  %xor1425 = xor i32 %853, %xor1424, !dbg !265
  store i32 %xor1425, i32* %r, align 4, !dbg !265
  %854 = load i32, i32* %r, align 4, !dbg !271
  %855 = load i32*, i32** %s, align 8, !dbg !271
  %arrayidx1426 = getelementptr inbounds i32, i32* %855, i64 2, !dbg !271
  %856 = load i32, i32* %arrayidx1426, align 4, !dbg !271
  %xor1427 = xor i32 %854, %856, !dbg !271
  store i32 %xor1427, i32* %u, align 4, !dbg !271
  %857 = load i32, i32* %r, align 4, !dbg !271
  %858 = load i32*, i32** %s, align 8, !dbg !271
  %arrayidx1428 = getelementptr inbounds i32, i32* %858, i64 3, !dbg !271
  %859 = load i32, i32* %arrayidx1428, align 4, !dbg !271
  %xor1429 = xor i32 %857, %859, !dbg !271
  store i32 %xor1429, i32* %t, align 4, !dbg !271
  call void @llvm.dbg.declare(metadata i32* %ret1430, metadata !273, metadata !DIExpression()), !dbg !275
  %860 = load i32, i32* %t, align 4, !dbg !275
  %861 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %860) #5, !dbg !275, !srcloc !276
  store i32 %861, i32* %ret1430, align 4, !dbg !275
  %862 = load i32, i32* %ret1430, align 4, !dbg !275
  store i32 %862, i32* %tmp1431, align 4, !dbg !275
  %863 = load i32, i32* %tmp1431, align 4, !dbg !275
  store i32 %863, i32* %t, align 4, !dbg !271
  %864 = load i32, i32* %u, align 4, !dbg !271
  %shr1432 = lshr i32 %864, 2, !dbg !271
  %and1433 = and i32 %shr1432, 63, !dbg !271
  %idxprom1434 = zext i32 %and1433 to i64, !dbg !271
  %arrayidx1435 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434, !dbg !271
  %865 = load i32, i32* %arrayidx1435, align 4, !dbg !271
  %866 = load i32, i32* %u, align 4, !dbg !271
  %shr1436 = lshr i32 %866, 10, !dbg !271
  %and1437 = and i32 %shr1436, 63, !dbg !271
  %idxprom1438 = zext i32 %and1437 to i64, !dbg !271
  %arrayidx1439 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438, !dbg !271
  %867 = load i32, i32* %arrayidx1439, align 4, !dbg !271
  %xor1440 = xor i32 %865, %867, !dbg !271
  %868 = load i32, i32* %u, align 4, !dbg !271
  %shr1441 = lshr i32 %868, 18, !dbg !271
  %and1442 = and i32 %shr1441, 63, !dbg !271
  %idxprom1443 = zext i32 %and1442 to i64, !dbg !271
  %arrayidx1444 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443, !dbg !271
  %869 = load i32, i32* %arrayidx1444, align 4, !dbg !271
  %xor1445 = xor i32 %xor1440, %869, !dbg !271
  %870 = load i32, i32* %u, align 4, !dbg !271
  %shr1446 = lshr i32 %870, 26, !dbg !271
  %and1447 = and i32 %shr1446, 63, !dbg !271
  %idxprom1448 = zext i32 %and1447 to i64, !dbg !271
  %arrayidx1449 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448, !dbg !271
  %871 = load i32, i32* %arrayidx1449, align 4, !dbg !271
  %xor1450 = xor i32 %xor1445, %871, !dbg !271
  %872 = load i32, i32* %t, align 4, !dbg !271
  %shr1451 = lshr i32 %872, 2, !dbg !271
  %and1452 = and i32 %shr1451, 63, !dbg !271
  %idxprom1453 = zext i32 %and1452 to i64, !dbg !271
  %arrayidx1454 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453, !dbg !271
  %873 = load i32, i32* %arrayidx1454, align 4, !dbg !271
  %xor1455 = xor i32 %xor1450, %873, !dbg !271
  %874 = load i32, i32* %t, align 4, !dbg !271
  %shr1456 = lshr i32 %874, 10, !dbg !271
  %and1457 = and i32 %shr1456, 63, !dbg !271
  %idxprom1458 = zext i32 %and1457 to i64, !dbg !271
  %arrayidx1459 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458, !dbg !271
  %875 = load i32, i32* %arrayidx1459, align 4, !dbg !271
  %xor1460 = xor i32 %xor1455, %875, !dbg !271
  %876 = load i32, i32* %t, align 4, !dbg !271
  %shr1461 = lshr i32 %876, 18, !dbg !271
  %and1462 = and i32 %shr1461, 63, !dbg !271
  %idxprom1463 = zext i32 %and1462 to i64, !dbg !271
  %arrayidx1464 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463, !dbg !271
  %877 = load i32, i32* %arrayidx1464, align 4, !dbg !271
  %xor1465 = xor i32 %xor1460, %877, !dbg !271
  %878 = load i32, i32* %t, align 4, !dbg !271
  %shr1466 = lshr i32 %878, 26, !dbg !271
  %and1467 = and i32 %shr1466, 63, !dbg !271
  %idxprom1468 = zext i32 %and1467 to i64, !dbg !271
  %arrayidx1469 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468, !dbg !271
  %879 = load i32, i32* %arrayidx1469, align 4, !dbg !271
  %xor1470 = xor i32 %xor1465, %879, !dbg !271
  %880 = load i32, i32* %l, align 4, !dbg !271
  %xor1471 = xor i32 %880, %xor1470, !dbg !271
  store i32 %xor1471, i32* %l, align 4, !dbg !271
  %881 = load i32, i32* %l, align 4, !dbg !277
  %882 = load i32*, i32** %s, align 8, !dbg !277
  %arrayidx1472 = getelementptr inbounds i32, i32* %882, i64 0, !dbg !277
  %883 = load i32, i32* %arrayidx1472, align 4, !dbg !277
  %xor1473 = xor i32 %881, %883, !dbg !277
  store i32 %xor1473, i32* %u, align 4, !dbg !277
  %884 = load i32, i32* %l, align 4, !dbg !277
  %885 = load i32*, i32** %s, align 8, !dbg !277
  %arrayidx1474 = getelementptr inbounds i32, i32* %885, i64 1, !dbg !277
  %886 = load i32, i32* %arrayidx1474, align 4, !dbg !277
  %xor1475 = xor i32 %884, %886, !dbg !277
  store i32 %xor1475, i32* %t, align 4, !dbg !277
  call void @llvm.dbg.declare(metadata i32* %ret1476, metadata !279, metadata !DIExpression()), !dbg !281
  %887 = load i32, i32* %t, align 4, !dbg !281
  %888 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %887) #5, !dbg !281, !srcloc !282
  store i32 %888, i32* %ret1476, align 4, !dbg !281
  %889 = load i32, i32* %ret1476, align 4, !dbg !281
  store i32 %889, i32* %tmp1477, align 4, !dbg !281
  %890 = load i32, i32* %tmp1477, align 4, !dbg !281
  store i32 %890, i32* %t, align 4, !dbg !277
  %891 = load i32, i32* %u, align 4, !dbg !277
  %shr1478 = lshr i32 %891, 2, !dbg !277
  %and1479 = and i32 %shr1478, 63, !dbg !277
  %idxprom1480 = zext i32 %and1479 to i64, !dbg !277
  %arrayidx1481 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480, !dbg !277
  %892 = load i32, i32* %arrayidx1481, align 4, !dbg !277
  %893 = load i32, i32* %u, align 4, !dbg !277
  %shr1482 = lshr i32 %893, 10, !dbg !277
  %and1483 = and i32 %shr1482, 63, !dbg !277
  %idxprom1484 = zext i32 %and1483 to i64, !dbg !277
  %arrayidx1485 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484, !dbg !277
  %894 = load i32, i32* %arrayidx1485, align 4, !dbg !277
  %xor1486 = xor i32 %892, %894, !dbg !277
  %895 = load i32, i32* %u, align 4, !dbg !277
  %shr1487 = lshr i32 %895, 18, !dbg !277
  %and1488 = and i32 %shr1487, 63, !dbg !277
  %idxprom1489 = zext i32 %and1488 to i64, !dbg !277
  %arrayidx1490 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489, !dbg !277
  %896 = load i32, i32* %arrayidx1490, align 4, !dbg !277
  %xor1491 = xor i32 %xor1486, %896, !dbg !277
  %897 = load i32, i32* %u, align 4, !dbg !277
  %shr1492 = lshr i32 %897, 26, !dbg !277
  %and1493 = and i32 %shr1492, 63, !dbg !277
  %idxprom1494 = zext i32 %and1493 to i64, !dbg !277
  %arrayidx1495 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494, !dbg !277
  %898 = load i32, i32* %arrayidx1495, align 4, !dbg !277
  %xor1496 = xor i32 %xor1491, %898, !dbg !277
  %899 = load i32, i32* %t, align 4, !dbg !277
  %shr1497 = lshr i32 %899, 2, !dbg !277
  %and1498 = and i32 %shr1497, 63, !dbg !277
  %idxprom1499 = zext i32 %and1498 to i64, !dbg !277
  %arrayidx1500 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499, !dbg !277
  %900 = load i32, i32* %arrayidx1500, align 4, !dbg !277
  %xor1501 = xor i32 %xor1496, %900, !dbg !277
  %901 = load i32, i32* %t, align 4, !dbg !277
  %shr1502 = lshr i32 %901, 10, !dbg !277
  %and1503 = and i32 %shr1502, 63, !dbg !277
  %idxprom1504 = zext i32 %and1503 to i64, !dbg !277
  %arrayidx1505 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504, !dbg !277
  %902 = load i32, i32* %arrayidx1505, align 4, !dbg !277
  %xor1506 = xor i32 %xor1501, %902, !dbg !277
  %903 = load i32, i32* %t, align 4, !dbg !277
  %shr1507 = lshr i32 %903, 18, !dbg !277
  %and1508 = and i32 %shr1507, 63, !dbg !277
  %idxprom1509 = zext i32 %and1508 to i64, !dbg !277
  %arrayidx1510 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509, !dbg !277
  %904 = load i32, i32* %arrayidx1510, align 4, !dbg !277
  %xor1511 = xor i32 %xor1506, %904, !dbg !277
  %905 = load i32, i32* %t, align 4, !dbg !277
  %shr1512 = lshr i32 %905, 26, !dbg !277
  %and1513 = and i32 %shr1512, 63, !dbg !277
  %idxprom1514 = zext i32 %and1513 to i64, !dbg !277
  %arrayidx1515 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514, !dbg !277
  %906 = load i32, i32* %arrayidx1515, align 4, !dbg !277
  %xor1516 = xor i32 %xor1511, %906, !dbg !277
  %907 = load i32, i32* %r, align 4, !dbg !277
  %xor1517 = xor i32 %907, %xor1516, !dbg !277
  store i32 %xor1517, i32* %r, align 4, !dbg !277
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.declare(metadata i32* %ret1518, metadata !283, metadata !DIExpression()), !dbg !285
  %908 = load i32, i32* %l, align 4, !dbg !285
  %909 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %908) #5, !dbg !285, !srcloc !286
  store i32 %909, i32* %ret1518, align 4, !dbg !285
  %910 = load i32, i32* %ret1518, align 4, !dbg !285
  store i32 %910, i32* %tmp1519, align 4, !dbg !285
  %911 = load i32, i32* %tmp1519, align 4, !dbg !285
  %conv1520 = zext i32 %911 to i64, !dbg !287
  %and1521 = and i64 %conv1520, 4294967295, !dbg !288
  %conv1522 = trunc i64 %and1521 to i32, !dbg !287
  store i32 %conv1522, i32* %l, align 4, !dbg !289
  call void @llvm.dbg.declare(metadata i32* %ret1523, metadata !290, metadata !DIExpression()), !dbg !292
  %912 = load i32, i32* %r, align 4, !dbg !292
  %913 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %912) #5, !dbg !292, !srcloc !293
  store i32 %913, i32* %ret1523, align 4, !dbg !292
  %914 = load i32, i32* %ret1523, align 4, !dbg !292
  store i32 %914, i32* %tmp1524, align 4, !dbg !292
  %915 = load i32, i32* %tmp1524, align 4, !dbg !292
  %conv1525 = zext i32 %915 to i64, !dbg !294
  %and1526 = and i64 %conv1525, 4294967295, !dbg !295
  %conv1527 = trunc i64 %and1526 to i32, !dbg !294
  store i32 %conv1527, i32* %r, align 4, !dbg !296
  call void @llvm.dbg.declare(metadata i32* %tt1528, metadata !297, metadata !DIExpression()), !dbg !299
  %916 = load i32, i32* %r, align 4, !dbg !299
  %shr1529 = lshr i32 %916, 1, !dbg !299
  %917 = load i32, i32* %l, align 4, !dbg !299
  %xor1530 = xor i32 %shr1529, %917, !dbg !299
  %conv1531 = zext i32 %xor1530 to i64, !dbg !299
  %and1532 = and i64 %conv1531, 1431655765, !dbg !299
  %conv1533 = trunc i64 %and1532 to i32, !dbg !299
  store i32 %conv1533, i32* %tt1528, align 4, !dbg !299
  %918 = load i32, i32* %tt1528, align 4, !dbg !299
  %919 = load i32, i32* %l, align 4, !dbg !299
  %xor1534 = xor i32 %919, %918, !dbg !299
  store i32 %xor1534, i32* %l, align 4, !dbg !299
  %920 = load i32, i32* %tt1528, align 4, !dbg !299
  %shl1535 = shl i32 %920, 1, !dbg !299
  %921 = load i32, i32* %r, align 4, !dbg !299
  %xor1536 = xor i32 %921, %shl1535, !dbg !299
  store i32 %xor1536, i32* %r, align 4, !dbg !299
  %922 = load i32, i32* %l, align 4, !dbg !299
  %shr1537 = lshr i32 %922, 8, !dbg !299
  %923 = load i32, i32* %r, align 4, !dbg !299
  %xor1538 = xor i32 %shr1537, %923, !dbg !299
  %conv1539 = zext i32 %xor1538 to i64, !dbg !299
  %and1540 = and i64 %conv1539, 16711935, !dbg !299
  %conv1541 = trunc i64 %and1540 to i32, !dbg !299
  store i32 %conv1541, i32* %tt1528, align 4, !dbg !299
  %924 = load i32, i32* %tt1528, align 4, !dbg !299
  %925 = load i32, i32* %r, align 4, !dbg !299
  %xor1542 = xor i32 %925, %924, !dbg !299
  store i32 %xor1542, i32* %r, align 4, !dbg !299
  %926 = load i32, i32* %tt1528, align 4, !dbg !299
  %shl1543 = shl i32 %926, 8, !dbg !299
  %927 = load i32, i32* %l, align 4, !dbg !299
  %xor1544 = xor i32 %927, %shl1543, !dbg !299
  store i32 %xor1544, i32* %l, align 4, !dbg !299
  %928 = load i32, i32* %r, align 4, !dbg !299
  %shr1545 = lshr i32 %928, 2, !dbg !299
  %929 = load i32, i32* %l, align 4, !dbg !299
  %xor1546 = xor i32 %shr1545, %929, !dbg !299
  %conv1547 = zext i32 %xor1546 to i64, !dbg !299
  %and1548 = and i64 %conv1547, 858993459, !dbg !299
  %conv1549 = trunc i64 %and1548 to i32, !dbg !299
  store i32 %conv1549, i32* %tt1528, align 4, !dbg !299
  %930 = load i32, i32* %tt1528, align 4, !dbg !299
  %931 = load i32, i32* %l, align 4, !dbg !299
  %xor1550 = xor i32 %931, %930, !dbg !299
  store i32 %xor1550, i32* %l, align 4, !dbg !299
  %932 = load i32, i32* %tt1528, align 4, !dbg !299
  %shl1551 = shl i32 %932, 2, !dbg !299
  %933 = load i32, i32* %r, align 4, !dbg !299
  %xor1552 = xor i32 %933, %shl1551, !dbg !299
  store i32 %xor1552, i32* %r, align 4, !dbg !299
  %934 = load i32, i32* %l, align 4, !dbg !299
  %shr1553 = lshr i32 %934, 16, !dbg !299
  %935 = load i32, i32* %r, align 4, !dbg !299
  %xor1554 = xor i32 %shr1553, %935, !dbg !299
  %conv1555 = zext i32 %xor1554 to i64, !dbg !299
  %and1556 = and i64 %conv1555, 65535, !dbg !299
  %conv1557 = trunc i64 %and1556 to i32, !dbg !299
  store i32 %conv1557, i32* %tt1528, align 4, !dbg !299
  %936 = load i32, i32* %tt1528, align 4, !dbg !299
  %937 = load i32, i32* %r, align 4, !dbg !299
  %xor1558 = xor i32 %937, %936, !dbg !299
  store i32 %xor1558, i32* %r, align 4, !dbg !299
  %938 = load i32, i32* %tt1528, align 4, !dbg !299
  %shl1559 = shl i32 %938, 16, !dbg !299
  %939 = load i32, i32* %l, align 4, !dbg !299
  %xor1560 = xor i32 %939, %shl1559, !dbg !299
  store i32 %xor1560, i32* %l, align 4, !dbg !299
  %940 = load i32, i32* %r, align 4, !dbg !299
  %shr1561 = lshr i32 %940, 4, !dbg !299
  %941 = load i32, i32* %l, align 4, !dbg !299
  %xor1562 = xor i32 %shr1561, %941, !dbg !299
  %conv1563 = zext i32 %xor1562 to i64, !dbg !299
  %and1564 = and i64 %conv1563, 252645135, !dbg !299
  %conv1565 = trunc i64 %and1564 to i32, !dbg !299
  store i32 %conv1565, i32* %tt1528, align 4, !dbg !299
  %942 = load i32, i32* %tt1528, align 4, !dbg !299
  %943 = load i32, i32* %l, align 4, !dbg !299
  %xor1566 = xor i32 %943, %942, !dbg !299
  store i32 %xor1566, i32* %l, align 4, !dbg !299
  %944 = load i32, i32* %tt1528, align 4, !dbg !299
  %shl1567 = shl i32 %944, 4, !dbg !299
  %945 = load i32, i32* %r, align 4, !dbg !299
  %xor1568 = xor i32 %945, %shl1567, !dbg !299
  store i32 %xor1568, i32* %r, align 4, !dbg !299
  %946 = load i32, i32* %l, align 4, !dbg !300
  %947 = load i32*, i32** %data.addr, align 8, !dbg !301
  %arrayidx1569 = getelementptr inbounds i32, i32* %947, i64 0, !dbg !301
  store i32 %946, i32* %arrayidx1569, align 4, !dbg !302
  %948 = load i32, i32* %r, align 4, !dbg !303
  %949 = load i32*, i32** %data.addr, align 8, !dbg !304
  %arrayidx1570 = getelementptr inbounds i32, i32* %949, i64 1, !dbg !304
  store i32 %948, i32* %arrayidx1570, align 4, !dbg !305
  store i32 0, i32* %u, align 4, !dbg !306
  store i32 0, i32* %t, align 4, !dbg !307
  store i32 0, i32* %r, align 4, !dbg !308
  store i32 0, i32* %l, align 4, !dbg !309
  ret void, !dbg !310
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_encrypt2(i32* %data, %struct.DES_ks* %ks, i32 %enc) #2 !dbg !311 {
entry:
  %data.addr = alloca i32*, align 8
  %ks.addr = alloca %struct.DES_ks*, align 8
  %enc.addr = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %t = alloca i32, align 4
  %u = alloca i32, align 4
  %s = alloca i32*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ret3 = alloca i32, align 4
  %tmp4 = alloca i32, align 4
  %ret13 = alloca i32, align 4
  %tmp14 = alloca i32, align 4
  %ret57 = alloca i32, align 4
  %tmp58 = alloca i32, align 4
  %ret103 = alloca i32, align 4
  %tmp104 = alloca i32, align 4
  %ret149 = alloca i32, align 4
  %tmp150 = alloca i32, align 4
  %ret195 = alloca i32, align 4
  %tmp196 = alloca i32, align 4
  %ret241 = alloca i32, align 4
  %tmp242 = alloca i32, align 4
  %ret287 = alloca i32, align 4
  %tmp288 = alloca i32, align 4
  %ret333 = alloca i32, align 4
  %tmp334 = alloca i32, align 4
  %ret379 = alloca i32, align 4
  %tmp380 = alloca i32, align 4
  %ret425 = alloca i32, align 4
  %tmp426 = alloca i32, align 4
  %ret471 = alloca i32, align 4
  %tmp472 = alloca i32, align 4
  %ret517 = alloca i32, align 4
  %tmp518 = alloca i32, align 4
  %ret563 = alloca i32, align 4
  %tmp564 = alloca i32, align 4
  %ret609 = alloca i32, align 4
  %tmp610 = alloca i32, align 4
  %ret655 = alloca i32, align 4
  %tmp656 = alloca i32, align 4
  %ret701 = alloca i32, align 4
  %tmp702 = alloca i32, align 4
  %ret747 = alloca i32, align 4
  %tmp748 = alloca i32, align 4
  %ret793 = alloca i32, align 4
  %tmp794 = alloca i32, align 4
  %ret839 = alloca i32, align 4
  %tmp840 = alloca i32, align 4
  %ret885 = alloca i32, align 4
  %tmp886 = alloca i32, align 4
  %ret931 = alloca i32, align 4
  %tmp932 = alloca i32, align 4
  %ret977 = alloca i32, align 4
  %tmp978 = alloca i32, align 4
  %ret1023 = alloca i32, align 4
  %tmp1024 = alloca i32, align 4
  %ret1069 = alloca i32, align 4
  %tmp1070 = alloca i32, align 4
  %ret1115 = alloca i32, align 4
  %tmp1116 = alloca i32, align 4
  %ret1161 = alloca i32, align 4
  %tmp1162 = alloca i32, align 4
  %ret1207 = alloca i32, align 4
  %tmp1208 = alloca i32, align 4
  %ret1253 = alloca i32, align 4
  %tmp1254 = alloca i32, align 4
  %ret1299 = alloca i32, align 4
  %tmp1300 = alloca i32, align 4
  %ret1345 = alloca i32, align 4
  %tmp1346 = alloca i32, align 4
  %ret1391 = alloca i32, align 4
  %tmp1392 = alloca i32, align 4
  %ret1437 = alloca i32, align 4
  %tmp1438 = alloca i32, align 4
  %ret1479 = alloca i32, align 4
  %tmp1480 = alloca i32, align 4
  %ret1485 = alloca i32, align 4
  %tmp1486 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !312, metadata !DIExpression()), !dbg !313
  store %struct.DES_ks* %ks, %struct.DES_ks** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr, metadata !314, metadata !DIExpression()), !dbg !315
  store i32 %enc, i32* %enc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr, metadata !316, metadata !DIExpression()), !dbg !317
  call void @llvm.dbg.declare(metadata i32* %l, metadata !318, metadata !DIExpression()), !dbg !319
  call void @llvm.dbg.declare(metadata i32* %r, metadata !320, metadata !DIExpression()), !dbg !321
  call void @llvm.dbg.declare(metadata i32* %t, metadata !322, metadata !DIExpression()), !dbg !323
  call void @llvm.dbg.declare(metadata i32* %u, metadata !324, metadata !DIExpression()), !dbg !325
  call void @llvm.dbg.declare(metadata i32** %s, metadata !326, metadata !DIExpression()), !dbg !327
  %0 = load i32*, i32** %data.addr, align 8, !dbg !328
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !328
  %1 = load i32, i32* %arrayidx, align 4, !dbg !328
  store i32 %1, i32* %r, align 4, !dbg !329
  %2 = load i32*, i32** %data.addr, align 8, !dbg !330
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !330
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !330
  store i32 %3, i32* %l, align 4, !dbg !331
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !332, metadata !DIExpression()), !dbg !334
  %4 = load i32, i32* %r, align 4, !dbg !334
  %5 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %4) #5, !dbg !334, !srcloc !335
  store i32 %5, i32* %ret, align 4, !dbg !334
  %6 = load i32, i32* %ret, align 4, !dbg !334
  store i32 %6, i32* %tmp, align 4, !dbg !334
  %7 = load i32, i32* %tmp, align 4, !dbg !334
  %conv = zext i32 %7 to i64, !dbg !336
  %and = and i64 %conv, 4294967295, !dbg !337
  %conv2 = trunc i64 %and to i32, !dbg !336
  store i32 %conv2, i32* %r, align 4, !dbg !338
  call void @llvm.dbg.declare(metadata i32* %ret3, metadata !339, metadata !DIExpression()), !dbg !341
  %8 = load i32, i32* %l, align 4, !dbg !341
  %9 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %8) #5, !dbg !341, !srcloc !342
  store i32 %9, i32* %ret3, align 4, !dbg !341
  %10 = load i32, i32* %ret3, align 4, !dbg !341
  store i32 %10, i32* %tmp4, align 4, !dbg !341
  %11 = load i32, i32* %tmp4, align 4, !dbg !341
  %conv5 = zext i32 %11 to i64, !dbg !343
  %and6 = and i64 %conv5, 4294967295, !dbg !344
  %conv7 = trunc i64 %and6 to i32, !dbg !343
  store i32 %conv7, i32* %l, align 4, !dbg !345
  %12 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr, align 8, !dbg !346
  %ks8 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %12, i32 0, i32 0, !dbg !347
  %arraydecay = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks8, i64 0, i64 0, !dbg !348
  %deslong = bitcast %union.anon* %arraydecay to [2 x i32]*, !dbg !348
  %arraydecay9 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong, i64 0, i64 0, !dbg !346
  store i32* %arraydecay9, i32** %s, align 8, !dbg !349
  %13 = load i32, i32* %enc.addr, align 4, !dbg !350
  %tobool = icmp ne i32 %13, 0, !dbg !350
  br i1 %tobool, label %if.then, label %if.else, !dbg !352

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %r, align 4, !dbg !353
  %15 = load i32*, i32** %s, align 8, !dbg !353
  %arrayidx10 = getelementptr inbounds i32, i32* %15, i64 0, !dbg !353
  %16 = load i32, i32* %arrayidx10, align 4, !dbg !353
  %xor = xor i32 %14, %16, !dbg !353
  store i32 %xor, i32* %u, align 4, !dbg !353
  %17 = load i32, i32* %r, align 4, !dbg !353
  %18 = load i32*, i32** %s, align 8, !dbg !353
  %arrayidx11 = getelementptr inbounds i32, i32* %18, i64 1, !dbg !353
  %19 = load i32, i32* %arrayidx11, align 4, !dbg !353
  %xor12 = xor i32 %17, %19, !dbg !353
  store i32 %xor12, i32* %t, align 4, !dbg !353
  call void @llvm.dbg.declare(metadata i32* %ret13, metadata !356, metadata !DIExpression()), !dbg !358
  %20 = load i32, i32* %t, align 4, !dbg !358
  %21 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %20) #5, !dbg !358, !srcloc !359
  store i32 %21, i32* %ret13, align 4, !dbg !358
  %22 = load i32, i32* %ret13, align 4, !dbg !358
  store i32 %22, i32* %tmp14, align 4, !dbg !358
  %23 = load i32, i32* %tmp14, align 4, !dbg !358
  store i32 %23, i32* %t, align 4, !dbg !353
  %24 = load i32, i32* %u, align 4, !dbg !353
  %shr = lshr i32 %24, 2, !dbg !353
  %and15 = and i32 %shr, 63, !dbg !353
  %idxprom = zext i32 %and15 to i64, !dbg !353
  %arrayidx16 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom, !dbg !353
  %25 = load i32, i32* %arrayidx16, align 4, !dbg !353
  %26 = load i32, i32* %u, align 4, !dbg !353
  %shr17 = lshr i32 %26, 10, !dbg !353
  %and18 = and i32 %shr17, 63, !dbg !353
  %idxprom19 = zext i32 %and18 to i64, !dbg !353
  %arrayidx20 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom19, !dbg !353
  %27 = load i32, i32* %arrayidx20, align 4, !dbg !353
  %xor21 = xor i32 %25, %27, !dbg !353
  %28 = load i32, i32* %u, align 4, !dbg !353
  %shr22 = lshr i32 %28, 18, !dbg !353
  %and23 = and i32 %shr22, 63, !dbg !353
  %idxprom24 = zext i32 %and23 to i64, !dbg !353
  %arrayidx25 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom24, !dbg !353
  %29 = load i32, i32* %arrayidx25, align 4, !dbg !353
  %xor26 = xor i32 %xor21, %29, !dbg !353
  %30 = load i32, i32* %u, align 4, !dbg !353
  %shr27 = lshr i32 %30, 26, !dbg !353
  %and28 = and i32 %shr27, 63, !dbg !353
  %idxprom29 = zext i32 %and28 to i64, !dbg !353
  %arrayidx30 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom29, !dbg !353
  %31 = load i32, i32* %arrayidx30, align 4, !dbg !353
  %xor31 = xor i32 %xor26, %31, !dbg !353
  %32 = load i32, i32* %t, align 4, !dbg !353
  %shr32 = lshr i32 %32, 2, !dbg !353
  %and33 = and i32 %shr32, 63, !dbg !353
  %idxprom34 = zext i32 %and33 to i64, !dbg !353
  %arrayidx35 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom34, !dbg !353
  %33 = load i32, i32* %arrayidx35, align 4, !dbg !353
  %xor36 = xor i32 %xor31, %33, !dbg !353
  %34 = load i32, i32* %t, align 4, !dbg !353
  %shr37 = lshr i32 %34, 10, !dbg !353
  %and38 = and i32 %shr37, 63, !dbg !353
  %idxprom39 = zext i32 %and38 to i64, !dbg !353
  %arrayidx40 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom39, !dbg !353
  %35 = load i32, i32* %arrayidx40, align 4, !dbg !353
  %xor41 = xor i32 %xor36, %35, !dbg !353
  %36 = load i32, i32* %t, align 4, !dbg !353
  %shr42 = lshr i32 %36, 18, !dbg !353
  %and43 = and i32 %shr42, 63, !dbg !353
  %idxprom44 = zext i32 %and43 to i64, !dbg !353
  %arrayidx45 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom44, !dbg !353
  %37 = load i32, i32* %arrayidx45, align 4, !dbg !353
  %xor46 = xor i32 %xor41, %37, !dbg !353
  %38 = load i32, i32* %t, align 4, !dbg !353
  %shr47 = lshr i32 %38, 26, !dbg !353
  %and48 = and i32 %shr47, 63, !dbg !353
  %idxprom49 = zext i32 %and48 to i64, !dbg !353
  %arrayidx50 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom49, !dbg !353
  %39 = load i32, i32* %arrayidx50, align 4, !dbg !353
  %xor51 = xor i32 %xor46, %39, !dbg !353
  %40 = load i32, i32* %l, align 4, !dbg !353
  %xor52 = xor i32 %40, %xor51, !dbg !353
  store i32 %xor52, i32* %l, align 4, !dbg !353
  %41 = load i32, i32* %l, align 4, !dbg !360
  %42 = load i32*, i32** %s, align 8, !dbg !360
  %arrayidx53 = getelementptr inbounds i32, i32* %42, i64 2, !dbg !360
  %43 = load i32, i32* %arrayidx53, align 4, !dbg !360
  %xor54 = xor i32 %41, %43, !dbg !360
  store i32 %xor54, i32* %u, align 4, !dbg !360
  %44 = load i32, i32* %l, align 4, !dbg !360
  %45 = load i32*, i32** %s, align 8, !dbg !360
  %arrayidx55 = getelementptr inbounds i32, i32* %45, i64 3, !dbg !360
  %46 = load i32, i32* %arrayidx55, align 4, !dbg !360
  %xor56 = xor i32 %44, %46, !dbg !360
  store i32 %xor56, i32* %t, align 4, !dbg !360
  call void @llvm.dbg.declare(metadata i32* %ret57, metadata !362, metadata !DIExpression()), !dbg !364
  %47 = load i32, i32* %t, align 4, !dbg !364
  %48 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %47) #5, !dbg !364, !srcloc !365
  store i32 %48, i32* %ret57, align 4, !dbg !364
  %49 = load i32, i32* %ret57, align 4, !dbg !364
  store i32 %49, i32* %tmp58, align 4, !dbg !364
  %50 = load i32, i32* %tmp58, align 4, !dbg !364
  store i32 %50, i32* %t, align 4, !dbg !360
  %51 = load i32, i32* %u, align 4, !dbg !360
  %shr59 = lshr i32 %51, 2, !dbg !360
  %and60 = and i32 %shr59, 63, !dbg !360
  %idxprom61 = zext i32 %and60 to i64, !dbg !360
  %arrayidx62 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom61, !dbg !360
  %52 = load i32, i32* %arrayidx62, align 4, !dbg !360
  %53 = load i32, i32* %u, align 4, !dbg !360
  %shr63 = lshr i32 %53, 10, !dbg !360
  %and64 = and i32 %shr63, 63, !dbg !360
  %idxprom65 = zext i32 %and64 to i64, !dbg !360
  %arrayidx66 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom65, !dbg !360
  %54 = load i32, i32* %arrayidx66, align 4, !dbg !360
  %xor67 = xor i32 %52, %54, !dbg !360
  %55 = load i32, i32* %u, align 4, !dbg !360
  %shr68 = lshr i32 %55, 18, !dbg !360
  %and69 = and i32 %shr68, 63, !dbg !360
  %idxprom70 = zext i32 %and69 to i64, !dbg !360
  %arrayidx71 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom70, !dbg !360
  %56 = load i32, i32* %arrayidx71, align 4, !dbg !360
  %xor72 = xor i32 %xor67, %56, !dbg !360
  %57 = load i32, i32* %u, align 4, !dbg !360
  %shr73 = lshr i32 %57, 26, !dbg !360
  %and74 = and i32 %shr73, 63, !dbg !360
  %idxprom75 = zext i32 %and74 to i64, !dbg !360
  %arrayidx76 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom75, !dbg !360
  %58 = load i32, i32* %arrayidx76, align 4, !dbg !360
  %xor77 = xor i32 %xor72, %58, !dbg !360
  %59 = load i32, i32* %t, align 4, !dbg !360
  %shr78 = lshr i32 %59, 2, !dbg !360
  %and79 = and i32 %shr78, 63, !dbg !360
  %idxprom80 = zext i32 %and79 to i64, !dbg !360
  %arrayidx81 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom80, !dbg !360
  %60 = load i32, i32* %arrayidx81, align 4, !dbg !360
  %xor82 = xor i32 %xor77, %60, !dbg !360
  %61 = load i32, i32* %t, align 4, !dbg !360
  %shr83 = lshr i32 %61, 10, !dbg !360
  %and84 = and i32 %shr83, 63, !dbg !360
  %idxprom85 = zext i32 %and84 to i64, !dbg !360
  %arrayidx86 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom85, !dbg !360
  %62 = load i32, i32* %arrayidx86, align 4, !dbg !360
  %xor87 = xor i32 %xor82, %62, !dbg !360
  %63 = load i32, i32* %t, align 4, !dbg !360
  %shr88 = lshr i32 %63, 18, !dbg !360
  %and89 = and i32 %shr88, 63, !dbg !360
  %idxprom90 = zext i32 %and89 to i64, !dbg !360
  %arrayidx91 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom90, !dbg !360
  %64 = load i32, i32* %arrayidx91, align 4, !dbg !360
  %xor92 = xor i32 %xor87, %64, !dbg !360
  %65 = load i32, i32* %t, align 4, !dbg !360
  %shr93 = lshr i32 %65, 26, !dbg !360
  %and94 = and i32 %shr93, 63, !dbg !360
  %idxprom95 = zext i32 %and94 to i64, !dbg !360
  %arrayidx96 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom95, !dbg !360
  %66 = load i32, i32* %arrayidx96, align 4, !dbg !360
  %xor97 = xor i32 %xor92, %66, !dbg !360
  %67 = load i32, i32* %r, align 4, !dbg !360
  %xor98 = xor i32 %67, %xor97, !dbg !360
  store i32 %xor98, i32* %r, align 4, !dbg !360
  %68 = load i32, i32* %r, align 4, !dbg !366
  %69 = load i32*, i32** %s, align 8, !dbg !366
  %arrayidx99 = getelementptr inbounds i32, i32* %69, i64 4, !dbg !366
  %70 = load i32, i32* %arrayidx99, align 4, !dbg !366
  %xor100 = xor i32 %68, %70, !dbg !366
  store i32 %xor100, i32* %u, align 4, !dbg !366
  %71 = load i32, i32* %r, align 4, !dbg !366
  %72 = load i32*, i32** %s, align 8, !dbg !366
  %arrayidx101 = getelementptr inbounds i32, i32* %72, i64 5, !dbg !366
  %73 = load i32, i32* %arrayidx101, align 4, !dbg !366
  %xor102 = xor i32 %71, %73, !dbg !366
  store i32 %xor102, i32* %t, align 4, !dbg !366
  call void @llvm.dbg.declare(metadata i32* %ret103, metadata !368, metadata !DIExpression()), !dbg !370
  %74 = load i32, i32* %t, align 4, !dbg !370
  %75 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %74) #5, !dbg !370, !srcloc !371
  store i32 %75, i32* %ret103, align 4, !dbg !370
  %76 = load i32, i32* %ret103, align 4, !dbg !370
  store i32 %76, i32* %tmp104, align 4, !dbg !370
  %77 = load i32, i32* %tmp104, align 4, !dbg !370
  store i32 %77, i32* %t, align 4, !dbg !366
  %78 = load i32, i32* %u, align 4, !dbg !366
  %shr105 = lshr i32 %78, 2, !dbg !366
  %and106 = and i32 %shr105, 63, !dbg !366
  %idxprom107 = zext i32 %and106 to i64, !dbg !366
  %arrayidx108 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom107, !dbg !366
  %79 = load i32, i32* %arrayidx108, align 4, !dbg !366
  %80 = load i32, i32* %u, align 4, !dbg !366
  %shr109 = lshr i32 %80, 10, !dbg !366
  %and110 = and i32 %shr109, 63, !dbg !366
  %idxprom111 = zext i32 %and110 to i64, !dbg !366
  %arrayidx112 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom111, !dbg !366
  %81 = load i32, i32* %arrayidx112, align 4, !dbg !366
  %xor113 = xor i32 %79, %81, !dbg !366
  %82 = load i32, i32* %u, align 4, !dbg !366
  %shr114 = lshr i32 %82, 18, !dbg !366
  %and115 = and i32 %shr114, 63, !dbg !366
  %idxprom116 = zext i32 %and115 to i64, !dbg !366
  %arrayidx117 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom116, !dbg !366
  %83 = load i32, i32* %arrayidx117, align 4, !dbg !366
  %xor118 = xor i32 %xor113, %83, !dbg !366
  %84 = load i32, i32* %u, align 4, !dbg !366
  %shr119 = lshr i32 %84, 26, !dbg !366
  %and120 = and i32 %shr119, 63, !dbg !366
  %idxprom121 = zext i32 %and120 to i64, !dbg !366
  %arrayidx122 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom121, !dbg !366
  %85 = load i32, i32* %arrayidx122, align 4, !dbg !366
  %xor123 = xor i32 %xor118, %85, !dbg !366
  %86 = load i32, i32* %t, align 4, !dbg !366
  %shr124 = lshr i32 %86, 2, !dbg !366
  %and125 = and i32 %shr124, 63, !dbg !366
  %idxprom126 = zext i32 %and125 to i64, !dbg !366
  %arrayidx127 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom126, !dbg !366
  %87 = load i32, i32* %arrayidx127, align 4, !dbg !366
  %xor128 = xor i32 %xor123, %87, !dbg !366
  %88 = load i32, i32* %t, align 4, !dbg !366
  %shr129 = lshr i32 %88, 10, !dbg !366
  %and130 = and i32 %shr129, 63, !dbg !366
  %idxprom131 = zext i32 %and130 to i64, !dbg !366
  %arrayidx132 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom131, !dbg !366
  %89 = load i32, i32* %arrayidx132, align 4, !dbg !366
  %xor133 = xor i32 %xor128, %89, !dbg !366
  %90 = load i32, i32* %t, align 4, !dbg !366
  %shr134 = lshr i32 %90, 18, !dbg !366
  %and135 = and i32 %shr134, 63, !dbg !366
  %idxprom136 = zext i32 %and135 to i64, !dbg !366
  %arrayidx137 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom136, !dbg !366
  %91 = load i32, i32* %arrayidx137, align 4, !dbg !366
  %xor138 = xor i32 %xor133, %91, !dbg !366
  %92 = load i32, i32* %t, align 4, !dbg !366
  %shr139 = lshr i32 %92, 26, !dbg !366
  %and140 = and i32 %shr139, 63, !dbg !366
  %idxprom141 = zext i32 %and140 to i64, !dbg !366
  %arrayidx142 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom141, !dbg !366
  %93 = load i32, i32* %arrayidx142, align 4, !dbg !366
  %xor143 = xor i32 %xor138, %93, !dbg !366
  %94 = load i32, i32* %l, align 4, !dbg !366
  %xor144 = xor i32 %94, %xor143, !dbg !366
  store i32 %xor144, i32* %l, align 4, !dbg !366
  %95 = load i32, i32* %l, align 4, !dbg !372
  %96 = load i32*, i32** %s, align 8, !dbg !372
  %arrayidx145 = getelementptr inbounds i32, i32* %96, i64 6, !dbg !372
  %97 = load i32, i32* %arrayidx145, align 4, !dbg !372
  %xor146 = xor i32 %95, %97, !dbg !372
  store i32 %xor146, i32* %u, align 4, !dbg !372
  %98 = load i32, i32* %l, align 4, !dbg !372
  %99 = load i32*, i32** %s, align 8, !dbg !372
  %arrayidx147 = getelementptr inbounds i32, i32* %99, i64 7, !dbg !372
  %100 = load i32, i32* %arrayidx147, align 4, !dbg !372
  %xor148 = xor i32 %98, %100, !dbg !372
  store i32 %xor148, i32* %t, align 4, !dbg !372
  call void @llvm.dbg.declare(metadata i32* %ret149, metadata !374, metadata !DIExpression()), !dbg !376
  %101 = load i32, i32* %t, align 4, !dbg !376
  %102 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %101) #5, !dbg !376, !srcloc !377
  store i32 %102, i32* %ret149, align 4, !dbg !376
  %103 = load i32, i32* %ret149, align 4, !dbg !376
  store i32 %103, i32* %tmp150, align 4, !dbg !376
  %104 = load i32, i32* %tmp150, align 4, !dbg !376
  store i32 %104, i32* %t, align 4, !dbg !372
  %105 = load i32, i32* %u, align 4, !dbg !372
  %shr151 = lshr i32 %105, 2, !dbg !372
  %and152 = and i32 %shr151, 63, !dbg !372
  %idxprom153 = zext i32 %and152 to i64, !dbg !372
  %arrayidx154 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom153, !dbg !372
  %106 = load i32, i32* %arrayidx154, align 4, !dbg !372
  %107 = load i32, i32* %u, align 4, !dbg !372
  %shr155 = lshr i32 %107, 10, !dbg !372
  %and156 = and i32 %shr155, 63, !dbg !372
  %idxprom157 = zext i32 %and156 to i64, !dbg !372
  %arrayidx158 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom157, !dbg !372
  %108 = load i32, i32* %arrayidx158, align 4, !dbg !372
  %xor159 = xor i32 %106, %108, !dbg !372
  %109 = load i32, i32* %u, align 4, !dbg !372
  %shr160 = lshr i32 %109, 18, !dbg !372
  %and161 = and i32 %shr160, 63, !dbg !372
  %idxprom162 = zext i32 %and161 to i64, !dbg !372
  %arrayidx163 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom162, !dbg !372
  %110 = load i32, i32* %arrayidx163, align 4, !dbg !372
  %xor164 = xor i32 %xor159, %110, !dbg !372
  %111 = load i32, i32* %u, align 4, !dbg !372
  %shr165 = lshr i32 %111, 26, !dbg !372
  %and166 = and i32 %shr165, 63, !dbg !372
  %idxprom167 = zext i32 %and166 to i64, !dbg !372
  %arrayidx168 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom167, !dbg !372
  %112 = load i32, i32* %arrayidx168, align 4, !dbg !372
  %xor169 = xor i32 %xor164, %112, !dbg !372
  %113 = load i32, i32* %t, align 4, !dbg !372
  %shr170 = lshr i32 %113, 2, !dbg !372
  %and171 = and i32 %shr170, 63, !dbg !372
  %idxprom172 = zext i32 %and171 to i64, !dbg !372
  %arrayidx173 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom172, !dbg !372
  %114 = load i32, i32* %arrayidx173, align 4, !dbg !372
  %xor174 = xor i32 %xor169, %114, !dbg !372
  %115 = load i32, i32* %t, align 4, !dbg !372
  %shr175 = lshr i32 %115, 10, !dbg !372
  %and176 = and i32 %shr175, 63, !dbg !372
  %idxprom177 = zext i32 %and176 to i64, !dbg !372
  %arrayidx178 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom177, !dbg !372
  %116 = load i32, i32* %arrayidx178, align 4, !dbg !372
  %xor179 = xor i32 %xor174, %116, !dbg !372
  %117 = load i32, i32* %t, align 4, !dbg !372
  %shr180 = lshr i32 %117, 18, !dbg !372
  %and181 = and i32 %shr180, 63, !dbg !372
  %idxprom182 = zext i32 %and181 to i64, !dbg !372
  %arrayidx183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom182, !dbg !372
  %118 = load i32, i32* %arrayidx183, align 4, !dbg !372
  %xor184 = xor i32 %xor179, %118, !dbg !372
  %119 = load i32, i32* %t, align 4, !dbg !372
  %shr185 = lshr i32 %119, 26, !dbg !372
  %and186 = and i32 %shr185, 63, !dbg !372
  %idxprom187 = zext i32 %and186 to i64, !dbg !372
  %arrayidx188 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom187, !dbg !372
  %120 = load i32, i32* %arrayidx188, align 4, !dbg !372
  %xor189 = xor i32 %xor184, %120, !dbg !372
  %121 = load i32, i32* %r, align 4, !dbg !372
  %xor190 = xor i32 %121, %xor189, !dbg !372
  store i32 %xor190, i32* %r, align 4, !dbg !372
  %122 = load i32, i32* %r, align 4, !dbg !378
  %123 = load i32*, i32** %s, align 8, !dbg !378
  %arrayidx191 = getelementptr inbounds i32, i32* %123, i64 8, !dbg !378
  %124 = load i32, i32* %arrayidx191, align 4, !dbg !378
  %xor192 = xor i32 %122, %124, !dbg !378
  store i32 %xor192, i32* %u, align 4, !dbg !378
  %125 = load i32, i32* %r, align 4, !dbg !378
  %126 = load i32*, i32** %s, align 8, !dbg !378
  %arrayidx193 = getelementptr inbounds i32, i32* %126, i64 9, !dbg !378
  %127 = load i32, i32* %arrayidx193, align 4, !dbg !378
  %xor194 = xor i32 %125, %127, !dbg !378
  store i32 %xor194, i32* %t, align 4, !dbg !378
  call void @llvm.dbg.declare(metadata i32* %ret195, metadata !380, metadata !DIExpression()), !dbg !382
  %128 = load i32, i32* %t, align 4, !dbg !382
  %129 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %128) #5, !dbg !382, !srcloc !383
  store i32 %129, i32* %ret195, align 4, !dbg !382
  %130 = load i32, i32* %ret195, align 4, !dbg !382
  store i32 %130, i32* %tmp196, align 4, !dbg !382
  %131 = load i32, i32* %tmp196, align 4, !dbg !382
  store i32 %131, i32* %t, align 4, !dbg !378
  %132 = load i32, i32* %u, align 4, !dbg !378
  %shr197 = lshr i32 %132, 2, !dbg !378
  %and198 = and i32 %shr197, 63, !dbg !378
  %idxprom199 = zext i32 %and198 to i64, !dbg !378
  %arrayidx200 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom199, !dbg !378
  %133 = load i32, i32* %arrayidx200, align 4, !dbg !378
  %134 = load i32, i32* %u, align 4, !dbg !378
  %shr201 = lshr i32 %134, 10, !dbg !378
  %and202 = and i32 %shr201, 63, !dbg !378
  %idxprom203 = zext i32 %and202 to i64, !dbg !378
  %arrayidx204 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom203, !dbg !378
  %135 = load i32, i32* %arrayidx204, align 4, !dbg !378
  %xor205 = xor i32 %133, %135, !dbg !378
  %136 = load i32, i32* %u, align 4, !dbg !378
  %shr206 = lshr i32 %136, 18, !dbg !378
  %and207 = and i32 %shr206, 63, !dbg !378
  %idxprom208 = zext i32 %and207 to i64, !dbg !378
  %arrayidx209 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom208, !dbg !378
  %137 = load i32, i32* %arrayidx209, align 4, !dbg !378
  %xor210 = xor i32 %xor205, %137, !dbg !378
  %138 = load i32, i32* %u, align 4, !dbg !378
  %shr211 = lshr i32 %138, 26, !dbg !378
  %and212 = and i32 %shr211, 63, !dbg !378
  %idxprom213 = zext i32 %and212 to i64, !dbg !378
  %arrayidx214 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom213, !dbg !378
  %139 = load i32, i32* %arrayidx214, align 4, !dbg !378
  %xor215 = xor i32 %xor210, %139, !dbg !378
  %140 = load i32, i32* %t, align 4, !dbg !378
  %shr216 = lshr i32 %140, 2, !dbg !378
  %and217 = and i32 %shr216, 63, !dbg !378
  %idxprom218 = zext i32 %and217 to i64, !dbg !378
  %arrayidx219 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom218, !dbg !378
  %141 = load i32, i32* %arrayidx219, align 4, !dbg !378
  %xor220 = xor i32 %xor215, %141, !dbg !378
  %142 = load i32, i32* %t, align 4, !dbg !378
  %shr221 = lshr i32 %142, 10, !dbg !378
  %and222 = and i32 %shr221, 63, !dbg !378
  %idxprom223 = zext i32 %and222 to i64, !dbg !378
  %arrayidx224 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom223, !dbg !378
  %143 = load i32, i32* %arrayidx224, align 4, !dbg !378
  %xor225 = xor i32 %xor220, %143, !dbg !378
  %144 = load i32, i32* %t, align 4, !dbg !378
  %shr226 = lshr i32 %144, 18, !dbg !378
  %and227 = and i32 %shr226, 63, !dbg !378
  %idxprom228 = zext i32 %and227 to i64, !dbg !378
  %arrayidx229 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom228, !dbg !378
  %145 = load i32, i32* %arrayidx229, align 4, !dbg !378
  %xor230 = xor i32 %xor225, %145, !dbg !378
  %146 = load i32, i32* %t, align 4, !dbg !378
  %shr231 = lshr i32 %146, 26, !dbg !378
  %and232 = and i32 %shr231, 63, !dbg !378
  %idxprom233 = zext i32 %and232 to i64, !dbg !378
  %arrayidx234 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom233, !dbg !378
  %147 = load i32, i32* %arrayidx234, align 4, !dbg !378
  %xor235 = xor i32 %xor230, %147, !dbg !378
  %148 = load i32, i32* %l, align 4, !dbg !378
  %xor236 = xor i32 %148, %xor235, !dbg !378
  store i32 %xor236, i32* %l, align 4, !dbg !378
  %149 = load i32, i32* %l, align 4, !dbg !384
  %150 = load i32*, i32** %s, align 8, !dbg !384
  %arrayidx237 = getelementptr inbounds i32, i32* %150, i64 10, !dbg !384
  %151 = load i32, i32* %arrayidx237, align 4, !dbg !384
  %xor238 = xor i32 %149, %151, !dbg !384
  store i32 %xor238, i32* %u, align 4, !dbg !384
  %152 = load i32, i32* %l, align 4, !dbg !384
  %153 = load i32*, i32** %s, align 8, !dbg !384
  %arrayidx239 = getelementptr inbounds i32, i32* %153, i64 11, !dbg !384
  %154 = load i32, i32* %arrayidx239, align 4, !dbg !384
  %xor240 = xor i32 %152, %154, !dbg !384
  store i32 %xor240, i32* %t, align 4, !dbg !384
  call void @llvm.dbg.declare(metadata i32* %ret241, metadata !386, metadata !DIExpression()), !dbg !388
  %155 = load i32, i32* %t, align 4, !dbg !388
  %156 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %155) #5, !dbg !388, !srcloc !389
  store i32 %156, i32* %ret241, align 4, !dbg !388
  %157 = load i32, i32* %ret241, align 4, !dbg !388
  store i32 %157, i32* %tmp242, align 4, !dbg !388
  %158 = load i32, i32* %tmp242, align 4, !dbg !388
  store i32 %158, i32* %t, align 4, !dbg !384
  %159 = load i32, i32* %u, align 4, !dbg !384
  %shr243 = lshr i32 %159, 2, !dbg !384
  %and244 = and i32 %shr243, 63, !dbg !384
  %idxprom245 = zext i32 %and244 to i64, !dbg !384
  %arrayidx246 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom245, !dbg !384
  %160 = load i32, i32* %arrayidx246, align 4, !dbg !384
  %161 = load i32, i32* %u, align 4, !dbg !384
  %shr247 = lshr i32 %161, 10, !dbg !384
  %and248 = and i32 %shr247, 63, !dbg !384
  %idxprom249 = zext i32 %and248 to i64, !dbg !384
  %arrayidx250 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom249, !dbg !384
  %162 = load i32, i32* %arrayidx250, align 4, !dbg !384
  %xor251 = xor i32 %160, %162, !dbg !384
  %163 = load i32, i32* %u, align 4, !dbg !384
  %shr252 = lshr i32 %163, 18, !dbg !384
  %and253 = and i32 %shr252, 63, !dbg !384
  %idxprom254 = zext i32 %and253 to i64, !dbg !384
  %arrayidx255 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom254, !dbg !384
  %164 = load i32, i32* %arrayidx255, align 4, !dbg !384
  %xor256 = xor i32 %xor251, %164, !dbg !384
  %165 = load i32, i32* %u, align 4, !dbg !384
  %shr257 = lshr i32 %165, 26, !dbg !384
  %and258 = and i32 %shr257, 63, !dbg !384
  %idxprom259 = zext i32 %and258 to i64, !dbg !384
  %arrayidx260 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom259, !dbg !384
  %166 = load i32, i32* %arrayidx260, align 4, !dbg !384
  %xor261 = xor i32 %xor256, %166, !dbg !384
  %167 = load i32, i32* %t, align 4, !dbg !384
  %shr262 = lshr i32 %167, 2, !dbg !384
  %and263 = and i32 %shr262, 63, !dbg !384
  %idxprom264 = zext i32 %and263 to i64, !dbg !384
  %arrayidx265 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom264, !dbg !384
  %168 = load i32, i32* %arrayidx265, align 4, !dbg !384
  %xor266 = xor i32 %xor261, %168, !dbg !384
  %169 = load i32, i32* %t, align 4, !dbg !384
  %shr267 = lshr i32 %169, 10, !dbg !384
  %and268 = and i32 %shr267, 63, !dbg !384
  %idxprom269 = zext i32 %and268 to i64, !dbg !384
  %arrayidx270 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom269, !dbg !384
  %170 = load i32, i32* %arrayidx270, align 4, !dbg !384
  %xor271 = xor i32 %xor266, %170, !dbg !384
  %171 = load i32, i32* %t, align 4, !dbg !384
  %shr272 = lshr i32 %171, 18, !dbg !384
  %and273 = and i32 %shr272, 63, !dbg !384
  %idxprom274 = zext i32 %and273 to i64, !dbg !384
  %arrayidx275 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom274, !dbg !384
  %172 = load i32, i32* %arrayidx275, align 4, !dbg !384
  %xor276 = xor i32 %xor271, %172, !dbg !384
  %173 = load i32, i32* %t, align 4, !dbg !384
  %shr277 = lshr i32 %173, 26, !dbg !384
  %and278 = and i32 %shr277, 63, !dbg !384
  %idxprom279 = zext i32 %and278 to i64, !dbg !384
  %arrayidx280 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom279, !dbg !384
  %174 = load i32, i32* %arrayidx280, align 4, !dbg !384
  %xor281 = xor i32 %xor276, %174, !dbg !384
  %175 = load i32, i32* %r, align 4, !dbg !384
  %xor282 = xor i32 %175, %xor281, !dbg !384
  store i32 %xor282, i32* %r, align 4, !dbg !384
  %176 = load i32, i32* %r, align 4, !dbg !390
  %177 = load i32*, i32** %s, align 8, !dbg !390
  %arrayidx283 = getelementptr inbounds i32, i32* %177, i64 12, !dbg !390
  %178 = load i32, i32* %arrayidx283, align 4, !dbg !390
  %xor284 = xor i32 %176, %178, !dbg !390
  store i32 %xor284, i32* %u, align 4, !dbg !390
  %179 = load i32, i32* %r, align 4, !dbg !390
  %180 = load i32*, i32** %s, align 8, !dbg !390
  %arrayidx285 = getelementptr inbounds i32, i32* %180, i64 13, !dbg !390
  %181 = load i32, i32* %arrayidx285, align 4, !dbg !390
  %xor286 = xor i32 %179, %181, !dbg !390
  store i32 %xor286, i32* %t, align 4, !dbg !390
  call void @llvm.dbg.declare(metadata i32* %ret287, metadata !392, metadata !DIExpression()), !dbg !394
  %182 = load i32, i32* %t, align 4, !dbg !394
  %183 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %182) #5, !dbg !394, !srcloc !395
  store i32 %183, i32* %ret287, align 4, !dbg !394
  %184 = load i32, i32* %ret287, align 4, !dbg !394
  store i32 %184, i32* %tmp288, align 4, !dbg !394
  %185 = load i32, i32* %tmp288, align 4, !dbg !394
  store i32 %185, i32* %t, align 4, !dbg !390
  %186 = load i32, i32* %u, align 4, !dbg !390
  %shr289 = lshr i32 %186, 2, !dbg !390
  %and290 = and i32 %shr289, 63, !dbg !390
  %idxprom291 = zext i32 %and290 to i64, !dbg !390
  %arrayidx292 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom291, !dbg !390
  %187 = load i32, i32* %arrayidx292, align 4, !dbg !390
  %188 = load i32, i32* %u, align 4, !dbg !390
  %shr293 = lshr i32 %188, 10, !dbg !390
  %and294 = and i32 %shr293, 63, !dbg !390
  %idxprom295 = zext i32 %and294 to i64, !dbg !390
  %arrayidx296 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom295, !dbg !390
  %189 = load i32, i32* %arrayidx296, align 4, !dbg !390
  %xor297 = xor i32 %187, %189, !dbg !390
  %190 = load i32, i32* %u, align 4, !dbg !390
  %shr298 = lshr i32 %190, 18, !dbg !390
  %and299 = and i32 %shr298, 63, !dbg !390
  %idxprom300 = zext i32 %and299 to i64, !dbg !390
  %arrayidx301 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom300, !dbg !390
  %191 = load i32, i32* %arrayidx301, align 4, !dbg !390
  %xor302 = xor i32 %xor297, %191, !dbg !390
  %192 = load i32, i32* %u, align 4, !dbg !390
  %shr303 = lshr i32 %192, 26, !dbg !390
  %and304 = and i32 %shr303, 63, !dbg !390
  %idxprom305 = zext i32 %and304 to i64, !dbg !390
  %arrayidx306 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom305, !dbg !390
  %193 = load i32, i32* %arrayidx306, align 4, !dbg !390
  %xor307 = xor i32 %xor302, %193, !dbg !390
  %194 = load i32, i32* %t, align 4, !dbg !390
  %shr308 = lshr i32 %194, 2, !dbg !390
  %and309 = and i32 %shr308, 63, !dbg !390
  %idxprom310 = zext i32 %and309 to i64, !dbg !390
  %arrayidx311 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom310, !dbg !390
  %195 = load i32, i32* %arrayidx311, align 4, !dbg !390
  %xor312 = xor i32 %xor307, %195, !dbg !390
  %196 = load i32, i32* %t, align 4, !dbg !390
  %shr313 = lshr i32 %196, 10, !dbg !390
  %and314 = and i32 %shr313, 63, !dbg !390
  %idxprom315 = zext i32 %and314 to i64, !dbg !390
  %arrayidx316 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom315, !dbg !390
  %197 = load i32, i32* %arrayidx316, align 4, !dbg !390
  %xor317 = xor i32 %xor312, %197, !dbg !390
  %198 = load i32, i32* %t, align 4, !dbg !390
  %shr318 = lshr i32 %198, 18, !dbg !390
  %and319 = and i32 %shr318, 63, !dbg !390
  %idxprom320 = zext i32 %and319 to i64, !dbg !390
  %arrayidx321 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom320, !dbg !390
  %199 = load i32, i32* %arrayidx321, align 4, !dbg !390
  %xor322 = xor i32 %xor317, %199, !dbg !390
  %200 = load i32, i32* %t, align 4, !dbg !390
  %shr323 = lshr i32 %200, 26, !dbg !390
  %and324 = and i32 %shr323, 63, !dbg !390
  %idxprom325 = zext i32 %and324 to i64, !dbg !390
  %arrayidx326 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom325, !dbg !390
  %201 = load i32, i32* %arrayidx326, align 4, !dbg !390
  %xor327 = xor i32 %xor322, %201, !dbg !390
  %202 = load i32, i32* %l, align 4, !dbg !390
  %xor328 = xor i32 %202, %xor327, !dbg !390
  store i32 %xor328, i32* %l, align 4, !dbg !390
  %203 = load i32, i32* %l, align 4, !dbg !396
  %204 = load i32*, i32** %s, align 8, !dbg !396
  %arrayidx329 = getelementptr inbounds i32, i32* %204, i64 14, !dbg !396
  %205 = load i32, i32* %arrayidx329, align 4, !dbg !396
  %xor330 = xor i32 %203, %205, !dbg !396
  store i32 %xor330, i32* %u, align 4, !dbg !396
  %206 = load i32, i32* %l, align 4, !dbg !396
  %207 = load i32*, i32** %s, align 8, !dbg !396
  %arrayidx331 = getelementptr inbounds i32, i32* %207, i64 15, !dbg !396
  %208 = load i32, i32* %arrayidx331, align 4, !dbg !396
  %xor332 = xor i32 %206, %208, !dbg !396
  store i32 %xor332, i32* %t, align 4, !dbg !396
  call void @llvm.dbg.declare(metadata i32* %ret333, metadata !398, metadata !DIExpression()), !dbg !400
  %209 = load i32, i32* %t, align 4, !dbg !400
  %210 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %209) #5, !dbg !400, !srcloc !401
  store i32 %210, i32* %ret333, align 4, !dbg !400
  %211 = load i32, i32* %ret333, align 4, !dbg !400
  store i32 %211, i32* %tmp334, align 4, !dbg !400
  %212 = load i32, i32* %tmp334, align 4, !dbg !400
  store i32 %212, i32* %t, align 4, !dbg !396
  %213 = load i32, i32* %u, align 4, !dbg !396
  %shr335 = lshr i32 %213, 2, !dbg !396
  %and336 = and i32 %shr335, 63, !dbg !396
  %idxprom337 = zext i32 %and336 to i64, !dbg !396
  %arrayidx338 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom337, !dbg !396
  %214 = load i32, i32* %arrayidx338, align 4, !dbg !396
  %215 = load i32, i32* %u, align 4, !dbg !396
  %shr339 = lshr i32 %215, 10, !dbg !396
  %and340 = and i32 %shr339, 63, !dbg !396
  %idxprom341 = zext i32 %and340 to i64, !dbg !396
  %arrayidx342 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom341, !dbg !396
  %216 = load i32, i32* %arrayidx342, align 4, !dbg !396
  %xor343 = xor i32 %214, %216, !dbg !396
  %217 = load i32, i32* %u, align 4, !dbg !396
  %shr344 = lshr i32 %217, 18, !dbg !396
  %and345 = and i32 %shr344, 63, !dbg !396
  %idxprom346 = zext i32 %and345 to i64, !dbg !396
  %arrayidx347 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom346, !dbg !396
  %218 = load i32, i32* %arrayidx347, align 4, !dbg !396
  %xor348 = xor i32 %xor343, %218, !dbg !396
  %219 = load i32, i32* %u, align 4, !dbg !396
  %shr349 = lshr i32 %219, 26, !dbg !396
  %and350 = and i32 %shr349, 63, !dbg !396
  %idxprom351 = zext i32 %and350 to i64, !dbg !396
  %arrayidx352 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom351, !dbg !396
  %220 = load i32, i32* %arrayidx352, align 4, !dbg !396
  %xor353 = xor i32 %xor348, %220, !dbg !396
  %221 = load i32, i32* %t, align 4, !dbg !396
  %shr354 = lshr i32 %221, 2, !dbg !396
  %and355 = and i32 %shr354, 63, !dbg !396
  %idxprom356 = zext i32 %and355 to i64, !dbg !396
  %arrayidx357 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom356, !dbg !396
  %222 = load i32, i32* %arrayidx357, align 4, !dbg !396
  %xor358 = xor i32 %xor353, %222, !dbg !396
  %223 = load i32, i32* %t, align 4, !dbg !396
  %shr359 = lshr i32 %223, 10, !dbg !396
  %and360 = and i32 %shr359, 63, !dbg !396
  %idxprom361 = zext i32 %and360 to i64, !dbg !396
  %arrayidx362 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom361, !dbg !396
  %224 = load i32, i32* %arrayidx362, align 4, !dbg !396
  %xor363 = xor i32 %xor358, %224, !dbg !396
  %225 = load i32, i32* %t, align 4, !dbg !396
  %shr364 = lshr i32 %225, 18, !dbg !396
  %and365 = and i32 %shr364, 63, !dbg !396
  %idxprom366 = zext i32 %and365 to i64, !dbg !396
  %arrayidx367 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom366, !dbg !396
  %226 = load i32, i32* %arrayidx367, align 4, !dbg !396
  %xor368 = xor i32 %xor363, %226, !dbg !396
  %227 = load i32, i32* %t, align 4, !dbg !396
  %shr369 = lshr i32 %227, 26, !dbg !396
  %and370 = and i32 %shr369, 63, !dbg !396
  %idxprom371 = zext i32 %and370 to i64, !dbg !396
  %arrayidx372 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom371, !dbg !396
  %228 = load i32, i32* %arrayidx372, align 4, !dbg !396
  %xor373 = xor i32 %xor368, %228, !dbg !396
  %229 = load i32, i32* %r, align 4, !dbg !396
  %xor374 = xor i32 %229, %xor373, !dbg !396
  store i32 %xor374, i32* %r, align 4, !dbg !396
  %230 = load i32, i32* %r, align 4, !dbg !402
  %231 = load i32*, i32** %s, align 8, !dbg !402
  %arrayidx375 = getelementptr inbounds i32, i32* %231, i64 16, !dbg !402
  %232 = load i32, i32* %arrayidx375, align 4, !dbg !402
  %xor376 = xor i32 %230, %232, !dbg !402
  store i32 %xor376, i32* %u, align 4, !dbg !402
  %233 = load i32, i32* %r, align 4, !dbg !402
  %234 = load i32*, i32** %s, align 8, !dbg !402
  %arrayidx377 = getelementptr inbounds i32, i32* %234, i64 17, !dbg !402
  %235 = load i32, i32* %arrayidx377, align 4, !dbg !402
  %xor378 = xor i32 %233, %235, !dbg !402
  store i32 %xor378, i32* %t, align 4, !dbg !402
  call void @llvm.dbg.declare(metadata i32* %ret379, metadata !404, metadata !DIExpression()), !dbg !406
  %236 = load i32, i32* %t, align 4, !dbg !406
  %237 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %236) #5, !dbg !406, !srcloc !407
  store i32 %237, i32* %ret379, align 4, !dbg !406
  %238 = load i32, i32* %ret379, align 4, !dbg !406
  store i32 %238, i32* %tmp380, align 4, !dbg !406
  %239 = load i32, i32* %tmp380, align 4, !dbg !406
  store i32 %239, i32* %t, align 4, !dbg !402
  %240 = load i32, i32* %u, align 4, !dbg !402
  %shr381 = lshr i32 %240, 2, !dbg !402
  %and382 = and i32 %shr381, 63, !dbg !402
  %idxprom383 = zext i32 %and382 to i64, !dbg !402
  %arrayidx384 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom383, !dbg !402
  %241 = load i32, i32* %arrayidx384, align 4, !dbg !402
  %242 = load i32, i32* %u, align 4, !dbg !402
  %shr385 = lshr i32 %242, 10, !dbg !402
  %and386 = and i32 %shr385, 63, !dbg !402
  %idxprom387 = zext i32 %and386 to i64, !dbg !402
  %arrayidx388 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom387, !dbg !402
  %243 = load i32, i32* %arrayidx388, align 4, !dbg !402
  %xor389 = xor i32 %241, %243, !dbg !402
  %244 = load i32, i32* %u, align 4, !dbg !402
  %shr390 = lshr i32 %244, 18, !dbg !402
  %and391 = and i32 %shr390, 63, !dbg !402
  %idxprom392 = zext i32 %and391 to i64, !dbg !402
  %arrayidx393 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom392, !dbg !402
  %245 = load i32, i32* %arrayidx393, align 4, !dbg !402
  %xor394 = xor i32 %xor389, %245, !dbg !402
  %246 = load i32, i32* %u, align 4, !dbg !402
  %shr395 = lshr i32 %246, 26, !dbg !402
  %and396 = and i32 %shr395, 63, !dbg !402
  %idxprom397 = zext i32 %and396 to i64, !dbg !402
  %arrayidx398 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom397, !dbg !402
  %247 = load i32, i32* %arrayidx398, align 4, !dbg !402
  %xor399 = xor i32 %xor394, %247, !dbg !402
  %248 = load i32, i32* %t, align 4, !dbg !402
  %shr400 = lshr i32 %248, 2, !dbg !402
  %and401 = and i32 %shr400, 63, !dbg !402
  %idxprom402 = zext i32 %and401 to i64, !dbg !402
  %arrayidx403 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom402, !dbg !402
  %249 = load i32, i32* %arrayidx403, align 4, !dbg !402
  %xor404 = xor i32 %xor399, %249, !dbg !402
  %250 = load i32, i32* %t, align 4, !dbg !402
  %shr405 = lshr i32 %250, 10, !dbg !402
  %and406 = and i32 %shr405, 63, !dbg !402
  %idxprom407 = zext i32 %and406 to i64, !dbg !402
  %arrayidx408 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom407, !dbg !402
  %251 = load i32, i32* %arrayidx408, align 4, !dbg !402
  %xor409 = xor i32 %xor404, %251, !dbg !402
  %252 = load i32, i32* %t, align 4, !dbg !402
  %shr410 = lshr i32 %252, 18, !dbg !402
  %and411 = and i32 %shr410, 63, !dbg !402
  %idxprom412 = zext i32 %and411 to i64, !dbg !402
  %arrayidx413 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom412, !dbg !402
  %253 = load i32, i32* %arrayidx413, align 4, !dbg !402
  %xor414 = xor i32 %xor409, %253, !dbg !402
  %254 = load i32, i32* %t, align 4, !dbg !402
  %shr415 = lshr i32 %254, 26, !dbg !402
  %and416 = and i32 %shr415, 63, !dbg !402
  %idxprom417 = zext i32 %and416 to i64, !dbg !402
  %arrayidx418 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom417, !dbg !402
  %255 = load i32, i32* %arrayidx418, align 4, !dbg !402
  %xor419 = xor i32 %xor414, %255, !dbg !402
  %256 = load i32, i32* %l, align 4, !dbg !402
  %xor420 = xor i32 %256, %xor419, !dbg !402
  store i32 %xor420, i32* %l, align 4, !dbg !402
  %257 = load i32, i32* %l, align 4, !dbg !408
  %258 = load i32*, i32** %s, align 8, !dbg !408
  %arrayidx421 = getelementptr inbounds i32, i32* %258, i64 18, !dbg !408
  %259 = load i32, i32* %arrayidx421, align 4, !dbg !408
  %xor422 = xor i32 %257, %259, !dbg !408
  store i32 %xor422, i32* %u, align 4, !dbg !408
  %260 = load i32, i32* %l, align 4, !dbg !408
  %261 = load i32*, i32** %s, align 8, !dbg !408
  %arrayidx423 = getelementptr inbounds i32, i32* %261, i64 19, !dbg !408
  %262 = load i32, i32* %arrayidx423, align 4, !dbg !408
  %xor424 = xor i32 %260, %262, !dbg !408
  store i32 %xor424, i32* %t, align 4, !dbg !408
  call void @llvm.dbg.declare(metadata i32* %ret425, metadata !410, metadata !DIExpression()), !dbg !412
  %263 = load i32, i32* %t, align 4, !dbg !412
  %264 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %263) #5, !dbg !412, !srcloc !413
  store i32 %264, i32* %ret425, align 4, !dbg !412
  %265 = load i32, i32* %ret425, align 4, !dbg !412
  store i32 %265, i32* %tmp426, align 4, !dbg !412
  %266 = load i32, i32* %tmp426, align 4, !dbg !412
  store i32 %266, i32* %t, align 4, !dbg !408
  %267 = load i32, i32* %u, align 4, !dbg !408
  %shr427 = lshr i32 %267, 2, !dbg !408
  %and428 = and i32 %shr427, 63, !dbg !408
  %idxprom429 = zext i32 %and428 to i64, !dbg !408
  %arrayidx430 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom429, !dbg !408
  %268 = load i32, i32* %arrayidx430, align 4, !dbg !408
  %269 = load i32, i32* %u, align 4, !dbg !408
  %shr431 = lshr i32 %269, 10, !dbg !408
  %and432 = and i32 %shr431, 63, !dbg !408
  %idxprom433 = zext i32 %and432 to i64, !dbg !408
  %arrayidx434 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom433, !dbg !408
  %270 = load i32, i32* %arrayidx434, align 4, !dbg !408
  %xor435 = xor i32 %268, %270, !dbg !408
  %271 = load i32, i32* %u, align 4, !dbg !408
  %shr436 = lshr i32 %271, 18, !dbg !408
  %and437 = and i32 %shr436, 63, !dbg !408
  %idxprom438 = zext i32 %and437 to i64, !dbg !408
  %arrayidx439 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom438, !dbg !408
  %272 = load i32, i32* %arrayidx439, align 4, !dbg !408
  %xor440 = xor i32 %xor435, %272, !dbg !408
  %273 = load i32, i32* %u, align 4, !dbg !408
  %shr441 = lshr i32 %273, 26, !dbg !408
  %and442 = and i32 %shr441, 63, !dbg !408
  %idxprom443 = zext i32 %and442 to i64, !dbg !408
  %arrayidx444 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom443, !dbg !408
  %274 = load i32, i32* %arrayidx444, align 4, !dbg !408
  %xor445 = xor i32 %xor440, %274, !dbg !408
  %275 = load i32, i32* %t, align 4, !dbg !408
  %shr446 = lshr i32 %275, 2, !dbg !408
  %and447 = and i32 %shr446, 63, !dbg !408
  %idxprom448 = zext i32 %and447 to i64, !dbg !408
  %arrayidx449 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom448, !dbg !408
  %276 = load i32, i32* %arrayidx449, align 4, !dbg !408
  %xor450 = xor i32 %xor445, %276, !dbg !408
  %277 = load i32, i32* %t, align 4, !dbg !408
  %shr451 = lshr i32 %277, 10, !dbg !408
  %and452 = and i32 %shr451, 63, !dbg !408
  %idxprom453 = zext i32 %and452 to i64, !dbg !408
  %arrayidx454 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom453, !dbg !408
  %278 = load i32, i32* %arrayidx454, align 4, !dbg !408
  %xor455 = xor i32 %xor450, %278, !dbg !408
  %279 = load i32, i32* %t, align 4, !dbg !408
  %shr456 = lshr i32 %279, 18, !dbg !408
  %and457 = and i32 %shr456, 63, !dbg !408
  %idxprom458 = zext i32 %and457 to i64, !dbg !408
  %arrayidx459 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom458, !dbg !408
  %280 = load i32, i32* %arrayidx459, align 4, !dbg !408
  %xor460 = xor i32 %xor455, %280, !dbg !408
  %281 = load i32, i32* %t, align 4, !dbg !408
  %shr461 = lshr i32 %281, 26, !dbg !408
  %and462 = and i32 %shr461, 63, !dbg !408
  %idxprom463 = zext i32 %and462 to i64, !dbg !408
  %arrayidx464 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom463, !dbg !408
  %282 = load i32, i32* %arrayidx464, align 4, !dbg !408
  %xor465 = xor i32 %xor460, %282, !dbg !408
  %283 = load i32, i32* %r, align 4, !dbg !408
  %xor466 = xor i32 %283, %xor465, !dbg !408
  store i32 %xor466, i32* %r, align 4, !dbg !408
  %284 = load i32, i32* %r, align 4, !dbg !414
  %285 = load i32*, i32** %s, align 8, !dbg !414
  %arrayidx467 = getelementptr inbounds i32, i32* %285, i64 20, !dbg !414
  %286 = load i32, i32* %arrayidx467, align 4, !dbg !414
  %xor468 = xor i32 %284, %286, !dbg !414
  store i32 %xor468, i32* %u, align 4, !dbg !414
  %287 = load i32, i32* %r, align 4, !dbg !414
  %288 = load i32*, i32** %s, align 8, !dbg !414
  %arrayidx469 = getelementptr inbounds i32, i32* %288, i64 21, !dbg !414
  %289 = load i32, i32* %arrayidx469, align 4, !dbg !414
  %xor470 = xor i32 %287, %289, !dbg !414
  store i32 %xor470, i32* %t, align 4, !dbg !414
  call void @llvm.dbg.declare(metadata i32* %ret471, metadata !416, metadata !DIExpression()), !dbg !418
  %290 = load i32, i32* %t, align 4, !dbg !418
  %291 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %290) #5, !dbg !418, !srcloc !419
  store i32 %291, i32* %ret471, align 4, !dbg !418
  %292 = load i32, i32* %ret471, align 4, !dbg !418
  store i32 %292, i32* %tmp472, align 4, !dbg !418
  %293 = load i32, i32* %tmp472, align 4, !dbg !418
  store i32 %293, i32* %t, align 4, !dbg !414
  %294 = load i32, i32* %u, align 4, !dbg !414
  %shr473 = lshr i32 %294, 2, !dbg !414
  %and474 = and i32 %shr473, 63, !dbg !414
  %idxprom475 = zext i32 %and474 to i64, !dbg !414
  %arrayidx476 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom475, !dbg !414
  %295 = load i32, i32* %arrayidx476, align 4, !dbg !414
  %296 = load i32, i32* %u, align 4, !dbg !414
  %shr477 = lshr i32 %296, 10, !dbg !414
  %and478 = and i32 %shr477, 63, !dbg !414
  %idxprom479 = zext i32 %and478 to i64, !dbg !414
  %arrayidx480 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom479, !dbg !414
  %297 = load i32, i32* %arrayidx480, align 4, !dbg !414
  %xor481 = xor i32 %295, %297, !dbg !414
  %298 = load i32, i32* %u, align 4, !dbg !414
  %shr482 = lshr i32 %298, 18, !dbg !414
  %and483 = and i32 %shr482, 63, !dbg !414
  %idxprom484 = zext i32 %and483 to i64, !dbg !414
  %arrayidx485 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom484, !dbg !414
  %299 = load i32, i32* %arrayidx485, align 4, !dbg !414
  %xor486 = xor i32 %xor481, %299, !dbg !414
  %300 = load i32, i32* %u, align 4, !dbg !414
  %shr487 = lshr i32 %300, 26, !dbg !414
  %and488 = and i32 %shr487, 63, !dbg !414
  %idxprom489 = zext i32 %and488 to i64, !dbg !414
  %arrayidx490 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom489, !dbg !414
  %301 = load i32, i32* %arrayidx490, align 4, !dbg !414
  %xor491 = xor i32 %xor486, %301, !dbg !414
  %302 = load i32, i32* %t, align 4, !dbg !414
  %shr492 = lshr i32 %302, 2, !dbg !414
  %and493 = and i32 %shr492, 63, !dbg !414
  %idxprom494 = zext i32 %and493 to i64, !dbg !414
  %arrayidx495 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom494, !dbg !414
  %303 = load i32, i32* %arrayidx495, align 4, !dbg !414
  %xor496 = xor i32 %xor491, %303, !dbg !414
  %304 = load i32, i32* %t, align 4, !dbg !414
  %shr497 = lshr i32 %304, 10, !dbg !414
  %and498 = and i32 %shr497, 63, !dbg !414
  %idxprom499 = zext i32 %and498 to i64, !dbg !414
  %arrayidx500 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom499, !dbg !414
  %305 = load i32, i32* %arrayidx500, align 4, !dbg !414
  %xor501 = xor i32 %xor496, %305, !dbg !414
  %306 = load i32, i32* %t, align 4, !dbg !414
  %shr502 = lshr i32 %306, 18, !dbg !414
  %and503 = and i32 %shr502, 63, !dbg !414
  %idxprom504 = zext i32 %and503 to i64, !dbg !414
  %arrayidx505 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom504, !dbg !414
  %307 = load i32, i32* %arrayidx505, align 4, !dbg !414
  %xor506 = xor i32 %xor501, %307, !dbg !414
  %308 = load i32, i32* %t, align 4, !dbg !414
  %shr507 = lshr i32 %308, 26, !dbg !414
  %and508 = and i32 %shr507, 63, !dbg !414
  %idxprom509 = zext i32 %and508 to i64, !dbg !414
  %arrayidx510 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom509, !dbg !414
  %309 = load i32, i32* %arrayidx510, align 4, !dbg !414
  %xor511 = xor i32 %xor506, %309, !dbg !414
  %310 = load i32, i32* %l, align 4, !dbg !414
  %xor512 = xor i32 %310, %xor511, !dbg !414
  store i32 %xor512, i32* %l, align 4, !dbg !414
  %311 = load i32, i32* %l, align 4, !dbg !420
  %312 = load i32*, i32** %s, align 8, !dbg !420
  %arrayidx513 = getelementptr inbounds i32, i32* %312, i64 22, !dbg !420
  %313 = load i32, i32* %arrayidx513, align 4, !dbg !420
  %xor514 = xor i32 %311, %313, !dbg !420
  store i32 %xor514, i32* %u, align 4, !dbg !420
  %314 = load i32, i32* %l, align 4, !dbg !420
  %315 = load i32*, i32** %s, align 8, !dbg !420
  %arrayidx515 = getelementptr inbounds i32, i32* %315, i64 23, !dbg !420
  %316 = load i32, i32* %arrayidx515, align 4, !dbg !420
  %xor516 = xor i32 %314, %316, !dbg !420
  store i32 %xor516, i32* %t, align 4, !dbg !420
  call void @llvm.dbg.declare(metadata i32* %ret517, metadata !422, metadata !DIExpression()), !dbg !424
  %317 = load i32, i32* %t, align 4, !dbg !424
  %318 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %317) #5, !dbg !424, !srcloc !425
  store i32 %318, i32* %ret517, align 4, !dbg !424
  %319 = load i32, i32* %ret517, align 4, !dbg !424
  store i32 %319, i32* %tmp518, align 4, !dbg !424
  %320 = load i32, i32* %tmp518, align 4, !dbg !424
  store i32 %320, i32* %t, align 4, !dbg !420
  %321 = load i32, i32* %u, align 4, !dbg !420
  %shr519 = lshr i32 %321, 2, !dbg !420
  %and520 = and i32 %shr519, 63, !dbg !420
  %idxprom521 = zext i32 %and520 to i64, !dbg !420
  %arrayidx522 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom521, !dbg !420
  %322 = load i32, i32* %arrayidx522, align 4, !dbg !420
  %323 = load i32, i32* %u, align 4, !dbg !420
  %shr523 = lshr i32 %323, 10, !dbg !420
  %and524 = and i32 %shr523, 63, !dbg !420
  %idxprom525 = zext i32 %and524 to i64, !dbg !420
  %arrayidx526 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom525, !dbg !420
  %324 = load i32, i32* %arrayidx526, align 4, !dbg !420
  %xor527 = xor i32 %322, %324, !dbg !420
  %325 = load i32, i32* %u, align 4, !dbg !420
  %shr528 = lshr i32 %325, 18, !dbg !420
  %and529 = and i32 %shr528, 63, !dbg !420
  %idxprom530 = zext i32 %and529 to i64, !dbg !420
  %arrayidx531 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom530, !dbg !420
  %326 = load i32, i32* %arrayidx531, align 4, !dbg !420
  %xor532 = xor i32 %xor527, %326, !dbg !420
  %327 = load i32, i32* %u, align 4, !dbg !420
  %shr533 = lshr i32 %327, 26, !dbg !420
  %and534 = and i32 %shr533, 63, !dbg !420
  %idxprom535 = zext i32 %and534 to i64, !dbg !420
  %arrayidx536 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom535, !dbg !420
  %328 = load i32, i32* %arrayidx536, align 4, !dbg !420
  %xor537 = xor i32 %xor532, %328, !dbg !420
  %329 = load i32, i32* %t, align 4, !dbg !420
  %shr538 = lshr i32 %329, 2, !dbg !420
  %and539 = and i32 %shr538, 63, !dbg !420
  %idxprom540 = zext i32 %and539 to i64, !dbg !420
  %arrayidx541 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom540, !dbg !420
  %330 = load i32, i32* %arrayidx541, align 4, !dbg !420
  %xor542 = xor i32 %xor537, %330, !dbg !420
  %331 = load i32, i32* %t, align 4, !dbg !420
  %shr543 = lshr i32 %331, 10, !dbg !420
  %and544 = and i32 %shr543, 63, !dbg !420
  %idxprom545 = zext i32 %and544 to i64, !dbg !420
  %arrayidx546 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom545, !dbg !420
  %332 = load i32, i32* %arrayidx546, align 4, !dbg !420
  %xor547 = xor i32 %xor542, %332, !dbg !420
  %333 = load i32, i32* %t, align 4, !dbg !420
  %shr548 = lshr i32 %333, 18, !dbg !420
  %and549 = and i32 %shr548, 63, !dbg !420
  %idxprom550 = zext i32 %and549 to i64, !dbg !420
  %arrayidx551 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom550, !dbg !420
  %334 = load i32, i32* %arrayidx551, align 4, !dbg !420
  %xor552 = xor i32 %xor547, %334, !dbg !420
  %335 = load i32, i32* %t, align 4, !dbg !420
  %shr553 = lshr i32 %335, 26, !dbg !420
  %and554 = and i32 %shr553, 63, !dbg !420
  %idxprom555 = zext i32 %and554 to i64, !dbg !420
  %arrayidx556 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom555, !dbg !420
  %336 = load i32, i32* %arrayidx556, align 4, !dbg !420
  %xor557 = xor i32 %xor552, %336, !dbg !420
  %337 = load i32, i32* %r, align 4, !dbg !420
  %xor558 = xor i32 %337, %xor557, !dbg !420
  store i32 %xor558, i32* %r, align 4, !dbg !420
  %338 = load i32, i32* %r, align 4, !dbg !426
  %339 = load i32*, i32** %s, align 8, !dbg !426
  %arrayidx559 = getelementptr inbounds i32, i32* %339, i64 24, !dbg !426
  %340 = load i32, i32* %arrayidx559, align 4, !dbg !426
  %xor560 = xor i32 %338, %340, !dbg !426
  store i32 %xor560, i32* %u, align 4, !dbg !426
  %341 = load i32, i32* %r, align 4, !dbg !426
  %342 = load i32*, i32** %s, align 8, !dbg !426
  %arrayidx561 = getelementptr inbounds i32, i32* %342, i64 25, !dbg !426
  %343 = load i32, i32* %arrayidx561, align 4, !dbg !426
  %xor562 = xor i32 %341, %343, !dbg !426
  store i32 %xor562, i32* %t, align 4, !dbg !426
  call void @llvm.dbg.declare(metadata i32* %ret563, metadata !428, metadata !DIExpression()), !dbg !430
  %344 = load i32, i32* %t, align 4, !dbg !430
  %345 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %344) #5, !dbg !430, !srcloc !431
  store i32 %345, i32* %ret563, align 4, !dbg !430
  %346 = load i32, i32* %ret563, align 4, !dbg !430
  store i32 %346, i32* %tmp564, align 4, !dbg !430
  %347 = load i32, i32* %tmp564, align 4, !dbg !430
  store i32 %347, i32* %t, align 4, !dbg !426
  %348 = load i32, i32* %u, align 4, !dbg !426
  %shr565 = lshr i32 %348, 2, !dbg !426
  %and566 = and i32 %shr565, 63, !dbg !426
  %idxprom567 = zext i32 %and566 to i64, !dbg !426
  %arrayidx568 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom567, !dbg !426
  %349 = load i32, i32* %arrayidx568, align 4, !dbg !426
  %350 = load i32, i32* %u, align 4, !dbg !426
  %shr569 = lshr i32 %350, 10, !dbg !426
  %and570 = and i32 %shr569, 63, !dbg !426
  %idxprom571 = zext i32 %and570 to i64, !dbg !426
  %arrayidx572 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom571, !dbg !426
  %351 = load i32, i32* %arrayidx572, align 4, !dbg !426
  %xor573 = xor i32 %349, %351, !dbg !426
  %352 = load i32, i32* %u, align 4, !dbg !426
  %shr574 = lshr i32 %352, 18, !dbg !426
  %and575 = and i32 %shr574, 63, !dbg !426
  %idxprom576 = zext i32 %and575 to i64, !dbg !426
  %arrayidx577 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom576, !dbg !426
  %353 = load i32, i32* %arrayidx577, align 4, !dbg !426
  %xor578 = xor i32 %xor573, %353, !dbg !426
  %354 = load i32, i32* %u, align 4, !dbg !426
  %shr579 = lshr i32 %354, 26, !dbg !426
  %and580 = and i32 %shr579, 63, !dbg !426
  %idxprom581 = zext i32 %and580 to i64, !dbg !426
  %arrayidx582 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom581, !dbg !426
  %355 = load i32, i32* %arrayidx582, align 4, !dbg !426
  %xor583 = xor i32 %xor578, %355, !dbg !426
  %356 = load i32, i32* %t, align 4, !dbg !426
  %shr584 = lshr i32 %356, 2, !dbg !426
  %and585 = and i32 %shr584, 63, !dbg !426
  %idxprom586 = zext i32 %and585 to i64, !dbg !426
  %arrayidx587 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom586, !dbg !426
  %357 = load i32, i32* %arrayidx587, align 4, !dbg !426
  %xor588 = xor i32 %xor583, %357, !dbg !426
  %358 = load i32, i32* %t, align 4, !dbg !426
  %shr589 = lshr i32 %358, 10, !dbg !426
  %and590 = and i32 %shr589, 63, !dbg !426
  %idxprom591 = zext i32 %and590 to i64, !dbg !426
  %arrayidx592 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom591, !dbg !426
  %359 = load i32, i32* %arrayidx592, align 4, !dbg !426
  %xor593 = xor i32 %xor588, %359, !dbg !426
  %360 = load i32, i32* %t, align 4, !dbg !426
  %shr594 = lshr i32 %360, 18, !dbg !426
  %and595 = and i32 %shr594, 63, !dbg !426
  %idxprom596 = zext i32 %and595 to i64, !dbg !426
  %arrayidx597 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom596, !dbg !426
  %361 = load i32, i32* %arrayidx597, align 4, !dbg !426
  %xor598 = xor i32 %xor593, %361, !dbg !426
  %362 = load i32, i32* %t, align 4, !dbg !426
  %shr599 = lshr i32 %362, 26, !dbg !426
  %and600 = and i32 %shr599, 63, !dbg !426
  %idxprom601 = zext i32 %and600 to i64, !dbg !426
  %arrayidx602 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom601, !dbg !426
  %363 = load i32, i32* %arrayidx602, align 4, !dbg !426
  %xor603 = xor i32 %xor598, %363, !dbg !426
  %364 = load i32, i32* %l, align 4, !dbg !426
  %xor604 = xor i32 %364, %xor603, !dbg !426
  store i32 %xor604, i32* %l, align 4, !dbg !426
  %365 = load i32, i32* %l, align 4, !dbg !432
  %366 = load i32*, i32** %s, align 8, !dbg !432
  %arrayidx605 = getelementptr inbounds i32, i32* %366, i64 26, !dbg !432
  %367 = load i32, i32* %arrayidx605, align 4, !dbg !432
  %xor606 = xor i32 %365, %367, !dbg !432
  store i32 %xor606, i32* %u, align 4, !dbg !432
  %368 = load i32, i32* %l, align 4, !dbg !432
  %369 = load i32*, i32** %s, align 8, !dbg !432
  %arrayidx607 = getelementptr inbounds i32, i32* %369, i64 27, !dbg !432
  %370 = load i32, i32* %arrayidx607, align 4, !dbg !432
  %xor608 = xor i32 %368, %370, !dbg !432
  store i32 %xor608, i32* %t, align 4, !dbg !432
  call void @llvm.dbg.declare(metadata i32* %ret609, metadata !434, metadata !DIExpression()), !dbg !436
  %371 = load i32, i32* %t, align 4, !dbg !436
  %372 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %371) #5, !dbg !436, !srcloc !437
  store i32 %372, i32* %ret609, align 4, !dbg !436
  %373 = load i32, i32* %ret609, align 4, !dbg !436
  store i32 %373, i32* %tmp610, align 4, !dbg !436
  %374 = load i32, i32* %tmp610, align 4, !dbg !436
  store i32 %374, i32* %t, align 4, !dbg !432
  %375 = load i32, i32* %u, align 4, !dbg !432
  %shr611 = lshr i32 %375, 2, !dbg !432
  %and612 = and i32 %shr611, 63, !dbg !432
  %idxprom613 = zext i32 %and612 to i64, !dbg !432
  %arrayidx614 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom613, !dbg !432
  %376 = load i32, i32* %arrayidx614, align 4, !dbg !432
  %377 = load i32, i32* %u, align 4, !dbg !432
  %shr615 = lshr i32 %377, 10, !dbg !432
  %and616 = and i32 %shr615, 63, !dbg !432
  %idxprom617 = zext i32 %and616 to i64, !dbg !432
  %arrayidx618 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom617, !dbg !432
  %378 = load i32, i32* %arrayidx618, align 4, !dbg !432
  %xor619 = xor i32 %376, %378, !dbg !432
  %379 = load i32, i32* %u, align 4, !dbg !432
  %shr620 = lshr i32 %379, 18, !dbg !432
  %and621 = and i32 %shr620, 63, !dbg !432
  %idxprom622 = zext i32 %and621 to i64, !dbg !432
  %arrayidx623 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom622, !dbg !432
  %380 = load i32, i32* %arrayidx623, align 4, !dbg !432
  %xor624 = xor i32 %xor619, %380, !dbg !432
  %381 = load i32, i32* %u, align 4, !dbg !432
  %shr625 = lshr i32 %381, 26, !dbg !432
  %and626 = and i32 %shr625, 63, !dbg !432
  %idxprom627 = zext i32 %and626 to i64, !dbg !432
  %arrayidx628 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom627, !dbg !432
  %382 = load i32, i32* %arrayidx628, align 4, !dbg !432
  %xor629 = xor i32 %xor624, %382, !dbg !432
  %383 = load i32, i32* %t, align 4, !dbg !432
  %shr630 = lshr i32 %383, 2, !dbg !432
  %and631 = and i32 %shr630, 63, !dbg !432
  %idxprom632 = zext i32 %and631 to i64, !dbg !432
  %arrayidx633 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom632, !dbg !432
  %384 = load i32, i32* %arrayidx633, align 4, !dbg !432
  %xor634 = xor i32 %xor629, %384, !dbg !432
  %385 = load i32, i32* %t, align 4, !dbg !432
  %shr635 = lshr i32 %385, 10, !dbg !432
  %and636 = and i32 %shr635, 63, !dbg !432
  %idxprom637 = zext i32 %and636 to i64, !dbg !432
  %arrayidx638 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom637, !dbg !432
  %386 = load i32, i32* %arrayidx638, align 4, !dbg !432
  %xor639 = xor i32 %xor634, %386, !dbg !432
  %387 = load i32, i32* %t, align 4, !dbg !432
  %shr640 = lshr i32 %387, 18, !dbg !432
  %and641 = and i32 %shr640, 63, !dbg !432
  %idxprom642 = zext i32 %and641 to i64, !dbg !432
  %arrayidx643 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom642, !dbg !432
  %388 = load i32, i32* %arrayidx643, align 4, !dbg !432
  %xor644 = xor i32 %xor639, %388, !dbg !432
  %389 = load i32, i32* %t, align 4, !dbg !432
  %shr645 = lshr i32 %389, 26, !dbg !432
  %and646 = and i32 %shr645, 63, !dbg !432
  %idxprom647 = zext i32 %and646 to i64, !dbg !432
  %arrayidx648 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom647, !dbg !432
  %390 = load i32, i32* %arrayidx648, align 4, !dbg !432
  %xor649 = xor i32 %xor644, %390, !dbg !432
  %391 = load i32, i32* %r, align 4, !dbg !432
  %xor650 = xor i32 %391, %xor649, !dbg !432
  store i32 %xor650, i32* %r, align 4, !dbg !432
  %392 = load i32, i32* %r, align 4, !dbg !438
  %393 = load i32*, i32** %s, align 8, !dbg !438
  %arrayidx651 = getelementptr inbounds i32, i32* %393, i64 28, !dbg !438
  %394 = load i32, i32* %arrayidx651, align 4, !dbg !438
  %xor652 = xor i32 %392, %394, !dbg !438
  store i32 %xor652, i32* %u, align 4, !dbg !438
  %395 = load i32, i32* %r, align 4, !dbg !438
  %396 = load i32*, i32** %s, align 8, !dbg !438
  %arrayidx653 = getelementptr inbounds i32, i32* %396, i64 29, !dbg !438
  %397 = load i32, i32* %arrayidx653, align 4, !dbg !438
  %xor654 = xor i32 %395, %397, !dbg !438
  store i32 %xor654, i32* %t, align 4, !dbg !438
  call void @llvm.dbg.declare(metadata i32* %ret655, metadata !440, metadata !DIExpression()), !dbg !442
  %398 = load i32, i32* %t, align 4, !dbg !442
  %399 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %398) #5, !dbg !442, !srcloc !443
  store i32 %399, i32* %ret655, align 4, !dbg !442
  %400 = load i32, i32* %ret655, align 4, !dbg !442
  store i32 %400, i32* %tmp656, align 4, !dbg !442
  %401 = load i32, i32* %tmp656, align 4, !dbg !442
  store i32 %401, i32* %t, align 4, !dbg !438
  %402 = load i32, i32* %u, align 4, !dbg !438
  %shr657 = lshr i32 %402, 2, !dbg !438
  %and658 = and i32 %shr657, 63, !dbg !438
  %idxprom659 = zext i32 %and658 to i64, !dbg !438
  %arrayidx660 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom659, !dbg !438
  %403 = load i32, i32* %arrayidx660, align 4, !dbg !438
  %404 = load i32, i32* %u, align 4, !dbg !438
  %shr661 = lshr i32 %404, 10, !dbg !438
  %and662 = and i32 %shr661, 63, !dbg !438
  %idxprom663 = zext i32 %and662 to i64, !dbg !438
  %arrayidx664 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom663, !dbg !438
  %405 = load i32, i32* %arrayidx664, align 4, !dbg !438
  %xor665 = xor i32 %403, %405, !dbg !438
  %406 = load i32, i32* %u, align 4, !dbg !438
  %shr666 = lshr i32 %406, 18, !dbg !438
  %and667 = and i32 %shr666, 63, !dbg !438
  %idxprom668 = zext i32 %and667 to i64, !dbg !438
  %arrayidx669 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom668, !dbg !438
  %407 = load i32, i32* %arrayidx669, align 4, !dbg !438
  %xor670 = xor i32 %xor665, %407, !dbg !438
  %408 = load i32, i32* %u, align 4, !dbg !438
  %shr671 = lshr i32 %408, 26, !dbg !438
  %and672 = and i32 %shr671, 63, !dbg !438
  %idxprom673 = zext i32 %and672 to i64, !dbg !438
  %arrayidx674 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom673, !dbg !438
  %409 = load i32, i32* %arrayidx674, align 4, !dbg !438
  %xor675 = xor i32 %xor670, %409, !dbg !438
  %410 = load i32, i32* %t, align 4, !dbg !438
  %shr676 = lshr i32 %410, 2, !dbg !438
  %and677 = and i32 %shr676, 63, !dbg !438
  %idxprom678 = zext i32 %and677 to i64, !dbg !438
  %arrayidx679 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom678, !dbg !438
  %411 = load i32, i32* %arrayidx679, align 4, !dbg !438
  %xor680 = xor i32 %xor675, %411, !dbg !438
  %412 = load i32, i32* %t, align 4, !dbg !438
  %shr681 = lshr i32 %412, 10, !dbg !438
  %and682 = and i32 %shr681, 63, !dbg !438
  %idxprom683 = zext i32 %and682 to i64, !dbg !438
  %arrayidx684 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom683, !dbg !438
  %413 = load i32, i32* %arrayidx684, align 4, !dbg !438
  %xor685 = xor i32 %xor680, %413, !dbg !438
  %414 = load i32, i32* %t, align 4, !dbg !438
  %shr686 = lshr i32 %414, 18, !dbg !438
  %and687 = and i32 %shr686, 63, !dbg !438
  %idxprom688 = zext i32 %and687 to i64, !dbg !438
  %arrayidx689 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom688, !dbg !438
  %415 = load i32, i32* %arrayidx689, align 4, !dbg !438
  %xor690 = xor i32 %xor685, %415, !dbg !438
  %416 = load i32, i32* %t, align 4, !dbg !438
  %shr691 = lshr i32 %416, 26, !dbg !438
  %and692 = and i32 %shr691, 63, !dbg !438
  %idxprom693 = zext i32 %and692 to i64, !dbg !438
  %arrayidx694 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom693, !dbg !438
  %417 = load i32, i32* %arrayidx694, align 4, !dbg !438
  %xor695 = xor i32 %xor690, %417, !dbg !438
  %418 = load i32, i32* %l, align 4, !dbg !438
  %xor696 = xor i32 %418, %xor695, !dbg !438
  store i32 %xor696, i32* %l, align 4, !dbg !438
  %419 = load i32, i32* %l, align 4, !dbg !444
  %420 = load i32*, i32** %s, align 8, !dbg !444
  %arrayidx697 = getelementptr inbounds i32, i32* %420, i64 30, !dbg !444
  %421 = load i32, i32* %arrayidx697, align 4, !dbg !444
  %xor698 = xor i32 %419, %421, !dbg !444
  store i32 %xor698, i32* %u, align 4, !dbg !444
  %422 = load i32, i32* %l, align 4, !dbg !444
  %423 = load i32*, i32** %s, align 8, !dbg !444
  %arrayidx699 = getelementptr inbounds i32, i32* %423, i64 31, !dbg !444
  %424 = load i32, i32* %arrayidx699, align 4, !dbg !444
  %xor700 = xor i32 %422, %424, !dbg !444
  store i32 %xor700, i32* %t, align 4, !dbg !444
  call void @llvm.dbg.declare(metadata i32* %ret701, metadata !446, metadata !DIExpression()), !dbg !448
  %425 = load i32, i32* %t, align 4, !dbg !448
  %426 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %425) #5, !dbg !448, !srcloc !449
  store i32 %426, i32* %ret701, align 4, !dbg !448
  %427 = load i32, i32* %ret701, align 4, !dbg !448
  store i32 %427, i32* %tmp702, align 4, !dbg !448
  %428 = load i32, i32* %tmp702, align 4, !dbg !448
  store i32 %428, i32* %t, align 4, !dbg !444
  %429 = load i32, i32* %u, align 4, !dbg !444
  %shr703 = lshr i32 %429, 2, !dbg !444
  %and704 = and i32 %shr703, 63, !dbg !444
  %idxprom705 = zext i32 %and704 to i64, !dbg !444
  %arrayidx706 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom705, !dbg !444
  %430 = load i32, i32* %arrayidx706, align 4, !dbg !444
  %431 = load i32, i32* %u, align 4, !dbg !444
  %shr707 = lshr i32 %431, 10, !dbg !444
  %and708 = and i32 %shr707, 63, !dbg !444
  %idxprom709 = zext i32 %and708 to i64, !dbg !444
  %arrayidx710 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom709, !dbg !444
  %432 = load i32, i32* %arrayidx710, align 4, !dbg !444
  %xor711 = xor i32 %430, %432, !dbg !444
  %433 = load i32, i32* %u, align 4, !dbg !444
  %shr712 = lshr i32 %433, 18, !dbg !444
  %and713 = and i32 %shr712, 63, !dbg !444
  %idxprom714 = zext i32 %and713 to i64, !dbg !444
  %arrayidx715 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom714, !dbg !444
  %434 = load i32, i32* %arrayidx715, align 4, !dbg !444
  %xor716 = xor i32 %xor711, %434, !dbg !444
  %435 = load i32, i32* %u, align 4, !dbg !444
  %shr717 = lshr i32 %435, 26, !dbg !444
  %and718 = and i32 %shr717, 63, !dbg !444
  %idxprom719 = zext i32 %and718 to i64, !dbg !444
  %arrayidx720 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom719, !dbg !444
  %436 = load i32, i32* %arrayidx720, align 4, !dbg !444
  %xor721 = xor i32 %xor716, %436, !dbg !444
  %437 = load i32, i32* %t, align 4, !dbg !444
  %shr722 = lshr i32 %437, 2, !dbg !444
  %and723 = and i32 %shr722, 63, !dbg !444
  %idxprom724 = zext i32 %and723 to i64, !dbg !444
  %arrayidx725 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom724, !dbg !444
  %438 = load i32, i32* %arrayidx725, align 4, !dbg !444
  %xor726 = xor i32 %xor721, %438, !dbg !444
  %439 = load i32, i32* %t, align 4, !dbg !444
  %shr727 = lshr i32 %439, 10, !dbg !444
  %and728 = and i32 %shr727, 63, !dbg !444
  %idxprom729 = zext i32 %and728 to i64, !dbg !444
  %arrayidx730 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom729, !dbg !444
  %440 = load i32, i32* %arrayidx730, align 4, !dbg !444
  %xor731 = xor i32 %xor726, %440, !dbg !444
  %441 = load i32, i32* %t, align 4, !dbg !444
  %shr732 = lshr i32 %441, 18, !dbg !444
  %and733 = and i32 %shr732, 63, !dbg !444
  %idxprom734 = zext i32 %and733 to i64, !dbg !444
  %arrayidx735 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom734, !dbg !444
  %442 = load i32, i32* %arrayidx735, align 4, !dbg !444
  %xor736 = xor i32 %xor731, %442, !dbg !444
  %443 = load i32, i32* %t, align 4, !dbg !444
  %shr737 = lshr i32 %443, 26, !dbg !444
  %and738 = and i32 %shr737, 63, !dbg !444
  %idxprom739 = zext i32 %and738 to i64, !dbg !444
  %arrayidx740 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom739, !dbg !444
  %444 = load i32, i32* %arrayidx740, align 4, !dbg !444
  %xor741 = xor i32 %xor736, %444, !dbg !444
  %445 = load i32, i32* %r, align 4, !dbg !444
  %xor742 = xor i32 %445, %xor741, !dbg !444
  store i32 %xor742, i32* %r, align 4, !dbg !444
  br label %if.end, !dbg !450

if.else:                                          ; preds = %entry
  %446 = load i32, i32* %r, align 4, !dbg !451
  %447 = load i32*, i32** %s, align 8, !dbg !451
  %arrayidx743 = getelementptr inbounds i32, i32* %447, i64 30, !dbg !451
  %448 = load i32, i32* %arrayidx743, align 4, !dbg !451
  %xor744 = xor i32 %446, %448, !dbg !451
  store i32 %xor744, i32* %u, align 4, !dbg !451
  %449 = load i32, i32* %r, align 4, !dbg !451
  %450 = load i32*, i32** %s, align 8, !dbg !451
  %arrayidx745 = getelementptr inbounds i32, i32* %450, i64 31, !dbg !451
  %451 = load i32, i32* %arrayidx745, align 4, !dbg !451
  %xor746 = xor i32 %449, %451, !dbg !451
  store i32 %xor746, i32* %t, align 4, !dbg !451
  call void @llvm.dbg.declare(metadata i32* %ret747, metadata !454, metadata !DIExpression()), !dbg !456
  %452 = load i32, i32* %t, align 4, !dbg !456
  %453 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %452) #5, !dbg !456, !srcloc !457
  store i32 %453, i32* %ret747, align 4, !dbg !456
  %454 = load i32, i32* %ret747, align 4, !dbg !456
  store i32 %454, i32* %tmp748, align 4, !dbg !456
  %455 = load i32, i32* %tmp748, align 4, !dbg !456
  store i32 %455, i32* %t, align 4, !dbg !451
  %456 = load i32, i32* %u, align 4, !dbg !451
  %shr749 = lshr i32 %456, 2, !dbg !451
  %and750 = and i32 %shr749, 63, !dbg !451
  %idxprom751 = zext i32 %and750 to i64, !dbg !451
  %arrayidx752 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom751, !dbg !451
  %457 = load i32, i32* %arrayidx752, align 4, !dbg !451
  %458 = load i32, i32* %u, align 4, !dbg !451
  %shr753 = lshr i32 %458, 10, !dbg !451
  %and754 = and i32 %shr753, 63, !dbg !451
  %idxprom755 = zext i32 %and754 to i64, !dbg !451
  %arrayidx756 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom755, !dbg !451
  %459 = load i32, i32* %arrayidx756, align 4, !dbg !451
  %xor757 = xor i32 %457, %459, !dbg !451
  %460 = load i32, i32* %u, align 4, !dbg !451
  %shr758 = lshr i32 %460, 18, !dbg !451
  %and759 = and i32 %shr758, 63, !dbg !451
  %idxprom760 = zext i32 %and759 to i64, !dbg !451
  %arrayidx761 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom760, !dbg !451
  %461 = load i32, i32* %arrayidx761, align 4, !dbg !451
  %xor762 = xor i32 %xor757, %461, !dbg !451
  %462 = load i32, i32* %u, align 4, !dbg !451
  %shr763 = lshr i32 %462, 26, !dbg !451
  %and764 = and i32 %shr763, 63, !dbg !451
  %idxprom765 = zext i32 %and764 to i64, !dbg !451
  %arrayidx766 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom765, !dbg !451
  %463 = load i32, i32* %arrayidx766, align 4, !dbg !451
  %xor767 = xor i32 %xor762, %463, !dbg !451
  %464 = load i32, i32* %t, align 4, !dbg !451
  %shr768 = lshr i32 %464, 2, !dbg !451
  %and769 = and i32 %shr768, 63, !dbg !451
  %idxprom770 = zext i32 %and769 to i64, !dbg !451
  %arrayidx771 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom770, !dbg !451
  %465 = load i32, i32* %arrayidx771, align 4, !dbg !451
  %xor772 = xor i32 %xor767, %465, !dbg !451
  %466 = load i32, i32* %t, align 4, !dbg !451
  %shr773 = lshr i32 %466, 10, !dbg !451
  %and774 = and i32 %shr773, 63, !dbg !451
  %idxprom775 = zext i32 %and774 to i64, !dbg !451
  %arrayidx776 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom775, !dbg !451
  %467 = load i32, i32* %arrayidx776, align 4, !dbg !451
  %xor777 = xor i32 %xor772, %467, !dbg !451
  %468 = load i32, i32* %t, align 4, !dbg !451
  %shr778 = lshr i32 %468, 18, !dbg !451
  %and779 = and i32 %shr778, 63, !dbg !451
  %idxprom780 = zext i32 %and779 to i64, !dbg !451
  %arrayidx781 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom780, !dbg !451
  %469 = load i32, i32* %arrayidx781, align 4, !dbg !451
  %xor782 = xor i32 %xor777, %469, !dbg !451
  %470 = load i32, i32* %t, align 4, !dbg !451
  %shr783 = lshr i32 %470, 26, !dbg !451
  %and784 = and i32 %shr783, 63, !dbg !451
  %idxprom785 = zext i32 %and784 to i64, !dbg !451
  %arrayidx786 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom785, !dbg !451
  %471 = load i32, i32* %arrayidx786, align 4, !dbg !451
  %xor787 = xor i32 %xor782, %471, !dbg !451
  %472 = load i32, i32* %l, align 4, !dbg !451
  %xor788 = xor i32 %472, %xor787, !dbg !451
  store i32 %xor788, i32* %l, align 4, !dbg !451
  %473 = load i32, i32* %l, align 4, !dbg !458
  %474 = load i32*, i32** %s, align 8, !dbg !458
  %arrayidx789 = getelementptr inbounds i32, i32* %474, i64 28, !dbg !458
  %475 = load i32, i32* %arrayidx789, align 4, !dbg !458
  %xor790 = xor i32 %473, %475, !dbg !458
  store i32 %xor790, i32* %u, align 4, !dbg !458
  %476 = load i32, i32* %l, align 4, !dbg !458
  %477 = load i32*, i32** %s, align 8, !dbg !458
  %arrayidx791 = getelementptr inbounds i32, i32* %477, i64 29, !dbg !458
  %478 = load i32, i32* %arrayidx791, align 4, !dbg !458
  %xor792 = xor i32 %476, %478, !dbg !458
  store i32 %xor792, i32* %t, align 4, !dbg !458
  call void @llvm.dbg.declare(metadata i32* %ret793, metadata !460, metadata !DIExpression()), !dbg !462
  %479 = load i32, i32* %t, align 4, !dbg !462
  %480 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %479) #5, !dbg !462, !srcloc !463
  store i32 %480, i32* %ret793, align 4, !dbg !462
  %481 = load i32, i32* %ret793, align 4, !dbg !462
  store i32 %481, i32* %tmp794, align 4, !dbg !462
  %482 = load i32, i32* %tmp794, align 4, !dbg !462
  store i32 %482, i32* %t, align 4, !dbg !458
  %483 = load i32, i32* %u, align 4, !dbg !458
  %shr795 = lshr i32 %483, 2, !dbg !458
  %and796 = and i32 %shr795, 63, !dbg !458
  %idxprom797 = zext i32 %and796 to i64, !dbg !458
  %arrayidx798 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom797, !dbg !458
  %484 = load i32, i32* %arrayidx798, align 4, !dbg !458
  %485 = load i32, i32* %u, align 4, !dbg !458
  %shr799 = lshr i32 %485, 10, !dbg !458
  %and800 = and i32 %shr799, 63, !dbg !458
  %idxprom801 = zext i32 %and800 to i64, !dbg !458
  %arrayidx802 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom801, !dbg !458
  %486 = load i32, i32* %arrayidx802, align 4, !dbg !458
  %xor803 = xor i32 %484, %486, !dbg !458
  %487 = load i32, i32* %u, align 4, !dbg !458
  %shr804 = lshr i32 %487, 18, !dbg !458
  %and805 = and i32 %shr804, 63, !dbg !458
  %idxprom806 = zext i32 %and805 to i64, !dbg !458
  %arrayidx807 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom806, !dbg !458
  %488 = load i32, i32* %arrayidx807, align 4, !dbg !458
  %xor808 = xor i32 %xor803, %488, !dbg !458
  %489 = load i32, i32* %u, align 4, !dbg !458
  %shr809 = lshr i32 %489, 26, !dbg !458
  %and810 = and i32 %shr809, 63, !dbg !458
  %idxprom811 = zext i32 %and810 to i64, !dbg !458
  %arrayidx812 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom811, !dbg !458
  %490 = load i32, i32* %arrayidx812, align 4, !dbg !458
  %xor813 = xor i32 %xor808, %490, !dbg !458
  %491 = load i32, i32* %t, align 4, !dbg !458
  %shr814 = lshr i32 %491, 2, !dbg !458
  %and815 = and i32 %shr814, 63, !dbg !458
  %idxprom816 = zext i32 %and815 to i64, !dbg !458
  %arrayidx817 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom816, !dbg !458
  %492 = load i32, i32* %arrayidx817, align 4, !dbg !458
  %xor818 = xor i32 %xor813, %492, !dbg !458
  %493 = load i32, i32* %t, align 4, !dbg !458
  %shr819 = lshr i32 %493, 10, !dbg !458
  %and820 = and i32 %shr819, 63, !dbg !458
  %idxprom821 = zext i32 %and820 to i64, !dbg !458
  %arrayidx822 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom821, !dbg !458
  %494 = load i32, i32* %arrayidx822, align 4, !dbg !458
  %xor823 = xor i32 %xor818, %494, !dbg !458
  %495 = load i32, i32* %t, align 4, !dbg !458
  %shr824 = lshr i32 %495, 18, !dbg !458
  %and825 = and i32 %shr824, 63, !dbg !458
  %idxprom826 = zext i32 %and825 to i64, !dbg !458
  %arrayidx827 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom826, !dbg !458
  %496 = load i32, i32* %arrayidx827, align 4, !dbg !458
  %xor828 = xor i32 %xor823, %496, !dbg !458
  %497 = load i32, i32* %t, align 4, !dbg !458
  %shr829 = lshr i32 %497, 26, !dbg !458
  %and830 = and i32 %shr829, 63, !dbg !458
  %idxprom831 = zext i32 %and830 to i64, !dbg !458
  %arrayidx832 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom831, !dbg !458
  %498 = load i32, i32* %arrayidx832, align 4, !dbg !458
  %xor833 = xor i32 %xor828, %498, !dbg !458
  %499 = load i32, i32* %r, align 4, !dbg !458
  %xor834 = xor i32 %499, %xor833, !dbg !458
  store i32 %xor834, i32* %r, align 4, !dbg !458
  %500 = load i32, i32* %r, align 4, !dbg !464
  %501 = load i32*, i32** %s, align 8, !dbg !464
  %arrayidx835 = getelementptr inbounds i32, i32* %501, i64 26, !dbg !464
  %502 = load i32, i32* %arrayidx835, align 4, !dbg !464
  %xor836 = xor i32 %500, %502, !dbg !464
  store i32 %xor836, i32* %u, align 4, !dbg !464
  %503 = load i32, i32* %r, align 4, !dbg !464
  %504 = load i32*, i32** %s, align 8, !dbg !464
  %arrayidx837 = getelementptr inbounds i32, i32* %504, i64 27, !dbg !464
  %505 = load i32, i32* %arrayidx837, align 4, !dbg !464
  %xor838 = xor i32 %503, %505, !dbg !464
  store i32 %xor838, i32* %t, align 4, !dbg !464
  call void @llvm.dbg.declare(metadata i32* %ret839, metadata !466, metadata !DIExpression()), !dbg !468
  %506 = load i32, i32* %t, align 4, !dbg !468
  %507 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %506) #5, !dbg !468, !srcloc !469
  store i32 %507, i32* %ret839, align 4, !dbg !468
  %508 = load i32, i32* %ret839, align 4, !dbg !468
  store i32 %508, i32* %tmp840, align 4, !dbg !468
  %509 = load i32, i32* %tmp840, align 4, !dbg !468
  store i32 %509, i32* %t, align 4, !dbg !464
  %510 = load i32, i32* %u, align 4, !dbg !464
  %shr841 = lshr i32 %510, 2, !dbg !464
  %and842 = and i32 %shr841, 63, !dbg !464
  %idxprom843 = zext i32 %and842 to i64, !dbg !464
  %arrayidx844 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom843, !dbg !464
  %511 = load i32, i32* %arrayidx844, align 4, !dbg !464
  %512 = load i32, i32* %u, align 4, !dbg !464
  %shr845 = lshr i32 %512, 10, !dbg !464
  %and846 = and i32 %shr845, 63, !dbg !464
  %idxprom847 = zext i32 %and846 to i64, !dbg !464
  %arrayidx848 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom847, !dbg !464
  %513 = load i32, i32* %arrayidx848, align 4, !dbg !464
  %xor849 = xor i32 %511, %513, !dbg !464
  %514 = load i32, i32* %u, align 4, !dbg !464
  %shr850 = lshr i32 %514, 18, !dbg !464
  %and851 = and i32 %shr850, 63, !dbg !464
  %idxprom852 = zext i32 %and851 to i64, !dbg !464
  %arrayidx853 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom852, !dbg !464
  %515 = load i32, i32* %arrayidx853, align 4, !dbg !464
  %xor854 = xor i32 %xor849, %515, !dbg !464
  %516 = load i32, i32* %u, align 4, !dbg !464
  %shr855 = lshr i32 %516, 26, !dbg !464
  %and856 = and i32 %shr855, 63, !dbg !464
  %idxprom857 = zext i32 %and856 to i64, !dbg !464
  %arrayidx858 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom857, !dbg !464
  %517 = load i32, i32* %arrayidx858, align 4, !dbg !464
  %xor859 = xor i32 %xor854, %517, !dbg !464
  %518 = load i32, i32* %t, align 4, !dbg !464
  %shr860 = lshr i32 %518, 2, !dbg !464
  %and861 = and i32 %shr860, 63, !dbg !464
  %idxprom862 = zext i32 %and861 to i64, !dbg !464
  %arrayidx863 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom862, !dbg !464
  %519 = load i32, i32* %arrayidx863, align 4, !dbg !464
  %xor864 = xor i32 %xor859, %519, !dbg !464
  %520 = load i32, i32* %t, align 4, !dbg !464
  %shr865 = lshr i32 %520, 10, !dbg !464
  %and866 = and i32 %shr865, 63, !dbg !464
  %idxprom867 = zext i32 %and866 to i64, !dbg !464
  %arrayidx868 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom867, !dbg !464
  %521 = load i32, i32* %arrayidx868, align 4, !dbg !464
  %xor869 = xor i32 %xor864, %521, !dbg !464
  %522 = load i32, i32* %t, align 4, !dbg !464
  %shr870 = lshr i32 %522, 18, !dbg !464
  %and871 = and i32 %shr870, 63, !dbg !464
  %idxprom872 = zext i32 %and871 to i64, !dbg !464
  %arrayidx873 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom872, !dbg !464
  %523 = load i32, i32* %arrayidx873, align 4, !dbg !464
  %xor874 = xor i32 %xor869, %523, !dbg !464
  %524 = load i32, i32* %t, align 4, !dbg !464
  %shr875 = lshr i32 %524, 26, !dbg !464
  %and876 = and i32 %shr875, 63, !dbg !464
  %idxprom877 = zext i32 %and876 to i64, !dbg !464
  %arrayidx878 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom877, !dbg !464
  %525 = load i32, i32* %arrayidx878, align 4, !dbg !464
  %xor879 = xor i32 %xor874, %525, !dbg !464
  %526 = load i32, i32* %l, align 4, !dbg !464
  %xor880 = xor i32 %526, %xor879, !dbg !464
  store i32 %xor880, i32* %l, align 4, !dbg !464
  %527 = load i32, i32* %l, align 4, !dbg !470
  %528 = load i32*, i32** %s, align 8, !dbg !470
  %arrayidx881 = getelementptr inbounds i32, i32* %528, i64 24, !dbg !470
  %529 = load i32, i32* %arrayidx881, align 4, !dbg !470
  %xor882 = xor i32 %527, %529, !dbg !470
  store i32 %xor882, i32* %u, align 4, !dbg !470
  %530 = load i32, i32* %l, align 4, !dbg !470
  %531 = load i32*, i32** %s, align 8, !dbg !470
  %arrayidx883 = getelementptr inbounds i32, i32* %531, i64 25, !dbg !470
  %532 = load i32, i32* %arrayidx883, align 4, !dbg !470
  %xor884 = xor i32 %530, %532, !dbg !470
  store i32 %xor884, i32* %t, align 4, !dbg !470
  call void @llvm.dbg.declare(metadata i32* %ret885, metadata !472, metadata !DIExpression()), !dbg !474
  %533 = load i32, i32* %t, align 4, !dbg !474
  %534 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %533) #5, !dbg !474, !srcloc !475
  store i32 %534, i32* %ret885, align 4, !dbg !474
  %535 = load i32, i32* %ret885, align 4, !dbg !474
  store i32 %535, i32* %tmp886, align 4, !dbg !474
  %536 = load i32, i32* %tmp886, align 4, !dbg !474
  store i32 %536, i32* %t, align 4, !dbg !470
  %537 = load i32, i32* %u, align 4, !dbg !470
  %shr887 = lshr i32 %537, 2, !dbg !470
  %and888 = and i32 %shr887, 63, !dbg !470
  %idxprom889 = zext i32 %and888 to i64, !dbg !470
  %arrayidx890 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom889, !dbg !470
  %538 = load i32, i32* %arrayidx890, align 4, !dbg !470
  %539 = load i32, i32* %u, align 4, !dbg !470
  %shr891 = lshr i32 %539, 10, !dbg !470
  %and892 = and i32 %shr891, 63, !dbg !470
  %idxprom893 = zext i32 %and892 to i64, !dbg !470
  %arrayidx894 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom893, !dbg !470
  %540 = load i32, i32* %arrayidx894, align 4, !dbg !470
  %xor895 = xor i32 %538, %540, !dbg !470
  %541 = load i32, i32* %u, align 4, !dbg !470
  %shr896 = lshr i32 %541, 18, !dbg !470
  %and897 = and i32 %shr896, 63, !dbg !470
  %idxprom898 = zext i32 %and897 to i64, !dbg !470
  %arrayidx899 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom898, !dbg !470
  %542 = load i32, i32* %arrayidx899, align 4, !dbg !470
  %xor900 = xor i32 %xor895, %542, !dbg !470
  %543 = load i32, i32* %u, align 4, !dbg !470
  %shr901 = lshr i32 %543, 26, !dbg !470
  %and902 = and i32 %shr901, 63, !dbg !470
  %idxprom903 = zext i32 %and902 to i64, !dbg !470
  %arrayidx904 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom903, !dbg !470
  %544 = load i32, i32* %arrayidx904, align 4, !dbg !470
  %xor905 = xor i32 %xor900, %544, !dbg !470
  %545 = load i32, i32* %t, align 4, !dbg !470
  %shr906 = lshr i32 %545, 2, !dbg !470
  %and907 = and i32 %shr906, 63, !dbg !470
  %idxprom908 = zext i32 %and907 to i64, !dbg !470
  %arrayidx909 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom908, !dbg !470
  %546 = load i32, i32* %arrayidx909, align 4, !dbg !470
  %xor910 = xor i32 %xor905, %546, !dbg !470
  %547 = load i32, i32* %t, align 4, !dbg !470
  %shr911 = lshr i32 %547, 10, !dbg !470
  %and912 = and i32 %shr911, 63, !dbg !470
  %idxprom913 = zext i32 %and912 to i64, !dbg !470
  %arrayidx914 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom913, !dbg !470
  %548 = load i32, i32* %arrayidx914, align 4, !dbg !470
  %xor915 = xor i32 %xor910, %548, !dbg !470
  %549 = load i32, i32* %t, align 4, !dbg !470
  %shr916 = lshr i32 %549, 18, !dbg !470
  %and917 = and i32 %shr916, 63, !dbg !470
  %idxprom918 = zext i32 %and917 to i64, !dbg !470
  %arrayidx919 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom918, !dbg !470
  %550 = load i32, i32* %arrayidx919, align 4, !dbg !470
  %xor920 = xor i32 %xor915, %550, !dbg !470
  %551 = load i32, i32* %t, align 4, !dbg !470
  %shr921 = lshr i32 %551, 26, !dbg !470
  %and922 = and i32 %shr921, 63, !dbg !470
  %idxprom923 = zext i32 %and922 to i64, !dbg !470
  %arrayidx924 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom923, !dbg !470
  %552 = load i32, i32* %arrayidx924, align 4, !dbg !470
  %xor925 = xor i32 %xor920, %552, !dbg !470
  %553 = load i32, i32* %r, align 4, !dbg !470
  %xor926 = xor i32 %553, %xor925, !dbg !470
  store i32 %xor926, i32* %r, align 4, !dbg !470
  %554 = load i32, i32* %r, align 4, !dbg !476
  %555 = load i32*, i32** %s, align 8, !dbg !476
  %arrayidx927 = getelementptr inbounds i32, i32* %555, i64 22, !dbg !476
  %556 = load i32, i32* %arrayidx927, align 4, !dbg !476
  %xor928 = xor i32 %554, %556, !dbg !476
  store i32 %xor928, i32* %u, align 4, !dbg !476
  %557 = load i32, i32* %r, align 4, !dbg !476
  %558 = load i32*, i32** %s, align 8, !dbg !476
  %arrayidx929 = getelementptr inbounds i32, i32* %558, i64 23, !dbg !476
  %559 = load i32, i32* %arrayidx929, align 4, !dbg !476
  %xor930 = xor i32 %557, %559, !dbg !476
  store i32 %xor930, i32* %t, align 4, !dbg !476
  call void @llvm.dbg.declare(metadata i32* %ret931, metadata !478, metadata !DIExpression()), !dbg !480
  %560 = load i32, i32* %t, align 4, !dbg !480
  %561 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %560) #5, !dbg !480, !srcloc !481
  store i32 %561, i32* %ret931, align 4, !dbg !480
  %562 = load i32, i32* %ret931, align 4, !dbg !480
  store i32 %562, i32* %tmp932, align 4, !dbg !480
  %563 = load i32, i32* %tmp932, align 4, !dbg !480
  store i32 %563, i32* %t, align 4, !dbg !476
  %564 = load i32, i32* %u, align 4, !dbg !476
  %shr933 = lshr i32 %564, 2, !dbg !476
  %and934 = and i32 %shr933, 63, !dbg !476
  %idxprom935 = zext i32 %and934 to i64, !dbg !476
  %arrayidx936 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom935, !dbg !476
  %565 = load i32, i32* %arrayidx936, align 4, !dbg !476
  %566 = load i32, i32* %u, align 4, !dbg !476
  %shr937 = lshr i32 %566, 10, !dbg !476
  %and938 = and i32 %shr937, 63, !dbg !476
  %idxprom939 = zext i32 %and938 to i64, !dbg !476
  %arrayidx940 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom939, !dbg !476
  %567 = load i32, i32* %arrayidx940, align 4, !dbg !476
  %xor941 = xor i32 %565, %567, !dbg !476
  %568 = load i32, i32* %u, align 4, !dbg !476
  %shr942 = lshr i32 %568, 18, !dbg !476
  %and943 = and i32 %shr942, 63, !dbg !476
  %idxprom944 = zext i32 %and943 to i64, !dbg !476
  %arrayidx945 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom944, !dbg !476
  %569 = load i32, i32* %arrayidx945, align 4, !dbg !476
  %xor946 = xor i32 %xor941, %569, !dbg !476
  %570 = load i32, i32* %u, align 4, !dbg !476
  %shr947 = lshr i32 %570, 26, !dbg !476
  %and948 = and i32 %shr947, 63, !dbg !476
  %idxprom949 = zext i32 %and948 to i64, !dbg !476
  %arrayidx950 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom949, !dbg !476
  %571 = load i32, i32* %arrayidx950, align 4, !dbg !476
  %xor951 = xor i32 %xor946, %571, !dbg !476
  %572 = load i32, i32* %t, align 4, !dbg !476
  %shr952 = lshr i32 %572, 2, !dbg !476
  %and953 = and i32 %shr952, 63, !dbg !476
  %idxprom954 = zext i32 %and953 to i64, !dbg !476
  %arrayidx955 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom954, !dbg !476
  %573 = load i32, i32* %arrayidx955, align 4, !dbg !476
  %xor956 = xor i32 %xor951, %573, !dbg !476
  %574 = load i32, i32* %t, align 4, !dbg !476
  %shr957 = lshr i32 %574, 10, !dbg !476
  %and958 = and i32 %shr957, 63, !dbg !476
  %idxprom959 = zext i32 %and958 to i64, !dbg !476
  %arrayidx960 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom959, !dbg !476
  %575 = load i32, i32* %arrayidx960, align 4, !dbg !476
  %xor961 = xor i32 %xor956, %575, !dbg !476
  %576 = load i32, i32* %t, align 4, !dbg !476
  %shr962 = lshr i32 %576, 18, !dbg !476
  %and963 = and i32 %shr962, 63, !dbg !476
  %idxprom964 = zext i32 %and963 to i64, !dbg !476
  %arrayidx965 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom964, !dbg !476
  %577 = load i32, i32* %arrayidx965, align 4, !dbg !476
  %xor966 = xor i32 %xor961, %577, !dbg !476
  %578 = load i32, i32* %t, align 4, !dbg !476
  %shr967 = lshr i32 %578, 26, !dbg !476
  %and968 = and i32 %shr967, 63, !dbg !476
  %idxprom969 = zext i32 %and968 to i64, !dbg !476
  %arrayidx970 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom969, !dbg !476
  %579 = load i32, i32* %arrayidx970, align 4, !dbg !476
  %xor971 = xor i32 %xor966, %579, !dbg !476
  %580 = load i32, i32* %l, align 4, !dbg !476
  %xor972 = xor i32 %580, %xor971, !dbg !476
  store i32 %xor972, i32* %l, align 4, !dbg !476
  %581 = load i32, i32* %l, align 4, !dbg !482
  %582 = load i32*, i32** %s, align 8, !dbg !482
  %arrayidx973 = getelementptr inbounds i32, i32* %582, i64 20, !dbg !482
  %583 = load i32, i32* %arrayidx973, align 4, !dbg !482
  %xor974 = xor i32 %581, %583, !dbg !482
  store i32 %xor974, i32* %u, align 4, !dbg !482
  %584 = load i32, i32* %l, align 4, !dbg !482
  %585 = load i32*, i32** %s, align 8, !dbg !482
  %arrayidx975 = getelementptr inbounds i32, i32* %585, i64 21, !dbg !482
  %586 = load i32, i32* %arrayidx975, align 4, !dbg !482
  %xor976 = xor i32 %584, %586, !dbg !482
  store i32 %xor976, i32* %t, align 4, !dbg !482
  call void @llvm.dbg.declare(metadata i32* %ret977, metadata !484, metadata !DIExpression()), !dbg !486
  %587 = load i32, i32* %t, align 4, !dbg !486
  %588 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %587) #5, !dbg !486, !srcloc !487
  store i32 %588, i32* %ret977, align 4, !dbg !486
  %589 = load i32, i32* %ret977, align 4, !dbg !486
  store i32 %589, i32* %tmp978, align 4, !dbg !486
  %590 = load i32, i32* %tmp978, align 4, !dbg !486
  store i32 %590, i32* %t, align 4, !dbg !482
  %591 = load i32, i32* %u, align 4, !dbg !482
  %shr979 = lshr i32 %591, 2, !dbg !482
  %and980 = and i32 %shr979, 63, !dbg !482
  %idxprom981 = zext i32 %and980 to i64, !dbg !482
  %arrayidx982 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom981, !dbg !482
  %592 = load i32, i32* %arrayidx982, align 4, !dbg !482
  %593 = load i32, i32* %u, align 4, !dbg !482
  %shr983 = lshr i32 %593, 10, !dbg !482
  %and984 = and i32 %shr983, 63, !dbg !482
  %idxprom985 = zext i32 %and984 to i64, !dbg !482
  %arrayidx986 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom985, !dbg !482
  %594 = load i32, i32* %arrayidx986, align 4, !dbg !482
  %xor987 = xor i32 %592, %594, !dbg !482
  %595 = load i32, i32* %u, align 4, !dbg !482
  %shr988 = lshr i32 %595, 18, !dbg !482
  %and989 = and i32 %shr988, 63, !dbg !482
  %idxprom990 = zext i32 %and989 to i64, !dbg !482
  %arrayidx991 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom990, !dbg !482
  %596 = load i32, i32* %arrayidx991, align 4, !dbg !482
  %xor992 = xor i32 %xor987, %596, !dbg !482
  %597 = load i32, i32* %u, align 4, !dbg !482
  %shr993 = lshr i32 %597, 26, !dbg !482
  %and994 = and i32 %shr993, 63, !dbg !482
  %idxprom995 = zext i32 %and994 to i64, !dbg !482
  %arrayidx996 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom995, !dbg !482
  %598 = load i32, i32* %arrayidx996, align 4, !dbg !482
  %xor997 = xor i32 %xor992, %598, !dbg !482
  %599 = load i32, i32* %t, align 4, !dbg !482
  %shr998 = lshr i32 %599, 2, !dbg !482
  %and999 = and i32 %shr998, 63, !dbg !482
  %idxprom1000 = zext i32 %and999 to i64, !dbg !482
  %arrayidx1001 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1000, !dbg !482
  %600 = load i32, i32* %arrayidx1001, align 4, !dbg !482
  %xor1002 = xor i32 %xor997, %600, !dbg !482
  %601 = load i32, i32* %t, align 4, !dbg !482
  %shr1003 = lshr i32 %601, 10, !dbg !482
  %and1004 = and i32 %shr1003, 63, !dbg !482
  %idxprom1005 = zext i32 %and1004 to i64, !dbg !482
  %arrayidx1006 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1005, !dbg !482
  %602 = load i32, i32* %arrayidx1006, align 4, !dbg !482
  %xor1007 = xor i32 %xor1002, %602, !dbg !482
  %603 = load i32, i32* %t, align 4, !dbg !482
  %shr1008 = lshr i32 %603, 18, !dbg !482
  %and1009 = and i32 %shr1008, 63, !dbg !482
  %idxprom1010 = zext i32 %and1009 to i64, !dbg !482
  %arrayidx1011 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1010, !dbg !482
  %604 = load i32, i32* %arrayidx1011, align 4, !dbg !482
  %xor1012 = xor i32 %xor1007, %604, !dbg !482
  %605 = load i32, i32* %t, align 4, !dbg !482
  %shr1013 = lshr i32 %605, 26, !dbg !482
  %and1014 = and i32 %shr1013, 63, !dbg !482
  %idxprom1015 = zext i32 %and1014 to i64, !dbg !482
  %arrayidx1016 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1015, !dbg !482
  %606 = load i32, i32* %arrayidx1016, align 4, !dbg !482
  %xor1017 = xor i32 %xor1012, %606, !dbg !482
  %607 = load i32, i32* %r, align 4, !dbg !482
  %xor1018 = xor i32 %607, %xor1017, !dbg !482
  store i32 %xor1018, i32* %r, align 4, !dbg !482
  %608 = load i32, i32* %r, align 4, !dbg !488
  %609 = load i32*, i32** %s, align 8, !dbg !488
  %arrayidx1019 = getelementptr inbounds i32, i32* %609, i64 18, !dbg !488
  %610 = load i32, i32* %arrayidx1019, align 4, !dbg !488
  %xor1020 = xor i32 %608, %610, !dbg !488
  store i32 %xor1020, i32* %u, align 4, !dbg !488
  %611 = load i32, i32* %r, align 4, !dbg !488
  %612 = load i32*, i32** %s, align 8, !dbg !488
  %arrayidx1021 = getelementptr inbounds i32, i32* %612, i64 19, !dbg !488
  %613 = load i32, i32* %arrayidx1021, align 4, !dbg !488
  %xor1022 = xor i32 %611, %613, !dbg !488
  store i32 %xor1022, i32* %t, align 4, !dbg !488
  call void @llvm.dbg.declare(metadata i32* %ret1023, metadata !490, metadata !DIExpression()), !dbg !492
  %614 = load i32, i32* %t, align 4, !dbg !492
  %615 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %614) #5, !dbg !492, !srcloc !493
  store i32 %615, i32* %ret1023, align 4, !dbg !492
  %616 = load i32, i32* %ret1023, align 4, !dbg !492
  store i32 %616, i32* %tmp1024, align 4, !dbg !492
  %617 = load i32, i32* %tmp1024, align 4, !dbg !492
  store i32 %617, i32* %t, align 4, !dbg !488
  %618 = load i32, i32* %u, align 4, !dbg !488
  %shr1025 = lshr i32 %618, 2, !dbg !488
  %and1026 = and i32 %shr1025, 63, !dbg !488
  %idxprom1027 = zext i32 %and1026 to i64, !dbg !488
  %arrayidx1028 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1027, !dbg !488
  %619 = load i32, i32* %arrayidx1028, align 4, !dbg !488
  %620 = load i32, i32* %u, align 4, !dbg !488
  %shr1029 = lshr i32 %620, 10, !dbg !488
  %and1030 = and i32 %shr1029, 63, !dbg !488
  %idxprom1031 = zext i32 %and1030 to i64, !dbg !488
  %arrayidx1032 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1031, !dbg !488
  %621 = load i32, i32* %arrayidx1032, align 4, !dbg !488
  %xor1033 = xor i32 %619, %621, !dbg !488
  %622 = load i32, i32* %u, align 4, !dbg !488
  %shr1034 = lshr i32 %622, 18, !dbg !488
  %and1035 = and i32 %shr1034, 63, !dbg !488
  %idxprom1036 = zext i32 %and1035 to i64, !dbg !488
  %arrayidx1037 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1036, !dbg !488
  %623 = load i32, i32* %arrayidx1037, align 4, !dbg !488
  %xor1038 = xor i32 %xor1033, %623, !dbg !488
  %624 = load i32, i32* %u, align 4, !dbg !488
  %shr1039 = lshr i32 %624, 26, !dbg !488
  %and1040 = and i32 %shr1039, 63, !dbg !488
  %idxprom1041 = zext i32 %and1040 to i64, !dbg !488
  %arrayidx1042 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1041, !dbg !488
  %625 = load i32, i32* %arrayidx1042, align 4, !dbg !488
  %xor1043 = xor i32 %xor1038, %625, !dbg !488
  %626 = load i32, i32* %t, align 4, !dbg !488
  %shr1044 = lshr i32 %626, 2, !dbg !488
  %and1045 = and i32 %shr1044, 63, !dbg !488
  %idxprom1046 = zext i32 %and1045 to i64, !dbg !488
  %arrayidx1047 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1046, !dbg !488
  %627 = load i32, i32* %arrayidx1047, align 4, !dbg !488
  %xor1048 = xor i32 %xor1043, %627, !dbg !488
  %628 = load i32, i32* %t, align 4, !dbg !488
  %shr1049 = lshr i32 %628, 10, !dbg !488
  %and1050 = and i32 %shr1049, 63, !dbg !488
  %idxprom1051 = zext i32 %and1050 to i64, !dbg !488
  %arrayidx1052 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1051, !dbg !488
  %629 = load i32, i32* %arrayidx1052, align 4, !dbg !488
  %xor1053 = xor i32 %xor1048, %629, !dbg !488
  %630 = load i32, i32* %t, align 4, !dbg !488
  %shr1054 = lshr i32 %630, 18, !dbg !488
  %and1055 = and i32 %shr1054, 63, !dbg !488
  %idxprom1056 = zext i32 %and1055 to i64, !dbg !488
  %arrayidx1057 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1056, !dbg !488
  %631 = load i32, i32* %arrayidx1057, align 4, !dbg !488
  %xor1058 = xor i32 %xor1053, %631, !dbg !488
  %632 = load i32, i32* %t, align 4, !dbg !488
  %shr1059 = lshr i32 %632, 26, !dbg !488
  %and1060 = and i32 %shr1059, 63, !dbg !488
  %idxprom1061 = zext i32 %and1060 to i64, !dbg !488
  %arrayidx1062 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1061, !dbg !488
  %633 = load i32, i32* %arrayidx1062, align 4, !dbg !488
  %xor1063 = xor i32 %xor1058, %633, !dbg !488
  %634 = load i32, i32* %l, align 4, !dbg !488
  %xor1064 = xor i32 %634, %xor1063, !dbg !488
  store i32 %xor1064, i32* %l, align 4, !dbg !488
  %635 = load i32, i32* %l, align 4, !dbg !494
  %636 = load i32*, i32** %s, align 8, !dbg !494
  %arrayidx1065 = getelementptr inbounds i32, i32* %636, i64 16, !dbg !494
  %637 = load i32, i32* %arrayidx1065, align 4, !dbg !494
  %xor1066 = xor i32 %635, %637, !dbg !494
  store i32 %xor1066, i32* %u, align 4, !dbg !494
  %638 = load i32, i32* %l, align 4, !dbg !494
  %639 = load i32*, i32** %s, align 8, !dbg !494
  %arrayidx1067 = getelementptr inbounds i32, i32* %639, i64 17, !dbg !494
  %640 = load i32, i32* %arrayidx1067, align 4, !dbg !494
  %xor1068 = xor i32 %638, %640, !dbg !494
  store i32 %xor1068, i32* %t, align 4, !dbg !494
  call void @llvm.dbg.declare(metadata i32* %ret1069, metadata !496, metadata !DIExpression()), !dbg !498
  %641 = load i32, i32* %t, align 4, !dbg !498
  %642 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %641) #5, !dbg !498, !srcloc !499
  store i32 %642, i32* %ret1069, align 4, !dbg !498
  %643 = load i32, i32* %ret1069, align 4, !dbg !498
  store i32 %643, i32* %tmp1070, align 4, !dbg !498
  %644 = load i32, i32* %tmp1070, align 4, !dbg !498
  store i32 %644, i32* %t, align 4, !dbg !494
  %645 = load i32, i32* %u, align 4, !dbg !494
  %shr1071 = lshr i32 %645, 2, !dbg !494
  %and1072 = and i32 %shr1071, 63, !dbg !494
  %idxprom1073 = zext i32 %and1072 to i64, !dbg !494
  %arrayidx1074 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1073, !dbg !494
  %646 = load i32, i32* %arrayidx1074, align 4, !dbg !494
  %647 = load i32, i32* %u, align 4, !dbg !494
  %shr1075 = lshr i32 %647, 10, !dbg !494
  %and1076 = and i32 %shr1075, 63, !dbg !494
  %idxprom1077 = zext i32 %and1076 to i64, !dbg !494
  %arrayidx1078 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1077, !dbg !494
  %648 = load i32, i32* %arrayidx1078, align 4, !dbg !494
  %xor1079 = xor i32 %646, %648, !dbg !494
  %649 = load i32, i32* %u, align 4, !dbg !494
  %shr1080 = lshr i32 %649, 18, !dbg !494
  %and1081 = and i32 %shr1080, 63, !dbg !494
  %idxprom1082 = zext i32 %and1081 to i64, !dbg !494
  %arrayidx1083 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1082, !dbg !494
  %650 = load i32, i32* %arrayidx1083, align 4, !dbg !494
  %xor1084 = xor i32 %xor1079, %650, !dbg !494
  %651 = load i32, i32* %u, align 4, !dbg !494
  %shr1085 = lshr i32 %651, 26, !dbg !494
  %and1086 = and i32 %shr1085, 63, !dbg !494
  %idxprom1087 = zext i32 %and1086 to i64, !dbg !494
  %arrayidx1088 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1087, !dbg !494
  %652 = load i32, i32* %arrayidx1088, align 4, !dbg !494
  %xor1089 = xor i32 %xor1084, %652, !dbg !494
  %653 = load i32, i32* %t, align 4, !dbg !494
  %shr1090 = lshr i32 %653, 2, !dbg !494
  %and1091 = and i32 %shr1090, 63, !dbg !494
  %idxprom1092 = zext i32 %and1091 to i64, !dbg !494
  %arrayidx1093 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1092, !dbg !494
  %654 = load i32, i32* %arrayidx1093, align 4, !dbg !494
  %xor1094 = xor i32 %xor1089, %654, !dbg !494
  %655 = load i32, i32* %t, align 4, !dbg !494
  %shr1095 = lshr i32 %655, 10, !dbg !494
  %and1096 = and i32 %shr1095, 63, !dbg !494
  %idxprom1097 = zext i32 %and1096 to i64, !dbg !494
  %arrayidx1098 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1097, !dbg !494
  %656 = load i32, i32* %arrayidx1098, align 4, !dbg !494
  %xor1099 = xor i32 %xor1094, %656, !dbg !494
  %657 = load i32, i32* %t, align 4, !dbg !494
  %shr1100 = lshr i32 %657, 18, !dbg !494
  %and1101 = and i32 %shr1100, 63, !dbg !494
  %idxprom1102 = zext i32 %and1101 to i64, !dbg !494
  %arrayidx1103 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1102, !dbg !494
  %658 = load i32, i32* %arrayidx1103, align 4, !dbg !494
  %xor1104 = xor i32 %xor1099, %658, !dbg !494
  %659 = load i32, i32* %t, align 4, !dbg !494
  %shr1105 = lshr i32 %659, 26, !dbg !494
  %and1106 = and i32 %shr1105, 63, !dbg !494
  %idxprom1107 = zext i32 %and1106 to i64, !dbg !494
  %arrayidx1108 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1107, !dbg !494
  %660 = load i32, i32* %arrayidx1108, align 4, !dbg !494
  %xor1109 = xor i32 %xor1104, %660, !dbg !494
  %661 = load i32, i32* %r, align 4, !dbg !494
  %xor1110 = xor i32 %661, %xor1109, !dbg !494
  store i32 %xor1110, i32* %r, align 4, !dbg !494
  %662 = load i32, i32* %r, align 4, !dbg !500
  %663 = load i32*, i32** %s, align 8, !dbg !500
  %arrayidx1111 = getelementptr inbounds i32, i32* %663, i64 14, !dbg !500
  %664 = load i32, i32* %arrayidx1111, align 4, !dbg !500
  %xor1112 = xor i32 %662, %664, !dbg !500
  store i32 %xor1112, i32* %u, align 4, !dbg !500
  %665 = load i32, i32* %r, align 4, !dbg !500
  %666 = load i32*, i32** %s, align 8, !dbg !500
  %arrayidx1113 = getelementptr inbounds i32, i32* %666, i64 15, !dbg !500
  %667 = load i32, i32* %arrayidx1113, align 4, !dbg !500
  %xor1114 = xor i32 %665, %667, !dbg !500
  store i32 %xor1114, i32* %t, align 4, !dbg !500
  call void @llvm.dbg.declare(metadata i32* %ret1115, metadata !502, metadata !DIExpression()), !dbg !504
  %668 = load i32, i32* %t, align 4, !dbg !504
  %669 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %668) #5, !dbg !504, !srcloc !505
  store i32 %669, i32* %ret1115, align 4, !dbg !504
  %670 = load i32, i32* %ret1115, align 4, !dbg !504
  store i32 %670, i32* %tmp1116, align 4, !dbg !504
  %671 = load i32, i32* %tmp1116, align 4, !dbg !504
  store i32 %671, i32* %t, align 4, !dbg !500
  %672 = load i32, i32* %u, align 4, !dbg !500
  %shr1117 = lshr i32 %672, 2, !dbg !500
  %and1118 = and i32 %shr1117, 63, !dbg !500
  %idxprom1119 = zext i32 %and1118 to i64, !dbg !500
  %arrayidx1120 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1119, !dbg !500
  %673 = load i32, i32* %arrayidx1120, align 4, !dbg !500
  %674 = load i32, i32* %u, align 4, !dbg !500
  %shr1121 = lshr i32 %674, 10, !dbg !500
  %and1122 = and i32 %shr1121, 63, !dbg !500
  %idxprom1123 = zext i32 %and1122 to i64, !dbg !500
  %arrayidx1124 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1123, !dbg !500
  %675 = load i32, i32* %arrayidx1124, align 4, !dbg !500
  %xor1125 = xor i32 %673, %675, !dbg !500
  %676 = load i32, i32* %u, align 4, !dbg !500
  %shr1126 = lshr i32 %676, 18, !dbg !500
  %and1127 = and i32 %shr1126, 63, !dbg !500
  %idxprom1128 = zext i32 %and1127 to i64, !dbg !500
  %arrayidx1129 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1128, !dbg !500
  %677 = load i32, i32* %arrayidx1129, align 4, !dbg !500
  %xor1130 = xor i32 %xor1125, %677, !dbg !500
  %678 = load i32, i32* %u, align 4, !dbg !500
  %shr1131 = lshr i32 %678, 26, !dbg !500
  %and1132 = and i32 %shr1131, 63, !dbg !500
  %idxprom1133 = zext i32 %and1132 to i64, !dbg !500
  %arrayidx1134 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1133, !dbg !500
  %679 = load i32, i32* %arrayidx1134, align 4, !dbg !500
  %xor1135 = xor i32 %xor1130, %679, !dbg !500
  %680 = load i32, i32* %t, align 4, !dbg !500
  %shr1136 = lshr i32 %680, 2, !dbg !500
  %and1137 = and i32 %shr1136, 63, !dbg !500
  %idxprom1138 = zext i32 %and1137 to i64, !dbg !500
  %arrayidx1139 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1138, !dbg !500
  %681 = load i32, i32* %arrayidx1139, align 4, !dbg !500
  %xor1140 = xor i32 %xor1135, %681, !dbg !500
  %682 = load i32, i32* %t, align 4, !dbg !500
  %shr1141 = lshr i32 %682, 10, !dbg !500
  %and1142 = and i32 %shr1141, 63, !dbg !500
  %idxprom1143 = zext i32 %and1142 to i64, !dbg !500
  %arrayidx1144 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1143, !dbg !500
  %683 = load i32, i32* %arrayidx1144, align 4, !dbg !500
  %xor1145 = xor i32 %xor1140, %683, !dbg !500
  %684 = load i32, i32* %t, align 4, !dbg !500
  %shr1146 = lshr i32 %684, 18, !dbg !500
  %and1147 = and i32 %shr1146, 63, !dbg !500
  %idxprom1148 = zext i32 %and1147 to i64, !dbg !500
  %arrayidx1149 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1148, !dbg !500
  %685 = load i32, i32* %arrayidx1149, align 4, !dbg !500
  %xor1150 = xor i32 %xor1145, %685, !dbg !500
  %686 = load i32, i32* %t, align 4, !dbg !500
  %shr1151 = lshr i32 %686, 26, !dbg !500
  %and1152 = and i32 %shr1151, 63, !dbg !500
  %idxprom1153 = zext i32 %and1152 to i64, !dbg !500
  %arrayidx1154 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1153, !dbg !500
  %687 = load i32, i32* %arrayidx1154, align 4, !dbg !500
  %xor1155 = xor i32 %xor1150, %687, !dbg !500
  %688 = load i32, i32* %l, align 4, !dbg !500
  %xor1156 = xor i32 %688, %xor1155, !dbg !500
  store i32 %xor1156, i32* %l, align 4, !dbg !500
  %689 = load i32, i32* %l, align 4, !dbg !506
  %690 = load i32*, i32** %s, align 8, !dbg !506
  %arrayidx1157 = getelementptr inbounds i32, i32* %690, i64 12, !dbg !506
  %691 = load i32, i32* %arrayidx1157, align 4, !dbg !506
  %xor1158 = xor i32 %689, %691, !dbg !506
  store i32 %xor1158, i32* %u, align 4, !dbg !506
  %692 = load i32, i32* %l, align 4, !dbg !506
  %693 = load i32*, i32** %s, align 8, !dbg !506
  %arrayidx1159 = getelementptr inbounds i32, i32* %693, i64 13, !dbg !506
  %694 = load i32, i32* %arrayidx1159, align 4, !dbg !506
  %xor1160 = xor i32 %692, %694, !dbg !506
  store i32 %xor1160, i32* %t, align 4, !dbg !506
  call void @llvm.dbg.declare(metadata i32* %ret1161, metadata !508, metadata !DIExpression()), !dbg !510
  %695 = load i32, i32* %t, align 4, !dbg !510
  %696 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %695) #5, !dbg !510, !srcloc !511
  store i32 %696, i32* %ret1161, align 4, !dbg !510
  %697 = load i32, i32* %ret1161, align 4, !dbg !510
  store i32 %697, i32* %tmp1162, align 4, !dbg !510
  %698 = load i32, i32* %tmp1162, align 4, !dbg !510
  store i32 %698, i32* %t, align 4, !dbg !506
  %699 = load i32, i32* %u, align 4, !dbg !506
  %shr1163 = lshr i32 %699, 2, !dbg !506
  %and1164 = and i32 %shr1163, 63, !dbg !506
  %idxprom1165 = zext i32 %and1164 to i64, !dbg !506
  %arrayidx1166 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1165, !dbg !506
  %700 = load i32, i32* %arrayidx1166, align 4, !dbg !506
  %701 = load i32, i32* %u, align 4, !dbg !506
  %shr1167 = lshr i32 %701, 10, !dbg !506
  %and1168 = and i32 %shr1167, 63, !dbg !506
  %idxprom1169 = zext i32 %and1168 to i64, !dbg !506
  %arrayidx1170 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1169, !dbg !506
  %702 = load i32, i32* %arrayidx1170, align 4, !dbg !506
  %xor1171 = xor i32 %700, %702, !dbg !506
  %703 = load i32, i32* %u, align 4, !dbg !506
  %shr1172 = lshr i32 %703, 18, !dbg !506
  %and1173 = and i32 %shr1172, 63, !dbg !506
  %idxprom1174 = zext i32 %and1173 to i64, !dbg !506
  %arrayidx1175 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1174, !dbg !506
  %704 = load i32, i32* %arrayidx1175, align 4, !dbg !506
  %xor1176 = xor i32 %xor1171, %704, !dbg !506
  %705 = load i32, i32* %u, align 4, !dbg !506
  %shr1177 = lshr i32 %705, 26, !dbg !506
  %and1178 = and i32 %shr1177, 63, !dbg !506
  %idxprom1179 = zext i32 %and1178 to i64, !dbg !506
  %arrayidx1180 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1179, !dbg !506
  %706 = load i32, i32* %arrayidx1180, align 4, !dbg !506
  %xor1181 = xor i32 %xor1176, %706, !dbg !506
  %707 = load i32, i32* %t, align 4, !dbg !506
  %shr1182 = lshr i32 %707, 2, !dbg !506
  %and1183 = and i32 %shr1182, 63, !dbg !506
  %idxprom1184 = zext i32 %and1183 to i64, !dbg !506
  %arrayidx1185 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1184, !dbg !506
  %708 = load i32, i32* %arrayidx1185, align 4, !dbg !506
  %xor1186 = xor i32 %xor1181, %708, !dbg !506
  %709 = load i32, i32* %t, align 4, !dbg !506
  %shr1187 = lshr i32 %709, 10, !dbg !506
  %and1188 = and i32 %shr1187, 63, !dbg !506
  %idxprom1189 = zext i32 %and1188 to i64, !dbg !506
  %arrayidx1190 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1189, !dbg !506
  %710 = load i32, i32* %arrayidx1190, align 4, !dbg !506
  %xor1191 = xor i32 %xor1186, %710, !dbg !506
  %711 = load i32, i32* %t, align 4, !dbg !506
  %shr1192 = lshr i32 %711, 18, !dbg !506
  %and1193 = and i32 %shr1192, 63, !dbg !506
  %idxprom1194 = zext i32 %and1193 to i64, !dbg !506
  %arrayidx1195 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1194, !dbg !506
  %712 = load i32, i32* %arrayidx1195, align 4, !dbg !506
  %xor1196 = xor i32 %xor1191, %712, !dbg !506
  %713 = load i32, i32* %t, align 4, !dbg !506
  %shr1197 = lshr i32 %713, 26, !dbg !506
  %and1198 = and i32 %shr1197, 63, !dbg !506
  %idxprom1199 = zext i32 %and1198 to i64, !dbg !506
  %arrayidx1200 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1199, !dbg !506
  %714 = load i32, i32* %arrayidx1200, align 4, !dbg !506
  %xor1201 = xor i32 %xor1196, %714, !dbg !506
  %715 = load i32, i32* %r, align 4, !dbg !506
  %xor1202 = xor i32 %715, %xor1201, !dbg !506
  store i32 %xor1202, i32* %r, align 4, !dbg !506
  %716 = load i32, i32* %r, align 4, !dbg !512
  %717 = load i32*, i32** %s, align 8, !dbg !512
  %arrayidx1203 = getelementptr inbounds i32, i32* %717, i64 10, !dbg !512
  %718 = load i32, i32* %arrayidx1203, align 4, !dbg !512
  %xor1204 = xor i32 %716, %718, !dbg !512
  store i32 %xor1204, i32* %u, align 4, !dbg !512
  %719 = load i32, i32* %r, align 4, !dbg !512
  %720 = load i32*, i32** %s, align 8, !dbg !512
  %arrayidx1205 = getelementptr inbounds i32, i32* %720, i64 11, !dbg !512
  %721 = load i32, i32* %arrayidx1205, align 4, !dbg !512
  %xor1206 = xor i32 %719, %721, !dbg !512
  store i32 %xor1206, i32* %t, align 4, !dbg !512
  call void @llvm.dbg.declare(metadata i32* %ret1207, metadata !514, metadata !DIExpression()), !dbg !516
  %722 = load i32, i32* %t, align 4, !dbg !516
  %723 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %722) #5, !dbg !516, !srcloc !517
  store i32 %723, i32* %ret1207, align 4, !dbg !516
  %724 = load i32, i32* %ret1207, align 4, !dbg !516
  store i32 %724, i32* %tmp1208, align 4, !dbg !516
  %725 = load i32, i32* %tmp1208, align 4, !dbg !516
  store i32 %725, i32* %t, align 4, !dbg !512
  %726 = load i32, i32* %u, align 4, !dbg !512
  %shr1209 = lshr i32 %726, 2, !dbg !512
  %and1210 = and i32 %shr1209, 63, !dbg !512
  %idxprom1211 = zext i32 %and1210 to i64, !dbg !512
  %arrayidx1212 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1211, !dbg !512
  %727 = load i32, i32* %arrayidx1212, align 4, !dbg !512
  %728 = load i32, i32* %u, align 4, !dbg !512
  %shr1213 = lshr i32 %728, 10, !dbg !512
  %and1214 = and i32 %shr1213, 63, !dbg !512
  %idxprom1215 = zext i32 %and1214 to i64, !dbg !512
  %arrayidx1216 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1215, !dbg !512
  %729 = load i32, i32* %arrayidx1216, align 4, !dbg !512
  %xor1217 = xor i32 %727, %729, !dbg !512
  %730 = load i32, i32* %u, align 4, !dbg !512
  %shr1218 = lshr i32 %730, 18, !dbg !512
  %and1219 = and i32 %shr1218, 63, !dbg !512
  %idxprom1220 = zext i32 %and1219 to i64, !dbg !512
  %arrayidx1221 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1220, !dbg !512
  %731 = load i32, i32* %arrayidx1221, align 4, !dbg !512
  %xor1222 = xor i32 %xor1217, %731, !dbg !512
  %732 = load i32, i32* %u, align 4, !dbg !512
  %shr1223 = lshr i32 %732, 26, !dbg !512
  %and1224 = and i32 %shr1223, 63, !dbg !512
  %idxprom1225 = zext i32 %and1224 to i64, !dbg !512
  %arrayidx1226 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1225, !dbg !512
  %733 = load i32, i32* %arrayidx1226, align 4, !dbg !512
  %xor1227 = xor i32 %xor1222, %733, !dbg !512
  %734 = load i32, i32* %t, align 4, !dbg !512
  %shr1228 = lshr i32 %734, 2, !dbg !512
  %and1229 = and i32 %shr1228, 63, !dbg !512
  %idxprom1230 = zext i32 %and1229 to i64, !dbg !512
  %arrayidx1231 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1230, !dbg !512
  %735 = load i32, i32* %arrayidx1231, align 4, !dbg !512
  %xor1232 = xor i32 %xor1227, %735, !dbg !512
  %736 = load i32, i32* %t, align 4, !dbg !512
  %shr1233 = lshr i32 %736, 10, !dbg !512
  %and1234 = and i32 %shr1233, 63, !dbg !512
  %idxprom1235 = zext i32 %and1234 to i64, !dbg !512
  %arrayidx1236 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1235, !dbg !512
  %737 = load i32, i32* %arrayidx1236, align 4, !dbg !512
  %xor1237 = xor i32 %xor1232, %737, !dbg !512
  %738 = load i32, i32* %t, align 4, !dbg !512
  %shr1238 = lshr i32 %738, 18, !dbg !512
  %and1239 = and i32 %shr1238, 63, !dbg !512
  %idxprom1240 = zext i32 %and1239 to i64, !dbg !512
  %arrayidx1241 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1240, !dbg !512
  %739 = load i32, i32* %arrayidx1241, align 4, !dbg !512
  %xor1242 = xor i32 %xor1237, %739, !dbg !512
  %740 = load i32, i32* %t, align 4, !dbg !512
  %shr1243 = lshr i32 %740, 26, !dbg !512
  %and1244 = and i32 %shr1243, 63, !dbg !512
  %idxprom1245 = zext i32 %and1244 to i64, !dbg !512
  %arrayidx1246 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1245, !dbg !512
  %741 = load i32, i32* %arrayidx1246, align 4, !dbg !512
  %xor1247 = xor i32 %xor1242, %741, !dbg !512
  %742 = load i32, i32* %l, align 4, !dbg !512
  %xor1248 = xor i32 %742, %xor1247, !dbg !512
  store i32 %xor1248, i32* %l, align 4, !dbg !512
  %743 = load i32, i32* %l, align 4, !dbg !518
  %744 = load i32*, i32** %s, align 8, !dbg !518
  %arrayidx1249 = getelementptr inbounds i32, i32* %744, i64 8, !dbg !518
  %745 = load i32, i32* %arrayidx1249, align 4, !dbg !518
  %xor1250 = xor i32 %743, %745, !dbg !518
  store i32 %xor1250, i32* %u, align 4, !dbg !518
  %746 = load i32, i32* %l, align 4, !dbg !518
  %747 = load i32*, i32** %s, align 8, !dbg !518
  %arrayidx1251 = getelementptr inbounds i32, i32* %747, i64 9, !dbg !518
  %748 = load i32, i32* %arrayidx1251, align 4, !dbg !518
  %xor1252 = xor i32 %746, %748, !dbg !518
  store i32 %xor1252, i32* %t, align 4, !dbg !518
  call void @llvm.dbg.declare(metadata i32* %ret1253, metadata !520, metadata !DIExpression()), !dbg !522
  %749 = load i32, i32* %t, align 4, !dbg !522
  %750 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %749) #5, !dbg !522, !srcloc !523
  store i32 %750, i32* %ret1253, align 4, !dbg !522
  %751 = load i32, i32* %ret1253, align 4, !dbg !522
  store i32 %751, i32* %tmp1254, align 4, !dbg !522
  %752 = load i32, i32* %tmp1254, align 4, !dbg !522
  store i32 %752, i32* %t, align 4, !dbg !518
  %753 = load i32, i32* %u, align 4, !dbg !518
  %shr1255 = lshr i32 %753, 2, !dbg !518
  %and1256 = and i32 %shr1255, 63, !dbg !518
  %idxprom1257 = zext i32 %and1256 to i64, !dbg !518
  %arrayidx1258 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1257, !dbg !518
  %754 = load i32, i32* %arrayidx1258, align 4, !dbg !518
  %755 = load i32, i32* %u, align 4, !dbg !518
  %shr1259 = lshr i32 %755, 10, !dbg !518
  %and1260 = and i32 %shr1259, 63, !dbg !518
  %idxprom1261 = zext i32 %and1260 to i64, !dbg !518
  %arrayidx1262 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1261, !dbg !518
  %756 = load i32, i32* %arrayidx1262, align 4, !dbg !518
  %xor1263 = xor i32 %754, %756, !dbg !518
  %757 = load i32, i32* %u, align 4, !dbg !518
  %shr1264 = lshr i32 %757, 18, !dbg !518
  %and1265 = and i32 %shr1264, 63, !dbg !518
  %idxprom1266 = zext i32 %and1265 to i64, !dbg !518
  %arrayidx1267 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1266, !dbg !518
  %758 = load i32, i32* %arrayidx1267, align 4, !dbg !518
  %xor1268 = xor i32 %xor1263, %758, !dbg !518
  %759 = load i32, i32* %u, align 4, !dbg !518
  %shr1269 = lshr i32 %759, 26, !dbg !518
  %and1270 = and i32 %shr1269, 63, !dbg !518
  %idxprom1271 = zext i32 %and1270 to i64, !dbg !518
  %arrayidx1272 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1271, !dbg !518
  %760 = load i32, i32* %arrayidx1272, align 4, !dbg !518
  %xor1273 = xor i32 %xor1268, %760, !dbg !518
  %761 = load i32, i32* %t, align 4, !dbg !518
  %shr1274 = lshr i32 %761, 2, !dbg !518
  %and1275 = and i32 %shr1274, 63, !dbg !518
  %idxprom1276 = zext i32 %and1275 to i64, !dbg !518
  %arrayidx1277 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1276, !dbg !518
  %762 = load i32, i32* %arrayidx1277, align 4, !dbg !518
  %xor1278 = xor i32 %xor1273, %762, !dbg !518
  %763 = load i32, i32* %t, align 4, !dbg !518
  %shr1279 = lshr i32 %763, 10, !dbg !518
  %and1280 = and i32 %shr1279, 63, !dbg !518
  %idxprom1281 = zext i32 %and1280 to i64, !dbg !518
  %arrayidx1282 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1281, !dbg !518
  %764 = load i32, i32* %arrayidx1282, align 4, !dbg !518
  %xor1283 = xor i32 %xor1278, %764, !dbg !518
  %765 = load i32, i32* %t, align 4, !dbg !518
  %shr1284 = lshr i32 %765, 18, !dbg !518
  %and1285 = and i32 %shr1284, 63, !dbg !518
  %idxprom1286 = zext i32 %and1285 to i64, !dbg !518
  %arrayidx1287 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1286, !dbg !518
  %766 = load i32, i32* %arrayidx1287, align 4, !dbg !518
  %xor1288 = xor i32 %xor1283, %766, !dbg !518
  %767 = load i32, i32* %t, align 4, !dbg !518
  %shr1289 = lshr i32 %767, 26, !dbg !518
  %and1290 = and i32 %shr1289, 63, !dbg !518
  %idxprom1291 = zext i32 %and1290 to i64, !dbg !518
  %arrayidx1292 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1291, !dbg !518
  %768 = load i32, i32* %arrayidx1292, align 4, !dbg !518
  %xor1293 = xor i32 %xor1288, %768, !dbg !518
  %769 = load i32, i32* %r, align 4, !dbg !518
  %xor1294 = xor i32 %769, %xor1293, !dbg !518
  store i32 %xor1294, i32* %r, align 4, !dbg !518
  %770 = load i32, i32* %r, align 4, !dbg !524
  %771 = load i32*, i32** %s, align 8, !dbg !524
  %arrayidx1295 = getelementptr inbounds i32, i32* %771, i64 6, !dbg !524
  %772 = load i32, i32* %arrayidx1295, align 4, !dbg !524
  %xor1296 = xor i32 %770, %772, !dbg !524
  store i32 %xor1296, i32* %u, align 4, !dbg !524
  %773 = load i32, i32* %r, align 4, !dbg !524
  %774 = load i32*, i32** %s, align 8, !dbg !524
  %arrayidx1297 = getelementptr inbounds i32, i32* %774, i64 7, !dbg !524
  %775 = load i32, i32* %arrayidx1297, align 4, !dbg !524
  %xor1298 = xor i32 %773, %775, !dbg !524
  store i32 %xor1298, i32* %t, align 4, !dbg !524
  call void @llvm.dbg.declare(metadata i32* %ret1299, metadata !526, metadata !DIExpression()), !dbg !528
  %776 = load i32, i32* %t, align 4, !dbg !528
  %777 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %776) #5, !dbg !528, !srcloc !529
  store i32 %777, i32* %ret1299, align 4, !dbg !528
  %778 = load i32, i32* %ret1299, align 4, !dbg !528
  store i32 %778, i32* %tmp1300, align 4, !dbg !528
  %779 = load i32, i32* %tmp1300, align 4, !dbg !528
  store i32 %779, i32* %t, align 4, !dbg !524
  %780 = load i32, i32* %u, align 4, !dbg !524
  %shr1301 = lshr i32 %780, 2, !dbg !524
  %and1302 = and i32 %shr1301, 63, !dbg !524
  %idxprom1303 = zext i32 %and1302 to i64, !dbg !524
  %arrayidx1304 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1303, !dbg !524
  %781 = load i32, i32* %arrayidx1304, align 4, !dbg !524
  %782 = load i32, i32* %u, align 4, !dbg !524
  %shr1305 = lshr i32 %782, 10, !dbg !524
  %and1306 = and i32 %shr1305, 63, !dbg !524
  %idxprom1307 = zext i32 %and1306 to i64, !dbg !524
  %arrayidx1308 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1307, !dbg !524
  %783 = load i32, i32* %arrayidx1308, align 4, !dbg !524
  %xor1309 = xor i32 %781, %783, !dbg !524
  %784 = load i32, i32* %u, align 4, !dbg !524
  %shr1310 = lshr i32 %784, 18, !dbg !524
  %and1311 = and i32 %shr1310, 63, !dbg !524
  %idxprom1312 = zext i32 %and1311 to i64, !dbg !524
  %arrayidx1313 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1312, !dbg !524
  %785 = load i32, i32* %arrayidx1313, align 4, !dbg !524
  %xor1314 = xor i32 %xor1309, %785, !dbg !524
  %786 = load i32, i32* %u, align 4, !dbg !524
  %shr1315 = lshr i32 %786, 26, !dbg !524
  %and1316 = and i32 %shr1315, 63, !dbg !524
  %idxprom1317 = zext i32 %and1316 to i64, !dbg !524
  %arrayidx1318 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1317, !dbg !524
  %787 = load i32, i32* %arrayidx1318, align 4, !dbg !524
  %xor1319 = xor i32 %xor1314, %787, !dbg !524
  %788 = load i32, i32* %t, align 4, !dbg !524
  %shr1320 = lshr i32 %788, 2, !dbg !524
  %and1321 = and i32 %shr1320, 63, !dbg !524
  %idxprom1322 = zext i32 %and1321 to i64, !dbg !524
  %arrayidx1323 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1322, !dbg !524
  %789 = load i32, i32* %arrayidx1323, align 4, !dbg !524
  %xor1324 = xor i32 %xor1319, %789, !dbg !524
  %790 = load i32, i32* %t, align 4, !dbg !524
  %shr1325 = lshr i32 %790, 10, !dbg !524
  %and1326 = and i32 %shr1325, 63, !dbg !524
  %idxprom1327 = zext i32 %and1326 to i64, !dbg !524
  %arrayidx1328 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1327, !dbg !524
  %791 = load i32, i32* %arrayidx1328, align 4, !dbg !524
  %xor1329 = xor i32 %xor1324, %791, !dbg !524
  %792 = load i32, i32* %t, align 4, !dbg !524
  %shr1330 = lshr i32 %792, 18, !dbg !524
  %and1331 = and i32 %shr1330, 63, !dbg !524
  %idxprom1332 = zext i32 %and1331 to i64, !dbg !524
  %arrayidx1333 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1332, !dbg !524
  %793 = load i32, i32* %arrayidx1333, align 4, !dbg !524
  %xor1334 = xor i32 %xor1329, %793, !dbg !524
  %794 = load i32, i32* %t, align 4, !dbg !524
  %shr1335 = lshr i32 %794, 26, !dbg !524
  %and1336 = and i32 %shr1335, 63, !dbg !524
  %idxprom1337 = zext i32 %and1336 to i64, !dbg !524
  %arrayidx1338 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1337, !dbg !524
  %795 = load i32, i32* %arrayidx1338, align 4, !dbg !524
  %xor1339 = xor i32 %xor1334, %795, !dbg !524
  %796 = load i32, i32* %l, align 4, !dbg !524
  %xor1340 = xor i32 %796, %xor1339, !dbg !524
  store i32 %xor1340, i32* %l, align 4, !dbg !524
  %797 = load i32, i32* %l, align 4, !dbg !530
  %798 = load i32*, i32** %s, align 8, !dbg !530
  %arrayidx1341 = getelementptr inbounds i32, i32* %798, i64 4, !dbg !530
  %799 = load i32, i32* %arrayidx1341, align 4, !dbg !530
  %xor1342 = xor i32 %797, %799, !dbg !530
  store i32 %xor1342, i32* %u, align 4, !dbg !530
  %800 = load i32, i32* %l, align 4, !dbg !530
  %801 = load i32*, i32** %s, align 8, !dbg !530
  %arrayidx1343 = getelementptr inbounds i32, i32* %801, i64 5, !dbg !530
  %802 = load i32, i32* %arrayidx1343, align 4, !dbg !530
  %xor1344 = xor i32 %800, %802, !dbg !530
  store i32 %xor1344, i32* %t, align 4, !dbg !530
  call void @llvm.dbg.declare(metadata i32* %ret1345, metadata !532, metadata !DIExpression()), !dbg !534
  %803 = load i32, i32* %t, align 4, !dbg !534
  %804 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %803) #5, !dbg !534, !srcloc !535
  store i32 %804, i32* %ret1345, align 4, !dbg !534
  %805 = load i32, i32* %ret1345, align 4, !dbg !534
  store i32 %805, i32* %tmp1346, align 4, !dbg !534
  %806 = load i32, i32* %tmp1346, align 4, !dbg !534
  store i32 %806, i32* %t, align 4, !dbg !530
  %807 = load i32, i32* %u, align 4, !dbg !530
  %shr1347 = lshr i32 %807, 2, !dbg !530
  %and1348 = and i32 %shr1347, 63, !dbg !530
  %idxprom1349 = zext i32 %and1348 to i64, !dbg !530
  %arrayidx1350 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1349, !dbg !530
  %808 = load i32, i32* %arrayidx1350, align 4, !dbg !530
  %809 = load i32, i32* %u, align 4, !dbg !530
  %shr1351 = lshr i32 %809, 10, !dbg !530
  %and1352 = and i32 %shr1351, 63, !dbg !530
  %idxprom1353 = zext i32 %and1352 to i64, !dbg !530
  %arrayidx1354 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1353, !dbg !530
  %810 = load i32, i32* %arrayidx1354, align 4, !dbg !530
  %xor1355 = xor i32 %808, %810, !dbg !530
  %811 = load i32, i32* %u, align 4, !dbg !530
  %shr1356 = lshr i32 %811, 18, !dbg !530
  %and1357 = and i32 %shr1356, 63, !dbg !530
  %idxprom1358 = zext i32 %and1357 to i64, !dbg !530
  %arrayidx1359 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1358, !dbg !530
  %812 = load i32, i32* %arrayidx1359, align 4, !dbg !530
  %xor1360 = xor i32 %xor1355, %812, !dbg !530
  %813 = load i32, i32* %u, align 4, !dbg !530
  %shr1361 = lshr i32 %813, 26, !dbg !530
  %and1362 = and i32 %shr1361, 63, !dbg !530
  %idxprom1363 = zext i32 %and1362 to i64, !dbg !530
  %arrayidx1364 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1363, !dbg !530
  %814 = load i32, i32* %arrayidx1364, align 4, !dbg !530
  %xor1365 = xor i32 %xor1360, %814, !dbg !530
  %815 = load i32, i32* %t, align 4, !dbg !530
  %shr1366 = lshr i32 %815, 2, !dbg !530
  %and1367 = and i32 %shr1366, 63, !dbg !530
  %idxprom1368 = zext i32 %and1367 to i64, !dbg !530
  %arrayidx1369 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1368, !dbg !530
  %816 = load i32, i32* %arrayidx1369, align 4, !dbg !530
  %xor1370 = xor i32 %xor1365, %816, !dbg !530
  %817 = load i32, i32* %t, align 4, !dbg !530
  %shr1371 = lshr i32 %817, 10, !dbg !530
  %and1372 = and i32 %shr1371, 63, !dbg !530
  %idxprom1373 = zext i32 %and1372 to i64, !dbg !530
  %arrayidx1374 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1373, !dbg !530
  %818 = load i32, i32* %arrayidx1374, align 4, !dbg !530
  %xor1375 = xor i32 %xor1370, %818, !dbg !530
  %819 = load i32, i32* %t, align 4, !dbg !530
  %shr1376 = lshr i32 %819, 18, !dbg !530
  %and1377 = and i32 %shr1376, 63, !dbg !530
  %idxprom1378 = zext i32 %and1377 to i64, !dbg !530
  %arrayidx1379 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1378, !dbg !530
  %820 = load i32, i32* %arrayidx1379, align 4, !dbg !530
  %xor1380 = xor i32 %xor1375, %820, !dbg !530
  %821 = load i32, i32* %t, align 4, !dbg !530
  %shr1381 = lshr i32 %821, 26, !dbg !530
  %and1382 = and i32 %shr1381, 63, !dbg !530
  %idxprom1383 = zext i32 %and1382 to i64, !dbg !530
  %arrayidx1384 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1383, !dbg !530
  %822 = load i32, i32* %arrayidx1384, align 4, !dbg !530
  %xor1385 = xor i32 %xor1380, %822, !dbg !530
  %823 = load i32, i32* %r, align 4, !dbg !530
  %xor1386 = xor i32 %823, %xor1385, !dbg !530
  store i32 %xor1386, i32* %r, align 4, !dbg !530
  %824 = load i32, i32* %r, align 4, !dbg !536
  %825 = load i32*, i32** %s, align 8, !dbg !536
  %arrayidx1387 = getelementptr inbounds i32, i32* %825, i64 2, !dbg !536
  %826 = load i32, i32* %arrayidx1387, align 4, !dbg !536
  %xor1388 = xor i32 %824, %826, !dbg !536
  store i32 %xor1388, i32* %u, align 4, !dbg !536
  %827 = load i32, i32* %r, align 4, !dbg !536
  %828 = load i32*, i32** %s, align 8, !dbg !536
  %arrayidx1389 = getelementptr inbounds i32, i32* %828, i64 3, !dbg !536
  %829 = load i32, i32* %arrayidx1389, align 4, !dbg !536
  %xor1390 = xor i32 %827, %829, !dbg !536
  store i32 %xor1390, i32* %t, align 4, !dbg !536
  call void @llvm.dbg.declare(metadata i32* %ret1391, metadata !538, metadata !DIExpression()), !dbg !540
  %830 = load i32, i32* %t, align 4, !dbg !540
  %831 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %830) #5, !dbg !540, !srcloc !541
  store i32 %831, i32* %ret1391, align 4, !dbg !540
  %832 = load i32, i32* %ret1391, align 4, !dbg !540
  store i32 %832, i32* %tmp1392, align 4, !dbg !540
  %833 = load i32, i32* %tmp1392, align 4, !dbg !540
  store i32 %833, i32* %t, align 4, !dbg !536
  %834 = load i32, i32* %u, align 4, !dbg !536
  %shr1393 = lshr i32 %834, 2, !dbg !536
  %and1394 = and i32 %shr1393, 63, !dbg !536
  %idxprom1395 = zext i32 %and1394 to i64, !dbg !536
  %arrayidx1396 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1395, !dbg !536
  %835 = load i32, i32* %arrayidx1396, align 4, !dbg !536
  %836 = load i32, i32* %u, align 4, !dbg !536
  %shr1397 = lshr i32 %836, 10, !dbg !536
  %and1398 = and i32 %shr1397, 63, !dbg !536
  %idxprom1399 = zext i32 %and1398 to i64, !dbg !536
  %arrayidx1400 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1399, !dbg !536
  %837 = load i32, i32* %arrayidx1400, align 4, !dbg !536
  %xor1401 = xor i32 %835, %837, !dbg !536
  %838 = load i32, i32* %u, align 4, !dbg !536
  %shr1402 = lshr i32 %838, 18, !dbg !536
  %and1403 = and i32 %shr1402, 63, !dbg !536
  %idxprom1404 = zext i32 %and1403 to i64, !dbg !536
  %arrayidx1405 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1404, !dbg !536
  %839 = load i32, i32* %arrayidx1405, align 4, !dbg !536
  %xor1406 = xor i32 %xor1401, %839, !dbg !536
  %840 = load i32, i32* %u, align 4, !dbg !536
  %shr1407 = lshr i32 %840, 26, !dbg !536
  %and1408 = and i32 %shr1407, 63, !dbg !536
  %idxprom1409 = zext i32 %and1408 to i64, !dbg !536
  %arrayidx1410 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1409, !dbg !536
  %841 = load i32, i32* %arrayidx1410, align 4, !dbg !536
  %xor1411 = xor i32 %xor1406, %841, !dbg !536
  %842 = load i32, i32* %t, align 4, !dbg !536
  %shr1412 = lshr i32 %842, 2, !dbg !536
  %and1413 = and i32 %shr1412, 63, !dbg !536
  %idxprom1414 = zext i32 %and1413 to i64, !dbg !536
  %arrayidx1415 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1414, !dbg !536
  %843 = load i32, i32* %arrayidx1415, align 4, !dbg !536
  %xor1416 = xor i32 %xor1411, %843, !dbg !536
  %844 = load i32, i32* %t, align 4, !dbg !536
  %shr1417 = lshr i32 %844, 10, !dbg !536
  %and1418 = and i32 %shr1417, 63, !dbg !536
  %idxprom1419 = zext i32 %and1418 to i64, !dbg !536
  %arrayidx1420 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1419, !dbg !536
  %845 = load i32, i32* %arrayidx1420, align 4, !dbg !536
  %xor1421 = xor i32 %xor1416, %845, !dbg !536
  %846 = load i32, i32* %t, align 4, !dbg !536
  %shr1422 = lshr i32 %846, 18, !dbg !536
  %and1423 = and i32 %shr1422, 63, !dbg !536
  %idxprom1424 = zext i32 %and1423 to i64, !dbg !536
  %arrayidx1425 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1424, !dbg !536
  %847 = load i32, i32* %arrayidx1425, align 4, !dbg !536
  %xor1426 = xor i32 %xor1421, %847, !dbg !536
  %848 = load i32, i32* %t, align 4, !dbg !536
  %shr1427 = lshr i32 %848, 26, !dbg !536
  %and1428 = and i32 %shr1427, 63, !dbg !536
  %idxprom1429 = zext i32 %and1428 to i64, !dbg !536
  %arrayidx1430 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1429, !dbg !536
  %849 = load i32, i32* %arrayidx1430, align 4, !dbg !536
  %xor1431 = xor i32 %xor1426, %849, !dbg !536
  %850 = load i32, i32* %l, align 4, !dbg !536
  %xor1432 = xor i32 %850, %xor1431, !dbg !536
  store i32 %xor1432, i32* %l, align 4, !dbg !536
  %851 = load i32, i32* %l, align 4, !dbg !542
  %852 = load i32*, i32** %s, align 8, !dbg !542
  %arrayidx1433 = getelementptr inbounds i32, i32* %852, i64 0, !dbg !542
  %853 = load i32, i32* %arrayidx1433, align 4, !dbg !542
  %xor1434 = xor i32 %851, %853, !dbg !542
  store i32 %xor1434, i32* %u, align 4, !dbg !542
  %854 = load i32, i32* %l, align 4, !dbg !542
  %855 = load i32*, i32** %s, align 8, !dbg !542
  %arrayidx1435 = getelementptr inbounds i32, i32* %855, i64 1, !dbg !542
  %856 = load i32, i32* %arrayidx1435, align 4, !dbg !542
  %xor1436 = xor i32 %854, %856, !dbg !542
  store i32 %xor1436, i32* %t, align 4, !dbg !542
  call void @llvm.dbg.declare(metadata i32* %ret1437, metadata !544, metadata !DIExpression()), !dbg !546
  %857 = load i32, i32* %t, align 4, !dbg !546
  %858 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %857) #5, !dbg !546, !srcloc !547
  store i32 %858, i32* %ret1437, align 4, !dbg !546
  %859 = load i32, i32* %ret1437, align 4, !dbg !546
  store i32 %859, i32* %tmp1438, align 4, !dbg !546
  %860 = load i32, i32* %tmp1438, align 4, !dbg !546
  store i32 %860, i32* %t, align 4, !dbg !542
  %861 = load i32, i32* %u, align 4, !dbg !542
  %shr1439 = lshr i32 %861, 2, !dbg !542
  %and1440 = and i32 %shr1439, 63, !dbg !542
  %idxprom1441 = zext i32 %and1440 to i64, !dbg !542
  %arrayidx1442 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1441, !dbg !542
  %862 = load i32, i32* %arrayidx1442, align 4, !dbg !542
  %863 = load i32, i32* %u, align 4, !dbg !542
  %shr1443 = lshr i32 %863, 10, !dbg !542
  %and1444 = and i32 %shr1443, 63, !dbg !542
  %idxprom1445 = zext i32 %and1444 to i64, !dbg !542
  %arrayidx1446 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1445, !dbg !542
  %864 = load i32, i32* %arrayidx1446, align 4, !dbg !542
  %xor1447 = xor i32 %862, %864, !dbg !542
  %865 = load i32, i32* %u, align 4, !dbg !542
  %shr1448 = lshr i32 %865, 18, !dbg !542
  %and1449 = and i32 %shr1448, 63, !dbg !542
  %idxprom1450 = zext i32 %and1449 to i64, !dbg !542
  %arrayidx1451 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1450, !dbg !542
  %866 = load i32, i32* %arrayidx1451, align 4, !dbg !542
  %xor1452 = xor i32 %xor1447, %866, !dbg !542
  %867 = load i32, i32* %u, align 4, !dbg !542
  %shr1453 = lshr i32 %867, 26, !dbg !542
  %and1454 = and i32 %shr1453, 63, !dbg !542
  %idxprom1455 = zext i32 %and1454 to i64, !dbg !542
  %arrayidx1456 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1455, !dbg !542
  %868 = load i32, i32* %arrayidx1456, align 4, !dbg !542
  %xor1457 = xor i32 %xor1452, %868, !dbg !542
  %869 = load i32, i32* %t, align 4, !dbg !542
  %shr1458 = lshr i32 %869, 2, !dbg !542
  %and1459 = and i32 %shr1458, 63, !dbg !542
  %idxprom1460 = zext i32 %and1459 to i64, !dbg !542
  %arrayidx1461 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1460, !dbg !542
  %870 = load i32, i32* %arrayidx1461, align 4, !dbg !542
  %xor1462 = xor i32 %xor1457, %870, !dbg !542
  %871 = load i32, i32* %t, align 4, !dbg !542
  %shr1463 = lshr i32 %871, 10, !dbg !542
  %and1464 = and i32 %shr1463, 63, !dbg !542
  %idxprom1465 = zext i32 %and1464 to i64, !dbg !542
  %arrayidx1466 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1465, !dbg !542
  %872 = load i32, i32* %arrayidx1466, align 4, !dbg !542
  %xor1467 = xor i32 %xor1462, %872, !dbg !542
  %873 = load i32, i32* %t, align 4, !dbg !542
  %shr1468 = lshr i32 %873, 18, !dbg !542
  %and1469 = and i32 %shr1468, 63, !dbg !542
  %idxprom1470 = zext i32 %and1469 to i64, !dbg !542
  %arrayidx1471 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1470, !dbg !542
  %874 = load i32, i32* %arrayidx1471, align 4, !dbg !542
  %xor1472 = xor i32 %xor1467, %874, !dbg !542
  %875 = load i32, i32* %t, align 4, !dbg !542
  %shr1473 = lshr i32 %875, 26, !dbg !542
  %and1474 = and i32 %shr1473, 63, !dbg !542
  %idxprom1475 = zext i32 %and1474 to i64, !dbg !542
  %arrayidx1476 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1475, !dbg !542
  %876 = load i32, i32* %arrayidx1476, align 4, !dbg !542
  %xor1477 = xor i32 %xor1472, %876, !dbg !542
  %877 = load i32, i32* %r, align 4, !dbg !542
  %xor1478 = xor i32 %877, %xor1477, !dbg !542
  store i32 %xor1478, i32* %r, align 4, !dbg !542
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.declare(metadata i32* %ret1479, metadata !548, metadata !DIExpression()), !dbg !550
  %878 = load i32, i32* %l, align 4, !dbg !550
  %879 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %878) #5, !dbg !550, !srcloc !551
  store i32 %879, i32* %ret1479, align 4, !dbg !550
  %880 = load i32, i32* %ret1479, align 4, !dbg !550
  store i32 %880, i32* %tmp1480, align 4, !dbg !550
  %881 = load i32, i32* %tmp1480, align 4, !dbg !550
  %conv1481 = zext i32 %881 to i64, !dbg !552
  %and1482 = and i64 %conv1481, 4294967295, !dbg !553
  %conv1483 = trunc i64 %and1482 to i32, !dbg !552
  %882 = load i32*, i32** %data.addr, align 8, !dbg !554
  %arrayidx1484 = getelementptr inbounds i32, i32* %882, i64 0, !dbg !554
  store i32 %conv1483, i32* %arrayidx1484, align 4, !dbg !555
  call void @llvm.dbg.declare(metadata i32* %ret1485, metadata !556, metadata !DIExpression()), !dbg !558
  %883 = load i32, i32* %r, align 4, !dbg !558
  %884 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %883) #5, !dbg !558, !srcloc !559
  store i32 %884, i32* %ret1485, align 4, !dbg !558
  %885 = load i32, i32* %ret1485, align 4, !dbg !558
  store i32 %885, i32* %tmp1486, align 4, !dbg !558
  %886 = load i32, i32* %tmp1486, align 4, !dbg !558
  %conv1487 = zext i32 %886 to i64, !dbg !560
  %and1488 = and i64 %conv1487, 4294967295, !dbg !561
  %conv1489 = trunc i64 %and1488 to i32, !dbg !560
  %887 = load i32*, i32** %data.addr, align 8, !dbg !562
  %arrayidx1490 = getelementptr inbounds i32, i32* %887, i64 1, !dbg !562
  store i32 %conv1489, i32* %arrayidx1490, align 4, !dbg !563
  store i32 0, i32* %u, align 4, !dbg !564
  store i32 0, i32* %t, align 4, !dbg !565
  store i32 0, i32* %r, align 4, !dbg !566
  store i32 0, i32* %l, align 4, !dbg !567
  ret void, !dbg !568
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_encrypt3(i32* %data, %struct.DES_ks* %ks1, %struct.DES_ks* %ks2, %struct.DES_ks* %ks3) #2 !dbg !569 {
entry:
  %data.addr = alloca i32*, align 8
  %ks1.addr = alloca %struct.DES_ks*, align 8
  %ks2.addr = alloca %struct.DES_ks*, align 8
  %ks3.addr = alloca %struct.DES_ks*, align 8
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %tt = alloca i32, align 4
  %tt41 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !572, metadata !DIExpression()), !dbg !573
  store %struct.DES_ks* %ks1, %struct.DES_ks** %ks1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks1.addr, metadata !574, metadata !DIExpression()), !dbg !575
  store %struct.DES_ks* %ks2, %struct.DES_ks** %ks2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks2.addr, metadata !576, metadata !DIExpression()), !dbg !577
  store %struct.DES_ks* %ks3, %struct.DES_ks** %ks3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks3.addr, metadata !578, metadata !DIExpression()), !dbg !579
  call void @llvm.dbg.declare(metadata i32* %l, metadata !580, metadata !DIExpression()), !dbg !581
  call void @llvm.dbg.declare(metadata i32* %r, metadata !582, metadata !DIExpression()), !dbg !583
  %0 = load i32*, i32** %data.addr, align 8, !dbg !584
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !584
  %1 = load i32, i32* %arrayidx, align 4, !dbg !584
  store i32 %1, i32* %l, align 4, !dbg !585
  %2 = load i32*, i32** %data.addr, align 8, !dbg !586
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !586
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !586
  store i32 %3, i32* %r, align 4, !dbg !587
  call void @llvm.dbg.declare(metadata i32* %tt, metadata !588, metadata !DIExpression()), !dbg !590
  %4 = load i32, i32* %r, align 4, !dbg !590
  %shr = lshr i32 %4, 4, !dbg !590
  %5 = load i32, i32* %l, align 4, !dbg !590
  %xor = xor i32 %shr, %5, !dbg !590
  %conv = zext i32 %xor to i64, !dbg !590
  %and = and i64 %conv, 252645135, !dbg !590
  %conv2 = trunc i64 %and to i32, !dbg !590
  store i32 %conv2, i32* %tt, align 4, !dbg !590
  %6 = load i32, i32* %tt, align 4, !dbg !590
  %7 = load i32, i32* %l, align 4, !dbg !590
  %xor3 = xor i32 %7, %6, !dbg !590
  store i32 %xor3, i32* %l, align 4, !dbg !590
  %8 = load i32, i32* %tt, align 4, !dbg !590
  %shl = shl i32 %8, 4, !dbg !590
  %9 = load i32, i32* %r, align 4, !dbg !590
  %xor4 = xor i32 %9, %shl, !dbg !590
  store i32 %xor4, i32* %r, align 4, !dbg !590
  %10 = load i32, i32* %l, align 4, !dbg !590
  %shr5 = lshr i32 %10, 16, !dbg !590
  %11 = load i32, i32* %r, align 4, !dbg !590
  %xor6 = xor i32 %shr5, %11, !dbg !590
  %conv7 = zext i32 %xor6 to i64, !dbg !590
  %and8 = and i64 %conv7, 65535, !dbg !590
  %conv9 = trunc i64 %and8 to i32, !dbg !590
  store i32 %conv9, i32* %tt, align 4, !dbg !590
  %12 = load i32, i32* %tt, align 4, !dbg !590
  %13 = load i32, i32* %r, align 4, !dbg !590
  %xor10 = xor i32 %13, %12, !dbg !590
  store i32 %xor10, i32* %r, align 4, !dbg !590
  %14 = load i32, i32* %tt, align 4, !dbg !590
  %shl11 = shl i32 %14, 16, !dbg !590
  %15 = load i32, i32* %l, align 4, !dbg !590
  %xor12 = xor i32 %15, %shl11, !dbg !590
  store i32 %xor12, i32* %l, align 4, !dbg !590
  %16 = load i32, i32* %r, align 4, !dbg !590
  %shr13 = lshr i32 %16, 2, !dbg !590
  %17 = load i32, i32* %l, align 4, !dbg !590
  %xor14 = xor i32 %shr13, %17, !dbg !590
  %conv15 = zext i32 %xor14 to i64, !dbg !590
  %and16 = and i64 %conv15, 858993459, !dbg !590
  %conv17 = trunc i64 %and16 to i32, !dbg !590
  store i32 %conv17, i32* %tt, align 4, !dbg !590
  %18 = load i32, i32* %tt, align 4, !dbg !590
  %19 = load i32, i32* %l, align 4, !dbg !590
  %xor18 = xor i32 %19, %18, !dbg !590
  store i32 %xor18, i32* %l, align 4, !dbg !590
  %20 = load i32, i32* %tt, align 4, !dbg !590
  %shl19 = shl i32 %20, 2, !dbg !590
  %21 = load i32, i32* %r, align 4, !dbg !590
  %xor20 = xor i32 %21, %shl19, !dbg !590
  store i32 %xor20, i32* %r, align 4, !dbg !590
  %22 = load i32, i32* %l, align 4, !dbg !590
  %shr21 = lshr i32 %22, 8, !dbg !590
  %23 = load i32, i32* %r, align 4, !dbg !590
  %xor22 = xor i32 %shr21, %23, !dbg !590
  %conv23 = zext i32 %xor22 to i64, !dbg !590
  %and24 = and i64 %conv23, 16711935, !dbg !590
  %conv25 = trunc i64 %and24 to i32, !dbg !590
  store i32 %conv25, i32* %tt, align 4, !dbg !590
  %24 = load i32, i32* %tt, align 4, !dbg !590
  %25 = load i32, i32* %r, align 4, !dbg !590
  %xor26 = xor i32 %25, %24, !dbg !590
  store i32 %xor26, i32* %r, align 4, !dbg !590
  %26 = load i32, i32* %tt, align 4, !dbg !590
  %shl27 = shl i32 %26, 8, !dbg !590
  %27 = load i32, i32* %l, align 4, !dbg !590
  %xor28 = xor i32 %27, %shl27, !dbg !590
  store i32 %xor28, i32* %l, align 4, !dbg !590
  %28 = load i32, i32* %r, align 4, !dbg !590
  %shr29 = lshr i32 %28, 1, !dbg !590
  %29 = load i32, i32* %l, align 4, !dbg !590
  %xor30 = xor i32 %shr29, %29, !dbg !590
  %conv31 = zext i32 %xor30 to i64, !dbg !590
  %and32 = and i64 %conv31, 1431655765, !dbg !590
  %conv33 = trunc i64 %and32 to i32, !dbg !590
  store i32 %conv33, i32* %tt, align 4, !dbg !590
  %30 = load i32, i32* %tt, align 4, !dbg !590
  %31 = load i32, i32* %l, align 4, !dbg !590
  %xor34 = xor i32 %31, %30, !dbg !590
  store i32 %xor34, i32* %l, align 4, !dbg !590
  %32 = load i32, i32* %tt, align 4, !dbg !590
  %shl35 = shl i32 %32, 1, !dbg !590
  %33 = load i32, i32* %r, align 4, !dbg !590
  %xor36 = xor i32 %33, %shl35, !dbg !590
  store i32 %xor36, i32* %r, align 4, !dbg !590
  %34 = load i32, i32* %l, align 4, !dbg !591
  %35 = load i32*, i32** %data.addr, align 8, !dbg !592
  %arrayidx37 = getelementptr inbounds i32, i32* %35, i64 0, !dbg !592
  store i32 %34, i32* %arrayidx37, align 4, !dbg !593
  %36 = load i32, i32* %r, align 4, !dbg !594
  %37 = load i32*, i32** %data.addr, align 8, !dbg !595
  %arrayidx38 = getelementptr inbounds i32, i32* %37, i64 1, !dbg !595
  store i32 %36, i32* %arrayidx38, align 4, !dbg !596
  %38 = load i32*, i32** %data.addr, align 8, !dbg !597
  %39 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !598
  call void @DES_encrypt2(i32* %38, %struct.DES_ks* %39, i32 1), !dbg !599
  %40 = load i32*, i32** %data.addr, align 8, !dbg !600
  %41 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !601
  call void @DES_encrypt2(i32* %40, %struct.DES_ks* %41, i32 0), !dbg !602
  %42 = load i32*, i32** %data.addr, align 8, !dbg !603
  %43 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !604
  call void @DES_encrypt2(i32* %42, %struct.DES_ks* %43, i32 1), !dbg !605
  %44 = load i32*, i32** %data.addr, align 8, !dbg !606
  %arrayidx39 = getelementptr inbounds i32, i32* %44, i64 0, !dbg !606
  %45 = load i32, i32* %arrayidx39, align 4, !dbg !606
  store i32 %45, i32* %l, align 4, !dbg !607
  %46 = load i32*, i32** %data.addr, align 8, !dbg !608
  %arrayidx40 = getelementptr inbounds i32, i32* %46, i64 1, !dbg !608
  %47 = load i32, i32* %arrayidx40, align 4, !dbg !608
  store i32 %47, i32* %r, align 4, !dbg !609
  call void @llvm.dbg.declare(metadata i32* %tt41, metadata !610, metadata !DIExpression()), !dbg !612
  %48 = load i32, i32* %r, align 4, !dbg !612
  %shr42 = lshr i32 %48, 1, !dbg !612
  %49 = load i32, i32* %l, align 4, !dbg !612
  %xor43 = xor i32 %shr42, %49, !dbg !612
  %conv44 = zext i32 %xor43 to i64, !dbg !612
  %and45 = and i64 %conv44, 1431655765, !dbg !612
  %conv46 = trunc i64 %and45 to i32, !dbg !612
  store i32 %conv46, i32* %tt41, align 4, !dbg !612
  %50 = load i32, i32* %tt41, align 4, !dbg !612
  %51 = load i32, i32* %l, align 4, !dbg !612
  %xor47 = xor i32 %51, %50, !dbg !612
  store i32 %xor47, i32* %l, align 4, !dbg !612
  %52 = load i32, i32* %tt41, align 4, !dbg !612
  %shl48 = shl i32 %52, 1, !dbg !612
  %53 = load i32, i32* %r, align 4, !dbg !612
  %xor49 = xor i32 %53, %shl48, !dbg !612
  store i32 %xor49, i32* %r, align 4, !dbg !612
  %54 = load i32, i32* %l, align 4, !dbg !612
  %shr50 = lshr i32 %54, 8, !dbg !612
  %55 = load i32, i32* %r, align 4, !dbg !612
  %xor51 = xor i32 %shr50, %55, !dbg !612
  %conv52 = zext i32 %xor51 to i64, !dbg !612
  %and53 = and i64 %conv52, 16711935, !dbg !612
  %conv54 = trunc i64 %and53 to i32, !dbg !612
  store i32 %conv54, i32* %tt41, align 4, !dbg !612
  %56 = load i32, i32* %tt41, align 4, !dbg !612
  %57 = load i32, i32* %r, align 4, !dbg !612
  %xor55 = xor i32 %57, %56, !dbg !612
  store i32 %xor55, i32* %r, align 4, !dbg !612
  %58 = load i32, i32* %tt41, align 4, !dbg !612
  %shl56 = shl i32 %58, 8, !dbg !612
  %59 = load i32, i32* %l, align 4, !dbg !612
  %xor57 = xor i32 %59, %shl56, !dbg !612
  store i32 %xor57, i32* %l, align 4, !dbg !612
  %60 = load i32, i32* %r, align 4, !dbg !612
  %shr58 = lshr i32 %60, 2, !dbg !612
  %61 = load i32, i32* %l, align 4, !dbg !612
  %xor59 = xor i32 %shr58, %61, !dbg !612
  %conv60 = zext i32 %xor59 to i64, !dbg !612
  %and61 = and i64 %conv60, 858993459, !dbg !612
  %conv62 = trunc i64 %and61 to i32, !dbg !612
  store i32 %conv62, i32* %tt41, align 4, !dbg !612
  %62 = load i32, i32* %tt41, align 4, !dbg !612
  %63 = load i32, i32* %l, align 4, !dbg !612
  %xor63 = xor i32 %63, %62, !dbg !612
  store i32 %xor63, i32* %l, align 4, !dbg !612
  %64 = load i32, i32* %tt41, align 4, !dbg !612
  %shl64 = shl i32 %64, 2, !dbg !612
  %65 = load i32, i32* %r, align 4, !dbg !612
  %xor65 = xor i32 %65, %shl64, !dbg !612
  store i32 %xor65, i32* %r, align 4, !dbg !612
  %66 = load i32, i32* %l, align 4, !dbg !612
  %shr66 = lshr i32 %66, 16, !dbg !612
  %67 = load i32, i32* %r, align 4, !dbg !612
  %xor67 = xor i32 %shr66, %67, !dbg !612
  %conv68 = zext i32 %xor67 to i64, !dbg !612
  %and69 = and i64 %conv68, 65535, !dbg !612
  %conv70 = trunc i64 %and69 to i32, !dbg !612
  store i32 %conv70, i32* %tt41, align 4, !dbg !612
  %68 = load i32, i32* %tt41, align 4, !dbg !612
  %69 = load i32, i32* %r, align 4, !dbg !612
  %xor71 = xor i32 %69, %68, !dbg !612
  store i32 %xor71, i32* %r, align 4, !dbg !612
  %70 = load i32, i32* %tt41, align 4, !dbg !612
  %shl72 = shl i32 %70, 16, !dbg !612
  %71 = load i32, i32* %l, align 4, !dbg !612
  %xor73 = xor i32 %71, %shl72, !dbg !612
  store i32 %xor73, i32* %l, align 4, !dbg !612
  %72 = load i32, i32* %r, align 4, !dbg !612
  %shr74 = lshr i32 %72, 4, !dbg !612
  %73 = load i32, i32* %l, align 4, !dbg !612
  %xor75 = xor i32 %shr74, %73, !dbg !612
  %conv76 = zext i32 %xor75 to i64, !dbg !612
  %and77 = and i64 %conv76, 252645135, !dbg !612
  %conv78 = trunc i64 %and77 to i32, !dbg !612
  store i32 %conv78, i32* %tt41, align 4, !dbg !612
  %74 = load i32, i32* %tt41, align 4, !dbg !612
  %75 = load i32, i32* %l, align 4, !dbg !612
  %xor79 = xor i32 %75, %74, !dbg !612
  store i32 %xor79, i32* %l, align 4, !dbg !612
  %76 = load i32, i32* %tt41, align 4, !dbg !612
  %shl80 = shl i32 %76, 4, !dbg !612
  %77 = load i32, i32* %r, align 4, !dbg !612
  %xor81 = xor i32 %77, %shl80, !dbg !612
  store i32 %xor81, i32* %r, align 4, !dbg !612
  %78 = load i32, i32* %l, align 4, !dbg !613
  %79 = load i32*, i32** %data.addr, align 8, !dbg !614
  %arrayidx82 = getelementptr inbounds i32, i32* %79, i64 0, !dbg !614
  store i32 %78, i32* %arrayidx82, align 4, !dbg !615
  %80 = load i32, i32* %r, align 4, !dbg !616
  %81 = load i32*, i32** %data.addr, align 8, !dbg !617
  %arrayidx83 = getelementptr inbounds i32, i32* %81, i64 1, !dbg !617
  store i32 %80, i32* %arrayidx83, align 4, !dbg !618
  ret void, !dbg !619
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_decrypt3(i32* %data, %struct.DES_ks* %ks1, %struct.DES_ks* %ks2, %struct.DES_ks* %ks3) #2 !dbg !620 {
entry:
  %data.addr = alloca i32*, align 8
  %ks1.addr = alloca %struct.DES_ks*, align 8
  %ks2.addr = alloca %struct.DES_ks*, align 8
  %ks3.addr = alloca %struct.DES_ks*, align 8
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %tt = alloca i32, align 4
  %tt41 = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !621, metadata !DIExpression()), !dbg !622
  store %struct.DES_ks* %ks1, %struct.DES_ks** %ks1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks1.addr, metadata !623, metadata !DIExpression()), !dbg !624
  store %struct.DES_ks* %ks2, %struct.DES_ks** %ks2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks2.addr, metadata !625, metadata !DIExpression()), !dbg !626
  store %struct.DES_ks* %ks3, %struct.DES_ks** %ks3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks3.addr, metadata !627, metadata !DIExpression()), !dbg !628
  call void @llvm.dbg.declare(metadata i32* %l, metadata !629, metadata !DIExpression()), !dbg !630
  call void @llvm.dbg.declare(metadata i32* %r, metadata !631, metadata !DIExpression()), !dbg !632
  %0 = load i32*, i32** %data.addr, align 8, !dbg !633
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !633
  %1 = load i32, i32* %arrayidx, align 4, !dbg !633
  store i32 %1, i32* %l, align 4, !dbg !634
  %2 = load i32*, i32** %data.addr, align 8, !dbg !635
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !635
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !635
  store i32 %3, i32* %r, align 4, !dbg !636
  call void @llvm.dbg.declare(metadata i32* %tt, metadata !637, metadata !DIExpression()), !dbg !639
  %4 = load i32, i32* %r, align 4, !dbg !639
  %shr = lshr i32 %4, 4, !dbg !639
  %5 = load i32, i32* %l, align 4, !dbg !639
  %xor = xor i32 %shr, %5, !dbg !639
  %conv = zext i32 %xor to i64, !dbg !639
  %and = and i64 %conv, 252645135, !dbg !639
  %conv2 = trunc i64 %and to i32, !dbg !639
  store i32 %conv2, i32* %tt, align 4, !dbg !639
  %6 = load i32, i32* %tt, align 4, !dbg !639
  %7 = load i32, i32* %l, align 4, !dbg !639
  %xor3 = xor i32 %7, %6, !dbg !639
  store i32 %xor3, i32* %l, align 4, !dbg !639
  %8 = load i32, i32* %tt, align 4, !dbg !639
  %shl = shl i32 %8, 4, !dbg !639
  %9 = load i32, i32* %r, align 4, !dbg !639
  %xor4 = xor i32 %9, %shl, !dbg !639
  store i32 %xor4, i32* %r, align 4, !dbg !639
  %10 = load i32, i32* %l, align 4, !dbg !639
  %shr5 = lshr i32 %10, 16, !dbg !639
  %11 = load i32, i32* %r, align 4, !dbg !639
  %xor6 = xor i32 %shr5, %11, !dbg !639
  %conv7 = zext i32 %xor6 to i64, !dbg !639
  %and8 = and i64 %conv7, 65535, !dbg !639
  %conv9 = trunc i64 %and8 to i32, !dbg !639
  store i32 %conv9, i32* %tt, align 4, !dbg !639
  %12 = load i32, i32* %tt, align 4, !dbg !639
  %13 = load i32, i32* %r, align 4, !dbg !639
  %xor10 = xor i32 %13, %12, !dbg !639
  store i32 %xor10, i32* %r, align 4, !dbg !639
  %14 = load i32, i32* %tt, align 4, !dbg !639
  %shl11 = shl i32 %14, 16, !dbg !639
  %15 = load i32, i32* %l, align 4, !dbg !639
  %xor12 = xor i32 %15, %shl11, !dbg !639
  store i32 %xor12, i32* %l, align 4, !dbg !639
  %16 = load i32, i32* %r, align 4, !dbg !639
  %shr13 = lshr i32 %16, 2, !dbg !639
  %17 = load i32, i32* %l, align 4, !dbg !639
  %xor14 = xor i32 %shr13, %17, !dbg !639
  %conv15 = zext i32 %xor14 to i64, !dbg !639
  %and16 = and i64 %conv15, 858993459, !dbg !639
  %conv17 = trunc i64 %and16 to i32, !dbg !639
  store i32 %conv17, i32* %tt, align 4, !dbg !639
  %18 = load i32, i32* %tt, align 4, !dbg !639
  %19 = load i32, i32* %l, align 4, !dbg !639
  %xor18 = xor i32 %19, %18, !dbg !639
  store i32 %xor18, i32* %l, align 4, !dbg !639
  %20 = load i32, i32* %tt, align 4, !dbg !639
  %shl19 = shl i32 %20, 2, !dbg !639
  %21 = load i32, i32* %r, align 4, !dbg !639
  %xor20 = xor i32 %21, %shl19, !dbg !639
  store i32 %xor20, i32* %r, align 4, !dbg !639
  %22 = load i32, i32* %l, align 4, !dbg !639
  %shr21 = lshr i32 %22, 8, !dbg !639
  %23 = load i32, i32* %r, align 4, !dbg !639
  %xor22 = xor i32 %shr21, %23, !dbg !639
  %conv23 = zext i32 %xor22 to i64, !dbg !639
  %and24 = and i64 %conv23, 16711935, !dbg !639
  %conv25 = trunc i64 %and24 to i32, !dbg !639
  store i32 %conv25, i32* %tt, align 4, !dbg !639
  %24 = load i32, i32* %tt, align 4, !dbg !639
  %25 = load i32, i32* %r, align 4, !dbg !639
  %xor26 = xor i32 %25, %24, !dbg !639
  store i32 %xor26, i32* %r, align 4, !dbg !639
  %26 = load i32, i32* %tt, align 4, !dbg !639
  %shl27 = shl i32 %26, 8, !dbg !639
  %27 = load i32, i32* %l, align 4, !dbg !639
  %xor28 = xor i32 %27, %shl27, !dbg !639
  store i32 %xor28, i32* %l, align 4, !dbg !639
  %28 = load i32, i32* %r, align 4, !dbg !639
  %shr29 = lshr i32 %28, 1, !dbg !639
  %29 = load i32, i32* %l, align 4, !dbg !639
  %xor30 = xor i32 %shr29, %29, !dbg !639
  %conv31 = zext i32 %xor30 to i64, !dbg !639
  %and32 = and i64 %conv31, 1431655765, !dbg !639
  %conv33 = trunc i64 %and32 to i32, !dbg !639
  store i32 %conv33, i32* %tt, align 4, !dbg !639
  %30 = load i32, i32* %tt, align 4, !dbg !639
  %31 = load i32, i32* %l, align 4, !dbg !639
  %xor34 = xor i32 %31, %30, !dbg !639
  store i32 %xor34, i32* %l, align 4, !dbg !639
  %32 = load i32, i32* %tt, align 4, !dbg !639
  %shl35 = shl i32 %32, 1, !dbg !639
  %33 = load i32, i32* %r, align 4, !dbg !639
  %xor36 = xor i32 %33, %shl35, !dbg !639
  store i32 %xor36, i32* %r, align 4, !dbg !639
  %34 = load i32, i32* %l, align 4, !dbg !640
  %35 = load i32*, i32** %data.addr, align 8, !dbg !641
  %arrayidx37 = getelementptr inbounds i32, i32* %35, i64 0, !dbg !641
  store i32 %34, i32* %arrayidx37, align 4, !dbg !642
  %36 = load i32, i32* %r, align 4, !dbg !643
  %37 = load i32*, i32** %data.addr, align 8, !dbg !644
  %arrayidx38 = getelementptr inbounds i32, i32* %37, i64 1, !dbg !644
  store i32 %36, i32* %arrayidx38, align 4, !dbg !645
  %38 = load i32*, i32** %data.addr, align 8, !dbg !646
  %39 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !647
  call void @DES_encrypt2(i32* %38, %struct.DES_ks* %39, i32 0), !dbg !648
  %40 = load i32*, i32** %data.addr, align 8, !dbg !649
  %41 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !650
  call void @DES_encrypt2(i32* %40, %struct.DES_ks* %41, i32 1), !dbg !651
  %42 = load i32*, i32** %data.addr, align 8, !dbg !652
  %43 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !653
  call void @DES_encrypt2(i32* %42, %struct.DES_ks* %43, i32 0), !dbg !654
  %44 = load i32*, i32** %data.addr, align 8, !dbg !655
  %arrayidx39 = getelementptr inbounds i32, i32* %44, i64 0, !dbg !655
  %45 = load i32, i32* %arrayidx39, align 4, !dbg !655
  store i32 %45, i32* %l, align 4, !dbg !656
  %46 = load i32*, i32** %data.addr, align 8, !dbg !657
  %arrayidx40 = getelementptr inbounds i32, i32* %46, i64 1, !dbg !657
  %47 = load i32, i32* %arrayidx40, align 4, !dbg !657
  store i32 %47, i32* %r, align 4, !dbg !658
  call void @llvm.dbg.declare(metadata i32* %tt41, metadata !659, metadata !DIExpression()), !dbg !661
  %48 = load i32, i32* %r, align 4, !dbg !661
  %shr42 = lshr i32 %48, 1, !dbg !661
  %49 = load i32, i32* %l, align 4, !dbg !661
  %xor43 = xor i32 %shr42, %49, !dbg !661
  %conv44 = zext i32 %xor43 to i64, !dbg !661
  %and45 = and i64 %conv44, 1431655765, !dbg !661
  %conv46 = trunc i64 %and45 to i32, !dbg !661
  store i32 %conv46, i32* %tt41, align 4, !dbg !661
  %50 = load i32, i32* %tt41, align 4, !dbg !661
  %51 = load i32, i32* %l, align 4, !dbg !661
  %xor47 = xor i32 %51, %50, !dbg !661
  store i32 %xor47, i32* %l, align 4, !dbg !661
  %52 = load i32, i32* %tt41, align 4, !dbg !661
  %shl48 = shl i32 %52, 1, !dbg !661
  %53 = load i32, i32* %r, align 4, !dbg !661
  %xor49 = xor i32 %53, %shl48, !dbg !661
  store i32 %xor49, i32* %r, align 4, !dbg !661
  %54 = load i32, i32* %l, align 4, !dbg !661
  %shr50 = lshr i32 %54, 8, !dbg !661
  %55 = load i32, i32* %r, align 4, !dbg !661
  %xor51 = xor i32 %shr50, %55, !dbg !661
  %conv52 = zext i32 %xor51 to i64, !dbg !661
  %and53 = and i64 %conv52, 16711935, !dbg !661
  %conv54 = trunc i64 %and53 to i32, !dbg !661
  store i32 %conv54, i32* %tt41, align 4, !dbg !661
  %56 = load i32, i32* %tt41, align 4, !dbg !661
  %57 = load i32, i32* %r, align 4, !dbg !661
  %xor55 = xor i32 %57, %56, !dbg !661
  store i32 %xor55, i32* %r, align 4, !dbg !661
  %58 = load i32, i32* %tt41, align 4, !dbg !661
  %shl56 = shl i32 %58, 8, !dbg !661
  %59 = load i32, i32* %l, align 4, !dbg !661
  %xor57 = xor i32 %59, %shl56, !dbg !661
  store i32 %xor57, i32* %l, align 4, !dbg !661
  %60 = load i32, i32* %r, align 4, !dbg !661
  %shr58 = lshr i32 %60, 2, !dbg !661
  %61 = load i32, i32* %l, align 4, !dbg !661
  %xor59 = xor i32 %shr58, %61, !dbg !661
  %conv60 = zext i32 %xor59 to i64, !dbg !661
  %and61 = and i64 %conv60, 858993459, !dbg !661
  %conv62 = trunc i64 %and61 to i32, !dbg !661
  store i32 %conv62, i32* %tt41, align 4, !dbg !661
  %62 = load i32, i32* %tt41, align 4, !dbg !661
  %63 = load i32, i32* %l, align 4, !dbg !661
  %xor63 = xor i32 %63, %62, !dbg !661
  store i32 %xor63, i32* %l, align 4, !dbg !661
  %64 = load i32, i32* %tt41, align 4, !dbg !661
  %shl64 = shl i32 %64, 2, !dbg !661
  %65 = load i32, i32* %r, align 4, !dbg !661
  %xor65 = xor i32 %65, %shl64, !dbg !661
  store i32 %xor65, i32* %r, align 4, !dbg !661
  %66 = load i32, i32* %l, align 4, !dbg !661
  %shr66 = lshr i32 %66, 16, !dbg !661
  %67 = load i32, i32* %r, align 4, !dbg !661
  %xor67 = xor i32 %shr66, %67, !dbg !661
  %conv68 = zext i32 %xor67 to i64, !dbg !661
  %and69 = and i64 %conv68, 65535, !dbg !661
  %conv70 = trunc i64 %and69 to i32, !dbg !661
  store i32 %conv70, i32* %tt41, align 4, !dbg !661
  %68 = load i32, i32* %tt41, align 4, !dbg !661
  %69 = load i32, i32* %r, align 4, !dbg !661
  %xor71 = xor i32 %69, %68, !dbg !661
  store i32 %xor71, i32* %r, align 4, !dbg !661
  %70 = load i32, i32* %tt41, align 4, !dbg !661
  %shl72 = shl i32 %70, 16, !dbg !661
  %71 = load i32, i32* %l, align 4, !dbg !661
  %xor73 = xor i32 %71, %shl72, !dbg !661
  store i32 %xor73, i32* %l, align 4, !dbg !661
  %72 = load i32, i32* %r, align 4, !dbg !661
  %shr74 = lshr i32 %72, 4, !dbg !661
  %73 = load i32, i32* %l, align 4, !dbg !661
  %xor75 = xor i32 %shr74, %73, !dbg !661
  %conv76 = zext i32 %xor75 to i64, !dbg !661
  %and77 = and i64 %conv76, 252645135, !dbg !661
  %conv78 = trunc i64 %and77 to i32, !dbg !661
  store i32 %conv78, i32* %tt41, align 4, !dbg !661
  %74 = load i32, i32* %tt41, align 4, !dbg !661
  %75 = load i32, i32* %l, align 4, !dbg !661
  %xor79 = xor i32 %75, %74, !dbg !661
  store i32 %xor79, i32* %l, align 4, !dbg !661
  %76 = load i32, i32* %tt41, align 4, !dbg !661
  %shl80 = shl i32 %76, 4, !dbg !661
  %77 = load i32, i32* %r, align 4, !dbg !661
  %xor81 = xor i32 %77, %shl80, !dbg !661
  store i32 %xor81, i32* %r, align 4, !dbg !661
  %78 = load i32, i32* %l, align 4, !dbg !662
  %79 = load i32*, i32** %data.addr, align 8, !dbg !663
  %arrayidx82 = getelementptr inbounds i32, i32* %79, i64 0, !dbg !663
  store i32 %78, i32* %arrayidx82, align 4, !dbg !664
  %80 = load i32, i32* %r, align 4, !dbg !665
  %81 = load i32*, i32** %data.addr, align 8, !dbg !666
  %arrayidx83 = getelementptr inbounds i32, i32* %81, i64 1, !dbg !666
  store i32 %80, i32* %arrayidx83, align 4, !dbg !667
  ret void, !dbg !668
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_ncbc_encrypt(i8* %in, i8* %out, i64 %length, %struct.DES_ks* %_schedule, [8 x i8]* %ivec, i32 %enc) #2 !dbg !669 {
entry:
  %data.addr.i3463 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i3463, metadata !44, metadata !DIExpression()), !dbg !678
  %ks.addr.i3464 = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i3464, metadata !46, metadata !DIExpression()), !dbg !684
  %enc.addr.i3465 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i3465, metadata !48, metadata !DIExpression()), !dbg !685
  %l.i3466 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i3466, metadata !50, metadata !DIExpression()), !dbg !686
  %r.i3467 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i3467, metadata !52, metadata !DIExpression()), !dbg !687
  %t.i3468 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i3468, metadata !54, metadata !DIExpression()), !dbg !688
  %u.i3469 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i3469, metadata !56, metadata !DIExpression()), !dbg !689
  %s.i3470 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i3470, metadata !58, metadata !DIExpression()), !dbg !690
  %tt.i3471 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i3471, metadata !64, metadata !DIExpression()), !dbg !691
  %ret.i3472 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i3472, metadata !67, metadata !DIExpression()), !dbg !692
  %tmp.i3473 = alloca i32, align 4
  %ret40.i3474 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret40.i3474, metadata !74, metadata !DIExpression()), !dbg !693
  %tmp41.i3475 = alloca i32, align 4
  %ret51.i3476 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret51.i3476, metadata !91, metadata !DIExpression()), !dbg !694
  %tmp52.i3477 = alloca i32, align 4
  %ret96.i3478 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret96.i3478, metadata !97, metadata !DIExpression()), !dbg !695
  %tmp97.i3479 = alloca i32, align 4
  %ret142.i3480 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret142.i3480, metadata !103, metadata !DIExpression()), !dbg !696
  %tmp143.i3481 = alloca i32, align 4
  %ret188.i3482 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret188.i3482, metadata !109, metadata !DIExpression()), !dbg !697
  %tmp189.i3483 = alloca i32, align 4
  %ret234.i3484 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret234.i3484, metadata !115, metadata !DIExpression()), !dbg !698
  %tmp235.i3485 = alloca i32, align 4
  %ret280.i3486 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret280.i3486, metadata !121, metadata !DIExpression()), !dbg !699
  %tmp281.i3487 = alloca i32, align 4
  %ret326.i3488 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret326.i3488, metadata !127, metadata !DIExpression()), !dbg !700
  %tmp327.i3489 = alloca i32, align 4
  %ret372.i3490 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret372.i3490, metadata !133, metadata !DIExpression()), !dbg !701
  %tmp373.i3491 = alloca i32, align 4
  %ret418.i3492 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret418.i3492, metadata !139, metadata !DIExpression()), !dbg !702
  %tmp419.i3493 = alloca i32, align 4
  %ret464.i3494 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret464.i3494, metadata !145, metadata !DIExpression()), !dbg !703
  %tmp465.i3495 = alloca i32, align 4
  %ret510.i3496 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret510.i3496, metadata !151, metadata !DIExpression()), !dbg !704
  %tmp511.i3497 = alloca i32, align 4
  %ret556.i3498 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret556.i3498, metadata !157, metadata !DIExpression()), !dbg !705
  %tmp557.i3499 = alloca i32, align 4
  %ret602.i3500 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret602.i3500, metadata !163, metadata !DIExpression()), !dbg !706
  %tmp603.i3501 = alloca i32, align 4
  %ret648.i3502 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret648.i3502, metadata !169, metadata !DIExpression()), !dbg !707
  %tmp649.i3503 = alloca i32, align 4
  %ret694.i3504 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret694.i3504, metadata !175, metadata !DIExpression()), !dbg !708
  %tmp695.i3505 = alloca i32, align 4
  %ret740.i3506 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret740.i3506, metadata !181, metadata !DIExpression()), !dbg !709
  %tmp741.i3507 = alloca i32, align 4
  %ret786.i3508 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret786.i3508, metadata !189, metadata !DIExpression()), !dbg !710
  %tmp787.i3509 = alloca i32, align 4
  %ret832.i3510 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret832.i3510, metadata !195, metadata !DIExpression()), !dbg !711
  %tmp833.i3511 = alloca i32, align 4
  %ret878.i3512 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret878.i3512, metadata !201, metadata !DIExpression()), !dbg !712
  %tmp879.i3513 = alloca i32, align 4
  %ret924.i3514 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret924.i3514, metadata !207, metadata !DIExpression()), !dbg !713
  %tmp925.i3515 = alloca i32, align 4
  %ret970.i3516 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret970.i3516, metadata !213, metadata !DIExpression()), !dbg !714
  %tmp971.i3517 = alloca i32, align 4
  %ret1016.i3518 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1016.i3518, metadata !219, metadata !DIExpression()), !dbg !715
  %tmp1017.i3519 = alloca i32, align 4
  %ret1062.i3520 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1062.i3520, metadata !225, metadata !DIExpression()), !dbg !716
  %tmp1063.i3521 = alloca i32, align 4
  %ret1108.i3522 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1108.i3522, metadata !231, metadata !DIExpression()), !dbg !717
  %tmp1109.i3523 = alloca i32, align 4
  %ret1154.i3524 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1154.i3524, metadata !237, metadata !DIExpression()), !dbg !718
  %tmp1155.i3525 = alloca i32, align 4
  %ret1200.i3526 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1200.i3526, metadata !243, metadata !DIExpression()), !dbg !719
  %tmp1201.i3527 = alloca i32, align 4
  %ret1246.i3528 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1246.i3528, metadata !249, metadata !DIExpression()), !dbg !720
  %tmp1247.i3529 = alloca i32, align 4
  %ret1292.i3530 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1292.i3530, metadata !255, metadata !DIExpression()), !dbg !721
  %tmp1293.i3531 = alloca i32, align 4
  %ret1338.i3532 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1338.i3532, metadata !261, metadata !DIExpression()), !dbg !722
  %tmp1339.i3533 = alloca i32, align 4
  %ret1384.i3534 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1384.i3534, metadata !267, metadata !DIExpression()), !dbg !723
  %tmp1385.i3535 = alloca i32, align 4
  %ret1430.i3536 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1430.i3536, metadata !273, metadata !DIExpression()), !dbg !724
  %tmp1431.i3537 = alloca i32, align 4
  %ret1476.i3538 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1476.i3538, metadata !279, metadata !DIExpression()), !dbg !725
  %tmp1477.i3539 = alloca i32, align 4
  %ret1518.i3540 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1518.i3540, metadata !283, metadata !DIExpression()), !dbg !726
  %tmp1519.i3541 = alloca i32, align 4
  %ret1523.i3542 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1523.i3542, metadata !290, metadata !DIExpression()), !dbg !727
  %tmp1524.i3543 = alloca i32, align 4
  %tt1528.i3544 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1528.i3544, metadata !297, metadata !DIExpression()), !dbg !728
  %data.addr.i1937 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i1937, metadata !44, metadata !DIExpression()), !dbg !729
  %ks.addr.i1938 = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i1938, metadata !46, metadata !DIExpression()), !dbg !734
  %enc.addr.i1939 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i1939, metadata !48, metadata !DIExpression()), !dbg !735
  %l.i1940 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i1940, metadata !50, metadata !DIExpression()), !dbg !736
  %r.i1941 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i1941, metadata !52, metadata !DIExpression()), !dbg !737
  %t.i1942 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i1942, metadata !54, metadata !DIExpression()), !dbg !738
  %u.i1943 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i1943, metadata !56, metadata !DIExpression()), !dbg !739
  %s.i1944 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i1944, metadata !58, metadata !DIExpression()), !dbg !740
  %tt.i1945 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i1945, metadata !64, metadata !DIExpression()), !dbg !741
  %ret.i1946 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i1946, metadata !67, metadata !DIExpression()), !dbg !742
  %tmp.i1947 = alloca i32, align 4
  %ret40.i1948 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret40.i1948, metadata !74, metadata !DIExpression()), !dbg !743
  %tmp41.i1949 = alloca i32, align 4
  %ret51.i1950 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret51.i1950, metadata !91, metadata !DIExpression()), !dbg !744
  %tmp52.i1951 = alloca i32, align 4
  %ret96.i1952 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret96.i1952, metadata !97, metadata !DIExpression()), !dbg !745
  %tmp97.i1953 = alloca i32, align 4
  %ret142.i1954 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret142.i1954, metadata !103, metadata !DIExpression()), !dbg !746
  %tmp143.i1955 = alloca i32, align 4
  %ret188.i1956 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret188.i1956, metadata !109, metadata !DIExpression()), !dbg !747
  %tmp189.i1957 = alloca i32, align 4
  %ret234.i1958 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret234.i1958, metadata !115, metadata !DIExpression()), !dbg !748
  %tmp235.i1959 = alloca i32, align 4
  %ret280.i1960 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret280.i1960, metadata !121, metadata !DIExpression()), !dbg !749
  %tmp281.i1961 = alloca i32, align 4
  %ret326.i1962 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret326.i1962, metadata !127, metadata !DIExpression()), !dbg !750
  %tmp327.i1963 = alloca i32, align 4
  %ret372.i1964 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret372.i1964, metadata !133, metadata !DIExpression()), !dbg !751
  %tmp373.i1965 = alloca i32, align 4
  %ret418.i1966 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret418.i1966, metadata !139, metadata !DIExpression()), !dbg !752
  %tmp419.i1967 = alloca i32, align 4
  %ret464.i1968 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret464.i1968, metadata !145, metadata !DIExpression()), !dbg !753
  %tmp465.i1969 = alloca i32, align 4
  %ret510.i1970 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret510.i1970, metadata !151, metadata !DIExpression()), !dbg !754
  %tmp511.i1971 = alloca i32, align 4
  %ret556.i1972 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret556.i1972, metadata !157, metadata !DIExpression()), !dbg !755
  %tmp557.i1973 = alloca i32, align 4
  %ret602.i1974 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret602.i1974, metadata !163, metadata !DIExpression()), !dbg !756
  %tmp603.i1975 = alloca i32, align 4
  %ret648.i1976 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret648.i1976, metadata !169, metadata !DIExpression()), !dbg !757
  %tmp649.i1977 = alloca i32, align 4
  %ret694.i1978 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret694.i1978, metadata !175, metadata !DIExpression()), !dbg !758
  %tmp695.i1979 = alloca i32, align 4
  %ret740.i1980 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret740.i1980, metadata !181, metadata !DIExpression()), !dbg !759
  %tmp741.i1981 = alloca i32, align 4
  %ret786.i1982 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret786.i1982, metadata !189, metadata !DIExpression()), !dbg !760
  %tmp787.i1983 = alloca i32, align 4
  %ret832.i1984 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret832.i1984, metadata !195, metadata !DIExpression()), !dbg !761
  %tmp833.i1985 = alloca i32, align 4
  %ret878.i1986 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret878.i1986, metadata !201, metadata !DIExpression()), !dbg !762
  %tmp879.i1987 = alloca i32, align 4
  %ret924.i1988 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret924.i1988, metadata !207, metadata !DIExpression()), !dbg !763
  %tmp925.i1989 = alloca i32, align 4
  %ret970.i1990 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret970.i1990, metadata !213, metadata !DIExpression()), !dbg !764
  %tmp971.i1991 = alloca i32, align 4
  %ret1016.i1992 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1016.i1992, metadata !219, metadata !DIExpression()), !dbg !765
  %tmp1017.i1993 = alloca i32, align 4
  %ret1062.i1994 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1062.i1994, metadata !225, metadata !DIExpression()), !dbg !766
  %tmp1063.i1995 = alloca i32, align 4
  %ret1108.i1996 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1108.i1996, metadata !231, metadata !DIExpression()), !dbg !767
  %tmp1109.i1997 = alloca i32, align 4
  %ret1154.i1998 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1154.i1998, metadata !237, metadata !DIExpression()), !dbg !768
  %tmp1155.i1999 = alloca i32, align 4
  %ret1200.i2000 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1200.i2000, metadata !243, metadata !DIExpression()), !dbg !769
  %tmp1201.i2001 = alloca i32, align 4
  %ret1246.i2002 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1246.i2002, metadata !249, metadata !DIExpression()), !dbg !770
  %tmp1247.i2003 = alloca i32, align 4
  %ret1292.i2004 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1292.i2004, metadata !255, metadata !DIExpression()), !dbg !771
  %tmp1293.i2005 = alloca i32, align 4
  %ret1338.i2006 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1338.i2006, metadata !261, metadata !DIExpression()), !dbg !772
  %tmp1339.i2007 = alloca i32, align 4
  %ret1384.i2008 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1384.i2008, metadata !267, metadata !DIExpression()), !dbg !773
  %tmp1385.i2009 = alloca i32, align 4
  %ret1430.i2010 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1430.i2010, metadata !273, metadata !DIExpression()), !dbg !774
  %tmp1431.i2011 = alloca i32, align 4
  %ret1476.i2012 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1476.i2012, metadata !279, metadata !DIExpression()), !dbg !775
  %tmp1477.i2013 = alloca i32, align 4
  %ret1518.i2014 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1518.i2014, metadata !283, metadata !DIExpression()), !dbg !776
  %tmp1519.i2015 = alloca i32, align 4
  %ret1523.i2016 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1523.i2016, metadata !290, metadata !DIExpression()), !dbg !777
  %tmp1524.i2017 = alloca i32, align 4
  %tt1528.i2018 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1528.i2018, metadata !297, metadata !DIExpression()), !dbg !778
  %data.addr.i411 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i411, metadata !44, metadata !DIExpression()), !dbg !779
  %ks.addr.i412 = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i412, metadata !46, metadata !DIExpression()), !dbg !784
  %enc.addr.i413 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i413, metadata !48, metadata !DIExpression()), !dbg !785
  %l.i414 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i414, metadata !50, metadata !DIExpression()), !dbg !786
  %r.i415 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i415, metadata !52, metadata !DIExpression()), !dbg !787
  %t.i416 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i416, metadata !54, metadata !DIExpression()), !dbg !788
  %u.i417 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i417, metadata !56, metadata !DIExpression()), !dbg !789
  %s.i418 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i418, metadata !58, metadata !DIExpression()), !dbg !790
  %tt.i419 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i419, metadata !64, metadata !DIExpression()), !dbg !791
  %ret.i420 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i420, metadata !67, metadata !DIExpression()), !dbg !792
  %tmp.i421 = alloca i32, align 4
  %ret40.i422 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret40.i422, metadata !74, metadata !DIExpression()), !dbg !793
  %tmp41.i423 = alloca i32, align 4
  %ret51.i424 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret51.i424, metadata !91, metadata !DIExpression()), !dbg !794
  %tmp52.i425 = alloca i32, align 4
  %ret96.i426 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret96.i426, metadata !97, metadata !DIExpression()), !dbg !795
  %tmp97.i427 = alloca i32, align 4
  %ret142.i428 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret142.i428, metadata !103, metadata !DIExpression()), !dbg !796
  %tmp143.i429 = alloca i32, align 4
  %ret188.i430 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret188.i430, metadata !109, metadata !DIExpression()), !dbg !797
  %tmp189.i431 = alloca i32, align 4
  %ret234.i432 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret234.i432, metadata !115, metadata !DIExpression()), !dbg !798
  %tmp235.i433 = alloca i32, align 4
  %ret280.i434 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret280.i434, metadata !121, metadata !DIExpression()), !dbg !799
  %tmp281.i435 = alloca i32, align 4
  %ret326.i436 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret326.i436, metadata !127, metadata !DIExpression()), !dbg !800
  %tmp327.i437 = alloca i32, align 4
  %ret372.i438 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret372.i438, metadata !133, metadata !DIExpression()), !dbg !801
  %tmp373.i439 = alloca i32, align 4
  %ret418.i440 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret418.i440, metadata !139, metadata !DIExpression()), !dbg !802
  %tmp419.i441 = alloca i32, align 4
  %ret464.i442 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret464.i442, metadata !145, metadata !DIExpression()), !dbg !803
  %tmp465.i443 = alloca i32, align 4
  %ret510.i444 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret510.i444, metadata !151, metadata !DIExpression()), !dbg !804
  %tmp511.i445 = alloca i32, align 4
  %ret556.i446 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret556.i446, metadata !157, metadata !DIExpression()), !dbg !805
  %tmp557.i447 = alloca i32, align 4
  %ret602.i448 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret602.i448, metadata !163, metadata !DIExpression()), !dbg !806
  %tmp603.i449 = alloca i32, align 4
  %ret648.i450 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret648.i450, metadata !169, metadata !DIExpression()), !dbg !807
  %tmp649.i451 = alloca i32, align 4
  %ret694.i452 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret694.i452, metadata !175, metadata !DIExpression()), !dbg !808
  %tmp695.i453 = alloca i32, align 4
  %ret740.i454 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret740.i454, metadata !181, metadata !DIExpression()), !dbg !809
  %tmp741.i455 = alloca i32, align 4
  %ret786.i456 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret786.i456, metadata !189, metadata !DIExpression()), !dbg !810
  %tmp787.i457 = alloca i32, align 4
  %ret832.i458 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret832.i458, metadata !195, metadata !DIExpression()), !dbg !811
  %tmp833.i459 = alloca i32, align 4
  %ret878.i460 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret878.i460, metadata !201, metadata !DIExpression()), !dbg !812
  %tmp879.i461 = alloca i32, align 4
  %ret924.i462 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret924.i462, metadata !207, metadata !DIExpression()), !dbg !813
  %tmp925.i463 = alloca i32, align 4
  %ret970.i464 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret970.i464, metadata !213, metadata !DIExpression()), !dbg !814
  %tmp971.i465 = alloca i32, align 4
  %ret1016.i466 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1016.i466, metadata !219, metadata !DIExpression()), !dbg !815
  %tmp1017.i467 = alloca i32, align 4
  %ret1062.i468 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1062.i468, metadata !225, metadata !DIExpression()), !dbg !816
  %tmp1063.i469 = alloca i32, align 4
  %ret1108.i470 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1108.i470, metadata !231, metadata !DIExpression()), !dbg !817
  %tmp1109.i471 = alloca i32, align 4
  %ret1154.i472 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1154.i472, metadata !237, metadata !DIExpression()), !dbg !818
  %tmp1155.i473 = alloca i32, align 4
  %ret1200.i474 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1200.i474, metadata !243, metadata !DIExpression()), !dbg !819
  %tmp1201.i475 = alloca i32, align 4
  %ret1246.i476 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1246.i476, metadata !249, metadata !DIExpression()), !dbg !820
  %tmp1247.i477 = alloca i32, align 4
  %ret1292.i478 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1292.i478, metadata !255, metadata !DIExpression()), !dbg !821
  %tmp1293.i479 = alloca i32, align 4
  %ret1338.i480 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1338.i480, metadata !261, metadata !DIExpression()), !dbg !822
  %tmp1339.i481 = alloca i32, align 4
  %ret1384.i482 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1384.i482, metadata !267, metadata !DIExpression()), !dbg !823
  %tmp1385.i483 = alloca i32, align 4
  %ret1430.i484 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1430.i484, metadata !273, metadata !DIExpression()), !dbg !824
  %tmp1431.i485 = alloca i32, align 4
  %ret1476.i486 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1476.i486, metadata !279, metadata !DIExpression()), !dbg !825
  %tmp1477.i487 = alloca i32, align 4
  %ret1518.i488 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1518.i488, metadata !283, metadata !DIExpression()), !dbg !826
  %tmp1519.i489 = alloca i32, align 4
  %ret1523.i490 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1523.i490, metadata !290, metadata !DIExpression()), !dbg !827
  %tmp1524.i491 = alloca i32, align 4
  %tt1528.i492 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1528.i492, metadata !297, metadata !DIExpression()), !dbg !828
  %data.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i, metadata !44, metadata !DIExpression()), !dbg !829
  %ks.addr.i = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i, metadata !46, metadata !DIExpression()), !dbg !834
  %enc.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i, metadata !48, metadata !DIExpression()), !dbg !835
  %l.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i, metadata !50, metadata !DIExpression()), !dbg !836
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !52, metadata !DIExpression()), !dbg !837
  %t.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i, metadata !54, metadata !DIExpression()), !dbg !838
  %u.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i, metadata !56, metadata !DIExpression()), !dbg !839
  %s.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i, metadata !58, metadata !DIExpression()), !dbg !840
  %tt.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i, metadata !64, metadata !DIExpression()), !dbg !841
  %ret.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i, metadata !67, metadata !DIExpression()), !dbg !842
  %tmp.i = alloca i32, align 4
  %ret40.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret40.i, metadata !74, metadata !DIExpression()), !dbg !843
  %tmp41.i = alloca i32, align 4
  %ret51.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret51.i, metadata !91, metadata !DIExpression()), !dbg !844
  %tmp52.i = alloca i32, align 4
  %ret96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret96.i, metadata !97, metadata !DIExpression()), !dbg !845
  %tmp97.i = alloca i32, align 4
  %ret142.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret142.i, metadata !103, metadata !DIExpression()), !dbg !846
  %tmp143.i = alloca i32, align 4
  %ret188.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret188.i, metadata !109, metadata !DIExpression()), !dbg !847
  %tmp189.i = alloca i32, align 4
  %ret234.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret234.i, metadata !115, metadata !DIExpression()), !dbg !848
  %tmp235.i = alloca i32, align 4
  %ret280.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret280.i, metadata !121, metadata !DIExpression()), !dbg !849
  %tmp281.i = alloca i32, align 4
  %ret326.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret326.i, metadata !127, metadata !DIExpression()), !dbg !850
  %tmp327.i = alloca i32, align 4
  %ret372.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret372.i, metadata !133, metadata !DIExpression()), !dbg !851
  %tmp373.i = alloca i32, align 4
  %ret418.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret418.i, metadata !139, metadata !DIExpression()), !dbg !852
  %tmp419.i = alloca i32, align 4
  %ret464.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret464.i, metadata !145, metadata !DIExpression()), !dbg !853
  %tmp465.i = alloca i32, align 4
  %ret510.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret510.i, metadata !151, metadata !DIExpression()), !dbg !854
  %tmp511.i = alloca i32, align 4
  %ret556.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret556.i, metadata !157, metadata !DIExpression()), !dbg !855
  %tmp557.i = alloca i32, align 4
  %ret602.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret602.i, metadata !163, metadata !DIExpression()), !dbg !856
  %tmp603.i = alloca i32, align 4
  %ret648.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret648.i, metadata !169, metadata !DIExpression()), !dbg !857
  %tmp649.i = alloca i32, align 4
  %ret694.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret694.i, metadata !175, metadata !DIExpression()), !dbg !858
  %tmp695.i = alloca i32, align 4
  %ret740.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret740.i, metadata !181, metadata !DIExpression()), !dbg !859
  %tmp741.i = alloca i32, align 4
  %ret786.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret786.i, metadata !189, metadata !DIExpression()), !dbg !860
  %tmp787.i = alloca i32, align 4
  %ret832.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret832.i, metadata !195, metadata !DIExpression()), !dbg !861
  %tmp833.i = alloca i32, align 4
  %ret878.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret878.i, metadata !201, metadata !DIExpression()), !dbg !862
  %tmp879.i = alloca i32, align 4
  %ret924.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret924.i, metadata !207, metadata !DIExpression()), !dbg !863
  %tmp925.i = alloca i32, align 4
  %ret970.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret970.i, metadata !213, metadata !DIExpression()), !dbg !864
  %tmp971.i = alloca i32, align 4
  %ret1016.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1016.i, metadata !219, metadata !DIExpression()), !dbg !865
  %tmp1017.i = alloca i32, align 4
  %ret1062.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1062.i, metadata !225, metadata !DIExpression()), !dbg !866
  %tmp1063.i = alloca i32, align 4
  %ret1108.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1108.i, metadata !231, metadata !DIExpression()), !dbg !867
  %tmp1109.i = alloca i32, align 4
  %ret1154.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1154.i, metadata !237, metadata !DIExpression()), !dbg !868
  %tmp1155.i = alloca i32, align 4
  %ret1200.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1200.i, metadata !243, metadata !DIExpression()), !dbg !869
  %tmp1201.i = alloca i32, align 4
  %ret1246.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1246.i, metadata !249, metadata !DIExpression()), !dbg !870
  %tmp1247.i = alloca i32, align 4
  %ret1292.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1292.i, metadata !255, metadata !DIExpression()), !dbg !871
  %tmp1293.i = alloca i32, align 4
  %ret1338.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1338.i, metadata !261, metadata !DIExpression()), !dbg !872
  %tmp1339.i = alloca i32, align 4
  %ret1384.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1384.i, metadata !267, metadata !DIExpression()), !dbg !873
  %tmp1385.i = alloca i32, align 4
  %ret1430.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1430.i, metadata !273, metadata !DIExpression()), !dbg !874
  %tmp1431.i = alloca i32, align 4
  %ret1476.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1476.i, metadata !279, metadata !DIExpression()), !dbg !875
  %tmp1477.i = alloca i32, align 4
  %ret1518.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1518.i, metadata !283, metadata !DIExpression()), !dbg !876
  %tmp1519.i = alloca i32, align 4
  %ret1523.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1523.i, metadata !290, metadata !DIExpression()), !dbg !877
  %tmp1524.i = alloca i32, align 4
  %tt1528.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1528.i, metadata !297, metadata !DIExpression()), !dbg !878
  %in.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %_schedule.addr = alloca %struct.DES_ks*, align 8
  %ivec.addr = alloca [8 x i8]*, align 8
  %enc.addr = alloca i32, align 4
  %tin0 = alloca i32, align 4
  %tin1 = alloca i32, align 4
  %tout0 = alloca i32, align 4
  %tout1 = alloca i32, align 4
  %xor0 = alloca i32, align 4
  %xor1 = alloca i32, align 4
  %l = alloca i64, align 8
  %tin = alloca [2 x i32], align 4
  %iv = alloca i8*, align 8
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !879, metadata !DIExpression()), !dbg !880
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !881, metadata !DIExpression()), !dbg !882
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !883, metadata !DIExpression()), !dbg !884
  store %struct.DES_ks* %_schedule, %struct.DES_ks** %_schedule.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %_schedule.addr, metadata !885, metadata !DIExpression()), !dbg !886
  store [8 x i8]* %ivec, [8 x i8]** %ivec.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %ivec.addr, metadata !887, metadata !DIExpression()), !dbg !888
  store i32 %enc, i32* %enc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr, metadata !889, metadata !DIExpression()), !dbg !890
  call void @llvm.dbg.declare(metadata i32* %tin0, metadata !891, metadata !DIExpression()), !dbg !892
  call void @llvm.dbg.declare(metadata i32* %tin1, metadata !893, metadata !DIExpression()), !dbg !894
  call void @llvm.dbg.declare(metadata i32* %tout0, metadata !895, metadata !DIExpression()), !dbg !896
  call void @llvm.dbg.declare(metadata i32* %tout1, metadata !897, metadata !DIExpression()), !dbg !898
  call void @llvm.dbg.declare(metadata i32* %xor0, metadata !899, metadata !DIExpression()), !dbg !900
  call void @llvm.dbg.declare(metadata i32* %xor1, metadata !901, metadata !DIExpression()), !dbg !902
  call void @llvm.dbg.declare(metadata i64* %l, metadata !903, metadata !DIExpression()), !dbg !904
  %0 = load i64, i64* %length.addr, align 8, !dbg !905
  store i64 %0, i64* %l, align 8, !dbg !904
  call void @llvm.dbg.declare(metadata [2 x i32]* %tin, metadata !906, metadata !DIExpression()), !dbg !907
  call void @llvm.dbg.declare(metadata i8** %iv, metadata !908, metadata !DIExpression()), !dbg !909
  %1 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !910
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0, !dbg !911
  store i8* %arrayidx, i8** %iv, align 8, !dbg !912
  %2 = load i32, i32* %enc.addr, align 4, !dbg !913
  %tobool = icmp ne i32 %2, 0, !dbg !913
  br i1 %tobool, label %if.then, label %if.else, !dbg !914

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %iv, align 8, !dbg !915
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !915
  store i8* %incdec.ptr, i8** %iv, align 8, !dbg !915
  %4 = load i8, i8* %3, align 1, !dbg !915
  %conv = zext i8 %4 to i32, !dbg !915
  store i32 %conv, i32* %tout0, align 4, !dbg !915
  %5 = load i8*, i8** %iv, align 8, !dbg !915
  %incdec.ptr1 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !915
  store i8* %incdec.ptr1, i8** %iv, align 8, !dbg !915
  %6 = load i8, i8* %5, align 1, !dbg !915
  %conv2 = zext i8 %6 to i32, !dbg !915
  %shl = shl i32 %conv2, 8, !dbg !915
  %7 = load i32, i32* %tout0, align 4, !dbg !915
  %or = or i32 %7, %shl, !dbg !915
  store i32 %or, i32* %tout0, align 4, !dbg !915
  %8 = load i8*, i8** %iv, align 8, !dbg !915
  %incdec.ptr3 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !915
  store i8* %incdec.ptr3, i8** %iv, align 8, !dbg !915
  %9 = load i8, i8* %8, align 1, !dbg !915
  %conv4 = zext i8 %9 to i32, !dbg !915
  %shl5 = shl i32 %conv4, 16, !dbg !915
  %10 = load i32, i32* %tout0, align 4, !dbg !915
  %or6 = or i32 %10, %shl5, !dbg !915
  store i32 %or6, i32* %tout0, align 4, !dbg !915
  %11 = load i8*, i8** %iv, align 8, !dbg !915
  %incdec.ptr7 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !915
  store i8* %incdec.ptr7, i8** %iv, align 8, !dbg !915
  %12 = load i8, i8* %11, align 1, !dbg !915
  %conv8 = zext i8 %12 to i32, !dbg !915
  %shl9 = shl i32 %conv8, 24, !dbg !915
  %13 = load i32, i32* %tout0, align 4, !dbg !915
  %or10 = or i32 %13, %shl9, !dbg !915
  store i32 %or10, i32* %tout0, align 4, !dbg !915
  %14 = load i8*, i8** %iv, align 8, !dbg !916
  %incdec.ptr11 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !916
  store i8* %incdec.ptr11, i8** %iv, align 8, !dbg !916
  %15 = load i8, i8* %14, align 1, !dbg !916
  %conv12 = zext i8 %15 to i32, !dbg !916
  store i32 %conv12, i32* %tout1, align 4, !dbg !916
  %16 = load i8*, i8** %iv, align 8, !dbg !916
  %incdec.ptr13 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !916
  store i8* %incdec.ptr13, i8** %iv, align 8, !dbg !916
  %17 = load i8, i8* %16, align 1, !dbg !916
  %conv14 = zext i8 %17 to i32, !dbg !916
  %shl15 = shl i32 %conv14, 8, !dbg !916
  %18 = load i32, i32* %tout1, align 4, !dbg !916
  %or16 = or i32 %18, %shl15, !dbg !916
  store i32 %or16, i32* %tout1, align 4, !dbg !916
  %19 = load i8*, i8** %iv, align 8, !dbg !916
  %incdec.ptr17 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !916
  store i8* %incdec.ptr17, i8** %iv, align 8, !dbg !916
  %20 = load i8, i8* %19, align 1, !dbg !916
  %conv18 = zext i8 %20 to i32, !dbg !916
  %shl19 = shl i32 %conv18, 16, !dbg !916
  %21 = load i32, i32* %tout1, align 4, !dbg !916
  %or20 = or i32 %21, %shl19, !dbg !916
  store i32 %or20, i32* %tout1, align 4, !dbg !916
  %22 = load i8*, i8** %iv, align 8, !dbg !916
  %incdec.ptr21 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !916
  store i8* %incdec.ptr21, i8** %iv, align 8, !dbg !916
  %23 = load i8, i8* %22, align 1, !dbg !916
  %conv22 = zext i8 %23 to i32, !dbg !916
  %shl23 = shl i32 %conv22, 24, !dbg !916
  %24 = load i32, i32* %tout1, align 4, !dbg !916
  %or24 = or i32 %24, %shl23, !dbg !916
  store i32 %or24, i32* %tout1, align 4, !dbg !916
  %25 = load i64, i64* %l, align 8, !dbg !917
  %sub = sub nsw i64 %25, 8, !dbg !917
  store i64 %sub, i64* %l, align 8, !dbg !917
  br label %for.cond, !dbg !918

for.cond:                                         ; preds = %for.inc, %if.then
  %26 = load i64, i64* %l, align 8, !dbg !919
  %cmp = icmp sge i64 %26, 0, !dbg !920
  br i1 %cmp, label %for.body, label %for.end, !dbg !921

for.body:                                         ; preds = %for.cond
  %27 = load i8*, i8** %in.addr, align 8, !dbg !922
  %incdec.ptr26 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !922
  store i8* %incdec.ptr26, i8** %in.addr, align 8, !dbg !922
  %28 = load i8, i8* %27, align 1, !dbg !922
  %conv27 = zext i8 %28 to i32, !dbg !922
  store i32 %conv27, i32* %tin0, align 4, !dbg !922
  %29 = load i8*, i8** %in.addr, align 8, !dbg !922
  %incdec.ptr28 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !922
  store i8* %incdec.ptr28, i8** %in.addr, align 8, !dbg !922
  %30 = load i8, i8* %29, align 1, !dbg !922
  %conv29 = zext i8 %30 to i32, !dbg !922
  %shl30 = shl i32 %conv29, 8, !dbg !922
  %31 = load i32, i32* %tin0, align 4, !dbg !922
  %or31 = or i32 %31, %shl30, !dbg !922
  store i32 %or31, i32* %tin0, align 4, !dbg !922
  %32 = load i8*, i8** %in.addr, align 8, !dbg !922
  %incdec.ptr32 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !922
  store i8* %incdec.ptr32, i8** %in.addr, align 8, !dbg !922
  %33 = load i8, i8* %32, align 1, !dbg !922
  %conv33 = zext i8 %33 to i32, !dbg !922
  %shl34 = shl i32 %conv33, 16, !dbg !922
  %34 = load i32, i32* %tin0, align 4, !dbg !922
  %or35 = or i32 %34, %shl34, !dbg !922
  store i32 %or35, i32* %tin0, align 4, !dbg !922
  %35 = load i8*, i8** %in.addr, align 8, !dbg !922
  %incdec.ptr36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !922
  store i8* %incdec.ptr36, i8** %in.addr, align 8, !dbg !922
  %36 = load i8, i8* %35, align 1, !dbg !922
  %conv37 = zext i8 %36 to i32, !dbg !922
  %shl38 = shl i32 %conv37, 24, !dbg !922
  %37 = load i32, i32* %tin0, align 4, !dbg !922
  %or39 = or i32 %37, %shl38, !dbg !922
  store i32 %or39, i32* %tin0, align 4, !dbg !922
  %38 = load i8*, i8** %in.addr, align 8, !dbg !923
  %incdec.ptr40 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !923
  store i8* %incdec.ptr40, i8** %in.addr, align 8, !dbg !923
  %39 = load i8, i8* %38, align 1, !dbg !923
  %conv41 = zext i8 %39 to i32, !dbg !923
  store i32 %conv41, i32* %tin1, align 4, !dbg !923
  %40 = load i8*, i8** %in.addr, align 8, !dbg !923
  %incdec.ptr42 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !923
  store i8* %incdec.ptr42, i8** %in.addr, align 8, !dbg !923
  %41 = load i8, i8* %40, align 1, !dbg !923
  %conv43 = zext i8 %41 to i32, !dbg !923
  %shl44 = shl i32 %conv43, 8, !dbg !923
  %42 = load i32, i32* %tin1, align 4, !dbg !923
  %or45 = or i32 %42, %shl44, !dbg !923
  store i32 %or45, i32* %tin1, align 4, !dbg !923
  %43 = load i8*, i8** %in.addr, align 8, !dbg !923
  %incdec.ptr46 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !923
  store i8* %incdec.ptr46, i8** %in.addr, align 8, !dbg !923
  %44 = load i8, i8* %43, align 1, !dbg !923
  %conv47 = zext i8 %44 to i32, !dbg !923
  %shl48 = shl i32 %conv47, 16, !dbg !923
  %45 = load i32, i32* %tin1, align 4, !dbg !923
  %or49 = or i32 %45, %shl48, !dbg !923
  store i32 %or49, i32* %tin1, align 4, !dbg !923
  %46 = load i8*, i8** %in.addr, align 8, !dbg !923
  %incdec.ptr50 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !923
  store i8* %incdec.ptr50, i8** %in.addr, align 8, !dbg !923
  %47 = load i8, i8* %46, align 1, !dbg !923
  %conv51 = zext i8 %47 to i32, !dbg !923
  %shl52 = shl i32 %conv51, 24, !dbg !923
  %48 = load i32, i32* %tin1, align 4, !dbg !923
  %or53 = or i32 %48, %shl52, !dbg !923
  store i32 %or53, i32* %tin1, align 4, !dbg !923
  %49 = load i32, i32* %tout0, align 4, !dbg !924
  %50 = load i32, i32* %tin0, align 4, !dbg !925
  %xor = xor i32 %50, %49, !dbg !925
  store i32 %xor, i32* %tin0, align 4, !dbg !925
  %51 = load i32, i32* %tin0, align 4, !dbg !926
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !927
  store i32 %51, i32* %arrayidx54, align 4, !dbg !928
  %52 = load i32, i32* %tout1, align 4, !dbg !929
  %53 = load i32, i32* %tin1, align 4, !dbg !930
  %xor55 = xor i32 %53, %52, !dbg !930
  store i32 %xor55, i32* %tin1, align 4, !dbg !930
  %54 = load i32, i32* %tin1, align 4, !dbg !931
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !932
  store i32 %54, i32* %arrayidx56, align 4, !dbg !933
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !934
  %55 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8, !dbg !935
  store i32* %arraydecay, i32** %data.addr.i, align 8
  store %struct.DES_ks* %55, %struct.DES_ks** %ks.addr.i, align 8
  store i32 1, i32* %enc.addr.i, align 4
  %56 = load i32*, i32** %data.addr.i, align 8, !dbg !936
  %57 = load i32, i32* %56, align 4, !dbg !936
  store i32 %57, i32* %r.i, align 4, !dbg !937
  %58 = load i32*, i32** %data.addr.i, align 8, !dbg !938
  %arrayidx1.i = getelementptr inbounds i32, i32* %58, i64 1, !dbg !938
  %59 = load i32, i32* %arrayidx1.i, align 4, !dbg !938
  store i32 %59, i32* %l.i, align 4, !dbg !939
  %60 = load i32, i32* %l.i, align 4, !dbg !841
  %shr.i = lshr i32 %60, 4, !dbg !841
  %61 = load i32, i32* %r.i, align 4, !dbg !841
  %xor.i = xor i32 %shr.i, %61, !dbg !841
  %conv.i = zext i32 %xor.i to i64, !dbg !841
  %and.i = and i64 %conv.i, 252645135, !dbg !841
  %conv2.i = trunc i64 %and.i to i32, !dbg !841
  store i32 %conv2.i, i32* %tt.i, align 4, !dbg !841
  %62 = load i32, i32* %tt.i, align 4, !dbg !841
  %63 = load i32, i32* %r.i, align 4, !dbg !841
  %xor3.i = xor i32 %63, %62, !dbg !841
  store i32 %xor3.i, i32* %r.i, align 4, !dbg !841
  %64 = load i32, i32* %tt.i, align 4, !dbg !841
  %shl.i = shl i32 %64, 4, !dbg !841
  %65 = load i32, i32* %l.i, align 4, !dbg !841
  %xor4.i = xor i32 %65, %shl.i, !dbg !841
  store i32 %xor4.i, i32* %l.i, align 4, !dbg !841
  %66 = load i32, i32* %r.i, align 4, !dbg !841
  %shr5.i = lshr i32 %66, 16, !dbg !841
  %67 = load i32, i32* %l.i, align 4, !dbg !841
  %xor6.i = xor i32 %shr5.i, %67, !dbg !841
  %conv7.i = zext i32 %xor6.i to i64, !dbg !841
  %and8.i = and i64 %conv7.i, 65535, !dbg !841
  %conv9.i = trunc i64 %and8.i to i32, !dbg !841
  store i32 %conv9.i, i32* %tt.i, align 4, !dbg !841
  %68 = load i32, i32* %tt.i, align 4, !dbg !841
  %69 = load i32, i32* %l.i, align 4, !dbg !841
  %xor10.i = xor i32 %69, %68, !dbg !841
  store i32 %xor10.i, i32* %l.i, align 4, !dbg !841
  %70 = load i32, i32* %tt.i, align 4, !dbg !841
  %shl11.i = shl i32 %70, 16, !dbg !841
  %71 = load i32, i32* %r.i, align 4, !dbg !841
  %xor12.i = xor i32 %71, %shl11.i, !dbg !841
  store i32 %xor12.i, i32* %r.i, align 4, !dbg !841
  %72 = load i32, i32* %l.i, align 4, !dbg !841
  %shr13.i = lshr i32 %72, 2, !dbg !841
  %73 = load i32, i32* %r.i, align 4, !dbg !841
  %xor14.i = xor i32 %shr13.i, %73, !dbg !841
  %conv15.i = zext i32 %xor14.i to i64, !dbg !841
  %and16.i = and i64 %conv15.i, 858993459, !dbg !841
  %conv17.i = trunc i64 %and16.i to i32, !dbg !841
  store i32 %conv17.i, i32* %tt.i, align 4, !dbg !841
  %74 = load i32, i32* %tt.i, align 4, !dbg !841
  %75 = load i32, i32* %r.i, align 4, !dbg !841
  %xor18.i = xor i32 %75, %74, !dbg !841
  store i32 %xor18.i, i32* %r.i, align 4, !dbg !841
  %76 = load i32, i32* %tt.i, align 4, !dbg !841
  %shl19.i = shl i32 %76, 2, !dbg !841
  %77 = load i32, i32* %l.i, align 4, !dbg !841
  %xor20.i = xor i32 %77, %shl19.i, !dbg !841
  store i32 %xor20.i, i32* %l.i, align 4, !dbg !841
  %78 = load i32, i32* %r.i, align 4, !dbg !841
  %shr21.i = lshr i32 %78, 8, !dbg !841
  %79 = load i32, i32* %l.i, align 4, !dbg !841
  %xor22.i = xor i32 %shr21.i, %79, !dbg !841
  %conv23.i = zext i32 %xor22.i to i64, !dbg !841
  %and24.i = and i64 %conv23.i, 16711935, !dbg !841
  %conv25.i = trunc i64 %and24.i to i32, !dbg !841
  store i32 %conv25.i, i32* %tt.i, align 4, !dbg !841
  %80 = load i32, i32* %tt.i, align 4, !dbg !841
  %81 = load i32, i32* %l.i, align 4, !dbg !841
  %xor26.i = xor i32 %81, %80, !dbg !841
  store i32 %xor26.i, i32* %l.i, align 4, !dbg !841
  %82 = load i32, i32* %tt.i, align 4, !dbg !841
  %shl27.i = shl i32 %82, 8, !dbg !841
  %83 = load i32, i32* %r.i, align 4, !dbg !841
  %xor28.i = xor i32 %83, %shl27.i, !dbg !841
  store i32 %xor28.i, i32* %r.i, align 4, !dbg !841
  %84 = load i32, i32* %l.i, align 4, !dbg !841
  %shr29.i = lshr i32 %84, 1, !dbg !841
  %85 = load i32, i32* %r.i, align 4, !dbg !841
  %xor30.i = xor i32 %shr29.i, %85, !dbg !841
  %conv31.i = zext i32 %xor30.i to i64, !dbg !841
  %and32.i = and i64 %conv31.i, 1431655765, !dbg !841
  %conv33.i = trunc i64 %and32.i to i32, !dbg !841
  store i32 %conv33.i, i32* %tt.i, align 4, !dbg !841
  %86 = load i32, i32* %tt.i, align 4, !dbg !841
  %87 = load i32, i32* %r.i, align 4, !dbg !841
  %xor34.i = xor i32 %87, %86, !dbg !841
  store i32 %xor34.i, i32* %r.i, align 4, !dbg !841
  %88 = load i32, i32* %tt.i, align 4, !dbg !841
  %shl35.i = shl i32 %88, 1, !dbg !841
  %89 = load i32, i32* %l.i, align 4, !dbg !841
  %xor36.i = xor i32 %89, %shl35.i, !dbg !841
  store i32 %xor36.i, i32* %l.i, align 4, !dbg !841
  %90 = load i32, i32* %r.i, align 4, !dbg !842
  %91 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %90) #5, !dbg !842, !srcloc !70
  store i32 %91, i32* %ret.i, align 4, !dbg !842
  %92 = load i32, i32* %ret.i, align 4, !dbg !842
  store i32 %92, i32* %tmp.i, align 4, !dbg !842
  %93 = load i32, i32* %tmp.i, align 4, !dbg !842
  %conv37.i = zext i32 %93 to i64, !dbg !940
  %and38.i = and i64 %conv37.i, 4294967295, !dbg !941
  %conv39.i = trunc i64 %and38.i to i32, !dbg !940
  store i32 %conv39.i, i32* %r.i, align 4, !dbg !942
  %94 = load i32, i32* %l.i, align 4, !dbg !843
  %95 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %94) #5, !dbg !843, !srcloc !77
  store i32 %95, i32* %ret40.i, align 4, !dbg !843
  %96 = load i32, i32* %ret40.i, align 4, !dbg !843
  store i32 %96, i32* %tmp41.i, align 4, !dbg !843
  %97 = load i32, i32* %tmp41.i, align 4, !dbg !843
  %conv42.i = zext i32 %97 to i64, !dbg !943
  %and43.i = and i64 %conv42.i, 4294967295, !dbg !944
  %conv44.i = trunc i64 %and43.i to i32, !dbg !943
  store i32 %conv44.i, i32* %l.i, align 4, !dbg !945
  %98 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i, align 8, !dbg !946
  %ks45.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %98, i32 0, i32 0, !dbg !947
  %arraydecay.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i, i64 0, i64 0, !dbg !948
  %deslong.i = bitcast %union.anon* %arraydecay.i to [2 x i32]*, !dbg !948
  %arraydecay46.i = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i, i64 0, i64 0, !dbg !946
  store i32* %arraydecay46.i, i32** %s.i, align 8, !dbg !949
  %99 = load i32, i32* %enc.addr.i, align 4, !dbg !950
  %tobool.i = icmp ne i32 %99, 0, !dbg !950
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !951

if.then.i:                                        ; preds = %for.body
  %100 = load i32, i32* %r.i, align 4, !dbg !952
  %101 = load i32*, i32** %s.i, align 8, !dbg !952
  %102 = load i32, i32* %101, align 4, !dbg !952
  %xor48.i = xor i32 %100, %102, !dbg !952
  store i32 %xor48.i, i32* %u.i, align 4, !dbg !952
  %103 = load i32, i32* %r.i, align 4, !dbg !952
  %104 = load i32*, i32** %s.i, align 8, !dbg !952
  %arrayidx49.i = getelementptr inbounds i32, i32* %104, i64 1, !dbg !952
  %105 = load i32, i32* %arrayidx49.i, align 4, !dbg !952
  %xor50.i = xor i32 %103, %105, !dbg !952
  store i32 %xor50.i, i32* %t.i, align 4, !dbg !952
  %106 = load i32, i32* %t.i, align 4, !dbg !844
  %107 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %106) #5, !dbg !844, !srcloc !94
  store i32 %107, i32* %ret51.i, align 4, !dbg !844
  %108 = load i32, i32* %ret51.i, align 4, !dbg !844
  store i32 %108, i32* %tmp52.i, align 4, !dbg !844
  %109 = load i32, i32* %tmp52.i, align 4, !dbg !844
  store i32 %109, i32* %t.i, align 4, !dbg !952
  %110 = load i32, i32* %u.i, align 4, !dbg !952
  %shr53.i = lshr i32 %110, 2, !dbg !952
  %and54.i = and i32 %shr53.i, 63, !dbg !952
  %idxprom.i = zext i32 %and54.i to i64, !dbg !952
  %arrayidx55.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i, !dbg !952
  %111 = load i32, i32* %arrayidx55.i, align 4, !dbg !952
  %112 = load i32, i32* %u.i, align 4, !dbg !952
  %shr56.i = lshr i32 %112, 10, !dbg !952
  %and57.i = and i32 %shr56.i, 63, !dbg !952
  %idxprom58.i = zext i32 %and57.i to i64, !dbg !952
  %arrayidx59.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i, !dbg !952
  %113 = load i32, i32* %arrayidx59.i, align 4, !dbg !952
  %xor60.i = xor i32 %111, %113, !dbg !952
  %114 = load i32, i32* %u.i, align 4, !dbg !952
  %shr61.i = lshr i32 %114, 18, !dbg !952
  %and62.i = and i32 %shr61.i, 63, !dbg !952
  %idxprom63.i = zext i32 %and62.i to i64, !dbg !952
  %arrayidx64.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i, !dbg !952
  %115 = load i32, i32* %arrayidx64.i, align 4, !dbg !952
  %xor65.i = xor i32 %xor60.i, %115, !dbg !952
  %116 = load i32, i32* %u.i, align 4, !dbg !952
  %shr66.i = lshr i32 %116, 26, !dbg !952
  %idxprom68.i = zext i32 %shr66.i to i64, !dbg !952
  %arrayidx69.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i, !dbg !952
  %117 = load i32, i32* %arrayidx69.i, align 4, !dbg !952
  %xor70.i = xor i32 %xor65.i, %117, !dbg !952
  %118 = load i32, i32* %t.i, align 4, !dbg !952
  %shr71.i = lshr i32 %118, 2, !dbg !952
  %and72.i = and i32 %shr71.i, 63, !dbg !952
  %idxprom73.i = zext i32 %and72.i to i64, !dbg !952
  %arrayidx74.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i, !dbg !952
  %119 = load i32, i32* %arrayidx74.i, align 4, !dbg !952
  %xor75.i = xor i32 %xor70.i, %119, !dbg !952
  %120 = load i32, i32* %t.i, align 4, !dbg !952
  %shr76.i = lshr i32 %120, 10, !dbg !952
  %and77.i = and i32 %shr76.i, 63, !dbg !952
  %idxprom78.i = zext i32 %and77.i to i64, !dbg !952
  %arrayidx79.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i, !dbg !952
  %121 = load i32, i32* %arrayidx79.i, align 4, !dbg !952
  %xor80.i = xor i32 %xor75.i, %121, !dbg !952
  %122 = load i32, i32* %t.i, align 4, !dbg !952
  %shr81.i = lshr i32 %122, 18, !dbg !952
  %and82.i = and i32 %shr81.i, 63, !dbg !952
  %idxprom83.i = zext i32 %and82.i to i64, !dbg !952
  %arrayidx84.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i, !dbg !952
  %123 = load i32, i32* %arrayidx84.i, align 4, !dbg !952
  %xor85.i = xor i32 %xor80.i, %123, !dbg !952
  %124 = load i32, i32* %t.i, align 4, !dbg !952
  %shr86.i = lshr i32 %124, 26, !dbg !952
  %idxprom88.i = zext i32 %shr86.i to i64, !dbg !952
  %arrayidx89.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i, !dbg !952
  %125 = load i32, i32* %arrayidx89.i, align 4, !dbg !952
  %xor90.i = xor i32 %xor85.i, %125, !dbg !952
  %126 = load i32, i32* %l.i, align 4, !dbg !952
  %xor91.i = xor i32 %126, %xor90.i, !dbg !952
  store i32 %xor91.i, i32* %l.i, align 4, !dbg !952
  %127 = load i32, i32* %l.i, align 4, !dbg !953
  %128 = load i32*, i32** %s.i, align 8, !dbg !953
  %arrayidx92.i = getelementptr inbounds i32, i32* %128, i64 2, !dbg !953
  %129 = load i32, i32* %arrayidx92.i, align 4, !dbg !953
  %xor93.i = xor i32 %127, %129, !dbg !953
  store i32 %xor93.i, i32* %u.i, align 4, !dbg !953
  %130 = load i32, i32* %l.i, align 4, !dbg !953
  %131 = load i32*, i32** %s.i, align 8, !dbg !953
  %arrayidx94.i = getelementptr inbounds i32, i32* %131, i64 3, !dbg !953
  %132 = load i32, i32* %arrayidx94.i, align 4, !dbg !953
  %xor95.i = xor i32 %130, %132, !dbg !953
  store i32 %xor95.i, i32* %t.i, align 4, !dbg !953
  %133 = load i32, i32* %t.i, align 4, !dbg !845
  %134 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %133) #5, !dbg !845, !srcloc !100
  store i32 %134, i32* %ret96.i, align 4, !dbg !845
  %135 = load i32, i32* %ret96.i, align 4, !dbg !845
  store i32 %135, i32* %tmp97.i, align 4, !dbg !845
  %136 = load i32, i32* %tmp97.i, align 4, !dbg !845
  store i32 %136, i32* %t.i, align 4, !dbg !953
  %137 = load i32, i32* %u.i, align 4, !dbg !953
  %shr98.i = lshr i32 %137, 2, !dbg !953
  %and99.i = and i32 %shr98.i, 63, !dbg !953
  %idxprom100.i = zext i32 %and99.i to i64, !dbg !953
  %arrayidx101.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i, !dbg !953
  %138 = load i32, i32* %arrayidx101.i, align 4, !dbg !953
  %139 = load i32, i32* %u.i, align 4, !dbg !953
  %shr102.i = lshr i32 %139, 10, !dbg !953
  %and103.i = and i32 %shr102.i, 63, !dbg !953
  %idxprom104.i = zext i32 %and103.i to i64, !dbg !953
  %arrayidx105.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i, !dbg !953
  %140 = load i32, i32* %arrayidx105.i, align 4, !dbg !953
  %xor106.i = xor i32 %138, %140, !dbg !953
  %141 = load i32, i32* %u.i, align 4, !dbg !953
  %shr107.i = lshr i32 %141, 18, !dbg !953
  %and108.i = and i32 %shr107.i, 63, !dbg !953
  %idxprom109.i = zext i32 %and108.i to i64, !dbg !953
  %arrayidx110.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i, !dbg !953
  %142 = load i32, i32* %arrayidx110.i, align 4, !dbg !953
  %xor111.i = xor i32 %xor106.i, %142, !dbg !953
  %143 = load i32, i32* %u.i, align 4, !dbg !953
  %shr112.i = lshr i32 %143, 26, !dbg !953
  %idxprom114.i = zext i32 %shr112.i to i64, !dbg !953
  %arrayidx115.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i, !dbg !953
  %144 = load i32, i32* %arrayidx115.i, align 4, !dbg !953
  %xor116.i = xor i32 %xor111.i, %144, !dbg !953
  %145 = load i32, i32* %t.i, align 4, !dbg !953
  %shr117.i = lshr i32 %145, 2, !dbg !953
  %and118.i = and i32 %shr117.i, 63, !dbg !953
  %idxprom119.i = zext i32 %and118.i to i64, !dbg !953
  %arrayidx120.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i, !dbg !953
  %146 = load i32, i32* %arrayidx120.i, align 4, !dbg !953
  %xor121.i = xor i32 %xor116.i, %146, !dbg !953
  %147 = load i32, i32* %t.i, align 4, !dbg !953
  %shr122.i = lshr i32 %147, 10, !dbg !953
  %and123.i = and i32 %shr122.i, 63, !dbg !953
  %idxprom124.i = zext i32 %and123.i to i64, !dbg !953
  %arrayidx125.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i, !dbg !953
  %148 = load i32, i32* %arrayidx125.i, align 4, !dbg !953
  %xor126.i = xor i32 %xor121.i, %148, !dbg !953
  %149 = load i32, i32* %t.i, align 4, !dbg !953
  %shr127.i = lshr i32 %149, 18, !dbg !953
  %and128.i = and i32 %shr127.i, 63, !dbg !953
  %idxprom129.i = zext i32 %and128.i to i64, !dbg !953
  %arrayidx130.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i, !dbg !953
  %150 = load i32, i32* %arrayidx130.i, align 4, !dbg !953
  %xor131.i = xor i32 %xor126.i, %150, !dbg !953
  %151 = load i32, i32* %t.i, align 4, !dbg !953
  %shr132.i = lshr i32 %151, 26, !dbg !953
  %idxprom134.i = zext i32 %shr132.i to i64, !dbg !953
  %arrayidx135.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i, !dbg !953
  %152 = load i32, i32* %arrayidx135.i, align 4, !dbg !953
  %xor136.i = xor i32 %xor131.i, %152, !dbg !953
  %153 = load i32, i32* %r.i, align 4, !dbg !953
  %xor137.i = xor i32 %153, %xor136.i, !dbg !953
  store i32 %xor137.i, i32* %r.i, align 4, !dbg !953
  %154 = load i32, i32* %r.i, align 4, !dbg !954
  %155 = load i32*, i32** %s.i, align 8, !dbg !954
  %arrayidx138.i = getelementptr inbounds i32, i32* %155, i64 4, !dbg !954
  %156 = load i32, i32* %arrayidx138.i, align 4, !dbg !954
  %xor139.i = xor i32 %154, %156, !dbg !954
  store i32 %xor139.i, i32* %u.i, align 4, !dbg !954
  %157 = load i32, i32* %r.i, align 4, !dbg !954
  %158 = load i32*, i32** %s.i, align 8, !dbg !954
  %arrayidx140.i = getelementptr inbounds i32, i32* %158, i64 5, !dbg !954
  %159 = load i32, i32* %arrayidx140.i, align 4, !dbg !954
  %xor141.i = xor i32 %157, %159, !dbg !954
  store i32 %xor141.i, i32* %t.i, align 4, !dbg !954
  %160 = load i32, i32* %t.i, align 4, !dbg !846
  %161 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %160) #5, !dbg !846, !srcloc !106
  store i32 %161, i32* %ret142.i, align 4, !dbg !846
  %162 = load i32, i32* %ret142.i, align 4, !dbg !846
  store i32 %162, i32* %tmp143.i, align 4, !dbg !846
  %163 = load i32, i32* %tmp143.i, align 4, !dbg !846
  store i32 %163, i32* %t.i, align 4, !dbg !954
  %164 = load i32, i32* %u.i, align 4, !dbg !954
  %shr144.i = lshr i32 %164, 2, !dbg !954
  %and145.i = and i32 %shr144.i, 63, !dbg !954
  %idxprom146.i = zext i32 %and145.i to i64, !dbg !954
  %arrayidx147.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i, !dbg !954
  %165 = load i32, i32* %arrayidx147.i, align 4, !dbg !954
  %166 = load i32, i32* %u.i, align 4, !dbg !954
  %shr148.i = lshr i32 %166, 10, !dbg !954
  %and149.i = and i32 %shr148.i, 63, !dbg !954
  %idxprom150.i = zext i32 %and149.i to i64, !dbg !954
  %arrayidx151.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i, !dbg !954
  %167 = load i32, i32* %arrayidx151.i, align 4, !dbg !954
  %xor152.i = xor i32 %165, %167, !dbg !954
  %168 = load i32, i32* %u.i, align 4, !dbg !954
  %shr153.i = lshr i32 %168, 18, !dbg !954
  %and154.i = and i32 %shr153.i, 63, !dbg !954
  %idxprom155.i = zext i32 %and154.i to i64, !dbg !954
  %arrayidx156.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i, !dbg !954
  %169 = load i32, i32* %arrayidx156.i, align 4, !dbg !954
  %xor157.i = xor i32 %xor152.i, %169, !dbg !954
  %170 = load i32, i32* %u.i, align 4, !dbg !954
  %shr158.i = lshr i32 %170, 26, !dbg !954
  %idxprom160.i = zext i32 %shr158.i to i64, !dbg !954
  %arrayidx161.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i, !dbg !954
  %171 = load i32, i32* %arrayidx161.i, align 4, !dbg !954
  %xor162.i = xor i32 %xor157.i, %171, !dbg !954
  %172 = load i32, i32* %t.i, align 4, !dbg !954
  %shr163.i = lshr i32 %172, 2, !dbg !954
  %and164.i = and i32 %shr163.i, 63, !dbg !954
  %idxprom165.i = zext i32 %and164.i to i64, !dbg !954
  %arrayidx166.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i, !dbg !954
  %173 = load i32, i32* %arrayidx166.i, align 4, !dbg !954
  %xor167.i = xor i32 %xor162.i, %173, !dbg !954
  %174 = load i32, i32* %t.i, align 4, !dbg !954
  %shr168.i = lshr i32 %174, 10, !dbg !954
  %and169.i = and i32 %shr168.i, 63, !dbg !954
  %idxprom170.i = zext i32 %and169.i to i64, !dbg !954
  %arrayidx171.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i, !dbg !954
  %175 = load i32, i32* %arrayidx171.i, align 4, !dbg !954
  %xor172.i = xor i32 %xor167.i, %175, !dbg !954
  %176 = load i32, i32* %t.i, align 4, !dbg !954
  %shr173.i = lshr i32 %176, 18, !dbg !954
  %and174.i = and i32 %shr173.i, 63, !dbg !954
  %idxprom175.i = zext i32 %and174.i to i64, !dbg !954
  %arrayidx176.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i, !dbg !954
  %177 = load i32, i32* %arrayidx176.i, align 4, !dbg !954
  %xor177.i = xor i32 %xor172.i, %177, !dbg !954
  %178 = load i32, i32* %t.i, align 4, !dbg !954
  %shr178.i = lshr i32 %178, 26, !dbg !954
  %idxprom180.i = zext i32 %shr178.i to i64, !dbg !954
  %arrayidx181.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i, !dbg !954
  %179 = load i32, i32* %arrayidx181.i, align 4, !dbg !954
  %xor182.i = xor i32 %xor177.i, %179, !dbg !954
  %180 = load i32, i32* %l.i, align 4, !dbg !954
  %xor183.i = xor i32 %180, %xor182.i, !dbg !954
  store i32 %xor183.i, i32* %l.i, align 4, !dbg !954
  %181 = load i32, i32* %l.i, align 4, !dbg !955
  %182 = load i32*, i32** %s.i, align 8, !dbg !955
  %arrayidx184.i = getelementptr inbounds i32, i32* %182, i64 6, !dbg !955
  %183 = load i32, i32* %arrayidx184.i, align 4, !dbg !955
  %xor185.i = xor i32 %181, %183, !dbg !955
  store i32 %xor185.i, i32* %u.i, align 4, !dbg !955
  %184 = load i32, i32* %l.i, align 4, !dbg !955
  %185 = load i32*, i32** %s.i, align 8, !dbg !955
  %arrayidx186.i = getelementptr inbounds i32, i32* %185, i64 7, !dbg !955
  %186 = load i32, i32* %arrayidx186.i, align 4, !dbg !955
  %xor187.i = xor i32 %184, %186, !dbg !955
  store i32 %xor187.i, i32* %t.i, align 4, !dbg !955
  %187 = load i32, i32* %t.i, align 4, !dbg !847
  %188 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %187) #5, !dbg !847, !srcloc !112
  store i32 %188, i32* %ret188.i, align 4, !dbg !847
  %189 = load i32, i32* %ret188.i, align 4, !dbg !847
  store i32 %189, i32* %tmp189.i, align 4, !dbg !847
  %190 = load i32, i32* %tmp189.i, align 4, !dbg !847
  store i32 %190, i32* %t.i, align 4, !dbg !955
  %191 = load i32, i32* %u.i, align 4, !dbg !955
  %shr190.i = lshr i32 %191, 2, !dbg !955
  %and191.i = and i32 %shr190.i, 63, !dbg !955
  %idxprom192.i = zext i32 %and191.i to i64, !dbg !955
  %arrayidx193.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i, !dbg !955
  %192 = load i32, i32* %arrayidx193.i, align 4, !dbg !955
  %193 = load i32, i32* %u.i, align 4, !dbg !955
  %shr194.i = lshr i32 %193, 10, !dbg !955
  %and195.i = and i32 %shr194.i, 63, !dbg !955
  %idxprom196.i = zext i32 %and195.i to i64, !dbg !955
  %arrayidx197.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i, !dbg !955
  %194 = load i32, i32* %arrayidx197.i, align 4, !dbg !955
  %xor198.i = xor i32 %192, %194, !dbg !955
  %195 = load i32, i32* %u.i, align 4, !dbg !955
  %shr199.i = lshr i32 %195, 18, !dbg !955
  %and200.i = and i32 %shr199.i, 63, !dbg !955
  %idxprom201.i = zext i32 %and200.i to i64, !dbg !955
  %arrayidx202.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i, !dbg !955
  %196 = load i32, i32* %arrayidx202.i, align 4, !dbg !955
  %xor203.i = xor i32 %xor198.i, %196, !dbg !955
  %197 = load i32, i32* %u.i, align 4, !dbg !955
  %shr204.i = lshr i32 %197, 26, !dbg !955
  %idxprom206.i = zext i32 %shr204.i to i64, !dbg !955
  %arrayidx207.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i, !dbg !955
  %198 = load i32, i32* %arrayidx207.i, align 4, !dbg !955
  %xor208.i = xor i32 %xor203.i, %198, !dbg !955
  %199 = load i32, i32* %t.i, align 4, !dbg !955
  %shr209.i = lshr i32 %199, 2, !dbg !955
  %and210.i = and i32 %shr209.i, 63, !dbg !955
  %idxprom211.i = zext i32 %and210.i to i64, !dbg !955
  %arrayidx212.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i, !dbg !955
  %200 = load i32, i32* %arrayidx212.i, align 4, !dbg !955
  %xor213.i = xor i32 %xor208.i, %200, !dbg !955
  %201 = load i32, i32* %t.i, align 4, !dbg !955
  %shr214.i = lshr i32 %201, 10, !dbg !955
  %and215.i = and i32 %shr214.i, 63, !dbg !955
  %idxprom216.i = zext i32 %and215.i to i64, !dbg !955
  %arrayidx217.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i, !dbg !955
  %202 = load i32, i32* %arrayidx217.i, align 4, !dbg !955
  %xor218.i = xor i32 %xor213.i, %202, !dbg !955
  %203 = load i32, i32* %t.i, align 4, !dbg !955
  %shr219.i = lshr i32 %203, 18, !dbg !955
  %and220.i = and i32 %shr219.i, 63, !dbg !955
  %idxprom221.i = zext i32 %and220.i to i64, !dbg !955
  %arrayidx222.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i, !dbg !955
  %204 = load i32, i32* %arrayidx222.i, align 4, !dbg !955
  %xor223.i = xor i32 %xor218.i, %204, !dbg !955
  %205 = load i32, i32* %t.i, align 4, !dbg !955
  %shr224.i = lshr i32 %205, 26, !dbg !955
  %idxprom226.i = zext i32 %shr224.i to i64, !dbg !955
  %arrayidx227.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i, !dbg !955
  %206 = load i32, i32* %arrayidx227.i, align 4, !dbg !955
  %xor228.i = xor i32 %xor223.i, %206, !dbg !955
  %207 = load i32, i32* %r.i, align 4, !dbg !955
  %xor229.i = xor i32 %207, %xor228.i, !dbg !955
  store i32 %xor229.i, i32* %r.i, align 4, !dbg !955
  %208 = load i32, i32* %r.i, align 4, !dbg !956
  %209 = load i32*, i32** %s.i, align 8, !dbg !956
  %arrayidx230.i = getelementptr inbounds i32, i32* %209, i64 8, !dbg !956
  %210 = load i32, i32* %arrayidx230.i, align 4, !dbg !956
  %xor231.i = xor i32 %208, %210, !dbg !956
  store i32 %xor231.i, i32* %u.i, align 4, !dbg !956
  %211 = load i32, i32* %r.i, align 4, !dbg !956
  %212 = load i32*, i32** %s.i, align 8, !dbg !956
  %arrayidx232.i = getelementptr inbounds i32, i32* %212, i64 9, !dbg !956
  %213 = load i32, i32* %arrayidx232.i, align 4, !dbg !956
  %xor233.i = xor i32 %211, %213, !dbg !956
  store i32 %xor233.i, i32* %t.i, align 4, !dbg !956
  %214 = load i32, i32* %t.i, align 4, !dbg !848
  %215 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %214) #5, !dbg !848, !srcloc !118
  store i32 %215, i32* %ret234.i, align 4, !dbg !848
  %216 = load i32, i32* %ret234.i, align 4, !dbg !848
  store i32 %216, i32* %tmp235.i, align 4, !dbg !848
  %217 = load i32, i32* %tmp235.i, align 4, !dbg !848
  store i32 %217, i32* %t.i, align 4, !dbg !956
  %218 = load i32, i32* %u.i, align 4, !dbg !956
  %shr236.i = lshr i32 %218, 2, !dbg !956
  %and237.i = and i32 %shr236.i, 63, !dbg !956
  %idxprom238.i = zext i32 %and237.i to i64, !dbg !956
  %arrayidx239.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i, !dbg !956
  %219 = load i32, i32* %arrayidx239.i, align 4, !dbg !956
  %220 = load i32, i32* %u.i, align 4, !dbg !956
  %shr240.i = lshr i32 %220, 10, !dbg !956
  %and241.i = and i32 %shr240.i, 63, !dbg !956
  %idxprom242.i = zext i32 %and241.i to i64, !dbg !956
  %arrayidx243.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i, !dbg !956
  %221 = load i32, i32* %arrayidx243.i, align 4, !dbg !956
  %xor244.i = xor i32 %219, %221, !dbg !956
  %222 = load i32, i32* %u.i, align 4, !dbg !956
  %shr245.i = lshr i32 %222, 18, !dbg !956
  %and246.i = and i32 %shr245.i, 63, !dbg !956
  %idxprom247.i = zext i32 %and246.i to i64, !dbg !956
  %arrayidx248.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i, !dbg !956
  %223 = load i32, i32* %arrayidx248.i, align 4, !dbg !956
  %xor249.i = xor i32 %xor244.i, %223, !dbg !956
  %224 = load i32, i32* %u.i, align 4, !dbg !956
  %shr250.i = lshr i32 %224, 26, !dbg !956
  %idxprom252.i = zext i32 %shr250.i to i64, !dbg !956
  %arrayidx253.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i, !dbg !956
  %225 = load i32, i32* %arrayidx253.i, align 4, !dbg !956
  %xor254.i = xor i32 %xor249.i, %225, !dbg !956
  %226 = load i32, i32* %t.i, align 4, !dbg !956
  %shr255.i = lshr i32 %226, 2, !dbg !956
  %and256.i = and i32 %shr255.i, 63, !dbg !956
  %idxprom257.i = zext i32 %and256.i to i64, !dbg !956
  %arrayidx258.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i, !dbg !956
  %227 = load i32, i32* %arrayidx258.i, align 4, !dbg !956
  %xor259.i = xor i32 %xor254.i, %227, !dbg !956
  %228 = load i32, i32* %t.i, align 4, !dbg !956
  %shr260.i = lshr i32 %228, 10, !dbg !956
  %and261.i = and i32 %shr260.i, 63, !dbg !956
  %idxprom262.i = zext i32 %and261.i to i64, !dbg !956
  %arrayidx263.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i, !dbg !956
  %229 = load i32, i32* %arrayidx263.i, align 4, !dbg !956
  %xor264.i = xor i32 %xor259.i, %229, !dbg !956
  %230 = load i32, i32* %t.i, align 4, !dbg !956
  %shr265.i = lshr i32 %230, 18, !dbg !956
  %and266.i = and i32 %shr265.i, 63, !dbg !956
  %idxprom267.i = zext i32 %and266.i to i64, !dbg !956
  %arrayidx268.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i, !dbg !956
  %231 = load i32, i32* %arrayidx268.i, align 4, !dbg !956
  %xor269.i = xor i32 %xor264.i, %231, !dbg !956
  %232 = load i32, i32* %t.i, align 4, !dbg !956
  %shr270.i = lshr i32 %232, 26, !dbg !956
  %idxprom272.i = zext i32 %shr270.i to i64, !dbg !956
  %arrayidx273.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i, !dbg !956
  %233 = load i32, i32* %arrayidx273.i, align 4, !dbg !956
  %xor274.i = xor i32 %xor269.i, %233, !dbg !956
  %234 = load i32, i32* %l.i, align 4, !dbg !956
  %xor275.i = xor i32 %234, %xor274.i, !dbg !956
  store i32 %xor275.i, i32* %l.i, align 4, !dbg !956
  %235 = load i32, i32* %l.i, align 4, !dbg !957
  %236 = load i32*, i32** %s.i, align 8, !dbg !957
  %arrayidx276.i = getelementptr inbounds i32, i32* %236, i64 10, !dbg !957
  %237 = load i32, i32* %arrayidx276.i, align 4, !dbg !957
  %xor277.i = xor i32 %235, %237, !dbg !957
  store i32 %xor277.i, i32* %u.i, align 4, !dbg !957
  %238 = load i32, i32* %l.i, align 4, !dbg !957
  %239 = load i32*, i32** %s.i, align 8, !dbg !957
  %arrayidx278.i = getelementptr inbounds i32, i32* %239, i64 11, !dbg !957
  %240 = load i32, i32* %arrayidx278.i, align 4, !dbg !957
  %xor279.i = xor i32 %238, %240, !dbg !957
  store i32 %xor279.i, i32* %t.i, align 4, !dbg !957
  %241 = load i32, i32* %t.i, align 4, !dbg !849
  %242 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %241) #5, !dbg !849, !srcloc !124
  store i32 %242, i32* %ret280.i, align 4, !dbg !849
  %243 = load i32, i32* %ret280.i, align 4, !dbg !849
  store i32 %243, i32* %tmp281.i, align 4, !dbg !849
  %244 = load i32, i32* %tmp281.i, align 4, !dbg !849
  store i32 %244, i32* %t.i, align 4, !dbg !957
  %245 = load i32, i32* %u.i, align 4, !dbg !957
  %shr282.i = lshr i32 %245, 2, !dbg !957
  %and283.i = and i32 %shr282.i, 63, !dbg !957
  %idxprom284.i = zext i32 %and283.i to i64, !dbg !957
  %arrayidx285.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i, !dbg !957
  %246 = load i32, i32* %arrayidx285.i, align 4, !dbg !957
  %247 = load i32, i32* %u.i, align 4, !dbg !957
  %shr286.i = lshr i32 %247, 10, !dbg !957
  %and287.i = and i32 %shr286.i, 63, !dbg !957
  %idxprom288.i = zext i32 %and287.i to i64, !dbg !957
  %arrayidx289.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i, !dbg !957
  %248 = load i32, i32* %arrayidx289.i, align 4, !dbg !957
  %xor290.i = xor i32 %246, %248, !dbg !957
  %249 = load i32, i32* %u.i, align 4, !dbg !957
  %shr291.i = lshr i32 %249, 18, !dbg !957
  %and292.i = and i32 %shr291.i, 63, !dbg !957
  %idxprom293.i = zext i32 %and292.i to i64, !dbg !957
  %arrayidx294.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i, !dbg !957
  %250 = load i32, i32* %arrayidx294.i, align 4, !dbg !957
  %xor295.i = xor i32 %xor290.i, %250, !dbg !957
  %251 = load i32, i32* %u.i, align 4, !dbg !957
  %shr296.i = lshr i32 %251, 26, !dbg !957
  %idxprom298.i = zext i32 %shr296.i to i64, !dbg !957
  %arrayidx299.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i, !dbg !957
  %252 = load i32, i32* %arrayidx299.i, align 4, !dbg !957
  %xor300.i = xor i32 %xor295.i, %252, !dbg !957
  %253 = load i32, i32* %t.i, align 4, !dbg !957
  %shr301.i = lshr i32 %253, 2, !dbg !957
  %and302.i = and i32 %shr301.i, 63, !dbg !957
  %idxprom303.i = zext i32 %and302.i to i64, !dbg !957
  %arrayidx304.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i, !dbg !957
  %254 = load i32, i32* %arrayidx304.i, align 4, !dbg !957
  %xor305.i = xor i32 %xor300.i, %254, !dbg !957
  %255 = load i32, i32* %t.i, align 4, !dbg !957
  %shr306.i = lshr i32 %255, 10, !dbg !957
  %and307.i = and i32 %shr306.i, 63, !dbg !957
  %idxprom308.i = zext i32 %and307.i to i64, !dbg !957
  %arrayidx309.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i, !dbg !957
  %256 = load i32, i32* %arrayidx309.i, align 4, !dbg !957
  %xor310.i = xor i32 %xor305.i, %256, !dbg !957
  %257 = load i32, i32* %t.i, align 4, !dbg !957
  %shr311.i = lshr i32 %257, 18, !dbg !957
  %and312.i = and i32 %shr311.i, 63, !dbg !957
  %idxprom313.i = zext i32 %and312.i to i64, !dbg !957
  %arrayidx314.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i, !dbg !957
  %258 = load i32, i32* %arrayidx314.i, align 4, !dbg !957
  %xor315.i = xor i32 %xor310.i, %258, !dbg !957
  %259 = load i32, i32* %t.i, align 4, !dbg !957
  %shr316.i = lshr i32 %259, 26, !dbg !957
  %idxprom318.i = zext i32 %shr316.i to i64, !dbg !957
  %arrayidx319.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i, !dbg !957
  %260 = load i32, i32* %arrayidx319.i, align 4, !dbg !957
  %xor320.i = xor i32 %xor315.i, %260, !dbg !957
  %261 = load i32, i32* %r.i, align 4, !dbg !957
  %xor321.i = xor i32 %261, %xor320.i, !dbg !957
  store i32 %xor321.i, i32* %r.i, align 4, !dbg !957
  %262 = load i32, i32* %r.i, align 4, !dbg !958
  %263 = load i32*, i32** %s.i, align 8, !dbg !958
  %arrayidx322.i = getelementptr inbounds i32, i32* %263, i64 12, !dbg !958
  %264 = load i32, i32* %arrayidx322.i, align 4, !dbg !958
  %xor323.i = xor i32 %262, %264, !dbg !958
  store i32 %xor323.i, i32* %u.i, align 4, !dbg !958
  %265 = load i32, i32* %r.i, align 4, !dbg !958
  %266 = load i32*, i32** %s.i, align 8, !dbg !958
  %arrayidx324.i = getelementptr inbounds i32, i32* %266, i64 13, !dbg !958
  %267 = load i32, i32* %arrayidx324.i, align 4, !dbg !958
  %xor325.i = xor i32 %265, %267, !dbg !958
  store i32 %xor325.i, i32* %t.i, align 4, !dbg !958
  %268 = load i32, i32* %t.i, align 4, !dbg !850
  %269 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %268) #5, !dbg !850, !srcloc !130
  store i32 %269, i32* %ret326.i, align 4, !dbg !850
  %270 = load i32, i32* %ret326.i, align 4, !dbg !850
  store i32 %270, i32* %tmp327.i, align 4, !dbg !850
  %271 = load i32, i32* %tmp327.i, align 4, !dbg !850
  store i32 %271, i32* %t.i, align 4, !dbg !958
  %272 = load i32, i32* %u.i, align 4, !dbg !958
  %shr328.i = lshr i32 %272, 2, !dbg !958
  %and329.i = and i32 %shr328.i, 63, !dbg !958
  %idxprom330.i = zext i32 %and329.i to i64, !dbg !958
  %arrayidx331.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i, !dbg !958
  %273 = load i32, i32* %arrayidx331.i, align 4, !dbg !958
  %274 = load i32, i32* %u.i, align 4, !dbg !958
  %shr332.i = lshr i32 %274, 10, !dbg !958
  %and333.i = and i32 %shr332.i, 63, !dbg !958
  %idxprom334.i = zext i32 %and333.i to i64, !dbg !958
  %arrayidx335.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i, !dbg !958
  %275 = load i32, i32* %arrayidx335.i, align 4, !dbg !958
  %xor336.i = xor i32 %273, %275, !dbg !958
  %276 = load i32, i32* %u.i, align 4, !dbg !958
  %shr337.i = lshr i32 %276, 18, !dbg !958
  %and338.i = and i32 %shr337.i, 63, !dbg !958
  %idxprom339.i = zext i32 %and338.i to i64, !dbg !958
  %arrayidx340.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i, !dbg !958
  %277 = load i32, i32* %arrayidx340.i, align 4, !dbg !958
  %xor341.i = xor i32 %xor336.i, %277, !dbg !958
  %278 = load i32, i32* %u.i, align 4, !dbg !958
  %shr342.i = lshr i32 %278, 26, !dbg !958
  %idxprom344.i = zext i32 %shr342.i to i64, !dbg !958
  %arrayidx345.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i, !dbg !958
  %279 = load i32, i32* %arrayidx345.i, align 4, !dbg !958
  %xor346.i = xor i32 %xor341.i, %279, !dbg !958
  %280 = load i32, i32* %t.i, align 4, !dbg !958
  %shr347.i = lshr i32 %280, 2, !dbg !958
  %and348.i = and i32 %shr347.i, 63, !dbg !958
  %idxprom349.i = zext i32 %and348.i to i64, !dbg !958
  %arrayidx350.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i, !dbg !958
  %281 = load i32, i32* %arrayidx350.i, align 4, !dbg !958
  %xor351.i = xor i32 %xor346.i, %281, !dbg !958
  %282 = load i32, i32* %t.i, align 4, !dbg !958
  %shr352.i = lshr i32 %282, 10, !dbg !958
  %and353.i = and i32 %shr352.i, 63, !dbg !958
  %idxprom354.i = zext i32 %and353.i to i64, !dbg !958
  %arrayidx355.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i, !dbg !958
  %283 = load i32, i32* %arrayidx355.i, align 4, !dbg !958
  %xor356.i = xor i32 %xor351.i, %283, !dbg !958
  %284 = load i32, i32* %t.i, align 4, !dbg !958
  %shr357.i = lshr i32 %284, 18, !dbg !958
  %and358.i = and i32 %shr357.i, 63, !dbg !958
  %idxprom359.i = zext i32 %and358.i to i64, !dbg !958
  %arrayidx360.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i, !dbg !958
  %285 = load i32, i32* %arrayidx360.i, align 4, !dbg !958
  %xor361.i = xor i32 %xor356.i, %285, !dbg !958
  %286 = load i32, i32* %t.i, align 4, !dbg !958
  %shr362.i = lshr i32 %286, 26, !dbg !958
  %idxprom364.i = zext i32 %shr362.i to i64, !dbg !958
  %arrayidx365.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i, !dbg !958
  %287 = load i32, i32* %arrayidx365.i, align 4, !dbg !958
  %xor366.i = xor i32 %xor361.i, %287, !dbg !958
  %288 = load i32, i32* %l.i, align 4, !dbg !958
  %xor367.i = xor i32 %288, %xor366.i, !dbg !958
  store i32 %xor367.i, i32* %l.i, align 4, !dbg !958
  %289 = load i32, i32* %l.i, align 4, !dbg !959
  %290 = load i32*, i32** %s.i, align 8, !dbg !959
  %arrayidx368.i = getelementptr inbounds i32, i32* %290, i64 14, !dbg !959
  %291 = load i32, i32* %arrayidx368.i, align 4, !dbg !959
  %xor369.i = xor i32 %289, %291, !dbg !959
  store i32 %xor369.i, i32* %u.i, align 4, !dbg !959
  %292 = load i32, i32* %l.i, align 4, !dbg !959
  %293 = load i32*, i32** %s.i, align 8, !dbg !959
  %arrayidx370.i = getelementptr inbounds i32, i32* %293, i64 15, !dbg !959
  %294 = load i32, i32* %arrayidx370.i, align 4, !dbg !959
  %xor371.i = xor i32 %292, %294, !dbg !959
  store i32 %xor371.i, i32* %t.i, align 4, !dbg !959
  %295 = load i32, i32* %t.i, align 4, !dbg !851
  %296 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %295) #5, !dbg !851, !srcloc !136
  store i32 %296, i32* %ret372.i, align 4, !dbg !851
  %297 = load i32, i32* %ret372.i, align 4, !dbg !851
  store i32 %297, i32* %tmp373.i, align 4, !dbg !851
  %298 = load i32, i32* %tmp373.i, align 4, !dbg !851
  store i32 %298, i32* %t.i, align 4, !dbg !959
  %299 = load i32, i32* %u.i, align 4, !dbg !959
  %shr374.i = lshr i32 %299, 2, !dbg !959
  %and375.i = and i32 %shr374.i, 63, !dbg !959
  %idxprom376.i = zext i32 %and375.i to i64, !dbg !959
  %arrayidx377.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i, !dbg !959
  %300 = load i32, i32* %arrayidx377.i, align 4, !dbg !959
  %301 = load i32, i32* %u.i, align 4, !dbg !959
  %shr378.i = lshr i32 %301, 10, !dbg !959
  %and379.i = and i32 %shr378.i, 63, !dbg !959
  %idxprom380.i = zext i32 %and379.i to i64, !dbg !959
  %arrayidx381.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i, !dbg !959
  %302 = load i32, i32* %arrayidx381.i, align 4, !dbg !959
  %xor382.i = xor i32 %300, %302, !dbg !959
  %303 = load i32, i32* %u.i, align 4, !dbg !959
  %shr383.i = lshr i32 %303, 18, !dbg !959
  %and384.i = and i32 %shr383.i, 63, !dbg !959
  %idxprom385.i = zext i32 %and384.i to i64, !dbg !959
  %arrayidx386.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i, !dbg !959
  %304 = load i32, i32* %arrayidx386.i, align 4, !dbg !959
  %xor387.i = xor i32 %xor382.i, %304, !dbg !959
  %305 = load i32, i32* %u.i, align 4, !dbg !959
  %shr388.i = lshr i32 %305, 26, !dbg !959
  %idxprom390.i = zext i32 %shr388.i to i64, !dbg !959
  %arrayidx391.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i, !dbg !959
  %306 = load i32, i32* %arrayidx391.i, align 4, !dbg !959
  %xor392.i = xor i32 %xor387.i, %306, !dbg !959
  %307 = load i32, i32* %t.i, align 4, !dbg !959
  %shr393.i = lshr i32 %307, 2, !dbg !959
  %and394.i = and i32 %shr393.i, 63, !dbg !959
  %idxprom395.i = zext i32 %and394.i to i64, !dbg !959
  %arrayidx396.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i, !dbg !959
  %308 = load i32, i32* %arrayidx396.i, align 4, !dbg !959
  %xor397.i = xor i32 %xor392.i, %308, !dbg !959
  %309 = load i32, i32* %t.i, align 4, !dbg !959
  %shr398.i = lshr i32 %309, 10, !dbg !959
  %and399.i = and i32 %shr398.i, 63, !dbg !959
  %idxprom400.i = zext i32 %and399.i to i64, !dbg !959
  %arrayidx401.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i, !dbg !959
  %310 = load i32, i32* %arrayidx401.i, align 4, !dbg !959
  %xor402.i = xor i32 %xor397.i, %310, !dbg !959
  %311 = load i32, i32* %t.i, align 4, !dbg !959
  %shr403.i = lshr i32 %311, 18, !dbg !959
  %and404.i = and i32 %shr403.i, 63, !dbg !959
  %idxprom405.i = zext i32 %and404.i to i64, !dbg !959
  %arrayidx406.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i, !dbg !959
  %312 = load i32, i32* %arrayidx406.i, align 4, !dbg !959
  %xor407.i = xor i32 %xor402.i, %312, !dbg !959
  %313 = load i32, i32* %t.i, align 4, !dbg !959
  %shr408.i = lshr i32 %313, 26, !dbg !959
  %idxprom410.i = zext i32 %shr408.i to i64, !dbg !959
  %arrayidx411.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i, !dbg !959
  %314 = load i32, i32* %arrayidx411.i, align 4, !dbg !959
  %xor412.i = xor i32 %xor407.i, %314, !dbg !959
  %315 = load i32, i32* %r.i, align 4, !dbg !959
  %xor413.i = xor i32 %315, %xor412.i, !dbg !959
  store i32 %xor413.i, i32* %r.i, align 4, !dbg !959
  %316 = load i32, i32* %r.i, align 4, !dbg !960
  %317 = load i32*, i32** %s.i, align 8, !dbg !960
  %arrayidx414.i = getelementptr inbounds i32, i32* %317, i64 16, !dbg !960
  %318 = load i32, i32* %arrayidx414.i, align 4, !dbg !960
  %xor415.i = xor i32 %316, %318, !dbg !960
  store i32 %xor415.i, i32* %u.i, align 4, !dbg !960
  %319 = load i32, i32* %r.i, align 4, !dbg !960
  %320 = load i32*, i32** %s.i, align 8, !dbg !960
  %arrayidx416.i = getelementptr inbounds i32, i32* %320, i64 17, !dbg !960
  %321 = load i32, i32* %arrayidx416.i, align 4, !dbg !960
  %xor417.i = xor i32 %319, %321, !dbg !960
  store i32 %xor417.i, i32* %t.i, align 4, !dbg !960
  %322 = load i32, i32* %t.i, align 4, !dbg !852
  %323 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %322) #5, !dbg !852, !srcloc !142
  store i32 %323, i32* %ret418.i, align 4, !dbg !852
  %324 = load i32, i32* %ret418.i, align 4, !dbg !852
  store i32 %324, i32* %tmp419.i, align 4, !dbg !852
  %325 = load i32, i32* %tmp419.i, align 4, !dbg !852
  store i32 %325, i32* %t.i, align 4, !dbg !960
  %326 = load i32, i32* %u.i, align 4, !dbg !960
  %shr420.i = lshr i32 %326, 2, !dbg !960
  %and421.i = and i32 %shr420.i, 63, !dbg !960
  %idxprom422.i = zext i32 %and421.i to i64, !dbg !960
  %arrayidx423.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i, !dbg !960
  %327 = load i32, i32* %arrayidx423.i, align 4, !dbg !960
  %328 = load i32, i32* %u.i, align 4, !dbg !960
  %shr424.i = lshr i32 %328, 10, !dbg !960
  %and425.i = and i32 %shr424.i, 63, !dbg !960
  %idxprom426.i = zext i32 %and425.i to i64, !dbg !960
  %arrayidx427.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i, !dbg !960
  %329 = load i32, i32* %arrayidx427.i, align 4, !dbg !960
  %xor428.i = xor i32 %327, %329, !dbg !960
  %330 = load i32, i32* %u.i, align 4, !dbg !960
  %shr429.i = lshr i32 %330, 18, !dbg !960
  %and430.i = and i32 %shr429.i, 63, !dbg !960
  %idxprom431.i = zext i32 %and430.i to i64, !dbg !960
  %arrayidx432.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i, !dbg !960
  %331 = load i32, i32* %arrayidx432.i, align 4, !dbg !960
  %xor433.i = xor i32 %xor428.i, %331, !dbg !960
  %332 = load i32, i32* %u.i, align 4, !dbg !960
  %shr434.i = lshr i32 %332, 26, !dbg !960
  %idxprom436.i = zext i32 %shr434.i to i64, !dbg !960
  %arrayidx437.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i, !dbg !960
  %333 = load i32, i32* %arrayidx437.i, align 4, !dbg !960
  %xor438.i = xor i32 %xor433.i, %333, !dbg !960
  %334 = load i32, i32* %t.i, align 4, !dbg !960
  %shr439.i = lshr i32 %334, 2, !dbg !960
  %and440.i = and i32 %shr439.i, 63, !dbg !960
  %idxprom441.i = zext i32 %and440.i to i64, !dbg !960
  %arrayidx442.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i, !dbg !960
  %335 = load i32, i32* %arrayidx442.i, align 4, !dbg !960
  %xor443.i = xor i32 %xor438.i, %335, !dbg !960
  %336 = load i32, i32* %t.i, align 4, !dbg !960
  %shr444.i = lshr i32 %336, 10, !dbg !960
  %and445.i = and i32 %shr444.i, 63, !dbg !960
  %idxprom446.i = zext i32 %and445.i to i64, !dbg !960
  %arrayidx447.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i, !dbg !960
  %337 = load i32, i32* %arrayidx447.i, align 4, !dbg !960
  %xor448.i = xor i32 %xor443.i, %337, !dbg !960
  %338 = load i32, i32* %t.i, align 4, !dbg !960
  %shr449.i = lshr i32 %338, 18, !dbg !960
  %and450.i = and i32 %shr449.i, 63, !dbg !960
  %idxprom451.i = zext i32 %and450.i to i64, !dbg !960
  %arrayidx452.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i, !dbg !960
  %339 = load i32, i32* %arrayidx452.i, align 4, !dbg !960
  %xor453.i = xor i32 %xor448.i, %339, !dbg !960
  %340 = load i32, i32* %t.i, align 4, !dbg !960
  %shr454.i = lshr i32 %340, 26, !dbg !960
  %idxprom456.i = zext i32 %shr454.i to i64, !dbg !960
  %arrayidx457.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i, !dbg !960
  %341 = load i32, i32* %arrayidx457.i, align 4, !dbg !960
  %xor458.i = xor i32 %xor453.i, %341, !dbg !960
  %342 = load i32, i32* %l.i, align 4, !dbg !960
  %xor459.i = xor i32 %342, %xor458.i, !dbg !960
  store i32 %xor459.i, i32* %l.i, align 4, !dbg !960
  %343 = load i32, i32* %l.i, align 4, !dbg !961
  %344 = load i32*, i32** %s.i, align 8, !dbg !961
  %arrayidx460.i = getelementptr inbounds i32, i32* %344, i64 18, !dbg !961
  %345 = load i32, i32* %arrayidx460.i, align 4, !dbg !961
  %xor461.i = xor i32 %343, %345, !dbg !961
  store i32 %xor461.i, i32* %u.i, align 4, !dbg !961
  %346 = load i32, i32* %l.i, align 4, !dbg !961
  %347 = load i32*, i32** %s.i, align 8, !dbg !961
  %arrayidx462.i = getelementptr inbounds i32, i32* %347, i64 19, !dbg !961
  %348 = load i32, i32* %arrayidx462.i, align 4, !dbg !961
  %xor463.i = xor i32 %346, %348, !dbg !961
  store i32 %xor463.i, i32* %t.i, align 4, !dbg !961
  %349 = load i32, i32* %t.i, align 4, !dbg !853
  %350 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %349) #5, !dbg !853, !srcloc !148
  store i32 %350, i32* %ret464.i, align 4, !dbg !853
  %351 = load i32, i32* %ret464.i, align 4, !dbg !853
  store i32 %351, i32* %tmp465.i, align 4, !dbg !853
  %352 = load i32, i32* %tmp465.i, align 4, !dbg !853
  store i32 %352, i32* %t.i, align 4, !dbg !961
  %353 = load i32, i32* %u.i, align 4, !dbg !961
  %shr466.i = lshr i32 %353, 2, !dbg !961
  %and467.i = and i32 %shr466.i, 63, !dbg !961
  %idxprom468.i = zext i32 %and467.i to i64, !dbg !961
  %arrayidx469.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i, !dbg !961
  %354 = load i32, i32* %arrayidx469.i, align 4, !dbg !961
  %355 = load i32, i32* %u.i, align 4, !dbg !961
  %shr470.i = lshr i32 %355, 10, !dbg !961
  %and471.i = and i32 %shr470.i, 63, !dbg !961
  %idxprom472.i = zext i32 %and471.i to i64, !dbg !961
  %arrayidx473.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i, !dbg !961
  %356 = load i32, i32* %arrayidx473.i, align 4, !dbg !961
  %xor474.i = xor i32 %354, %356, !dbg !961
  %357 = load i32, i32* %u.i, align 4, !dbg !961
  %shr475.i = lshr i32 %357, 18, !dbg !961
  %and476.i = and i32 %shr475.i, 63, !dbg !961
  %idxprom477.i = zext i32 %and476.i to i64, !dbg !961
  %arrayidx478.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i, !dbg !961
  %358 = load i32, i32* %arrayidx478.i, align 4, !dbg !961
  %xor479.i = xor i32 %xor474.i, %358, !dbg !961
  %359 = load i32, i32* %u.i, align 4, !dbg !961
  %shr480.i = lshr i32 %359, 26, !dbg !961
  %idxprom482.i = zext i32 %shr480.i to i64, !dbg !961
  %arrayidx483.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i, !dbg !961
  %360 = load i32, i32* %arrayidx483.i, align 4, !dbg !961
  %xor484.i = xor i32 %xor479.i, %360, !dbg !961
  %361 = load i32, i32* %t.i, align 4, !dbg !961
  %shr485.i = lshr i32 %361, 2, !dbg !961
  %and486.i = and i32 %shr485.i, 63, !dbg !961
  %idxprom487.i = zext i32 %and486.i to i64, !dbg !961
  %arrayidx488.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i, !dbg !961
  %362 = load i32, i32* %arrayidx488.i, align 4, !dbg !961
  %xor489.i = xor i32 %xor484.i, %362, !dbg !961
  %363 = load i32, i32* %t.i, align 4, !dbg !961
  %shr490.i = lshr i32 %363, 10, !dbg !961
  %and491.i = and i32 %shr490.i, 63, !dbg !961
  %idxprom492.i = zext i32 %and491.i to i64, !dbg !961
  %arrayidx493.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i, !dbg !961
  %364 = load i32, i32* %arrayidx493.i, align 4, !dbg !961
  %xor494.i = xor i32 %xor489.i, %364, !dbg !961
  %365 = load i32, i32* %t.i, align 4, !dbg !961
  %shr495.i = lshr i32 %365, 18, !dbg !961
  %and496.i = and i32 %shr495.i, 63, !dbg !961
  %idxprom497.i = zext i32 %and496.i to i64, !dbg !961
  %arrayidx498.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i, !dbg !961
  %366 = load i32, i32* %arrayidx498.i, align 4, !dbg !961
  %xor499.i = xor i32 %xor494.i, %366, !dbg !961
  %367 = load i32, i32* %t.i, align 4, !dbg !961
  %shr500.i = lshr i32 %367, 26, !dbg !961
  %idxprom502.i = zext i32 %shr500.i to i64, !dbg !961
  %arrayidx503.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i, !dbg !961
  %368 = load i32, i32* %arrayidx503.i, align 4, !dbg !961
  %xor504.i = xor i32 %xor499.i, %368, !dbg !961
  %369 = load i32, i32* %r.i, align 4, !dbg !961
  %xor505.i = xor i32 %369, %xor504.i, !dbg !961
  store i32 %xor505.i, i32* %r.i, align 4, !dbg !961
  %370 = load i32, i32* %r.i, align 4, !dbg !962
  %371 = load i32*, i32** %s.i, align 8, !dbg !962
  %arrayidx506.i = getelementptr inbounds i32, i32* %371, i64 20, !dbg !962
  %372 = load i32, i32* %arrayidx506.i, align 4, !dbg !962
  %xor507.i = xor i32 %370, %372, !dbg !962
  store i32 %xor507.i, i32* %u.i, align 4, !dbg !962
  %373 = load i32, i32* %r.i, align 4, !dbg !962
  %374 = load i32*, i32** %s.i, align 8, !dbg !962
  %arrayidx508.i = getelementptr inbounds i32, i32* %374, i64 21, !dbg !962
  %375 = load i32, i32* %arrayidx508.i, align 4, !dbg !962
  %xor509.i = xor i32 %373, %375, !dbg !962
  store i32 %xor509.i, i32* %t.i, align 4, !dbg !962
  %376 = load i32, i32* %t.i, align 4, !dbg !854
  %377 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %376) #5, !dbg !854, !srcloc !154
  store i32 %377, i32* %ret510.i, align 4, !dbg !854
  %378 = load i32, i32* %ret510.i, align 4, !dbg !854
  store i32 %378, i32* %tmp511.i, align 4, !dbg !854
  %379 = load i32, i32* %tmp511.i, align 4, !dbg !854
  store i32 %379, i32* %t.i, align 4, !dbg !962
  %380 = load i32, i32* %u.i, align 4, !dbg !962
  %shr512.i = lshr i32 %380, 2, !dbg !962
  %and513.i = and i32 %shr512.i, 63, !dbg !962
  %idxprom514.i = zext i32 %and513.i to i64, !dbg !962
  %arrayidx515.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i, !dbg !962
  %381 = load i32, i32* %arrayidx515.i, align 4, !dbg !962
  %382 = load i32, i32* %u.i, align 4, !dbg !962
  %shr516.i = lshr i32 %382, 10, !dbg !962
  %and517.i = and i32 %shr516.i, 63, !dbg !962
  %idxprom518.i = zext i32 %and517.i to i64, !dbg !962
  %arrayidx519.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i, !dbg !962
  %383 = load i32, i32* %arrayidx519.i, align 4, !dbg !962
  %xor520.i = xor i32 %381, %383, !dbg !962
  %384 = load i32, i32* %u.i, align 4, !dbg !962
  %shr521.i = lshr i32 %384, 18, !dbg !962
  %and522.i = and i32 %shr521.i, 63, !dbg !962
  %idxprom523.i = zext i32 %and522.i to i64, !dbg !962
  %arrayidx524.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i, !dbg !962
  %385 = load i32, i32* %arrayidx524.i, align 4, !dbg !962
  %xor525.i = xor i32 %xor520.i, %385, !dbg !962
  %386 = load i32, i32* %u.i, align 4, !dbg !962
  %shr526.i = lshr i32 %386, 26, !dbg !962
  %idxprom528.i = zext i32 %shr526.i to i64, !dbg !962
  %arrayidx529.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i, !dbg !962
  %387 = load i32, i32* %arrayidx529.i, align 4, !dbg !962
  %xor530.i = xor i32 %xor525.i, %387, !dbg !962
  %388 = load i32, i32* %t.i, align 4, !dbg !962
  %shr531.i = lshr i32 %388, 2, !dbg !962
  %and532.i = and i32 %shr531.i, 63, !dbg !962
  %idxprom533.i = zext i32 %and532.i to i64, !dbg !962
  %arrayidx534.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i, !dbg !962
  %389 = load i32, i32* %arrayidx534.i, align 4, !dbg !962
  %xor535.i = xor i32 %xor530.i, %389, !dbg !962
  %390 = load i32, i32* %t.i, align 4, !dbg !962
  %shr536.i = lshr i32 %390, 10, !dbg !962
  %and537.i = and i32 %shr536.i, 63, !dbg !962
  %idxprom538.i = zext i32 %and537.i to i64, !dbg !962
  %arrayidx539.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i, !dbg !962
  %391 = load i32, i32* %arrayidx539.i, align 4, !dbg !962
  %xor540.i = xor i32 %xor535.i, %391, !dbg !962
  %392 = load i32, i32* %t.i, align 4, !dbg !962
  %shr541.i = lshr i32 %392, 18, !dbg !962
  %and542.i = and i32 %shr541.i, 63, !dbg !962
  %idxprom543.i = zext i32 %and542.i to i64, !dbg !962
  %arrayidx544.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i, !dbg !962
  %393 = load i32, i32* %arrayidx544.i, align 4, !dbg !962
  %xor545.i = xor i32 %xor540.i, %393, !dbg !962
  %394 = load i32, i32* %t.i, align 4, !dbg !962
  %shr546.i = lshr i32 %394, 26, !dbg !962
  %idxprom548.i = zext i32 %shr546.i to i64, !dbg !962
  %arrayidx549.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i, !dbg !962
  %395 = load i32, i32* %arrayidx549.i, align 4, !dbg !962
  %xor550.i = xor i32 %xor545.i, %395, !dbg !962
  %396 = load i32, i32* %l.i, align 4, !dbg !962
  %xor551.i = xor i32 %396, %xor550.i, !dbg !962
  store i32 %xor551.i, i32* %l.i, align 4, !dbg !962
  %397 = load i32, i32* %l.i, align 4, !dbg !963
  %398 = load i32*, i32** %s.i, align 8, !dbg !963
  %arrayidx552.i = getelementptr inbounds i32, i32* %398, i64 22, !dbg !963
  %399 = load i32, i32* %arrayidx552.i, align 4, !dbg !963
  %xor553.i = xor i32 %397, %399, !dbg !963
  store i32 %xor553.i, i32* %u.i, align 4, !dbg !963
  %400 = load i32, i32* %l.i, align 4, !dbg !963
  %401 = load i32*, i32** %s.i, align 8, !dbg !963
  %arrayidx554.i = getelementptr inbounds i32, i32* %401, i64 23, !dbg !963
  %402 = load i32, i32* %arrayidx554.i, align 4, !dbg !963
  %xor555.i = xor i32 %400, %402, !dbg !963
  store i32 %xor555.i, i32* %t.i, align 4, !dbg !963
  %403 = load i32, i32* %t.i, align 4, !dbg !855
  %404 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %403) #5, !dbg !855, !srcloc !160
  store i32 %404, i32* %ret556.i, align 4, !dbg !855
  %405 = load i32, i32* %ret556.i, align 4, !dbg !855
  store i32 %405, i32* %tmp557.i, align 4, !dbg !855
  %406 = load i32, i32* %tmp557.i, align 4, !dbg !855
  store i32 %406, i32* %t.i, align 4, !dbg !963
  %407 = load i32, i32* %u.i, align 4, !dbg !963
  %shr558.i = lshr i32 %407, 2, !dbg !963
  %and559.i = and i32 %shr558.i, 63, !dbg !963
  %idxprom560.i = zext i32 %and559.i to i64, !dbg !963
  %arrayidx561.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i, !dbg !963
  %408 = load i32, i32* %arrayidx561.i, align 4, !dbg !963
  %409 = load i32, i32* %u.i, align 4, !dbg !963
  %shr562.i = lshr i32 %409, 10, !dbg !963
  %and563.i = and i32 %shr562.i, 63, !dbg !963
  %idxprom564.i = zext i32 %and563.i to i64, !dbg !963
  %arrayidx565.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i, !dbg !963
  %410 = load i32, i32* %arrayidx565.i, align 4, !dbg !963
  %xor566.i = xor i32 %408, %410, !dbg !963
  %411 = load i32, i32* %u.i, align 4, !dbg !963
  %shr567.i = lshr i32 %411, 18, !dbg !963
  %and568.i = and i32 %shr567.i, 63, !dbg !963
  %idxprom569.i = zext i32 %and568.i to i64, !dbg !963
  %arrayidx570.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i, !dbg !963
  %412 = load i32, i32* %arrayidx570.i, align 4, !dbg !963
  %xor571.i = xor i32 %xor566.i, %412, !dbg !963
  %413 = load i32, i32* %u.i, align 4, !dbg !963
  %shr572.i = lshr i32 %413, 26, !dbg !963
  %idxprom574.i = zext i32 %shr572.i to i64, !dbg !963
  %arrayidx575.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i, !dbg !963
  %414 = load i32, i32* %arrayidx575.i, align 4, !dbg !963
  %xor576.i = xor i32 %xor571.i, %414, !dbg !963
  %415 = load i32, i32* %t.i, align 4, !dbg !963
  %shr577.i = lshr i32 %415, 2, !dbg !963
  %and578.i = and i32 %shr577.i, 63, !dbg !963
  %idxprom579.i = zext i32 %and578.i to i64, !dbg !963
  %arrayidx580.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i, !dbg !963
  %416 = load i32, i32* %arrayidx580.i, align 4, !dbg !963
  %xor581.i = xor i32 %xor576.i, %416, !dbg !963
  %417 = load i32, i32* %t.i, align 4, !dbg !963
  %shr582.i = lshr i32 %417, 10, !dbg !963
  %and583.i = and i32 %shr582.i, 63, !dbg !963
  %idxprom584.i = zext i32 %and583.i to i64, !dbg !963
  %arrayidx585.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i, !dbg !963
  %418 = load i32, i32* %arrayidx585.i, align 4, !dbg !963
  %xor586.i = xor i32 %xor581.i, %418, !dbg !963
  %419 = load i32, i32* %t.i, align 4, !dbg !963
  %shr587.i = lshr i32 %419, 18, !dbg !963
  %and588.i = and i32 %shr587.i, 63, !dbg !963
  %idxprom589.i = zext i32 %and588.i to i64, !dbg !963
  %arrayidx590.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i, !dbg !963
  %420 = load i32, i32* %arrayidx590.i, align 4, !dbg !963
  %xor591.i = xor i32 %xor586.i, %420, !dbg !963
  %421 = load i32, i32* %t.i, align 4, !dbg !963
  %shr592.i = lshr i32 %421, 26, !dbg !963
  %idxprom594.i = zext i32 %shr592.i to i64, !dbg !963
  %arrayidx595.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i, !dbg !963
  %422 = load i32, i32* %arrayidx595.i, align 4, !dbg !963
  %xor596.i = xor i32 %xor591.i, %422, !dbg !963
  %423 = load i32, i32* %r.i, align 4, !dbg !963
  %xor597.i = xor i32 %423, %xor596.i, !dbg !963
  store i32 %xor597.i, i32* %r.i, align 4, !dbg !963
  %424 = load i32, i32* %r.i, align 4, !dbg !964
  %425 = load i32*, i32** %s.i, align 8, !dbg !964
  %arrayidx598.i = getelementptr inbounds i32, i32* %425, i64 24, !dbg !964
  %426 = load i32, i32* %arrayidx598.i, align 4, !dbg !964
  %xor599.i = xor i32 %424, %426, !dbg !964
  store i32 %xor599.i, i32* %u.i, align 4, !dbg !964
  %427 = load i32, i32* %r.i, align 4, !dbg !964
  %428 = load i32*, i32** %s.i, align 8, !dbg !964
  %arrayidx600.i = getelementptr inbounds i32, i32* %428, i64 25, !dbg !964
  %429 = load i32, i32* %arrayidx600.i, align 4, !dbg !964
  %xor601.i = xor i32 %427, %429, !dbg !964
  store i32 %xor601.i, i32* %t.i, align 4, !dbg !964
  %430 = load i32, i32* %t.i, align 4, !dbg !856
  %431 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %430) #5, !dbg !856, !srcloc !166
  store i32 %431, i32* %ret602.i, align 4, !dbg !856
  %432 = load i32, i32* %ret602.i, align 4, !dbg !856
  store i32 %432, i32* %tmp603.i, align 4, !dbg !856
  %433 = load i32, i32* %tmp603.i, align 4, !dbg !856
  store i32 %433, i32* %t.i, align 4, !dbg !964
  %434 = load i32, i32* %u.i, align 4, !dbg !964
  %shr604.i = lshr i32 %434, 2, !dbg !964
  %and605.i = and i32 %shr604.i, 63, !dbg !964
  %idxprom606.i = zext i32 %and605.i to i64, !dbg !964
  %arrayidx607.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i, !dbg !964
  %435 = load i32, i32* %arrayidx607.i, align 4, !dbg !964
  %436 = load i32, i32* %u.i, align 4, !dbg !964
  %shr608.i = lshr i32 %436, 10, !dbg !964
  %and609.i = and i32 %shr608.i, 63, !dbg !964
  %idxprom610.i = zext i32 %and609.i to i64, !dbg !964
  %arrayidx611.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i, !dbg !964
  %437 = load i32, i32* %arrayidx611.i, align 4, !dbg !964
  %xor612.i = xor i32 %435, %437, !dbg !964
  %438 = load i32, i32* %u.i, align 4, !dbg !964
  %shr613.i = lshr i32 %438, 18, !dbg !964
  %and614.i = and i32 %shr613.i, 63, !dbg !964
  %idxprom615.i = zext i32 %and614.i to i64, !dbg !964
  %arrayidx616.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i, !dbg !964
  %439 = load i32, i32* %arrayidx616.i, align 4, !dbg !964
  %xor617.i = xor i32 %xor612.i, %439, !dbg !964
  %440 = load i32, i32* %u.i, align 4, !dbg !964
  %shr618.i = lshr i32 %440, 26, !dbg !964
  %idxprom620.i = zext i32 %shr618.i to i64, !dbg !964
  %arrayidx621.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i, !dbg !964
  %441 = load i32, i32* %arrayidx621.i, align 4, !dbg !964
  %xor622.i = xor i32 %xor617.i, %441, !dbg !964
  %442 = load i32, i32* %t.i, align 4, !dbg !964
  %shr623.i = lshr i32 %442, 2, !dbg !964
  %and624.i = and i32 %shr623.i, 63, !dbg !964
  %idxprom625.i = zext i32 %and624.i to i64, !dbg !964
  %arrayidx626.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i, !dbg !964
  %443 = load i32, i32* %arrayidx626.i, align 4, !dbg !964
  %xor627.i = xor i32 %xor622.i, %443, !dbg !964
  %444 = load i32, i32* %t.i, align 4, !dbg !964
  %shr628.i = lshr i32 %444, 10, !dbg !964
  %and629.i = and i32 %shr628.i, 63, !dbg !964
  %idxprom630.i = zext i32 %and629.i to i64, !dbg !964
  %arrayidx631.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i, !dbg !964
  %445 = load i32, i32* %arrayidx631.i, align 4, !dbg !964
  %xor632.i = xor i32 %xor627.i, %445, !dbg !964
  %446 = load i32, i32* %t.i, align 4, !dbg !964
  %shr633.i = lshr i32 %446, 18, !dbg !964
  %and634.i = and i32 %shr633.i, 63, !dbg !964
  %idxprom635.i = zext i32 %and634.i to i64, !dbg !964
  %arrayidx636.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i, !dbg !964
  %447 = load i32, i32* %arrayidx636.i, align 4, !dbg !964
  %xor637.i = xor i32 %xor632.i, %447, !dbg !964
  %448 = load i32, i32* %t.i, align 4, !dbg !964
  %shr638.i = lshr i32 %448, 26, !dbg !964
  %idxprom640.i = zext i32 %shr638.i to i64, !dbg !964
  %arrayidx641.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i, !dbg !964
  %449 = load i32, i32* %arrayidx641.i, align 4, !dbg !964
  %xor642.i = xor i32 %xor637.i, %449, !dbg !964
  %450 = load i32, i32* %l.i, align 4, !dbg !964
  %xor643.i = xor i32 %450, %xor642.i, !dbg !964
  store i32 %xor643.i, i32* %l.i, align 4, !dbg !964
  %451 = load i32, i32* %l.i, align 4, !dbg !965
  %452 = load i32*, i32** %s.i, align 8, !dbg !965
  %arrayidx644.i = getelementptr inbounds i32, i32* %452, i64 26, !dbg !965
  %453 = load i32, i32* %arrayidx644.i, align 4, !dbg !965
  %xor645.i = xor i32 %451, %453, !dbg !965
  store i32 %xor645.i, i32* %u.i, align 4, !dbg !965
  %454 = load i32, i32* %l.i, align 4, !dbg !965
  %455 = load i32*, i32** %s.i, align 8, !dbg !965
  %arrayidx646.i = getelementptr inbounds i32, i32* %455, i64 27, !dbg !965
  %456 = load i32, i32* %arrayidx646.i, align 4, !dbg !965
  %xor647.i = xor i32 %454, %456, !dbg !965
  store i32 %xor647.i, i32* %t.i, align 4, !dbg !965
  %457 = load i32, i32* %t.i, align 4, !dbg !857
  %458 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %457) #5, !dbg !857, !srcloc !172
  store i32 %458, i32* %ret648.i, align 4, !dbg !857
  %459 = load i32, i32* %ret648.i, align 4, !dbg !857
  store i32 %459, i32* %tmp649.i, align 4, !dbg !857
  %460 = load i32, i32* %tmp649.i, align 4, !dbg !857
  store i32 %460, i32* %t.i, align 4, !dbg !965
  %461 = load i32, i32* %u.i, align 4, !dbg !965
  %shr650.i = lshr i32 %461, 2, !dbg !965
  %and651.i = and i32 %shr650.i, 63, !dbg !965
  %idxprom652.i = zext i32 %and651.i to i64, !dbg !965
  %arrayidx653.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i, !dbg !965
  %462 = load i32, i32* %arrayidx653.i, align 4, !dbg !965
  %463 = load i32, i32* %u.i, align 4, !dbg !965
  %shr654.i = lshr i32 %463, 10, !dbg !965
  %and655.i = and i32 %shr654.i, 63, !dbg !965
  %idxprom656.i = zext i32 %and655.i to i64, !dbg !965
  %arrayidx657.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i, !dbg !965
  %464 = load i32, i32* %arrayidx657.i, align 4, !dbg !965
  %xor658.i = xor i32 %462, %464, !dbg !965
  %465 = load i32, i32* %u.i, align 4, !dbg !965
  %shr659.i = lshr i32 %465, 18, !dbg !965
  %and660.i = and i32 %shr659.i, 63, !dbg !965
  %idxprom661.i = zext i32 %and660.i to i64, !dbg !965
  %arrayidx662.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i, !dbg !965
  %466 = load i32, i32* %arrayidx662.i, align 4, !dbg !965
  %xor663.i = xor i32 %xor658.i, %466, !dbg !965
  %467 = load i32, i32* %u.i, align 4, !dbg !965
  %shr664.i = lshr i32 %467, 26, !dbg !965
  %idxprom666.i = zext i32 %shr664.i to i64, !dbg !965
  %arrayidx667.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i, !dbg !965
  %468 = load i32, i32* %arrayidx667.i, align 4, !dbg !965
  %xor668.i = xor i32 %xor663.i, %468, !dbg !965
  %469 = load i32, i32* %t.i, align 4, !dbg !965
  %shr669.i = lshr i32 %469, 2, !dbg !965
  %and670.i = and i32 %shr669.i, 63, !dbg !965
  %idxprom671.i = zext i32 %and670.i to i64, !dbg !965
  %arrayidx672.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i, !dbg !965
  %470 = load i32, i32* %arrayidx672.i, align 4, !dbg !965
  %xor673.i = xor i32 %xor668.i, %470, !dbg !965
  %471 = load i32, i32* %t.i, align 4, !dbg !965
  %shr674.i = lshr i32 %471, 10, !dbg !965
  %and675.i = and i32 %shr674.i, 63, !dbg !965
  %idxprom676.i = zext i32 %and675.i to i64, !dbg !965
  %arrayidx677.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i, !dbg !965
  %472 = load i32, i32* %arrayidx677.i, align 4, !dbg !965
  %xor678.i = xor i32 %xor673.i, %472, !dbg !965
  %473 = load i32, i32* %t.i, align 4, !dbg !965
  %shr679.i = lshr i32 %473, 18, !dbg !965
  %and680.i = and i32 %shr679.i, 63, !dbg !965
  %idxprom681.i = zext i32 %and680.i to i64, !dbg !965
  %arrayidx682.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i, !dbg !965
  %474 = load i32, i32* %arrayidx682.i, align 4, !dbg !965
  %xor683.i = xor i32 %xor678.i, %474, !dbg !965
  %475 = load i32, i32* %t.i, align 4, !dbg !965
  %shr684.i = lshr i32 %475, 26, !dbg !965
  %idxprom686.i = zext i32 %shr684.i to i64, !dbg !965
  %arrayidx687.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i, !dbg !965
  %476 = load i32, i32* %arrayidx687.i, align 4, !dbg !965
  %xor688.i = xor i32 %xor683.i, %476, !dbg !965
  %477 = load i32, i32* %r.i, align 4, !dbg !965
  %xor689.i = xor i32 %477, %xor688.i, !dbg !965
  store i32 %xor689.i, i32* %r.i, align 4, !dbg !965
  %478 = load i32, i32* %r.i, align 4, !dbg !966
  %479 = load i32*, i32** %s.i, align 8, !dbg !966
  %arrayidx690.i = getelementptr inbounds i32, i32* %479, i64 28, !dbg !966
  %480 = load i32, i32* %arrayidx690.i, align 4, !dbg !966
  %xor691.i = xor i32 %478, %480, !dbg !966
  store i32 %xor691.i, i32* %u.i, align 4, !dbg !966
  %481 = load i32, i32* %r.i, align 4, !dbg !966
  %482 = load i32*, i32** %s.i, align 8, !dbg !966
  %arrayidx692.i = getelementptr inbounds i32, i32* %482, i64 29, !dbg !966
  %483 = load i32, i32* %arrayidx692.i, align 4, !dbg !966
  %xor693.i = xor i32 %481, %483, !dbg !966
  store i32 %xor693.i, i32* %t.i, align 4, !dbg !966
  %484 = load i32, i32* %t.i, align 4, !dbg !858
  %485 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %484) #5, !dbg !858, !srcloc !178
  store i32 %485, i32* %ret694.i, align 4, !dbg !858
  %486 = load i32, i32* %ret694.i, align 4, !dbg !858
  store i32 %486, i32* %tmp695.i, align 4, !dbg !858
  %487 = load i32, i32* %tmp695.i, align 4, !dbg !858
  store i32 %487, i32* %t.i, align 4, !dbg !966
  %488 = load i32, i32* %u.i, align 4, !dbg !966
  %shr696.i = lshr i32 %488, 2, !dbg !966
  %and697.i = and i32 %shr696.i, 63, !dbg !966
  %idxprom698.i = zext i32 %and697.i to i64, !dbg !966
  %arrayidx699.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i, !dbg !966
  %489 = load i32, i32* %arrayidx699.i, align 4, !dbg !966
  %490 = load i32, i32* %u.i, align 4, !dbg !966
  %shr700.i = lshr i32 %490, 10, !dbg !966
  %and701.i = and i32 %shr700.i, 63, !dbg !966
  %idxprom702.i = zext i32 %and701.i to i64, !dbg !966
  %arrayidx703.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i, !dbg !966
  %491 = load i32, i32* %arrayidx703.i, align 4, !dbg !966
  %xor704.i = xor i32 %489, %491, !dbg !966
  %492 = load i32, i32* %u.i, align 4, !dbg !966
  %shr705.i = lshr i32 %492, 18, !dbg !966
  %and706.i = and i32 %shr705.i, 63, !dbg !966
  %idxprom707.i = zext i32 %and706.i to i64, !dbg !966
  %arrayidx708.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i, !dbg !966
  %493 = load i32, i32* %arrayidx708.i, align 4, !dbg !966
  %xor709.i = xor i32 %xor704.i, %493, !dbg !966
  %494 = load i32, i32* %u.i, align 4, !dbg !966
  %shr710.i = lshr i32 %494, 26, !dbg !966
  %idxprom712.i = zext i32 %shr710.i to i64, !dbg !966
  %arrayidx713.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i, !dbg !966
  %495 = load i32, i32* %arrayidx713.i, align 4, !dbg !966
  %xor714.i = xor i32 %xor709.i, %495, !dbg !966
  %496 = load i32, i32* %t.i, align 4, !dbg !966
  %shr715.i = lshr i32 %496, 2, !dbg !966
  %and716.i = and i32 %shr715.i, 63, !dbg !966
  %idxprom717.i = zext i32 %and716.i to i64, !dbg !966
  %arrayidx718.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i, !dbg !966
  %497 = load i32, i32* %arrayidx718.i, align 4, !dbg !966
  %xor719.i = xor i32 %xor714.i, %497, !dbg !966
  %498 = load i32, i32* %t.i, align 4, !dbg !966
  %shr720.i = lshr i32 %498, 10, !dbg !966
  %and721.i = and i32 %shr720.i, 63, !dbg !966
  %idxprom722.i = zext i32 %and721.i to i64, !dbg !966
  %arrayidx723.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i, !dbg !966
  %499 = load i32, i32* %arrayidx723.i, align 4, !dbg !966
  %xor724.i = xor i32 %xor719.i, %499, !dbg !966
  %500 = load i32, i32* %t.i, align 4, !dbg !966
  %shr725.i = lshr i32 %500, 18, !dbg !966
  %and726.i = and i32 %shr725.i, 63, !dbg !966
  %idxprom727.i = zext i32 %and726.i to i64, !dbg !966
  %arrayidx728.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i, !dbg !966
  %501 = load i32, i32* %arrayidx728.i, align 4, !dbg !966
  %xor729.i = xor i32 %xor724.i, %501, !dbg !966
  %502 = load i32, i32* %t.i, align 4, !dbg !966
  %shr730.i = lshr i32 %502, 26, !dbg !966
  %idxprom732.i = zext i32 %shr730.i to i64, !dbg !966
  %arrayidx733.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i, !dbg !966
  %503 = load i32, i32* %arrayidx733.i, align 4, !dbg !966
  %xor734.i = xor i32 %xor729.i, %503, !dbg !966
  %504 = load i32, i32* %l.i, align 4, !dbg !966
  %xor735.i = xor i32 %504, %xor734.i, !dbg !966
  store i32 %xor735.i, i32* %l.i, align 4, !dbg !966
  %505 = load i32, i32* %l.i, align 4, !dbg !967
  %506 = load i32*, i32** %s.i, align 8, !dbg !967
  %arrayidx736.i = getelementptr inbounds i32, i32* %506, i64 30, !dbg !967
  %507 = load i32, i32* %arrayidx736.i, align 4, !dbg !967
  %xor737.i = xor i32 %505, %507, !dbg !967
  store i32 %xor737.i, i32* %u.i, align 4, !dbg !967
  %508 = load i32, i32* %l.i, align 4, !dbg !967
  %509 = load i32*, i32** %s.i, align 8, !dbg !967
  %arrayidx738.i = getelementptr inbounds i32, i32* %509, i64 31, !dbg !967
  %510 = load i32, i32* %arrayidx738.i, align 4, !dbg !967
  %xor739.i = xor i32 %508, %510, !dbg !967
  store i32 %xor739.i, i32* %t.i, align 4, !dbg !967
  %511 = load i32, i32* %t.i, align 4, !dbg !859
  %512 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %511) #5, !dbg !859, !srcloc !184
  store i32 %512, i32* %ret740.i, align 4, !dbg !859
  %513 = load i32, i32* %ret740.i, align 4, !dbg !859
  store i32 %513, i32* %tmp741.i, align 4, !dbg !859
  %514 = load i32, i32* %tmp741.i, align 4, !dbg !859
  store i32 %514, i32* %t.i, align 4, !dbg !967
  %515 = load i32, i32* %u.i, align 4, !dbg !967
  %shr742.i = lshr i32 %515, 2, !dbg !967
  %and743.i = and i32 %shr742.i, 63, !dbg !967
  %idxprom744.i = zext i32 %and743.i to i64, !dbg !967
  %arrayidx745.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i, !dbg !967
  %516 = load i32, i32* %arrayidx745.i, align 4, !dbg !967
  %517 = load i32, i32* %u.i, align 4, !dbg !967
  %shr746.i = lshr i32 %517, 10, !dbg !967
  %and747.i = and i32 %shr746.i, 63, !dbg !967
  %idxprom748.i = zext i32 %and747.i to i64, !dbg !967
  %arrayidx749.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i, !dbg !967
  %518 = load i32, i32* %arrayidx749.i, align 4, !dbg !967
  %xor750.i = xor i32 %516, %518, !dbg !967
  %519 = load i32, i32* %u.i, align 4, !dbg !967
  %shr751.i = lshr i32 %519, 18, !dbg !967
  %and752.i = and i32 %shr751.i, 63, !dbg !967
  %idxprom753.i = zext i32 %and752.i to i64, !dbg !967
  %arrayidx754.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i, !dbg !967
  %520 = load i32, i32* %arrayidx754.i, align 4, !dbg !967
  %xor755.i = xor i32 %xor750.i, %520, !dbg !967
  %521 = load i32, i32* %u.i, align 4, !dbg !967
  %shr756.i = lshr i32 %521, 26, !dbg !967
  %idxprom758.i = zext i32 %shr756.i to i64, !dbg !967
  %arrayidx759.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i, !dbg !967
  %522 = load i32, i32* %arrayidx759.i, align 4, !dbg !967
  %xor760.i = xor i32 %xor755.i, %522, !dbg !967
  %523 = load i32, i32* %t.i, align 4, !dbg !967
  %shr761.i = lshr i32 %523, 2, !dbg !967
  %and762.i = and i32 %shr761.i, 63, !dbg !967
  %idxprom763.i = zext i32 %and762.i to i64, !dbg !967
  %arrayidx764.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i, !dbg !967
  %524 = load i32, i32* %arrayidx764.i, align 4, !dbg !967
  %xor765.i = xor i32 %xor760.i, %524, !dbg !967
  %525 = load i32, i32* %t.i, align 4, !dbg !967
  %shr766.i = lshr i32 %525, 10, !dbg !967
  %and767.i = and i32 %shr766.i, 63, !dbg !967
  %idxprom768.i = zext i32 %and767.i to i64, !dbg !967
  %arrayidx769.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i, !dbg !967
  %526 = load i32, i32* %arrayidx769.i, align 4, !dbg !967
  %xor770.i = xor i32 %xor765.i, %526, !dbg !967
  %527 = load i32, i32* %t.i, align 4, !dbg !967
  %shr771.i = lshr i32 %527, 18, !dbg !967
  %and772.i = and i32 %shr771.i, 63, !dbg !967
  %idxprom773.i = zext i32 %and772.i to i64, !dbg !967
  %arrayidx774.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i, !dbg !967
  %528 = load i32, i32* %arrayidx774.i, align 4, !dbg !967
  %xor775.i = xor i32 %xor770.i, %528, !dbg !967
  %529 = load i32, i32* %t.i, align 4, !dbg !967
  %shr776.i = lshr i32 %529, 26, !dbg !967
  %idxprom778.i = zext i32 %shr776.i to i64, !dbg !967
  %arrayidx779.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i, !dbg !967
  %530 = load i32, i32* %arrayidx779.i, align 4, !dbg !967
  %xor780.i = xor i32 %xor775.i, %530, !dbg !967
  %531 = load i32, i32* %r.i, align 4, !dbg !967
  %xor781.i = xor i32 %531, %xor780.i, !dbg !967
  store i32 %xor781.i, i32* %r.i, align 4, !dbg !967
  br label %DES_encrypt1.exit, !dbg !968

if.else.i:                                        ; preds = %for.body
  %532 = load i32, i32* %r.i, align 4, !dbg !969
  %533 = load i32*, i32** %s.i, align 8, !dbg !969
  %arrayidx782.i = getelementptr inbounds i32, i32* %533, i64 30, !dbg !969
  %534 = load i32, i32* %arrayidx782.i, align 4, !dbg !969
  %xor783.i = xor i32 %532, %534, !dbg !969
  store i32 %xor783.i, i32* %u.i, align 4, !dbg !969
  %535 = load i32, i32* %r.i, align 4, !dbg !969
  %536 = load i32*, i32** %s.i, align 8, !dbg !969
  %arrayidx784.i = getelementptr inbounds i32, i32* %536, i64 31, !dbg !969
  %537 = load i32, i32* %arrayidx784.i, align 4, !dbg !969
  %xor785.i = xor i32 %535, %537, !dbg !969
  store i32 %xor785.i, i32* %t.i, align 4, !dbg !969
  %538 = load i32, i32* %t.i, align 4, !dbg !860
  %539 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %538) #5, !dbg !860, !srcloc !192
  store i32 %539, i32* %ret786.i, align 4, !dbg !860
  %540 = load i32, i32* %ret786.i, align 4, !dbg !860
  store i32 %540, i32* %tmp787.i, align 4, !dbg !860
  %541 = load i32, i32* %tmp787.i, align 4, !dbg !860
  store i32 %541, i32* %t.i, align 4, !dbg !969
  %542 = load i32, i32* %u.i, align 4, !dbg !969
  %shr788.i = lshr i32 %542, 2, !dbg !969
  %and789.i = and i32 %shr788.i, 63, !dbg !969
  %idxprom790.i = zext i32 %and789.i to i64, !dbg !969
  %arrayidx791.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i, !dbg !969
  %543 = load i32, i32* %arrayidx791.i, align 4, !dbg !969
  %544 = load i32, i32* %u.i, align 4, !dbg !969
  %shr792.i = lshr i32 %544, 10, !dbg !969
  %and793.i = and i32 %shr792.i, 63, !dbg !969
  %idxprom794.i = zext i32 %and793.i to i64, !dbg !969
  %arrayidx795.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i, !dbg !969
  %545 = load i32, i32* %arrayidx795.i, align 4, !dbg !969
  %xor796.i = xor i32 %543, %545, !dbg !969
  %546 = load i32, i32* %u.i, align 4, !dbg !969
  %shr797.i = lshr i32 %546, 18, !dbg !969
  %and798.i = and i32 %shr797.i, 63, !dbg !969
  %idxprom799.i = zext i32 %and798.i to i64, !dbg !969
  %arrayidx800.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i, !dbg !969
  %547 = load i32, i32* %arrayidx800.i, align 4, !dbg !969
  %xor801.i = xor i32 %xor796.i, %547, !dbg !969
  %548 = load i32, i32* %u.i, align 4, !dbg !969
  %shr802.i = lshr i32 %548, 26, !dbg !969
  %idxprom804.i = zext i32 %shr802.i to i64, !dbg !969
  %arrayidx805.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i, !dbg !969
  %549 = load i32, i32* %arrayidx805.i, align 4, !dbg !969
  %xor806.i = xor i32 %xor801.i, %549, !dbg !969
  %550 = load i32, i32* %t.i, align 4, !dbg !969
  %shr807.i = lshr i32 %550, 2, !dbg !969
  %and808.i = and i32 %shr807.i, 63, !dbg !969
  %idxprom809.i = zext i32 %and808.i to i64, !dbg !969
  %arrayidx810.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i, !dbg !969
  %551 = load i32, i32* %arrayidx810.i, align 4, !dbg !969
  %xor811.i = xor i32 %xor806.i, %551, !dbg !969
  %552 = load i32, i32* %t.i, align 4, !dbg !969
  %shr812.i = lshr i32 %552, 10, !dbg !969
  %and813.i = and i32 %shr812.i, 63, !dbg !969
  %idxprom814.i = zext i32 %and813.i to i64, !dbg !969
  %arrayidx815.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i, !dbg !969
  %553 = load i32, i32* %arrayidx815.i, align 4, !dbg !969
  %xor816.i = xor i32 %xor811.i, %553, !dbg !969
  %554 = load i32, i32* %t.i, align 4, !dbg !969
  %shr817.i = lshr i32 %554, 18, !dbg !969
  %and818.i = and i32 %shr817.i, 63, !dbg !969
  %idxprom819.i = zext i32 %and818.i to i64, !dbg !969
  %arrayidx820.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i, !dbg !969
  %555 = load i32, i32* %arrayidx820.i, align 4, !dbg !969
  %xor821.i = xor i32 %xor816.i, %555, !dbg !969
  %556 = load i32, i32* %t.i, align 4, !dbg !969
  %shr822.i = lshr i32 %556, 26, !dbg !969
  %idxprom824.i = zext i32 %shr822.i to i64, !dbg !969
  %arrayidx825.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i, !dbg !969
  %557 = load i32, i32* %arrayidx825.i, align 4, !dbg !969
  %xor826.i = xor i32 %xor821.i, %557, !dbg !969
  %558 = load i32, i32* %l.i, align 4, !dbg !969
  %xor827.i = xor i32 %558, %xor826.i, !dbg !969
  store i32 %xor827.i, i32* %l.i, align 4, !dbg !969
  %559 = load i32, i32* %l.i, align 4, !dbg !970
  %560 = load i32*, i32** %s.i, align 8, !dbg !970
  %arrayidx828.i = getelementptr inbounds i32, i32* %560, i64 28, !dbg !970
  %561 = load i32, i32* %arrayidx828.i, align 4, !dbg !970
  %xor829.i = xor i32 %559, %561, !dbg !970
  store i32 %xor829.i, i32* %u.i, align 4, !dbg !970
  %562 = load i32, i32* %l.i, align 4, !dbg !970
  %563 = load i32*, i32** %s.i, align 8, !dbg !970
  %arrayidx830.i = getelementptr inbounds i32, i32* %563, i64 29, !dbg !970
  %564 = load i32, i32* %arrayidx830.i, align 4, !dbg !970
  %xor831.i = xor i32 %562, %564, !dbg !970
  store i32 %xor831.i, i32* %t.i, align 4, !dbg !970
  %565 = load i32, i32* %t.i, align 4, !dbg !861
  %566 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %565) #5, !dbg !861, !srcloc !198
  store i32 %566, i32* %ret832.i, align 4, !dbg !861
  %567 = load i32, i32* %ret832.i, align 4, !dbg !861
  store i32 %567, i32* %tmp833.i, align 4, !dbg !861
  %568 = load i32, i32* %tmp833.i, align 4, !dbg !861
  store i32 %568, i32* %t.i, align 4, !dbg !970
  %569 = load i32, i32* %u.i, align 4, !dbg !970
  %shr834.i = lshr i32 %569, 2, !dbg !970
  %and835.i = and i32 %shr834.i, 63, !dbg !970
  %idxprom836.i = zext i32 %and835.i to i64, !dbg !970
  %arrayidx837.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i, !dbg !970
  %570 = load i32, i32* %arrayidx837.i, align 4, !dbg !970
  %571 = load i32, i32* %u.i, align 4, !dbg !970
  %shr838.i = lshr i32 %571, 10, !dbg !970
  %and839.i = and i32 %shr838.i, 63, !dbg !970
  %idxprom840.i = zext i32 %and839.i to i64, !dbg !970
  %arrayidx841.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i, !dbg !970
  %572 = load i32, i32* %arrayidx841.i, align 4, !dbg !970
  %xor842.i = xor i32 %570, %572, !dbg !970
  %573 = load i32, i32* %u.i, align 4, !dbg !970
  %shr843.i = lshr i32 %573, 18, !dbg !970
  %and844.i = and i32 %shr843.i, 63, !dbg !970
  %idxprom845.i = zext i32 %and844.i to i64, !dbg !970
  %arrayidx846.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i, !dbg !970
  %574 = load i32, i32* %arrayidx846.i, align 4, !dbg !970
  %xor847.i = xor i32 %xor842.i, %574, !dbg !970
  %575 = load i32, i32* %u.i, align 4, !dbg !970
  %shr848.i = lshr i32 %575, 26, !dbg !970
  %idxprom850.i = zext i32 %shr848.i to i64, !dbg !970
  %arrayidx851.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i, !dbg !970
  %576 = load i32, i32* %arrayidx851.i, align 4, !dbg !970
  %xor852.i = xor i32 %xor847.i, %576, !dbg !970
  %577 = load i32, i32* %t.i, align 4, !dbg !970
  %shr853.i = lshr i32 %577, 2, !dbg !970
  %and854.i = and i32 %shr853.i, 63, !dbg !970
  %idxprom855.i = zext i32 %and854.i to i64, !dbg !970
  %arrayidx856.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i, !dbg !970
  %578 = load i32, i32* %arrayidx856.i, align 4, !dbg !970
  %xor857.i = xor i32 %xor852.i, %578, !dbg !970
  %579 = load i32, i32* %t.i, align 4, !dbg !970
  %shr858.i = lshr i32 %579, 10, !dbg !970
  %and859.i = and i32 %shr858.i, 63, !dbg !970
  %idxprom860.i = zext i32 %and859.i to i64, !dbg !970
  %arrayidx861.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i, !dbg !970
  %580 = load i32, i32* %arrayidx861.i, align 4, !dbg !970
  %xor862.i = xor i32 %xor857.i, %580, !dbg !970
  %581 = load i32, i32* %t.i, align 4, !dbg !970
  %shr863.i = lshr i32 %581, 18, !dbg !970
  %and864.i = and i32 %shr863.i, 63, !dbg !970
  %idxprom865.i = zext i32 %and864.i to i64, !dbg !970
  %arrayidx866.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i, !dbg !970
  %582 = load i32, i32* %arrayidx866.i, align 4, !dbg !970
  %xor867.i = xor i32 %xor862.i, %582, !dbg !970
  %583 = load i32, i32* %t.i, align 4, !dbg !970
  %shr868.i = lshr i32 %583, 26, !dbg !970
  %idxprom870.i = zext i32 %shr868.i to i64, !dbg !970
  %arrayidx871.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i, !dbg !970
  %584 = load i32, i32* %arrayidx871.i, align 4, !dbg !970
  %xor872.i = xor i32 %xor867.i, %584, !dbg !970
  %585 = load i32, i32* %r.i, align 4, !dbg !970
  %xor873.i = xor i32 %585, %xor872.i, !dbg !970
  store i32 %xor873.i, i32* %r.i, align 4, !dbg !970
  %586 = load i32, i32* %r.i, align 4, !dbg !971
  %587 = load i32*, i32** %s.i, align 8, !dbg !971
  %arrayidx874.i = getelementptr inbounds i32, i32* %587, i64 26, !dbg !971
  %588 = load i32, i32* %arrayidx874.i, align 4, !dbg !971
  %xor875.i = xor i32 %586, %588, !dbg !971
  store i32 %xor875.i, i32* %u.i, align 4, !dbg !971
  %589 = load i32, i32* %r.i, align 4, !dbg !971
  %590 = load i32*, i32** %s.i, align 8, !dbg !971
  %arrayidx876.i = getelementptr inbounds i32, i32* %590, i64 27, !dbg !971
  %591 = load i32, i32* %arrayidx876.i, align 4, !dbg !971
  %xor877.i = xor i32 %589, %591, !dbg !971
  store i32 %xor877.i, i32* %t.i, align 4, !dbg !971
  %592 = load i32, i32* %t.i, align 4, !dbg !862
  %593 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %592) #5, !dbg !862, !srcloc !204
  store i32 %593, i32* %ret878.i, align 4, !dbg !862
  %594 = load i32, i32* %ret878.i, align 4, !dbg !862
  store i32 %594, i32* %tmp879.i, align 4, !dbg !862
  %595 = load i32, i32* %tmp879.i, align 4, !dbg !862
  store i32 %595, i32* %t.i, align 4, !dbg !971
  %596 = load i32, i32* %u.i, align 4, !dbg !971
  %shr880.i = lshr i32 %596, 2, !dbg !971
  %and881.i = and i32 %shr880.i, 63, !dbg !971
  %idxprom882.i = zext i32 %and881.i to i64, !dbg !971
  %arrayidx883.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i, !dbg !971
  %597 = load i32, i32* %arrayidx883.i, align 4, !dbg !971
  %598 = load i32, i32* %u.i, align 4, !dbg !971
  %shr884.i = lshr i32 %598, 10, !dbg !971
  %and885.i = and i32 %shr884.i, 63, !dbg !971
  %idxprom886.i = zext i32 %and885.i to i64, !dbg !971
  %arrayidx887.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i, !dbg !971
  %599 = load i32, i32* %arrayidx887.i, align 4, !dbg !971
  %xor888.i = xor i32 %597, %599, !dbg !971
  %600 = load i32, i32* %u.i, align 4, !dbg !971
  %shr889.i = lshr i32 %600, 18, !dbg !971
  %and890.i = and i32 %shr889.i, 63, !dbg !971
  %idxprom891.i = zext i32 %and890.i to i64, !dbg !971
  %arrayidx892.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i, !dbg !971
  %601 = load i32, i32* %arrayidx892.i, align 4, !dbg !971
  %xor893.i = xor i32 %xor888.i, %601, !dbg !971
  %602 = load i32, i32* %u.i, align 4, !dbg !971
  %shr894.i = lshr i32 %602, 26, !dbg !971
  %idxprom896.i = zext i32 %shr894.i to i64, !dbg !971
  %arrayidx897.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i, !dbg !971
  %603 = load i32, i32* %arrayidx897.i, align 4, !dbg !971
  %xor898.i = xor i32 %xor893.i, %603, !dbg !971
  %604 = load i32, i32* %t.i, align 4, !dbg !971
  %shr899.i = lshr i32 %604, 2, !dbg !971
  %and900.i = and i32 %shr899.i, 63, !dbg !971
  %idxprom901.i = zext i32 %and900.i to i64, !dbg !971
  %arrayidx902.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i, !dbg !971
  %605 = load i32, i32* %arrayidx902.i, align 4, !dbg !971
  %xor903.i = xor i32 %xor898.i, %605, !dbg !971
  %606 = load i32, i32* %t.i, align 4, !dbg !971
  %shr904.i = lshr i32 %606, 10, !dbg !971
  %and905.i = and i32 %shr904.i, 63, !dbg !971
  %idxprom906.i = zext i32 %and905.i to i64, !dbg !971
  %arrayidx907.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i, !dbg !971
  %607 = load i32, i32* %arrayidx907.i, align 4, !dbg !971
  %xor908.i = xor i32 %xor903.i, %607, !dbg !971
  %608 = load i32, i32* %t.i, align 4, !dbg !971
  %shr909.i = lshr i32 %608, 18, !dbg !971
  %and910.i = and i32 %shr909.i, 63, !dbg !971
  %idxprom911.i = zext i32 %and910.i to i64, !dbg !971
  %arrayidx912.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i, !dbg !971
  %609 = load i32, i32* %arrayidx912.i, align 4, !dbg !971
  %xor913.i = xor i32 %xor908.i, %609, !dbg !971
  %610 = load i32, i32* %t.i, align 4, !dbg !971
  %shr914.i = lshr i32 %610, 26, !dbg !971
  %idxprom916.i = zext i32 %shr914.i to i64, !dbg !971
  %arrayidx917.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i, !dbg !971
  %611 = load i32, i32* %arrayidx917.i, align 4, !dbg !971
  %xor918.i = xor i32 %xor913.i, %611, !dbg !971
  %612 = load i32, i32* %l.i, align 4, !dbg !971
  %xor919.i = xor i32 %612, %xor918.i, !dbg !971
  store i32 %xor919.i, i32* %l.i, align 4, !dbg !971
  %613 = load i32, i32* %l.i, align 4, !dbg !972
  %614 = load i32*, i32** %s.i, align 8, !dbg !972
  %arrayidx920.i = getelementptr inbounds i32, i32* %614, i64 24, !dbg !972
  %615 = load i32, i32* %arrayidx920.i, align 4, !dbg !972
  %xor921.i = xor i32 %613, %615, !dbg !972
  store i32 %xor921.i, i32* %u.i, align 4, !dbg !972
  %616 = load i32, i32* %l.i, align 4, !dbg !972
  %617 = load i32*, i32** %s.i, align 8, !dbg !972
  %arrayidx922.i = getelementptr inbounds i32, i32* %617, i64 25, !dbg !972
  %618 = load i32, i32* %arrayidx922.i, align 4, !dbg !972
  %xor923.i = xor i32 %616, %618, !dbg !972
  store i32 %xor923.i, i32* %t.i, align 4, !dbg !972
  %619 = load i32, i32* %t.i, align 4, !dbg !863
  %620 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %619) #5, !dbg !863, !srcloc !210
  store i32 %620, i32* %ret924.i, align 4, !dbg !863
  %621 = load i32, i32* %ret924.i, align 4, !dbg !863
  store i32 %621, i32* %tmp925.i, align 4, !dbg !863
  %622 = load i32, i32* %tmp925.i, align 4, !dbg !863
  store i32 %622, i32* %t.i, align 4, !dbg !972
  %623 = load i32, i32* %u.i, align 4, !dbg !972
  %shr926.i = lshr i32 %623, 2, !dbg !972
  %and927.i = and i32 %shr926.i, 63, !dbg !972
  %idxprom928.i = zext i32 %and927.i to i64, !dbg !972
  %arrayidx929.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i, !dbg !972
  %624 = load i32, i32* %arrayidx929.i, align 4, !dbg !972
  %625 = load i32, i32* %u.i, align 4, !dbg !972
  %shr930.i = lshr i32 %625, 10, !dbg !972
  %and931.i = and i32 %shr930.i, 63, !dbg !972
  %idxprom932.i = zext i32 %and931.i to i64, !dbg !972
  %arrayidx933.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i, !dbg !972
  %626 = load i32, i32* %arrayidx933.i, align 4, !dbg !972
  %xor934.i = xor i32 %624, %626, !dbg !972
  %627 = load i32, i32* %u.i, align 4, !dbg !972
  %shr935.i = lshr i32 %627, 18, !dbg !972
  %and936.i = and i32 %shr935.i, 63, !dbg !972
  %idxprom937.i = zext i32 %and936.i to i64, !dbg !972
  %arrayidx938.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i, !dbg !972
  %628 = load i32, i32* %arrayidx938.i, align 4, !dbg !972
  %xor939.i = xor i32 %xor934.i, %628, !dbg !972
  %629 = load i32, i32* %u.i, align 4, !dbg !972
  %shr940.i = lshr i32 %629, 26, !dbg !972
  %idxprom942.i = zext i32 %shr940.i to i64, !dbg !972
  %arrayidx943.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i, !dbg !972
  %630 = load i32, i32* %arrayidx943.i, align 4, !dbg !972
  %xor944.i = xor i32 %xor939.i, %630, !dbg !972
  %631 = load i32, i32* %t.i, align 4, !dbg !972
  %shr945.i = lshr i32 %631, 2, !dbg !972
  %and946.i = and i32 %shr945.i, 63, !dbg !972
  %idxprom947.i = zext i32 %and946.i to i64, !dbg !972
  %arrayidx948.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i, !dbg !972
  %632 = load i32, i32* %arrayidx948.i, align 4, !dbg !972
  %xor949.i = xor i32 %xor944.i, %632, !dbg !972
  %633 = load i32, i32* %t.i, align 4, !dbg !972
  %shr950.i = lshr i32 %633, 10, !dbg !972
  %and951.i = and i32 %shr950.i, 63, !dbg !972
  %idxprom952.i = zext i32 %and951.i to i64, !dbg !972
  %arrayidx953.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i, !dbg !972
  %634 = load i32, i32* %arrayidx953.i, align 4, !dbg !972
  %xor954.i = xor i32 %xor949.i, %634, !dbg !972
  %635 = load i32, i32* %t.i, align 4, !dbg !972
  %shr955.i = lshr i32 %635, 18, !dbg !972
  %and956.i = and i32 %shr955.i, 63, !dbg !972
  %idxprom957.i = zext i32 %and956.i to i64, !dbg !972
  %arrayidx958.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i, !dbg !972
  %636 = load i32, i32* %arrayidx958.i, align 4, !dbg !972
  %xor959.i = xor i32 %xor954.i, %636, !dbg !972
  %637 = load i32, i32* %t.i, align 4, !dbg !972
  %shr960.i = lshr i32 %637, 26, !dbg !972
  %idxprom962.i = zext i32 %shr960.i to i64, !dbg !972
  %arrayidx963.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i, !dbg !972
  %638 = load i32, i32* %arrayidx963.i, align 4, !dbg !972
  %xor964.i = xor i32 %xor959.i, %638, !dbg !972
  %639 = load i32, i32* %r.i, align 4, !dbg !972
  %xor965.i = xor i32 %639, %xor964.i, !dbg !972
  store i32 %xor965.i, i32* %r.i, align 4, !dbg !972
  %640 = load i32, i32* %r.i, align 4, !dbg !973
  %641 = load i32*, i32** %s.i, align 8, !dbg !973
  %arrayidx966.i = getelementptr inbounds i32, i32* %641, i64 22, !dbg !973
  %642 = load i32, i32* %arrayidx966.i, align 4, !dbg !973
  %xor967.i = xor i32 %640, %642, !dbg !973
  store i32 %xor967.i, i32* %u.i, align 4, !dbg !973
  %643 = load i32, i32* %r.i, align 4, !dbg !973
  %644 = load i32*, i32** %s.i, align 8, !dbg !973
  %arrayidx968.i = getelementptr inbounds i32, i32* %644, i64 23, !dbg !973
  %645 = load i32, i32* %arrayidx968.i, align 4, !dbg !973
  %xor969.i = xor i32 %643, %645, !dbg !973
  store i32 %xor969.i, i32* %t.i, align 4, !dbg !973
  %646 = load i32, i32* %t.i, align 4, !dbg !864
  %647 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %646) #5, !dbg !864, !srcloc !216
  store i32 %647, i32* %ret970.i, align 4, !dbg !864
  %648 = load i32, i32* %ret970.i, align 4, !dbg !864
  store i32 %648, i32* %tmp971.i, align 4, !dbg !864
  %649 = load i32, i32* %tmp971.i, align 4, !dbg !864
  store i32 %649, i32* %t.i, align 4, !dbg !973
  %650 = load i32, i32* %u.i, align 4, !dbg !973
  %shr972.i = lshr i32 %650, 2, !dbg !973
  %and973.i = and i32 %shr972.i, 63, !dbg !973
  %idxprom974.i = zext i32 %and973.i to i64, !dbg !973
  %arrayidx975.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i, !dbg !973
  %651 = load i32, i32* %arrayidx975.i, align 4, !dbg !973
  %652 = load i32, i32* %u.i, align 4, !dbg !973
  %shr976.i = lshr i32 %652, 10, !dbg !973
  %and977.i = and i32 %shr976.i, 63, !dbg !973
  %idxprom978.i = zext i32 %and977.i to i64, !dbg !973
  %arrayidx979.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i, !dbg !973
  %653 = load i32, i32* %arrayidx979.i, align 4, !dbg !973
  %xor980.i = xor i32 %651, %653, !dbg !973
  %654 = load i32, i32* %u.i, align 4, !dbg !973
  %shr981.i = lshr i32 %654, 18, !dbg !973
  %and982.i = and i32 %shr981.i, 63, !dbg !973
  %idxprom983.i = zext i32 %and982.i to i64, !dbg !973
  %arrayidx984.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i, !dbg !973
  %655 = load i32, i32* %arrayidx984.i, align 4, !dbg !973
  %xor985.i = xor i32 %xor980.i, %655, !dbg !973
  %656 = load i32, i32* %u.i, align 4, !dbg !973
  %shr986.i = lshr i32 %656, 26, !dbg !973
  %idxprom988.i = zext i32 %shr986.i to i64, !dbg !973
  %arrayidx989.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i, !dbg !973
  %657 = load i32, i32* %arrayidx989.i, align 4, !dbg !973
  %xor990.i = xor i32 %xor985.i, %657, !dbg !973
  %658 = load i32, i32* %t.i, align 4, !dbg !973
  %shr991.i = lshr i32 %658, 2, !dbg !973
  %and992.i = and i32 %shr991.i, 63, !dbg !973
  %idxprom993.i = zext i32 %and992.i to i64, !dbg !973
  %arrayidx994.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i, !dbg !973
  %659 = load i32, i32* %arrayidx994.i, align 4, !dbg !973
  %xor995.i = xor i32 %xor990.i, %659, !dbg !973
  %660 = load i32, i32* %t.i, align 4, !dbg !973
  %shr996.i = lshr i32 %660, 10, !dbg !973
  %and997.i = and i32 %shr996.i, 63, !dbg !973
  %idxprom998.i = zext i32 %and997.i to i64, !dbg !973
  %arrayidx999.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i, !dbg !973
  %661 = load i32, i32* %arrayidx999.i, align 4, !dbg !973
  %xor1000.i = xor i32 %xor995.i, %661, !dbg !973
  %662 = load i32, i32* %t.i, align 4, !dbg !973
  %shr1001.i = lshr i32 %662, 18, !dbg !973
  %and1002.i = and i32 %shr1001.i, 63, !dbg !973
  %idxprom1003.i = zext i32 %and1002.i to i64, !dbg !973
  %arrayidx1004.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i, !dbg !973
  %663 = load i32, i32* %arrayidx1004.i, align 4, !dbg !973
  %xor1005.i = xor i32 %xor1000.i, %663, !dbg !973
  %664 = load i32, i32* %t.i, align 4, !dbg !973
  %shr1006.i = lshr i32 %664, 26, !dbg !973
  %idxprom1008.i = zext i32 %shr1006.i to i64, !dbg !973
  %arrayidx1009.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i, !dbg !973
  %665 = load i32, i32* %arrayidx1009.i, align 4, !dbg !973
  %xor1010.i = xor i32 %xor1005.i, %665, !dbg !973
  %666 = load i32, i32* %l.i, align 4, !dbg !973
  %xor1011.i = xor i32 %666, %xor1010.i, !dbg !973
  store i32 %xor1011.i, i32* %l.i, align 4, !dbg !973
  %667 = load i32, i32* %l.i, align 4, !dbg !974
  %668 = load i32*, i32** %s.i, align 8, !dbg !974
  %arrayidx1012.i = getelementptr inbounds i32, i32* %668, i64 20, !dbg !974
  %669 = load i32, i32* %arrayidx1012.i, align 4, !dbg !974
  %xor1013.i = xor i32 %667, %669, !dbg !974
  store i32 %xor1013.i, i32* %u.i, align 4, !dbg !974
  %670 = load i32, i32* %l.i, align 4, !dbg !974
  %671 = load i32*, i32** %s.i, align 8, !dbg !974
  %arrayidx1014.i = getelementptr inbounds i32, i32* %671, i64 21, !dbg !974
  %672 = load i32, i32* %arrayidx1014.i, align 4, !dbg !974
  %xor1015.i = xor i32 %670, %672, !dbg !974
  store i32 %xor1015.i, i32* %t.i, align 4, !dbg !974
  %673 = load i32, i32* %t.i, align 4, !dbg !865
  %674 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %673) #5, !dbg !865, !srcloc !222
  store i32 %674, i32* %ret1016.i, align 4, !dbg !865
  %675 = load i32, i32* %ret1016.i, align 4, !dbg !865
  store i32 %675, i32* %tmp1017.i, align 4, !dbg !865
  %676 = load i32, i32* %tmp1017.i, align 4, !dbg !865
  store i32 %676, i32* %t.i, align 4, !dbg !974
  %677 = load i32, i32* %u.i, align 4, !dbg !974
  %shr1018.i = lshr i32 %677, 2, !dbg !974
  %and1019.i = and i32 %shr1018.i, 63, !dbg !974
  %idxprom1020.i = zext i32 %and1019.i to i64, !dbg !974
  %arrayidx1021.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i, !dbg !974
  %678 = load i32, i32* %arrayidx1021.i, align 4, !dbg !974
  %679 = load i32, i32* %u.i, align 4, !dbg !974
  %shr1022.i = lshr i32 %679, 10, !dbg !974
  %and1023.i = and i32 %shr1022.i, 63, !dbg !974
  %idxprom1024.i = zext i32 %and1023.i to i64, !dbg !974
  %arrayidx1025.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i, !dbg !974
  %680 = load i32, i32* %arrayidx1025.i, align 4, !dbg !974
  %xor1026.i = xor i32 %678, %680, !dbg !974
  %681 = load i32, i32* %u.i, align 4, !dbg !974
  %shr1027.i = lshr i32 %681, 18, !dbg !974
  %and1028.i = and i32 %shr1027.i, 63, !dbg !974
  %idxprom1029.i = zext i32 %and1028.i to i64, !dbg !974
  %arrayidx1030.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i, !dbg !974
  %682 = load i32, i32* %arrayidx1030.i, align 4, !dbg !974
  %xor1031.i = xor i32 %xor1026.i, %682, !dbg !974
  %683 = load i32, i32* %u.i, align 4, !dbg !974
  %shr1032.i = lshr i32 %683, 26, !dbg !974
  %idxprom1034.i = zext i32 %shr1032.i to i64, !dbg !974
  %arrayidx1035.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i, !dbg !974
  %684 = load i32, i32* %arrayidx1035.i, align 4, !dbg !974
  %xor1036.i = xor i32 %xor1031.i, %684, !dbg !974
  %685 = load i32, i32* %t.i, align 4, !dbg !974
  %shr1037.i = lshr i32 %685, 2, !dbg !974
  %and1038.i = and i32 %shr1037.i, 63, !dbg !974
  %idxprom1039.i = zext i32 %and1038.i to i64, !dbg !974
  %arrayidx1040.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i, !dbg !974
  %686 = load i32, i32* %arrayidx1040.i, align 4, !dbg !974
  %xor1041.i = xor i32 %xor1036.i, %686, !dbg !974
  %687 = load i32, i32* %t.i, align 4, !dbg !974
  %shr1042.i = lshr i32 %687, 10, !dbg !974
  %and1043.i = and i32 %shr1042.i, 63, !dbg !974
  %idxprom1044.i = zext i32 %and1043.i to i64, !dbg !974
  %arrayidx1045.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i, !dbg !974
  %688 = load i32, i32* %arrayidx1045.i, align 4, !dbg !974
  %xor1046.i = xor i32 %xor1041.i, %688, !dbg !974
  %689 = load i32, i32* %t.i, align 4, !dbg !974
  %shr1047.i = lshr i32 %689, 18, !dbg !974
  %and1048.i = and i32 %shr1047.i, 63, !dbg !974
  %idxprom1049.i = zext i32 %and1048.i to i64, !dbg !974
  %arrayidx1050.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i, !dbg !974
  %690 = load i32, i32* %arrayidx1050.i, align 4, !dbg !974
  %xor1051.i = xor i32 %xor1046.i, %690, !dbg !974
  %691 = load i32, i32* %t.i, align 4, !dbg !974
  %shr1052.i = lshr i32 %691, 26, !dbg !974
  %idxprom1054.i = zext i32 %shr1052.i to i64, !dbg !974
  %arrayidx1055.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i, !dbg !974
  %692 = load i32, i32* %arrayidx1055.i, align 4, !dbg !974
  %xor1056.i = xor i32 %xor1051.i, %692, !dbg !974
  %693 = load i32, i32* %r.i, align 4, !dbg !974
  %xor1057.i = xor i32 %693, %xor1056.i, !dbg !974
  store i32 %xor1057.i, i32* %r.i, align 4, !dbg !974
  %694 = load i32, i32* %r.i, align 4, !dbg !975
  %695 = load i32*, i32** %s.i, align 8, !dbg !975
  %arrayidx1058.i = getelementptr inbounds i32, i32* %695, i64 18, !dbg !975
  %696 = load i32, i32* %arrayidx1058.i, align 4, !dbg !975
  %xor1059.i = xor i32 %694, %696, !dbg !975
  store i32 %xor1059.i, i32* %u.i, align 4, !dbg !975
  %697 = load i32, i32* %r.i, align 4, !dbg !975
  %698 = load i32*, i32** %s.i, align 8, !dbg !975
  %arrayidx1060.i = getelementptr inbounds i32, i32* %698, i64 19, !dbg !975
  %699 = load i32, i32* %arrayidx1060.i, align 4, !dbg !975
  %xor1061.i = xor i32 %697, %699, !dbg !975
  store i32 %xor1061.i, i32* %t.i, align 4, !dbg !975
  %700 = load i32, i32* %t.i, align 4, !dbg !866
  %701 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %700) #5, !dbg !866, !srcloc !228
  store i32 %701, i32* %ret1062.i, align 4, !dbg !866
  %702 = load i32, i32* %ret1062.i, align 4, !dbg !866
  store i32 %702, i32* %tmp1063.i, align 4, !dbg !866
  %703 = load i32, i32* %tmp1063.i, align 4, !dbg !866
  store i32 %703, i32* %t.i, align 4, !dbg !975
  %704 = load i32, i32* %u.i, align 4, !dbg !975
  %shr1064.i = lshr i32 %704, 2, !dbg !975
  %and1065.i = and i32 %shr1064.i, 63, !dbg !975
  %idxprom1066.i = zext i32 %and1065.i to i64, !dbg !975
  %arrayidx1067.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i, !dbg !975
  %705 = load i32, i32* %arrayidx1067.i, align 4, !dbg !975
  %706 = load i32, i32* %u.i, align 4, !dbg !975
  %shr1068.i = lshr i32 %706, 10, !dbg !975
  %and1069.i = and i32 %shr1068.i, 63, !dbg !975
  %idxprom1070.i = zext i32 %and1069.i to i64, !dbg !975
  %arrayidx1071.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i, !dbg !975
  %707 = load i32, i32* %arrayidx1071.i, align 4, !dbg !975
  %xor1072.i = xor i32 %705, %707, !dbg !975
  %708 = load i32, i32* %u.i, align 4, !dbg !975
  %shr1073.i = lshr i32 %708, 18, !dbg !975
  %and1074.i = and i32 %shr1073.i, 63, !dbg !975
  %idxprom1075.i = zext i32 %and1074.i to i64, !dbg !975
  %arrayidx1076.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i, !dbg !975
  %709 = load i32, i32* %arrayidx1076.i, align 4, !dbg !975
  %xor1077.i = xor i32 %xor1072.i, %709, !dbg !975
  %710 = load i32, i32* %u.i, align 4, !dbg !975
  %shr1078.i = lshr i32 %710, 26, !dbg !975
  %idxprom1080.i = zext i32 %shr1078.i to i64, !dbg !975
  %arrayidx1081.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i, !dbg !975
  %711 = load i32, i32* %arrayidx1081.i, align 4, !dbg !975
  %xor1082.i = xor i32 %xor1077.i, %711, !dbg !975
  %712 = load i32, i32* %t.i, align 4, !dbg !975
  %shr1083.i = lshr i32 %712, 2, !dbg !975
  %and1084.i = and i32 %shr1083.i, 63, !dbg !975
  %idxprom1085.i = zext i32 %and1084.i to i64, !dbg !975
  %arrayidx1086.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i, !dbg !975
  %713 = load i32, i32* %arrayidx1086.i, align 4, !dbg !975
  %xor1087.i = xor i32 %xor1082.i, %713, !dbg !975
  %714 = load i32, i32* %t.i, align 4, !dbg !975
  %shr1088.i = lshr i32 %714, 10, !dbg !975
  %and1089.i = and i32 %shr1088.i, 63, !dbg !975
  %idxprom1090.i = zext i32 %and1089.i to i64, !dbg !975
  %arrayidx1091.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i, !dbg !975
  %715 = load i32, i32* %arrayidx1091.i, align 4, !dbg !975
  %xor1092.i = xor i32 %xor1087.i, %715, !dbg !975
  %716 = load i32, i32* %t.i, align 4, !dbg !975
  %shr1093.i = lshr i32 %716, 18, !dbg !975
  %and1094.i = and i32 %shr1093.i, 63, !dbg !975
  %idxprom1095.i = zext i32 %and1094.i to i64, !dbg !975
  %arrayidx1096.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i, !dbg !975
  %717 = load i32, i32* %arrayidx1096.i, align 4, !dbg !975
  %xor1097.i = xor i32 %xor1092.i, %717, !dbg !975
  %718 = load i32, i32* %t.i, align 4, !dbg !975
  %shr1098.i = lshr i32 %718, 26, !dbg !975
  %idxprom1100.i = zext i32 %shr1098.i to i64, !dbg !975
  %arrayidx1101.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i, !dbg !975
  %719 = load i32, i32* %arrayidx1101.i, align 4, !dbg !975
  %xor1102.i = xor i32 %xor1097.i, %719, !dbg !975
  %720 = load i32, i32* %l.i, align 4, !dbg !975
  %xor1103.i = xor i32 %720, %xor1102.i, !dbg !975
  store i32 %xor1103.i, i32* %l.i, align 4, !dbg !975
  %721 = load i32, i32* %l.i, align 4, !dbg !976
  %722 = load i32*, i32** %s.i, align 8, !dbg !976
  %arrayidx1104.i = getelementptr inbounds i32, i32* %722, i64 16, !dbg !976
  %723 = load i32, i32* %arrayidx1104.i, align 4, !dbg !976
  %xor1105.i = xor i32 %721, %723, !dbg !976
  store i32 %xor1105.i, i32* %u.i, align 4, !dbg !976
  %724 = load i32, i32* %l.i, align 4, !dbg !976
  %725 = load i32*, i32** %s.i, align 8, !dbg !976
  %arrayidx1106.i = getelementptr inbounds i32, i32* %725, i64 17, !dbg !976
  %726 = load i32, i32* %arrayidx1106.i, align 4, !dbg !976
  %xor1107.i = xor i32 %724, %726, !dbg !976
  store i32 %xor1107.i, i32* %t.i, align 4, !dbg !976
  %727 = load i32, i32* %t.i, align 4, !dbg !867
  %728 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %727) #5, !dbg !867, !srcloc !234
  store i32 %728, i32* %ret1108.i, align 4, !dbg !867
  %729 = load i32, i32* %ret1108.i, align 4, !dbg !867
  store i32 %729, i32* %tmp1109.i, align 4, !dbg !867
  %730 = load i32, i32* %tmp1109.i, align 4, !dbg !867
  store i32 %730, i32* %t.i, align 4, !dbg !976
  %731 = load i32, i32* %u.i, align 4, !dbg !976
  %shr1110.i = lshr i32 %731, 2, !dbg !976
  %and1111.i = and i32 %shr1110.i, 63, !dbg !976
  %idxprom1112.i = zext i32 %and1111.i to i64, !dbg !976
  %arrayidx1113.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i, !dbg !976
  %732 = load i32, i32* %arrayidx1113.i, align 4, !dbg !976
  %733 = load i32, i32* %u.i, align 4, !dbg !976
  %shr1114.i = lshr i32 %733, 10, !dbg !976
  %and1115.i = and i32 %shr1114.i, 63, !dbg !976
  %idxprom1116.i = zext i32 %and1115.i to i64, !dbg !976
  %arrayidx1117.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i, !dbg !976
  %734 = load i32, i32* %arrayidx1117.i, align 4, !dbg !976
  %xor1118.i = xor i32 %732, %734, !dbg !976
  %735 = load i32, i32* %u.i, align 4, !dbg !976
  %shr1119.i = lshr i32 %735, 18, !dbg !976
  %and1120.i = and i32 %shr1119.i, 63, !dbg !976
  %idxprom1121.i = zext i32 %and1120.i to i64, !dbg !976
  %arrayidx1122.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i, !dbg !976
  %736 = load i32, i32* %arrayidx1122.i, align 4, !dbg !976
  %xor1123.i = xor i32 %xor1118.i, %736, !dbg !976
  %737 = load i32, i32* %u.i, align 4, !dbg !976
  %shr1124.i = lshr i32 %737, 26, !dbg !976
  %idxprom1126.i = zext i32 %shr1124.i to i64, !dbg !976
  %arrayidx1127.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i, !dbg !976
  %738 = load i32, i32* %arrayidx1127.i, align 4, !dbg !976
  %xor1128.i = xor i32 %xor1123.i, %738, !dbg !976
  %739 = load i32, i32* %t.i, align 4, !dbg !976
  %shr1129.i = lshr i32 %739, 2, !dbg !976
  %and1130.i = and i32 %shr1129.i, 63, !dbg !976
  %idxprom1131.i = zext i32 %and1130.i to i64, !dbg !976
  %arrayidx1132.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i, !dbg !976
  %740 = load i32, i32* %arrayidx1132.i, align 4, !dbg !976
  %xor1133.i = xor i32 %xor1128.i, %740, !dbg !976
  %741 = load i32, i32* %t.i, align 4, !dbg !976
  %shr1134.i = lshr i32 %741, 10, !dbg !976
  %and1135.i = and i32 %shr1134.i, 63, !dbg !976
  %idxprom1136.i = zext i32 %and1135.i to i64, !dbg !976
  %arrayidx1137.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i, !dbg !976
  %742 = load i32, i32* %arrayidx1137.i, align 4, !dbg !976
  %xor1138.i = xor i32 %xor1133.i, %742, !dbg !976
  %743 = load i32, i32* %t.i, align 4, !dbg !976
  %shr1139.i = lshr i32 %743, 18, !dbg !976
  %and1140.i = and i32 %shr1139.i, 63, !dbg !976
  %idxprom1141.i = zext i32 %and1140.i to i64, !dbg !976
  %arrayidx1142.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i, !dbg !976
  %744 = load i32, i32* %arrayidx1142.i, align 4, !dbg !976
  %xor1143.i = xor i32 %xor1138.i, %744, !dbg !976
  %745 = load i32, i32* %t.i, align 4, !dbg !976
  %shr1144.i = lshr i32 %745, 26, !dbg !976
  %idxprom1146.i = zext i32 %shr1144.i to i64, !dbg !976
  %arrayidx1147.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i, !dbg !976
  %746 = load i32, i32* %arrayidx1147.i, align 4, !dbg !976
  %xor1148.i = xor i32 %xor1143.i, %746, !dbg !976
  %747 = load i32, i32* %r.i, align 4, !dbg !976
  %xor1149.i = xor i32 %747, %xor1148.i, !dbg !976
  store i32 %xor1149.i, i32* %r.i, align 4, !dbg !976
  %748 = load i32, i32* %r.i, align 4, !dbg !977
  %749 = load i32*, i32** %s.i, align 8, !dbg !977
  %arrayidx1150.i = getelementptr inbounds i32, i32* %749, i64 14, !dbg !977
  %750 = load i32, i32* %arrayidx1150.i, align 4, !dbg !977
  %xor1151.i = xor i32 %748, %750, !dbg !977
  store i32 %xor1151.i, i32* %u.i, align 4, !dbg !977
  %751 = load i32, i32* %r.i, align 4, !dbg !977
  %752 = load i32*, i32** %s.i, align 8, !dbg !977
  %arrayidx1152.i = getelementptr inbounds i32, i32* %752, i64 15, !dbg !977
  %753 = load i32, i32* %arrayidx1152.i, align 4, !dbg !977
  %xor1153.i = xor i32 %751, %753, !dbg !977
  store i32 %xor1153.i, i32* %t.i, align 4, !dbg !977
  %754 = load i32, i32* %t.i, align 4, !dbg !868
  %755 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %754) #5, !dbg !868, !srcloc !240
  store i32 %755, i32* %ret1154.i, align 4, !dbg !868
  %756 = load i32, i32* %ret1154.i, align 4, !dbg !868
  store i32 %756, i32* %tmp1155.i, align 4, !dbg !868
  %757 = load i32, i32* %tmp1155.i, align 4, !dbg !868
  store i32 %757, i32* %t.i, align 4, !dbg !977
  %758 = load i32, i32* %u.i, align 4, !dbg !977
  %shr1156.i = lshr i32 %758, 2, !dbg !977
  %and1157.i = and i32 %shr1156.i, 63, !dbg !977
  %idxprom1158.i = zext i32 %and1157.i to i64, !dbg !977
  %arrayidx1159.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i, !dbg !977
  %759 = load i32, i32* %arrayidx1159.i, align 4, !dbg !977
  %760 = load i32, i32* %u.i, align 4, !dbg !977
  %shr1160.i = lshr i32 %760, 10, !dbg !977
  %and1161.i = and i32 %shr1160.i, 63, !dbg !977
  %idxprom1162.i = zext i32 %and1161.i to i64, !dbg !977
  %arrayidx1163.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i, !dbg !977
  %761 = load i32, i32* %arrayidx1163.i, align 4, !dbg !977
  %xor1164.i = xor i32 %759, %761, !dbg !977
  %762 = load i32, i32* %u.i, align 4, !dbg !977
  %shr1165.i = lshr i32 %762, 18, !dbg !977
  %and1166.i = and i32 %shr1165.i, 63, !dbg !977
  %idxprom1167.i = zext i32 %and1166.i to i64, !dbg !977
  %arrayidx1168.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i, !dbg !977
  %763 = load i32, i32* %arrayidx1168.i, align 4, !dbg !977
  %xor1169.i = xor i32 %xor1164.i, %763, !dbg !977
  %764 = load i32, i32* %u.i, align 4, !dbg !977
  %shr1170.i = lshr i32 %764, 26, !dbg !977
  %idxprom1172.i = zext i32 %shr1170.i to i64, !dbg !977
  %arrayidx1173.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i, !dbg !977
  %765 = load i32, i32* %arrayidx1173.i, align 4, !dbg !977
  %xor1174.i = xor i32 %xor1169.i, %765, !dbg !977
  %766 = load i32, i32* %t.i, align 4, !dbg !977
  %shr1175.i = lshr i32 %766, 2, !dbg !977
  %and1176.i = and i32 %shr1175.i, 63, !dbg !977
  %idxprom1177.i = zext i32 %and1176.i to i64, !dbg !977
  %arrayidx1178.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i, !dbg !977
  %767 = load i32, i32* %arrayidx1178.i, align 4, !dbg !977
  %xor1179.i = xor i32 %xor1174.i, %767, !dbg !977
  %768 = load i32, i32* %t.i, align 4, !dbg !977
  %shr1180.i = lshr i32 %768, 10, !dbg !977
  %and1181.i = and i32 %shr1180.i, 63, !dbg !977
  %idxprom1182.i = zext i32 %and1181.i to i64, !dbg !977
  %arrayidx1183.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i, !dbg !977
  %769 = load i32, i32* %arrayidx1183.i, align 4, !dbg !977
  %xor1184.i = xor i32 %xor1179.i, %769, !dbg !977
  %770 = load i32, i32* %t.i, align 4, !dbg !977
  %shr1185.i = lshr i32 %770, 18, !dbg !977
  %and1186.i = and i32 %shr1185.i, 63, !dbg !977
  %idxprom1187.i = zext i32 %and1186.i to i64, !dbg !977
  %arrayidx1188.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i, !dbg !977
  %771 = load i32, i32* %arrayidx1188.i, align 4, !dbg !977
  %xor1189.i = xor i32 %xor1184.i, %771, !dbg !977
  %772 = load i32, i32* %t.i, align 4, !dbg !977
  %shr1190.i = lshr i32 %772, 26, !dbg !977
  %idxprom1192.i = zext i32 %shr1190.i to i64, !dbg !977
  %arrayidx1193.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i, !dbg !977
  %773 = load i32, i32* %arrayidx1193.i, align 4, !dbg !977
  %xor1194.i = xor i32 %xor1189.i, %773, !dbg !977
  %774 = load i32, i32* %l.i, align 4, !dbg !977
  %xor1195.i = xor i32 %774, %xor1194.i, !dbg !977
  store i32 %xor1195.i, i32* %l.i, align 4, !dbg !977
  %775 = load i32, i32* %l.i, align 4, !dbg !978
  %776 = load i32*, i32** %s.i, align 8, !dbg !978
  %arrayidx1196.i = getelementptr inbounds i32, i32* %776, i64 12, !dbg !978
  %777 = load i32, i32* %arrayidx1196.i, align 4, !dbg !978
  %xor1197.i = xor i32 %775, %777, !dbg !978
  store i32 %xor1197.i, i32* %u.i, align 4, !dbg !978
  %778 = load i32, i32* %l.i, align 4, !dbg !978
  %779 = load i32*, i32** %s.i, align 8, !dbg !978
  %arrayidx1198.i = getelementptr inbounds i32, i32* %779, i64 13, !dbg !978
  %780 = load i32, i32* %arrayidx1198.i, align 4, !dbg !978
  %xor1199.i = xor i32 %778, %780, !dbg !978
  store i32 %xor1199.i, i32* %t.i, align 4, !dbg !978
  %781 = load i32, i32* %t.i, align 4, !dbg !869
  %782 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %781) #5, !dbg !869, !srcloc !246
  store i32 %782, i32* %ret1200.i, align 4, !dbg !869
  %783 = load i32, i32* %ret1200.i, align 4, !dbg !869
  store i32 %783, i32* %tmp1201.i, align 4, !dbg !869
  %784 = load i32, i32* %tmp1201.i, align 4, !dbg !869
  store i32 %784, i32* %t.i, align 4, !dbg !978
  %785 = load i32, i32* %u.i, align 4, !dbg !978
  %shr1202.i = lshr i32 %785, 2, !dbg !978
  %and1203.i = and i32 %shr1202.i, 63, !dbg !978
  %idxprom1204.i = zext i32 %and1203.i to i64, !dbg !978
  %arrayidx1205.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i, !dbg !978
  %786 = load i32, i32* %arrayidx1205.i, align 4, !dbg !978
  %787 = load i32, i32* %u.i, align 4, !dbg !978
  %shr1206.i = lshr i32 %787, 10, !dbg !978
  %and1207.i = and i32 %shr1206.i, 63, !dbg !978
  %idxprom1208.i = zext i32 %and1207.i to i64, !dbg !978
  %arrayidx1209.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i, !dbg !978
  %788 = load i32, i32* %arrayidx1209.i, align 4, !dbg !978
  %xor1210.i = xor i32 %786, %788, !dbg !978
  %789 = load i32, i32* %u.i, align 4, !dbg !978
  %shr1211.i = lshr i32 %789, 18, !dbg !978
  %and1212.i = and i32 %shr1211.i, 63, !dbg !978
  %idxprom1213.i = zext i32 %and1212.i to i64, !dbg !978
  %arrayidx1214.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i, !dbg !978
  %790 = load i32, i32* %arrayidx1214.i, align 4, !dbg !978
  %xor1215.i = xor i32 %xor1210.i, %790, !dbg !978
  %791 = load i32, i32* %u.i, align 4, !dbg !978
  %shr1216.i = lshr i32 %791, 26, !dbg !978
  %idxprom1218.i = zext i32 %shr1216.i to i64, !dbg !978
  %arrayidx1219.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i, !dbg !978
  %792 = load i32, i32* %arrayidx1219.i, align 4, !dbg !978
  %xor1220.i = xor i32 %xor1215.i, %792, !dbg !978
  %793 = load i32, i32* %t.i, align 4, !dbg !978
  %shr1221.i = lshr i32 %793, 2, !dbg !978
  %and1222.i = and i32 %shr1221.i, 63, !dbg !978
  %idxprom1223.i = zext i32 %and1222.i to i64, !dbg !978
  %arrayidx1224.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i, !dbg !978
  %794 = load i32, i32* %arrayidx1224.i, align 4, !dbg !978
  %xor1225.i = xor i32 %xor1220.i, %794, !dbg !978
  %795 = load i32, i32* %t.i, align 4, !dbg !978
  %shr1226.i = lshr i32 %795, 10, !dbg !978
  %and1227.i = and i32 %shr1226.i, 63, !dbg !978
  %idxprom1228.i = zext i32 %and1227.i to i64, !dbg !978
  %arrayidx1229.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i, !dbg !978
  %796 = load i32, i32* %arrayidx1229.i, align 4, !dbg !978
  %xor1230.i = xor i32 %xor1225.i, %796, !dbg !978
  %797 = load i32, i32* %t.i, align 4, !dbg !978
  %shr1231.i = lshr i32 %797, 18, !dbg !978
  %and1232.i = and i32 %shr1231.i, 63, !dbg !978
  %idxprom1233.i = zext i32 %and1232.i to i64, !dbg !978
  %arrayidx1234.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i, !dbg !978
  %798 = load i32, i32* %arrayidx1234.i, align 4, !dbg !978
  %xor1235.i = xor i32 %xor1230.i, %798, !dbg !978
  %799 = load i32, i32* %t.i, align 4, !dbg !978
  %shr1236.i = lshr i32 %799, 26, !dbg !978
  %idxprom1238.i = zext i32 %shr1236.i to i64, !dbg !978
  %arrayidx1239.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i, !dbg !978
  %800 = load i32, i32* %arrayidx1239.i, align 4, !dbg !978
  %xor1240.i = xor i32 %xor1235.i, %800, !dbg !978
  %801 = load i32, i32* %r.i, align 4, !dbg !978
  %xor1241.i = xor i32 %801, %xor1240.i, !dbg !978
  store i32 %xor1241.i, i32* %r.i, align 4, !dbg !978
  %802 = load i32, i32* %r.i, align 4, !dbg !979
  %803 = load i32*, i32** %s.i, align 8, !dbg !979
  %arrayidx1242.i = getelementptr inbounds i32, i32* %803, i64 10, !dbg !979
  %804 = load i32, i32* %arrayidx1242.i, align 4, !dbg !979
  %xor1243.i = xor i32 %802, %804, !dbg !979
  store i32 %xor1243.i, i32* %u.i, align 4, !dbg !979
  %805 = load i32, i32* %r.i, align 4, !dbg !979
  %806 = load i32*, i32** %s.i, align 8, !dbg !979
  %arrayidx1244.i = getelementptr inbounds i32, i32* %806, i64 11, !dbg !979
  %807 = load i32, i32* %arrayidx1244.i, align 4, !dbg !979
  %xor1245.i = xor i32 %805, %807, !dbg !979
  store i32 %xor1245.i, i32* %t.i, align 4, !dbg !979
  %808 = load i32, i32* %t.i, align 4, !dbg !870
  %809 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %808) #5, !dbg !870, !srcloc !252
  store i32 %809, i32* %ret1246.i, align 4, !dbg !870
  %810 = load i32, i32* %ret1246.i, align 4, !dbg !870
  store i32 %810, i32* %tmp1247.i, align 4, !dbg !870
  %811 = load i32, i32* %tmp1247.i, align 4, !dbg !870
  store i32 %811, i32* %t.i, align 4, !dbg !979
  %812 = load i32, i32* %u.i, align 4, !dbg !979
  %shr1248.i = lshr i32 %812, 2, !dbg !979
  %and1249.i = and i32 %shr1248.i, 63, !dbg !979
  %idxprom1250.i = zext i32 %and1249.i to i64, !dbg !979
  %arrayidx1251.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i, !dbg !979
  %813 = load i32, i32* %arrayidx1251.i, align 4, !dbg !979
  %814 = load i32, i32* %u.i, align 4, !dbg !979
  %shr1252.i = lshr i32 %814, 10, !dbg !979
  %and1253.i = and i32 %shr1252.i, 63, !dbg !979
  %idxprom1254.i = zext i32 %and1253.i to i64, !dbg !979
  %arrayidx1255.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i, !dbg !979
  %815 = load i32, i32* %arrayidx1255.i, align 4, !dbg !979
  %xor1256.i = xor i32 %813, %815, !dbg !979
  %816 = load i32, i32* %u.i, align 4, !dbg !979
  %shr1257.i = lshr i32 %816, 18, !dbg !979
  %and1258.i = and i32 %shr1257.i, 63, !dbg !979
  %idxprom1259.i = zext i32 %and1258.i to i64, !dbg !979
  %arrayidx1260.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i, !dbg !979
  %817 = load i32, i32* %arrayidx1260.i, align 4, !dbg !979
  %xor1261.i = xor i32 %xor1256.i, %817, !dbg !979
  %818 = load i32, i32* %u.i, align 4, !dbg !979
  %shr1262.i = lshr i32 %818, 26, !dbg !979
  %idxprom1264.i = zext i32 %shr1262.i to i64, !dbg !979
  %arrayidx1265.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i, !dbg !979
  %819 = load i32, i32* %arrayidx1265.i, align 4, !dbg !979
  %xor1266.i = xor i32 %xor1261.i, %819, !dbg !979
  %820 = load i32, i32* %t.i, align 4, !dbg !979
  %shr1267.i = lshr i32 %820, 2, !dbg !979
  %and1268.i = and i32 %shr1267.i, 63, !dbg !979
  %idxprom1269.i = zext i32 %and1268.i to i64, !dbg !979
  %arrayidx1270.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i, !dbg !979
  %821 = load i32, i32* %arrayidx1270.i, align 4, !dbg !979
  %xor1271.i = xor i32 %xor1266.i, %821, !dbg !979
  %822 = load i32, i32* %t.i, align 4, !dbg !979
  %shr1272.i = lshr i32 %822, 10, !dbg !979
  %and1273.i = and i32 %shr1272.i, 63, !dbg !979
  %idxprom1274.i = zext i32 %and1273.i to i64, !dbg !979
  %arrayidx1275.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i, !dbg !979
  %823 = load i32, i32* %arrayidx1275.i, align 4, !dbg !979
  %xor1276.i = xor i32 %xor1271.i, %823, !dbg !979
  %824 = load i32, i32* %t.i, align 4, !dbg !979
  %shr1277.i = lshr i32 %824, 18, !dbg !979
  %and1278.i = and i32 %shr1277.i, 63, !dbg !979
  %idxprom1279.i = zext i32 %and1278.i to i64, !dbg !979
  %arrayidx1280.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i, !dbg !979
  %825 = load i32, i32* %arrayidx1280.i, align 4, !dbg !979
  %xor1281.i = xor i32 %xor1276.i, %825, !dbg !979
  %826 = load i32, i32* %t.i, align 4, !dbg !979
  %shr1282.i = lshr i32 %826, 26, !dbg !979
  %idxprom1284.i = zext i32 %shr1282.i to i64, !dbg !979
  %arrayidx1285.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i, !dbg !979
  %827 = load i32, i32* %arrayidx1285.i, align 4, !dbg !979
  %xor1286.i = xor i32 %xor1281.i, %827, !dbg !979
  %828 = load i32, i32* %l.i, align 4, !dbg !979
  %xor1287.i = xor i32 %828, %xor1286.i, !dbg !979
  store i32 %xor1287.i, i32* %l.i, align 4, !dbg !979
  %829 = load i32, i32* %l.i, align 4, !dbg !980
  %830 = load i32*, i32** %s.i, align 8, !dbg !980
  %arrayidx1288.i = getelementptr inbounds i32, i32* %830, i64 8, !dbg !980
  %831 = load i32, i32* %arrayidx1288.i, align 4, !dbg !980
  %xor1289.i = xor i32 %829, %831, !dbg !980
  store i32 %xor1289.i, i32* %u.i, align 4, !dbg !980
  %832 = load i32, i32* %l.i, align 4, !dbg !980
  %833 = load i32*, i32** %s.i, align 8, !dbg !980
  %arrayidx1290.i = getelementptr inbounds i32, i32* %833, i64 9, !dbg !980
  %834 = load i32, i32* %arrayidx1290.i, align 4, !dbg !980
  %xor1291.i = xor i32 %832, %834, !dbg !980
  store i32 %xor1291.i, i32* %t.i, align 4, !dbg !980
  %835 = load i32, i32* %t.i, align 4, !dbg !871
  %836 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %835) #5, !dbg !871, !srcloc !258
  store i32 %836, i32* %ret1292.i, align 4, !dbg !871
  %837 = load i32, i32* %ret1292.i, align 4, !dbg !871
  store i32 %837, i32* %tmp1293.i, align 4, !dbg !871
  %838 = load i32, i32* %tmp1293.i, align 4, !dbg !871
  store i32 %838, i32* %t.i, align 4, !dbg !980
  %839 = load i32, i32* %u.i, align 4, !dbg !980
  %shr1294.i = lshr i32 %839, 2, !dbg !980
  %and1295.i = and i32 %shr1294.i, 63, !dbg !980
  %idxprom1296.i = zext i32 %and1295.i to i64, !dbg !980
  %arrayidx1297.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i, !dbg !980
  %840 = load i32, i32* %arrayidx1297.i, align 4, !dbg !980
  %841 = load i32, i32* %u.i, align 4, !dbg !980
  %shr1298.i = lshr i32 %841, 10, !dbg !980
  %and1299.i = and i32 %shr1298.i, 63, !dbg !980
  %idxprom1300.i = zext i32 %and1299.i to i64, !dbg !980
  %arrayidx1301.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i, !dbg !980
  %842 = load i32, i32* %arrayidx1301.i, align 4, !dbg !980
  %xor1302.i = xor i32 %840, %842, !dbg !980
  %843 = load i32, i32* %u.i, align 4, !dbg !980
  %shr1303.i = lshr i32 %843, 18, !dbg !980
  %and1304.i = and i32 %shr1303.i, 63, !dbg !980
  %idxprom1305.i = zext i32 %and1304.i to i64, !dbg !980
  %arrayidx1306.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i, !dbg !980
  %844 = load i32, i32* %arrayidx1306.i, align 4, !dbg !980
  %xor1307.i = xor i32 %xor1302.i, %844, !dbg !980
  %845 = load i32, i32* %u.i, align 4, !dbg !980
  %shr1308.i = lshr i32 %845, 26, !dbg !980
  %idxprom1310.i = zext i32 %shr1308.i to i64, !dbg !980
  %arrayidx1311.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i, !dbg !980
  %846 = load i32, i32* %arrayidx1311.i, align 4, !dbg !980
  %xor1312.i = xor i32 %xor1307.i, %846, !dbg !980
  %847 = load i32, i32* %t.i, align 4, !dbg !980
  %shr1313.i = lshr i32 %847, 2, !dbg !980
  %and1314.i = and i32 %shr1313.i, 63, !dbg !980
  %idxprom1315.i = zext i32 %and1314.i to i64, !dbg !980
  %arrayidx1316.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i, !dbg !980
  %848 = load i32, i32* %arrayidx1316.i, align 4, !dbg !980
  %xor1317.i = xor i32 %xor1312.i, %848, !dbg !980
  %849 = load i32, i32* %t.i, align 4, !dbg !980
  %shr1318.i = lshr i32 %849, 10, !dbg !980
  %and1319.i = and i32 %shr1318.i, 63, !dbg !980
  %idxprom1320.i = zext i32 %and1319.i to i64, !dbg !980
  %arrayidx1321.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i, !dbg !980
  %850 = load i32, i32* %arrayidx1321.i, align 4, !dbg !980
  %xor1322.i = xor i32 %xor1317.i, %850, !dbg !980
  %851 = load i32, i32* %t.i, align 4, !dbg !980
  %shr1323.i = lshr i32 %851, 18, !dbg !980
  %and1324.i = and i32 %shr1323.i, 63, !dbg !980
  %idxprom1325.i = zext i32 %and1324.i to i64, !dbg !980
  %arrayidx1326.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i, !dbg !980
  %852 = load i32, i32* %arrayidx1326.i, align 4, !dbg !980
  %xor1327.i = xor i32 %xor1322.i, %852, !dbg !980
  %853 = load i32, i32* %t.i, align 4, !dbg !980
  %shr1328.i = lshr i32 %853, 26, !dbg !980
  %idxprom1330.i = zext i32 %shr1328.i to i64, !dbg !980
  %arrayidx1331.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i, !dbg !980
  %854 = load i32, i32* %arrayidx1331.i, align 4, !dbg !980
  %xor1332.i = xor i32 %xor1327.i, %854, !dbg !980
  %855 = load i32, i32* %r.i, align 4, !dbg !980
  %xor1333.i = xor i32 %855, %xor1332.i, !dbg !980
  store i32 %xor1333.i, i32* %r.i, align 4, !dbg !980
  %856 = load i32, i32* %r.i, align 4, !dbg !981
  %857 = load i32*, i32** %s.i, align 8, !dbg !981
  %arrayidx1334.i = getelementptr inbounds i32, i32* %857, i64 6, !dbg !981
  %858 = load i32, i32* %arrayidx1334.i, align 4, !dbg !981
  %xor1335.i = xor i32 %856, %858, !dbg !981
  store i32 %xor1335.i, i32* %u.i, align 4, !dbg !981
  %859 = load i32, i32* %r.i, align 4, !dbg !981
  %860 = load i32*, i32** %s.i, align 8, !dbg !981
  %arrayidx1336.i = getelementptr inbounds i32, i32* %860, i64 7, !dbg !981
  %861 = load i32, i32* %arrayidx1336.i, align 4, !dbg !981
  %xor1337.i = xor i32 %859, %861, !dbg !981
  store i32 %xor1337.i, i32* %t.i, align 4, !dbg !981
  %862 = load i32, i32* %t.i, align 4, !dbg !872
  %863 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %862) #5, !dbg !872, !srcloc !264
  store i32 %863, i32* %ret1338.i, align 4, !dbg !872
  %864 = load i32, i32* %ret1338.i, align 4, !dbg !872
  store i32 %864, i32* %tmp1339.i, align 4, !dbg !872
  %865 = load i32, i32* %tmp1339.i, align 4, !dbg !872
  store i32 %865, i32* %t.i, align 4, !dbg !981
  %866 = load i32, i32* %u.i, align 4, !dbg !981
  %shr1340.i = lshr i32 %866, 2, !dbg !981
  %and1341.i = and i32 %shr1340.i, 63, !dbg !981
  %idxprom1342.i = zext i32 %and1341.i to i64, !dbg !981
  %arrayidx1343.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i, !dbg !981
  %867 = load i32, i32* %arrayidx1343.i, align 4, !dbg !981
  %868 = load i32, i32* %u.i, align 4, !dbg !981
  %shr1344.i = lshr i32 %868, 10, !dbg !981
  %and1345.i = and i32 %shr1344.i, 63, !dbg !981
  %idxprom1346.i = zext i32 %and1345.i to i64, !dbg !981
  %arrayidx1347.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i, !dbg !981
  %869 = load i32, i32* %arrayidx1347.i, align 4, !dbg !981
  %xor1348.i = xor i32 %867, %869, !dbg !981
  %870 = load i32, i32* %u.i, align 4, !dbg !981
  %shr1349.i = lshr i32 %870, 18, !dbg !981
  %and1350.i = and i32 %shr1349.i, 63, !dbg !981
  %idxprom1351.i = zext i32 %and1350.i to i64, !dbg !981
  %arrayidx1352.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i, !dbg !981
  %871 = load i32, i32* %arrayidx1352.i, align 4, !dbg !981
  %xor1353.i = xor i32 %xor1348.i, %871, !dbg !981
  %872 = load i32, i32* %u.i, align 4, !dbg !981
  %shr1354.i = lshr i32 %872, 26, !dbg !981
  %idxprom1356.i = zext i32 %shr1354.i to i64, !dbg !981
  %arrayidx1357.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i, !dbg !981
  %873 = load i32, i32* %arrayidx1357.i, align 4, !dbg !981
  %xor1358.i = xor i32 %xor1353.i, %873, !dbg !981
  %874 = load i32, i32* %t.i, align 4, !dbg !981
  %shr1359.i = lshr i32 %874, 2, !dbg !981
  %and1360.i = and i32 %shr1359.i, 63, !dbg !981
  %idxprom1361.i = zext i32 %and1360.i to i64, !dbg !981
  %arrayidx1362.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i, !dbg !981
  %875 = load i32, i32* %arrayidx1362.i, align 4, !dbg !981
  %xor1363.i = xor i32 %xor1358.i, %875, !dbg !981
  %876 = load i32, i32* %t.i, align 4, !dbg !981
  %shr1364.i = lshr i32 %876, 10, !dbg !981
  %and1365.i = and i32 %shr1364.i, 63, !dbg !981
  %idxprom1366.i = zext i32 %and1365.i to i64, !dbg !981
  %arrayidx1367.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i, !dbg !981
  %877 = load i32, i32* %arrayidx1367.i, align 4, !dbg !981
  %xor1368.i = xor i32 %xor1363.i, %877, !dbg !981
  %878 = load i32, i32* %t.i, align 4, !dbg !981
  %shr1369.i = lshr i32 %878, 18, !dbg !981
  %and1370.i = and i32 %shr1369.i, 63, !dbg !981
  %idxprom1371.i = zext i32 %and1370.i to i64, !dbg !981
  %arrayidx1372.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i, !dbg !981
  %879 = load i32, i32* %arrayidx1372.i, align 4, !dbg !981
  %xor1373.i = xor i32 %xor1368.i, %879, !dbg !981
  %880 = load i32, i32* %t.i, align 4, !dbg !981
  %shr1374.i = lshr i32 %880, 26, !dbg !981
  %idxprom1376.i = zext i32 %shr1374.i to i64, !dbg !981
  %arrayidx1377.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i, !dbg !981
  %881 = load i32, i32* %arrayidx1377.i, align 4, !dbg !981
  %xor1378.i = xor i32 %xor1373.i, %881, !dbg !981
  %882 = load i32, i32* %l.i, align 4, !dbg !981
  %xor1379.i = xor i32 %882, %xor1378.i, !dbg !981
  store i32 %xor1379.i, i32* %l.i, align 4, !dbg !981
  %883 = load i32, i32* %l.i, align 4, !dbg !982
  %884 = load i32*, i32** %s.i, align 8, !dbg !982
  %arrayidx1380.i = getelementptr inbounds i32, i32* %884, i64 4, !dbg !982
  %885 = load i32, i32* %arrayidx1380.i, align 4, !dbg !982
  %xor1381.i = xor i32 %883, %885, !dbg !982
  store i32 %xor1381.i, i32* %u.i, align 4, !dbg !982
  %886 = load i32, i32* %l.i, align 4, !dbg !982
  %887 = load i32*, i32** %s.i, align 8, !dbg !982
  %arrayidx1382.i = getelementptr inbounds i32, i32* %887, i64 5, !dbg !982
  %888 = load i32, i32* %arrayidx1382.i, align 4, !dbg !982
  %xor1383.i = xor i32 %886, %888, !dbg !982
  store i32 %xor1383.i, i32* %t.i, align 4, !dbg !982
  %889 = load i32, i32* %t.i, align 4, !dbg !873
  %890 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %889) #5, !dbg !873, !srcloc !270
  store i32 %890, i32* %ret1384.i, align 4, !dbg !873
  %891 = load i32, i32* %ret1384.i, align 4, !dbg !873
  store i32 %891, i32* %tmp1385.i, align 4, !dbg !873
  %892 = load i32, i32* %tmp1385.i, align 4, !dbg !873
  store i32 %892, i32* %t.i, align 4, !dbg !982
  %893 = load i32, i32* %u.i, align 4, !dbg !982
  %shr1386.i = lshr i32 %893, 2, !dbg !982
  %and1387.i = and i32 %shr1386.i, 63, !dbg !982
  %idxprom1388.i = zext i32 %and1387.i to i64, !dbg !982
  %arrayidx1389.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i, !dbg !982
  %894 = load i32, i32* %arrayidx1389.i, align 4, !dbg !982
  %895 = load i32, i32* %u.i, align 4, !dbg !982
  %shr1390.i = lshr i32 %895, 10, !dbg !982
  %and1391.i = and i32 %shr1390.i, 63, !dbg !982
  %idxprom1392.i = zext i32 %and1391.i to i64, !dbg !982
  %arrayidx1393.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i, !dbg !982
  %896 = load i32, i32* %arrayidx1393.i, align 4, !dbg !982
  %xor1394.i = xor i32 %894, %896, !dbg !982
  %897 = load i32, i32* %u.i, align 4, !dbg !982
  %shr1395.i = lshr i32 %897, 18, !dbg !982
  %and1396.i = and i32 %shr1395.i, 63, !dbg !982
  %idxprom1397.i = zext i32 %and1396.i to i64, !dbg !982
  %arrayidx1398.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i, !dbg !982
  %898 = load i32, i32* %arrayidx1398.i, align 4, !dbg !982
  %xor1399.i = xor i32 %xor1394.i, %898, !dbg !982
  %899 = load i32, i32* %u.i, align 4, !dbg !982
  %shr1400.i = lshr i32 %899, 26, !dbg !982
  %idxprom1402.i = zext i32 %shr1400.i to i64, !dbg !982
  %arrayidx1403.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i, !dbg !982
  %900 = load i32, i32* %arrayidx1403.i, align 4, !dbg !982
  %xor1404.i = xor i32 %xor1399.i, %900, !dbg !982
  %901 = load i32, i32* %t.i, align 4, !dbg !982
  %shr1405.i = lshr i32 %901, 2, !dbg !982
  %and1406.i = and i32 %shr1405.i, 63, !dbg !982
  %idxprom1407.i = zext i32 %and1406.i to i64, !dbg !982
  %arrayidx1408.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i, !dbg !982
  %902 = load i32, i32* %arrayidx1408.i, align 4, !dbg !982
  %xor1409.i = xor i32 %xor1404.i, %902, !dbg !982
  %903 = load i32, i32* %t.i, align 4, !dbg !982
  %shr1410.i = lshr i32 %903, 10, !dbg !982
  %and1411.i = and i32 %shr1410.i, 63, !dbg !982
  %idxprom1412.i = zext i32 %and1411.i to i64, !dbg !982
  %arrayidx1413.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i, !dbg !982
  %904 = load i32, i32* %arrayidx1413.i, align 4, !dbg !982
  %xor1414.i = xor i32 %xor1409.i, %904, !dbg !982
  %905 = load i32, i32* %t.i, align 4, !dbg !982
  %shr1415.i = lshr i32 %905, 18, !dbg !982
  %and1416.i = and i32 %shr1415.i, 63, !dbg !982
  %idxprom1417.i = zext i32 %and1416.i to i64, !dbg !982
  %arrayidx1418.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i, !dbg !982
  %906 = load i32, i32* %arrayidx1418.i, align 4, !dbg !982
  %xor1419.i = xor i32 %xor1414.i, %906, !dbg !982
  %907 = load i32, i32* %t.i, align 4, !dbg !982
  %shr1420.i = lshr i32 %907, 26, !dbg !982
  %idxprom1422.i = zext i32 %shr1420.i to i64, !dbg !982
  %arrayidx1423.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i, !dbg !982
  %908 = load i32, i32* %arrayidx1423.i, align 4, !dbg !982
  %xor1424.i = xor i32 %xor1419.i, %908, !dbg !982
  %909 = load i32, i32* %r.i, align 4, !dbg !982
  %xor1425.i = xor i32 %909, %xor1424.i, !dbg !982
  store i32 %xor1425.i, i32* %r.i, align 4, !dbg !982
  %910 = load i32, i32* %r.i, align 4, !dbg !983
  %911 = load i32*, i32** %s.i, align 8, !dbg !983
  %arrayidx1426.i = getelementptr inbounds i32, i32* %911, i64 2, !dbg !983
  %912 = load i32, i32* %arrayidx1426.i, align 4, !dbg !983
  %xor1427.i = xor i32 %910, %912, !dbg !983
  store i32 %xor1427.i, i32* %u.i, align 4, !dbg !983
  %913 = load i32, i32* %r.i, align 4, !dbg !983
  %914 = load i32*, i32** %s.i, align 8, !dbg !983
  %arrayidx1428.i = getelementptr inbounds i32, i32* %914, i64 3, !dbg !983
  %915 = load i32, i32* %arrayidx1428.i, align 4, !dbg !983
  %xor1429.i = xor i32 %913, %915, !dbg !983
  store i32 %xor1429.i, i32* %t.i, align 4, !dbg !983
  %916 = load i32, i32* %t.i, align 4, !dbg !874
  %917 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %916) #5, !dbg !874, !srcloc !276
  store i32 %917, i32* %ret1430.i, align 4, !dbg !874
  %918 = load i32, i32* %ret1430.i, align 4, !dbg !874
  store i32 %918, i32* %tmp1431.i, align 4, !dbg !874
  %919 = load i32, i32* %tmp1431.i, align 4, !dbg !874
  store i32 %919, i32* %t.i, align 4, !dbg !983
  %920 = load i32, i32* %u.i, align 4, !dbg !983
  %shr1432.i = lshr i32 %920, 2, !dbg !983
  %and1433.i = and i32 %shr1432.i, 63, !dbg !983
  %idxprom1434.i = zext i32 %and1433.i to i64, !dbg !983
  %arrayidx1435.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i, !dbg !983
  %921 = load i32, i32* %arrayidx1435.i, align 4, !dbg !983
  %922 = load i32, i32* %u.i, align 4, !dbg !983
  %shr1436.i = lshr i32 %922, 10, !dbg !983
  %and1437.i = and i32 %shr1436.i, 63, !dbg !983
  %idxprom1438.i = zext i32 %and1437.i to i64, !dbg !983
  %arrayidx1439.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i, !dbg !983
  %923 = load i32, i32* %arrayidx1439.i, align 4, !dbg !983
  %xor1440.i = xor i32 %921, %923, !dbg !983
  %924 = load i32, i32* %u.i, align 4, !dbg !983
  %shr1441.i = lshr i32 %924, 18, !dbg !983
  %and1442.i = and i32 %shr1441.i, 63, !dbg !983
  %idxprom1443.i = zext i32 %and1442.i to i64, !dbg !983
  %arrayidx1444.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i, !dbg !983
  %925 = load i32, i32* %arrayidx1444.i, align 4, !dbg !983
  %xor1445.i = xor i32 %xor1440.i, %925, !dbg !983
  %926 = load i32, i32* %u.i, align 4, !dbg !983
  %shr1446.i = lshr i32 %926, 26, !dbg !983
  %idxprom1448.i = zext i32 %shr1446.i to i64, !dbg !983
  %arrayidx1449.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i, !dbg !983
  %927 = load i32, i32* %arrayidx1449.i, align 4, !dbg !983
  %xor1450.i = xor i32 %xor1445.i, %927, !dbg !983
  %928 = load i32, i32* %t.i, align 4, !dbg !983
  %shr1451.i = lshr i32 %928, 2, !dbg !983
  %and1452.i = and i32 %shr1451.i, 63, !dbg !983
  %idxprom1453.i = zext i32 %and1452.i to i64, !dbg !983
  %arrayidx1454.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i, !dbg !983
  %929 = load i32, i32* %arrayidx1454.i, align 4, !dbg !983
  %xor1455.i = xor i32 %xor1450.i, %929, !dbg !983
  %930 = load i32, i32* %t.i, align 4, !dbg !983
  %shr1456.i = lshr i32 %930, 10, !dbg !983
  %and1457.i = and i32 %shr1456.i, 63, !dbg !983
  %idxprom1458.i = zext i32 %and1457.i to i64, !dbg !983
  %arrayidx1459.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i, !dbg !983
  %931 = load i32, i32* %arrayidx1459.i, align 4, !dbg !983
  %xor1460.i = xor i32 %xor1455.i, %931, !dbg !983
  %932 = load i32, i32* %t.i, align 4, !dbg !983
  %shr1461.i = lshr i32 %932, 18, !dbg !983
  %and1462.i = and i32 %shr1461.i, 63, !dbg !983
  %idxprom1463.i = zext i32 %and1462.i to i64, !dbg !983
  %arrayidx1464.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i, !dbg !983
  %933 = load i32, i32* %arrayidx1464.i, align 4, !dbg !983
  %xor1465.i = xor i32 %xor1460.i, %933, !dbg !983
  %934 = load i32, i32* %t.i, align 4, !dbg !983
  %shr1466.i = lshr i32 %934, 26, !dbg !983
  %idxprom1468.i = zext i32 %shr1466.i to i64, !dbg !983
  %arrayidx1469.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i, !dbg !983
  %935 = load i32, i32* %arrayidx1469.i, align 4, !dbg !983
  %xor1470.i = xor i32 %xor1465.i, %935, !dbg !983
  %936 = load i32, i32* %l.i, align 4, !dbg !983
  %xor1471.i = xor i32 %936, %xor1470.i, !dbg !983
  store i32 %xor1471.i, i32* %l.i, align 4, !dbg !983
  %937 = load i32, i32* %l.i, align 4, !dbg !984
  %938 = load i32*, i32** %s.i, align 8, !dbg !984
  %939 = load i32, i32* %938, align 4, !dbg !984
  %xor1473.i = xor i32 %937, %939, !dbg !984
  store i32 %xor1473.i, i32* %u.i, align 4, !dbg !984
  %940 = load i32, i32* %l.i, align 4, !dbg !984
  %941 = load i32*, i32** %s.i, align 8, !dbg !984
  %arrayidx1474.i = getelementptr inbounds i32, i32* %941, i64 1, !dbg !984
  %942 = load i32, i32* %arrayidx1474.i, align 4, !dbg !984
  %xor1475.i = xor i32 %940, %942, !dbg !984
  store i32 %xor1475.i, i32* %t.i, align 4, !dbg !984
  %943 = load i32, i32* %t.i, align 4, !dbg !875
  %944 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %943) #5, !dbg !875, !srcloc !282
  store i32 %944, i32* %ret1476.i, align 4, !dbg !875
  %945 = load i32, i32* %ret1476.i, align 4, !dbg !875
  store i32 %945, i32* %tmp1477.i, align 4, !dbg !875
  %946 = load i32, i32* %tmp1477.i, align 4, !dbg !875
  store i32 %946, i32* %t.i, align 4, !dbg !984
  %947 = load i32, i32* %u.i, align 4, !dbg !984
  %shr1478.i = lshr i32 %947, 2, !dbg !984
  %and1479.i = and i32 %shr1478.i, 63, !dbg !984
  %idxprom1480.i = zext i32 %and1479.i to i64, !dbg !984
  %arrayidx1481.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i, !dbg !984
  %948 = load i32, i32* %arrayidx1481.i, align 4, !dbg !984
  %949 = load i32, i32* %u.i, align 4, !dbg !984
  %shr1482.i = lshr i32 %949, 10, !dbg !984
  %and1483.i = and i32 %shr1482.i, 63, !dbg !984
  %idxprom1484.i = zext i32 %and1483.i to i64, !dbg !984
  %arrayidx1485.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i, !dbg !984
  %950 = load i32, i32* %arrayidx1485.i, align 4, !dbg !984
  %xor1486.i = xor i32 %948, %950, !dbg !984
  %951 = load i32, i32* %u.i, align 4, !dbg !984
  %shr1487.i = lshr i32 %951, 18, !dbg !984
  %and1488.i = and i32 %shr1487.i, 63, !dbg !984
  %idxprom1489.i = zext i32 %and1488.i to i64, !dbg !984
  %arrayidx1490.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i, !dbg !984
  %952 = load i32, i32* %arrayidx1490.i, align 4, !dbg !984
  %xor1491.i = xor i32 %xor1486.i, %952, !dbg !984
  %953 = load i32, i32* %u.i, align 4, !dbg !984
  %shr1492.i = lshr i32 %953, 26, !dbg !984
  %idxprom1494.i = zext i32 %shr1492.i to i64, !dbg !984
  %arrayidx1495.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i, !dbg !984
  %954 = load i32, i32* %arrayidx1495.i, align 4, !dbg !984
  %xor1496.i = xor i32 %xor1491.i, %954, !dbg !984
  %955 = load i32, i32* %t.i, align 4, !dbg !984
  %shr1497.i = lshr i32 %955, 2, !dbg !984
  %and1498.i = and i32 %shr1497.i, 63, !dbg !984
  %idxprom1499.i = zext i32 %and1498.i to i64, !dbg !984
  %arrayidx1500.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i, !dbg !984
  %956 = load i32, i32* %arrayidx1500.i, align 4, !dbg !984
  %xor1501.i = xor i32 %xor1496.i, %956, !dbg !984
  %957 = load i32, i32* %t.i, align 4, !dbg !984
  %shr1502.i = lshr i32 %957, 10, !dbg !984
  %and1503.i = and i32 %shr1502.i, 63, !dbg !984
  %idxprom1504.i = zext i32 %and1503.i to i64, !dbg !984
  %arrayidx1505.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i, !dbg !984
  %958 = load i32, i32* %arrayidx1505.i, align 4, !dbg !984
  %xor1506.i = xor i32 %xor1501.i, %958, !dbg !984
  %959 = load i32, i32* %t.i, align 4, !dbg !984
  %shr1507.i = lshr i32 %959, 18, !dbg !984
  %and1508.i = and i32 %shr1507.i, 63, !dbg !984
  %idxprom1509.i = zext i32 %and1508.i to i64, !dbg !984
  %arrayidx1510.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i, !dbg !984
  %960 = load i32, i32* %arrayidx1510.i, align 4, !dbg !984
  %xor1511.i = xor i32 %xor1506.i, %960, !dbg !984
  %961 = load i32, i32* %t.i, align 4, !dbg !984
  %shr1512.i = lshr i32 %961, 26, !dbg !984
  %idxprom1514.i = zext i32 %shr1512.i to i64, !dbg !984
  %arrayidx1515.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i, !dbg !984
  %962 = load i32, i32* %arrayidx1515.i, align 4, !dbg !984
  %xor1516.i = xor i32 %xor1511.i, %962, !dbg !984
  %963 = load i32, i32* %r.i, align 4, !dbg !984
  %xor1517.i = xor i32 %963, %xor1516.i, !dbg !984
  store i32 %xor1517.i, i32* %r.i, align 4, !dbg !984
  br label %DES_encrypt1.exit

DES_encrypt1.exit:                                ; preds = %if.then.i, %if.else.i
  %964 = load i32, i32* %l.i, align 4, !dbg !876
  %965 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %964) #5, !dbg !876, !srcloc !286
  store i32 %965, i32* %ret1518.i, align 4, !dbg !876
  %966 = load i32, i32* %ret1518.i, align 4, !dbg !876
  store i32 %966, i32* %tmp1519.i, align 4, !dbg !876
  %967 = load i32, i32* %tmp1519.i, align 4, !dbg !876
  %conv1520.i = zext i32 %967 to i64, !dbg !985
  %and1521.i = and i64 %conv1520.i, 4294967295, !dbg !986
  %conv1522.i = trunc i64 %and1521.i to i32, !dbg !985
  store i32 %conv1522.i, i32* %l.i, align 4, !dbg !987
  %968 = load i32, i32* %r.i, align 4, !dbg !877
  %969 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %968) #5, !dbg !877, !srcloc !293
  store i32 %969, i32* %ret1523.i, align 4, !dbg !877
  %970 = load i32, i32* %ret1523.i, align 4, !dbg !877
  store i32 %970, i32* %tmp1524.i, align 4, !dbg !877
  %971 = load i32, i32* %tmp1524.i, align 4, !dbg !877
  %conv1525.i = zext i32 %971 to i64, !dbg !988
  %and1526.i = and i64 %conv1525.i, 4294967295, !dbg !989
  %conv1527.i = trunc i64 %and1526.i to i32, !dbg !988
  store i32 %conv1527.i, i32* %r.i, align 4, !dbg !990
  %972 = load i32, i32* %r.i, align 4, !dbg !878
  %shr1529.i = lshr i32 %972, 1, !dbg !878
  %973 = load i32, i32* %l.i, align 4, !dbg !878
  %xor1530.i = xor i32 %shr1529.i, %973, !dbg !878
  %conv1531.i = zext i32 %xor1530.i to i64, !dbg !878
  %and1532.i = and i64 %conv1531.i, 1431655765, !dbg !878
  %conv1533.i = trunc i64 %and1532.i to i32, !dbg !878
  store i32 %conv1533.i, i32* %tt1528.i, align 4, !dbg !878
  %974 = load i32, i32* %tt1528.i, align 4, !dbg !878
  %975 = load i32, i32* %l.i, align 4, !dbg !878
  %xor1534.i = xor i32 %975, %974, !dbg !878
  store i32 %xor1534.i, i32* %l.i, align 4, !dbg !878
  %976 = load i32, i32* %tt1528.i, align 4, !dbg !878
  %shl1535.i = shl i32 %976, 1, !dbg !878
  %977 = load i32, i32* %r.i, align 4, !dbg !878
  %xor1536.i = xor i32 %977, %shl1535.i, !dbg !878
  store i32 %xor1536.i, i32* %r.i, align 4, !dbg !878
  %978 = load i32, i32* %l.i, align 4, !dbg !878
  %shr1537.i = lshr i32 %978, 8, !dbg !878
  %979 = load i32, i32* %r.i, align 4, !dbg !878
  %xor1538.i = xor i32 %shr1537.i, %979, !dbg !878
  %conv1539.i = zext i32 %xor1538.i to i64, !dbg !878
  %and1540.i = and i64 %conv1539.i, 16711935, !dbg !878
  %conv1541.i = trunc i64 %and1540.i to i32, !dbg !878
  store i32 %conv1541.i, i32* %tt1528.i, align 4, !dbg !878
  %980 = load i32, i32* %tt1528.i, align 4, !dbg !878
  %981 = load i32, i32* %r.i, align 4, !dbg !878
  %xor1542.i = xor i32 %981, %980, !dbg !878
  store i32 %xor1542.i, i32* %r.i, align 4, !dbg !878
  %982 = load i32, i32* %tt1528.i, align 4, !dbg !878
  %shl1543.i = shl i32 %982, 8, !dbg !878
  %983 = load i32, i32* %l.i, align 4, !dbg !878
  %xor1544.i = xor i32 %983, %shl1543.i, !dbg !878
  store i32 %xor1544.i, i32* %l.i, align 4, !dbg !878
  %984 = load i32, i32* %r.i, align 4, !dbg !878
  %shr1545.i = lshr i32 %984, 2, !dbg !878
  %985 = load i32, i32* %l.i, align 4, !dbg !878
  %xor1546.i = xor i32 %shr1545.i, %985, !dbg !878
  %conv1547.i = zext i32 %xor1546.i to i64, !dbg !878
  %and1548.i = and i64 %conv1547.i, 858993459, !dbg !878
  %conv1549.i = trunc i64 %and1548.i to i32, !dbg !878
  store i32 %conv1549.i, i32* %tt1528.i, align 4, !dbg !878
  %986 = load i32, i32* %tt1528.i, align 4, !dbg !878
  %987 = load i32, i32* %l.i, align 4, !dbg !878
  %xor1550.i = xor i32 %987, %986, !dbg !878
  store i32 %xor1550.i, i32* %l.i, align 4, !dbg !878
  %988 = load i32, i32* %tt1528.i, align 4, !dbg !878
  %shl1551.i = shl i32 %988, 2, !dbg !878
  %989 = load i32, i32* %r.i, align 4, !dbg !878
  %xor1552.i = xor i32 %989, %shl1551.i, !dbg !878
  store i32 %xor1552.i, i32* %r.i, align 4, !dbg !878
  %990 = load i32, i32* %l.i, align 4, !dbg !878
  %shr1553.i = lshr i32 %990, 16, !dbg !878
  %991 = load i32, i32* %r.i, align 4, !dbg !878
  %xor1554.i = xor i32 %shr1553.i, %991, !dbg !878
  %conv1555.i = zext i32 %xor1554.i to i64, !dbg !878
  %and1556.i = and i64 %conv1555.i, 65535, !dbg !878
  %conv1557.i = trunc i64 %and1556.i to i32, !dbg !878
  store i32 %conv1557.i, i32* %tt1528.i, align 4, !dbg !878
  %992 = load i32, i32* %tt1528.i, align 4, !dbg !878
  %993 = load i32, i32* %r.i, align 4, !dbg !878
  %xor1558.i = xor i32 %993, %992, !dbg !878
  store i32 %xor1558.i, i32* %r.i, align 4, !dbg !878
  %994 = load i32, i32* %tt1528.i, align 4, !dbg !878
  %shl1559.i = shl i32 %994, 16, !dbg !878
  %995 = load i32, i32* %l.i, align 4, !dbg !878
  %xor1560.i = xor i32 %995, %shl1559.i, !dbg !878
  store i32 %xor1560.i, i32* %l.i, align 4, !dbg !878
  %996 = load i32, i32* %r.i, align 4, !dbg !878
  %shr1561.i = lshr i32 %996, 4, !dbg !878
  %997 = load i32, i32* %l.i, align 4, !dbg !878
  %xor1562.i = xor i32 %shr1561.i, %997, !dbg !878
  %conv1563.i = zext i32 %xor1562.i to i64, !dbg !878
  %and1564.i = and i64 %conv1563.i, 252645135, !dbg !878
  %conv1565.i = trunc i64 %and1564.i to i32, !dbg !878
  store i32 %conv1565.i, i32* %tt1528.i, align 4, !dbg !878
  %998 = load i32, i32* %tt1528.i, align 4, !dbg !878
  %999 = load i32, i32* %l.i, align 4, !dbg !878
  %xor1566.i = xor i32 %999, %998, !dbg !878
  store i32 %xor1566.i, i32* %l.i, align 4, !dbg !878
  %1000 = load i32, i32* %tt1528.i, align 4, !dbg !878
  %shl1567.i = shl i32 %1000, 4, !dbg !878
  %1001 = load i32, i32* %r.i, align 4, !dbg !878
  %xor1568.i = xor i32 %1001, %shl1567.i, !dbg !878
  store i32 %xor1568.i, i32* %r.i, align 4, !dbg !878
  %1002 = load i32, i32* %l.i, align 4, !dbg !991
  %1003 = load i32*, i32** %data.addr.i, align 8, !dbg !992
  store i32 %1002, i32* %1003, align 4, !dbg !993
  %1004 = load i32, i32* %r.i, align 4, !dbg !994
  %1005 = load i32*, i32** %data.addr.i, align 8, !dbg !995
  %arrayidx1570.i = getelementptr inbounds i32, i32* %1005, i64 1, !dbg !995
  store i32 %1004, i32* %arrayidx1570.i, align 4, !dbg !996
  store i32 0, i32* %u.i, align 4, !dbg !997
  store i32 0, i32* %t.i, align 4, !dbg !998
  store i32 0, i32* %r.i, align 4, !dbg !999
  store i32 0, i32* %l.i, align 4, !dbg !1000
  %arrayidx57 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1001
  %1006 = load i32, i32* %arrayidx57, align 4, !dbg !1001
  store i32 %1006, i32* %tout0, align 4, !dbg !1002
  %1007 = load i32, i32* %tout0, align 4, !dbg !1003
  %and = and i32 %1007, 255, !dbg !1003
  %conv58 = trunc i32 %and to i8, !dbg !1003
  %1008 = load i8*, i8** %out.addr, align 8, !dbg !1003
  %incdec.ptr59 = getelementptr inbounds i8, i8* %1008, i32 1, !dbg !1003
  store i8* %incdec.ptr59, i8** %out.addr, align 8, !dbg !1003
  store i8 %conv58, i8* %1008, align 1, !dbg !1003
  %1009 = load i32, i32* %tout0, align 4, !dbg !1003
  %shr = lshr i32 %1009, 8, !dbg !1003
  %and60 = and i32 %shr, 255, !dbg !1003
  %conv61 = trunc i32 %and60 to i8, !dbg !1003
  %1010 = load i8*, i8** %out.addr, align 8, !dbg !1003
  %incdec.ptr62 = getelementptr inbounds i8, i8* %1010, i32 1, !dbg !1003
  store i8* %incdec.ptr62, i8** %out.addr, align 8, !dbg !1003
  store i8 %conv61, i8* %1010, align 1, !dbg !1003
  %1011 = load i32, i32* %tout0, align 4, !dbg !1003
  %shr63 = lshr i32 %1011, 16, !dbg !1003
  %and64 = and i32 %shr63, 255, !dbg !1003
  %conv65 = trunc i32 %and64 to i8, !dbg !1003
  %1012 = load i8*, i8** %out.addr, align 8, !dbg !1003
  %incdec.ptr66 = getelementptr inbounds i8, i8* %1012, i32 1, !dbg !1003
  store i8* %incdec.ptr66, i8** %out.addr, align 8, !dbg !1003
  store i8 %conv65, i8* %1012, align 1, !dbg !1003
  %1013 = load i32, i32* %tout0, align 4, !dbg !1003
  %shr67 = lshr i32 %1013, 24, !dbg !1003
  %and68 = and i32 %shr67, 255, !dbg !1003
  %conv69 = trunc i32 %and68 to i8, !dbg !1003
  %1014 = load i8*, i8** %out.addr, align 8, !dbg !1003
  %incdec.ptr70 = getelementptr inbounds i8, i8* %1014, i32 1, !dbg !1003
  store i8* %incdec.ptr70, i8** %out.addr, align 8, !dbg !1003
  store i8 %conv69, i8* %1014, align 1, !dbg !1003
  %arrayidx71 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1004
  %1015 = load i32, i32* %arrayidx71, align 4, !dbg !1004
  store i32 %1015, i32* %tout1, align 4, !dbg !1005
  %1016 = load i32, i32* %tout1, align 4, !dbg !1006
  %and72 = and i32 %1016, 255, !dbg !1006
  %conv73 = trunc i32 %and72 to i8, !dbg !1006
  %1017 = load i8*, i8** %out.addr, align 8, !dbg !1006
  %incdec.ptr74 = getelementptr inbounds i8, i8* %1017, i32 1, !dbg !1006
  store i8* %incdec.ptr74, i8** %out.addr, align 8, !dbg !1006
  store i8 %conv73, i8* %1017, align 1, !dbg !1006
  %1018 = load i32, i32* %tout1, align 4, !dbg !1006
  %shr75 = lshr i32 %1018, 8, !dbg !1006
  %and76 = and i32 %shr75, 255, !dbg !1006
  %conv77 = trunc i32 %and76 to i8, !dbg !1006
  %1019 = load i8*, i8** %out.addr, align 8, !dbg !1006
  %incdec.ptr78 = getelementptr inbounds i8, i8* %1019, i32 1, !dbg !1006
  store i8* %incdec.ptr78, i8** %out.addr, align 8, !dbg !1006
  store i8 %conv77, i8* %1019, align 1, !dbg !1006
  %1020 = load i32, i32* %tout1, align 4, !dbg !1006
  %shr79 = lshr i32 %1020, 16, !dbg !1006
  %and80 = and i32 %shr79, 255, !dbg !1006
  %conv81 = trunc i32 %and80 to i8, !dbg !1006
  %1021 = load i8*, i8** %out.addr, align 8, !dbg !1006
  %incdec.ptr82 = getelementptr inbounds i8, i8* %1021, i32 1, !dbg !1006
  store i8* %incdec.ptr82, i8** %out.addr, align 8, !dbg !1006
  store i8 %conv81, i8* %1021, align 1, !dbg !1006
  %1022 = load i32, i32* %tout1, align 4, !dbg !1006
  %shr83 = lshr i32 %1022, 24, !dbg !1006
  %and84 = and i32 %shr83, 255, !dbg !1006
  %conv85 = trunc i32 %and84 to i8, !dbg !1006
  %1023 = load i8*, i8** %out.addr, align 8, !dbg !1006
  %incdec.ptr86 = getelementptr inbounds i8, i8* %1023, i32 1, !dbg !1006
  store i8* %incdec.ptr86, i8** %out.addr, align 8, !dbg !1006
  store i8 %conv85, i8* %1023, align 1, !dbg !1006
  br label %for.inc, !dbg !1007

for.inc:                                          ; preds = %DES_encrypt1.exit
  %1024 = load i64, i64* %l, align 8, !dbg !1008
  %sub87 = sub nsw i64 %1024, 8, !dbg !1008
  store i64 %sub87, i64* %l, align 8, !dbg !1008
  br label %for.cond, !dbg !1009, !llvm.loop !1010

for.end:                                          ; preds = %for.cond
  %1025 = load i64, i64* %l, align 8, !dbg !1012
  %cmp88 = icmp ne i64 %1025, -8, !dbg !1013
  br i1 %cmp88, label %if.then90, label %if.end, !dbg !1014

if.then90:                                        ; preds = %for.end
  %1026 = load i64, i64* %l, align 8, !dbg !1015
  %add = add nsw i64 %1026, 8, !dbg !1015
  %1027 = load i8*, i8** %in.addr, align 8, !dbg !1015
  %add.ptr = getelementptr inbounds i8, i8* %1027, i64 %add, !dbg !1015
  store i8* %add.ptr, i8** %in.addr, align 8, !dbg !1015
  store i32 0, i32* %tin1, align 4, !dbg !1015
  store i32 0, i32* %tin0, align 4, !dbg !1015
  %1028 = load i64, i64* %l, align 8, !dbg !1015
  %add91 = add nsw i64 %1028, 8, !dbg !1015
  switch i64 %add91, label %sw.epilog [
    i64 8, label %sw.bb
    i64 7, label %sw.bb95
    i64 6, label %sw.bb100
    i64 5, label %sw.bb105
    i64 4, label %sw.bb109
    i64 3, label %sw.bb113
    i64 2, label %sw.bb118
    i64 1, label %sw.bb123
  ], !dbg !1015

sw.bb:                                            ; preds = %if.then90
  %1029 = load i8*, i8** %in.addr, align 8, !dbg !1017
  %incdec.ptr92 = getelementptr inbounds i8, i8* %1029, i32 -1, !dbg !1017
  store i8* %incdec.ptr92, i8** %in.addr, align 8, !dbg !1017
  %1030 = load i8, i8* %incdec.ptr92, align 1, !dbg !1017
  %conv93 = zext i8 %1030 to i32, !dbg !1017
  %shl94 = shl i32 %conv93, 24, !dbg !1017
  store i32 %shl94, i32* %tin1, align 4, !dbg !1017
  br label %sw.bb95, !dbg !1017

sw.bb95:                                          ; preds = %if.then90, %sw.bb
  %1031 = load i8*, i8** %in.addr, align 8, !dbg !1017
  %incdec.ptr96 = getelementptr inbounds i8, i8* %1031, i32 -1, !dbg !1017
  store i8* %incdec.ptr96, i8** %in.addr, align 8, !dbg !1017
  %1032 = load i8, i8* %incdec.ptr96, align 1, !dbg !1017
  %conv97 = zext i8 %1032 to i32, !dbg !1017
  %shl98 = shl i32 %conv97, 16, !dbg !1017
  %1033 = load i32, i32* %tin1, align 4, !dbg !1017
  %or99 = or i32 %1033, %shl98, !dbg !1017
  store i32 %or99, i32* %tin1, align 4, !dbg !1017
  br label %sw.bb100, !dbg !1017

sw.bb100:                                         ; preds = %if.then90, %sw.bb95
  %1034 = load i8*, i8** %in.addr, align 8, !dbg !1017
  %incdec.ptr101 = getelementptr inbounds i8, i8* %1034, i32 -1, !dbg !1017
  store i8* %incdec.ptr101, i8** %in.addr, align 8, !dbg !1017
  %1035 = load i8, i8* %incdec.ptr101, align 1, !dbg !1017
  %conv102 = zext i8 %1035 to i32, !dbg !1017
  %shl103 = shl i32 %conv102, 8, !dbg !1017
  %1036 = load i32, i32* %tin1, align 4, !dbg !1017
  %or104 = or i32 %1036, %shl103, !dbg !1017
  store i32 %or104, i32* %tin1, align 4, !dbg !1017
  br label %sw.bb105, !dbg !1017

sw.bb105:                                         ; preds = %if.then90, %sw.bb100
  %1037 = load i8*, i8** %in.addr, align 8, !dbg !1017
  %incdec.ptr106 = getelementptr inbounds i8, i8* %1037, i32 -1, !dbg !1017
  store i8* %incdec.ptr106, i8** %in.addr, align 8, !dbg !1017
  %1038 = load i8, i8* %incdec.ptr106, align 1, !dbg !1017
  %conv107 = zext i8 %1038 to i32, !dbg !1017
  %1039 = load i32, i32* %tin1, align 4, !dbg !1017
  %or108 = or i32 %1039, %conv107, !dbg !1017
  store i32 %or108, i32* %tin1, align 4, !dbg !1017
  br label %sw.bb109, !dbg !1017

sw.bb109:                                         ; preds = %if.then90, %sw.bb105
  %1040 = load i8*, i8** %in.addr, align 8, !dbg !1017
  %incdec.ptr110 = getelementptr inbounds i8, i8* %1040, i32 -1, !dbg !1017
  store i8* %incdec.ptr110, i8** %in.addr, align 8, !dbg !1017
  %1041 = load i8, i8* %incdec.ptr110, align 1, !dbg !1017
  %conv111 = zext i8 %1041 to i32, !dbg !1017
  %shl112 = shl i32 %conv111, 24, !dbg !1017
  store i32 %shl112, i32* %tin0, align 4, !dbg !1017
  br label %sw.bb113, !dbg !1017

sw.bb113:                                         ; preds = %if.then90, %sw.bb109
  %1042 = load i8*, i8** %in.addr, align 8, !dbg !1017
  %incdec.ptr114 = getelementptr inbounds i8, i8* %1042, i32 -1, !dbg !1017
  store i8* %incdec.ptr114, i8** %in.addr, align 8, !dbg !1017
  %1043 = load i8, i8* %incdec.ptr114, align 1, !dbg !1017
  %conv115 = zext i8 %1043 to i32, !dbg !1017
  %shl116 = shl i32 %conv115, 16, !dbg !1017
  %1044 = load i32, i32* %tin0, align 4, !dbg !1017
  %or117 = or i32 %1044, %shl116, !dbg !1017
  store i32 %or117, i32* %tin0, align 4, !dbg !1017
  br label %sw.bb118, !dbg !1017

sw.bb118:                                         ; preds = %if.then90, %sw.bb113
  %1045 = load i8*, i8** %in.addr, align 8, !dbg !1017
  %incdec.ptr119 = getelementptr inbounds i8, i8* %1045, i32 -1, !dbg !1017
  store i8* %incdec.ptr119, i8** %in.addr, align 8, !dbg !1017
  %1046 = load i8, i8* %incdec.ptr119, align 1, !dbg !1017
  %conv120 = zext i8 %1046 to i32, !dbg !1017
  %shl121 = shl i32 %conv120, 8, !dbg !1017
  %1047 = load i32, i32* %tin0, align 4, !dbg !1017
  %or122 = or i32 %1047, %shl121, !dbg !1017
  store i32 %or122, i32* %tin0, align 4, !dbg !1017
  br label %sw.bb123, !dbg !1017

sw.bb123:                                         ; preds = %if.then90, %sw.bb118
  %1048 = load i8*, i8** %in.addr, align 8, !dbg !1017
  %incdec.ptr124 = getelementptr inbounds i8, i8* %1048, i32 -1, !dbg !1017
  store i8* %incdec.ptr124, i8** %in.addr, align 8, !dbg !1017
  %1049 = load i8, i8* %incdec.ptr124, align 1, !dbg !1017
  %conv125 = zext i8 %1049 to i32, !dbg !1017
  %1050 = load i32, i32* %tin0, align 4, !dbg !1017
  %or126 = or i32 %1050, %conv125, !dbg !1017
  store i32 %or126, i32* %tin0, align 4, !dbg !1017
  br label %sw.epilog, !dbg !1017

sw.epilog:                                        ; preds = %sw.bb123, %if.then90
  %1051 = load i32, i32* %tout0, align 4, !dbg !1019
  %1052 = load i32, i32* %tin0, align 4, !dbg !1020
  %xor127 = xor i32 %1052, %1051, !dbg !1020
  store i32 %xor127, i32* %tin0, align 4, !dbg !1020
  %1053 = load i32, i32* %tin0, align 4, !dbg !1021
  %arrayidx128 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1022
  store i32 %1053, i32* %arrayidx128, align 4, !dbg !1023
  %1054 = load i32, i32* %tout1, align 4, !dbg !1024
  %1055 = load i32, i32* %tin1, align 4, !dbg !1025
  %xor129 = xor i32 %1055, %1054, !dbg !1025
  store i32 %xor129, i32* %tin1, align 4, !dbg !1025
  %1056 = load i32, i32* %tin1, align 4, !dbg !1026
  %arrayidx130 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1027
  store i32 %1056, i32* %arrayidx130, align 4, !dbg !1028
  %arraydecay131 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1029
  %1057 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8, !dbg !1030
  store i32* %arraydecay131, i32** %data.addr.i411, align 8
  store %struct.DES_ks* %1057, %struct.DES_ks** %ks.addr.i412, align 8
  store i32 1, i32* %enc.addr.i413, align 4
  %1058 = load i32*, i32** %data.addr.i411, align 8, !dbg !1031
  %1059 = load i32, i32* %1058, align 4, !dbg !1031
  store i32 %1059, i32* %r.i415, align 4, !dbg !1032
  %1060 = load i32*, i32** %data.addr.i411, align 8, !dbg !1033
  %arrayidx1.i493 = getelementptr inbounds i32, i32* %1060, i64 1, !dbg !1033
  %1061 = load i32, i32* %arrayidx1.i493, align 4, !dbg !1033
  store i32 %1061, i32* %l.i414, align 4, !dbg !1034
  %1062 = load i32, i32* %l.i414, align 4, !dbg !791
  %shr.i494 = lshr i32 %1062, 4, !dbg !791
  %1063 = load i32, i32* %r.i415, align 4, !dbg !791
  %xor.i495 = xor i32 %shr.i494, %1063, !dbg !791
  %conv.i496 = zext i32 %xor.i495 to i64, !dbg !791
  %and.i497 = and i64 %conv.i496, 252645135, !dbg !791
  %conv2.i498 = trunc i64 %and.i497 to i32, !dbg !791
  store i32 %conv2.i498, i32* %tt.i419, align 4, !dbg !791
  %1064 = load i32, i32* %tt.i419, align 4, !dbg !791
  %1065 = load i32, i32* %r.i415, align 4, !dbg !791
  %xor3.i499 = xor i32 %1065, %1064, !dbg !791
  store i32 %xor3.i499, i32* %r.i415, align 4, !dbg !791
  %1066 = load i32, i32* %tt.i419, align 4, !dbg !791
  %shl.i500 = shl i32 %1066, 4, !dbg !791
  %1067 = load i32, i32* %l.i414, align 4, !dbg !791
  %xor4.i501 = xor i32 %1067, %shl.i500, !dbg !791
  store i32 %xor4.i501, i32* %l.i414, align 4, !dbg !791
  %1068 = load i32, i32* %r.i415, align 4, !dbg !791
  %shr5.i502 = lshr i32 %1068, 16, !dbg !791
  %1069 = load i32, i32* %l.i414, align 4, !dbg !791
  %xor6.i503 = xor i32 %shr5.i502, %1069, !dbg !791
  %conv7.i504 = zext i32 %xor6.i503 to i64, !dbg !791
  %and8.i505 = and i64 %conv7.i504, 65535, !dbg !791
  %conv9.i506 = trunc i64 %and8.i505 to i32, !dbg !791
  store i32 %conv9.i506, i32* %tt.i419, align 4, !dbg !791
  %1070 = load i32, i32* %tt.i419, align 4, !dbg !791
  %1071 = load i32, i32* %l.i414, align 4, !dbg !791
  %xor10.i507 = xor i32 %1071, %1070, !dbg !791
  store i32 %xor10.i507, i32* %l.i414, align 4, !dbg !791
  %1072 = load i32, i32* %tt.i419, align 4, !dbg !791
  %shl11.i508 = shl i32 %1072, 16, !dbg !791
  %1073 = load i32, i32* %r.i415, align 4, !dbg !791
  %xor12.i509 = xor i32 %1073, %shl11.i508, !dbg !791
  store i32 %xor12.i509, i32* %r.i415, align 4, !dbg !791
  %1074 = load i32, i32* %l.i414, align 4, !dbg !791
  %shr13.i510 = lshr i32 %1074, 2, !dbg !791
  %1075 = load i32, i32* %r.i415, align 4, !dbg !791
  %xor14.i511 = xor i32 %shr13.i510, %1075, !dbg !791
  %conv15.i512 = zext i32 %xor14.i511 to i64, !dbg !791
  %and16.i513 = and i64 %conv15.i512, 858993459, !dbg !791
  %conv17.i514 = trunc i64 %and16.i513 to i32, !dbg !791
  store i32 %conv17.i514, i32* %tt.i419, align 4, !dbg !791
  %1076 = load i32, i32* %tt.i419, align 4, !dbg !791
  %1077 = load i32, i32* %r.i415, align 4, !dbg !791
  %xor18.i515 = xor i32 %1077, %1076, !dbg !791
  store i32 %xor18.i515, i32* %r.i415, align 4, !dbg !791
  %1078 = load i32, i32* %tt.i419, align 4, !dbg !791
  %shl19.i516 = shl i32 %1078, 2, !dbg !791
  %1079 = load i32, i32* %l.i414, align 4, !dbg !791
  %xor20.i517 = xor i32 %1079, %shl19.i516, !dbg !791
  store i32 %xor20.i517, i32* %l.i414, align 4, !dbg !791
  %1080 = load i32, i32* %r.i415, align 4, !dbg !791
  %shr21.i518 = lshr i32 %1080, 8, !dbg !791
  %1081 = load i32, i32* %l.i414, align 4, !dbg !791
  %xor22.i519 = xor i32 %shr21.i518, %1081, !dbg !791
  %conv23.i520 = zext i32 %xor22.i519 to i64, !dbg !791
  %and24.i521 = and i64 %conv23.i520, 16711935, !dbg !791
  %conv25.i522 = trunc i64 %and24.i521 to i32, !dbg !791
  store i32 %conv25.i522, i32* %tt.i419, align 4, !dbg !791
  %1082 = load i32, i32* %tt.i419, align 4, !dbg !791
  %1083 = load i32, i32* %l.i414, align 4, !dbg !791
  %xor26.i523 = xor i32 %1083, %1082, !dbg !791
  store i32 %xor26.i523, i32* %l.i414, align 4, !dbg !791
  %1084 = load i32, i32* %tt.i419, align 4, !dbg !791
  %shl27.i524 = shl i32 %1084, 8, !dbg !791
  %1085 = load i32, i32* %r.i415, align 4, !dbg !791
  %xor28.i525 = xor i32 %1085, %shl27.i524, !dbg !791
  store i32 %xor28.i525, i32* %r.i415, align 4, !dbg !791
  %1086 = load i32, i32* %l.i414, align 4, !dbg !791
  %shr29.i526 = lshr i32 %1086, 1, !dbg !791
  %1087 = load i32, i32* %r.i415, align 4, !dbg !791
  %xor30.i527 = xor i32 %shr29.i526, %1087, !dbg !791
  %conv31.i528 = zext i32 %xor30.i527 to i64, !dbg !791
  %and32.i529 = and i64 %conv31.i528, 1431655765, !dbg !791
  %conv33.i530 = trunc i64 %and32.i529 to i32, !dbg !791
  store i32 %conv33.i530, i32* %tt.i419, align 4, !dbg !791
  %1088 = load i32, i32* %tt.i419, align 4, !dbg !791
  %1089 = load i32, i32* %r.i415, align 4, !dbg !791
  %xor34.i531 = xor i32 %1089, %1088, !dbg !791
  store i32 %xor34.i531, i32* %r.i415, align 4, !dbg !791
  %1090 = load i32, i32* %tt.i419, align 4, !dbg !791
  %shl35.i532 = shl i32 %1090, 1, !dbg !791
  %1091 = load i32, i32* %l.i414, align 4, !dbg !791
  %xor36.i533 = xor i32 %1091, %shl35.i532, !dbg !791
  store i32 %xor36.i533, i32* %l.i414, align 4, !dbg !791
  %1092 = load i32, i32* %r.i415, align 4, !dbg !792
  %1093 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %1092) #5, !dbg !792, !srcloc !70
  store i32 %1093, i32* %ret.i420, align 4, !dbg !792
  %1094 = load i32, i32* %ret.i420, align 4, !dbg !792
  store i32 %1094, i32* %tmp.i421, align 4, !dbg !792
  %1095 = load i32, i32* %tmp.i421, align 4, !dbg !792
  %conv37.i534 = zext i32 %1095 to i64, !dbg !1035
  %and38.i535 = and i64 %conv37.i534, 4294967295, !dbg !1036
  %conv39.i536 = trunc i64 %and38.i535 to i32, !dbg !1035
  store i32 %conv39.i536, i32* %r.i415, align 4, !dbg !1037
  %1096 = load i32, i32* %l.i414, align 4, !dbg !793
  %1097 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %1096) #5, !dbg !793, !srcloc !77
  store i32 %1097, i32* %ret40.i422, align 4, !dbg !793
  %1098 = load i32, i32* %ret40.i422, align 4, !dbg !793
  store i32 %1098, i32* %tmp41.i423, align 4, !dbg !793
  %1099 = load i32, i32* %tmp41.i423, align 4, !dbg !793
  %conv42.i537 = zext i32 %1099 to i64, !dbg !1038
  %and43.i538 = and i64 %conv42.i537, 4294967295, !dbg !1039
  %conv44.i539 = trunc i64 %and43.i538 to i32, !dbg !1038
  store i32 %conv44.i539, i32* %l.i414, align 4, !dbg !1040
  %1100 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i412, align 8, !dbg !1041
  %ks45.i540 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %1100, i32 0, i32 0, !dbg !1042
  %arraydecay.i541 = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i540, i64 0, i64 0, !dbg !1043
  %deslong.i542 = bitcast %union.anon* %arraydecay.i541 to [2 x i32]*, !dbg !1043
  %arraydecay46.i543 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i542, i64 0, i64 0, !dbg !1041
  store i32* %arraydecay46.i543, i32** %s.i418, align 8, !dbg !1044
  %1101 = load i32, i32* %enc.addr.i413, align 4, !dbg !1045
  %tobool.i544 = icmp ne i32 %1101, 0, !dbg !1045
  br i1 %tobool.i544, label %if.then.i1216, label %if.else.i1888, !dbg !1046

if.then.i1216:                                    ; preds = %sw.epilog
  %1102 = load i32, i32* %r.i415, align 4, !dbg !1047
  %1103 = load i32*, i32** %s.i418, align 8, !dbg !1047
  %1104 = load i32, i32* %1103, align 4, !dbg !1047
  %xor48.i545 = xor i32 %1102, %1104, !dbg !1047
  store i32 %xor48.i545, i32* %u.i417, align 4, !dbg !1047
  %1105 = load i32, i32* %r.i415, align 4, !dbg !1047
  %1106 = load i32*, i32** %s.i418, align 8, !dbg !1047
  %arrayidx49.i546 = getelementptr inbounds i32, i32* %1106, i64 1, !dbg !1047
  %1107 = load i32, i32* %arrayidx49.i546, align 4, !dbg !1047
  %xor50.i547 = xor i32 %1105, %1107, !dbg !1047
  store i32 %xor50.i547, i32* %t.i416, align 4, !dbg !1047
  %1108 = load i32, i32* %t.i416, align 4, !dbg !794
  %1109 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1108) #5, !dbg !794, !srcloc !94
  store i32 %1109, i32* %ret51.i424, align 4, !dbg !794
  %1110 = load i32, i32* %ret51.i424, align 4, !dbg !794
  store i32 %1110, i32* %tmp52.i425, align 4, !dbg !794
  %1111 = load i32, i32* %tmp52.i425, align 4, !dbg !794
  store i32 %1111, i32* %t.i416, align 4, !dbg !1047
  %1112 = load i32, i32* %u.i417, align 4, !dbg !1047
  %shr53.i548 = lshr i32 %1112, 2, !dbg !1047
  %and54.i549 = and i32 %shr53.i548, 63, !dbg !1047
  %idxprom.i550 = zext i32 %and54.i549 to i64, !dbg !1047
  %arrayidx55.i551 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i550, !dbg !1047
  %1113 = load i32, i32* %arrayidx55.i551, align 4, !dbg !1047
  %1114 = load i32, i32* %u.i417, align 4, !dbg !1047
  %shr56.i552 = lshr i32 %1114, 10, !dbg !1047
  %and57.i553 = and i32 %shr56.i552, 63, !dbg !1047
  %idxprom58.i554 = zext i32 %and57.i553 to i64, !dbg !1047
  %arrayidx59.i555 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i554, !dbg !1047
  %1115 = load i32, i32* %arrayidx59.i555, align 4, !dbg !1047
  %xor60.i556 = xor i32 %1113, %1115, !dbg !1047
  %1116 = load i32, i32* %u.i417, align 4, !dbg !1047
  %shr61.i557 = lshr i32 %1116, 18, !dbg !1047
  %and62.i558 = and i32 %shr61.i557, 63, !dbg !1047
  %idxprom63.i559 = zext i32 %and62.i558 to i64, !dbg !1047
  %arrayidx64.i560 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i559, !dbg !1047
  %1117 = load i32, i32* %arrayidx64.i560, align 4, !dbg !1047
  %xor65.i561 = xor i32 %xor60.i556, %1117, !dbg !1047
  %1118 = load i32, i32* %u.i417, align 4, !dbg !1047
  %shr66.i562 = lshr i32 %1118, 26, !dbg !1047
  %idxprom68.i563 = zext i32 %shr66.i562 to i64, !dbg !1047
  %arrayidx69.i564 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i563, !dbg !1047
  %1119 = load i32, i32* %arrayidx69.i564, align 4, !dbg !1047
  %xor70.i565 = xor i32 %xor65.i561, %1119, !dbg !1047
  %1120 = load i32, i32* %t.i416, align 4, !dbg !1047
  %shr71.i566 = lshr i32 %1120, 2, !dbg !1047
  %and72.i567 = and i32 %shr71.i566, 63, !dbg !1047
  %idxprom73.i568 = zext i32 %and72.i567 to i64, !dbg !1047
  %arrayidx74.i569 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i568, !dbg !1047
  %1121 = load i32, i32* %arrayidx74.i569, align 4, !dbg !1047
  %xor75.i570 = xor i32 %xor70.i565, %1121, !dbg !1047
  %1122 = load i32, i32* %t.i416, align 4, !dbg !1047
  %shr76.i571 = lshr i32 %1122, 10, !dbg !1047
  %and77.i572 = and i32 %shr76.i571, 63, !dbg !1047
  %idxprom78.i573 = zext i32 %and77.i572 to i64, !dbg !1047
  %arrayidx79.i574 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i573, !dbg !1047
  %1123 = load i32, i32* %arrayidx79.i574, align 4, !dbg !1047
  %xor80.i575 = xor i32 %xor75.i570, %1123, !dbg !1047
  %1124 = load i32, i32* %t.i416, align 4, !dbg !1047
  %shr81.i576 = lshr i32 %1124, 18, !dbg !1047
  %and82.i577 = and i32 %shr81.i576, 63, !dbg !1047
  %idxprom83.i578 = zext i32 %and82.i577 to i64, !dbg !1047
  %arrayidx84.i579 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i578, !dbg !1047
  %1125 = load i32, i32* %arrayidx84.i579, align 4, !dbg !1047
  %xor85.i580 = xor i32 %xor80.i575, %1125, !dbg !1047
  %1126 = load i32, i32* %t.i416, align 4, !dbg !1047
  %shr86.i581 = lshr i32 %1126, 26, !dbg !1047
  %idxprom88.i582 = zext i32 %shr86.i581 to i64, !dbg !1047
  %arrayidx89.i583 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i582, !dbg !1047
  %1127 = load i32, i32* %arrayidx89.i583, align 4, !dbg !1047
  %xor90.i584 = xor i32 %xor85.i580, %1127, !dbg !1047
  %1128 = load i32, i32* %l.i414, align 4, !dbg !1047
  %xor91.i585 = xor i32 %1128, %xor90.i584, !dbg !1047
  store i32 %xor91.i585, i32* %l.i414, align 4, !dbg !1047
  %1129 = load i32, i32* %l.i414, align 4, !dbg !1048
  %1130 = load i32*, i32** %s.i418, align 8, !dbg !1048
  %arrayidx92.i586 = getelementptr inbounds i32, i32* %1130, i64 2, !dbg !1048
  %1131 = load i32, i32* %arrayidx92.i586, align 4, !dbg !1048
  %xor93.i587 = xor i32 %1129, %1131, !dbg !1048
  store i32 %xor93.i587, i32* %u.i417, align 4, !dbg !1048
  %1132 = load i32, i32* %l.i414, align 4, !dbg !1048
  %1133 = load i32*, i32** %s.i418, align 8, !dbg !1048
  %arrayidx94.i588 = getelementptr inbounds i32, i32* %1133, i64 3, !dbg !1048
  %1134 = load i32, i32* %arrayidx94.i588, align 4, !dbg !1048
  %xor95.i589 = xor i32 %1132, %1134, !dbg !1048
  store i32 %xor95.i589, i32* %t.i416, align 4, !dbg !1048
  %1135 = load i32, i32* %t.i416, align 4, !dbg !795
  %1136 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1135) #5, !dbg !795, !srcloc !100
  store i32 %1136, i32* %ret96.i426, align 4, !dbg !795
  %1137 = load i32, i32* %ret96.i426, align 4, !dbg !795
  store i32 %1137, i32* %tmp97.i427, align 4, !dbg !795
  %1138 = load i32, i32* %tmp97.i427, align 4, !dbg !795
  store i32 %1138, i32* %t.i416, align 4, !dbg !1048
  %1139 = load i32, i32* %u.i417, align 4, !dbg !1048
  %shr98.i590 = lshr i32 %1139, 2, !dbg !1048
  %and99.i591 = and i32 %shr98.i590, 63, !dbg !1048
  %idxprom100.i592 = zext i32 %and99.i591 to i64, !dbg !1048
  %arrayidx101.i593 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i592, !dbg !1048
  %1140 = load i32, i32* %arrayidx101.i593, align 4, !dbg !1048
  %1141 = load i32, i32* %u.i417, align 4, !dbg !1048
  %shr102.i594 = lshr i32 %1141, 10, !dbg !1048
  %and103.i595 = and i32 %shr102.i594, 63, !dbg !1048
  %idxprom104.i596 = zext i32 %and103.i595 to i64, !dbg !1048
  %arrayidx105.i597 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i596, !dbg !1048
  %1142 = load i32, i32* %arrayidx105.i597, align 4, !dbg !1048
  %xor106.i598 = xor i32 %1140, %1142, !dbg !1048
  %1143 = load i32, i32* %u.i417, align 4, !dbg !1048
  %shr107.i599 = lshr i32 %1143, 18, !dbg !1048
  %and108.i600 = and i32 %shr107.i599, 63, !dbg !1048
  %idxprom109.i601 = zext i32 %and108.i600 to i64, !dbg !1048
  %arrayidx110.i602 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i601, !dbg !1048
  %1144 = load i32, i32* %arrayidx110.i602, align 4, !dbg !1048
  %xor111.i603 = xor i32 %xor106.i598, %1144, !dbg !1048
  %1145 = load i32, i32* %u.i417, align 4, !dbg !1048
  %shr112.i604 = lshr i32 %1145, 26, !dbg !1048
  %idxprom114.i605 = zext i32 %shr112.i604 to i64, !dbg !1048
  %arrayidx115.i606 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i605, !dbg !1048
  %1146 = load i32, i32* %arrayidx115.i606, align 4, !dbg !1048
  %xor116.i607 = xor i32 %xor111.i603, %1146, !dbg !1048
  %1147 = load i32, i32* %t.i416, align 4, !dbg !1048
  %shr117.i608 = lshr i32 %1147, 2, !dbg !1048
  %and118.i609 = and i32 %shr117.i608, 63, !dbg !1048
  %idxprom119.i610 = zext i32 %and118.i609 to i64, !dbg !1048
  %arrayidx120.i611 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i610, !dbg !1048
  %1148 = load i32, i32* %arrayidx120.i611, align 4, !dbg !1048
  %xor121.i612 = xor i32 %xor116.i607, %1148, !dbg !1048
  %1149 = load i32, i32* %t.i416, align 4, !dbg !1048
  %shr122.i613 = lshr i32 %1149, 10, !dbg !1048
  %and123.i614 = and i32 %shr122.i613, 63, !dbg !1048
  %idxprom124.i615 = zext i32 %and123.i614 to i64, !dbg !1048
  %arrayidx125.i616 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i615, !dbg !1048
  %1150 = load i32, i32* %arrayidx125.i616, align 4, !dbg !1048
  %xor126.i617 = xor i32 %xor121.i612, %1150, !dbg !1048
  %1151 = load i32, i32* %t.i416, align 4, !dbg !1048
  %shr127.i618 = lshr i32 %1151, 18, !dbg !1048
  %and128.i619 = and i32 %shr127.i618, 63, !dbg !1048
  %idxprom129.i620 = zext i32 %and128.i619 to i64, !dbg !1048
  %arrayidx130.i621 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i620, !dbg !1048
  %1152 = load i32, i32* %arrayidx130.i621, align 4, !dbg !1048
  %xor131.i622 = xor i32 %xor126.i617, %1152, !dbg !1048
  %1153 = load i32, i32* %t.i416, align 4, !dbg !1048
  %shr132.i623 = lshr i32 %1153, 26, !dbg !1048
  %idxprom134.i624 = zext i32 %shr132.i623 to i64, !dbg !1048
  %arrayidx135.i625 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i624, !dbg !1048
  %1154 = load i32, i32* %arrayidx135.i625, align 4, !dbg !1048
  %xor136.i626 = xor i32 %xor131.i622, %1154, !dbg !1048
  %1155 = load i32, i32* %r.i415, align 4, !dbg !1048
  %xor137.i627 = xor i32 %1155, %xor136.i626, !dbg !1048
  store i32 %xor137.i627, i32* %r.i415, align 4, !dbg !1048
  %1156 = load i32, i32* %r.i415, align 4, !dbg !1049
  %1157 = load i32*, i32** %s.i418, align 8, !dbg !1049
  %arrayidx138.i628 = getelementptr inbounds i32, i32* %1157, i64 4, !dbg !1049
  %1158 = load i32, i32* %arrayidx138.i628, align 4, !dbg !1049
  %xor139.i629 = xor i32 %1156, %1158, !dbg !1049
  store i32 %xor139.i629, i32* %u.i417, align 4, !dbg !1049
  %1159 = load i32, i32* %r.i415, align 4, !dbg !1049
  %1160 = load i32*, i32** %s.i418, align 8, !dbg !1049
  %arrayidx140.i630 = getelementptr inbounds i32, i32* %1160, i64 5, !dbg !1049
  %1161 = load i32, i32* %arrayidx140.i630, align 4, !dbg !1049
  %xor141.i631 = xor i32 %1159, %1161, !dbg !1049
  store i32 %xor141.i631, i32* %t.i416, align 4, !dbg !1049
  %1162 = load i32, i32* %t.i416, align 4, !dbg !796
  %1163 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1162) #5, !dbg !796, !srcloc !106
  store i32 %1163, i32* %ret142.i428, align 4, !dbg !796
  %1164 = load i32, i32* %ret142.i428, align 4, !dbg !796
  store i32 %1164, i32* %tmp143.i429, align 4, !dbg !796
  %1165 = load i32, i32* %tmp143.i429, align 4, !dbg !796
  store i32 %1165, i32* %t.i416, align 4, !dbg !1049
  %1166 = load i32, i32* %u.i417, align 4, !dbg !1049
  %shr144.i632 = lshr i32 %1166, 2, !dbg !1049
  %and145.i633 = and i32 %shr144.i632, 63, !dbg !1049
  %idxprom146.i634 = zext i32 %and145.i633 to i64, !dbg !1049
  %arrayidx147.i635 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i634, !dbg !1049
  %1167 = load i32, i32* %arrayidx147.i635, align 4, !dbg !1049
  %1168 = load i32, i32* %u.i417, align 4, !dbg !1049
  %shr148.i636 = lshr i32 %1168, 10, !dbg !1049
  %and149.i637 = and i32 %shr148.i636, 63, !dbg !1049
  %idxprom150.i638 = zext i32 %and149.i637 to i64, !dbg !1049
  %arrayidx151.i639 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i638, !dbg !1049
  %1169 = load i32, i32* %arrayidx151.i639, align 4, !dbg !1049
  %xor152.i640 = xor i32 %1167, %1169, !dbg !1049
  %1170 = load i32, i32* %u.i417, align 4, !dbg !1049
  %shr153.i641 = lshr i32 %1170, 18, !dbg !1049
  %and154.i642 = and i32 %shr153.i641, 63, !dbg !1049
  %idxprom155.i643 = zext i32 %and154.i642 to i64, !dbg !1049
  %arrayidx156.i644 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i643, !dbg !1049
  %1171 = load i32, i32* %arrayidx156.i644, align 4, !dbg !1049
  %xor157.i645 = xor i32 %xor152.i640, %1171, !dbg !1049
  %1172 = load i32, i32* %u.i417, align 4, !dbg !1049
  %shr158.i646 = lshr i32 %1172, 26, !dbg !1049
  %idxprom160.i647 = zext i32 %shr158.i646 to i64, !dbg !1049
  %arrayidx161.i648 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i647, !dbg !1049
  %1173 = load i32, i32* %arrayidx161.i648, align 4, !dbg !1049
  %xor162.i649 = xor i32 %xor157.i645, %1173, !dbg !1049
  %1174 = load i32, i32* %t.i416, align 4, !dbg !1049
  %shr163.i650 = lshr i32 %1174, 2, !dbg !1049
  %and164.i651 = and i32 %shr163.i650, 63, !dbg !1049
  %idxprom165.i652 = zext i32 %and164.i651 to i64, !dbg !1049
  %arrayidx166.i653 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i652, !dbg !1049
  %1175 = load i32, i32* %arrayidx166.i653, align 4, !dbg !1049
  %xor167.i654 = xor i32 %xor162.i649, %1175, !dbg !1049
  %1176 = load i32, i32* %t.i416, align 4, !dbg !1049
  %shr168.i655 = lshr i32 %1176, 10, !dbg !1049
  %and169.i656 = and i32 %shr168.i655, 63, !dbg !1049
  %idxprom170.i657 = zext i32 %and169.i656 to i64, !dbg !1049
  %arrayidx171.i658 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i657, !dbg !1049
  %1177 = load i32, i32* %arrayidx171.i658, align 4, !dbg !1049
  %xor172.i659 = xor i32 %xor167.i654, %1177, !dbg !1049
  %1178 = load i32, i32* %t.i416, align 4, !dbg !1049
  %shr173.i660 = lshr i32 %1178, 18, !dbg !1049
  %and174.i661 = and i32 %shr173.i660, 63, !dbg !1049
  %idxprom175.i662 = zext i32 %and174.i661 to i64, !dbg !1049
  %arrayidx176.i663 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i662, !dbg !1049
  %1179 = load i32, i32* %arrayidx176.i663, align 4, !dbg !1049
  %xor177.i664 = xor i32 %xor172.i659, %1179, !dbg !1049
  %1180 = load i32, i32* %t.i416, align 4, !dbg !1049
  %shr178.i665 = lshr i32 %1180, 26, !dbg !1049
  %idxprom180.i666 = zext i32 %shr178.i665 to i64, !dbg !1049
  %arrayidx181.i667 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i666, !dbg !1049
  %1181 = load i32, i32* %arrayidx181.i667, align 4, !dbg !1049
  %xor182.i668 = xor i32 %xor177.i664, %1181, !dbg !1049
  %1182 = load i32, i32* %l.i414, align 4, !dbg !1049
  %xor183.i669 = xor i32 %1182, %xor182.i668, !dbg !1049
  store i32 %xor183.i669, i32* %l.i414, align 4, !dbg !1049
  %1183 = load i32, i32* %l.i414, align 4, !dbg !1050
  %1184 = load i32*, i32** %s.i418, align 8, !dbg !1050
  %arrayidx184.i670 = getelementptr inbounds i32, i32* %1184, i64 6, !dbg !1050
  %1185 = load i32, i32* %arrayidx184.i670, align 4, !dbg !1050
  %xor185.i671 = xor i32 %1183, %1185, !dbg !1050
  store i32 %xor185.i671, i32* %u.i417, align 4, !dbg !1050
  %1186 = load i32, i32* %l.i414, align 4, !dbg !1050
  %1187 = load i32*, i32** %s.i418, align 8, !dbg !1050
  %arrayidx186.i672 = getelementptr inbounds i32, i32* %1187, i64 7, !dbg !1050
  %1188 = load i32, i32* %arrayidx186.i672, align 4, !dbg !1050
  %xor187.i673 = xor i32 %1186, %1188, !dbg !1050
  store i32 %xor187.i673, i32* %t.i416, align 4, !dbg !1050
  %1189 = load i32, i32* %t.i416, align 4, !dbg !797
  %1190 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1189) #5, !dbg !797, !srcloc !112
  store i32 %1190, i32* %ret188.i430, align 4, !dbg !797
  %1191 = load i32, i32* %ret188.i430, align 4, !dbg !797
  store i32 %1191, i32* %tmp189.i431, align 4, !dbg !797
  %1192 = load i32, i32* %tmp189.i431, align 4, !dbg !797
  store i32 %1192, i32* %t.i416, align 4, !dbg !1050
  %1193 = load i32, i32* %u.i417, align 4, !dbg !1050
  %shr190.i674 = lshr i32 %1193, 2, !dbg !1050
  %and191.i675 = and i32 %shr190.i674, 63, !dbg !1050
  %idxprom192.i676 = zext i32 %and191.i675 to i64, !dbg !1050
  %arrayidx193.i677 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i676, !dbg !1050
  %1194 = load i32, i32* %arrayidx193.i677, align 4, !dbg !1050
  %1195 = load i32, i32* %u.i417, align 4, !dbg !1050
  %shr194.i678 = lshr i32 %1195, 10, !dbg !1050
  %and195.i679 = and i32 %shr194.i678, 63, !dbg !1050
  %idxprom196.i680 = zext i32 %and195.i679 to i64, !dbg !1050
  %arrayidx197.i681 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i680, !dbg !1050
  %1196 = load i32, i32* %arrayidx197.i681, align 4, !dbg !1050
  %xor198.i682 = xor i32 %1194, %1196, !dbg !1050
  %1197 = load i32, i32* %u.i417, align 4, !dbg !1050
  %shr199.i683 = lshr i32 %1197, 18, !dbg !1050
  %and200.i684 = and i32 %shr199.i683, 63, !dbg !1050
  %idxprom201.i685 = zext i32 %and200.i684 to i64, !dbg !1050
  %arrayidx202.i686 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i685, !dbg !1050
  %1198 = load i32, i32* %arrayidx202.i686, align 4, !dbg !1050
  %xor203.i687 = xor i32 %xor198.i682, %1198, !dbg !1050
  %1199 = load i32, i32* %u.i417, align 4, !dbg !1050
  %shr204.i688 = lshr i32 %1199, 26, !dbg !1050
  %idxprom206.i689 = zext i32 %shr204.i688 to i64, !dbg !1050
  %arrayidx207.i690 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i689, !dbg !1050
  %1200 = load i32, i32* %arrayidx207.i690, align 4, !dbg !1050
  %xor208.i691 = xor i32 %xor203.i687, %1200, !dbg !1050
  %1201 = load i32, i32* %t.i416, align 4, !dbg !1050
  %shr209.i692 = lshr i32 %1201, 2, !dbg !1050
  %and210.i693 = and i32 %shr209.i692, 63, !dbg !1050
  %idxprom211.i694 = zext i32 %and210.i693 to i64, !dbg !1050
  %arrayidx212.i695 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i694, !dbg !1050
  %1202 = load i32, i32* %arrayidx212.i695, align 4, !dbg !1050
  %xor213.i696 = xor i32 %xor208.i691, %1202, !dbg !1050
  %1203 = load i32, i32* %t.i416, align 4, !dbg !1050
  %shr214.i697 = lshr i32 %1203, 10, !dbg !1050
  %and215.i698 = and i32 %shr214.i697, 63, !dbg !1050
  %idxprom216.i699 = zext i32 %and215.i698 to i64, !dbg !1050
  %arrayidx217.i700 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i699, !dbg !1050
  %1204 = load i32, i32* %arrayidx217.i700, align 4, !dbg !1050
  %xor218.i701 = xor i32 %xor213.i696, %1204, !dbg !1050
  %1205 = load i32, i32* %t.i416, align 4, !dbg !1050
  %shr219.i702 = lshr i32 %1205, 18, !dbg !1050
  %and220.i703 = and i32 %shr219.i702, 63, !dbg !1050
  %idxprom221.i704 = zext i32 %and220.i703 to i64, !dbg !1050
  %arrayidx222.i705 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i704, !dbg !1050
  %1206 = load i32, i32* %arrayidx222.i705, align 4, !dbg !1050
  %xor223.i706 = xor i32 %xor218.i701, %1206, !dbg !1050
  %1207 = load i32, i32* %t.i416, align 4, !dbg !1050
  %shr224.i707 = lshr i32 %1207, 26, !dbg !1050
  %idxprom226.i708 = zext i32 %shr224.i707 to i64, !dbg !1050
  %arrayidx227.i709 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i708, !dbg !1050
  %1208 = load i32, i32* %arrayidx227.i709, align 4, !dbg !1050
  %xor228.i710 = xor i32 %xor223.i706, %1208, !dbg !1050
  %1209 = load i32, i32* %r.i415, align 4, !dbg !1050
  %xor229.i711 = xor i32 %1209, %xor228.i710, !dbg !1050
  store i32 %xor229.i711, i32* %r.i415, align 4, !dbg !1050
  %1210 = load i32, i32* %r.i415, align 4, !dbg !1051
  %1211 = load i32*, i32** %s.i418, align 8, !dbg !1051
  %arrayidx230.i712 = getelementptr inbounds i32, i32* %1211, i64 8, !dbg !1051
  %1212 = load i32, i32* %arrayidx230.i712, align 4, !dbg !1051
  %xor231.i713 = xor i32 %1210, %1212, !dbg !1051
  store i32 %xor231.i713, i32* %u.i417, align 4, !dbg !1051
  %1213 = load i32, i32* %r.i415, align 4, !dbg !1051
  %1214 = load i32*, i32** %s.i418, align 8, !dbg !1051
  %arrayidx232.i714 = getelementptr inbounds i32, i32* %1214, i64 9, !dbg !1051
  %1215 = load i32, i32* %arrayidx232.i714, align 4, !dbg !1051
  %xor233.i715 = xor i32 %1213, %1215, !dbg !1051
  store i32 %xor233.i715, i32* %t.i416, align 4, !dbg !1051
  %1216 = load i32, i32* %t.i416, align 4, !dbg !798
  %1217 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1216) #5, !dbg !798, !srcloc !118
  store i32 %1217, i32* %ret234.i432, align 4, !dbg !798
  %1218 = load i32, i32* %ret234.i432, align 4, !dbg !798
  store i32 %1218, i32* %tmp235.i433, align 4, !dbg !798
  %1219 = load i32, i32* %tmp235.i433, align 4, !dbg !798
  store i32 %1219, i32* %t.i416, align 4, !dbg !1051
  %1220 = load i32, i32* %u.i417, align 4, !dbg !1051
  %shr236.i716 = lshr i32 %1220, 2, !dbg !1051
  %and237.i717 = and i32 %shr236.i716, 63, !dbg !1051
  %idxprom238.i718 = zext i32 %and237.i717 to i64, !dbg !1051
  %arrayidx239.i719 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i718, !dbg !1051
  %1221 = load i32, i32* %arrayidx239.i719, align 4, !dbg !1051
  %1222 = load i32, i32* %u.i417, align 4, !dbg !1051
  %shr240.i720 = lshr i32 %1222, 10, !dbg !1051
  %and241.i721 = and i32 %shr240.i720, 63, !dbg !1051
  %idxprom242.i722 = zext i32 %and241.i721 to i64, !dbg !1051
  %arrayidx243.i723 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i722, !dbg !1051
  %1223 = load i32, i32* %arrayidx243.i723, align 4, !dbg !1051
  %xor244.i724 = xor i32 %1221, %1223, !dbg !1051
  %1224 = load i32, i32* %u.i417, align 4, !dbg !1051
  %shr245.i725 = lshr i32 %1224, 18, !dbg !1051
  %and246.i726 = and i32 %shr245.i725, 63, !dbg !1051
  %idxprom247.i727 = zext i32 %and246.i726 to i64, !dbg !1051
  %arrayidx248.i728 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i727, !dbg !1051
  %1225 = load i32, i32* %arrayidx248.i728, align 4, !dbg !1051
  %xor249.i729 = xor i32 %xor244.i724, %1225, !dbg !1051
  %1226 = load i32, i32* %u.i417, align 4, !dbg !1051
  %shr250.i730 = lshr i32 %1226, 26, !dbg !1051
  %idxprom252.i731 = zext i32 %shr250.i730 to i64, !dbg !1051
  %arrayidx253.i732 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i731, !dbg !1051
  %1227 = load i32, i32* %arrayidx253.i732, align 4, !dbg !1051
  %xor254.i733 = xor i32 %xor249.i729, %1227, !dbg !1051
  %1228 = load i32, i32* %t.i416, align 4, !dbg !1051
  %shr255.i734 = lshr i32 %1228, 2, !dbg !1051
  %and256.i735 = and i32 %shr255.i734, 63, !dbg !1051
  %idxprom257.i736 = zext i32 %and256.i735 to i64, !dbg !1051
  %arrayidx258.i737 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i736, !dbg !1051
  %1229 = load i32, i32* %arrayidx258.i737, align 4, !dbg !1051
  %xor259.i738 = xor i32 %xor254.i733, %1229, !dbg !1051
  %1230 = load i32, i32* %t.i416, align 4, !dbg !1051
  %shr260.i739 = lshr i32 %1230, 10, !dbg !1051
  %and261.i740 = and i32 %shr260.i739, 63, !dbg !1051
  %idxprom262.i741 = zext i32 %and261.i740 to i64, !dbg !1051
  %arrayidx263.i742 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i741, !dbg !1051
  %1231 = load i32, i32* %arrayidx263.i742, align 4, !dbg !1051
  %xor264.i743 = xor i32 %xor259.i738, %1231, !dbg !1051
  %1232 = load i32, i32* %t.i416, align 4, !dbg !1051
  %shr265.i744 = lshr i32 %1232, 18, !dbg !1051
  %and266.i745 = and i32 %shr265.i744, 63, !dbg !1051
  %idxprom267.i746 = zext i32 %and266.i745 to i64, !dbg !1051
  %arrayidx268.i747 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i746, !dbg !1051
  %1233 = load i32, i32* %arrayidx268.i747, align 4, !dbg !1051
  %xor269.i748 = xor i32 %xor264.i743, %1233, !dbg !1051
  %1234 = load i32, i32* %t.i416, align 4, !dbg !1051
  %shr270.i749 = lshr i32 %1234, 26, !dbg !1051
  %idxprom272.i750 = zext i32 %shr270.i749 to i64, !dbg !1051
  %arrayidx273.i751 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i750, !dbg !1051
  %1235 = load i32, i32* %arrayidx273.i751, align 4, !dbg !1051
  %xor274.i752 = xor i32 %xor269.i748, %1235, !dbg !1051
  %1236 = load i32, i32* %l.i414, align 4, !dbg !1051
  %xor275.i753 = xor i32 %1236, %xor274.i752, !dbg !1051
  store i32 %xor275.i753, i32* %l.i414, align 4, !dbg !1051
  %1237 = load i32, i32* %l.i414, align 4, !dbg !1052
  %1238 = load i32*, i32** %s.i418, align 8, !dbg !1052
  %arrayidx276.i754 = getelementptr inbounds i32, i32* %1238, i64 10, !dbg !1052
  %1239 = load i32, i32* %arrayidx276.i754, align 4, !dbg !1052
  %xor277.i755 = xor i32 %1237, %1239, !dbg !1052
  store i32 %xor277.i755, i32* %u.i417, align 4, !dbg !1052
  %1240 = load i32, i32* %l.i414, align 4, !dbg !1052
  %1241 = load i32*, i32** %s.i418, align 8, !dbg !1052
  %arrayidx278.i756 = getelementptr inbounds i32, i32* %1241, i64 11, !dbg !1052
  %1242 = load i32, i32* %arrayidx278.i756, align 4, !dbg !1052
  %xor279.i757 = xor i32 %1240, %1242, !dbg !1052
  store i32 %xor279.i757, i32* %t.i416, align 4, !dbg !1052
  %1243 = load i32, i32* %t.i416, align 4, !dbg !799
  %1244 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1243) #5, !dbg !799, !srcloc !124
  store i32 %1244, i32* %ret280.i434, align 4, !dbg !799
  %1245 = load i32, i32* %ret280.i434, align 4, !dbg !799
  store i32 %1245, i32* %tmp281.i435, align 4, !dbg !799
  %1246 = load i32, i32* %tmp281.i435, align 4, !dbg !799
  store i32 %1246, i32* %t.i416, align 4, !dbg !1052
  %1247 = load i32, i32* %u.i417, align 4, !dbg !1052
  %shr282.i758 = lshr i32 %1247, 2, !dbg !1052
  %and283.i759 = and i32 %shr282.i758, 63, !dbg !1052
  %idxprom284.i760 = zext i32 %and283.i759 to i64, !dbg !1052
  %arrayidx285.i761 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i760, !dbg !1052
  %1248 = load i32, i32* %arrayidx285.i761, align 4, !dbg !1052
  %1249 = load i32, i32* %u.i417, align 4, !dbg !1052
  %shr286.i762 = lshr i32 %1249, 10, !dbg !1052
  %and287.i763 = and i32 %shr286.i762, 63, !dbg !1052
  %idxprom288.i764 = zext i32 %and287.i763 to i64, !dbg !1052
  %arrayidx289.i765 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i764, !dbg !1052
  %1250 = load i32, i32* %arrayidx289.i765, align 4, !dbg !1052
  %xor290.i766 = xor i32 %1248, %1250, !dbg !1052
  %1251 = load i32, i32* %u.i417, align 4, !dbg !1052
  %shr291.i767 = lshr i32 %1251, 18, !dbg !1052
  %and292.i768 = and i32 %shr291.i767, 63, !dbg !1052
  %idxprom293.i769 = zext i32 %and292.i768 to i64, !dbg !1052
  %arrayidx294.i770 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i769, !dbg !1052
  %1252 = load i32, i32* %arrayidx294.i770, align 4, !dbg !1052
  %xor295.i771 = xor i32 %xor290.i766, %1252, !dbg !1052
  %1253 = load i32, i32* %u.i417, align 4, !dbg !1052
  %shr296.i772 = lshr i32 %1253, 26, !dbg !1052
  %idxprom298.i773 = zext i32 %shr296.i772 to i64, !dbg !1052
  %arrayidx299.i774 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i773, !dbg !1052
  %1254 = load i32, i32* %arrayidx299.i774, align 4, !dbg !1052
  %xor300.i775 = xor i32 %xor295.i771, %1254, !dbg !1052
  %1255 = load i32, i32* %t.i416, align 4, !dbg !1052
  %shr301.i776 = lshr i32 %1255, 2, !dbg !1052
  %and302.i777 = and i32 %shr301.i776, 63, !dbg !1052
  %idxprom303.i778 = zext i32 %and302.i777 to i64, !dbg !1052
  %arrayidx304.i779 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i778, !dbg !1052
  %1256 = load i32, i32* %arrayidx304.i779, align 4, !dbg !1052
  %xor305.i780 = xor i32 %xor300.i775, %1256, !dbg !1052
  %1257 = load i32, i32* %t.i416, align 4, !dbg !1052
  %shr306.i781 = lshr i32 %1257, 10, !dbg !1052
  %and307.i782 = and i32 %shr306.i781, 63, !dbg !1052
  %idxprom308.i783 = zext i32 %and307.i782 to i64, !dbg !1052
  %arrayidx309.i784 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i783, !dbg !1052
  %1258 = load i32, i32* %arrayidx309.i784, align 4, !dbg !1052
  %xor310.i785 = xor i32 %xor305.i780, %1258, !dbg !1052
  %1259 = load i32, i32* %t.i416, align 4, !dbg !1052
  %shr311.i786 = lshr i32 %1259, 18, !dbg !1052
  %and312.i787 = and i32 %shr311.i786, 63, !dbg !1052
  %idxprom313.i788 = zext i32 %and312.i787 to i64, !dbg !1052
  %arrayidx314.i789 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i788, !dbg !1052
  %1260 = load i32, i32* %arrayidx314.i789, align 4, !dbg !1052
  %xor315.i790 = xor i32 %xor310.i785, %1260, !dbg !1052
  %1261 = load i32, i32* %t.i416, align 4, !dbg !1052
  %shr316.i791 = lshr i32 %1261, 26, !dbg !1052
  %idxprom318.i792 = zext i32 %shr316.i791 to i64, !dbg !1052
  %arrayidx319.i793 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i792, !dbg !1052
  %1262 = load i32, i32* %arrayidx319.i793, align 4, !dbg !1052
  %xor320.i794 = xor i32 %xor315.i790, %1262, !dbg !1052
  %1263 = load i32, i32* %r.i415, align 4, !dbg !1052
  %xor321.i795 = xor i32 %1263, %xor320.i794, !dbg !1052
  store i32 %xor321.i795, i32* %r.i415, align 4, !dbg !1052
  %1264 = load i32, i32* %r.i415, align 4, !dbg !1053
  %1265 = load i32*, i32** %s.i418, align 8, !dbg !1053
  %arrayidx322.i796 = getelementptr inbounds i32, i32* %1265, i64 12, !dbg !1053
  %1266 = load i32, i32* %arrayidx322.i796, align 4, !dbg !1053
  %xor323.i797 = xor i32 %1264, %1266, !dbg !1053
  store i32 %xor323.i797, i32* %u.i417, align 4, !dbg !1053
  %1267 = load i32, i32* %r.i415, align 4, !dbg !1053
  %1268 = load i32*, i32** %s.i418, align 8, !dbg !1053
  %arrayidx324.i798 = getelementptr inbounds i32, i32* %1268, i64 13, !dbg !1053
  %1269 = load i32, i32* %arrayidx324.i798, align 4, !dbg !1053
  %xor325.i799 = xor i32 %1267, %1269, !dbg !1053
  store i32 %xor325.i799, i32* %t.i416, align 4, !dbg !1053
  %1270 = load i32, i32* %t.i416, align 4, !dbg !800
  %1271 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1270) #5, !dbg !800, !srcloc !130
  store i32 %1271, i32* %ret326.i436, align 4, !dbg !800
  %1272 = load i32, i32* %ret326.i436, align 4, !dbg !800
  store i32 %1272, i32* %tmp327.i437, align 4, !dbg !800
  %1273 = load i32, i32* %tmp327.i437, align 4, !dbg !800
  store i32 %1273, i32* %t.i416, align 4, !dbg !1053
  %1274 = load i32, i32* %u.i417, align 4, !dbg !1053
  %shr328.i800 = lshr i32 %1274, 2, !dbg !1053
  %and329.i801 = and i32 %shr328.i800, 63, !dbg !1053
  %idxprom330.i802 = zext i32 %and329.i801 to i64, !dbg !1053
  %arrayidx331.i803 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i802, !dbg !1053
  %1275 = load i32, i32* %arrayidx331.i803, align 4, !dbg !1053
  %1276 = load i32, i32* %u.i417, align 4, !dbg !1053
  %shr332.i804 = lshr i32 %1276, 10, !dbg !1053
  %and333.i805 = and i32 %shr332.i804, 63, !dbg !1053
  %idxprom334.i806 = zext i32 %and333.i805 to i64, !dbg !1053
  %arrayidx335.i807 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i806, !dbg !1053
  %1277 = load i32, i32* %arrayidx335.i807, align 4, !dbg !1053
  %xor336.i808 = xor i32 %1275, %1277, !dbg !1053
  %1278 = load i32, i32* %u.i417, align 4, !dbg !1053
  %shr337.i809 = lshr i32 %1278, 18, !dbg !1053
  %and338.i810 = and i32 %shr337.i809, 63, !dbg !1053
  %idxprom339.i811 = zext i32 %and338.i810 to i64, !dbg !1053
  %arrayidx340.i812 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i811, !dbg !1053
  %1279 = load i32, i32* %arrayidx340.i812, align 4, !dbg !1053
  %xor341.i813 = xor i32 %xor336.i808, %1279, !dbg !1053
  %1280 = load i32, i32* %u.i417, align 4, !dbg !1053
  %shr342.i814 = lshr i32 %1280, 26, !dbg !1053
  %idxprom344.i815 = zext i32 %shr342.i814 to i64, !dbg !1053
  %arrayidx345.i816 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i815, !dbg !1053
  %1281 = load i32, i32* %arrayidx345.i816, align 4, !dbg !1053
  %xor346.i817 = xor i32 %xor341.i813, %1281, !dbg !1053
  %1282 = load i32, i32* %t.i416, align 4, !dbg !1053
  %shr347.i818 = lshr i32 %1282, 2, !dbg !1053
  %and348.i819 = and i32 %shr347.i818, 63, !dbg !1053
  %idxprom349.i820 = zext i32 %and348.i819 to i64, !dbg !1053
  %arrayidx350.i821 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i820, !dbg !1053
  %1283 = load i32, i32* %arrayidx350.i821, align 4, !dbg !1053
  %xor351.i822 = xor i32 %xor346.i817, %1283, !dbg !1053
  %1284 = load i32, i32* %t.i416, align 4, !dbg !1053
  %shr352.i823 = lshr i32 %1284, 10, !dbg !1053
  %and353.i824 = and i32 %shr352.i823, 63, !dbg !1053
  %idxprom354.i825 = zext i32 %and353.i824 to i64, !dbg !1053
  %arrayidx355.i826 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i825, !dbg !1053
  %1285 = load i32, i32* %arrayidx355.i826, align 4, !dbg !1053
  %xor356.i827 = xor i32 %xor351.i822, %1285, !dbg !1053
  %1286 = load i32, i32* %t.i416, align 4, !dbg !1053
  %shr357.i828 = lshr i32 %1286, 18, !dbg !1053
  %and358.i829 = and i32 %shr357.i828, 63, !dbg !1053
  %idxprom359.i830 = zext i32 %and358.i829 to i64, !dbg !1053
  %arrayidx360.i831 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i830, !dbg !1053
  %1287 = load i32, i32* %arrayidx360.i831, align 4, !dbg !1053
  %xor361.i832 = xor i32 %xor356.i827, %1287, !dbg !1053
  %1288 = load i32, i32* %t.i416, align 4, !dbg !1053
  %shr362.i833 = lshr i32 %1288, 26, !dbg !1053
  %idxprom364.i834 = zext i32 %shr362.i833 to i64, !dbg !1053
  %arrayidx365.i835 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i834, !dbg !1053
  %1289 = load i32, i32* %arrayidx365.i835, align 4, !dbg !1053
  %xor366.i836 = xor i32 %xor361.i832, %1289, !dbg !1053
  %1290 = load i32, i32* %l.i414, align 4, !dbg !1053
  %xor367.i837 = xor i32 %1290, %xor366.i836, !dbg !1053
  store i32 %xor367.i837, i32* %l.i414, align 4, !dbg !1053
  %1291 = load i32, i32* %l.i414, align 4, !dbg !1054
  %1292 = load i32*, i32** %s.i418, align 8, !dbg !1054
  %arrayidx368.i838 = getelementptr inbounds i32, i32* %1292, i64 14, !dbg !1054
  %1293 = load i32, i32* %arrayidx368.i838, align 4, !dbg !1054
  %xor369.i839 = xor i32 %1291, %1293, !dbg !1054
  store i32 %xor369.i839, i32* %u.i417, align 4, !dbg !1054
  %1294 = load i32, i32* %l.i414, align 4, !dbg !1054
  %1295 = load i32*, i32** %s.i418, align 8, !dbg !1054
  %arrayidx370.i840 = getelementptr inbounds i32, i32* %1295, i64 15, !dbg !1054
  %1296 = load i32, i32* %arrayidx370.i840, align 4, !dbg !1054
  %xor371.i841 = xor i32 %1294, %1296, !dbg !1054
  store i32 %xor371.i841, i32* %t.i416, align 4, !dbg !1054
  %1297 = load i32, i32* %t.i416, align 4, !dbg !801
  %1298 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1297) #5, !dbg !801, !srcloc !136
  store i32 %1298, i32* %ret372.i438, align 4, !dbg !801
  %1299 = load i32, i32* %ret372.i438, align 4, !dbg !801
  store i32 %1299, i32* %tmp373.i439, align 4, !dbg !801
  %1300 = load i32, i32* %tmp373.i439, align 4, !dbg !801
  store i32 %1300, i32* %t.i416, align 4, !dbg !1054
  %1301 = load i32, i32* %u.i417, align 4, !dbg !1054
  %shr374.i842 = lshr i32 %1301, 2, !dbg !1054
  %and375.i843 = and i32 %shr374.i842, 63, !dbg !1054
  %idxprom376.i844 = zext i32 %and375.i843 to i64, !dbg !1054
  %arrayidx377.i845 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i844, !dbg !1054
  %1302 = load i32, i32* %arrayidx377.i845, align 4, !dbg !1054
  %1303 = load i32, i32* %u.i417, align 4, !dbg !1054
  %shr378.i846 = lshr i32 %1303, 10, !dbg !1054
  %and379.i847 = and i32 %shr378.i846, 63, !dbg !1054
  %idxprom380.i848 = zext i32 %and379.i847 to i64, !dbg !1054
  %arrayidx381.i849 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i848, !dbg !1054
  %1304 = load i32, i32* %arrayidx381.i849, align 4, !dbg !1054
  %xor382.i850 = xor i32 %1302, %1304, !dbg !1054
  %1305 = load i32, i32* %u.i417, align 4, !dbg !1054
  %shr383.i851 = lshr i32 %1305, 18, !dbg !1054
  %and384.i852 = and i32 %shr383.i851, 63, !dbg !1054
  %idxprom385.i853 = zext i32 %and384.i852 to i64, !dbg !1054
  %arrayidx386.i854 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i853, !dbg !1054
  %1306 = load i32, i32* %arrayidx386.i854, align 4, !dbg !1054
  %xor387.i855 = xor i32 %xor382.i850, %1306, !dbg !1054
  %1307 = load i32, i32* %u.i417, align 4, !dbg !1054
  %shr388.i856 = lshr i32 %1307, 26, !dbg !1054
  %idxprom390.i857 = zext i32 %shr388.i856 to i64, !dbg !1054
  %arrayidx391.i858 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i857, !dbg !1054
  %1308 = load i32, i32* %arrayidx391.i858, align 4, !dbg !1054
  %xor392.i859 = xor i32 %xor387.i855, %1308, !dbg !1054
  %1309 = load i32, i32* %t.i416, align 4, !dbg !1054
  %shr393.i860 = lshr i32 %1309, 2, !dbg !1054
  %and394.i861 = and i32 %shr393.i860, 63, !dbg !1054
  %idxprom395.i862 = zext i32 %and394.i861 to i64, !dbg !1054
  %arrayidx396.i863 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i862, !dbg !1054
  %1310 = load i32, i32* %arrayidx396.i863, align 4, !dbg !1054
  %xor397.i864 = xor i32 %xor392.i859, %1310, !dbg !1054
  %1311 = load i32, i32* %t.i416, align 4, !dbg !1054
  %shr398.i865 = lshr i32 %1311, 10, !dbg !1054
  %and399.i866 = and i32 %shr398.i865, 63, !dbg !1054
  %idxprom400.i867 = zext i32 %and399.i866 to i64, !dbg !1054
  %arrayidx401.i868 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i867, !dbg !1054
  %1312 = load i32, i32* %arrayidx401.i868, align 4, !dbg !1054
  %xor402.i869 = xor i32 %xor397.i864, %1312, !dbg !1054
  %1313 = load i32, i32* %t.i416, align 4, !dbg !1054
  %shr403.i870 = lshr i32 %1313, 18, !dbg !1054
  %and404.i871 = and i32 %shr403.i870, 63, !dbg !1054
  %idxprom405.i872 = zext i32 %and404.i871 to i64, !dbg !1054
  %arrayidx406.i873 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i872, !dbg !1054
  %1314 = load i32, i32* %arrayidx406.i873, align 4, !dbg !1054
  %xor407.i874 = xor i32 %xor402.i869, %1314, !dbg !1054
  %1315 = load i32, i32* %t.i416, align 4, !dbg !1054
  %shr408.i875 = lshr i32 %1315, 26, !dbg !1054
  %idxprom410.i876 = zext i32 %shr408.i875 to i64, !dbg !1054
  %arrayidx411.i877 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i876, !dbg !1054
  %1316 = load i32, i32* %arrayidx411.i877, align 4, !dbg !1054
  %xor412.i878 = xor i32 %xor407.i874, %1316, !dbg !1054
  %1317 = load i32, i32* %r.i415, align 4, !dbg !1054
  %xor413.i879 = xor i32 %1317, %xor412.i878, !dbg !1054
  store i32 %xor413.i879, i32* %r.i415, align 4, !dbg !1054
  %1318 = load i32, i32* %r.i415, align 4, !dbg !1055
  %1319 = load i32*, i32** %s.i418, align 8, !dbg !1055
  %arrayidx414.i880 = getelementptr inbounds i32, i32* %1319, i64 16, !dbg !1055
  %1320 = load i32, i32* %arrayidx414.i880, align 4, !dbg !1055
  %xor415.i881 = xor i32 %1318, %1320, !dbg !1055
  store i32 %xor415.i881, i32* %u.i417, align 4, !dbg !1055
  %1321 = load i32, i32* %r.i415, align 4, !dbg !1055
  %1322 = load i32*, i32** %s.i418, align 8, !dbg !1055
  %arrayidx416.i882 = getelementptr inbounds i32, i32* %1322, i64 17, !dbg !1055
  %1323 = load i32, i32* %arrayidx416.i882, align 4, !dbg !1055
  %xor417.i883 = xor i32 %1321, %1323, !dbg !1055
  store i32 %xor417.i883, i32* %t.i416, align 4, !dbg !1055
  %1324 = load i32, i32* %t.i416, align 4, !dbg !802
  %1325 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1324) #5, !dbg !802, !srcloc !142
  store i32 %1325, i32* %ret418.i440, align 4, !dbg !802
  %1326 = load i32, i32* %ret418.i440, align 4, !dbg !802
  store i32 %1326, i32* %tmp419.i441, align 4, !dbg !802
  %1327 = load i32, i32* %tmp419.i441, align 4, !dbg !802
  store i32 %1327, i32* %t.i416, align 4, !dbg !1055
  %1328 = load i32, i32* %u.i417, align 4, !dbg !1055
  %shr420.i884 = lshr i32 %1328, 2, !dbg !1055
  %and421.i885 = and i32 %shr420.i884, 63, !dbg !1055
  %idxprom422.i886 = zext i32 %and421.i885 to i64, !dbg !1055
  %arrayidx423.i887 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i886, !dbg !1055
  %1329 = load i32, i32* %arrayidx423.i887, align 4, !dbg !1055
  %1330 = load i32, i32* %u.i417, align 4, !dbg !1055
  %shr424.i888 = lshr i32 %1330, 10, !dbg !1055
  %and425.i889 = and i32 %shr424.i888, 63, !dbg !1055
  %idxprom426.i890 = zext i32 %and425.i889 to i64, !dbg !1055
  %arrayidx427.i891 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i890, !dbg !1055
  %1331 = load i32, i32* %arrayidx427.i891, align 4, !dbg !1055
  %xor428.i892 = xor i32 %1329, %1331, !dbg !1055
  %1332 = load i32, i32* %u.i417, align 4, !dbg !1055
  %shr429.i893 = lshr i32 %1332, 18, !dbg !1055
  %and430.i894 = and i32 %shr429.i893, 63, !dbg !1055
  %idxprom431.i895 = zext i32 %and430.i894 to i64, !dbg !1055
  %arrayidx432.i896 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i895, !dbg !1055
  %1333 = load i32, i32* %arrayidx432.i896, align 4, !dbg !1055
  %xor433.i897 = xor i32 %xor428.i892, %1333, !dbg !1055
  %1334 = load i32, i32* %u.i417, align 4, !dbg !1055
  %shr434.i898 = lshr i32 %1334, 26, !dbg !1055
  %idxprom436.i899 = zext i32 %shr434.i898 to i64, !dbg !1055
  %arrayidx437.i900 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i899, !dbg !1055
  %1335 = load i32, i32* %arrayidx437.i900, align 4, !dbg !1055
  %xor438.i901 = xor i32 %xor433.i897, %1335, !dbg !1055
  %1336 = load i32, i32* %t.i416, align 4, !dbg !1055
  %shr439.i902 = lshr i32 %1336, 2, !dbg !1055
  %and440.i903 = and i32 %shr439.i902, 63, !dbg !1055
  %idxprom441.i904 = zext i32 %and440.i903 to i64, !dbg !1055
  %arrayidx442.i905 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i904, !dbg !1055
  %1337 = load i32, i32* %arrayidx442.i905, align 4, !dbg !1055
  %xor443.i906 = xor i32 %xor438.i901, %1337, !dbg !1055
  %1338 = load i32, i32* %t.i416, align 4, !dbg !1055
  %shr444.i907 = lshr i32 %1338, 10, !dbg !1055
  %and445.i908 = and i32 %shr444.i907, 63, !dbg !1055
  %idxprom446.i909 = zext i32 %and445.i908 to i64, !dbg !1055
  %arrayidx447.i910 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i909, !dbg !1055
  %1339 = load i32, i32* %arrayidx447.i910, align 4, !dbg !1055
  %xor448.i911 = xor i32 %xor443.i906, %1339, !dbg !1055
  %1340 = load i32, i32* %t.i416, align 4, !dbg !1055
  %shr449.i912 = lshr i32 %1340, 18, !dbg !1055
  %and450.i913 = and i32 %shr449.i912, 63, !dbg !1055
  %idxprom451.i914 = zext i32 %and450.i913 to i64, !dbg !1055
  %arrayidx452.i915 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i914, !dbg !1055
  %1341 = load i32, i32* %arrayidx452.i915, align 4, !dbg !1055
  %xor453.i916 = xor i32 %xor448.i911, %1341, !dbg !1055
  %1342 = load i32, i32* %t.i416, align 4, !dbg !1055
  %shr454.i917 = lshr i32 %1342, 26, !dbg !1055
  %idxprom456.i918 = zext i32 %shr454.i917 to i64, !dbg !1055
  %arrayidx457.i919 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i918, !dbg !1055
  %1343 = load i32, i32* %arrayidx457.i919, align 4, !dbg !1055
  %xor458.i920 = xor i32 %xor453.i916, %1343, !dbg !1055
  %1344 = load i32, i32* %l.i414, align 4, !dbg !1055
  %xor459.i921 = xor i32 %1344, %xor458.i920, !dbg !1055
  store i32 %xor459.i921, i32* %l.i414, align 4, !dbg !1055
  %1345 = load i32, i32* %l.i414, align 4, !dbg !1056
  %1346 = load i32*, i32** %s.i418, align 8, !dbg !1056
  %arrayidx460.i922 = getelementptr inbounds i32, i32* %1346, i64 18, !dbg !1056
  %1347 = load i32, i32* %arrayidx460.i922, align 4, !dbg !1056
  %xor461.i923 = xor i32 %1345, %1347, !dbg !1056
  store i32 %xor461.i923, i32* %u.i417, align 4, !dbg !1056
  %1348 = load i32, i32* %l.i414, align 4, !dbg !1056
  %1349 = load i32*, i32** %s.i418, align 8, !dbg !1056
  %arrayidx462.i924 = getelementptr inbounds i32, i32* %1349, i64 19, !dbg !1056
  %1350 = load i32, i32* %arrayidx462.i924, align 4, !dbg !1056
  %xor463.i925 = xor i32 %1348, %1350, !dbg !1056
  store i32 %xor463.i925, i32* %t.i416, align 4, !dbg !1056
  %1351 = load i32, i32* %t.i416, align 4, !dbg !803
  %1352 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1351) #5, !dbg !803, !srcloc !148
  store i32 %1352, i32* %ret464.i442, align 4, !dbg !803
  %1353 = load i32, i32* %ret464.i442, align 4, !dbg !803
  store i32 %1353, i32* %tmp465.i443, align 4, !dbg !803
  %1354 = load i32, i32* %tmp465.i443, align 4, !dbg !803
  store i32 %1354, i32* %t.i416, align 4, !dbg !1056
  %1355 = load i32, i32* %u.i417, align 4, !dbg !1056
  %shr466.i926 = lshr i32 %1355, 2, !dbg !1056
  %and467.i927 = and i32 %shr466.i926, 63, !dbg !1056
  %idxprom468.i928 = zext i32 %and467.i927 to i64, !dbg !1056
  %arrayidx469.i929 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i928, !dbg !1056
  %1356 = load i32, i32* %arrayidx469.i929, align 4, !dbg !1056
  %1357 = load i32, i32* %u.i417, align 4, !dbg !1056
  %shr470.i930 = lshr i32 %1357, 10, !dbg !1056
  %and471.i931 = and i32 %shr470.i930, 63, !dbg !1056
  %idxprom472.i932 = zext i32 %and471.i931 to i64, !dbg !1056
  %arrayidx473.i933 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i932, !dbg !1056
  %1358 = load i32, i32* %arrayidx473.i933, align 4, !dbg !1056
  %xor474.i934 = xor i32 %1356, %1358, !dbg !1056
  %1359 = load i32, i32* %u.i417, align 4, !dbg !1056
  %shr475.i935 = lshr i32 %1359, 18, !dbg !1056
  %and476.i936 = and i32 %shr475.i935, 63, !dbg !1056
  %idxprom477.i937 = zext i32 %and476.i936 to i64, !dbg !1056
  %arrayidx478.i938 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i937, !dbg !1056
  %1360 = load i32, i32* %arrayidx478.i938, align 4, !dbg !1056
  %xor479.i939 = xor i32 %xor474.i934, %1360, !dbg !1056
  %1361 = load i32, i32* %u.i417, align 4, !dbg !1056
  %shr480.i940 = lshr i32 %1361, 26, !dbg !1056
  %idxprom482.i941 = zext i32 %shr480.i940 to i64, !dbg !1056
  %arrayidx483.i942 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i941, !dbg !1056
  %1362 = load i32, i32* %arrayidx483.i942, align 4, !dbg !1056
  %xor484.i943 = xor i32 %xor479.i939, %1362, !dbg !1056
  %1363 = load i32, i32* %t.i416, align 4, !dbg !1056
  %shr485.i944 = lshr i32 %1363, 2, !dbg !1056
  %and486.i945 = and i32 %shr485.i944, 63, !dbg !1056
  %idxprom487.i946 = zext i32 %and486.i945 to i64, !dbg !1056
  %arrayidx488.i947 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i946, !dbg !1056
  %1364 = load i32, i32* %arrayidx488.i947, align 4, !dbg !1056
  %xor489.i948 = xor i32 %xor484.i943, %1364, !dbg !1056
  %1365 = load i32, i32* %t.i416, align 4, !dbg !1056
  %shr490.i949 = lshr i32 %1365, 10, !dbg !1056
  %and491.i950 = and i32 %shr490.i949, 63, !dbg !1056
  %idxprom492.i951 = zext i32 %and491.i950 to i64, !dbg !1056
  %arrayidx493.i952 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i951, !dbg !1056
  %1366 = load i32, i32* %arrayidx493.i952, align 4, !dbg !1056
  %xor494.i953 = xor i32 %xor489.i948, %1366, !dbg !1056
  %1367 = load i32, i32* %t.i416, align 4, !dbg !1056
  %shr495.i954 = lshr i32 %1367, 18, !dbg !1056
  %and496.i955 = and i32 %shr495.i954, 63, !dbg !1056
  %idxprom497.i956 = zext i32 %and496.i955 to i64, !dbg !1056
  %arrayidx498.i957 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i956, !dbg !1056
  %1368 = load i32, i32* %arrayidx498.i957, align 4, !dbg !1056
  %xor499.i958 = xor i32 %xor494.i953, %1368, !dbg !1056
  %1369 = load i32, i32* %t.i416, align 4, !dbg !1056
  %shr500.i959 = lshr i32 %1369, 26, !dbg !1056
  %idxprom502.i960 = zext i32 %shr500.i959 to i64, !dbg !1056
  %arrayidx503.i961 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i960, !dbg !1056
  %1370 = load i32, i32* %arrayidx503.i961, align 4, !dbg !1056
  %xor504.i962 = xor i32 %xor499.i958, %1370, !dbg !1056
  %1371 = load i32, i32* %r.i415, align 4, !dbg !1056
  %xor505.i963 = xor i32 %1371, %xor504.i962, !dbg !1056
  store i32 %xor505.i963, i32* %r.i415, align 4, !dbg !1056
  %1372 = load i32, i32* %r.i415, align 4, !dbg !1057
  %1373 = load i32*, i32** %s.i418, align 8, !dbg !1057
  %arrayidx506.i964 = getelementptr inbounds i32, i32* %1373, i64 20, !dbg !1057
  %1374 = load i32, i32* %arrayidx506.i964, align 4, !dbg !1057
  %xor507.i965 = xor i32 %1372, %1374, !dbg !1057
  store i32 %xor507.i965, i32* %u.i417, align 4, !dbg !1057
  %1375 = load i32, i32* %r.i415, align 4, !dbg !1057
  %1376 = load i32*, i32** %s.i418, align 8, !dbg !1057
  %arrayidx508.i966 = getelementptr inbounds i32, i32* %1376, i64 21, !dbg !1057
  %1377 = load i32, i32* %arrayidx508.i966, align 4, !dbg !1057
  %xor509.i967 = xor i32 %1375, %1377, !dbg !1057
  store i32 %xor509.i967, i32* %t.i416, align 4, !dbg !1057
  %1378 = load i32, i32* %t.i416, align 4, !dbg !804
  %1379 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1378) #5, !dbg !804, !srcloc !154
  store i32 %1379, i32* %ret510.i444, align 4, !dbg !804
  %1380 = load i32, i32* %ret510.i444, align 4, !dbg !804
  store i32 %1380, i32* %tmp511.i445, align 4, !dbg !804
  %1381 = load i32, i32* %tmp511.i445, align 4, !dbg !804
  store i32 %1381, i32* %t.i416, align 4, !dbg !1057
  %1382 = load i32, i32* %u.i417, align 4, !dbg !1057
  %shr512.i968 = lshr i32 %1382, 2, !dbg !1057
  %and513.i969 = and i32 %shr512.i968, 63, !dbg !1057
  %idxprom514.i970 = zext i32 %and513.i969 to i64, !dbg !1057
  %arrayidx515.i971 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i970, !dbg !1057
  %1383 = load i32, i32* %arrayidx515.i971, align 4, !dbg !1057
  %1384 = load i32, i32* %u.i417, align 4, !dbg !1057
  %shr516.i972 = lshr i32 %1384, 10, !dbg !1057
  %and517.i973 = and i32 %shr516.i972, 63, !dbg !1057
  %idxprom518.i974 = zext i32 %and517.i973 to i64, !dbg !1057
  %arrayidx519.i975 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i974, !dbg !1057
  %1385 = load i32, i32* %arrayidx519.i975, align 4, !dbg !1057
  %xor520.i976 = xor i32 %1383, %1385, !dbg !1057
  %1386 = load i32, i32* %u.i417, align 4, !dbg !1057
  %shr521.i977 = lshr i32 %1386, 18, !dbg !1057
  %and522.i978 = and i32 %shr521.i977, 63, !dbg !1057
  %idxprom523.i979 = zext i32 %and522.i978 to i64, !dbg !1057
  %arrayidx524.i980 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i979, !dbg !1057
  %1387 = load i32, i32* %arrayidx524.i980, align 4, !dbg !1057
  %xor525.i981 = xor i32 %xor520.i976, %1387, !dbg !1057
  %1388 = load i32, i32* %u.i417, align 4, !dbg !1057
  %shr526.i982 = lshr i32 %1388, 26, !dbg !1057
  %idxprom528.i983 = zext i32 %shr526.i982 to i64, !dbg !1057
  %arrayidx529.i984 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i983, !dbg !1057
  %1389 = load i32, i32* %arrayidx529.i984, align 4, !dbg !1057
  %xor530.i985 = xor i32 %xor525.i981, %1389, !dbg !1057
  %1390 = load i32, i32* %t.i416, align 4, !dbg !1057
  %shr531.i986 = lshr i32 %1390, 2, !dbg !1057
  %and532.i987 = and i32 %shr531.i986, 63, !dbg !1057
  %idxprom533.i988 = zext i32 %and532.i987 to i64, !dbg !1057
  %arrayidx534.i989 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i988, !dbg !1057
  %1391 = load i32, i32* %arrayidx534.i989, align 4, !dbg !1057
  %xor535.i990 = xor i32 %xor530.i985, %1391, !dbg !1057
  %1392 = load i32, i32* %t.i416, align 4, !dbg !1057
  %shr536.i991 = lshr i32 %1392, 10, !dbg !1057
  %and537.i992 = and i32 %shr536.i991, 63, !dbg !1057
  %idxprom538.i993 = zext i32 %and537.i992 to i64, !dbg !1057
  %arrayidx539.i994 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i993, !dbg !1057
  %1393 = load i32, i32* %arrayidx539.i994, align 4, !dbg !1057
  %xor540.i995 = xor i32 %xor535.i990, %1393, !dbg !1057
  %1394 = load i32, i32* %t.i416, align 4, !dbg !1057
  %shr541.i996 = lshr i32 %1394, 18, !dbg !1057
  %and542.i997 = and i32 %shr541.i996, 63, !dbg !1057
  %idxprom543.i998 = zext i32 %and542.i997 to i64, !dbg !1057
  %arrayidx544.i999 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i998, !dbg !1057
  %1395 = load i32, i32* %arrayidx544.i999, align 4, !dbg !1057
  %xor545.i1000 = xor i32 %xor540.i995, %1395, !dbg !1057
  %1396 = load i32, i32* %t.i416, align 4, !dbg !1057
  %shr546.i1001 = lshr i32 %1396, 26, !dbg !1057
  %idxprom548.i1002 = zext i32 %shr546.i1001 to i64, !dbg !1057
  %arrayidx549.i1003 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i1002, !dbg !1057
  %1397 = load i32, i32* %arrayidx549.i1003, align 4, !dbg !1057
  %xor550.i1004 = xor i32 %xor545.i1000, %1397, !dbg !1057
  %1398 = load i32, i32* %l.i414, align 4, !dbg !1057
  %xor551.i1005 = xor i32 %1398, %xor550.i1004, !dbg !1057
  store i32 %xor551.i1005, i32* %l.i414, align 4, !dbg !1057
  %1399 = load i32, i32* %l.i414, align 4, !dbg !1058
  %1400 = load i32*, i32** %s.i418, align 8, !dbg !1058
  %arrayidx552.i1006 = getelementptr inbounds i32, i32* %1400, i64 22, !dbg !1058
  %1401 = load i32, i32* %arrayidx552.i1006, align 4, !dbg !1058
  %xor553.i1007 = xor i32 %1399, %1401, !dbg !1058
  store i32 %xor553.i1007, i32* %u.i417, align 4, !dbg !1058
  %1402 = load i32, i32* %l.i414, align 4, !dbg !1058
  %1403 = load i32*, i32** %s.i418, align 8, !dbg !1058
  %arrayidx554.i1008 = getelementptr inbounds i32, i32* %1403, i64 23, !dbg !1058
  %1404 = load i32, i32* %arrayidx554.i1008, align 4, !dbg !1058
  %xor555.i1009 = xor i32 %1402, %1404, !dbg !1058
  store i32 %xor555.i1009, i32* %t.i416, align 4, !dbg !1058
  %1405 = load i32, i32* %t.i416, align 4, !dbg !805
  %1406 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1405) #5, !dbg !805, !srcloc !160
  store i32 %1406, i32* %ret556.i446, align 4, !dbg !805
  %1407 = load i32, i32* %ret556.i446, align 4, !dbg !805
  store i32 %1407, i32* %tmp557.i447, align 4, !dbg !805
  %1408 = load i32, i32* %tmp557.i447, align 4, !dbg !805
  store i32 %1408, i32* %t.i416, align 4, !dbg !1058
  %1409 = load i32, i32* %u.i417, align 4, !dbg !1058
  %shr558.i1010 = lshr i32 %1409, 2, !dbg !1058
  %and559.i1011 = and i32 %shr558.i1010, 63, !dbg !1058
  %idxprom560.i1012 = zext i32 %and559.i1011 to i64, !dbg !1058
  %arrayidx561.i1013 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i1012, !dbg !1058
  %1410 = load i32, i32* %arrayidx561.i1013, align 4, !dbg !1058
  %1411 = load i32, i32* %u.i417, align 4, !dbg !1058
  %shr562.i1014 = lshr i32 %1411, 10, !dbg !1058
  %and563.i1015 = and i32 %shr562.i1014, 63, !dbg !1058
  %idxprom564.i1016 = zext i32 %and563.i1015 to i64, !dbg !1058
  %arrayidx565.i1017 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i1016, !dbg !1058
  %1412 = load i32, i32* %arrayidx565.i1017, align 4, !dbg !1058
  %xor566.i1018 = xor i32 %1410, %1412, !dbg !1058
  %1413 = load i32, i32* %u.i417, align 4, !dbg !1058
  %shr567.i1019 = lshr i32 %1413, 18, !dbg !1058
  %and568.i1020 = and i32 %shr567.i1019, 63, !dbg !1058
  %idxprom569.i1021 = zext i32 %and568.i1020 to i64, !dbg !1058
  %arrayidx570.i1022 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i1021, !dbg !1058
  %1414 = load i32, i32* %arrayidx570.i1022, align 4, !dbg !1058
  %xor571.i1023 = xor i32 %xor566.i1018, %1414, !dbg !1058
  %1415 = load i32, i32* %u.i417, align 4, !dbg !1058
  %shr572.i1024 = lshr i32 %1415, 26, !dbg !1058
  %idxprom574.i1025 = zext i32 %shr572.i1024 to i64, !dbg !1058
  %arrayidx575.i1026 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i1025, !dbg !1058
  %1416 = load i32, i32* %arrayidx575.i1026, align 4, !dbg !1058
  %xor576.i1027 = xor i32 %xor571.i1023, %1416, !dbg !1058
  %1417 = load i32, i32* %t.i416, align 4, !dbg !1058
  %shr577.i1028 = lshr i32 %1417, 2, !dbg !1058
  %and578.i1029 = and i32 %shr577.i1028, 63, !dbg !1058
  %idxprom579.i1030 = zext i32 %and578.i1029 to i64, !dbg !1058
  %arrayidx580.i1031 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i1030, !dbg !1058
  %1418 = load i32, i32* %arrayidx580.i1031, align 4, !dbg !1058
  %xor581.i1032 = xor i32 %xor576.i1027, %1418, !dbg !1058
  %1419 = load i32, i32* %t.i416, align 4, !dbg !1058
  %shr582.i1033 = lshr i32 %1419, 10, !dbg !1058
  %and583.i1034 = and i32 %shr582.i1033, 63, !dbg !1058
  %idxprom584.i1035 = zext i32 %and583.i1034 to i64, !dbg !1058
  %arrayidx585.i1036 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i1035, !dbg !1058
  %1420 = load i32, i32* %arrayidx585.i1036, align 4, !dbg !1058
  %xor586.i1037 = xor i32 %xor581.i1032, %1420, !dbg !1058
  %1421 = load i32, i32* %t.i416, align 4, !dbg !1058
  %shr587.i1038 = lshr i32 %1421, 18, !dbg !1058
  %and588.i1039 = and i32 %shr587.i1038, 63, !dbg !1058
  %idxprom589.i1040 = zext i32 %and588.i1039 to i64, !dbg !1058
  %arrayidx590.i1041 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i1040, !dbg !1058
  %1422 = load i32, i32* %arrayidx590.i1041, align 4, !dbg !1058
  %xor591.i1042 = xor i32 %xor586.i1037, %1422, !dbg !1058
  %1423 = load i32, i32* %t.i416, align 4, !dbg !1058
  %shr592.i1043 = lshr i32 %1423, 26, !dbg !1058
  %idxprom594.i1044 = zext i32 %shr592.i1043 to i64, !dbg !1058
  %arrayidx595.i1045 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i1044, !dbg !1058
  %1424 = load i32, i32* %arrayidx595.i1045, align 4, !dbg !1058
  %xor596.i1046 = xor i32 %xor591.i1042, %1424, !dbg !1058
  %1425 = load i32, i32* %r.i415, align 4, !dbg !1058
  %xor597.i1047 = xor i32 %1425, %xor596.i1046, !dbg !1058
  store i32 %xor597.i1047, i32* %r.i415, align 4, !dbg !1058
  %1426 = load i32, i32* %r.i415, align 4, !dbg !1059
  %1427 = load i32*, i32** %s.i418, align 8, !dbg !1059
  %arrayidx598.i1048 = getelementptr inbounds i32, i32* %1427, i64 24, !dbg !1059
  %1428 = load i32, i32* %arrayidx598.i1048, align 4, !dbg !1059
  %xor599.i1049 = xor i32 %1426, %1428, !dbg !1059
  store i32 %xor599.i1049, i32* %u.i417, align 4, !dbg !1059
  %1429 = load i32, i32* %r.i415, align 4, !dbg !1059
  %1430 = load i32*, i32** %s.i418, align 8, !dbg !1059
  %arrayidx600.i1050 = getelementptr inbounds i32, i32* %1430, i64 25, !dbg !1059
  %1431 = load i32, i32* %arrayidx600.i1050, align 4, !dbg !1059
  %xor601.i1051 = xor i32 %1429, %1431, !dbg !1059
  store i32 %xor601.i1051, i32* %t.i416, align 4, !dbg !1059
  %1432 = load i32, i32* %t.i416, align 4, !dbg !806
  %1433 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1432) #5, !dbg !806, !srcloc !166
  store i32 %1433, i32* %ret602.i448, align 4, !dbg !806
  %1434 = load i32, i32* %ret602.i448, align 4, !dbg !806
  store i32 %1434, i32* %tmp603.i449, align 4, !dbg !806
  %1435 = load i32, i32* %tmp603.i449, align 4, !dbg !806
  store i32 %1435, i32* %t.i416, align 4, !dbg !1059
  %1436 = load i32, i32* %u.i417, align 4, !dbg !1059
  %shr604.i1052 = lshr i32 %1436, 2, !dbg !1059
  %and605.i1053 = and i32 %shr604.i1052, 63, !dbg !1059
  %idxprom606.i1054 = zext i32 %and605.i1053 to i64, !dbg !1059
  %arrayidx607.i1055 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i1054, !dbg !1059
  %1437 = load i32, i32* %arrayidx607.i1055, align 4, !dbg !1059
  %1438 = load i32, i32* %u.i417, align 4, !dbg !1059
  %shr608.i1056 = lshr i32 %1438, 10, !dbg !1059
  %and609.i1057 = and i32 %shr608.i1056, 63, !dbg !1059
  %idxprom610.i1058 = zext i32 %and609.i1057 to i64, !dbg !1059
  %arrayidx611.i1059 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i1058, !dbg !1059
  %1439 = load i32, i32* %arrayidx611.i1059, align 4, !dbg !1059
  %xor612.i1060 = xor i32 %1437, %1439, !dbg !1059
  %1440 = load i32, i32* %u.i417, align 4, !dbg !1059
  %shr613.i1061 = lshr i32 %1440, 18, !dbg !1059
  %and614.i1062 = and i32 %shr613.i1061, 63, !dbg !1059
  %idxprom615.i1063 = zext i32 %and614.i1062 to i64, !dbg !1059
  %arrayidx616.i1064 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i1063, !dbg !1059
  %1441 = load i32, i32* %arrayidx616.i1064, align 4, !dbg !1059
  %xor617.i1065 = xor i32 %xor612.i1060, %1441, !dbg !1059
  %1442 = load i32, i32* %u.i417, align 4, !dbg !1059
  %shr618.i1066 = lshr i32 %1442, 26, !dbg !1059
  %idxprom620.i1067 = zext i32 %shr618.i1066 to i64, !dbg !1059
  %arrayidx621.i1068 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i1067, !dbg !1059
  %1443 = load i32, i32* %arrayidx621.i1068, align 4, !dbg !1059
  %xor622.i1069 = xor i32 %xor617.i1065, %1443, !dbg !1059
  %1444 = load i32, i32* %t.i416, align 4, !dbg !1059
  %shr623.i1070 = lshr i32 %1444, 2, !dbg !1059
  %and624.i1071 = and i32 %shr623.i1070, 63, !dbg !1059
  %idxprom625.i1072 = zext i32 %and624.i1071 to i64, !dbg !1059
  %arrayidx626.i1073 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i1072, !dbg !1059
  %1445 = load i32, i32* %arrayidx626.i1073, align 4, !dbg !1059
  %xor627.i1074 = xor i32 %xor622.i1069, %1445, !dbg !1059
  %1446 = load i32, i32* %t.i416, align 4, !dbg !1059
  %shr628.i1075 = lshr i32 %1446, 10, !dbg !1059
  %and629.i1076 = and i32 %shr628.i1075, 63, !dbg !1059
  %idxprom630.i1077 = zext i32 %and629.i1076 to i64, !dbg !1059
  %arrayidx631.i1078 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i1077, !dbg !1059
  %1447 = load i32, i32* %arrayidx631.i1078, align 4, !dbg !1059
  %xor632.i1079 = xor i32 %xor627.i1074, %1447, !dbg !1059
  %1448 = load i32, i32* %t.i416, align 4, !dbg !1059
  %shr633.i1080 = lshr i32 %1448, 18, !dbg !1059
  %and634.i1081 = and i32 %shr633.i1080, 63, !dbg !1059
  %idxprom635.i1082 = zext i32 %and634.i1081 to i64, !dbg !1059
  %arrayidx636.i1083 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i1082, !dbg !1059
  %1449 = load i32, i32* %arrayidx636.i1083, align 4, !dbg !1059
  %xor637.i1084 = xor i32 %xor632.i1079, %1449, !dbg !1059
  %1450 = load i32, i32* %t.i416, align 4, !dbg !1059
  %shr638.i1085 = lshr i32 %1450, 26, !dbg !1059
  %idxprom640.i1086 = zext i32 %shr638.i1085 to i64, !dbg !1059
  %arrayidx641.i1087 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i1086, !dbg !1059
  %1451 = load i32, i32* %arrayidx641.i1087, align 4, !dbg !1059
  %xor642.i1088 = xor i32 %xor637.i1084, %1451, !dbg !1059
  %1452 = load i32, i32* %l.i414, align 4, !dbg !1059
  %xor643.i1089 = xor i32 %1452, %xor642.i1088, !dbg !1059
  store i32 %xor643.i1089, i32* %l.i414, align 4, !dbg !1059
  %1453 = load i32, i32* %l.i414, align 4, !dbg !1060
  %1454 = load i32*, i32** %s.i418, align 8, !dbg !1060
  %arrayidx644.i1090 = getelementptr inbounds i32, i32* %1454, i64 26, !dbg !1060
  %1455 = load i32, i32* %arrayidx644.i1090, align 4, !dbg !1060
  %xor645.i1091 = xor i32 %1453, %1455, !dbg !1060
  store i32 %xor645.i1091, i32* %u.i417, align 4, !dbg !1060
  %1456 = load i32, i32* %l.i414, align 4, !dbg !1060
  %1457 = load i32*, i32** %s.i418, align 8, !dbg !1060
  %arrayidx646.i1092 = getelementptr inbounds i32, i32* %1457, i64 27, !dbg !1060
  %1458 = load i32, i32* %arrayidx646.i1092, align 4, !dbg !1060
  %xor647.i1093 = xor i32 %1456, %1458, !dbg !1060
  store i32 %xor647.i1093, i32* %t.i416, align 4, !dbg !1060
  %1459 = load i32, i32* %t.i416, align 4, !dbg !807
  %1460 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1459) #5, !dbg !807, !srcloc !172
  store i32 %1460, i32* %ret648.i450, align 4, !dbg !807
  %1461 = load i32, i32* %ret648.i450, align 4, !dbg !807
  store i32 %1461, i32* %tmp649.i451, align 4, !dbg !807
  %1462 = load i32, i32* %tmp649.i451, align 4, !dbg !807
  store i32 %1462, i32* %t.i416, align 4, !dbg !1060
  %1463 = load i32, i32* %u.i417, align 4, !dbg !1060
  %shr650.i1094 = lshr i32 %1463, 2, !dbg !1060
  %and651.i1095 = and i32 %shr650.i1094, 63, !dbg !1060
  %idxprom652.i1096 = zext i32 %and651.i1095 to i64, !dbg !1060
  %arrayidx653.i1097 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i1096, !dbg !1060
  %1464 = load i32, i32* %arrayidx653.i1097, align 4, !dbg !1060
  %1465 = load i32, i32* %u.i417, align 4, !dbg !1060
  %shr654.i1098 = lshr i32 %1465, 10, !dbg !1060
  %and655.i1099 = and i32 %shr654.i1098, 63, !dbg !1060
  %idxprom656.i1100 = zext i32 %and655.i1099 to i64, !dbg !1060
  %arrayidx657.i1101 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i1100, !dbg !1060
  %1466 = load i32, i32* %arrayidx657.i1101, align 4, !dbg !1060
  %xor658.i1102 = xor i32 %1464, %1466, !dbg !1060
  %1467 = load i32, i32* %u.i417, align 4, !dbg !1060
  %shr659.i1103 = lshr i32 %1467, 18, !dbg !1060
  %and660.i1104 = and i32 %shr659.i1103, 63, !dbg !1060
  %idxprom661.i1105 = zext i32 %and660.i1104 to i64, !dbg !1060
  %arrayidx662.i1106 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i1105, !dbg !1060
  %1468 = load i32, i32* %arrayidx662.i1106, align 4, !dbg !1060
  %xor663.i1107 = xor i32 %xor658.i1102, %1468, !dbg !1060
  %1469 = load i32, i32* %u.i417, align 4, !dbg !1060
  %shr664.i1108 = lshr i32 %1469, 26, !dbg !1060
  %idxprom666.i1109 = zext i32 %shr664.i1108 to i64, !dbg !1060
  %arrayidx667.i1110 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i1109, !dbg !1060
  %1470 = load i32, i32* %arrayidx667.i1110, align 4, !dbg !1060
  %xor668.i1111 = xor i32 %xor663.i1107, %1470, !dbg !1060
  %1471 = load i32, i32* %t.i416, align 4, !dbg !1060
  %shr669.i1112 = lshr i32 %1471, 2, !dbg !1060
  %and670.i1113 = and i32 %shr669.i1112, 63, !dbg !1060
  %idxprom671.i1114 = zext i32 %and670.i1113 to i64, !dbg !1060
  %arrayidx672.i1115 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i1114, !dbg !1060
  %1472 = load i32, i32* %arrayidx672.i1115, align 4, !dbg !1060
  %xor673.i1116 = xor i32 %xor668.i1111, %1472, !dbg !1060
  %1473 = load i32, i32* %t.i416, align 4, !dbg !1060
  %shr674.i1117 = lshr i32 %1473, 10, !dbg !1060
  %and675.i1118 = and i32 %shr674.i1117, 63, !dbg !1060
  %idxprom676.i1119 = zext i32 %and675.i1118 to i64, !dbg !1060
  %arrayidx677.i1120 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i1119, !dbg !1060
  %1474 = load i32, i32* %arrayidx677.i1120, align 4, !dbg !1060
  %xor678.i1121 = xor i32 %xor673.i1116, %1474, !dbg !1060
  %1475 = load i32, i32* %t.i416, align 4, !dbg !1060
  %shr679.i1122 = lshr i32 %1475, 18, !dbg !1060
  %and680.i1123 = and i32 %shr679.i1122, 63, !dbg !1060
  %idxprom681.i1124 = zext i32 %and680.i1123 to i64, !dbg !1060
  %arrayidx682.i1125 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i1124, !dbg !1060
  %1476 = load i32, i32* %arrayidx682.i1125, align 4, !dbg !1060
  %xor683.i1126 = xor i32 %xor678.i1121, %1476, !dbg !1060
  %1477 = load i32, i32* %t.i416, align 4, !dbg !1060
  %shr684.i1127 = lshr i32 %1477, 26, !dbg !1060
  %idxprom686.i1128 = zext i32 %shr684.i1127 to i64, !dbg !1060
  %arrayidx687.i1129 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i1128, !dbg !1060
  %1478 = load i32, i32* %arrayidx687.i1129, align 4, !dbg !1060
  %xor688.i1130 = xor i32 %xor683.i1126, %1478, !dbg !1060
  %1479 = load i32, i32* %r.i415, align 4, !dbg !1060
  %xor689.i1131 = xor i32 %1479, %xor688.i1130, !dbg !1060
  store i32 %xor689.i1131, i32* %r.i415, align 4, !dbg !1060
  %1480 = load i32, i32* %r.i415, align 4, !dbg !1061
  %1481 = load i32*, i32** %s.i418, align 8, !dbg !1061
  %arrayidx690.i1132 = getelementptr inbounds i32, i32* %1481, i64 28, !dbg !1061
  %1482 = load i32, i32* %arrayidx690.i1132, align 4, !dbg !1061
  %xor691.i1133 = xor i32 %1480, %1482, !dbg !1061
  store i32 %xor691.i1133, i32* %u.i417, align 4, !dbg !1061
  %1483 = load i32, i32* %r.i415, align 4, !dbg !1061
  %1484 = load i32*, i32** %s.i418, align 8, !dbg !1061
  %arrayidx692.i1134 = getelementptr inbounds i32, i32* %1484, i64 29, !dbg !1061
  %1485 = load i32, i32* %arrayidx692.i1134, align 4, !dbg !1061
  %xor693.i1135 = xor i32 %1483, %1485, !dbg !1061
  store i32 %xor693.i1135, i32* %t.i416, align 4, !dbg !1061
  %1486 = load i32, i32* %t.i416, align 4, !dbg !808
  %1487 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1486) #5, !dbg !808, !srcloc !178
  store i32 %1487, i32* %ret694.i452, align 4, !dbg !808
  %1488 = load i32, i32* %ret694.i452, align 4, !dbg !808
  store i32 %1488, i32* %tmp695.i453, align 4, !dbg !808
  %1489 = load i32, i32* %tmp695.i453, align 4, !dbg !808
  store i32 %1489, i32* %t.i416, align 4, !dbg !1061
  %1490 = load i32, i32* %u.i417, align 4, !dbg !1061
  %shr696.i1136 = lshr i32 %1490, 2, !dbg !1061
  %and697.i1137 = and i32 %shr696.i1136, 63, !dbg !1061
  %idxprom698.i1138 = zext i32 %and697.i1137 to i64, !dbg !1061
  %arrayidx699.i1139 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i1138, !dbg !1061
  %1491 = load i32, i32* %arrayidx699.i1139, align 4, !dbg !1061
  %1492 = load i32, i32* %u.i417, align 4, !dbg !1061
  %shr700.i1140 = lshr i32 %1492, 10, !dbg !1061
  %and701.i1141 = and i32 %shr700.i1140, 63, !dbg !1061
  %idxprom702.i1142 = zext i32 %and701.i1141 to i64, !dbg !1061
  %arrayidx703.i1143 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i1142, !dbg !1061
  %1493 = load i32, i32* %arrayidx703.i1143, align 4, !dbg !1061
  %xor704.i1144 = xor i32 %1491, %1493, !dbg !1061
  %1494 = load i32, i32* %u.i417, align 4, !dbg !1061
  %shr705.i1145 = lshr i32 %1494, 18, !dbg !1061
  %and706.i1146 = and i32 %shr705.i1145, 63, !dbg !1061
  %idxprom707.i1147 = zext i32 %and706.i1146 to i64, !dbg !1061
  %arrayidx708.i1148 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i1147, !dbg !1061
  %1495 = load i32, i32* %arrayidx708.i1148, align 4, !dbg !1061
  %xor709.i1149 = xor i32 %xor704.i1144, %1495, !dbg !1061
  %1496 = load i32, i32* %u.i417, align 4, !dbg !1061
  %shr710.i1150 = lshr i32 %1496, 26, !dbg !1061
  %idxprom712.i1151 = zext i32 %shr710.i1150 to i64, !dbg !1061
  %arrayidx713.i1152 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i1151, !dbg !1061
  %1497 = load i32, i32* %arrayidx713.i1152, align 4, !dbg !1061
  %xor714.i1153 = xor i32 %xor709.i1149, %1497, !dbg !1061
  %1498 = load i32, i32* %t.i416, align 4, !dbg !1061
  %shr715.i1154 = lshr i32 %1498, 2, !dbg !1061
  %and716.i1155 = and i32 %shr715.i1154, 63, !dbg !1061
  %idxprom717.i1156 = zext i32 %and716.i1155 to i64, !dbg !1061
  %arrayidx718.i1157 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i1156, !dbg !1061
  %1499 = load i32, i32* %arrayidx718.i1157, align 4, !dbg !1061
  %xor719.i1158 = xor i32 %xor714.i1153, %1499, !dbg !1061
  %1500 = load i32, i32* %t.i416, align 4, !dbg !1061
  %shr720.i1159 = lshr i32 %1500, 10, !dbg !1061
  %and721.i1160 = and i32 %shr720.i1159, 63, !dbg !1061
  %idxprom722.i1161 = zext i32 %and721.i1160 to i64, !dbg !1061
  %arrayidx723.i1162 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i1161, !dbg !1061
  %1501 = load i32, i32* %arrayidx723.i1162, align 4, !dbg !1061
  %xor724.i1163 = xor i32 %xor719.i1158, %1501, !dbg !1061
  %1502 = load i32, i32* %t.i416, align 4, !dbg !1061
  %shr725.i1164 = lshr i32 %1502, 18, !dbg !1061
  %and726.i1165 = and i32 %shr725.i1164, 63, !dbg !1061
  %idxprom727.i1166 = zext i32 %and726.i1165 to i64, !dbg !1061
  %arrayidx728.i1167 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i1166, !dbg !1061
  %1503 = load i32, i32* %arrayidx728.i1167, align 4, !dbg !1061
  %xor729.i1168 = xor i32 %xor724.i1163, %1503, !dbg !1061
  %1504 = load i32, i32* %t.i416, align 4, !dbg !1061
  %shr730.i1169 = lshr i32 %1504, 26, !dbg !1061
  %idxprom732.i1170 = zext i32 %shr730.i1169 to i64, !dbg !1061
  %arrayidx733.i1171 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i1170, !dbg !1061
  %1505 = load i32, i32* %arrayidx733.i1171, align 4, !dbg !1061
  %xor734.i1172 = xor i32 %xor729.i1168, %1505, !dbg !1061
  %1506 = load i32, i32* %l.i414, align 4, !dbg !1061
  %xor735.i1173 = xor i32 %1506, %xor734.i1172, !dbg !1061
  store i32 %xor735.i1173, i32* %l.i414, align 4, !dbg !1061
  %1507 = load i32, i32* %l.i414, align 4, !dbg !1062
  %1508 = load i32*, i32** %s.i418, align 8, !dbg !1062
  %arrayidx736.i1174 = getelementptr inbounds i32, i32* %1508, i64 30, !dbg !1062
  %1509 = load i32, i32* %arrayidx736.i1174, align 4, !dbg !1062
  %xor737.i1175 = xor i32 %1507, %1509, !dbg !1062
  store i32 %xor737.i1175, i32* %u.i417, align 4, !dbg !1062
  %1510 = load i32, i32* %l.i414, align 4, !dbg !1062
  %1511 = load i32*, i32** %s.i418, align 8, !dbg !1062
  %arrayidx738.i1176 = getelementptr inbounds i32, i32* %1511, i64 31, !dbg !1062
  %1512 = load i32, i32* %arrayidx738.i1176, align 4, !dbg !1062
  %xor739.i1177 = xor i32 %1510, %1512, !dbg !1062
  store i32 %xor739.i1177, i32* %t.i416, align 4, !dbg !1062
  %1513 = load i32, i32* %t.i416, align 4, !dbg !809
  %1514 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1513) #5, !dbg !809, !srcloc !184
  store i32 %1514, i32* %ret740.i454, align 4, !dbg !809
  %1515 = load i32, i32* %ret740.i454, align 4, !dbg !809
  store i32 %1515, i32* %tmp741.i455, align 4, !dbg !809
  %1516 = load i32, i32* %tmp741.i455, align 4, !dbg !809
  store i32 %1516, i32* %t.i416, align 4, !dbg !1062
  %1517 = load i32, i32* %u.i417, align 4, !dbg !1062
  %shr742.i1178 = lshr i32 %1517, 2, !dbg !1062
  %and743.i1179 = and i32 %shr742.i1178, 63, !dbg !1062
  %idxprom744.i1180 = zext i32 %and743.i1179 to i64, !dbg !1062
  %arrayidx745.i1181 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i1180, !dbg !1062
  %1518 = load i32, i32* %arrayidx745.i1181, align 4, !dbg !1062
  %1519 = load i32, i32* %u.i417, align 4, !dbg !1062
  %shr746.i1182 = lshr i32 %1519, 10, !dbg !1062
  %and747.i1183 = and i32 %shr746.i1182, 63, !dbg !1062
  %idxprom748.i1184 = zext i32 %and747.i1183 to i64, !dbg !1062
  %arrayidx749.i1185 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i1184, !dbg !1062
  %1520 = load i32, i32* %arrayidx749.i1185, align 4, !dbg !1062
  %xor750.i1186 = xor i32 %1518, %1520, !dbg !1062
  %1521 = load i32, i32* %u.i417, align 4, !dbg !1062
  %shr751.i1187 = lshr i32 %1521, 18, !dbg !1062
  %and752.i1188 = and i32 %shr751.i1187, 63, !dbg !1062
  %idxprom753.i1189 = zext i32 %and752.i1188 to i64, !dbg !1062
  %arrayidx754.i1190 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i1189, !dbg !1062
  %1522 = load i32, i32* %arrayidx754.i1190, align 4, !dbg !1062
  %xor755.i1191 = xor i32 %xor750.i1186, %1522, !dbg !1062
  %1523 = load i32, i32* %u.i417, align 4, !dbg !1062
  %shr756.i1192 = lshr i32 %1523, 26, !dbg !1062
  %idxprom758.i1193 = zext i32 %shr756.i1192 to i64, !dbg !1062
  %arrayidx759.i1194 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i1193, !dbg !1062
  %1524 = load i32, i32* %arrayidx759.i1194, align 4, !dbg !1062
  %xor760.i1195 = xor i32 %xor755.i1191, %1524, !dbg !1062
  %1525 = load i32, i32* %t.i416, align 4, !dbg !1062
  %shr761.i1196 = lshr i32 %1525, 2, !dbg !1062
  %and762.i1197 = and i32 %shr761.i1196, 63, !dbg !1062
  %idxprom763.i1198 = zext i32 %and762.i1197 to i64, !dbg !1062
  %arrayidx764.i1199 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i1198, !dbg !1062
  %1526 = load i32, i32* %arrayidx764.i1199, align 4, !dbg !1062
  %xor765.i1200 = xor i32 %xor760.i1195, %1526, !dbg !1062
  %1527 = load i32, i32* %t.i416, align 4, !dbg !1062
  %shr766.i1201 = lshr i32 %1527, 10, !dbg !1062
  %and767.i1202 = and i32 %shr766.i1201, 63, !dbg !1062
  %idxprom768.i1203 = zext i32 %and767.i1202 to i64, !dbg !1062
  %arrayidx769.i1204 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i1203, !dbg !1062
  %1528 = load i32, i32* %arrayidx769.i1204, align 4, !dbg !1062
  %xor770.i1205 = xor i32 %xor765.i1200, %1528, !dbg !1062
  %1529 = load i32, i32* %t.i416, align 4, !dbg !1062
  %shr771.i1206 = lshr i32 %1529, 18, !dbg !1062
  %and772.i1207 = and i32 %shr771.i1206, 63, !dbg !1062
  %idxprom773.i1208 = zext i32 %and772.i1207 to i64, !dbg !1062
  %arrayidx774.i1209 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i1208, !dbg !1062
  %1530 = load i32, i32* %arrayidx774.i1209, align 4, !dbg !1062
  %xor775.i1210 = xor i32 %xor770.i1205, %1530, !dbg !1062
  %1531 = load i32, i32* %t.i416, align 4, !dbg !1062
  %shr776.i1211 = lshr i32 %1531, 26, !dbg !1062
  %idxprom778.i1212 = zext i32 %shr776.i1211 to i64, !dbg !1062
  %arrayidx779.i1213 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i1212, !dbg !1062
  %1532 = load i32, i32* %arrayidx779.i1213, align 4, !dbg !1062
  %xor780.i1214 = xor i32 %xor775.i1210, %1532, !dbg !1062
  %1533 = load i32, i32* %r.i415, align 4, !dbg !1062
  %xor781.i1215 = xor i32 %1533, %xor780.i1214, !dbg !1062
  store i32 %xor781.i1215, i32* %r.i415, align 4, !dbg !1062
  br label %DES_encrypt1.exit1936, !dbg !1063

if.else.i1888:                                    ; preds = %sw.epilog
  %1534 = load i32, i32* %r.i415, align 4, !dbg !1064
  %1535 = load i32*, i32** %s.i418, align 8, !dbg !1064
  %arrayidx782.i1217 = getelementptr inbounds i32, i32* %1535, i64 30, !dbg !1064
  %1536 = load i32, i32* %arrayidx782.i1217, align 4, !dbg !1064
  %xor783.i1218 = xor i32 %1534, %1536, !dbg !1064
  store i32 %xor783.i1218, i32* %u.i417, align 4, !dbg !1064
  %1537 = load i32, i32* %r.i415, align 4, !dbg !1064
  %1538 = load i32*, i32** %s.i418, align 8, !dbg !1064
  %arrayidx784.i1219 = getelementptr inbounds i32, i32* %1538, i64 31, !dbg !1064
  %1539 = load i32, i32* %arrayidx784.i1219, align 4, !dbg !1064
  %xor785.i1220 = xor i32 %1537, %1539, !dbg !1064
  store i32 %xor785.i1220, i32* %t.i416, align 4, !dbg !1064
  %1540 = load i32, i32* %t.i416, align 4, !dbg !810
  %1541 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1540) #5, !dbg !810, !srcloc !192
  store i32 %1541, i32* %ret786.i456, align 4, !dbg !810
  %1542 = load i32, i32* %ret786.i456, align 4, !dbg !810
  store i32 %1542, i32* %tmp787.i457, align 4, !dbg !810
  %1543 = load i32, i32* %tmp787.i457, align 4, !dbg !810
  store i32 %1543, i32* %t.i416, align 4, !dbg !1064
  %1544 = load i32, i32* %u.i417, align 4, !dbg !1064
  %shr788.i1221 = lshr i32 %1544, 2, !dbg !1064
  %and789.i1222 = and i32 %shr788.i1221, 63, !dbg !1064
  %idxprom790.i1223 = zext i32 %and789.i1222 to i64, !dbg !1064
  %arrayidx791.i1224 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i1223, !dbg !1064
  %1545 = load i32, i32* %arrayidx791.i1224, align 4, !dbg !1064
  %1546 = load i32, i32* %u.i417, align 4, !dbg !1064
  %shr792.i1225 = lshr i32 %1546, 10, !dbg !1064
  %and793.i1226 = and i32 %shr792.i1225, 63, !dbg !1064
  %idxprom794.i1227 = zext i32 %and793.i1226 to i64, !dbg !1064
  %arrayidx795.i1228 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i1227, !dbg !1064
  %1547 = load i32, i32* %arrayidx795.i1228, align 4, !dbg !1064
  %xor796.i1229 = xor i32 %1545, %1547, !dbg !1064
  %1548 = load i32, i32* %u.i417, align 4, !dbg !1064
  %shr797.i1230 = lshr i32 %1548, 18, !dbg !1064
  %and798.i1231 = and i32 %shr797.i1230, 63, !dbg !1064
  %idxprom799.i1232 = zext i32 %and798.i1231 to i64, !dbg !1064
  %arrayidx800.i1233 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i1232, !dbg !1064
  %1549 = load i32, i32* %arrayidx800.i1233, align 4, !dbg !1064
  %xor801.i1234 = xor i32 %xor796.i1229, %1549, !dbg !1064
  %1550 = load i32, i32* %u.i417, align 4, !dbg !1064
  %shr802.i1235 = lshr i32 %1550, 26, !dbg !1064
  %idxprom804.i1236 = zext i32 %shr802.i1235 to i64, !dbg !1064
  %arrayidx805.i1237 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i1236, !dbg !1064
  %1551 = load i32, i32* %arrayidx805.i1237, align 4, !dbg !1064
  %xor806.i1238 = xor i32 %xor801.i1234, %1551, !dbg !1064
  %1552 = load i32, i32* %t.i416, align 4, !dbg !1064
  %shr807.i1239 = lshr i32 %1552, 2, !dbg !1064
  %and808.i1240 = and i32 %shr807.i1239, 63, !dbg !1064
  %idxprom809.i1241 = zext i32 %and808.i1240 to i64, !dbg !1064
  %arrayidx810.i1242 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i1241, !dbg !1064
  %1553 = load i32, i32* %arrayidx810.i1242, align 4, !dbg !1064
  %xor811.i1243 = xor i32 %xor806.i1238, %1553, !dbg !1064
  %1554 = load i32, i32* %t.i416, align 4, !dbg !1064
  %shr812.i1244 = lshr i32 %1554, 10, !dbg !1064
  %and813.i1245 = and i32 %shr812.i1244, 63, !dbg !1064
  %idxprom814.i1246 = zext i32 %and813.i1245 to i64, !dbg !1064
  %arrayidx815.i1247 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i1246, !dbg !1064
  %1555 = load i32, i32* %arrayidx815.i1247, align 4, !dbg !1064
  %xor816.i1248 = xor i32 %xor811.i1243, %1555, !dbg !1064
  %1556 = load i32, i32* %t.i416, align 4, !dbg !1064
  %shr817.i1249 = lshr i32 %1556, 18, !dbg !1064
  %and818.i1250 = and i32 %shr817.i1249, 63, !dbg !1064
  %idxprom819.i1251 = zext i32 %and818.i1250 to i64, !dbg !1064
  %arrayidx820.i1252 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i1251, !dbg !1064
  %1557 = load i32, i32* %arrayidx820.i1252, align 4, !dbg !1064
  %xor821.i1253 = xor i32 %xor816.i1248, %1557, !dbg !1064
  %1558 = load i32, i32* %t.i416, align 4, !dbg !1064
  %shr822.i1254 = lshr i32 %1558, 26, !dbg !1064
  %idxprom824.i1255 = zext i32 %shr822.i1254 to i64, !dbg !1064
  %arrayidx825.i1256 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i1255, !dbg !1064
  %1559 = load i32, i32* %arrayidx825.i1256, align 4, !dbg !1064
  %xor826.i1257 = xor i32 %xor821.i1253, %1559, !dbg !1064
  %1560 = load i32, i32* %l.i414, align 4, !dbg !1064
  %xor827.i1258 = xor i32 %1560, %xor826.i1257, !dbg !1064
  store i32 %xor827.i1258, i32* %l.i414, align 4, !dbg !1064
  %1561 = load i32, i32* %l.i414, align 4, !dbg !1065
  %1562 = load i32*, i32** %s.i418, align 8, !dbg !1065
  %arrayidx828.i1259 = getelementptr inbounds i32, i32* %1562, i64 28, !dbg !1065
  %1563 = load i32, i32* %arrayidx828.i1259, align 4, !dbg !1065
  %xor829.i1260 = xor i32 %1561, %1563, !dbg !1065
  store i32 %xor829.i1260, i32* %u.i417, align 4, !dbg !1065
  %1564 = load i32, i32* %l.i414, align 4, !dbg !1065
  %1565 = load i32*, i32** %s.i418, align 8, !dbg !1065
  %arrayidx830.i1261 = getelementptr inbounds i32, i32* %1565, i64 29, !dbg !1065
  %1566 = load i32, i32* %arrayidx830.i1261, align 4, !dbg !1065
  %xor831.i1262 = xor i32 %1564, %1566, !dbg !1065
  store i32 %xor831.i1262, i32* %t.i416, align 4, !dbg !1065
  %1567 = load i32, i32* %t.i416, align 4, !dbg !811
  %1568 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1567) #5, !dbg !811, !srcloc !198
  store i32 %1568, i32* %ret832.i458, align 4, !dbg !811
  %1569 = load i32, i32* %ret832.i458, align 4, !dbg !811
  store i32 %1569, i32* %tmp833.i459, align 4, !dbg !811
  %1570 = load i32, i32* %tmp833.i459, align 4, !dbg !811
  store i32 %1570, i32* %t.i416, align 4, !dbg !1065
  %1571 = load i32, i32* %u.i417, align 4, !dbg !1065
  %shr834.i1263 = lshr i32 %1571, 2, !dbg !1065
  %and835.i1264 = and i32 %shr834.i1263, 63, !dbg !1065
  %idxprom836.i1265 = zext i32 %and835.i1264 to i64, !dbg !1065
  %arrayidx837.i1266 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i1265, !dbg !1065
  %1572 = load i32, i32* %arrayidx837.i1266, align 4, !dbg !1065
  %1573 = load i32, i32* %u.i417, align 4, !dbg !1065
  %shr838.i1267 = lshr i32 %1573, 10, !dbg !1065
  %and839.i1268 = and i32 %shr838.i1267, 63, !dbg !1065
  %idxprom840.i1269 = zext i32 %and839.i1268 to i64, !dbg !1065
  %arrayidx841.i1270 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i1269, !dbg !1065
  %1574 = load i32, i32* %arrayidx841.i1270, align 4, !dbg !1065
  %xor842.i1271 = xor i32 %1572, %1574, !dbg !1065
  %1575 = load i32, i32* %u.i417, align 4, !dbg !1065
  %shr843.i1272 = lshr i32 %1575, 18, !dbg !1065
  %and844.i1273 = and i32 %shr843.i1272, 63, !dbg !1065
  %idxprom845.i1274 = zext i32 %and844.i1273 to i64, !dbg !1065
  %arrayidx846.i1275 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i1274, !dbg !1065
  %1576 = load i32, i32* %arrayidx846.i1275, align 4, !dbg !1065
  %xor847.i1276 = xor i32 %xor842.i1271, %1576, !dbg !1065
  %1577 = load i32, i32* %u.i417, align 4, !dbg !1065
  %shr848.i1277 = lshr i32 %1577, 26, !dbg !1065
  %idxprom850.i1278 = zext i32 %shr848.i1277 to i64, !dbg !1065
  %arrayidx851.i1279 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i1278, !dbg !1065
  %1578 = load i32, i32* %arrayidx851.i1279, align 4, !dbg !1065
  %xor852.i1280 = xor i32 %xor847.i1276, %1578, !dbg !1065
  %1579 = load i32, i32* %t.i416, align 4, !dbg !1065
  %shr853.i1281 = lshr i32 %1579, 2, !dbg !1065
  %and854.i1282 = and i32 %shr853.i1281, 63, !dbg !1065
  %idxprom855.i1283 = zext i32 %and854.i1282 to i64, !dbg !1065
  %arrayidx856.i1284 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i1283, !dbg !1065
  %1580 = load i32, i32* %arrayidx856.i1284, align 4, !dbg !1065
  %xor857.i1285 = xor i32 %xor852.i1280, %1580, !dbg !1065
  %1581 = load i32, i32* %t.i416, align 4, !dbg !1065
  %shr858.i1286 = lshr i32 %1581, 10, !dbg !1065
  %and859.i1287 = and i32 %shr858.i1286, 63, !dbg !1065
  %idxprom860.i1288 = zext i32 %and859.i1287 to i64, !dbg !1065
  %arrayidx861.i1289 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i1288, !dbg !1065
  %1582 = load i32, i32* %arrayidx861.i1289, align 4, !dbg !1065
  %xor862.i1290 = xor i32 %xor857.i1285, %1582, !dbg !1065
  %1583 = load i32, i32* %t.i416, align 4, !dbg !1065
  %shr863.i1291 = lshr i32 %1583, 18, !dbg !1065
  %and864.i1292 = and i32 %shr863.i1291, 63, !dbg !1065
  %idxprom865.i1293 = zext i32 %and864.i1292 to i64, !dbg !1065
  %arrayidx866.i1294 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i1293, !dbg !1065
  %1584 = load i32, i32* %arrayidx866.i1294, align 4, !dbg !1065
  %xor867.i1295 = xor i32 %xor862.i1290, %1584, !dbg !1065
  %1585 = load i32, i32* %t.i416, align 4, !dbg !1065
  %shr868.i1296 = lshr i32 %1585, 26, !dbg !1065
  %idxprom870.i1297 = zext i32 %shr868.i1296 to i64, !dbg !1065
  %arrayidx871.i1298 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i1297, !dbg !1065
  %1586 = load i32, i32* %arrayidx871.i1298, align 4, !dbg !1065
  %xor872.i1299 = xor i32 %xor867.i1295, %1586, !dbg !1065
  %1587 = load i32, i32* %r.i415, align 4, !dbg !1065
  %xor873.i1300 = xor i32 %1587, %xor872.i1299, !dbg !1065
  store i32 %xor873.i1300, i32* %r.i415, align 4, !dbg !1065
  %1588 = load i32, i32* %r.i415, align 4, !dbg !1066
  %1589 = load i32*, i32** %s.i418, align 8, !dbg !1066
  %arrayidx874.i1301 = getelementptr inbounds i32, i32* %1589, i64 26, !dbg !1066
  %1590 = load i32, i32* %arrayidx874.i1301, align 4, !dbg !1066
  %xor875.i1302 = xor i32 %1588, %1590, !dbg !1066
  store i32 %xor875.i1302, i32* %u.i417, align 4, !dbg !1066
  %1591 = load i32, i32* %r.i415, align 4, !dbg !1066
  %1592 = load i32*, i32** %s.i418, align 8, !dbg !1066
  %arrayidx876.i1303 = getelementptr inbounds i32, i32* %1592, i64 27, !dbg !1066
  %1593 = load i32, i32* %arrayidx876.i1303, align 4, !dbg !1066
  %xor877.i1304 = xor i32 %1591, %1593, !dbg !1066
  store i32 %xor877.i1304, i32* %t.i416, align 4, !dbg !1066
  %1594 = load i32, i32* %t.i416, align 4, !dbg !812
  %1595 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1594) #5, !dbg !812, !srcloc !204
  store i32 %1595, i32* %ret878.i460, align 4, !dbg !812
  %1596 = load i32, i32* %ret878.i460, align 4, !dbg !812
  store i32 %1596, i32* %tmp879.i461, align 4, !dbg !812
  %1597 = load i32, i32* %tmp879.i461, align 4, !dbg !812
  store i32 %1597, i32* %t.i416, align 4, !dbg !1066
  %1598 = load i32, i32* %u.i417, align 4, !dbg !1066
  %shr880.i1305 = lshr i32 %1598, 2, !dbg !1066
  %and881.i1306 = and i32 %shr880.i1305, 63, !dbg !1066
  %idxprom882.i1307 = zext i32 %and881.i1306 to i64, !dbg !1066
  %arrayidx883.i1308 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i1307, !dbg !1066
  %1599 = load i32, i32* %arrayidx883.i1308, align 4, !dbg !1066
  %1600 = load i32, i32* %u.i417, align 4, !dbg !1066
  %shr884.i1309 = lshr i32 %1600, 10, !dbg !1066
  %and885.i1310 = and i32 %shr884.i1309, 63, !dbg !1066
  %idxprom886.i1311 = zext i32 %and885.i1310 to i64, !dbg !1066
  %arrayidx887.i1312 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i1311, !dbg !1066
  %1601 = load i32, i32* %arrayidx887.i1312, align 4, !dbg !1066
  %xor888.i1313 = xor i32 %1599, %1601, !dbg !1066
  %1602 = load i32, i32* %u.i417, align 4, !dbg !1066
  %shr889.i1314 = lshr i32 %1602, 18, !dbg !1066
  %and890.i1315 = and i32 %shr889.i1314, 63, !dbg !1066
  %idxprom891.i1316 = zext i32 %and890.i1315 to i64, !dbg !1066
  %arrayidx892.i1317 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i1316, !dbg !1066
  %1603 = load i32, i32* %arrayidx892.i1317, align 4, !dbg !1066
  %xor893.i1318 = xor i32 %xor888.i1313, %1603, !dbg !1066
  %1604 = load i32, i32* %u.i417, align 4, !dbg !1066
  %shr894.i1319 = lshr i32 %1604, 26, !dbg !1066
  %idxprom896.i1320 = zext i32 %shr894.i1319 to i64, !dbg !1066
  %arrayidx897.i1321 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i1320, !dbg !1066
  %1605 = load i32, i32* %arrayidx897.i1321, align 4, !dbg !1066
  %xor898.i1322 = xor i32 %xor893.i1318, %1605, !dbg !1066
  %1606 = load i32, i32* %t.i416, align 4, !dbg !1066
  %shr899.i1323 = lshr i32 %1606, 2, !dbg !1066
  %and900.i1324 = and i32 %shr899.i1323, 63, !dbg !1066
  %idxprom901.i1325 = zext i32 %and900.i1324 to i64, !dbg !1066
  %arrayidx902.i1326 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i1325, !dbg !1066
  %1607 = load i32, i32* %arrayidx902.i1326, align 4, !dbg !1066
  %xor903.i1327 = xor i32 %xor898.i1322, %1607, !dbg !1066
  %1608 = load i32, i32* %t.i416, align 4, !dbg !1066
  %shr904.i1328 = lshr i32 %1608, 10, !dbg !1066
  %and905.i1329 = and i32 %shr904.i1328, 63, !dbg !1066
  %idxprom906.i1330 = zext i32 %and905.i1329 to i64, !dbg !1066
  %arrayidx907.i1331 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i1330, !dbg !1066
  %1609 = load i32, i32* %arrayidx907.i1331, align 4, !dbg !1066
  %xor908.i1332 = xor i32 %xor903.i1327, %1609, !dbg !1066
  %1610 = load i32, i32* %t.i416, align 4, !dbg !1066
  %shr909.i1333 = lshr i32 %1610, 18, !dbg !1066
  %and910.i1334 = and i32 %shr909.i1333, 63, !dbg !1066
  %idxprom911.i1335 = zext i32 %and910.i1334 to i64, !dbg !1066
  %arrayidx912.i1336 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i1335, !dbg !1066
  %1611 = load i32, i32* %arrayidx912.i1336, align 4, !dbg !1066
  %xor913.i1337 = xor i32 %xor908.i1332, %1611, !dbg !1066
  %1612 = load i32, i32* %t.i416, align 4, !dbg !1066
  %shr914.i1338 = lshr i32 %1612, 26, !dbg !1066
  %idxprom916.i1339 = zext i32 %shr914.i1338 to i64, !dbg !1066
  %arrayidx917.i1340 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i1339, !dbg !1066
  %1613 = load i32, i32* %arrayidx917.i1340, align 4, !dbg !1066
  %xor918.i1341 = xor i32 %xor913.i1337, %1613, !dbg !1066
  %1614 = load i32, i32* %l.i414, align 4, !dbg !1066
  %xor919.i1342 = xor i32 %1614, %xor918.i1341, !dbg !1066
  store i32 %xor919.i1342, i32* %l.i414, align 4, !dbg !1066
  %1615 = load i32, i32* %l.i414, align 4, !dbg !1067
  %1616 = load i32*, i32** %s.i418, align 8, !dbg !1067
  %arrayidx920.i1343 = getelementptr inbounds i32, i32* %1616, i64 24, !dbg !1067
  %1617 = load i32, i32* %arrayidx920.i1343, align 4, !dbg !1067
  %xor921.i1344 = xor i32 %1615, %1617, !dbg !1067
  store i32 %xor921.i1344, i32* %u.i417, align 4, !dbg !1067
  %1618 = load i32, i32* %l.i414, align 4, !dbg !1067
  %1619 = load i32*, i32** %s.i418, align 8, !dbg !1067
  %arrayidx922.i1345 = getelementptr inbounds i32, i32* %1619, i64 25, !dbg !1067
  %1620 = load i32, i32* %arrayidx922.i1345, align 4, !dbg !1067
  %xor923.i1346 = xor i32 %1618, %1620, !dbg !1067
  store i32 %xor923.i1346, i32* %t.i416, align 4, !dbg !1067
  %1621 = load i32, i32* %t.i416, align 4, !dbg !813
  %1622 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1621) #5, !dbg !813, !srcloc !210
  store i32 %1622, i32* %ret924.i462, align 4, !dbg !813
  %1623 = load i32, i32* %ret924.i462, align 4, !dbg !813
  store i32 %1623, i32* %tmp925.i463, align 4, !dbg !813
  %1624 = load i32, i32* %tmp925.i463, align 4, !dbg !813
  store i32 %1624, i32* %t.i416, align 4, !dbg !1067
  %1625 = load i32, i32* %u.i417, align 4, !dbg !1067
  %shr926.i1347 = lshr i32 %1625, 2, !dbg !1067
  %and927.i1348 = and i32 %shr926.i1347, 63, !dbg !1067
  %idxprom928.i1349 = zext i32 %and927.i1348 to i64, !dbg !1067
  %arrayidx929.i1350 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i1349, !dbg !1067
  %1626 = load i32, i32* %arrayidx929.i1350, align 4, !dbg !1067
  %1627 = load i32, i32* %u.i417, align 4, !dbg !1067
  %shr930.i1351 = lshr i32 %1627, 10, !dbg !1067
  %and931.i1352 = and i32 %shr930.i1351, 63, !dbg !1067
  %idxprom932.i1353 = zext i32 %and931.i1352 to i64, !dbg !1067
  %arrayidx933.i1354 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i1353, !dbg !1067
  %1628 = load i32, i32* %arrayidx933.i1354, align 4, !dbg !1067
  %xor934.i1355 = xor i32 %1626, %1628, !dbg !1067
  %1629 = load i32, i32* %u.i417, align 4, !dbg !1067
  %shr935.i1356 = lshr i32 %1629, 18, !dbg !1067
  %and936.i1357 = and i32 %shr935.i1356, 63, !dbg !1067
  %idxprom937.i1358 = zext i32 %and936.i1357 to i64, !dbg !1067
  %arrayidx938.i1359 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i1358, !dbg !1067
  %1630 = load i32, i32* %arrayidx938.i1359, align 4, !dbg !1067
  %xor939.i1360 = xor i32 %xor934.i1355, %1630, !dbg !1067
  %1631 = load i32, i32* %u.i417, align 4, !dbg !1067
  %shr940.i1361 = lshr i32 %1631, 26, !dbg !1067
  %idxprom942.i1362 = zext i32 %shr940.i1361 to i64, !dbg !1067
  %arrayidx943.i1363 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i1362, !dbg !1067
  %1632 = load i32, i32* %arrayidx943.i1363, align 4, !dbg !1067
  %xor944.i1364 = xor i32 %xor939.i1360, %1632, !dbg !1067
  %1633 = load i32, i32* %t.i416, align 4, !dbg !1067
  %shr945.i1365 = lshr i32 %1633, 2, !dbg !1067
  %and946.i1366 = and i32 %shr945.i1365, 63, !dbg !1067
  %idxprom947.i1367 = zext i32 %and946.i1366 to i64, !dbg !1067
  %arrayidx948.i1368 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i1367, !dbg !1067
  %1634 = load i32, i32* %arrayidx948.i1368, align 4, !dbg !1067
  %xor949.i1369 = xor i32 %xor944.i1364, %1634, !dbg !1067
  %1635 = load i32, i32* %t.i416, align 4, !dbg !1067
  %shr950.i1370 = lshr i32 %1635, 10, !dbg !1067
  %and951.i1371 = and i32 %shr950.i1370, 63, !dbg !1067
  %idxprom952.i1372 = zext i32 %and951.i1371 to i64, !dbg !1067
  %arrayidx953.i1373 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i1372, !dbg !1067
  %1636 = load i32, i32* %arrayidx953.i1373, align 4, !dbg !1067
  %xor954.i1374 = xor i32 %xor949.i1369, %1636, !dbg !1067
  %1637 = load i32, i32* %t.i416, align 4, !dbg !1067
  %shr955.i1375 = lshr i32 %1637, 18, !dbg !1067
  %and956.i1376 = and i32 %shr955.i1375, 63, !dbg !1067
  %idxprom957.i1377 = zext i32 %and956.i1376 to i64, !dbg !1067
  %arrayidx958.i1378 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i1377, !dbg !1067
  %1638 = load i32, i32* %arrayidx958.i1378, align 4, !dbg !1067
  %xor959.i1379 = xor i32 %xor954.i1374, %1638, !dbg !1067
  %1639 = load i32, i32* %t.i416, align 4, !dbg !1067
  %shr960.i1380 = lshr i32 %1639, 26, !dbg !1067
  %idxprom962.i1381 = zext i32 %shr960.i1380 to i64, !dbg !1067
  %arrayidx963.i1382 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i1381, !dbg !1067
  %1640 = load i32, i32* %arrayidx963.i1382, align 4, !dbg !1067
  %xor964.i1383 = xor i32 %xor959.i1379, %1640, !dbg !1067
  %1641 = load i32, i32* %r.i415, align 4, !dbg !1067
  %xor965.i1384 = xor i32 %1641, %xor964.i1383, !dbg !1067
  store i32 %xor965.i1384, i32* %r.i415, align 4, !dbg !1067
  %1642 = load i32, i32* %r.i415, align 4, !dbg !1068
  %1643 = load i32*, i32** %s.i418, align 8, !dbg !1068
  %arrayidx966.i1385 = getelementptr inbounds i32, i32* %1643, i64 22, !dbg !1068
  %1644 = load i32, i32* %arrayidx966.i1385, align 4, !dbg !1068
  %xor967.i1386 = xor i32 %1642, %1644, !dbg !1068
  store i32 %xor967.i1386, i32* %u.i417, align 4, !dbg !1068
  %1645 = load i32, i32* %r.i415, align 4, !dbg !1068
  %1646 = load i32*, i32** %s.i418, align 8, !dbg !1068
  %arrayidx968.i1387 = getelementptr inbounds i32, i32* %1646, i64 23, !dbg !1068
  %1647 = load i32, i32* %arrayidx968.i1387, align 4, !dbg !1068
  %xor969.i1388 = xor i32 %1645, %1647, !dbg !1068
  store i32 %xor969.i1388, i32* %t.i416, align 4, !dbg !1068
  %1648 = load i32, i32* %t.i416, align 4, !dbg !814
  %1649 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1648) #5, !dbg !814, !srcloc !216
  store i32 %1649, i32* %ret970.i464, align 4, !dbg !814
  %1650 = load i32, i32* %ret970.i464, align 4, !dbg !814
  store i32 %1650, i32* %tmp971.i465, align 4, !dbg !814
  %1651 = load i32, i32* %tmp971.i465, align 4, !dbg !814
  store i32 %1651, i32* %t.i416, align 4, !dbg !1068
  %1652 = load i32, i32* %u.i417, align 4, !dbg !1068
  %shr972.i1389 = lshr i32 %1652, 2, !dbg !1068
  %and973.i1390 = and i32 %shr972.i1389, 63, !dbg !1068
  %idxprom974.i1391 = zext i32 %and973.i1390 to i64, !dbg !1068
  %arrayidx975.i1392 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i1391, !dbg !1068
  %1653 = load i32, i32* %arrayidx975.i1392, align 4, !dbg !1068
  %1654 = load i32, i32* %u.i417, align 4, !dbg !1068
  %shr976.i1393 = lshr i32 %1654, 10, !dbg !1068
  %and977.i1394 = and i32 %shr976.i1393, 63, !dbg !1068
  %idxprom978.i1395 = zext i32 %and977.i1394 to i64, !dbg !1068
  %arrayidx979.i1396 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i1395, !dbg !1068
  %1655 = load i32, i32* %arrayidx979.i1396, align 4, !dbg !1068
  %xor980.i1397 = xor i32 %1653, %1655, !dbg !1068
  %1656 = load i32, i32* %u.i417, align 4, !dbg !1068
  %shr981.i1398 = lshr i32 %1656, 18, !dbg !1068
  %and982.i1399 = and i32 %shr981.i1398, 63, !dbg !1068
  %idxprom983.i1400 = zext i32 %and982.i1399 to i64, !dbg !1068
  %arrayidx984.i1401 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i1400, !dbg !1068
  %1657 = load i32, i32* %arrayidx984.i1401, align 4, !dbg !1068
  %xor985.i1402 = xor i32 %xor980.i1397, %1657, !dbg !1068
  %1658 = load i32, i32* %u.i417, align 4, !dbg !1068
  %shr986.i1403 = lshr i32 %1658, 26, !dbg !1068
  %idxprom988.i1404 = zext i32 %shr986.i1403 to i64, !dbg !1068
  %arrayidx989.i1405 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i1404, !dbg !1068
  %1659 = load i32, i32* %arrayidx989.i1405, align 4, !dbg !1068
  %xor990.i1406 = xor i32 %xor985.i1402, %1659, !dbg !1068
  %1660 = load i32, i32* %t.i416, align 4, !dbg !1068
  %shr991.i1407 = lshr i32 %1660, 2, !dbg !1068
  %and992.i1408 = and i32 %shr991.i1407, 63, !dbg !1068
  %idxprom993.i1409 = zext i32 %and992.i1408 to i64, !dbg !1068
  %arrayidx994.i1410 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i1409, !dbg !1068
  %1661 = load i32, i32* %arrayidx994.i1410, align 4, !dbg !1068
  %xor995.i1411 = xor i32 %xor990.i1406, %1661, !dbg !1068
  %1662 = load i32, i32* %t.i416, align 4, !dbg !1068
  %shr996.i1412 = lshr i32 %1662, 10, !dbg !1068
  %and997.i1413 = and i32 %shr996.i1412, 63, !dbg !1068
  %idxprom998.i1414 = zext i32 %and997.i1413 to i64, !dbg !1068
  %arrayidx999.i1415 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i1414, !dbg !1068
  %1663 = load i32, i32* %arrayidx999.i1415, align 4, !dbg !1068
  %xor1000.i1416 = xor i32 %xor995.i1411, %1663, !dbg !1068
  %1664 = load i32, i32* %t.i416, align 4, !dbg !1068
  %shr1001.i1417 = lshr i32 %1664, 18, !dbg !1068
  %and1002.i1418 = and i32 %shr1001.i1417, 63, !dbg !1068
  %idxprom1003.i1419 = zext i32 %and1002.i1418 to i64, !dbg !1068
  %arrayidx1004.i1420 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i1419, !dbg !1068
  %1665 = load i32, i32* %arrayidx1004.i1420, align 4, !dbg !1068
  %xor1005.i1421 = xor i32 %xor1000.i1416, %1665, !dbg !1068
  %1666 = load i32, i32* %t.i416, align 4, !dbg !1068
  %shr1006.i1422 = lshr i32 %1666, 26, !dbg !1068
  %idxprom1008.i1423 = zext i32 %shr1006.i1422 to i64, !dbg !1068
  %arrayidx1009.i1424 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i1423, !dbg !1068
  %1667 = load i32, i32* %arrayidx1009.i1424, align 4, !dbg !1068
  %xor1010.i1425 = xor i32 %xor1005.i1421, %1667, !dbg !1068
  %1668 = load i32, i32* %l.i414, align 4, !dbg !1068
  %xor1011.i1426 = xor i32 %1668, %xor1010.i1425, !dbg !1068
  store i32 %xor1011.i1426, i32* %l.i414, align 4, !dbg !1068
  %1669 = load i32, i32* %l.i414, align 4, !dbg !1069
  %1670 = load i32*, i32** %s.i418, align 8, !dbg !1069
  %arrayidx1012.i1427 = getelementptr inbounds i32, i32* %1670, i64 20, !dbg !1069
  %1671 = load i32, i32* %arrayidx1012.i1427, align 4, !dbg !1069
  %xor1013.i1428 = xor i32 %1669, %1671, !dbg !1069
  store i32 %xor1013.i1428, i32* %u.i417, align 4, !dbg !1069
  %1672 = load i32, i32* %l.i414, align 4, !dbg !1069
  %1673 = load i32*, i32** %s.i418, align 8, !dbg !1069
  %arrayidx1014.i1429 = getelementptr inbounds i32, i32* %1673, i64 21, !dbg !1069
  %1674 = load i32, i32* %arrayidx1014.i1429, align 4, !dbg !1069
  %xor1015.i1430 = xor i32 %1672, %1674, !dbg !1069
  store i32 %xor1015.i1430, i32* %t.i416, align 4, !dbg !1069
  %1675 = load i32, i32* %t.i416, align 4, !dbg !815
  %1676 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1675) #5, !dbg !815, !srcloc !222
  store i32 %1676, i32* %ret1016.i466, align 4, !dbg !815
  %1677 = load i32, i32* %ret1016.i466, align 4, !dbg !815
  store i32 %1677, i32* %tmp1017.i467, align 4, !dbg !815
  %1678 = load i32, i32* %tmp1017.i467, align 4, !dbg !815
  store i32 %1678, i32* %t.i416, align 4, !dbg !1069
  %1679 = load i32, i32* %u.i417, align 4, !dbg !1069
  %shr1018.i1431 = lshr i32 %1679, 2, !dbg !1069
  %and1019.i1432 = and i32 %shr1018.i1431, 63, !dbg !1069
  %idxprom1020.i1433 = zext i32 %and1019.i1432 to i64, !dbg !1069
  %arrayidx1021.i1434 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i1433, !dbg !1069
  %1680 = load i32, i32* %arrayidx1021.i1434, align 4, !dbg !1069
  %1681 = load i32, i32* %u.i417, align 4, !dbg !1069
  %shr1022.i1435 = lshr i32 %1681, 10, !dbg !1069
  %and1023.i1436 = and i32 %shr1022.i1435, 63, !dbg !1069
  %idxprom1024.i1437 = zext i32 %and1023.i1436 to i64, !dbg !1069
  %arrayidx1025.i1438 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i1437, !dbg !1069
  %1682 = load i32, i32* %arrayidx1025.i1438, align 4, !dbg !1069
  %xor1026.i1439 = xor i32 %1680, %1682, !dbg !1069
  %1683 = load i32, i32* %u.i417, align 4, !dbg !1069
  %shr1027.i1440 = lshr i32 %1683, 18, !dbg !1069
  %and1028.i1441 = and i32 %shr1027.i1440, 63, !dbg !1069
  %idxprom1029.i1442 = zext i32 %and1028.i1441 to i64, !dbg !1069
  %arrayidx1030.i1443 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i1442, !dbg !1069
  %1684 = load i32, i32* %arrayidx1030.i1443, align 4, !dbg !1069
  %xor1031.i1444 = xor i32 %xor1026.i1439, %1684, !dbg !1069
  %1685 = load i32, i32* %u.i417, align 4, !dbg !1069
  %shr1032.i1445 = lshr i32 %1685, 26, !dbg !1069
  %idxprom1034.i1446 = zext i32 %shr1032.i1445 to i64, !dbg !1069
  %arrayidx1035.i1447 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i1446, !dbg !1069
  %1686 = load i32, i32* %arrayidx1035.i1447, align 4, !dbg !1069
  %xor1036.i1448 = xor i32 %xor1031.i1444, %1686, !dbg !1069
  %1687 = load i32, i32* %t.i416, align 4, !dbg !1069
  %shr1037.i1449 = lshr i32 %1687, 2, !dbg !1069
  %and1038.i1450 = and i32 %shr1037.i1449, 63, !dbg !1069
  %idxprom1039.i1451 = zext i32 %and1038.i1450 to i64, !dbg !1069
  %arrayidx1040.i1452 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i1451, !dbg !1069
  %1688 = load i32, i32* %arrayidx1040.i1452, align 4, !dbg !1069
  %xor1041.i1453 = xor i32 %xor1036.i1448, %1688, !dbg !1069
  %1689 = load i32, i32* %t.i416, align 4, !dbg !1069
  %shr1042.i1454 = lshr i32 %1689, 10, !dbg !1069
  %and1043.i1455 = and i32 %shr1042.i1454, 63, !dbg !1069
  %idxprom1044.i1456 = zext i32 %and1043.i1455 to i64, !dbg !1069
  %arrayidx1045.i1457 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i1456, !dbg !1069
  %1690 = load i32, i32* %arrayidx1045.i1457, align 4, !dbg !1069
  %xor1046.i1458 = xor i32 %xor1041.i1453, %1690, !dbg !1069
  %1691 = load i32, i32* %t.i416, align 4, !dbg !1069
  %shr1047.i1459 = lshr i32 %1691, 18, !dbg !1069
  %and1048.i1460 = and i32 %shr1047.i1459, 63, !dbg !1069
  %idxprom1049.i1461 = zext i32 %and1048.i1460 to i64, !dbg !1069
  %arrayidx1050.i1462 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i1461, !dbg !1069
  %1692 = load i32, i32* %arrayidx1050.i1462, align 4, !dbg !1069
  %xor1051.i1463 = xor i32 %xor1046.i1458, %1692, !dbg !1069
  %1693 = load i32, i32* %t.i416, align 4, !dbg !1069
  %shr1052.i1464 = lshr i32 %1693, 26, !dbg !1069
  %idxprom1054.i1465 = zext i32 %shr1052.i1464 to i64, !dbg !1069
  %arrayidx1055.i1466 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i1465, !dbg !1069
  %1694 = load i32, i32* %arrayidx1055.i1466, align 4, !dbg !1069
  %xor1056.i1467 = xor i32 %xor1051.i1463, %1694, !dbg !1069
  %1695 = load i32, i32* %r.i415, align 4, !dbg !1069
  %xor1057.i1468 = xor i32 %1695, %xor1056.i1467, !dbg !1069
  store i32 %xor1057.i1468, i32* %r.i415, align 4, !dbg !1069
  %1696 = load i32, i32* %r.i415, align 4, !dbg !1070
  %1697 = load i32*, i32** %s.i418, align 8, !dbg !1070
  %arrayidx1058.i1469 = getelementptr inbounds i32, i32* %1697, i64 18, !dbg !1070
  %1698 = load i32, i32* %arrayidx1058.i1469, align 4, !dbg !1070
  %xor1059.i1470 = xor i32 %1696, %1698, !dbg !1070
  store i32 %xor1059.i1470, i32* %u.i417, align 4, !dbg !1070
  %1699 = load i32, i32* %r.i415, align 4, !dbg !1070
  %1700 = load i32*, i32** %s.i418, align 8, !dbg !1070
  %arrayidx1060.i1471 = getelementptr inbounds i32, i32* %1700, i64 19, !dbg !1070
  %1701 = load i32, i32* %arrayidx1060.i1471, align 4, !dbg !1070
  %xor1061.i1472 = xor i32 %1699, %1701, !dbg !1070
  store i32 %xor1061.i1472, i32* %t.i416, align 4, !dbg !1070
  %1702 = load i32, i32* %t.i416, align 4, !dbg !816
  %1703 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1702) #5, !dbg !816, !srcloc !228
  store i32 %1703, i32* %ret1062.i468, align 4, !dbg !816
  %1704 = load i32, i32* %ret1062.i468, align 4, !dbg !816
  store i32 %1704, i32* %tmp1063.i469, align 4, !dbg !816
  %1705 = load i32, i32* %tmp1063.i469, align 4, !dbg !816
  store i32 %1705, i32* %t.i416, align 4, !dbg !1070
  %1706 = load i32, i32* %u.i417, align 4, !dbg !1070
  %shr1064.i1473 = lshr i32 %1706, 2, !dbg !1070
  %and1065.i1474 = and i32 %shr1064.i1473, 63, !dbg !1070
  %idxprom1066.i1475 = zext i32 %and1065.i1474 to i64, !dbg !1070
  %arrayidx1067.i1476 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i1475, !dbg !1070
  %1707 = load i32, i32* %arrayidx1067.i1476, align 4, !dbg !1070
  %1708 = load i32, i32* %u.i417, align 4, !dbg !1070
  %shr1068.i1477 = lshr i32 %1708, 10, !dbg !1070
  %and1069.i1478 = and i32 %shr1068.i1477, 63, !dbg !1070
  %idxprom1070.i1479 = zext i32 %and1069.i1478 to i64, !dbg !1070
  %arrayidx1071.i1480 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i1479, !dbg !1070
  %1709 = load i32, i32* %arrayidx1071.i1480, align 4, !dbg !1070
  %xor1072.i1481 = xor i32 %1707, %1709, !dbg !1070
  %1710 = load i32, i32* %u.i417, align 4, !dbg !1070
  %shr1073.i1482 = lshr i32 %1710, 18, !dbg !1070
  %and1074.i1483 = and i32 %shr1073.i1482, 63, !dbg !1070
  %idxprom1075.i1484 = zext i32 %and1074.i1483 to i64, !dbg !1070
  %arrayidx1076.i1485 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i1484, !dbg !1070
  %1711 = load i32, i32* %arrayidx1076.i1485, align 4, !dbg !1070
  %xor1077.i1486 = xor i32 %xor1072.i1481, %1711, !dbg !1070
  %1712 = load i32, i32* %u.i417, align 4, !dbg !1070
  %shr1078.i1487 = lshr i32 %1712, 26, !dbg !1070
  %idxprom1080.i1488 = zext i32 %shr1078.i1487 to i64, !dbg !1070
  %arrayidx1081.i1489 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i1488, !dbg !1070
  %1713 = load i32, i32* %arrayidx1081.i1489, align 4, !dbg !1070
  %xor1082.i1490 = xor i32 %xor1077.i1486, %1713, !dbg !1070
  %1714 = load i32, i32* %t.i416, align 4, !dbg !1070
  %shr1083.i1491 = lshr i32 %1714, 2, !dbg !1070
  %and1084.i1492 = and i32 %shr1083.i1491, 63, !dbg !1070
  %idxprom1085.i1493 = zext i32 %and1084.i1492 to i64, !dbg !1070
  %arrayidx1086.i1494 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i1493, !dbg !1070
  %1715 = load i32, i32* %arrayidx1086.i1494, align 4, !dbg !1070
  %xor1087.i1495 = xor i32 %xor1082.i1490, %1715, !dbg !1070
  %1716 = load i32, i32* %t.i416, align 4, !dbg !1070
  %shr1088.i1496 = lshr i32 %1716, 10, !dbg !1070
  %and1089.i1497 = and i32 %shr1088.i1496, 63, !dbg !1070
  %idxprom1090.i1498 = zext i32 %and1089.i1497 to i64, !dbg !1070
  %arrayidx1091.i1499 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i1498, !dbg !1070
  %1717 = load i32, i32* %arrayidx1091.i1499, align 4, !dbg !1070
  %xor1092.i1500 = xor i32 %xor1087.i1495, %1717, !dbg !1070
  %1718 = load i32, i32* %t.i416, align 4, !dbg !1070
  %shr1093.i1501 = lshr i32 %1718, 18, !dbg !1070
  %and1094.i1502 = and i32 %shr1093.i1501, 63, !dbg !1070
  %idxprom1095.i1503 = zext i32 %and1094.i1502 to i64, !dbg !1070
  %arrayidx1096.i1504 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i1503, !dbg !1070
  %1719 = load i32, i32* %arrayidx1096.i1504, align 4, !dbg !1070
  %xor1097.i1505 = xor i32 %xor1092.i1500, %1719, !dbg !1070
  %1720 = load i32, i32* %t.i416, align 4, !dbg !1070
  %shr1098.i1506 = lshr i32 %1720, 26, !dbg !1070
  %idxprom1100.i1507 = zext i32 %shr1098.i1506 to i64, !dbg !1070
  %arrayidx1101.i1508 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i1507, !dbg !1070
  %1721 = load i32, i32* %arrayidx1101.i1508, align 4, !dbg !1070
  %xor1102.i1509 = xor i32 %xor1097.i1505, %1721, !dbg !1070
  %1722 = load i32, i32* %l.i414, align 4, !dbg !1070
  %xor1103.i1510 = xor i32 %1722, %xor1102.i1509, !dbg !1070
  store i32 %xor1103.i1510, i32* %l.i414, align 4, !dbg !1070
  %1723 = load i32, i32* %l.i414, align 4, !dbg !1071
  %1724 = load i32*, i32** %s.i418, align 8, !dbg !1071
  %arrayidx1104.i1511 = getelementptr inbounds i32, i32* %1724, i64 16, !dbg !1071
  %1725 = load i32, i32* %arrayidx1104.i1511, align 4, !dbg !1071
  %xor1105.i1512 = xor i32 %1723, %1725, !dbg !1071
  store i32 %xor1105.i1512, i32* %u.i417, align 4, !dbg !1071
  %1726 = load i32, i32* %l.i414, align 4, !dbg !1071
  %1727 = load i32*, i32** %s.i418, align 8, !dbg !1071
  %arrayidx1106.i1513 = getelementptr inbounds i32, i32* %1727, i64 17, !dbg !1071
  %1728 = load i32, i32* %arrayidx1106.i1513, align 4, !dbg !1071
  %xor1107.i1514 = xor i32 %1726, %1728, !dbg !1071
  store i32 %xor1107.i1514, i32* %t.i416, align 4, !dbg !1071
  %1729 = load i32, i32* %t.i416, align 4, !dbg !817
  %1730 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1729) #5, !dbg !817, !srcloc !234
  store i32 %1730, i32* %ret1108.i470, align 4, !dbg !817
  %1731 = load i32, i32* %ret1108.i470, align 4, !dbg !817
  store i32 %1731, i32* %tmp1109.i471, align 4, !dbg !817
  %1732 = load i32, i32* %tmp1109.i471, align 4, !dbg !817
  store i32 %1732, i32* %t.i416, align 4, !dbg !1071
  %1733 = load i32, i32* %u.i417, align 4, !dbg !1071
  %shr1110.i1515 = lshr i32 %1733, 2, !dbg !1071
  %and1111.i1516 = and i32 %shr1110.i1515, 63, !dbg !1071
  %idxprom1112.i1517 = zext i32 %and1111.i1516 to i64, !dbg !1071
  %arrayidx1113.i1518 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i1517, !dbg !1071
  %1734 = load i32, i32* %arrayidx1113.i1518, align 4, !dbg !1071
  %1735 = load i32, i32* %u.i417, align 4, !dbg !1071
  %shr1114.i1519 = lshr i32 %1735, 10, !dbg !1071
  %and1115.i1520 = and i32 %shr1114.i1519, 63, !dbg !1071
  %idxprom1116.i1521 = zext i32 %and1115.i1520 to i64, !dbg !1071
  %arrayidx1117.i1522 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i1521, !dbg !1071
  %1736 = load i32, i32* %arrayidx1117.i1522, align 4, !dbg !1071
  %xor1118.i1523 = xor i32 %1734, %1736, !dbg !1071
  %1737 = load i32, i32* %u.i417, align 4, !dbg !1071
  %shr1119.i1524 = lshr i32 %1737, 18, !dbg !1071
  %and1120.i1525 = and i32 %shr1119.i1524, 63, !dbg !1071
  %idxprom1121.i1526 = zext i32 %and1120.i1525 to i64, !dbg !1071
  %arrayidx1122.i1527 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i1526, !dbg !1071
  %1738 = load i32, i32* %arrayidx1122.i1527, align 4, !dbg !1071
  %xor1123.i1528 = xor i32 %xor1118.i1523, %1738, !dbg !1071
  %1739 = load i32, i32* %u.i417, align 4, !dbg !1071
  %shr1124.i1529 = lshr i32 %1739, 26, !dbg !1071
  %idxprom1126.i1530 = zext i32 %shr1124.i1529 to i64, !dbg !1071
  %arrayidx1127.i1531 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i1530, !dbg !1071
  %1740 = load i32, i32* %arrayidx1127.i1531, align 4, !dbg !1071
  %xor1128.i1532 = xor i32 %xor1123.i1528, %1740, !dbg !1071
  %1741 = load i32, i32* %t.i416, align 4, !dbg !1071
  %shr1129.i1533 = lshr i32 %1741, 2, !dbg !1071
  %and1130.i1534 = and i32 %shr1129.i1533, 63, !dbg !1071
  %idxprom1131.i1535 = zext i32 %and1130.i1534 to i64, !dbg !1071
  %arrayidx1132.i1536 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i1535, !dbg !1071
  %1742 = load i32, i32* %arrayidx1132.i1536, align 4, !dbg !1071
  %xor1133.i1537 = xor i32 %xor1128.i1532, %1742, !dbg !1071
  %1743 = load i32, i32* %t.i416, align 4, !dbg !1071
  %shr1134.i1538 = lshr i32 %1743, 10, !dbg !1071
  %and1135.i1539 = and i32 %shr1134.i1538, 63, !dbg !1071
  %idxprom1136.i1540 = zext i32 %and1135.i1539 to i64, !dbg !1071
  %arrayidx1137.i1541 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i1540, !dbg !1071
  %1744 = load i32, i32* %arrayidx1137.i1541, align 4, !dbg !1071
  %xor1138.i1542 = xor i32 %xor1133.i1537, %1744, !dbg !1071
  %1745 = load i32, i32* %t.i416, align 4, !dbg !1071
  %shr1139.i1543 = lshr i32 %1745, 18, !dbg !1071
  %and1140.i1544 = and i32 %shr1139.i1543, 63, !dbg !1071
  %idxprom1141.i1545 = zext i32 %and1140.i1544 to i64, !dbg !1071
  %arrayidx1142.i1546 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i1545, !dbg !1071
  %1746 = load i32, i32* %arrayidx1142.i1546, align 4, !dbg !1071
  %xor1143.i1547 = xor i32 %xor1138.i1542, %1746, !dbg !1071
  %1747 = load i32, i32* %t.i416, align 4, !dbg !1071
  %shr1144.i1548 = lshr i32 %1747, 26, !dbg !1071
  %idxprom1146.i1549 = zext i32 %shr1144.i1548 to i64, !dbg !1071
  %arrayidx1147.i1550 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i1549, !dbg !1071
  %1748 = load i32, i32* %arrayidx1147.i1550, align 4, !dbg !1071
  %xor1148.i1551 = xor i32 %xor1143.i1547, %1748, !dbg !1071
  %1749 = load i32, i32* %r.i415, align 4, !dbg !1071
  %xor1149.i1552 = xor i32 %1749, %xor1148.i1551, !dbg !1071
  store i32 %xor1149.i1552, i32* %r.i415, align 4, !dbg !1071
  %1750 = load i32, i32* %r.i415, align 4, !dbg !1072
  %1751 = load i32*, i32** %s.i418, align 8, !dbg !1072
  %arrayidx1150.i1553 = getelementptr inbounds i32, i32* %1751, i64 14, !dbg !1072
  %1752 = load i32, i32* %arrayidx1150.i1553, align 4, !dbg !1072
  %xor1151.i1554 = xor i32 %1750, %1752, !dbg !1072
  store i32 %xor1151.i1554, i32* %u.i417, align 4, !dbg !1072
  %1753 = load i32, i32* %r.i415, align 4, !dbg !1072
  %1754 = load i32*, i32** %s.i418, align 8, !dbg !1072
  %arrayidx1152.i1555 = getelementptr inbounds i32, i32* %1754, i64 15, !dbg !1072
  %1755 = load i32, i32* %arrayidx1152.i1555, align 4, !dbg !1072
  %xor1153.i1556 = xor i32 %1753, %1755, !dbg !1072
  store i32 %xor1153.i1556, i32* %t.i416, align 4, !dbg !1072
  %1756 = load i32, i32* %t.i416, align 4, !dbg !818
  %1757 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1756) #5, !dbg !818, !srcloc !240
  store i32 %1757, i32* %ret1154.i472, align 4, !dbg !818
  %1758 = load i32, i32* %ret1154.i472, align 4, !dbg !818
  store i32 %1758, i32* %tmp1155.i473, align 4, !dbg !818
  %1759 = load i32, i32* %tmp1155.i473, align 4, !dbg !818
  store i32 %1759, i32* %t.i416, align 4, !dbg !1072
  %1760 = load i32, i32* %u.i417, align 4, !dbg !1072
  %shr1156.i1557 = lshr i32 %1760, 2, !dbg !1072
  %and1157.i1558 = and i32 %shr1156.i1557, 63, !dbg !1072
  %idxprom1158.i1559 = zext i32 %and1157.i1558 to i64, !dbg !1072
  %arrayidx1159.i1560 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i1559, !dbg !1072
  %1761 = load i32, i32* %arrayidx1159.i1560, align 4, !dbg !1072
  %1762 = load i32, i32* %u.i417, align 4, !dbg !1072
  %shr1160.i1561 = lshr i32 %1762, 10, !dbg !1072
  %and1161.i1562 = and i32 %shr1160.i1561, 63, !dbg !1072
  %idxprom1162.i1563 = zext i32 %and1161.i1562 to i64, !dbg !1072
  %arrayidx1163.i1564 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i1563, !dbg !1072
  %1763 = load i32, i32* %arrayidx1163.i1564, align 4, !dbg !1072
  %xor1164.i1565 = xor i32 %1761, %1763, !dbg !1072
  %1764 = load i32, i32* %u.i417, align 4, !dbg !1072
  %shr1165.i1566 = lshr i32 %1764, 18, !dbg !1072
  %and1166.i1567 = and i32 %shr1165.i1566, 63, !dbg !1072
  %idxprom1167.i1568 = zext i32 %and1166.i1567 to i64, !dbg !1072
  %arrayidx1168.i1569 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i1568, !dbg !1072
  %1765 = load i32, i32* %arrayidx1168.i1569, align 4, !dbg !1072
  %xor1169.i1570 = xor i32 %xor1164.i1565, %1765, !dbg !1072
  %1766 = load i32, i32* %u.i417, align 4, !dbg !1072
  %shr1170.i1571 = lshr i32 %1766, 26, !dbg !1072
  %idxprom1172.i1572 = zext i32 %shr1170.i1571 to i64, !dbg !1072
  %arrayidx1173.i1573 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i1572, !dbg !1072
  %1767 = load i32, i32* %arrayidx1173.i1573, align 4, !dbg !1072
  %xor1174.i1574 = xor i32 %xor1169.i1570, %1767, !dbg !1072
  %1768 = load i32, i32* %t.i416, align 4, !dbg !1072
  %shr1175.i1575 = lshr i32 %1768, 2, !dbg !1072
  %and1176.i1576 = and i32 %shr1175.i1575, 63, !dbg !1072
  %idxprom1177.i1577 = zext i32 %and1176.i1576 to i64, !dbg !1072
  %arrayidx1178.i1578 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i1577, !dbg !1072
  %1769 = load i32, i32* %arrayidx1178.i1578, align 4, !dbg !1072
  %xor1179.i1579 = xor i32 %xor1174.i1574, %1769, !dbg !1072
  %1770 = load i32, i32* %t.i416, align 4, !dbg !1072
  %shr1180.i1580 = lshr i32 %1770, 10, !dbg !1072
  %and1181.i1581 = and i32 %shr1180.i1580, 63, !dbg !1072
  %idxprom1182.i1582 = zext i32 %and1181.i1581 to i64, !dbg !1072
  %arrayidx1183.i1583 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i1582, !dbg !1072
  %1771 = load i32, i32* %arrayidx1183.i1583, align 4, !dbg !1072
  %xor1184.i1584 = xor i32 %xor1179.i1579, %1771, !dbg !1072
  %1772 = load i32, i32* %t.i416, align 4, !dbg !1072
  %shr1185.i1585 = lshr i32 %1772, 18, !dbg !1072
  %and1186.i1586 = and i32 %shr1185.i1585, 63, !dbg !1072
  %idxprom1187.i1587 = zext i32 %and1186.i1586 to i64, !dbg !1072
  %arrayidx1188.i1588 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i1587, !dbg !1072
  %1773 = load i32, i32* %arrayidx1188.i1588, align 4, !dbg !1072
  %xor1189.i1589 = xor i32 %xor1184.i1584, %1773, !dbg !1072
  %1774 = load i32, i32* %t.i416, align 4, !dbg !1072
  %shr1190.i1590 = lshr i32 %1774, 26, !dbg !1072
  %idxprom1192.i1591 = zext i32 %shr1190.i1590 to i64, !dbg !1072
  %arrayidx1193.i1592 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i1591, !dbg !1072
  %1775 = load i32, i32* %arrayidx1193.i1592, align 4, !dbg !1072
  %xor1194.i1593 = xor i32 %xor1189.i1589, %1775, !dbg !1072
  %1776 = load i32, i32* %l.i414, align 4, !dbg !1072
  %xor1195.i1594 = xor i32 %1776, %xor1194.i1593, !dbg !1072
  store i32 %xor1195.i1594, i32* %l.i414, align 4, !dbg !1072
  %1777 = load i32, i32* %l.i414, align 4, !dbg !1073
  %1778 = load i32*, i32** %s.i418, align 8, !dbg !1073
  %arrayidx1196.i1595 = getelementptr inbounds i32, i32* %1778, i64 12, !dbg !1073
  %1779 = load i32, i32* %arrayidx1196.i1595, align 4, !dbg !1073
  %xor1197.i1596 = xor i32 %1777, %1779, !dbg !1073
  store i32 %xor1197.i1596, i32* %u.i417, align 4, !dbg !1073
  %1780 = load i32, i32* %l.i414, align 4, !dbg !1073
  %1781 = load i32*, i32** %s.i418, align 8, !dbg !1073
  %arrayidx1198.i1597 = getelementptr inbounds i32, i32* %1781, i64 13, !dbg !1073
  %1782 = load i32, i32* %arrayidx1198.i1597, align 4, !dbg !1073
  %xor1199.i1598 = xor i32 %1780, %1782, !dbg !1073
  store i32 %xor1199.i1598, i32* %t.i416, align 4, !dbg !1073
  %1783 = load i32, i32* %t.i416, align 4, !dbg !819
  %1784 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1783) #5, !dbg !819, !srcloc !246
  store i32 %1784, i32* %ret1200.i474, align 4, !dbg !819
  %1785 = load i32, i32* %ret1200.i474, align 4, !dbg !819
  store i32 %1785, i32* %tmp1201.i475, align 4, !dbg !819
  %1786 = load i32, i32* %tmp1201.i475, align 4, !dbg !819
  store i32 %1786, i32* %t.i416, align 4, !dbg !1073
  %1787 = load i32, i32* %u.i417, align 4, !dbg !1073
  %shr1202.i1599 = lshr i32 %1787, 2, !dbg !1073
  %and1203.i1600 = and i32 %shr1202.i1599, 63, !dbg !1073
  %idxprom1204.i1601 = zext i32 %and1203.i1600 to i64, !dbg !1073
  %arrayidx1205.i1602 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i1601, !dbg !1073
  %1788 = load i32, i32* %arrayidx1205.i1602, align 4, !dbg !1073
  %1789 = load i32, i32* %u.i417, align 4, !dbg !1073
  %shr1206.i1603 = lshr i32 %1789, 10, !dbg !1073
  %and1207.i1604 = and i32 %shr1206.i1603, 63, !dbg !1073
  %idxprom1208.i1605 = zext i32 %and1207.i1604 to i64, !dbg !1073
  %arrayidx1209.i1606 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i1605, !dbg !1073
  %1790 = load i32, i32* %arrayidx1209.i1606, align 4, !dbg !1073
  %xor1210.i1607 = xor i32 %1788, %1790, !dbg !1073
  %1791 = load i32, i32* %u.i417, align 4, !dbg !1073
  %shr1211.i1608 = lshr i32 %1791, 18, !dbg !1073
  %and1212.i1609 = and i32 %shr1211.i1608, 63, !dbg !1073
  %idxprom1213.i1610 = zext i32 %and1212.i1609 to i64, !dbg !1073
  %arrayidx1214.i1611 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i1610, !dbg !1073
  %1792 = load i32, i32* %arrayidx1214.i1611, align 4, !dbg !1073
  %xor1215.i1612 = xor i32 %xor1210.i1607, %1792, !dbg !1073
  %1793 = load i32, i32* %u.i417, align 4, !dbg !1073
  %shr1216.i1613 = lshr i32 %1793, 26, !dbg !1073
  %idxprom1218.i1614 = zext i32 %shr1216.i1613 to i64, !dbg !1073
  %arrayidx1219.i1615 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i1614, !dbg !1073
  %1794 = load i32, i32* %arrayidx1219.i1615, align 4, !dbg !1073
  %xor1220.i1616 = xor i32 %xor1215.i1612, %1794, !dbg !1073
  %1795 = load i32, i32* %t.i416, align 4, !dbg !1073
  %shr1221.i1617 = lshr i32 %1795, 2, !dbg !1073
  %and1222.i1618 = and i32 %shr1221.i1617, 63, !dbg !1073
  %idxprom1223.i1619 = zext i32 %and1222.i1618 to i64, !dbg !1073
  %arrayidx1224.i1620 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i1619, !dbg !1073
  %1796 = load i32, i32* %arrayidx1224.i1620, align 4, !dbg !1073
  %xor1225.i1621 = xor i32 %xor1220.i1616, %1796, !dbg !1073
  %1797 = load i32, i32* %t.i416, align 4, !dbg !1073
  %shr1226.i1622 = lshr i32 %1797, 10, !dbg !1073
  %and1227.i1623 = and i32 %shr1226.i1622, 63, !dbg !1073
  %idxprom1228.i1624 = zext i32 %and1227.i1623 to i64, !dbg !1073
  %arrayidx1229.i1625 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i1624, !dbg !1073
  %1798 = load i32, i32* %arrayidx1229.i1625, align 4, !dbg !1073
  %xor1230.i1626 = xor i32 %xor1225.i1621, %1798, !dbg !1073
  %1799 = load i32, i32* %t.i416, align 4, !dbg !1073
  %shr1231.i1627 = lshr i32 %1799, 18, !dbg !1073
  %and1232.i1628 = and i32 %shr1231.i1627, 63, !dbg !1073
  %idxprom1233.i1629 = zext i32 %and1232.i1628 to i64, !dbg !1073
  %arrayidx1234.i1630 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i1629, !dbg !1073
  %1800 = load i32, i32* %arrayidx1234.i1630, align 4, !dbg !1073
  %xor1235.i1631 = xor i32 %xor1230.i1626, %1800, !dbg !1073
  %1801 = load i32, i32* %t.i416, align 4, !dbg !1073
  %shr1236.i1632 = lshr i32 %1801, 26, !dbg !1073
  %idxprom1238.i1633 = zext i32 %shr1236.i1632 to i64, !dbg !1073
  %arrayidx1239.i1634 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i1633, !dbg !1073
  %1802 = load i32, i32* %arrayidx1239.i1634, align 4, !dbg !1073
  %xor1240.i1635 = xor i32 %xor1235.i1631, %1802, !dbg !1073
  %1803 = load i32, i32* %r.i415, align 4, !dbg !1073
  %xor1241.i1636 = xor i32 %1803, %xor1240.i1635, !dbg !1073
  store i32 %xor1241.i1636, i32* %r.i415, align 4, !dbg !1073
  %1804 = load i32, i32* %r.i415, align 4, !dbg !1074
  %1805 = load i32*, i32** %s.i418, align 8, !dbg !1074
  %arrayidx1242.i1637 = getelementptr inbounds i32, i32* %1805, i64 10, !dbg !1074
  %1806 = load i32, i32* %arrayidx1242.i1637, align 4, !dbg !1074
  %xor1243.i1638 = xor i32 %1804, %1806, !dbg !1074
  store i32 %xor1243.i1638, i32* %u.i417, align 4, !dbg !1074
  %1807 = load i32, i32* %r.i415, align 4, !dbg !1074
  %1808 = load i32*, i32** %s.i418, align 8, !dbg !1074
  %arrayidx1244.i1639 = getelementptr inbounds i32, i32* %1808, i64 11, !dbg !1074
  %1809 = load i32, i32* %arrayidx1244.i1639, align 4, !dbg !1074
  %xor1245.i1640 = xor i32 %1807, %1809, !dbg !1074
  store i32 %xor1245.i1640, i32* %t.i416, align 4, !dbg !1074
  %1810 = load i32, i32* %t.i416, align 4, !dbg !820
  %1811 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1810) #5, !dbg !820, !srcloc !252
  store i32 %1811, i32* %ret1246.i476, align 4, !dbg !820
  %1812 = load i32, i32* %ret1246.i476, align 4, !dbg !820
  store i32 %1812, i32* %tmp1247.i477, align 4, !dbg !820
  %1813 = load i32, i32* %tmp1247.i477, align 4, !dbg !820
  store i32 %1813, i32* %t.i416, align 4, !dbg !1074
  %1814 = load i32, i32* %u.i417, align 4, !dbg !1074
  %shr1248.i1641 = lshr i32 %1814, 2, !dbg !1074
  %and1249.i1642 = and i32 %shr1248.i1641, 63, !dbg !1074
  %idxprom1250.i1643 = zext i32 %and1249.i1642 to i64, !dbg !1074
  %arrayidx1251.i1644 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i1643, !dbg !1074
  %1815 = load i32, i32* %arrayidx1251.i1644, align 4, !dbg !1074
  %1816 = load i32, i32* %u.i417, align 4, !dbg !1074
  %shr1252.i1645 = lshr i32 %1816, 10, !dbg !1074
  %and1253.i1646 = and i32 %shr1252.i1645, 63, !dbg !1074
  %idxprom1254.i1647 = zext i32 %and1253.i1646 to i64, !dbg !1074
  %arrayidx1255.i1648 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i1647, !dbg !1074
  %1817 = load i32, i32* %arrayidx1255.i1648, align 4, !dbg !1074
  %xor1256.i1649 = xor i32 %1815, %1817, !dbg !1074
  %1818 = load i32, i32* %u.i417, align 4, !dbg !1074
  %shr1257.i1650 = lshr i32 %1818, 18, !dbg !1074
  %and1258.i1651 = and i32 %shr1257.i1650, 63, !dbg !1074
  %idxprom1259.i1652 = zext i32 %and1258.i1651 to i64, !dbg !1074
  %arrayidx1260.i1653 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i1652, !dbg !1074
  %1819 = load i32, i32* %arrayidx1260.i1653, align 4, !dbg !1074
  %xor1261.i1654 = xor i32 %xor1256.i1649, %1819, !dbg !1074
  %1820 = load i32, i32* %u.i417, align 4, !dbg !1074
  %shr1262.i1655 = lshr i32 %1820, 26, !dbg !1074
  %idxprom1264.i1656 = zext i32 %shr1262.i1655 to i64, !dbg !1074
  %arrayidx1265.i1657 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i1656, !dbg !1074
  %1821 = load i32, i32* %arrayidx1265.i1657, align 4, !dbg !1074
  %xor1266.i1658 = xor i32 %xor1261.i1654, %1821, !dbg !1074
  %1822 = load i32, i32* %t.i416, align 4, !dbg !1074
  %shr1267.i1659 = lshr i32 %1822, 2, !dbg !1074
  %and1268.i1660 = and i32 %shr1267.i1659, 63, !dbg !1074
  %idxprom1269.i1661 = zext i32 %and1268.i1660 to i64, !dbg !1074
  %arrayidx1270.i1662 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i1661, !dbg !1074
  %1823 = load i32, i32* %arrayidx1270.i1662, align 4, !dbg !1074
  %xor1271.i1663 = xor i32 %xor1266.i1658, %1823, !dbg !1074
  %1824 = load i32, i32* %t.i416, align 4, !dbg !1074
  %shr1272.i1664 = lshr i32 %1824, 10, !dbg !1074
  %and1273.i1665 = and i32 %shr1272.i1664, 63, !dbg !1074
  %idxprom1274.i1666 = zext i32 %and1273.i1665 to i64, !dbg !1074
  %arrayidx1275.i1667 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i1666, !dbg !1074
  %1825 = load i32, i32* %arrayidx1275.i1667, align 4, !dbg !1074
  %xor1276.i1668 = xor i32 %xor1271.i1663, %1825, !dbg !1074
  %1826 = load i32, i32* %t.i416, align 4, !dbg !1074
  %shr1277.i1669 = lshr i32 %1826, 18, !dbg !1074
  %and1278.i1670 = and i32 %shr1277.i1669, 63, !dbg !1074
  %idxprom1279.i1671 = zext i32 %and1278.i1670 to i64, !dbg !1074
  %arrayidx1280.i1672 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i1671, !dbg !1074
  %1827 = load i32, i32* %arrayidx1280.i1672, align 4, !dbg !1074
  %xor1281.i1673 = xor i32 %xor1276.i1668, %1827, !dbg !1074
  %1828 = load i32, i32* %t.i416, align 4, !dbg !1074
  %shr1282.i1674 = lshr i32 %1828, 26, !dbg !1074
  %idxprom1284.i1675 = zext i32 %shr1282.i1674 to i64, !dbg !1074
  %arrayidx1285.i1676 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i1675, !dbg !1074
  %1829 = load i32, i32* %arrayidx1285.i1676, align 4, !dbg !1074
  %xor1286.i1677 = xor i32 %xor1281.i1673, %1829, !dbg !1074
  %1830 = load i32, i32* %l.i414, align 4, !dbg !1074
  %xor1287.i1678 = xor i32 %1830, %xor1286.i1677, !dbg !1074
  store i32 %xor1287.i1678, i32* %l.i414, align 4, !dbg !1074
  %1831 = load i32, i32* %l.i414, align 4, !dbg !1075
  %1832 = load i32*, i32** %s.i418, align 8, !dbg !1075
  %arrayidx1288.i1679 = getelementptr inbounds i32, i32* %1832, i64 8, !dbg !1075
  %1833 = load i32, i32* %arrayidx1288.i1679, align 4, !dbg !1075
  %xor1289.i1680 = xor i32 %1831, %1833, !dbg !1075
  store i32 %xor1289.i1680, i32* %u.i417, align 4, !dbg !1075
  %1834 = load i32, i32* %l.i414, align 4, !dbg !1075
  %1835 = load i32*, i32** %s.i418, align 8, !dbg !1075
  %arrayidx1290.i1681 = getelementptr inbounds i32, i32* %1835, i64 9, !dbg !1075
  %1836 = load i32, i32* %arrayidx1290.i1681, align 4, !dbg !1075
  %xor1291.i1682 = xor i32 %1834, %1836, !dbg !1075
  store i32 %xor1291.i1682, i32* %t.i416, align 4, !dbg !1075
  %1837 = load i32, i32* %t.i416, align 4, !dbg !821
  %1838 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1837) #5, !dbg !821, !srcloc !258
  store i32 %1838, i32* %ret1292.i478, align 4, !dbg !821
  %1839 = load i32, i32* %ret1292.i478, align 4, !dbg !821
  store i32 %1839, i32* %tmp1293.i479, align 4, !dbg !821
  %1840 = load i32, i32* %tmp1293.i479, align 4, !dbg !821
  store i32 %1840, i32* %t.i416, align 4, !dbg !1075
  %1841 = load i32, i32* %u.i417, align 4, !dbg !1075
  %shr1294.i1683 = lshr i32 %1841, 2, !dbg !1075
  %and1295.i1684 = and i32 %shr1294.i1683, 63, !dbg !1075
  %idxprom1296.i1685 = zext i32 %and1295.i1684 to i64, !dbg !1075
  %arrayidx1297.i1686 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i1685, !dbg !1075
  %1842 = load i32, i32* %arrayidx1297.i1686, align 4, !dbg !1075
  %1843 = load i32, i32* %u.i417, align 4, !dbg !1075
  %shr1298.i1687 = lshr i32 %1843, 10, !dbg !1075
  %and1299.i1688 = and i32 %shr1298.i1687, 63, !dbg !1075
  %idxprom1300.i1689 = zext i32 %and1299.i1688 to i64, !dbg !1075
  %arrayidx1301.i1690 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i1689, !dbg !1075
  %1844 = load i32, i32* %arrayidx1301.i1690, align 4, !dbg !1075
  %xor1302.i1691 = xor i32 %1842, %1844, !dbg !1075
  %1845 = load i32, i32* %u.i417, align 4, !dbg !1075
  %shr1303.i1692 = lshr i32 %1845, 18, !dbg !1075
  %and1304.i1693 = and i32 %shr1303.i1692, 63, !dbg !1075
  %idxprom1305.i1694 = zext i32 %and1304.i1693 to i64, !dbg !1075
  %arrayidx1306.i1695 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i1694, !dbg !1075
  %1846 = load i32, i32* %arrayidx1306.i1695, align 4, !dbg !1075
  %xor1307.i1696 = xor i32 %xor1302.i1691, %1846, !dbg !1075
  %1847 = load i32, i32* %u.i417, align 4, !dbg !1075
  %shr1308.i1697 = lshr i32 %1847, 26, !dbg !1075
  %idxprom1310.i1698 = zext i32 %shr1308.i1697 to i64, !dbg !1075
  %arrayidx1311.i1699 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i1698, !dbg !1075
  %1848 = load i32, i32* %arrayidx1311.i1699, align 4, !dbg !1075
  %xor1312.i1700 = xor i32 %xor1307.i1696, %1848, !dbg !1075
  %1849 = load i32, i32* %t.i416, align 4, !dbg !1075
  %shr1313.i1701 = lshr i32 %1849, 2, !dbg !1075
  %and1314.i1702 = and i32 %shr1313.i1701, 63, !dbg !1075
  %idxprom1315.i1703 = zext i32 %and1314.i1702 to i64, !dbg !1075
  %arrayidx1316.i1704 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i1703, !dbg !1075
  %1850 = load i32, i32* %arrayidx1316.i1704, align 4, !dbg !1075
  %xor1317.i1705 = xor i32 %xor1312.i1700, %1850, !dbg !1075
  %1851 = load i32, i32* %t.i416, align 4, !dbg !1075
  %shr1318.i1706 = lshr i32 %1851, 10, !dbg !1075
  %and1319.i1707 = and i32 %shr1318.i1706, 63, !dbg !1075
  %idxprom1320.i1708 = zext i32 %and1319.i1707 to i64, !dbg !1075
  %arrayidx1321.i1709 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i1708, !dbg !1075
  %1852 = load i32, i32* %arrayidx1321.i1709, align 4, !dbg !1075
  %xor1322.i1710 = xor i32 %xor1317.i1705, %1852, !dbg !1075
  %1853 = load i32, i32* %t.i416, align 4, !dbg !1075
  %shr1323.i1711 = lshr i32 %1853, 18, !dbg !1075
  %and1324.i1712 = and i32 %shr1323.i1711, 63, !dbg !1075
  %idxprom1325.i1713 = zext i32 %and1324.i1712 to i64, !dbg !1075
  %arrayidx1326.i1714 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i1713, !dbg !1075
  %1854 = load i32, i32* %arrayidx1326.i1714, align 4, !dbg !1075
  %xor1327.i1715 = xor i32 %xor1322.i1710, %1854, !dbg !1075
  %1855 = load i32, i32* %t.i416, align 4, !dbg !1075
  %shr1328.i1716 = lshr i32 %1855, 26, !dbg !1075
  %idxprom1330.i1717 = zext i32 %shr1328.i1716 to i64, !dbg !1075
  %arrayidx1331.i1718 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i1717, !dbg !1075
  %1856 = load i32, i32* %arrayidx1331.i1718, align 4, !dbg !1075
  %xor1332.i1719 = xor i32 %xor1327.i1715, %1856, !dbg !1075
  %1857 = load i32, i32* %r.i415, align 4, !dbg !1075
  %xor1333.i1720 = xor i32 %1857, %xor1332.i1719, !dbg !1075
  store i32 %xor1333.i1720, i32* %r.i415, align 4, !dbg !1075
  %1858 = load i32, i32* %r.i415, align 4, !dbg !1076
  %1859 = load i32*, i32** %s.i418, align 8, !dbg !1076
  %arrayidx1334.i1721 = getelementptr inbounds i32, i32* %1859, i64 6, !dbg !1076
  %1860 = load i32, i32* %arrayidx1334.i1721, align 4, !dbg !1076
  %xor1335.i1722 = xor i32 %1858, %1860, !dbg !1076
  store i32 %xor1335.i1722, i32* %u.i417, align 4, !dbg !1076
  %1861 = load i32, i32* %r.i415, align 4, !dbg !1076
  %1862 = load i32*, i32** %s.i418, align 8, !dbg !1076
  %arrayidx1336.i1723 = getelementptr inbounds i32, i32* %1862, i64 7, !dbg !1076
  %1863 = load i32, i32* %arrayidx1336.i1723, align 4, !dbg !1076
  %xor1337.i1724 = xor i32 %1861, %1863, !dbg !1076
  store i32 %xor1337.i1724, i32* %t.i416, align 4, !dbg !1076
  %1864 = load i32, i32* %t.i416, align 4, !dbg !822
  %1865 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1864) #5, !dbg !822, !srcloc !264
  store i32 %1865, i32* %ret1338.i480, align 4, !dbg !822
  %1866 = load i32, i32* %ret1338.i480, align 4, !dbg !822
  store i32 %1866, i32* %tmp1339.i481, align 4, !dbg !822
  %1867 = load i32, i32* %tmp1339.i481, align 4, !dbg !822
  store i32 %1867, i32* %t.i416, align 4, !dbg !1076
  %1868 = load i32, i32* %u.i417, align 4, !dbg !1076
  %shr1340.i1725 = lshr i32 %1868, 2, !dbg !1076
  %and1341.i1726 = and i32 %shr1340.i1725, 63, !dbg !1076
  %idxprom1342.i1727 = zext i32 %and1341.i1726 to i64, !dbg !1076
  %arrayidx1343.i1728 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i1727, !dbg !1076
  %1869 = load i32, i32* %arrayidx1343.i1728, align 4, !dbg !1076
  %1870 = load i32, i32* %u.i417, align 4, !dbg !1076
  %shr1344.i1729 = lshr i32 %1870, 10, !dbg !1076
  %and1345.i1730 = and i32 %shr1344.i1729, 63, !dbg !1076
  %idxprom1346.i1731 = zext i32 %and1345.i1730 to i64, !dbg !1076
  %arrayidx1347.i1732 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i1731, !dbg !1076
  %1871 = load i32, i32* %arrayidx1347.i1732, align 4, !dbg !1076
  %xor1348.i1733 = xor i32 %1869, %1871, !dbg !1076
  %1872 = load i32, i32* %u.i417, align 4, !dbg !1076
  %shr1349.i1734 = lshr i32 %1872, 18, !dbg !1076
  %and1350.i1735 = and i32 %shr1349.i1734, 63, !dbg !1076
  %idxprom1351.i1736 = zext i32 %and1350.i1735 to i64, !dbg !1076
  %arrayidx1352.i1737 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i1736, !dbg !1076
  %1873 = load i32, i32* %arrayidx1352.i1737, align 4, !dbg !1076
  %xor1353.i1738 = xor i32 %xor1348.i1733, %1873, !dbg !1076
  %1874 = load i32, i32* %u.i417, align 4, !dbg !1076
  %shr1354.i1739 = lshr i32 %1874, 26, !dbg !1076
  %idxprom1356.i1740 = zext i32 %shr1354.i1739 to i64, !dbg !1076
  %arrayidx1357.i1741 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i1740, !dbg !1076
  %1875 = load i32, i32* %arrayidx1357.i1741, align 4, !dbg !1076
  %xor1358.i1742 = xor i32 %xor1353.i1738, %1875, !dbg !1076
  %1876 = load i32, i32* %t.i416, align 4, !dbg !1076
  %shr1359.i1743 = lshr i32 %1876, 2, !dbg !1076
  %and1360.i1744 = and i32 %shr1359.i1743, 63, !dbg !1076
  %idxprom1361.i1745 = zext i32 %and1360.i1744 to i64, !dbg !1076
  %arrayidx1362.i1746 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i1745, !dbg !1076
  %1877 = load i32, i32* %arrayidx1362.i1746, align 4, !dbg !1076
  %xor1363.i1747 = xor i32 %xor1358.i1742, %1877, !dbg !1076
  %1878 = load i32, i32* %t.i416, align 4, !dbg !1076
  %shr1364.i1748 = lshr i32 %1878, 10, !dbg !1076
  %and1365.i1749 = and i32 %shr1364.i1748, 63, !dbg !1076
  %idxprom1366.i1750 = zext i32 %and1365.i1749 to i64, !dbg !1076
  %arrayidx1367.i1751 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i1750, !dbg !1076
  %1879 = load i32, i32* %arrayidx1367.i1751, align 4, !dbg !1076
  %xor1368.i1752 = xor i32 %xor1363.i1747, %1879, !dbg !1076
  %1880 = load i32, i32* %t.i416, align 4, !dbg !1076
  %shr1369.i1753 = lshr i32 %1880, 18, !dbg !1076
  %and1370.i1754 = and i32 %shr1369.i1753, 63, !dbg !1076
  %idxprom1371.i1755 = zext i32 %and1370.i1754 to i64, !dbg !1076
  %arrayidx1372.i1756 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i1755, !dbg !1076
  %1881 = load i32, i32* %arrayidx1372.i1756, align 4, !dbg !1076
  %xor1373.i1757 = xor i32 %xor1368.i1752, %1881, !dbg !1076
  %1882 = load i32, i32* %t.i416, align 4, !dbg !1076
  %shr1374.i1758 = lshr i32 %1882, 26, !dbg !1076
  %idxprom1376.i1759 = zext i32 %shr1374.i1758 to i64, !dbg !1076
  %arrayidx1377.i1760 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i1759, !dbg !1076
  %1883 = load i32, i32* %arrayidx1377.i1760, align 4, !dbg !1076
  %xor1378.i1761 = xor i32 %xor1373.i1757, %1883, !dbg !1076
  %1884 = load i32, i32* %l.i414, align 4, !dbg !1076
  %xor1379.i1762 = xor i32 %1884, %xor1378.i1761, !dbg !1076
  store i32 %xor1379.i1762, i32* %l.i414, align 4, !dbg !1076
  %1885 = load i32, i32* %l.i414, align 4, !dbg !1077
  %1886 = load i32*, i32** %s.i418, align 8, !dbg !1077
  %arrayidx1380.i1763 = getelementptr inbounds i32, i32* %1886, i64 4, !dbg !1077
  %1887 = load i32, i32* %arrayidx1380.i1763, align 4, !dbg !1077
  %xor1381.i1764 = xor i32 %1885, %1887, !dbg !1077
  store i32 %xor1381.i1764, i32* %u.i417, align 4, !dbg !1077
  %1888 = load i32, i32* %l.i414, align 4, !dbg !1077
  %1889 = load i32*, i32** %s.i418, align 8, !dbg !1077
  %arrayidx1382.i1765 = getelementptr inbounds i32, i32* %1889, i64 5, !dbg !1077
  %1890 = load i32, i32* %arrayidx1382.i1765, align 4, !dbg !1077
  %xor1383.i1766 = xor i32 %1888, %1890, !dbg !1077
  store i32 %xor1383.i1766, i32* %t.i416, align 4, !dbg !1077
  %1891 = load i32, i32* %t.i416, align 4, !dbg !823
  %1892 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1891) #5, !dbg !823, !srcloc !270
  store i32 %1892, i32* %ret1384.i482, align 4, !dbg !823
  %1893 = load i32, i32* %ret1384.i482, align 4, !dbg !823
  store i32 %1893, i32* %tmp1385.i483, align 4, !dbg !823
  %1894 = load i32, i32* %tmp1385.i483, align 4, !dbg !823
  store i32 %1894, i32* %t.i416, align 4, !dbg !1077
  %1895 = load i32, i32* %u.i417, align 4, !dbg !1077
  %shr1386.i1767 = lshr i32 %1895, 2, !dbg !1077
  %and1387.i1768 = and i32 %shr1386.i1767, 63, !dbg !1077
  %idxprom1388.i1769 = zext i32 %and1387.i1768 to i64, !dbg !1077
  %arrayidx1389.i1770 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i1769, !dbg !1077
  %1896 = load i32, i32* %arrayidx1389.i1770, align 4, !dbg !1077
  %1897 = load i32, i32* %u.i417, align 4, !dbg !1077
  %shr1390.i1771 = lshr i32 %1897, 10, !dbg !1077
  %and1391.i1772 = and i32 %shr1390.i1771, 63, !dbg !1077
  %idxprom1392.i1773 = zext i32 %and1391.i1772 to i64, !dbg !1077
  %arrayidx1393.i1774 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i1773, !dbg !1077
  %1898 = load i32, i32* %arrayidx1393.i1774, align 4, !dbg !1077
  %xor1394.i1775 = xor i32 %1896, %1898, !dbg !1077
  %1899 = load i32, i32* %u.i417, align 4, !dbg !1077
  %shr1395.i1776 = lshr i32 %1899, 18, !dbg !1077
  %and1396.i1777 = and i32 %shr1395.i1776, 63, !dbg !1077
  %idxprom1397.i1778 = zext i32 %and1396.i1777 to i64, !dbg !1077
  %arrayidx1398.i1779 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i1778, !dbg !1077
  %1900 = load i32, i32* %arrayidx1398.i1779, align 4, !dbg !1077
  %xor1399.i1780 = xor i32 %xor1394.i1775, %1900, !dbg !1077
  %1901 = load i32, i32* %u.i417, align 4, !dbg !1077
  %shr1400.i1781 = lshr i32 %1901, 26, !dbg !1077
  %idxprom1402.i1782 = zext i32 %shr1400.i1781 to i64, !dbg !1077
  %arrayidx1403.i1783 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i1782, !dbg !1077
  %1902 = load i32, i32* %arrayidx1403.i1783, align 4, !dbg !1077
  %xor1404.i1784 = xor i32 %xor1399.i1780, %1902, !dbg !1077
  %1903 = load i32, i32* %t.i416, align 4, !dbg !1077
  %shr1405.i1785 = lshr i32 %1903, 2, !dbg !1077
  %and1406.i1786 = and i32 %shr1405.i1785, 63, !dbg !1077
  %idxprom1407.i1787 = zext i32 %and1406.i1786 to i64, !dbg !1077
  %arrayidx1408.i1788 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i1787, !dbg !1077
  %1904 = load i32, i32* %arrayidx1408.i1788, align 4, !dbg !1077
  %xor1409.i1789 = xor i32 %xor1404.i1784, %1904, !dbg !1077
  %1905 = load i32, i32* %t.i416, align 4, !dbg !1077
  %shr1410.i1790 = lshr i32 %1905, 10, !dbg !1077
  %and1411.i1791 = and i32 %shr1410.i1790, 63, !dbg !1077
  %idxprom1412.i1792 = zext i32 %and1411.i1791 to i64, !dbg !1077
  %arrayidx1413.i1793 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i1792, !dbg !1077
  %1906 = load i32, i32* %arrayidx1413.i1793, align 4, !dbg !1077
  %xor1414.i1794 = xor i32 %xor1409.i1789, %1906, !dbg !1077
  %1907 = load i32, i32* %t.i416, align 4, !dbg !1077
  %shr1415.i1795 = lshr i32 %1907, 18, !dbg !1077
  %and1416.i1796 = and i32 %shr1415.i1795, 63, !dbg !1077
  %idxprom1417.i1797 = zext i32 %and1416.i1796 to i64, !dbg !1077
  %arrayidx1418.i1798 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i1797, !dbg !1077
  %1908 = load i32, i32* %arrayidx1418.i1798, align 4, !dbg !1077
  %xor1419.i1799 = xor i32 %xor1414.i1794, %1908, !dbg !1077
  %1909 = load i32, i32* %t.i416, align 4, !dbg !1077
  %shr1420.i1800 = lshr i32 %1909, 26, !dbg !1077
  %idxprom1422.i1801 = zext i32 %shr1420.i1800 to i64, !dbg !1077
  %arrayidx1423.i1802 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i1801, !dbg !1077
  %1910 = load i32, i32* %arrayidx1423.i1802, align 4, !dbg !1077
  %xor1424.i1803 = xor i32 %xor1419.i1799, %1910, !dbg !1077
  %1911 = load i32, i32* %r.i415, align 4, !dbg !1077
  %xor1425.i1804 = xor i32 %1911, %xor1424.i1803, !dbg !1077
  store i32 %xor1425.i1804, i32* %r.i415, align 4, !dbg !1077
  %1912 = load i32, i32* %r.i415, align 4, !dbg !1078
  %1913 = load i32*, i32** %s.i418, align 8, !dbg !1078
  %arrayidx1426.i1805 = getelementptr inbounds i32, i32* %1913, i64 2, !dbg !1078
  %1914 = load i32, i32* %arrayidx1426.i1805, align 4, !dbg !1078
  %xor1427.i1806 = xor i32 %1912, %1914, !dbg !1078
  store i32 %xor1427.i1806, i32* %u.i417, align 4, !dbg !1078
  %1915 = load i32, i32* %r.i415, align 4, !dbg !1078
  %1916 = load i32*, i32** %s.i418, align 8, !dbg !1078
  %arrayidx1428.i1807 = getelementptr inbounds i32, i32* %1916, i64 3, !dbg !1078
  %1917 = load i32, i32* %arrayidx1428.i1807, align 4, !dbg !1078
  %xor1429.i1808 = xor i32 %1915, %1917, !dbg !1078
  store i32 %xor1429.i1808, i32* %t.i416, align 4, !dbg !1078
  %1918 = load i32, i32* %t.i416, align 4, !dbg !824
  %1919 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1918) #5, !dbg !824, !srcloc !276
  store i32 %1919, i32* %ret1430.i484, align 4, !dbg !824
  %1920 = load i32, i32* %ret1430.i484, align 4, !dbg !824
  store i32 %1920, i32* %tmp1431.i485, align 4, !dbg !824
  %1921 = load i32, i32* %tmp1431.i485, align 4, !dbg !824
  store i32 %1921, i32* %t.i416, align 4, !dbg !1078
  %1922 = load i32, i32* %u.i417, align 4, !dbg !1078
  %shr1432.i1809 = lshr i32 %1922, 2, !dbg !1078
  %and1433.i1810 = and i32 %shr1432.i1809, 63, !dbg !1078
  %idxprom1434.i1811 = zext i32 %and1433.i1810 to i64, !dbg !1078
  %arrayidx1435.i1812 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i1811, !dbg !1078
  %1923 = load i32, i32* %arrayidx1435.i1812, align 4, !dbg !1078
  %1924 = load i32, i32* %u.i417, align 4, !dbg !1078
  %shr1436.i1813 = lshr i32 %1924, 10, !dbg !1078
  %and1437.i1814 = and i32 %shr1436.i1813, 63, !dbg !1078
  %idxprom1438.i1815 = zext i32 %and1437.i1814 to i64, !dbg !1078
  %arrayidx1439.i1816 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i1815, !dbg !1078
  %1925 = load i32, i32* %arrayidx1439.i1816, align 4, !dbg !1078
  %xor1440.i1817 = xor i32 %1923, %1925, !dbg !1078
  %1926 = load i32, i32* %u.i417, align 4, !dbg !1078
  %shr1441.i1818 = lshr i32 %1926, 18, !dbg !1078
  %and1442.i1819 = and i32 %shr1441.i1818, 63, !dbg !1078
  %idxprom1443.i1820 = zext i32 %and1442.i1819 to i64, !dbg !1078
  %arrayidx1444.i1821 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i1820, !dbg !1078
  %1927 = load i32, i32* %arrayidx1444.i1821, align 4, !dbg !1078
  %xor1445.i1822 = xor i32 %xor1440.i1817, %1927, !dbg !1078
  %1928 = load i32, i32* %u.i417, align 4, !dbg !1078
  %shr1446.i1823 = lshr i32 %1928, 26, !dbg !1078
  %idxprom1448.i1824 = zext i32 %shr1446.i1823 to i64, !dbg !1078
  %arrayidx1449.i1825 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i1824, !dbg !1078
  %1929 = load i32, i32* %arrayidx1449.i1825, align 4, !dbg !1078
  %xor1450.i1826 = xor i32 %xor1445.i1822, %1929, !dbg !1078
  %1930 = load i32, i32* %t.i416, align 4, !dbg !1078
  %shr1451.i1827 = lshr i32 %1930, 2, !dbg !1078
  %and1452.i1828 = and i32 %shr1451.i1827, 63, !dbg !1078
  %idxprom1453.i1829 = zext i32 %and1452.i1828 to i64, !dbg !1078
  %arrayidx1454.i1830 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i1829, !dbg !1078
  %1931 = load i32, i32* %arrayidx1454.i1830, align 4, !dbg !1078
  %xor1455.i1831 = xor i32 %xor1450.i1826, %1931, !dbg !1078
  %1932 = load i32, i32* %t.i416, align 4, !dbg !1078
  %shr1456.i1832 = lshr i32 %1932, 10, !dbg !1078
  %and1457.i1833 = and i32 %shr1456.i1832, 63, !dbg !1078
  %idxprom1458.i1834 = zext i32 %and1457.i1833 to i64, !dbg !1078
  %arrayidx1459.i1835 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i1834, !dbg !1078
  %1933 = load i32, i32* %arrayidx1459.i1835, align 4, !dbg !1078
  %xor1460.i1836 = xor i32 %xor1455.i1831, %1933, !dbg !1078
  %1934 = load i32, i32* %t.i416, align 4, !dbg !1078
  %shr1461.i1837 = lshr i32 %1934, 18, !dbg !1078
  %and1462.i1838 = and i32 %shr1461.i1837, 63, !dbg !1078
  %idxprom1463.i1839 = zext i32 %and1462.i1838 to i64, !dbg !1078
  %arrayidx1464.i1840 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i1839, !dbg !1078
  %1935 = load i32, i32* %arrayidx1464.i1840, align 4, !dbg !1078
  %xor1465.i1841 = xor i32 %xor1460.i1836, %1935, !dbg !1078
  %1936 = load i32, i32* %t.i416, align 4, !dbg !1078
  %shr1466.i1842 = lshr i32 %1936, 26, !dbg !1078
  %idxprom1468.i1843 = zext i32 %shr1466.i1842 to i64, !dbg !1078
  %arrayidx1469.i1844 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i1843, !dbg !1078
  %1937 = load i32, i32* %arrayidx1469.i1844, align 4, !dbg !1078
  %xor1470.i1845 = xor i32 %xor1465.i1841, %1937, !dbg !1078
  %1938 = load i32, i32* %l.i414, align 4, !dbg !1078
  %xor1471.i1846 = xor i32 %1938, %xor1470.i1845, !dbg !1078
  store i32 %xor1471.i1846, i32* %l.i414, align 4, !dbg !1078
  %1939 = load i32, i32* %l.i414, align 4, !dbg !1079
  %1940 = load i32*, i32** %s.i418, align 8, !dbg !1079
  %1941 = load i32, i32* %1940, align 4, !dbg !1079
  %xor1473.i1847 = xor i32 %1939, %1941, !dbg !1079
  store i32 %xor1473.i1847, i32* %u.i417, align 4, !dbg !1079
  %1942 = load i32, i32* %l.i414, align 4, !dbg !1079
  %1943 = load i32*, i32** %s.i418, align 8, !dbg !1079
  %arrayidx1474.i1848 = getelementptr inbounds i32, i32* %1943, i64 1, !dbg !1079
  %1944 = load i32, i32* %arrayidx1474.i1848, align 4, !dbg !1079
  %xor1475.i1849 = xor i32 %1942, %1944, !dbg !1079
  store i32 %xor1475.i1849, i32* %t.i416, align 4, !dbg !1079
  %1945 = load i32, i32* %t.i416, align 4, !dbg !825
  %1946 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1945) #5, !dbg !825, !srcloc !282
  store i32 %1946, i32* %ret1476.i486, align 4, !dbg !825
  %1947 = load i32, i32* %ret1476.i486, align 4, !dbg !825
  store i32 %1947, i32* %tmp1477.i487, align 4, !dbg !825
  %1948 = load i32, i32* %tmp1477.i487, align 4, !dbg !825
  store i32 %1948, i32* %t.i416, align 4, !dbg !1079
  %1949 = load i32, i32* %u.i417, align 4, !dbg !1079
  %shr1478.i1850 = lshr i32 %1949, 2, !dbg !1079
  %and1479.i1851 = and i32 %shr1478.i1850, 63, !dbg !1079
  %idxprom1480.i1852 = zext i32 %and1479.i1851 to i64, !dbg !1079
  %arrayidx1481.i1853 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i1852, !dbg !1079
  %1950 = load i32, i32* %arrayidx1481.i1853, align 4, !dbg !1079
  %1951 = load i32, i32* %u.i417, align 4, !dbg !1079
  %shr1482.i1854 = lshr i32 %1951, 10, !dbg !1079
  %and1483.i1855 = and i32 %shr1482.i1854, 63, !dbg !1079
  %idxprom1484.i1856 = zext i32 %and1483.i1855 to i64, !dbg !1079
  %arrayidx1485.i1857 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i1856, !dbg !1079
  %1952 = load i32, i32* %arrayidx1485.i1857, align 4, !dbg !1079
  %xor1486.i1858 = xor i32 %1950, %1952, !dbg !1079
  %1953 = load i32, i32* %u.i417, align 4, !dbg !1079
  %shr1487.i1859 = lshr i32 %1953, 18, !dbg !1079
  %and1488.i1860 = and i32 %shr1487.i1859, 63, !dbg !1079
  %idxprom1489.i1861 = zext i32 %and1488.i1860 to i64, !dbg !1079
  %arrayidx1490.i1862 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i1861, !dbg !1079
  %1954 = load i32, i32* %arrayidx1490.i1862, align 4, !dbg !1079
  %xor1491.i1863 = xor i32 %xor1486.i1858, %1954, !dbg !1079
  %1955 = load i32, i32* %u.i417, align 4, !dbg !1079
  %shr1492.i1864 = lshr i32 %1955, 26, !dbg !1079
  %idxprom1494.i1865 = zext i32 %shr1492.i1864 to i64, !dbg !1079
  %arrayidx1495.i1866 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i1865, !dbg !1079
  %1956 = load i32, i32* %arrayidx1495.i1866, align 4, !dbg !1079
  %xor1496.i1867 = xor i32 %xor1491.i1863, %1956, !dbg !1079
  %1957 = load i32, i32* %t.i416, align 4, !dbg !1079
  %shr1497.i1868 = lshr i32 %1957, 2, !dbg !1079
  %and1498.i1869 = and i32 %shr1497.i1868, 63, !dbg !1079
  %idxprom1499.i1870 = zext i32 %and1498.i1869 to i64, !dbg !1079
  %arrayidx1500.i1871 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i1870, !dbg !1079
  %1958 = load i32, i32* %arrayidx1500.i1871, align 4, !dbg !1079
  %xor1501.i1872 = xor i32 %xor1496.i1867, %1958, !dbg !1079
  %1959 = load i32, i32* %t.i416, align 4, !dbg !1079
  %shr1502.i1873 = lshr i32 %1959, 10, !dbg !1079
  %and1503.i1874 = and i32 %shr1502.i1873, 63, !dbg !1079
  %idxprom1504.i1875 = zext i32 %and1503.i1874 to i64, !dbg !1079
  %arrayidx1505.i1876 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i1875, !dbg !1079
  %1960 = load i32, i32* %arrayidx1505.i1876, align 4, !dbg !1079
  %xor1506.i1877 = xor i32 %xor1501.i1872, %1960, !dbg !1079
  %1961 = load i32, i32* %t.i416, align 4, !dbg !1079
  %shr1507.i1878 = lshr i32 %1961, 18, !dbg !1079
  %and1508.i1879 = and i32 %shr1507.i1878, 63, !dbg !1079
  %idxprom1509.i1880 = zext i32 %and1508.i1879 to i64, !dbg !1079
  %arrayidx1510.i1881 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i1880, !dbg !1079
  %1962 = load i32, i32* %arrayidx1510.i1881, align 4, !dbg !1079
  %xor1511.i1882 = xor i32 %xor1506.i1877, %1962, !dbg !1079
  %1963 = load i32, i32* %t.i416, align 4, !dbg !1079
  %shr1512.i1883 = lshr i32 %1963, 26, !dbg !1079
  %idxprom1514.i1884 = zext i32 %shr1512.i1883 to i64, !dbg !1079
  %arrayidx1515.i1885 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i1884, !dbg !1079
  %1964 = load i32, i32* %arrayidx1515.i1885, align 4, !dbg !1079
  %xor1516.i1886 = xor i32 %xor1511.i1882, %1964, !dbg !1079
  %1965 = load i32, i32* %r.i415, align 4, !dbg !1079
  %xor1517.i1887 = xor i32 %1965, %xor1516.i1886, !dbg !1079
  store i32 %xor1517.i1887, i32* %r.i415, align 4, !dbg !1079
  br label %DES_encrypt1.exit1936

DES_encrypt1.exit1936:                            ; preds = %if.then.i1216, %if.else.i1888
  %1966 = load i32, i32* %l.i414, align 4, !dbg !826
  %1967 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %1966) #5, !dbg !826, !srcloc !286
  store i32 %1967, i32* %ret1518.i488, align 4, !dbg !826
  %1968 = load i32, i32* %ret1518.i488, align 4, !dbg !826
  store i32 %1968, i32* %tmp1519.i489, align 4, !dbg !826
  %1969 = load i32, i32* %tmp1519.i489, align 4, !dbg !826
  %conv1520.i1889 = zext i32 %1969 to i64, !dbg !1080
  %and1521.i1890 = and i64 %conv1520.i1889, 4294967295, !dbg !1081
  %conv1522.i1891 = trunc i64 %and1521.i1890 to i32, !dbg !1080
  store i32 %conv1522.i1891, i32* %l.i414, align 4, !dbg !1082
  %1970 = load i32, i32* %r.i415, align 4, !dbg !827
  %1971 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %1970) #5, !dbg !827, !srcloc !293
  store i32 %1971, i32* %ret1523.i490, align 4, !dbg !827
  %1972 = load i32, i32* %ret1523.i490, align 4, !dbg !827
  store i32 %1972, i32* %tmp1524.i491, align 4, !dbg !827
  %1973 = load i32, i32* %tmp1524.i491, align 4, !dbg !827
  %conv1525.i1892 = zext i32 %1973 to i64, !dbg !1083
  %and1526.i1893 = and i64 %conv1525.i1892, 4294967295, !dbg !1084
  %conv1527.i1894 = trunc i64 %and1526.i1893 to i32, !dbg !1083
  store i32 %conv1527.i1894, i32* %r.i415, align 4, !dbg !1085
  %1974 = load i32, i32* %r.i415, align 4, !dbg !828
  %shr1529.i1895 = lshr i32 %1974, 1, !dbg !828
  %1975 = load i32, i32* %l.i414, align 4, !dbg !828
  %xor1530.i1896 = xor i32 %shr1529.i1895, %1975, !dbg !828
  %conv1531.i1897 = zext i32 %xor1530.i1896 to i64, !dbg !828
  %and1532.i1898 = and i64 %conv1531.i1897, 1431655765, !dbg !828
  %conv1533.i1899 = trunc i64 %and1532.i1898 to i32, !dbg !828
  store i32 %conv1533.i1899, i32* %tt1528.i492, align 4, !dbg !828
  %1976 = load i32, i32* %tt1528.i492, align 4, !dbg !828
  %1977 = load i32, i32* %l.i414, align 4, !dbg !828
  %xor1534.i1900 = xor i32 %1977, %1976, !dbg !828
  store i32 %xor1534.i1900, i32* %l.i414, align 4, !dbg !828
  %1978 = load i32, i32* %tt1528.i492, align 4, !dbg !828
  %shl1535.i1901 = shl i32 %1978, 1, !dbg !828
  %1979 = load i32, i32* %r.i415, align 4, !dbg !828
  %xor1536.i1902 = xor i32 %1979, %shl1535.i1901, !dbg !828
  store i32 %xor1536.i1902, i32* %r.i415, align 4, !dbg !828
  %1980 = load i32, i32* %l.i414, align 4, !dbg !828
  %shr1537.i1903 = lshr i32 %1980, 8, !dbg !828
  %1981 = load i32, i32* %r.i415, align 4, !dbg !828
  %xor1538.i1904 = xor i32 %shr1537.i1903, %1981, !dbg !828
  %conv1539.i1905 = zext i32 %xor1538.i1904 to i64, !dbg !828
  %and1540.i1906 = and i64 %conv1539.i1905, 16711935, !dbg !828
  %conv1541.i1907 = trunc i64 %and1540.i1906 to i32, !dbg !828
  store i32 %conv1541.i1907, i32* %tt1528.i492, align 4, !dbg !828
  %1982 = load i32, i32* %tt1528.i492, align 4, !dbg !828
  %1983 = load i32, i32* %r.i415, align 4, !dbg !828
  %xor1542.i1908 = xor i32 %1983, %1982, !dbg !828
  store i32 %xor1542.i1908, i32* %r.i415, align 4, !dbg !828
  %1984 = load i32, i32* %tt1528.i492, align 4, !dbg !828
  %shl1543.i1909 = shl i32 %1984, 8, !dbg !828
  %1985 = load i32, i32* %l.i414, align 4, !dbg !828
  %xor1544.i1910 = xor i32 %1985, %shl1543.i1909, !dbg !828
  store i32 %xor1544.i1910, i32* %l.i414, align 4, !dbg !828
  %1986 = load i32, i32* %r.i415, align 4, !dbg !828
  %shr1545.i1911 = lshr i32 %1986, 2, !dbg !828
  %1987 = load i32, i32* %l.i414, align 4, !dbg !828
  %xor1546.i1912 = xor i32 %shr1545.i1911, %1987, !dbg !828
  %conv1547.i1913 = zext i32 %xor1546.i1912 to i64, !dbg !828
  %and1548.i1914 = and i64 %conv1547.i1913, 858993459, !dbg !828
  %conv1549.i1915 = trunc i64 %and1548.i1914 to i32, !dbg !828
  store i32 %conv1549.i1915, i32* %tt1528.i492, align 4, !dbg !828
  %1988 = load i32, i32* %tt1528.i492, align 4, !dbg !828
  %1989 = load i32, i32* %l.i414, align 4, !dbg !828
  %xor1550.i1916 = xor i32 %1989, %1988, !dbg !828
  store i32 %xor1550.i1916, i32* %l.i414, align 4, !dbg !828
  %1990 = load i32, i32* %tt1528.i492, align 4, !dbg !828
  %shl1551.i1917 = shl i32 %1990, 2, !dbg !828
  %1991 = load i32, i32* %r.i415, align 4, !dbg !828
  %xor1552.i1918 = xor i32 %1991, %shl1551.i1917, !dbg !828
  store i32 %xor1552.i1918, i32* %r.i415, align 4, !dbg !828
  %1992 = load i32, i32* %l.i414, align 4, !dbg !828
  %shr1553.i1919 = lshr i32 %1992, 16, !dbg !828
  %1993 = load i32, i32* %r.i415, align 4, !dbg !828
  %xor1554.i1920 = xor i32 %shr1553.i1919, %1993, !dbg !828
  %conv1555.i1921 = zext i32 %xor1554.i1920 to i64, !dbg !828
  %and1556.i1922 = and i64 %conv1555.i1921, 65535, !dbg !828
  %conv1557.i1923 = trunc i64 %and1556.i1922 to i32, !dbg !828
  store i32 %conv1557.i1923, i32* %tt1528.i492, align 4, !dbg !828
  %1994 = load i32, i32* %tt1528.i492, align 4, !dbg !828
  %1995 = load i32, i32* %r.i415, align 4, !dbg !828
  %xor1558.i1924 = xor i32 %1995, %1994, !dbg !828
  store i32 %xor1558.i1924, i32* %r.i415, align 4, !dbg !828
  %1996 = load i32, i32* %tt1528.i492, align 4, !dbg !828
  %shl1559.i1925 = shl i32 %1996, 16, !dbg !828
  %1997 = load i32, i32* %l.i414, align 4, !dbg !828
  %xor1560.i1926 = xor i32 %1997, %shl1559.i1925, !dbg !828
  store i32 %xor1560.i1926, i32* %l.i414, align 4, !dbg !828
  %1998 = load i32, i32* %r.i415, align 4, !dbg !828
  %shr1561.i1927 = lshr i32 %1998, 4, !dbg !828
  %1999 = load i32, i32* %l.i414, align 4, !dbg !828
  %xor1562.i1928 = xor i32 %shr1561.i1927, %1999, !dbg !828
  %conv1563.i1929 = zext i32 %xor1562.i1928 to i64, !dbg !828
  %and1564.i1930 = and i64 %conv1563.i1929, 252645135, !dbg !828
  %conv1565.i1931 = trunc i64 %and1564.i1930 to i32, !dbg !828
  store i32 %conv1565.i1931, i32* %tt1528.i492, align 4, !dbg !828
  %2000 = load i32, i32* %tt1528.i492, align 4, !dbg !828
  %2001 = load i32, i32* %l.i414, align 4, !dbg !828
  %xor1566.i1932 = xor i32 %2001, %2000, !dbg !828
  store i32 %xor1566.i1932, i32* %l.i414, align 4, !dbg !828
  %2002 = load i32, i32* %tt1528.i492, align 4, !dbg !828
  %shl1567.i1933 = shl i32 %2002, 4, !dbg !828
  %2003 = load i32, i32* %r.i415, align 4, !dbg !828
  %xor1568.i1934 = xor i32 %2003, %shl1567.i1933, !dbg !828
  store i32 %xor1568.i1934, i32* %r.i415, align 4, !dbg !828
  %2004 = load i32, i32* %l.i414, align 4, !dbg !1086
  %2005 = load i32*, i32** %data.addr.i411, align 8, !dbg !1087
  store i32 %2004, i32* %2005, align 4, !dbg !1088
  %2006 = load i32, i32* %r.i415, align 4, !dbg !1089
  %2007 = load i32*, i32** %data.addr.i411, align 8, !dbg !1090
  %arrayidx1570.i1935 = getelementptr inbounds i32, i32* %2007, i64 1, !dbg !1090
  store i32 %2006, i32* %arrayidx1570.i1935, align 4, !dbg !1091
  store i32 0, i32* %u.i417, align 4, !dbg !1092
  store i32 0, i32* %t.i416, align 4, !dbg !1093
  store i32 0, i32* %r.i415, align 4, !dbg !1094
  store i32 0, i32* %l.i414, align 4, !dbg !1095
  %arrayidx132 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1096
  %2008 = load i32, i32* %arrayidx132, align 4, !dbg !1096
  store i32 %2008, i32* %tout0, align 4, !dbg !1097
  %2009 = load i32, i32* %tout0, align 4, !dbg !1098
  %and133 = and i32 %2009, 255, !dbg !1098
  %conv134 = trunc i32 %and133 to i8, !dbg !1098
  %2010 = load i8*, i8** %out.addr, align 8, !dbg !1098
  %incdec.ptr135 = getelementptr inbounds i8, i8* %2010, i32 1, !dbg !1098
  store i8* %incdec.ptr135, i8** %out.addr, align 8, !dbg !1098
  store i8 %conv134, i8* %2010, align 1, !dbg !1098
  %2011 = load i32, i32* %tout0, align 4, !dbg !1098
  %shr136 = lshr i32 %2011, 8, !dbg !1098
  %and137 = and i32 %shr136, 255, !dbg !1098
  %conv138 = trunc i32 %and137 to i8, !dbg !1098
  %2012 = load i8*, i8** %out.addr, align 8, !dbg !1098
  %incdec.ptr139 = getelementptr inbounds i8, i8* %2012, i32 1, !dbg !1098
  store i8* %incdec.ptr139, i8** %out.addr, align 8, !dbg !1098
  store i8 %conv138, i8* %2012, align 1, !dbg !1098
  %2013 = load i32, i32* %tout0, align 4, !dbg !1098
  %shr140 = lshr i32 %2013, 16, !dbg !1098
  %and141 = and i32 %shr140, 255, !dbg !1098
  %conv142 = trunc i32 %and141 to i8, !dbg !1098
  %2014 = load i8*, i8** %out.addr, align 8, !dbg !1098
  %incdec.ptr143 = getelementptr inbounds i8, i8* %2014, i32 1, !dbg !1098
  store i8* %incdec.ptr143, i8** %out.addr, align 8, !dbg !1098
  store i8 %conv142, i8* %2014, align 1, !dbg !1098
  %2015 = load i32, i32* %tout0, align 4, !dbg !1098
  %shr144 = lshr i32 %2015, 24, !dbg !1098
  %and145 = and i32 %shr144, 255, !dbg !1098
  %conv146 = trunc i32 %and145 to i8, !dbg !1098
  %2016 = load i8*, i8** %out.addr, align 8, !dbg !1098
  %incdec.ptr147 = getelementptr inbounds i8, i8* %2016, i32 1, !dbg !1098
  store i8* %incdec.ptr147, i8** %out.addr, align 8, !dbg !1098
  store i8 %conv146, i8* %2016, align 1, !dbg !1098
  %arrayidx148 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1099
  %2017 = load i32, i32* %arrayidx148, align 4, !dbg !1099
  store i32 %2017, i32* %tout1, align 4, !dbg !1100
  %2018 = load i32, i32* %tout1, align 4, !dbg !1101
  %and149 = and i32 %2018, 255, !dbg !1101
  %conv150 = trunc i32 %and149 to i8, !dbg !1101
  %2019 = load i8*, i8** %out.addr, align 8, !dbg !1101
  %incdec.ptr151 = getelementptr inbounds i8, i8* %2019, i32 1, !dbg !1101
  store i8* %incdec.ptr151, i8** %out.addr, align 8, !dbg !1101
  store i8 %conv150, i8* %2019, align 1, !dbg !1101
  %2020 = load i32, i32* %tout1, align 4, !dbg !1101
  %shr152 = lshr i32 %2020, 8, !dbg !1101
  %and153 = and i32 %shr152, 255, !dbg !1101
  %conv154 = trunc i32 %and153 to i8, !dbg !1101
  %2021 = load i8*, i8** %out.addr, align 8, !dbg !1101
  %incdec.ptr155 = getelementptr inbounds i8, i8* %2021, i32 1, !dbg !1101
  store i8* %incdec.ptr155, i8** %out.addr, align 8, !dbg !1101
  store i8 %conv154, i8* %2021, align 1, !dbg !1101
  %2022 = load i32, i32* %tout1, align 4, !dbg !1101
  %shr156 = lshr i32 %2022, 16, !dbg !1101
  %and157 = and i32 %shr156, 255, !dbg !1101
  %conv158 = trunc i32 %and157 to i8, !dbg !1101
  %2023 = load i8*, i8** %out.addr, align 8, !dbg !1101
  %incdec.ptr159 = getelementptr inbounds i8, i8* %2023, i32 1, !dbg !1101
  store i8* %incdec.ptr159, i8** %out.addr, align 8, !dbg !1101
  store i8 %conv158, i8* %2023, align 1, !dbg !1101
  %2024 = load i32, i32* %tout1, align 4, !dbg !1101
  %shr160 = lshr i32 %2024, 24, !dbg !1101
  %and161 = and i32 %shr160, 255, !dbg !1101
  %conv162 = trunc i32 %and161 to i8, !dbg !1101
  %2025 = load i8*, i8** %out.addr, align 8, !dbg !1101
  %incdec.ptr163 = getelementptr inbounds i8, i8* %2025, i32 1, !dbg !1101
  store i8* %incdec.ptr163, i8** %out.addr, align 8, !dbg !1101
  store i8 %conv162, i8* %2025, align 1, !dbg !1101
  br label %if.end, !dbg !1102

if.end:                                           ; preds = %DES_encrypt1.exit1936, %for.end
  %2026 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !1103
  %arrayidx164 = getelementptr inbounds [8 x i8], [8 x i8]* %2026, i64 0, i64 0, !dbg !1104
  store i8* %arrayidx164, i8** %iv, align 8, !dbg !1105
  %2027 = load i32, i32* %tout0, align 4, !dbg !1106
  %and165 = and i32 %2027, 255, !dbg !1106
  %conv166 = trunc i32 %and165 to i8, !dbg !1106
  %2028 = load i8*, i8** %iv, align 8, !dbg !1106
  %incdec.ptr167 = getelementptr inbounds i8, i8* %2028, i32 1, !dbg !1106
  store i8* %incdec.ptr167, i8** %iv, align 8, !dbg !1106
  store i8 %conv166, i8* %2028, align 1, !dbg !1106
  %2029 = load i32, i32* %tout0, align 4, !dbg !1106
  %shr168 = lshr i32 %2029, 8, !dbg !1106
  %and169 = and i32 %shr168, 255, !dbg !1106
  %conv170 = trunc i32 %and169 to i8, !dbg !1106
  %2030 = load i8*, i8** %iv, align 8, !dbg !1106
  %incdec.ptr171 = getelementptr inbounds i8, i8* %2030, i32 1, !dbg !1106
  store i8* %incdec.ptr171, i8** %iv, align 8, !dbg !1106
  store i8 %conv170, i8* %2030, align 1, !dbg !1106
  %2031 = load i32, i32* %tout0, align 4, !dbg !1106
  %shr172 = lshr i32 %2031, 16, !dbg !1106
  %and173 = and i32 %shr172, 255, !dbg !1106
  %conv174 = trunc i32 %and173 to i8, !dbg !1106
  %2032 = load i8*, i8** %iv, align 8, !dbg !1106
  %incdec.ptr175 = getelementptr inbounds i8, i8* %2032, i32 1, !dbg !1106
  store i8* %incdec.ptr175, i8** %iv, align 8, !dbg !1106
  store i8 %conv174, i8* %2032, align 1, !dbg !1106
  %2033 = load i32, i32* %tout0, align 4, !dbg !1106
  %shr176 = lshr i32 %2033, 24, !dbg !1106
  %and177 = and i32 %shr176, 255, !dbg !1106
  %conv178 = trunc i32 %and177 to i8, !dbg !1106
  %2034 = load i8*, i8** %iv, align 8, !dbg !1106
  %incdec.ptr179 = getelementptr inbounds i8, i8* %2034, i32 1, !dbg !1106
  store i8* %incdec.ptr179, i8** %iv, align 8, !dbg !1106
  store i8 %conv178, i8* %2034, align 1, !dbg !1106
  %2035 = load i32, i32* %tout1, align 4, !dbg !1107
  %and180 = and i32 %2035, 255, !dbg !1107
  %conv181 = trunc i32 %and180 to i8, !dbg !1107
  %2036 = load i8*, i8** %iv, align 8, !dbg !1107
  %incdec.ptr182 = getelementptr inbounds i8, i8* %2036, i32 1, !dbg !1107
  store i8* %incdec.ptr182, i8** %iv, align 8, !dbg !1107
  store i8 %conv181, i8* %2036, align 1, !dbg !1107
  %2037 = load i32, i32* %tout1, align 4, !dbg !1107
  %shr183 = lshr i32 %2037, 8, !dbg !1107
  %and184 = and i32 %shr183, 255, !dbg !1107
  %conv185 = trunc i32 %and184 to i8, !dbg !1107
  %2038 = load i8*, i8** %iv, align 8, !dbg !1107
  %incdec.ptr186 = getelementptr inbounds i8, i8* %2038, i32 1, !dbg !1107
  store i8* %incdec.ptr186, i8** %iv, align 8, !dbg !1107
  store i8 %conv185, i8* %2038, align 1, !dbg !1107
  %2039 = load i32, i32* %tout1, align 4, !dbg !1107
  %shr187 = lshr i32 %2039, 16, !dbg !1107
  %and188 = and i32 %shr187, 255, !dbg !1107
  %conv189 = trunc i32 %and188 to i8, !dbg !1107
  %2040 = load i8*, i8** %iv, align 8, !dbg !1107
  %incdec.ptr190 = getelementptr inbounds i8, i8* %2040, i32 1, !dbg !1107
  store i8* %incdec.ptr190, i8** %iv, align 8, !dbg !1107
  store i8 %conv189, i8* %2040, align 1, !dbg !1107
  %2041 = load i32, i32* %tout1, align 4, !dbg !1107
  %shr191 = lshr i32 %2041, 24, !dbg !1107
  %and192 = and i32 %shr191, 255, !dbg !1107
  %conv193 = trunc i32 %and192 to i8, !dbg !1107
  %2042 = load i8*, i8** %iv, align 8, !dbg !1107
  %incdec.ptr194 = getelementptr inbounds i8, i8* %2042, i32 1, !dbg !1107
  store i8* %incdec.ptr194, i8** %iv, align 8, !dbg !1107
  store i8 %conv193, i8* %2042, align 1, !dbg !1107
  br label %if.end408, !dbg !1108

if.else:                                          ; preds = %entry
  %2043 = load i8*, i8** %iv, align 8, !dbg !1109
  %incdec.ptr195 = getelementptr inbounds i8, i8* %2043, i32 1, !dbg !1109
  store i8* %incdec.ptr195, i8** %iv, align 8, !dbg !1109
  %2044 = load i8, i8* %2043, align 1, !dbg !1109
  %conv196 = zext i8 %2044 to i32, !dbg !1109
  store i32 %conv196, i32* %xor0, align 4, !dbg !1109
  %2045 = load i8*, i8** %iv, align 8, !dbg !1109
  %incdec.ptr197 = getelementptr inbounds i8, i8* %2045, i32 1, !dbg !1109
  store i8* %incdec.ptr197, i8** %iv, align 8, !dbg !1109
  %2046 = load i8, i8* %2045, align 1, !dbg !1109
  %conv198 = zext i8 %2046 to i32, !dbg !1109
  %shl199 = shl i32 %conv198, 8, !dbg !1109
  %2047 = load i32, i32* %xor0, align 4, !dbg !1109
  %or200 = or i32 %2047, %shl199, !dbg !1109
  store i32 %or200, i32* %xor0, align 4, !dbg !1109
  %2048 = load i8*, i8** %iv, align 8, !dbg !1109
  %incdec.ptr201 = getelementptr inbounds i8, i8* %2048, i32 1, !dbg !1109
  store i8* %incdec.ptr201, i8** %iv, align 8, !dbg !1109
  %2049 = load i8, i8* %2048, align 1, !dbg !1109
  %conv202 = zext i8 %2049 to i32, !dbg !1109
  %shl203 = shl i32 %conv202, 16, !dbg !1109
  %2050 = load i32, i32* %xor0, align 4, !dbg !1109
  %or204 = or i32 %2050, %shl203, !dbg !1109
  store i32 %or204, i32* %xor0, align 4, !dbg !1109
  %2051 = load i8*, i8** %iv, align 8, !dbg !1109
  %incdec.ptr205 = getelementptr inbounds i8, i8* %2051, i32 1, !dbg !1109
  store i8* %incdec.ptr205, i8** %iv, align 8, !dbg !1109
  %2052 = load i8, i8* %2051, align 1, !dbg !1109
  %conv206 = zext i8 %2052 to i32, !dbg !1109
  %shl207 = shl i32 %conv206, 24, !dbg !1109
  %2053 = load i32, i32* %xor0, align 4, !dbg !1109
  %or208 = or i32 %2053, %shl207, !dbg !1109
  store i32 %or208, i32* %xor0, align 4, !dbg !1109
  %2054 = load i8*, i8** %iv, align 8, !dbg !1110
  %incdec.ptr209 = getelementptr inbounds i8, i8* %2054, i32 1, !dbg !1110
  store i8* %incdec.ptr209, i8** %iv, align 8, !dbg !1110
  %2055 = load i8, i8* %2054, align 1, !dbg !1110
  %conv210 = zext i8 %2055 to i32, !dbg !1110
  store i32 %conv210, i32* %xor1, align 4, !dbg !1110
  %2056 = load i8*, i8** %iv, align 8, !dbg !1110
  %incdec.ptr211 = getelementptr inbounds i8, i8* %2056, i32 1, !dbg !1110
  store i8* %incdec.ptr211, i8** %iv, align 8, !dbg !1110
  %2057 = load i8, i8* %2056, align 1, !dbg !1110
  %conv212 = zext i8 %2057 to i32, !dbg !1110
  %shl213 = shl i32 %conv212, 8, !dbg !1110
  %2058 = load i32, i32* %xor1, align 4, !dbg !1110
  %or214 = or i32 %2058, %shl213, !dbg !1110
  store i32 %or214, i32* %xor1, align 4, !dbg !1110
  %2059 = load i8*, i8** %iv, align 8, !dbg !1110
  %incdec.ptr215 = getelementptr inbounds i8, i8* %2059, i32 1, !dbg !1110
  store i8* %incdec.ptr215, i8** %iv, align 8, !dbg !1110
  %2060 = load i8, i8* %2059, align 1, !dbg !1110
  %conv216 = zext i8 %2060 to i32, !dbg !1110
  %shl217 = shl i32 %conv216, 16, !dbg !1110
  %2061 = load i32, i32* %xor1, align 4, !dbg !1110
  %or218 = or i32 %2061, %shl217, !dbg !1110
  store i32 %or218, i32* %xor1, align 4, !dbg !1110
  %2062 = load i8*, i8** %iv, align 8, !dbg !1110
  %incdec.ptr219 = getelementptr inbounds i8, i8* %2062, i32 1, !dbg !1110
  store i8* %incdec.ptr219, i8** %iv, align 8, !dbg !1110
  %2063 = load i8, i8* %2062, align 1, !dbg !1110
  %conv220 = zext i8 %2063 to i32, !dbg !1110
  %shl221 = shl i32 %conv220, 24, !dbg !1110
  %2064 = load i32, i32* %xor1, align 4, !dbg !1110
  %or222 = or i32 %2064, %shl221, !dbg !1110
  store i32 %or222, i32* %xor1, align 4, !dbg !1110
  %2065 = load i64, i64* %l, align 8, !dbg !1111
  %sub223 = sub nsw i64 %2065, 8, !dbg !1111
  store i64 %sub223, i64* %l, align 8, !dbg !1111
  br label %for.cond224, !dbg !1112

for.cond224:                                      ; preds = %for.inc293, %if.else
  %2066 = load i64, i64* %l, align 8, !dbg !1113
  %cmp225 = icmp sge i64 %2066, 0, !dbg !1114
  br i1 %cmp225, label %for.body227, label %for.end295, !dbg !1115

for.body227:                                      ; preds = %for.cond224
  %2067 = load i8*, i8** %in.addr, align 8, !dbg !1116
  %incdec.ptr228 = getelementptr inbounds i8, i8* %2067, i32 1, !dbg !1116
  store i8* %incdec.ptr228, i8** %in.addr, align 8, !dbg !1116
  %2068 = load i8, i8* %2067, align 1, !dbg !1116
  %conv229 = zext i8 %2068 to i32, !dbg !1116
  store i32 %conv229, i32* %tin0, align 4, !dbg !1116
  %2069 = load i8*, i8** %in.addr, align 8, !dbg !1116
  %incdec.ptr230 = getelementptr inbounds i8, i8* %2069, i32 1, !dbg !1116
  store i8* %incdec.ptr230, i8** %in.addr, align 8, !dbg !1116
  %2070 = load i8, i8* %2069, align 1, !dbg !1116
  %conv231 = zext i8 %2070 to i32, !dbg !1116
  %shl232 = shl i32 %conv231, 8, !dbg !1116
  %2071 = load i32, i32* %tin0, align 4, !dbg !1116
  %or233 = or i32 %2071, %shl232, !dbg !1116
  store i32 %or233, i32* %tin0, align 4, !dbg !1116
  %2072 = load i8*, i8** %in.addr, align 8, !dbg !1116
  %incdec.ptr234 = getelementptr inbounds i8, i8* %2072, i32 1, !dbg !1116
  store i8* %incdec.ptr234, i8** %in.addr, align 8, !dbg !1116
  %2073 = load i8, i8* %2072, align 1, !dbg !1116
  %conv235 = zext i8 %2073 to i32, !dbg !1116
  %shl236 = shl i32 %conv235, 16, !dbg !1116
  %2074 = load i32, i32* %tin0, align 4, !dbg !1116
  %or237 = or i32 %2074, %shl236, !dbg !1116
  store i32 %or237, i32* %tin0, align 4, !dbg !1116
  %2075 = load i8*, i8** %in.addr, align 8, !dbg !1116
  %incdec.ptr238 = getelementptr inbounds i8, i8* %2075, i32 1, !dbg !1116
  store i8* %incdec.ptr238, i8** %in.addr, align 8, !dbg !1116
  %2076 = load i8, i8* %2075, align 1, !dbg !1116
  %conv239 = zext i8 %2076 to i32, !dbg !1116
  %shl240 = shl i32 %conv239, 24, !dbg !1116
  %2077 = load i32, i32* %tin0, align 4, !dbg !1116
  %or241 = or i32 %2077, %shl240, !dbg !1116
  store i32 %or241, i32* %tin0, align 4, !dbg !1116
  %2078 = load i32, i32* %tin0, align 4, !dbg !1117
  %arrayidx242 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1118
  store i32 %2078, i32* %arrayidx242, align 4, !dbg !1119
  %2079 = load i8*, i8** %in.addr, align 8, !dbg !1120
  %incdec.ptr243 = getelementptr inbounds i8, i8* %2079, i32 1, !dbg !1120
  store i8* %incdec.ptr243, i8** %in.addr, align 8, !dbg !1120
  %2080 = load i8, i8* %2079, align 1, !dbg !1120
  %conv244 = zext i8 %2080 to i32, !dbg !1120
  store i32 %conv244, i32* %tin1, align 4, !dbg !1120
  %2081 = load i8*, i8** %in.addr, align 8, !dbg !1120
  %incdec.ptr245 = getelementptr inbounds i8, i8* %2081, i32 1, !dbg !1120
  store i8* %incdec.ptr245, i8** %in.addr, align 8, !dbg !1120
  %2082 = load i8, i8* %2081, align 1, !dbg !1120
  %conv246 = zext i8 %2082 to i32, !dbg !1120
  %shl247 = shl i32 %conv246, 8, !dbg !1120
  %2083 = load i32, i32* %tin1, align 4, !dbg !1120
  %or248 = or i32 %2083, %shl247, !dbg !1120
  store i32 %or248, i32* %tin1, align 4, !dbg !1120
  %2084 = load i8*, i8** %in.addr, align 8, !dbg !1120
  %incdec.ptr249 = getelementptr inbounds i8, i8* %2084, i32 1, !dbg !1120
  store i8* %incdec.ptr249, i8** %in.addr, align 8, !dbg !1120
  %2085 = load i8, i8* %2084, align 1, !dbg !1120
  %conv250 = zext i8 %2085 to i32, !dbg !1120
  %shl251 = shl i32 %conv250, 16, !dbg !1120
  %2086 = load i32, i32* %tin1, align 4, !dbg !1120
  %or252 = or i32 %2086, %shl251, !dbg !1120
  store i32 %or252, i32* %tin1, align 4, !dbg !1120
  %2087 = load i8*, i8** %in.addr, align 8, !dbg !1120
  %incdec.ptr253 = getelementptr inbounds i8, i8* %2087, i32 1, !dbg !1120
  store i8* %incdec.ptr253, i8** %in.addr, align 8, !dbg !1120
  %2088 = load i8, i8* %2087, align 1, !dbg !1120
  %conv254 = zext i8 %2088 to i32, !dbg !1120
  %shl255 = shl i32 %conv254, 24, !dbg !1120
  %2089 = load i32, i32* %tin1, align 4, !dbg !1120
  %or256 = or i32 %2089, %shl255, !dbg !1120
  store i32 %or256, i32* %tin1, align 4, !dbg !1120
  %2090 = load i32, i32* %tin1, align 4, !dbg !1121
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1122
  store i32 %2090, i32* %arrayidx257, align 4, !dbg !1123
  %arraydecay258 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1124
  %2091 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8, !dbg !1125
  store i32* %arraydecay258, i32** %data.addr.i1937, align 8
  store %struct.DES_ks* %2091, %struct.DES_ks** %ks.addr.i1938, align 8
  store i32 0, i32* %enc.addr.i1939, align 4
  %2092 = load i32*, i32** %data.addr.i1937, align 8, !dbg !1126
  %2093 = load i32, i32* %2092, align 4, !dbg !1126
  store i32 %2093, i32* %r.i1941, align 4, !dbg !1127
  %2094 = load i32*, i32** %data.addr.i1937, align 8, !dbg !1128
  %arrayidx1.i2019 = getelementptr inbounds i32, i32* %2094, i64 1, !dbg !1128
  %2095 = load i32, i32* %arrayidx1.i2019, align 4, !dbg !1128
  store i32 %2095, i32* %l.i1940, align 4, !dbg !1129
  %2096 = load i32, i32* %l.i1940, align 4, !dbg !741
  %shr.i2020 = lshr i32 %2096, 4, !dbg !741
  %2097 = load i32, i32* %r.i1941, align 4, !dbg !741
  %xor.i2021 = xor i32 %shr.i2020, %2097, !dbg !741
  %conv.i2022 = zext i32 %xor.i2021 to i64, !dbg !741
  %and.i2023 = and i64 %conv.i2022, 252645135, !dbg !741
  %conv2.i2024 = trunc i64 %and.i2023 to i32, !dbg !741
  store i32 %conv2.i2024, i32* %tt.i1945, align 4, !dbg !741
  %2098 = load i32, i32* %tt.i1945, align 4, !dbg !741
  %2099 = load i32, i32* %r.i1941, align 4, !dbg !741
  %xor3.i2025 = xor i32 %2099, %2098, !dbg !741
  store i32 %xor3.i2025, i32* %r.i1941, align 4, !dbg !741
  %2100 = load i32, i32* %tt.i1945, align 4, !dbg !741
  %shl.i2026 = shl i32 %2100, 4, !dbg !741
  %2101 = load i32, i32* %l.i1940, align 4, !dbg !741
  %xor4.i2027 = xor i32 %2101, %shl.i2026, !dbg !741
  store i32 %xor4.i2027, i32* %l.i1940, align 4, !dbg !741
  %2102 = load i32, i32* %r.i1941, align 4, !dbg !741
  %shr5.i2028 = lshr i32 %2102, 16, !dbg !741
  %2103 = load i32, i32* %l.i1940, align 4, !dbg !741
  %xor6.i2029 = xor i32 %shr5.i2028, %2103, !dbg !741
  %conv7.i2030 = zext i32 %xor6.i2029 to i64, !dbg !741
  %and8.i2031 = and i64 %conv7.i2030, 65535, !dbg !741
  %conv9.i2032 = trunc i64 %and8.i2031 to i32, !dbg !741
  store i32 %conv9.i2032, i32* %tt.i1945, align 4, !dbg !741
  %2104 = load i32, i32* %tt.i1945, align 4, !dbg !741
  %2105 = load i32, i32* %l.i1940, align 4, !dbg !741
  %xor10.i2033 = xor i32 %2105, %2104, !dbg !741
  store i32 %xor10.i2033, i32* %l.i1940, align 4, !dbg !741
  %2106 = load i32, i32* %tt.i1945, align 4, !dbg !741
  %shl11.i2034 = shl i32 %2106, 16, !dbg !741
  %2107 = load i32, i32* %r.i1941, align 4, !dbg !741
  %xor12.i2035 = xor i32 %2107, %shl11.i2034, !dbg !741
  store i32 %xor12.i2035, i32* %r.i1941, align 4, !dbg !741
  %2108 = load i32, i32* %l.i1940, align 4, !dbg !741
  %shr13.i2036 = lshr i32 %2108, 2, !dbg !741
  %2109 = load i32, i32* %r.i1941, align 4, !dbg !741
  %xor14.i2037 = xor i32 %shr13.i2036, %2109, !dbg !741
  %conv15.i2038 = zext i32 %xor14.i2037 to i64, !dbg !741
  %and16.i2039 = and i64 %conv15.i2038, 858993459, !dbg !741
  %conv17.i2040 = trunc i64 %and16.i2039 to i32, !dbg !741
  store i32 %conv17.i2040, i32* %tt.i1945, align 4, !dbg !741
  %2110 = load i32, i32* %tt.i1945, align 4, !dbg !741
  %2111 = load i32, i32* %r.i1941, align 4, !dbg !741
  %xor18.i2041 = xor i32 %2111, %2110, !dbg !741
  store i32 %xor18.i2041, i32* %r.i1941, align 4, !dbg !741
  %2112 = load i32, i32* %tt.i1945, align 4, !dbg !741
  %shl19.i2042 = shl i32 %2112, 2, !dbg !741
  %2113 = load i32, i32* %l.i1940, align 4, !dbg !741
  %xor20.i2043 = xor i32 %2113, %shl19.i2042, !dbg !741
  store i32 %xor20.i2043, i32* %l.i1940, align 4, !dbg !741
  %2114 = load i32, i32* %r.i1941, align 4, !dbg !741
  %shr21.i2044 = lshr i32 %2114, 8, !dbg !741
  %2115 = load i32, i32* %l.i1940, align 4, !dbg !741
  %xor22.i2045 = xor i32 %shr21.i2044, %2115, !dbg !741
  %conv23.i2046 = zext i32 %xor22.i2045 to i64, !dbg !741
  %and24.i2047 = and i64 %conv23.i2046, 16711935, !dbg !741
  %conv25.i2048 = trunc i64 %and24.i2047 to i32, !dbg !741
  store i32 %conv25.i2048, i32* %tt.i1945, align 4, !dbg !741
  %2116 = load i32, i32* %tt.i1945, align 4, !dbg !741
  %2117 = load i32, i32* %l.i1940, align 4, !dbg !741
  %xor26.i2049 = xor i32 %2117, %2116, !dbg !741
  store i32 %xor26.i2049, i32* %l.i1940, align 4, !dbg !741
  %2118 = load i32, i32* %tt.i1945, align 4, !dbg !741
  %shl27.i2050 = shl i32 %2118, 8, !dbg !741
  %2119 = load i32, i32* %r.i1941, align 4, !dbg !741
  %xor28.i2051 = xor i32 %2119, %shl27.i2050, !dbg !741
  store i32 %xor28.i2051, i32* %r.i1941, align 4, !dbg !741
  %2120 = load i32, i32* %l.i1940, align 4, !dbg !741
  %shr29.i2052 = lshr i32 %2120, 1, !dbg !741
  %2121 = load i32, i32* %r.i1941, align 4, !dbg !741
  %xor30.i2053 = xor i32 %shr29.i2052, %2121, !dbg !741
  %conv31.i2054 = zext i32 %xor30.i2053 to i64, !dbg !741
  %and32.i2055 = and i64 %conv31.i2054, 1431655765, !dbg !741
  %conv33.i2056 = trunc i64 %and32.i2055 to i32, !dbg !741
  store i32 %conv33.i2056, i32* %tt.i1945, align 4, !dbg !741
  %2122 = load i32, i32* %tt.i1945, align 4, !dbg !741
  %2123 = load i32, i32* %r.i1941, align 4, !dbg !741
  %xor34.i2057 = xor i32 %2123, %2122, !dbg !741
  store i32 %xor34.i2057, i32* %r.i1941, align 4, !dbg !741
  %2124 = load i32, i32* %tt.i1945, align 4, !dbg !741
  %shl35.i2058 = shl i32 %2124, 1, !dbg !741
  %2125 = load i32, i32* %l.i1940, align 4, !dbg !741
  %xor36.i2059 = xor i32 %2125, %shl35.i2058, !dbg !741
  store i32 %xor36.i2059, i32* %l.i1940, align 4, !dbg !741
  %2126 = load i32, i32* %r.i1941, align 4, !dbg !742
  %2127 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %2126) #5, !dbg !742, !srcloc !70
  store i32 %2127, i32* %ret.i1946, align 4, !dbg !742
  %2128 = load i32, i32* %ret.i1946, align 4, !dbg !742
  store i32 %2128, i32* %tmp.i1947, align 4, !dbg !742
  %2129 = load i32, i32* %tmp.i1947, align 4, !dbg !742
  %conv37.i2060 = zext i32 %2129 to i64, !dbg !1130
  %and38.i2061 = and i64 %conv37.i2060, 4294967295, !dbg !1131
  %conv39.i2062 = trunc i64 %and38.i2061 to i32, !dbg !1130
  store i32 %conv39.i2062, i32* %r.i1941, align 4, !dbg !1132
  %2130 = load i32, i32* %l.i1940, align 4, !dbg !743
  %2131 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %2130) #5, !dbg !743, !srcloc !77
  store i32 %2131, i32* %ret40.i1948, align 4, !dbg !743
  %2132 = load i32, i32* %ret40.i1948, align 4, !dbg !743
  store i32 %2132, i32* %tmp41.i1949, align 4, !dbg !743
  %2133 = load i32, i32* %tmp41.i1949, align 4, !dbg !743
  %conv42.i2063 = zext i32 %2133 to i64, !dbg !1133
  %and43.i2064 = and i64 %conv42.i2063, 4294967295, !dbg !1134
  %conv44.i2065 = trunc i64 %and43.i2064 to i32, !dbg !1133
  store i32 %conv44.i2065, i32* %l.i1940, align 4, !dbg !1135
  %2134 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i1938, align 8, !dbg !1136
  %ks45.i2066 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %2134, i32 0, i32 0, !dbg !1137
  %arraydecay.i2067 = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i2066, i64 0, i64 0, !dbg !1138
  %deslong.i2068 = bitcast %union.anon* %arraydecay.i2067 to [2 x i32]*, !dbg !1138
  %arraydecay46.i2069 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i2068, i64 0, i64 0, !dbg !1136
  store i32* %arraydecay46.i2069, i32** %s.i1944, align 8, !dbg !1139
  %2135 = load i32, i32* %enc.addr.i1939, align 4, !dbg !1140
  %tobool.i2070 = icmp ne i32 %2135, 0, !dbg !1140
  br i1 %tobool.i2070, label %if.then.i2742, label %if.else.i3414, !dbg !1141

if.then.i2742:                                    ; preds = %for.body227
  %2136 = load i32, i32* %r.i1941, align 4, !dbg !1142
  %2137 = load i32*, i32** %s.i1944, align 8, !dbg !1142
  %2138 = load i32, i32* %2137, align 4, !dbg !1142
  %xor48.i2071 = xor i32 %2136, %2138, !dbg !1142
  store i32 %xor48.i2071, i32* %u.i1943, align 4, !dbg !1142
  %2139 = load i32, i32* %r.i1941, align 4, !dbg !1142
  %2140 = load i32*, i32** %s.i1944, align 8, !dbg !1142
  %arrayidx49.i2072 = getelementptr inbounds i32, i32* %2140, i64 1, !dbg !1142
  %2141 = load i32, i32* %arrayidx49.i2072, align 4, !dbg !1142
  %xor50.i2073 = xor i32 %2139, %2141, !dbg !1142
  store i32 %xor50.i2073, i32* %t.i1942, align 4, !dbg !1142
  %2142 = load i32, i32* %t.i1942, align 4, !dbg !744
  %2143 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2142) #5, !dbg !744, !srcloc !94
  store i32 %2143, i32* %ret51.i1950, align 4, !dbg !744
  %2144 = load i32, i32* %ret51.i1950, align 4, !dbg !744
  store i32 %2144, i32* %tmp52.i1951, align 4, !dbg !744
  %2145 = load i32, i32* %tmp52.i1951, align 4, !dbg !744
  store i32 %2145, i32* %t.i1942, align 4, !dbg !1142
  %2146 = load i32, i32* %u.i1943, align 4, !dbg !1142
  %shr53.i2074 = lshr i32 %2146, 2, !dbg !1142
  %and54.i2075 = and i32 %shr53.i2074, 63, !dbg !1142
  %idxprom.i2076 = zext i32 %and54.i2075 to i64, !dbg !1142
  %arrayidx55.i2077 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i2076, !dbg !1142
  %2147 = load i32, i32* %arrayidx55.i2077, align 4, !dbg !1142
  %2148 = load i32, i32* %u.i1943, align 4, !dbg !1142
  %shr56.i2078 = lshr i32 %2148, 10, !dbg !1142
  %and57.i2079 = and i32 %shr56.i2078, 63, !dbg !1142
  %idxprom58.i2080 = zext i32 %and57.i2079 to i64, !dbg !1142
  %arrayidx59.i2081 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i2080, !dbg !1142
  %2149 = load i32, i32* %arrayidx59.i2081, align 4, !dbg !1142
  %xor60.i2082 = xor i32 %2147, %2149, !dbg !1142
  %2150 = load i32, i32* %u.i1943, align 4, !dbg !1142
  %shr61.i2083 = lshr i32 %2150, 18, !dbg !1142
  %and62.i2084 = and i32 %shr61.i2083, 63, !dbg !1142
  %idxprom63.i2085 = zext i32 %and62.i2084 to i64, !dbg !1142
  %arrayidx64.i2086 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i2085, !dbg !1142
  %2151 = load i32, i32* %arrayidx64.i2086, align 4, !dbg !1142
  %xor65.i2087 = xor i32 %xor60.i2082, %2151, !dbg !1142
  %2152 = load i32, i32* %u.i1943, align 4, !dbg !1142
  %shr66.i2088 = lshr i32 %2152, 26, !dbg !1142
  %idxprom68.i2089 = zext i32 %shr66.i2088 to i64, !dbg !1142
  %arrayidx69.i2090 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i2089, !dbg !1142
  %2153 = load i32, i32* %arrayidx69.i2090, align 4, !dbg !1142
  %xor70.i2091 = xor i32 %xor65.i2087, %2153, !dbg !1142
  %2154 = load i32, i32* %t.i1942, align 4, !dbg !1142
  %shr71.i2092 = lshr i32 %2154, 2, !dbg !1142
  %and72.i2093 = and i32 %shr71.i2092, 63, !dbg !1142
  %idxprom73.i2094 = zext i32 %and72.i2093 to i64, !dbg !1142
  %arrayidx74.i2095 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i2094, !dbg !1142
  %2155 = load i32, i32* %arrayidx74.i2095, align 4, !dbg !1142
  %xor75.i2096 = xor i32 %xor70.i2091, %2155, !dbg !1142
  %2156 = load i32, i32* %t.i1942, align 4, !dbg !1142
  %shr76.i2097 = lshr i32 %2156, 10, !dbg !1142
  %and77.i2098 = and i32 %shr76.i2097, 63, !dbg !1142
  %idxprom78.i2099 = zext i32 %and77.i2098 to i64, !dbg !1142
  %arrayidx79.i2100 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i2099, !dbg !1142
  %2157 = load i32, i32* %arrayidx79.i2100, align 4, !dbg !1142
  %xor80.i2101 = xor i32 %xor75.i2096, %2157, !dbg !1142
  %2158 = load i32, i32* %t.i1942, align 4, !dbg !1142
  %shr81.i2102 = lshr i32 %2158, 18, !dbg !1142
  %and82.i2103 = and i32 %shr81.i2102, 63, !dbg !1142
  %idxprom83.i2104 = zext i32 %and82.i2103 to i64, !dbg !1142
  %arrayidx84.i2105 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i2104, !dbg !1142
  %2159 = load i32, i32* %arrayidx84.i2105, align 4, !dbg !1142
  %xor85.i2106 = xor i32 %xor80.i2101, %2159, !dbg !1142
  %2160 = load i32, i32* %t.i1942, align 4, !dbg !1142
  %shr86.i2107 = lshr i32 %2160, 26, !dbg !1142
  %idxprom88.i2108 = zext i32 %shr86.i2107 to i64, !dbg !1142
  %arrayidx89.i2109 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i2108, !dbg !1142
  %2161 = load i32, i32* %arrayidx89.i2109, align 4, !dbg !1142
  %xor90.i2110 = xor i32 %xor85.i2106, %2161, !dbg !1142
  %2162 = load i32, i32* %l.i1940, align 4, !dbg !1142
  %xor91.i2111 = xor i32 %2162, %xor90.i2110, !dbg !1142
  store i32 %xor91.i2111, i32* %l.i1940, align 4, !dbg !1142
  %2163 = load i32, i32* %l.i1940, align 4, !dbg !1143
  %2164 = load i32*, i32** %s.i1944, align 8, !dbg !1143
  %arrayidx92.i2112 = getelementptr inbounds i32, i32* %2164, i64 2, !dbg !1143
  %2165 = load i32, i32* %arrayidx92.i2112, align 4, !dbg !1143
  %xor93.i2113 = xor i32 %2163, %2165, !dbg !1143
  store i32 %xor93.i2113, i32* %u.i1943, align 4, !dbg !1143
  %2166 = load i32, i32* %l.i1940, align 4, !dbg !1143
  %2167 = load i32*, i32** %s.i1944, align 8, !dbg !1143
  %arrayidx94.i2114 = getelementptr inbounds i32, i32* %2167, i64 3, !dbg !1143
  %2168 = load i32, i32* %arrayidx94.i2114, align 4, !dbg !1143
  %xor95.i2115 = xor i32 %2166, %2168, !dbg !1143
  store i32 %xor95.i2115, i32* %t.i1942, align 4, !dbg !1143
  %2169 = load i32, i32* %t.i1942, align 4, !dbg !745
  %2170 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2169) #5, !dbg !745, !srcloc !100
  store i32 %2170, i32* %ret96.i1952, align 4, !dbg !745
  %2171 = load i32, i32* %ret96.i1952, align 4, !dbg !745
  store i32 %2171, i32* %tmp97.i1953, align 4, !dbg !745
  %2172 = load i32, i32* %tmp97.i1953, align 4, !dbg !745
  store i32 %2172, i32* %t.i1942, align 4, !dbg !1143
  %2173 = load i32, i32* %u.i1943, align 4, !dbg !1143
  %shr98.i2116 = lshr i32 %2173, 2, !dbg !1143
  %and99.i2117 = and i32 %shr98.i2116, 63, !dbg !1143
  %idxprom100.i2118 = zext i32 %and99.i2117 to i64, !dbg !1143
  %arrayidx101.i2119 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i2118, !dbg !1143
  %2174 = load i32, i32* %arrayidx101.i2119, align 4, !dbg !1143
  %2175 = load i32, i32* %u.i1943, align 4, !dbg !1143
  %shr102.i2120 = lshr i32 %2175, 10, !dbg !1143
  %and103.i2121 = and i32 %shr102.i2120, 63, !dbg !1143
  %idxprom104.i2122 = zext i32 %and103.i2121 to i64, !dbg !1143
  %arrayidx105.i2123 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i2122, !dbg !1143
  %2176 = load i32, i32* %arrayidx105.i2123, align 4, !dbg !1143
  %xor106.i2124 = xor i32 %2174, %2176, !dbg !1143
  %2177 = load i32, i32* %u.i1943, align 4, !dbg !1143
  %shr107.i2125 = lshr i32 %2177, 18, !dbg !1143
  %and108.i2126 = and i32 %shr107.i2125, 63, !dbg !1143
  %idxprom109.i2127 = zext i32 %and108.i2126 to i64, !dbg !1143
  %arrayidx110.i2128 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i2127, !dbg !1143
  %2178 = load i32, i32* %arrayidx110.i2128, align 4, !dbg !1143
  %xor111.i2129 = xor i32 %xor106.i2124, %2178, !dbg !1143
  %2179 = load i32, i32* %u.i1943, align 4, !dbg !1143
  %shr112.i2130 = lshr i32 %2179, 26, !dbg !1143
  %idxprom114.i2131 = zext i32 %shr112.i2130 to i64, !dbg !1143
  %arrayidx115.i2132 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i2131, !dbg !1143
  %2180 = load i32, i32* %arrayidx115.i2132, align 4, !dbg !1143
  %xor116.i2133 = xor i32 %xor111.i2129, %2180, !dbg !1143
  %2181 = load i32, i32* %t.i1942, align 4, !dbg !1143
  %shr117.i2134 = lshr i32 %2181, 2, !dbg !1143
  %and118.i2135 = and i32 %shr117.i2134, 63, !dbg !1143
  %idxprom119.i2136 = zext i32 %and118.i2135 to i64, !dbg !1143
  %arrayidx120.i2137 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i2136, !dbg !1143
  %2182 = load i32, i32* %arrayidx120.i2137, align 4, !dbg !1143
  %xor121.i2138 = xor i32 %xor116.i2133, %2182, !dbg !1143
  %2183 = load i32, i32* %t.i1942, align 4, !dbg !1143
  %shr122.i2139 = lshr i32 %2183, 10, !dbg !1143
  %and123.i2140 = and i32 %shr122.i2139, 63, !dbg !1143
  %idxprom124.i2141 = zext i32 %and123.i2140 to i64, !dbg !1143
  %arrayidx125.i2142 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i2141, !dbg !1143
  %2184 = load i32, i32* %arrayidx125.i2142, align 4, !dbg !1143
  %xor126.i2143 = xor i32 %xor121.i2138, %2184, !dbg !1143
  %2185 = load i32, i32* %t.i1942, align 4, !dbg !1143
  %shr127.i2144 = lshr i32 %2185, 18, !dbg !1143
  %and128.i2145 = and i32 %shr127.i2144, 63, !dbg !1143
  %idxprom129.i2146 = zext i32 %and128.i2145 to i64, !dbg !1143
  %arrayidx130.i2147 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i2146, !dbg !1143
  %2186 = load i32, i32* %arrayidx130.i2147, align 4, !dbg !1143
  %xor131.i2148 = xor i32 %xor126.i2143, %2186, !dbg !1143
  %2187 = load i32, i32* %t.i1942, align 4, !dbg !1143
  %shr132.i2149 = lshr i32 %2187, 26, !dbg !1143
  %idxprom134.i2150 = zext i32 %shr132.i2149 to i64, !dbg !1143
  %arrayidx135.i2151 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i2150, !dbg !1143
  %2188 = load i32, i32* %arrayidx135.i2151, align 4, !dbg !1143
  %xor136.i2152 = xor i32 %xor131.i2148, %2188, !dbg !1143
  %2189 = load i32, i32* %r.i1941, align 4, !dbg !1143
  %xor137.i2153 = xor i32 %2189, %xor136.i2152, !dbg !1143
  store i32 %xor137.i2153, i32* %r.i1941, align 4, !dbg !1143
  %2190 = load i32, i32* %r.i1941, align 4, !dbg !1144
  %2191 = load i32*, i32** %s.i1944, align 8, !dbg !1144
  %arrayidx138.i2154 = getelementptr inbounds i32, i32* %2191, i64 4, !dbg !1144
  %2192 = load i32, i32* %arrayidx138.i2154, align 4, !dbg !1144
  %xor139.i2155 = xor i32 %2190, %2192, !dbg !1144
  store i32 %xor139.i2155, i32* %u.i1943, align 4, !dbg !1144
  %2193 = load i32, i32* %r.i1941, align 4, !dbg !1144
  %2194 = load i32*, i32** %s.i1944, align 8, !dbg !1144
  %arrayidx140.i2156 = getelementptr inbounds i32, i32* %2194, i64 5, !dbg !1144
  %2195 = load i32, i32* %arrayidx140.i2156, align 4, !dbg !1144
  %xor141.i2157 = xor i32 %2193, %2195, !dbg !1144
  store i32 %xor141.i2157, i32* %t.i1942, align 4, !dbg !1144
  %2196 = load i32, i32* %t.i1942, align 4, !dbg !746
  %2197 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2196) #5, !dbg !746, !srcloc !106
  store i32 %2197, i32* %ret142.i1954, align 4, !dbg !746
  %2198 = load i32, i32* %ret142.i1954, align 4, !dbg !746
  store i32 %2198, i32* %tmp143.i1955, align 4, !dbg !746
  %2199 = load i32, i32* %tmp143.i1955, align 4, !dbg !746
  store i32 %2199, i32* %t.i1942, align 4, !dbg !1144
  %2200 = load i32, i32* %u.i1943, align 4, !dbg !1144
  %shr144.i2158 = lshr i32 %2200, 2, !dbg !1144
  %and145.i2159 = and i32 %shr144.i2158, 63, !dbg !1144
  %idxprom146.i2160 = zext i32 %and145.i2159 to i64, !dbg !1144
  %arrayidx147.i2161 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i2160, !dbg !1144
  %2201 = load i32, i32* %arrayidx147.i2161, align 4, !dbg !1144
  %2202 = load i32, i32* %u.i1943, align 4, !dbg !1144
  %shr148.i2162 = lshr i32 %2202, 10, !dbg !1144
  %and149.i2163 = and i32 %shr148.i2162, 63, !dbg !1144
  %idxprom150.i2164 = zext i32 %and149.i2163 to i64, !dbg !1144
  %arrayidx151.i2165 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i2164, !dbg !1144
  %2203 = load i32, i32* %arrayidx151.i2165, align 4, !dbg !1144
  %xor152.i2166 = xor i32 %2201, %2203, !dbg !1144
  %2204 = load i32, i32* %u.i1943, align 4, !dbg !1144
  %shr153.i2167 = lshr i32 %2204, 18, !dbg !1144
  %and154.i2168 = and i32 %shr153.i2167, 63, !dbg !1144
  %idxprom155.i2169 = zext i32 %and154.i2168 to i64, !dbg !1144
  %arrayidx156.i2170 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i2169, !dbg !1144
  %2205 = load i32, i32* %arrayidx156.i2170, align 4, !dbg !1144
  %xor157.i2171 = xor i32 %xor152.i2166, %2205, !dbg !1144
  %2206 = load i32, i32* %u.i1943, align 4, !dbg !1144
  %shr158.i2172 = lshr i32 %2206, 26, !dbg !1144
  %idxprom160.i2173 = zext i32 %shr158.i2172 to i64, !dbg !1144
  %arrayidx161.i2174 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i2173, !dbg !1144
  %2207 = load i32, i32* %arrayidx161.i2174, align 4, !dbg !1144
  %xor162.i2175 = xor i32 %xor157.i2171, %2207, !dbg !1144
  %2208 = load i32, i32* %t.i1942, align 4, !dbg !1144
  %shr163.i2176 = lshr i32 %2208, 2, !dbg !1144
  %and164.i2177 = and i32 %shr163.i2176, 63, !dbg !1144
  %idxprom165.i2178 = zext i32 %and164.i2177 to i64, !dbg !1144
  %arrayidx166.i2179 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i2178, !dbg !1144
  %2209 = load i32, i32* %arrayidx166.i2179, align 4, !dbg !1144
  %xor167.i2180 = xor i32 %xor162.i2175, %2209, !dbg !1144
  %2210 = load i32, i32* %t.i1942, align 4, !dbg !1144
  %shr168.i2181 = lshr i32 %2210, 10, !dbg !1144
  %and169.i2182 = and i32 %shr168.i2181, 63, !dbg !1144
  %idxprom170.i2183 = zext i32 %and169.i2182 to i64, !dbg !1144
  %arrayidx171.i2184 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i2183, !dbg !1144
  %2211 = load i32, i32* %arrayidx171.i2184, align 4, !dbg !1144
  %xor172.i2185 = xor i32 %xor167.i2180, %2211, !dbg !1144
  %2212 = load i32, i32* %t.i1942, align 4, !dbg !1144
  %shr173.i2186 = lshr i32 %2212, 18, !dbg !1144
  %and174.i2187 = and i32 %shr173.i2186, 63, !dbg !1144
  %idxprom175.i2188 = zext i32 %and174.i2187 to i64, !dbg !1144
  %arrayidx176.i2189 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i2188, !dbg !1144
  %2213 = load i32, i32* %arrayidx176.i2189, align 4, !dbg !1144
  %xor177.i2190 = xor i32 %xor172.i2185, %2213, !dbg !1144
  %2214 = load i32, i32* %t.i1942, align 4, !dbg !1144
  %shr178.i2191 = lshr i32 %2214, 26, !dbg !1144
  %idxprom180.i2192 = zext i32 %shr178.i2191 to i64, !dbg !1144
  %arrayidx181.i2193 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i2192, !dbg !1144
  %2215 = load i32, i32* %arrayidx181.i2193, align 4, !dbg !1144
  %xor182.i2194 = xor i32 %xor177.i2190, %2215, !dbg !1144
  %2216 = load i32, i32* %l.i1940, align 4, !dbg !1144
  %xor183.i2195 = xor i32 %2216, %xor182.i2194, !dbg !1144
  store i32 %xor183.i2195, i32* %l.i1940, align 4, !dbg !1144
  %2217 = load i32, i32* %l.i1940, align 4, !dbg !1145
  %2218 = load i32*, i32** %s.i1944, align 8, !dbg !1145
  %arrayidx184.i2196 = getelementptr inbounds i32, i32* %2218, i64 6, !dbg !1145
  %2219 = load i32, i32* %arrayidx184.i2196, align 4, !dbg !1145
  %xor185.i2197 = xor i32 %2217, %2219, !dbg !1145
  store i32 %xor185.i2197, i32* %u.i1943, align 4, !dbg !1145
  %2220 = load i32, i32* %l.i1940, align 4, !dbg !1145
  %2221 = load i32*, i32** %s.i1944, align 8, !dbg !1145
  %arrayidx186.i2198 = getelementptr inbounds i32, i32* %2221, i64 7, !dbg !1145
  %2222 = load i32, i32* %arrayidx186.i2198, align 4, !dbg !1145
  %xor187.i2199 = xor i32 %2220, %2222, !dbg !1145
  store i32 %xor187.i2199, i32* %t.i1942, align 4, !dbg !1145
  %2223 = load i32, i32* %t.i1942, align 4, !dbg !747
  %2224 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2223) #5, !dbg !747, !srcloc !112
  store i32 %2224, i32* %ret188.i1956, align 4, !dbg !747
  %2225 = load i32, i32* %ret188.i1956, align 4, !dbg !747
  store i32 %2225, i32* %tmp189.i1957, align 4, !dbg !747
  %2226 = load i32, i32* %tmp189.i1957, align 4, !dbg !747
  store i32 %2226, i32* %t.i1942, align 4, !dbg !1145
  %2227 = load i32, i32* %u.i1943, align 4, !dbg !1145
  %shr190.i2200 = lshr i32 %2227, 2, !dbg !1145
  %and191.i2201 = and i32 %shr190.i2200, 63, !dbg !1145
  %idxprom192.i2202 = zext i32 %and191.i2201 to i64, !dbg !1145
  %arrayidx193.i2203 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i2202, !dbg !1145
  %2228 = load i32, i32* %arrayidx193.i2203, align 4, !dbg !1145
  %2229 = load i32, i32* %u.i1943, align 4, !dbg !1145
  %shr194.i2204 = lshr i32 %2229, 10, !dbg !1145
  %and195.i2205 = and i32 %shr194.i2204, 63, !dbg !1145
  %idxprom196.i2206 = zext i32 %and195.i2205 to i64, !dbg !1145
  %arrayidx197.i2207 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i2206, !dbg !1145
  %2230 = load i32, i32* %arrayidx197.i2207, align 4, !dbg !1145
  %xor198.i2208 = xor i32 %2228, %2230, !dbg !1145
  %2231 = load i32, i32* %u.i1943, align 4, !dbg !1145
  %shr199.i2209 = lshr i32 %2231, 18, !dbg !1145
  %and200.i2210 = and i32 %shr199.i2209, 63, !dbg !1145
  %idxprom201.i2211 = zext i32 %and200.i2210 to i64, !dbg !1145
  %arrayidx202.i2212 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i2211, !dbg !1145
  %2232 = load i32, i32* %arrayidx202.i2212, align 4, !dbg !1145
  %xor203.i2213 = xor i32 %xor198.i2208, %2232, !dbg !1145
  %2233 = load i32, i32* %u.i1943, align 4, !dbg !1145
  %shr204.i2214 = lshr i32 %2233, 26, !dbg !1145
  %idxprom206.i2215 = zext i32 %shr204.i2214 to i64, !dbg !1145
  %arrayidx207.i2216 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i2215, !dbg !1145
  %2234 = load i32, i32* %arrayidx207.i2216, align 4, !dbg !1145
  %xor208.i2217 = xor i32 %xor203.i2213, %2234, !dbg !1145
  %2235 = load i32, i32* %t.i1942, align 4, !dbg !1145
  %shr209.i2218 = lshr i32 %2235, 2, !dbg !1145
  %and210.i2219 = and i32 %shr209.i2218, 63, !dbg !1145
  %idxprom211.i2220 = zext i32 %and210.i2219 to i64, !dbg !1145
  %arrayidx212.i2221 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i2220, !dbg !1145
  %2236 = load i32, i32* %arrayidx212.i2221, align 4, !dbg !1145
  %xor213.i2222 = xor i32 %xor208.i2217, %2236, !dbg !1145
  %2237 = load i32, i32* %t.i1942, align 4, !dbg !1145
  %shr214.i2223 = lshr i32 %2237, 10, !dbg !1145
  %and215.i2224 = and i32 %shr214.i2223, 63, !dbg !1145
  %idxprom216.i2225 = zext i32 %and215.i2224 to i64, !dbg !1145
  %arrayidx217.i2226 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i2225, !dbg !1145
  %2238 = load i32, i32* %arrayidx217.i2226, align 4, !dbg !1145
  %xor218.i2227 = xor i32 %xor213.i2222, %2238, !dbg !1145
  %2239 = load i32, i32* %t.i1942, align 4, !dbg !1145
  %shr219.i2228 = lshr i32 %2239, 18, !dbg !1145
  %and220.i2229 = and i32 %shr219.i2228, 63, !dbg !1145
  %idxprom221.i2230 = zext i32 %and220.i2229 to i64, !dbg !1145
  %arrayidx222.i2231 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i2230, !dbg !1145
  %2240 = load i32, i32* %arrayidx222.i2231, align 4, !dbg !1145
  %xor223.i2232 = xor i32 %xor218.i2227, %2240, !dbg !1145
  %2241 = load i32, i32* %t.i1942, align 4, !dbg !1145
  %shr224.i2233 = lshr i32 %2241, 26, !dbg !1145
  %idxprom226.i2234 = zext i32 %shr224.i2233 to i64, !dbg !1145
  %arrayidx227.i2235 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i2234, !dbg !1145
  %2242 = load i32, i32* %arrayidx227.i2235, align 4, !dbg !1145
  %xor228.i2236 = xor i32 %xor223.i2232, %2242, !dbg !1145
  %2243 = load i32, i32* %r.i1941, align 4, !dbg !1145
  %xor229.i2237 = xor i32 %2243, %xor228.i2236, !dbg !1145
  store i32 %xor229.i2237, i32* %r.i1941, align 4, !dbg !1145
  %2244 = load i32, i32* %r.i1941, align 4, !dbg !1146
  %2245 = load i32*, i32** %s.i1944, align 8, !dbg !1146
  %arrayidx230.i2238 = getelementptr inbounds i32, i32* %2245, i64 8, !dbg !1146
  %2246 = load i32, i32* %arrayidx230.i2238, align 4, !dbg !1146
  %xor231.i2239 = xor i32 %2244, %2246, !dbg !1146
  store i32 %xor231.i2239, i32* %u.i1943, align 4, !dbg !1146
  %2247 = load i32, i32* %r.i1941, align 4, !dbg !1146
  %2248 = load i32*, i32** %s.i1944, align 8, !dbg !1146
  %arrayidx232.i2240 = getelementptr inbounds i32, i32* %2248, i64 9, !dbg !1146
  %2249 = load i32, i32* %arrayidx232.i2240, align 4, !dbg !1146
  %xor233.i2241 = xor i32 %2247, %2249, !dbg !1146
  store i32 %xor233.i2241, i32* %t.i1942, align 4, !dbg !1146
  %2250 = load i32, i32* %t.i1942, align 4, !dbg !748
  %2251 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2250) #5, !dbg !748, !srcloc !118
  store i32 %2251, i32* %ret234.i1958, align 4, !dbg !748
  %2252 = load i32, i32* %ret234.i1958, align 4, !dbg !748
  store i32 %2252, i32* %tmp235.i1959, align 4, !dbg !748
  %2253 = load i32, i32* %tmp235.i1959, align 4, !dbg !748
  store i32 %2253, i32* %t.i1942, align 4, !dbg !1146
  %2254 = load i32, i32* %u.i1943, align 4, !dbg !1146
  %shr236.i2242 = lshr i32 %2254, 2, !dbg !1146
  %and237.i2243 = and i32 %shr236.i2242, 63, !dbg !1146
  %idxprom238.i2244 = zext i32 %and237.i2243 to i64, !dbg !1146
  %arrayidx239.i2245 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i2244, !dbg !1146
  %2255 = load i32, i32* %arrayidx239.i2245, align 4, !dbg !1146
  %2256 = load i32, i32* %u.i1943, align 4, !dbg !1146
  %shr240.i2246 = lshr i32 %2256, 10, !dbg !1146
  %and241.i2247 = and i32 %shr240.i2246, 63, !dbg !1146
  %idxprom242.i2248 = zext i32 %and241.i2247 to i64, !dbg !1146
  %arrayidx243.i2249 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i2248, !dbg !1146
  %2257 = load i32, i32* %arrayidx243.i2249, align 4, !dbg !1146
  %xor244.i2250 = xor i32 %2255, %2257, !dbg !1146
  %2258 = load i32, i32* %u.i1943, align 4, !dbg !1146
  %shr245.i2251 = lshr i32 %2258, 18, !dbg !1146
  %and246.i2252 = and i32 %shr245.i2251, 63, !dbg !1146
  %idxprom247.i2253 = zext i32 %and246.i2252 to i64, !dbg !1146
  %arrayidx248.i2254 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i2253, !dbg !1146
  %2259 = load i32, i32* %arrayidx248.i2254, align 4, !dbg !1146
  %xor249.i2255 = xor i32 %xor244.i2250, %2259, !dbg !1146
  %2260 = load i32, i32* %u.i1943, align 4, !dbg !1146
  %shr250.i2256 = lshr i32 %2260, 26, !dbg !1146
  %idxprom252.i2257 = zext i32 %shr250.i2256 to i64, !dbg !1146
  %arrayidx253.i2258 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i2257, !dbg !1146
  %2261 = load i32, i32* %arrayidx253.i2258, align 4, !dbg !1146
  %xor254.i2259 = xor i32 %xor249.i2255, %2261, !dbg !1146
  %2262 = load i32, i32* %t.i1942, align 4, !dbg !1146
  %shr255.i2260 = lshr i32 %2262, 2, !dbg !1146
  %and256.i2261 = and i32 %shr255.i2260, 63, !dbg !1146
  %idxprom257.i2262 = zext i32 %and256.i2261 to i64, !dbg !1146
  %arrayidx258.i2263 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i2262, !dbg !1146
  %2263 = load i32, i32* %arrayidx258.i2263, align 4, !dbg !1146
  %xor259.i2264 = xor i32 %xor254.i2259, %2263, !dbg !1146
  %2264 = load i32, i32* %t.i1942, align 4, !dbg !1146
  %shr260.i2265 = lshr i32 %2264, 10, !dbg !1146
  %and261.i2266 = and i32 %shr260.i2265, 63, !dbg !1146
  %idxprom262.i2267 = zext i32 %and261.i2266 to i64, !dbg !1146
  %arrayidx263.i2268 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i2267, !dbg !1146
  %2265 = load i32, i32* %arrayidx263.i2268, align 4, !dbg !1146
  %xor264.i2269 = xor i32 %xor259.i2264, %2265, !dbg !1146
  %2266 = load i32, i32* %t.i1942, align 4, !dbg !1146
  %shr265.i2270 = lshr i32 %2266, 18, !dbg !1146
  %and266.i2271 = and i32 %shr265.i2270, 63, !dbg !1146
  %idxprom267.i2272 = zext i32 %and266.i2271 to i64, !dbg !1146
  %arrayidx268.i2273 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i2272, !dbg !1146
  %2267 = load i32, i32* %arrayidx268.i2273, align 4, !dbg !1146
  %xor269.i2274 = xor i32 %xor264.i2269, %2267, !dbg !1146
  %2268 = load i32, i32* %t.i1942, align 4, !dbg !1146
  %shr270.i2275 = lshr i32 %2268, 26, !dbg !1146
  %idxprom272.i2276 = zext i32 %shr270.i2275 to i64, !dbg !1146
  %arrayidx273.i2277 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i2276, !dbg !1146
  %2269 = load i32, i32* %arrayidx273.i2277, align 4, !dbg !1146
  %xor274.i2278 = xor i32 %xor269.i2274, %2269, !dbg !1146
  %2270 = load i32, i32* %l.i1940, align 4, !dbg !1146
  %xor275.i2279 = xor i32 %2270, %xor274.i2278, !dbg !1146
  store i32 %xor275.i2279, i32* %l.i1940, align 4, !dbg !1146
  %2271 = load i32, i32* %l.i1940, align 4, !dbg !1147
  %2272 = load i32*, i32** %s.i1944, align 8, !dbg !1147
  %arrayidx276.i2280 = getelementptr inbounds i32, i32* %2272, i64 10, !dbg !1147
  %2273 = load i32, i32* %arrayidx276.i2280, align 4, !dbg !1147
  %xor277.i2281 = xor i32 %2271, %2273, !dbg !1147
  store i32 %xor277.i2281, i32* %u.i1943, align 4, !dbg !1147
  %2274 = load i32, i32* %l.i1940, align 4, !dbg !1147
  %2275 = load i32*, i32** %s.i1944, align 8, !dbg !1147
  %arrayidx278.i2282 = getelementptr inbounds i32, i32* %2275, i64 11, !dbg !1147
  %2276 = load i32, i32* %arrayidx278.i2282, align 4, !dbg !1147
  %xor279.i2283 = xor i32 %2274, %2276, !dbg !1147
  store i32 %xor279.i2283, i32* %t.i1942, align 4, !dbg !1147
  %2277 = load i32, i32* %t.i1942, align 4, !dbg !749
  %2278 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2277) #5, !dbg !749, !srcloc !124
  store i32 %2278, i32* %ret280.i1960, align 4, !dbg !749
  %2279 = load i32, i32* %ret280.i1960, align 4, !dbg !749
  store i32 %2279, i32* %tmp281.i1961, align 4, !dbg !749
  %2280 = load i32, i32* %tmp281.i1961, align 4, !dbg !749
  store i32 %2280, i32* %t.i1942, align 4, !dbg !1147
  %2281 = load i32, i32* %u.i1943, align 4, !dbg !1147
  %shr282.i2284 = lshr i32 %2281, 2, !dbg !1147
  %and283.i2285 = and i32 %shr282.i2284, 63, !dbg !1147
  %idxprom284.i2286 = zext i32 %and283.i2285 to i64, !dbg !1147
  %arrayidx285.i2287 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i2286, !dbg !1147
  %2282 = load i32, i32* %arrayidx285.i2287, align 4, !dbg !1147
  %2283 = load i32, i32* %u.i1943, align 4, !dbg !1147
  %shr286.i2288 = lshr i32 %2283, 10, !dbg !1147
  %and287.i2289 = and i32 %shr286.i2288, 63, !dbg !1147
  %idxprom288.i2290 = zext i32 %and287.i2289 to i64, !dbg !1147
  %arrayidx289.i2291 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i2290, !dbg !1147
  %2284 = load i32, i32* %arrayidx289.i2291, align 4, !dbg !1147
  %xor290.i2292 = xor i32 %2282, %2284, !dbg !1147
  %2285 = load i32, i32* %u.i1943, align 4, !dbg !1147
  %shr291.i2293 = lshr i32 %2285, 18, !dbg !1147
  %and292.i2294 = and i32 %shr291.i2293, 63, !dbg !1147
  %idxprom293.i2295 = zext i32 %and292.i2294 to i64, !dbg !1147
  %arrayidx294.i2296 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i2295, !dbg !1147
  %2286 = load i32, i32* %arrayidx294.i2296, align 4, !dbg !1147
  %xor295.i2297 = xor i32 %xor290.i2292, %2286, !dbg !1147
  %2287 = load i32, i32* %u.i1943, align 4, !dbg !1147
  %shr296.i2298 = lshr i32 %2287, 26, !dbg !1147
  %idxprom298.i2299 = zext i32 %shr296.i2298 to i64, !dbg !1147
  %arrayidx299.i2300 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i2299, !dbg !1147
  %2288 = load i32, i32* %arrayidx299.i2300, align 4, !dbg !1147
  %xor300.i2301 = xor i32 %xor295.i2297, %2288, !dbg !1147
  %2289 = load i32, i32* %t.i1942, align 4, !dbg !1147
  %shr301.i2302 = lshr i32 %2289, 2, !dbg !1147
  %and302.i2303 = and i32 %shr301.i2302, 63, !dbg !1147
  %idxprom303.i2304 = zext i32 %and302.i2303 to i64, !dbg !1147
  %arrayidx304.i2305 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i2304, !dbg !1147
  %2290 = load i32, i32* %arrayidx304.i2305, align 4, !dbg !1147
  %xor305.i2306 = xor i32 %xor300.i2301, %2290, !dbg !1147
  %2291 = load i32, i32* %t.i1942, align 4, !dbg !1147
  %shr306.i2307 = lshr i32 %2291, 10, !dbg !1147
  %and307.i2308 = and i32 %shr306.i2307, 63, !dbg !1147
  %idxprom308.i2309 = zext i32 %and307.i2308 to i64, !dbg !1147
  %arrayidx309.i2310 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i2309, !dbg !1147
  %2292 = load i32, i32* %arrayidx309.i2310, align 4, !dbg !1147
  %xor310.i2311 = xor i32 %xor305.i2306, %2292, !dbg !1147
  %2293 = load i32, i32* %t.i1942, align 4, !dbg !1147
  %shr311.i2312 = lshr i32 %2293, 18, !dbg !1147
  %and312.i2313 = and i32 %shr311.i2312, 63, !dbg !1147
  %idxprom313.i2314 = zext i32 %and312.i2313 to i64, !dbg !1147
  %arrayidx314.i2315 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i2314, !dbg !1147
  %2294 = load i32, i32* %arrayidx314.i2315, align 4, !dbg !1147
  %xor315.i2316 = xor i32 %xor310.i2311, %2294, !dbg !1147
  %2295 = load i32, i32* %t.i1942, align 4, !dbg !1147
  %shr316.i2317 = lshr i32 %2295, 26, !dbg !1147
  %idxprom318.i2318 = zext i32 %shr316.i2317 to i64, !dbg !1147
  %arrayidx319.i2319 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i2318, !dbg !1147
  %2296 = load i32, i32* %arrayidx319.i2319, align 4, !dbg !1147
  %xor320.i2320 = xor i32 %xor315.i2316, %2296, !dbg !1147
  %2297 = load i32, i32* %r.i1941, align 4, !dbg !1147
  %xor321.i2321 = xor i32 %2297, %xor320.i2320, !dbg !1147
  store i32 %xor321.i2321, i32* %r.i1941, align 4, !dbg !1147
  %2298 = load i32, i32* %r.i1941, align 4, !dbg !1148
  %2299 = load i32*, i32** %s.i1944, align 8, !dbg !1148
  %arrayidx322.i2322 = getelementptr inbounds i32, i32* %2299, i64 12, !dbg !1148
  %2300 = load i32, i32* %arrayidx322.i2322, align 4, !dbg !1148
  %xor323.i2323 = xor i32 %2298, %2300, !dbg !1148
  store i32 %xor323.i2323, i32* %u.i1943, align 4, !dbg !1148
  %2301 = load i32, i32* %r.i1941, align 4, !dbg !1148
  %2302 = load i32*, i32** %s.i1944, align 8, !dbg !1148
  %arrayidx324.i2324 = getelementptr inbounds i32, i32* %2302, i64 13, !dbg !1148
  %2303 = load i32, i32* %arrayidx324.i2324, align 4, !dbg !1148
  %xor325.i2325 = xor i32 %2301, %2303, !dbg !1148
  store i32 %xor325.i2325, i32* %t.i1942, align 4, !dbg !1148
  %2304 = load i32, i32* %t.i1942, align 4, !dbg !750
  %2305 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2304) #5, !dbg !750, !srcloc !130
  store i32 %2305, i32* %ret326.i1962, align 4, !dbg !750
  %2306 = load i32, i32* %ret326.i1962, align 4, !dbg !750
  store i32 %2306, i32* %tmp327.i1963, align 4, !dbg !750
  %2307 = load i32, i32* %tmp327.i1963, align 4, !dbg !750
  store i32 %2307, i32* %t.i1942, align 4, !dbg !1148
  %2308 = load i32, i32* %u.i1943, align 4, !dbg !1148
  %shr328.i2326 = lshr i32 %2308, 2, !dbg !1148
  %and329.i2327 = and i32 %shr328.i2326, 63, !dbg !1148
  %idxprom330.i2328 = zext i32 %and329.i2327 to i64, !dbg !1148
  %arrayidx331.i2329 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i2328, !dbg !1148
  %2309 = load i32, i32* %arrayidx331.i2329, align 4, !dbg !1148
  %2310 = load i32, i32* %u.i1943, align 4, !dbg !1148
  %shr332.i2330 = lshr i32 %2310, 10, !dbg !1148
  %and333.i2331 = and i32 %shr332.i2330, 63, !dbg !1148
  %idxprom334.i2332 = zext i32 %and333.i2331 to i64, !dbg !1148
  %arrayidx335.i2333 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i2332, !dbg !1148
  %2311 = load i32, i32* %arrayidx335.i2333, align 4, !dbg !1148
  %xor336.i2334 = xor i32 %2309, %2311, !dbg !1148
  %2312 = load i32, i32* %u.i1943, align 4, !dbg !1148
  %shr337.i2335 = lshr i32 %2312, 18, !dbg !1148
  %and338.i2336 = and i32 %shr337.i2335, 63, !dbg !1148
  %idxprom339.i2337 = zext i32 %and338.i2336 to i64, !dbg !1148
  %arrayidx340.i2338 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i2337, !dbg !1148
  %2313 = load i32, i32* %arrayidx340.i2338, align 4, !dbg !1148
  %xor341.i2339 = xor i32 %xor336.i2334, %2313, !dbg !1148
  %2314 = load i32, i32* %u.i1943, align 4, !dbg !1148
  %shr342.i2340 = lshr i32 %2314, 26, !dbg !1148
  %idxprom344.i2341 = zext i32 %shr342.i2340 to i64, !dbg !1148
  %arrayidx345.i2342 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i2341, !dbg !1148
  %2315 = load i32, i32* %arrayidx345.i2342, align 4, !dbg !1148
  %xor346.i2343 = xor i32 %xor341.i2339, %2315, !dbg !1148
  %2316 = load i32, i32* %t.i1942, align 4, !dbg !1148
  %shr347.i2344 = lshr i32 %2316, 2, !dbg !1148
  %and348.i2345 = and i32 %shr347.i2344, 63, !dbg !1148
  %idxprom349.i2346 = zext i32 %and348.i2345 to i64, !dbg !1148
  %arrayidx350.i2347 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i2346, !dbg !1148
  %2317 = load i32, i32* %arrayidx350.i2347, align 4, !dbg !1148
  %xor351.i2348 = xor i32 %xor346.i2343, %2317, !dbg !1148
  %2318 = load i32, i32* %t.i1942, align 4, !dbg !1148
  %shr352.i2349 = lshr i32 %2318, 10, !dbg !1148
  %and353.i2350 = and i32 %shr352.i2349, 63, !dbg !1148
  %idxprom354.i2351 = zext i32 %and353.i2350 to i64, !dbg !1148
  %arrayidx355.i2352 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i2351, !dbg !1148
  %2319 = load i32, i32* %arrayidx355.i2352, align 4, !dbg !1148
  %xor356.i2353 = xor i32 %xor351.i2348, %2319, !dbg !1148
  %2320 = load i32, i32* %t.i1942, align 4, !dbg !1148
  %shr357.i2354 = lshr i32 %2320, 18, !dbg !1148
  %and358.i2355 = and i32 %shr357.i2354, 63, !dbg !1148
  %idxprom359.i2356 = zext i32 %and358.i2355 to i64, !dbg !1148
  %arrayidx360.i2357 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i2356, !dbg !1148
  %2321 = load i32, i32* %arrayidx360.i2357, align 4, !dbg !1148
  %xor361.i2358 = xor i32 %xor356.i2353, %2321, !dbg !1148
  %2322 = load i32, i32* %t.i1942, align 4, !dbg !1148
  %shr362.i2359 = lshr i32 %2322, 26, !dbg !1148
  %idxprom364.i2360 = zext i32 %shr362.i2359 to i64, !dbg !1148
  %arrayidx365.i2361 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i2360, !dbg !1148
  %2323 = load i32, i32* %arrayidx365.i2361, align 4, !dbg !1148
  %xor366.i2362 = xor i32 %xor361.i2358, %2323, !dbg !1148
  %2324 = load i32, i32* %l.i1940, align 4, !dbg !1148
  %xor367.i2363 = xor i32 %2324, %xor366.i2362, !dbg !1148
  store i32 %xor367.i2363, i32* %l.i1940, align 4, !dbg !1148
  %2325 = load i32, i32* %l.i1940, align 4, !dbg !1149
  %2326 = load i32*, i32** %s.i1944, align 8, !dbg !1149
  %arrayidx368.i2364 = getelementptr inbounds i32, i32* %2326, i64 14, !dbg !1149
  %2327 = load i32, i32* %arrayidx368.i2364, align 4, !dbg !1149
  %xor369.i2365 = xor i32 %2325, %2327, !dbg !1149
  store i32 %xor369.i2365, i32* %u.i1943, align 4, !dbg !1149
  %2328 = load i32, i32* %l.i1940, align 4, !dbg !1149
  %2329 = load i32*, i32** %s.i1944, align 8, !dbg !1149
  %arrayidx370.i2366 = getelementptr inbounds i32, i32* %2329, i64 15, !dbg !1149
  %2330 = load i32, i32* %arrayidx370.i2366, align 4, !dbg !1149
  %xor371.i2367 = xor i32 %2328, %2330, !dbg !1149
  store i32 %xor371.i2367, i32* %t.i1942, align 4, !dbg !1149
  %2331 = load i32, i32* %t.i1942, align 4, !dbg !751
  %2332 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2331) #5, !dbg !751, !srcloc !136
  store i32 %2332, i32* %ret372.i1964, align 4, !dbg !751
  %2333 = load i32, i32* %ret372.i1964, align 4, !dbg !751
  store i32 %2333, i32* %tmp373.i1965, align 4, !dbg !751
  %2334 = load i32, i32* %tmp373.i1965, align 4, !dbg !751
  store i32 %2334, i32* %t.i1942, align 4, !dbg !1149
  %2335 = load i32, i32* %u.i1943, align 4, !dbg !1149
  %shr374.i2368 = lshr i32 %2335, 2, !dbg !1149
  %and375.i2369 = and i32 %shr374.i2368, 63, !dbg !1149
  %idxprom376.i2370 = zext i32 %and375.i2369 to i64, !dbg !1149
  %arrayidx377.i2371 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i2370, !dbg !1149
  %2336 = load i32, i32* %arrayidx377.i2371, align 4, !dbg !1149
  %2337 = load i32, i32* %u.i1943, align 4, !dbg !1149
  %shr378.i2372 = lshr i32 %2337, 10, !dbg !1149
  %and379.i2373 = and i32 %shr378.i2372, 63, !dbg !1149
  %idxprom380.i2374 = zext i32 %and379.i2373 to i64, !dbg !1149
  %arrayidx381.i2375 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i2374, !dbg !1149
  %2338 = load i32, i32* %arrayidx381.i2375, align 4, !dbg !1149
  %xor382.i2376 = xor i32 %2336, %2338, !dbg !1149
  %2339 = load i32, i32* %u.i1943, align 4, !dbg !1149
  %shr383.i2377 = lshr i32 %2339, 18, !dbg !1149
  %and384.i2378 = and i32 %shr383.i2377, 63, !dbg !1149
  %idxprom385.i2379 = zext i32 %and384.i2378 to i64, !dbg !1149
  %arrayidx386.i2380 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i2379, !dbg !1149
  %2340 = load i32, i32* %arrayidx386.i2380, align 4, !dbg !1149
  %xor387.i2381 = xor i32 %xor382.i2376, %2340, !dbg !1149
  %2341 = load i32, i32* %u.i1943, align 4, !dbg !1149
  %shr388.i2382 = lshr i32 %2341, 26, !dbg !1149
  %idxprom390.i2383 = zext i32 %shr388.i2382 to i64, !dbg !1149
  %arrayidx391.i2384 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i2383, !dbg !1149
  %2342 = load i32, i32* %arrayidx391.i2384, align 4, !dbg !1149
  %xor392.i2385 = xor i32 %xor387.i2381, %2342, !dbg !1149
  %2343 = load i32, i32* %t.i1942, align 4, !dbg !1149
  %shr393.i2386 = lshr i32 %2343, 2, !dbg !1149
  %and394.i2387 = and i32 %shr393.i2386, 63, !dbg !1149
  %idxprom395.i2388 = zext i32 %and394.i2387 to i64, !dbg !1149
  %arrayidx396.i2389 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i2388, !dbg !1149
  %2344 = load i32, i32* %arrayidx396.i2389, align 4, !dbg !1149
  %xor397.i2390 = xor i32 %xor392.i2385, %2344, !dbg !1149
  %2345 = load i32, i32* %t.i1942, align 4, !dbg !1149
  %shr398.i2391 = lshr i32 %2345, 10, !dbg !1149
  %and399.i2392 = and i32 %shr398.i2391, 63, !dbg !1149
  %idxprom400.i2393 = zext i32 %and399.i2392 to i64, !dbg !1149
  %arrayidx401.i2394 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i2393, !dbg !1149
  %2346 = load i32, i32* %arrayidx401.i2394, align 4, !dbg !1149
  %xor402.i2395 = xor i32 %xor397.i2390, %2346, !dbg !1149
  %2347 = load i32, i32* %t.i1942, align 4, !dbg !1149
  %shr403.i2396 = lshr i32 %2347, 18, !dbg !1149
  %and404.i2397 = and i32 %shr403.i2396, 63, !dbg !1149
  %idxprom405.i2398 = zext i32 %and404.i2397 to i64, !dbg !1149
  %arrayidx406.i2399 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i2398, !dbg !1149
  %2348 = load i32, i32* %arrayidx406.i2399, align 4, !dbg !1149
  %xor407.i2400 = xor i32 %xor402.i2395, %2348, !dbg !1149
  %2349 = load i32, i32* %t.i1942, align 4, !dbg !1149
  %shr408.i2401 = lshr i32 %2349, 26, !dbg !1149
  %idxprom410.i2402 = zext i32 %shr408.i2401 to i64, !dbg !1149
  %arrayidx411.i2403 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i2402, !dbg !1149
  %2350 = load i32, i32* %arrayidx411.i2403, align 4, !dbg !1149
  %xor412.i2404 = xor i32 %xor407.i2400, %2350, !dbg !1149
  %2351 = load i32, i32* %r.i1941, align 4, !dbg !1149
  %xor413.i2405 = xor i32 %2351, %xor412.i2404, !dbg !1149
  store i32 %xor413.i2405, i32* %r.i1941, align 4, !dbg !1149
  %2352 = load i32, i32* %r.i1941, align 4, !dbg !1150
  %2353 = load i32*, i32** %s.i1944, align 8, !dbg !1150
  %arrayidx414.i2406 = getelementptr inbounds i32, i32* %2353, i64 16, !dbg !1150
  %2354 = load i32, i32* %arrayidx414.i2406, align 4, !dbg !1150
  %xor415.i2407 = xor i32 %2352, %2354, !dbg !1150
  store i32 %xor415.i2407, i32* %u.i1943, align 4, !dbg !1150
  %2355 = load i32, i32* %r.i1941, align 4, !dbg !1150
  %2356 = load i32*, i32** %s.i1944, align 8, !dbg !1150
  %arrayidx416.i2408 = getelementptr inbounds i32, i32* %2356, i64 17, !dbg !1150
  %2357 = load i32, i32* %arrayidx416.i2408, align 4, !dbg !1150
  %xor417.i2409 = xor i32 %2355, %2357, !dbg !1150
  store i32 %xor417.i2409, i32* %t.i1942, align 4, !dbg !1150
  %2358 = load i32, i32* %t.i1942, align 4, !dbg !752
  %2359 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2358) #5, !dbg !752, !srcloc !142
  store i32 %2359, i32* %ret418.i1966, align 4, !dbg !752
  %2360 = load i32, i32* %ret418.i1966, align 4, !dbg !752
  store i32 %2360, i32* %tmp419.i1967, align 4, !dbg !752
  %2361 = load i32, i32* %tmp419.i1967, align 4, !dbg !752
  store i32 %2361, i32* %t.i1942, align 4, !dbg !1150
  %2362 = load i32, i32* %u.i1943, align 4, !dbg !1150
  %shr420.i2410 = lshr i32 %2362, 2, !dbg !1150
  %and421.i2411 = and i32 %shr420.i2410, 63, !dbg !1150
  %idxprom422.i2412 = zext i32 %and421.i2411 to i64, !dbg !1150
  %arrayidx423.i2413 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i2412, !dbg !1150
  %2363 = load i32, i32* %arrayidx423.i2413, align 4, !dbg !1150
  %2364 = load i32, i32* %u.i1943, align 4, !dbg !1150
  %shr424.i2414 = lshr i32 %2364, 10, !dbg !1150
  %and425.i2415 = and i32 %shr424.i2414, 63, !dbg !1150
  %idxprom426.i2416 = zext i32 %and425.i2415 to i64, !dbg !1150
  %arrayidx427.i2417 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i2416, !dbg !1150
  %2365 = load i32, i32* %arrayidx427.i2417, align 4, !dbg !1150
  %xor428.i2418 = xor i32 %2363, %2365, !dbg !1150
  %2366 = load i32, i32* %u.i1943, align 4, !dbg !1150
  %shr429.i2419 = lshr i32 %2366, 18, !dbg !1150
  %and430.i2420 = and i32 %shr429.i2419, 63, !dbg !1150
  %idxprom431.i2421 = zext i32 %and430.i2420 to i64, !dbg !1150
  %arrayidx432.i2422 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i2421, !dbg !1150
  %2367 = load i32, i32* %arrayidx432.i2422, align 4, !dbg !1150
  %xor433.i2423 = xor i32 %xor428.i2418, %2367, !dbg !1150
  %2368 = load i32, i32* %u.i1943, align 4, !dbg !1150
  %shr434.i2424 = lshr i32 %2368, 26, !dbg !1150
  %idxprom436.i2425 = zext i32 %shr434.i2424 to i64, !dbg !1150
  %arrayidx437.i2426 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i2425, !dbg !1150
  %2369 = load i32, i32* %arrayidx437.i2426, align 4, !dbg !1150
  %xor438.i2427 = xor i32 %xor433.i2423, %2369, !dbg !1150
  %2370 = load i32, i32* %t.i1942, align 4, !dbg !1150
  %shr439.i2428 = lshr i32 %2370, 2, !dbg !1150
  %and440.i2429 = and i32 %shr439.i2428, 63, !dbg !1150
  %idxprom441.i2430 = zext i32 %and440.i2429 to i64, !dbg !1150
  %arrayidx442.i2431 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i2430, !dbg !1150
  %2371 = load i32, i32* %arrayidx442.i2431, align 4, !dbg !1150
  %xor443.i2432 = xor i32 %xor438.i2427, %2371, !dbg !1150
  %2372 = load i32, i32* %t.i1942, align 4, !dbg !1150
  %shr444.i2433 = lshr i32 %2372, 10, !dbg !1150
  %and445.i2434 = and i32 %shr444.i2433, 63, !dbg !1150
  %idxprom446.i2435 = zext i32 %and445.i2434 to i64, !dbg !1150
  %arrayidx447.i2436 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i2435, !dbg !1150
  %2373 = load i32, i32* %arrayidx447.i2436, align 4, !dbg !1150
  %xor448.i2437 = xor i32 %xor443.i2432, %2373, !dbg !1150
  %2374 = load i32, i32* %t.i1942, align 4, !dbg !1150
  %shr449.i2438 = lshr i32 %2374, 18, !dbg !1150
  %and450.i2439 = and i32 %shr449.i2438, 63, !dbg !1150
  %idxprom451.i2440 = zext i32 %and450.i2439 to i64, !dbg !1150
  %arrayidx452.i2441 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i2440, !dbg !1150
  %2375 = load i32, i32* %arrayidx452.i2441, align 4, !dbg !1150
  %xor453.i2442 = xor i32 %xor448.i2437, %2375, !dbg !1150
  %2376 = load i32, i32* %t.i1942, align 4, !dbg !1150
  %shr454.i2443 = lshr i32 %2376, 26, !dbg !1150
  %idxprom456.i2444 = zext i32 %shr454.i2443 to i64, !dbg !1150
  %arrayidx457.i2445 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i2444, !dbg !1150
  %2377 = load i32, i32* %arrayidx457.i2445, align 4, !dbg !1150
  %xor458.i2446 = xor i32 %xor453.i2442, %2377, !dbg !1150
  %2378 = load i32, i32* %l.i1940, align 4, !dbg !1150
  %xor459.i2447 = xor i32 %2378, %xor458.i2446, !dbg !1150
  store i32 %xor459.i2447, i32* %l.i1940, align 4, !dbg !1150
  %2379 = load i32, i32* %l.i1940, align 4, !dbg !1151
  %2380 = load i32*, i32** %s.i1944, align 8, !dbg !1151
  %arrayidx460.i2448 = getelementptr inbounds i32, i32* %2380, i64 18, !dbg !1151
  %2381 = load i32, i32* %arrayidx460.i2448, align 4, !dbg !1151
  %xor461.i2449 = xor i32 %2379, %2381, !dbg !1151
  store i32 %xor461.i2449, i32* %u.i1943, align 4, !dbg !1151
  %2382 = load i32, i32* %l.i1940, align 4, !dbg !1151
  %2383 = load i32*, i32** %s.i1944, align 8, !dbg !1151
  %arrayidx462.i2450 = getelementptr inbounds i32, i32* %2383, i64 19, !dbg !1151
  %2384 = load i32, i32* %arrayidx462.i2450, align 4, !dbg !1151
  %xor463.i2451 = xor i32 %2382, %2384, !dbg !1151
  store i32 %xor463.i2451, i32* %t.i1942, align 4, !dbg !1151
  %2385 = load i32, i32* %t.i1942, align 4, !dbg !753
  %2386 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2385) #5, !dbg !753, !srcloc !148
  store i32 %2386, i32* %ret464.i1968, align 4, !dbg !753
  %2387 = load i32, i32* %ret464.i1968, align 4, !dbg !753
  store i32 %2387, i32* %tmp465.i1969, align 4, !dbg !753
  %2388 = load i32, i32* %tmp465.i1969, align 4, !dbg !753
  store i32 %2388, i32* %t.i1942, align 4, !dbg !1151
  %2389 = load i32, i32* %u.i1943, align 4, !dbg !1151
  %shr466.i2452 = lshr i32 %2389, 2, !dbg !1151
  %and467.i2453 = and i32 %shr466.i2452, 63, !dbg !1151
  %idxprom468.i2454 = zext i32 %and467.i2453 to i64, !dbg !1151
  %arrayidx469.i2455 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i2454, !dbg !1151
  %2390 = load i32, i32* %arrayidx469.i2455, align 4, !dbg !1151
  %2391 = load i32, i32* %u.i1943, align 4, !dbg !1151
  %shr470.i2456 = lshr i32 %2391, 10, !dbg !1151
  %and471.i2457 = and i32 %shr470.i2456, 63, !dbg !1151
  %idxprom472.i2458 = zext i32 %and471.i2457 to i64, !dbg !1151
  %arrayidx473.i2459 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i2458, !dbg !1151
  %2392 = load i32, i32* %arrayidx473.i2459, align 4, !dbg !1151
  %xor474.i2460 = xor i32 %2390, %2392, !dbg !1151
  %2393 = load i32, i32* %u.i1943, align 4, !dbg !1151
  %shr475.i2461 = lshr i32 %2393, 18, !dbg !1151
  %and476.i2462 = and i32 %shr475.i2461, 63, !dbg !1151
  %idxprom477.i2463 = zext i32 %and476.i2462 to i64, !dbg !1151
  %arrayidx478.i2464 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i2463, !dbg !1151
  %2394 = load i32, i32* %arrayidx478.i2464, align 4, !dbg !1151
  %xor479.i2465 = xor i32 %xor474.i2460, %2394, !dbg !1151
  %2395 = load i32, i32* %u.i1943, align 4, !dbg !1151
  %shr480.i2466 = lshr i32 %2395, 26, !dbg !1151
  %idxprom482.i2467 = zext i32 %shr480.i2466 to i64, !dbg !1151
  %arrayidx483.i2468 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i2467, !dbg !1151
  %2396 = load i32, i32* %arrayidx483.i2468, align 4, !dbg !1151
  %xor484.i2469 = xor i32 %xor479.i2465, %2396, !dbg !1151
  %2397 = load i32, i32* %t.i1942, align 4, !dbg !1151
  %shr485.i2470 = lshr i32 %2397, 2, !dbg !1151
  %and486.i2471 = and i32 %shr485.i2470, 63, !dbg !1151
  %idxprom487.i2472 = zext i32 %and486.i2471 to i64, !dbg !1151
  %arrayidx488.i2473 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i2472, !dbg !1151
  %2398 = load i32, i32* %arrayidx488.i2473, align 4, !dbg !1151
  %xor489.i2474 = xor i32 %xor484.i2469, %2398, !dbg !1151
  %2399 = load i32, i32* %t.i1942, align 4, !dbg !1151
  %shr490.i2475 = lshr i32 %2399, 10, !dbg !1151
  %and491.i2476 = and i32 %shr490.i2475, 63, !dbg !1151
  %idxprom492.i2477 = zext i32 %and491.i2476 to i64, !dbg !1151
  %arrayidx493.i2478 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i2477, !dbg !1151
  %2400 = load i32, i32* %arrayidx493.i2478, align 4, !dbg !1151
  %xor494.i2479 = xor i32 %xor489.i2474, %2400, !dbg !1151
  %2401 = load i32, i32* %t.i1942, align 4, !dbg !1151
  %shr495.i2480 = lshr i32 %2401, 18, !dbg !1151
  %and496.i2481 = and i32 %shr495.i2480, 63, !dbg !1151
  %idxprom497.i2482 = zext i32 %and496.i2481 to i64, !dbg !1151
  %arrayidx498.i2483 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i2482, !dbg !1151
  %2402 = load i32, i32* %arrayidx498.i2483, align 4, !dbg !1151
  %xor499.i2484 = xor i32 %xor494.i2479, %2402, !dbg !1151
  %2403 = load i32, i32* %t.i1942, align 4, !dbg !1151
  %shr500.i2485 = lshr i32 %2403, 26, !dbg !1151
  %idxprom502.i2486 = zext i32 %shr500.i2485 to i64, !dbg !1151
  %arrayidx503.i2487 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i2486, !dbg !1151
  %2404 = load i32, i32* %arrayidx503.i2487, align 4, !dbg !1151
  %xor504.i2488 = xor i32 %xor499.i2484, %2404, !dbg !1151
  %2405 = load i32, i32* %r.i1941, align 4, !dbg !1151
  %xor505.i2489 = xor i32 %2405, %xor504.i2488, !dbg !1151
  store i32 %xor505.i2489, i32* %r.i1941, align 4, !dbg !1151
  %2406 = load i32, i32* %r.i1941, align 4, !dbg !1152
  %2407 = load i32*, i32** %s.i1944, align 8, !dbg !1152
  %arrayidx506.i2490 = getelementptr inbounds i32, i32* %2407, i64 20, !dbg !1152
  %2408 = load i32, i32* %arrayidx506.i2490, align 4, !dbg !1152
  %xor507.i2491 = xor i32 %2406, %2408, !dbg !1152
  store i32 %xor507.i2491, i32* %u.i1943, align 4, !dbg !1152
  %2409 = load i32, i32* %r.i1941, align 4, !dbg !1152
  %2410 = load i32*, i32** %s.i1944, align 8, !dbg !1152
  %arrayidx508.i2492 = getelementptr inbounds i32, i32* %2410, i64 21, !dbg !1152
  %2411 = load i32, i32* %arrayidx508.i2492, align 4, !dbg !1152
  %xor509.i2493 = xor i32 %2409, %2411, !dbg !1152
  store i32 %xor509.i2493, i32* %t.i1942, align 4, !dbg !1152
  %2412 = load i32, i32* %t.i1942, align 4, !dbg !754
  %2413 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2412) #5, !dbg !754, !srcloc !154
  store i32 %2413, i32* %ret510.i1970, align 4, !dbg !754
  %2414 = load i32, i32* %ret510.i1970, align 4, !dbg !754
  store i32 %2414, i32* %tmp511.i1971, align 4, !dbg !754
  %2415 = load i32, i32* %tmp511.i1971, align 4, !dbg !754
  store i32 %2415, i32* %t.i1942, align 4, !dbg !1152
  %2416 = load i32, i32* %u.i1943, align 4, !dbg !1152
  %shr512.i2494 = lshr i32 %2416, 2, !dbg !1152
  %and513.i2495 = and i32 %shr512.i2494, 63, !dbg !1152
  %idxprom514.i2496 = zext i32 %and513.i2495 to i64, !dbg !1152
  %arrayidx515.i2497 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i2496, !dbg !1152
  %2417 = load i32, i32* %arrayidx515.i2497, align 4, !dbg !1152
  %2418 = load i32, i32* %u.i1943, align 4, !dbg !1152
  %shr516.i2498 = lshr i32 %2418, 10, !dbg !1152
  %and517.i2499 = and i32 %shr516.i2498, 63, !dbg !1152
  %idxprom518.i2500 = zext i32 %and517.i2499 to i64, !dbg !1152
  %arrayidx519.i2501 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i2500, !dbg !1152
  %2419 = load i32, i32* %arrayidx519.i2501, align 4, !dbg !1152
  %xor520.i2502 = xor i32 %2417, %2419, !dbg !1152
  %2420 = load i32, i32* %u.i1943, align 4, !dbg !1152
  %shr521.i2503 = lshr i32 %2420, 18, !dbg !1152
  %and522.i2504 = and i32 %shr521.i2503, 63, !dbg !1152
  %idxprom523.i2505 = zext i32 %and522.i2504 to i64, !dbg !1152
  %arrayidx524.i2506 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i2505, !dbg !1152
  %2421 = load i32, i32* %arrayidx524.i2506, align 4, !dbg !1152
  %xor525.i2507 = xor i32 %xor520.i2502, %2421, !dbg !1152
  %2422 = load i32, i32* %u.i1943, align 4, !dbg !1152
  %shr526.i2508 = lshr i32 %2422, 26, !dbg !1152
  %idxprom528.i2509 = zext i32 %shr526.i2508 to i64, !dbg !1152
  %arrayidx529.i2510 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i2509, !dbg !1152
  %2423 = load i32, i32* %arrayidx529.i2510, align 4, !dbg !1152
  %xor530.i2511 = xor i32 %xor525.i2507, %2423, !dbg !1152
  %2424 = load i32, i32* %t.i1942, align 4, !dbg !1152
  %shr531.i2512 = lshr i32 %2424, 2, !dbg !1152
  %and532.i2513 = and i32 %shr531.i2512, 63, !dbg !1152
  %idxprom533.i2514 = zext i32 %and532.i2513 to i64, !dbg !1152
  %arrayidx534.i2515 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i2514, !dbg !1152
  %2425 = load i32, i32* %arrayidx534.i2515, align 4, !dbg !1152
  %xor535.i2516 = xor i32 %xor530.i2511, %2425, !dbg !1152
  %2426 = load i32, i32* %t.i1942, align 4, !dbg !1152
  %shr536.i2517 = lshr i32 %2426, 10, !dbg !1152
  %and537.i2518 = and i32 %shr536.i2517, 63, !dbg !1152
  %idxprom538.i2519 = zext i32 %and537.i2518 to i64, !dbg !1152
  %arrayidx539.i2520 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i2519, !dbg !1152
  %2427 = load i32, i32* %arrayidx539.i2520, align 4, !dbg !1152
  %xor540.i2521 = xor i32 %xor535.i2516, %2427, !dbg !1152
  %2428 = load i32, i32* %t.i1942, align 4, !dbg !1152
  %shr541.i2522 = lshr i32 %2428, 18, !dbg !1152
  %and542.i2523 = and i32 %shr541.i2522, 63, !dbg !1152
  %idxprom543.i2524 = zext i32 %and542.i2523 to i64, !dbg !1152
  %arrayidx544.i2525 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i2524, !dbg !1152
  %2429 = load i32, i32* %arrayidx544.i2525, align 4, !dbg !1152
  %xor545.i2526 = xor i32 %xor540.i2521, %2429, !dbg !1152
  %2430 = load i32, i32* %t.i1942, align 4, !dbg !1152
  %shr546.i2527 = lshr i32 %2430, 26, !dbg !1152
  %idxprom548.i2528 = zext i32 %shr546.i2527 to i64, !dbg !1152
  %arrayidx549.i2529 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i2528, !dbg !1152
  %2431 = load i32, i32* %arrayidx549.i2529, align 4, !dbg !1152
  %xor550.i2530 = xor i32 %xor545.i2526, %2431, !dbg !1152
  %2432 = load i32, i32* %l.i1940, align 4, !dbg !1152
  %xor551.i2531 = xor i32 %2432, %xor550.i2530, !dbg !1152
  store i32 %xor551.i2531, i32* %l.i1940, align 4, !dbg !1152
  %2433 = load i32, i32* %l.i1940, align 4, !dbg !1153
  %2434 = load i32*, i32** %s.i1944, align 8, !dbg !1153
  %arrayidx552.i2532 = getelementptr inbounds i32, i32* %2434, i64 22, !dbg !1153
  %2435 = load i32, i32* %arrayidx552.i2532, align 4, !dbg !1153
  %xor553.i2533 = xor i32 %2433, %2435, !dbg !1153
  store i32 %xor553.i2533, i32* %u.i1943, align 4, !dbg !1153
  %2436 = load i32, i32* %l.i1940, align 4, !dbg !1153
  %2437 = load i32*, i32** %s.i1944, align 8, !dbg !1153
  %arrayidx554.i2534 = getelementptr inbounds i32, i32* %2437, i64 23, !dbg !1153
  %2438 = load i32, i32* %arrayidx554.i2534, align 4, !dbg !1153
  %xor555.i2535 = xor i32 %2436, %2438, !dbg !1153
  store i32 %xor555.i2535, i32* %t.i1942, align 4, !dbg !1153
  %2439 = load i32, i32* %t.i1942, align 4, !dbg !755
  %2440 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2439) #5, !dbg !755, !srcloc !160
  store i32 %2440, i32* %ret556.i1972, align 4, !dbg !755
  %2441 = load i32, i32* %ret556.i1972, align 4, !dbg !755
  store i32 %2441, i32* %tmp557.i1973, align 4, !dbg !755
  %2442 = load i32, i32* %tmp557.i1973, align 4, !dbg !755
  store i32 %2442, i32* %t.i1942, align 4, !dbg !1153
  %2443 = load i32, i32* %u.i1943, align 4, !dbg !1153
  %shr558.i2536 = lshr i32 %2443, 2, !dbg !1153
  %and559.i2537 = and i32 %shr558.i2536, 63, !dbg !1153
  %idxprom560.i2538 = zext i32 %and559.i2537 to i64, !dbg !1153
  %arrayidx561.i2539 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i2538, !dbg !1153
  %2444 = load i32, i32* %arrayidx561.i2539, align 4, !dbg !1153
  %2445 = load i32, i32* %u.i1943, align 4, !dbg !1153
  %shr562.i2540 = lshr i32 %2445, 10, !dbg !1153
  %and563.i2541 = and i32 %shr562.i2540, 63, !dbg !1153
  %idxprom564.i2542 = zext i32 %and563.i2541 to i64, !dbg !1153
  %arrayidx565.i2543 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i2542, !dbg !1153
  %2446 = load i32, i32* %arrayidx565.i2543, align 4, !dbg !1153
  %xor566.i2544 = xor i32 %2444, %2446, !dbg !1153
  %2447 = load i32, i32* %u.i1943, align 4, !dbg !1153
  %shr567.i2545 = lshr i32 %2447, 18, !dbg !1153
  %and568.i2546 = and i32 %shr567.i2545, 63, !dbg !1153
  %idxprom569.i2547 = zext i32 %and568.i2546 to i64, !dbg !1153
  %arrayidx570.i2548 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i2547, !dbg !1153
  %2448 = load i32, i32* %arrayidx570.i2548, align 4, !dbg !1153
  %xor571.i2549 = xor i32 %xor566.i2544, %2448, !dbg !1153
  %2449 = load i32, i32* %u.i1943, align 4, !dbg !1153
  %shr572.i2550 = lshr i32 %2449, 26, !dbg !1153
  %idxprom574.i2551 = zext i32 %shr572.i2550 to i64, !dbg !1153
  %arrayidx575.i2552 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i2551, !dbg !1153
  %2450 = load i32, i32* %arrayidx575.i2552, align 4, !dbg !1153
  %xor576.i2553 = xor i32 %xor571.i2549, %2450, !dbg !1153
  %2451 = load i32, i32* %t.i1942, align 4, !dbg !1153
  %shr577.i2554 = lshr i32 %2451, 2, !dbg !1153
  %and578.i2555 = and i32 %shr577.i2554, 63, !dbg !1153
  %idxprom579.i2556 = zext i32 %and578.i2555 to i64, !dbg !1153
  %arrayidx580.i2557 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i2556, !dbg !1153
  %2452 = load i32, i32* %arrayidx580.i2557, align 4, !dbg !1153
  %xor581.i2558 = xor i32 %xor576.i2553, %2452, !dbg !1153
  %2453 = load i32, i32* %t.i1942, align 4, !dbg !1153
  %shr582.i2559 = lshr i32 %2453, 10, !dbg !1153
  %and583.i2560 = and i32 %shr582.i2559, 63, !dbg !1153
  %idxprom584.i2561 = zext i32 %and583.i2560 to i64, !dbg !1153
  %arrayidx585.i2562 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i2561, !dbg !1153
  %2454 = load i32, i32* %arrayidx585.i2562, align 4, !dbg !1153
  %xor586.i2563 = xor i32 %xor581.i2558, %2454, !dbg !1153
  %2455 = load i32, i32* %t.i1942, align 4, !dbg !1153
  %shr587.i2564 = lshr i32 %2455, 18, !dbg !1153
  %and588.i2565 = and i32 %shr587.i2564, 63, !dbg !1153
  %idxprom589.i2566 = zext i32 %and588.i2565 to i64, !dbg !1153
  %arrayidx590.i2567 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i2566, !dbg !1153
  %2456 = load i32, i32* %arrayidx590.i2567, align 4, !dbg !1153
  %xor591.i2568 = xor i32 %xor586.i2563, %2456, !dbg !1153
  %2457 = load i32, i32* %t.i1942, align 4, !dbg !1153
  %shr592.i2569 = lshr i32 %2457, 26, !dbg !1153
  %idxprom594.i2570 = zext i32 %shr592.i2569 to i64, !dbg !1153
  %arrayidx595.i2571 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i2570, !dbg !1153
  %2458 = load i32, i32* %arrayidx595.i2571, align 4, !dbg !1153
  %xor596.i2572 = xor i32 %xor591.i2568, %2458, !dbg !1153
  %2459 = load i32, i32* %r.i1941, align 4, !dbg !1153
  %xor597.i2573 = xor i32 %2459, %xor596.i2572, !dbg !1153
  store i32 %xor597.i2573, i32* %r.i1941, align 4, !dbg !1153
  %2460 = load i32, i32* %r.i1941, align 4, !dbg !1154
  %2461 = load i32*, i32** %s.i1944, align 8, !dbg !1154
  %arrayidx598.i2574 = getelementptr inbounds i32, i32* %2461, i64 24, !dbg !1154
  %2462 = load i32, i32* %arrayidx598.i2574, align 4, !dbg !1154
  %xor599.i2575 = xor i32 %2460, %2462, !dbg !1154
  store i32 %xor599.i2575, i32* %u.i1943, align 4, !dbg !1154
  %2463 = load i32, i32* %r.i1941, align 4, !dbg !1154
  %2464 = load i32*, i32** %s.i1944, align 8, !dbg !1154
  %arrayidx600.i2576 = getelementptr inbounds i32, i32* %2464, i64 25, !dbg !1154
  %2465 = load i32, i32* %arrayidx600.i2576, align 4, !dbg !1154
  %xor601.i2577 = xor i32 %2463, %2465, !dbg !1154
  store i32 %xor601.i2577, i32* %t.i1942, align 4, !dbg !1154
  %2466 = load i32, i32* %t.i1942, align 4, !dbg !756
  %2467 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2466) #5, !dbg !756, !srcloc !166
  store i32 %2467, i32* %ret602.i1974, align 4, !dbg !756
  %2468 = load i32, i32* %ret602.i1974, align 4, !dbg !756
  store i32 %2468, i32* %tmp603.i1975, align 4, !dbg !756
  %2469 = load i32, i32* %tmp603.i1975, align 4, !dbg !756
  store i32 %2469, i32* %t.i1942, align 4, !dbg !1154
  %2470 = load i32, i32* %u.i1943, align 4, !dbg !1154
  %shr604.i2578 = lshr i32 %2470, 2, !dbg !1154
  %and605.i2579 = and i32 %shr604.i2578, 63, !dbg !1154
  %idxprom606.i2580 = zext i32 %and605.i2579 to i64, !dbg !1154
  %arrayidx607.i2581 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i2580, !dbg !1154
  %2471 = load i32, i32* %arrayidx607.i2581, align 4, !dbg !1154
  %2472 = load i32, i32* %u.i1943, align 4, !dbg !1154
  %shr608.i2582 = lshr i32 %2472, 10, !dbg !1154
  %and609.i2583 = and i32 %shr608.i2582, 63, !dbg !1154
  %idxprom610.i2584 = zext i32 %and609.i2583 to i64, !dbg !1154
  %arrayidx611.i2585 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i2584, !dbg !1154
  %2473 = load i32, i32* %arrayidx611.i2585, align 4, !dbg !1154
  %xor612.i2586 = xor i32 %2471, %2473, !dbg !1154
  %2474 = load i32, i32* %u.i1943, align 4, !dbg !1154
  %shr613.i2587 = lshr i32 %2474, 18, !dbg !1154
  %and614.i2588 = and i32 %shr613.i2587, 63, !dbg !1154
  %idxprom615.i2589 = zext i32 %and614.i2588 to i64, !dbg !1154
  %arrayidx616.i2590 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i2589, !dbg !1154
  %2475 = load i32, i32* %arrayidx616.i2590, align 4, !dbg !1154
  %xor617.i2591 = xor i32 %xor612.i2586, %2475, !dbg !1154
  %2476 = load i32, i32* %u.i1943, align 4, !dbg !1154
  %shr618.i2592 = lshr i32 %2476, 26, !dbg !1154
  %idxprom620.i2593 = zext i32 %shr618.i2592 to i64, !dbg !1154
  %arrayidx621.i2594 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i2593, !dbg !1154
  %2477 = load i32, i32* %arrayidx621.i2594, align 4, !dbg !1154
  %xor622.i2595 = xor i32 %xor617.i2591, %2477, !dbg !1154
  %2478 = load i32, i32* %t.i1942, align 4, !dbg !1154
  %shr623.i2596 = lshr i32 %2478, 2, !dbg !1154
  %and624.i2597 = and i32 %shr623.i2596, 63, !dbg !1154
  %idxprom625.i2598 = zext i32 %and624.i2597 to i64, !dbg !1154
  %arrayidx626.i2599 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i2598, !dbg !1154
  %2479 = load i32, i32* %arrayidx626.i2599, align 4, !dbg !1154
  %xor627.i2600 = xor i32 %xor622.i2595, %2479, !dbg !1154
  %2480 = load i32, i32* %t.i1942, align 4, !dbg !1154
  %shr628.i2601 = lshr i32 %2480, 10, !dbg !1154
  %and629.i2602 = and i32 %shr628.i2601, 63, !dbg !1154
  %idxprom630.i2603 = zext i32 %and629.i2602 to i64, !dbg !1154
  %arrayidx631.i2604 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i2603, !dbg !1154
  %2481 = load i32, i32* %arrayidx631.i2604, align 4, !dbg !1154
  %xor632.i2605 = xor i32 %xor627.i2600, %2481, !dbg !1154
  %2482 = load i32, i32* %t.i1942, align 4, !dbg !1154
  %shr633.i2606 = lshr i32 %2482, 18, !dbg !1154
  %and634.i2607 = and i32 %shr633.i2606, 63, !dbg !1154
  %idxprom635.i2608 = zext i32 %and634.i2607 to i64, !dbg !1154
  %arrayidx636.i2609 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i2608, !dbg !1154
  %2483 = load i32, i32* %arrayidx636.i2609, align 4, !dbg !1154
  %xor637.i2610 = xor i32 %xor632.i2605, %2483, !dbg !1154
  %2484 = load i32, i32* %t.i1942, align 4, !dbg !1154
  %shr638.i2611 = lshr i32 %2484, 26, !dbg !1154
  %idxprom640.i2612 = zext i32 %shr638.i2611 to i64, !dbg !1154
  %arrayidx641.i2613 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i2612, !dbg !1154
  %2485 = load i32, i32* %arrayidx641.i2613, align 4, !dbg !1154
  %xor642.i2614 = xor i32 %xor637.i2610, %2485, !dbg !1154
  %2486 = load i32, i32* %l.i1940, align 4, !dbg !1154
  %xor643.i2615 = xor i32 %2486, %xor642.i2614, !dbg !1154
  store i32 %xor643.i2615, i32* %l.i1940, align 4, !dbg !1154
  %2487 = load i32, i32* %l.i1940, align 4, !dbg !1155
  %2488 = load i32*, i32** %s.i1944, align 8, !dbg !1155
  %arrayidx644.i2616 = getelementptr inbounds i32, i32* %2488, i64 26, !dbg !1155
  %2489 = load i32, i32* %arrayidx644.i2616, align 4, !dbg !1155
  %xor645.i2617 = xor i32 %2487, %2489, !dbg !1155
  store i32 %xor645.i2617, i32* %u.i1943, align 4, !dbg !1155
  %2490 = load i32, i32* %l.i1940, align 4, !dbg !1155
  %2491 = load i32*, i32** %s.i1944, align 8, !dbg !1155
  %arrayidx646.i2618 = getelementptr inbounds i32, i32* %2491, i64 27, !dbg !1155
  %2492 = load i32, i32* %arrayidx646.i2618, align 4, !dbg !1155
  %xor647.i2619 = xor i32 %2490, %2492, !dbg !1155
  store i32 %xor647.i2619, i32* %t.i1942, align 4, !dbg !1155
  %2493 = load i32, i32* %t.i1942, align 4, !dbg !757
  %2494 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2493) #5, !dbg !757, !srcloc !172
  store i32 %2494, i32* %ret648.i1976, align 4, !dbg !757
  %2495 = load i32, i32* %ret648.i1976, align 4, !dbg !757
  store i32 %2495, i32* %tmp649.i1977, align 4, !dbg !757
  %2496 = load i32, i32* %tmp649.i1977, align 4, !dbg !757
  store i32 %2496, i32* %t.i1942, align 4, !dbg !1155
  %2497 = load i32, i32* %u.i1943, align 4, !dbg !1155
  %shr650.i2620 = lshr i32 %2497, 2, !dbg !1155
  %and651.i2621 = and i32 %shr650.i2620, 63, !dbg !1155
  %idxprom652.i2622 = zext i32 %and651.i2621 to i64, !dbg !1155
  %arrayidx653.i2623 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i2622, !dbg !1155
  %2498 = load i32, i32* %arrayidx653.i2623, align 4, !dbg !1155
  %2499 = load i32, i32* %u.i1943, align 4, !dbg !1155
  %shr654.i2624 = lshr i32 %2499, 10, !dbg !1155
  %and655.i2625 = and i32 %shr654.i2624, 63, !dbg !1155
  %idxprom656.i2626 = zext i32 %and655.i2625 to i64, !dbg !1155
  %arrayidx657.i2627 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i2626, !dbg !1155
  %2500 = load i32, i32* %arrayidx657.i2627, align 4, !dbg !1155
  %xor658.i2628 = xor i32 %2498, %2500, !dbg !1155
  %2501 = load i32, i32* %u.i1943, align 4, !dbg !1155
  %shr659.i2629 = lshr i32 %2501, 18, !dbg !1155
  %and660.i2630 = and i32 %shr659.i2629, 63, !dbg !1155
  %idxprom661.i2631 = zext i32 %and660.i2630 to i64, !dbg !1155
  %arrayidx662.i2632 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i2631, !dbg !1155
  %2502 = load i32, i32* %arrayidx662.i2632, align 4, !dbg !1155
  %xor663.i2633 = xor i32 %xor658.i2628, %2502, !dbg !1155
  %2503 = load i32, i32* %u.i1943, align 4, !dbg !1155
  %shr664.i2634 = lshr i32 %2503, 26, !dbg !1155
  %idxprom666.i2635 = zext i32 %shr664.i2634 to i64, !dbg !1155
  %arrayidx667.i2636 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i2635, !dbg !1155
  %2504 = load i32, i32* %arrayidx667.i2636, align 4, !dbg !1155
  %xor668.i2637 = xor i32 %xor663.i2633, %2504, !dbg !1155
  %2505 = load i32, i32* %t.i1942, align 4, !dbg !1155
  %shr669.i2638 = lshr i32 %2505, 2, !dbg !1155
  %and670.i2639 = and i32 %shr669.i2638, 63, !dbg !1155
  %idxprom671.i2640 = zext i32 %and670.i2639 to i64, !dbg !1155
  %arrayidx672.i2641 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i2640, !dbg !1155
  %2506 = load i32, i32* %arrayidx672.i2641, align 4, !dbg !1155
  %xor673.i2642 = xor i32 %xor668.i2637, %2506, !dbg !1155
  %2507 = load i32, i32* %t.i1942, align 4, !dbg !1155
  %shr674.i2643 = lshr i32 %2507, 10, !dbg !1155
  %and675.i2644 = and i32 %shr674.i2643, 63, !dbg !1155
  %idxprom676.i2645 = zext i32 %and675.i2644 to i64, !dbg !1155
  %arrayidx677.i2646 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i2645, !dbg !1155
  %2508 = load i32, i32* %arrayidx677.i2646, align 4, !dbg !1155
  %xor678.i2647 = xor i32 %xor673.i2642, %2508, !dbg !1155
  %2509 = load i32, i32* %t.i1942, align 4, !dbg !1155
  %shr679.i2648 = lshr i32 %2509, 18, !dbg !1155
  %and680.i2649 = and i32 %shr679.i2648, 63, !dbg !1155
  %idxprom681.i2650 = zext i32 %and680.i2649 to i64, !dbg !1155
  %arrayidx682.i2651 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i2650, !dbg !1155
  %2510 = load i32, i32* %arrayidx682.i2651, align 4, !dbg !1155
  %xor683.i2652 = xor i32 %xor678.i2647, %2510, !dbg !1155
  %2511 = load i32, i32* %t.i1942, align 4, !dbg !1155
  %shr684.i2653 = lshr i32 %2511, 26, !dbg !1155
  %idxprom686.i2654 = zext i32 %shr684.i2653 to i64, !dbg !1155
  %arrayidx687.i2655 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i2654, !dbg !1155
  %2512 = load i32, i32* %arrayidx687.i2655, align 4, !dbg !1155
  %xor688.i2656 = xor i32 %xor683.i2652, %2512, !dbg !1155
  %2513 = load i32, i32* %r.i1941, align 4, !dbg !1155
  %xor689.i2657 = xor i32 %2513, %xor688.i2656, !dbg !1155
  store i32 %xor689.i2657, i32* %r.i1941, align 4, !dbg !1155
  %2514 = load i32, i32* %r.i1941, align 4, !dbg !1156
  %2515 = load i32*, i32** %s.i1944, align 8, !dbg !1156
  %arrayidx690.i2658 = getelementptr inbounds i32, i32* %2515, i64 28, !dbg !1156
  %2516 = load i32, i32* %arrayidx690.i2658, align 4, !dbg !1156
  %xor691.i2659 = xor i32 %2514, %2516, !dbg !1156
  store i32 %xor691.i2659, i32* %u.i1943, align 4, !dbg !1156
  %2517 = load i32, i32* %r.i1941, align 4, !dbg !1156
  %2518 = load i32*, i32** %s.i1944, align 8, !dbg !1156
  %arrayidx692.i2660 = getelementptr inbounds i32, i32* %2518, i64 29, !dbg !1156
  %2519 = load i32, i32* %arrayidx692.i2660, align 4, !dbg !1156
  %xor693.i2661 = xor i32 %2517, %2519, !dbg !1156
  store i32 %xor693.i2661, i32* %t.i1942, align 4, !dbg !1156
  %2520 = load i32, i32* %t.i1942, align 4, !dbg !758
  %2521 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2520) #5, !dbg !758, !srcloc !178
  store i32 %2521, i32* %ret694.i1978, align 4, !dbg !758
  %2522 = load i32, i32* %ret694.i1978, align 4, !dbg !758
  store i32 %2522, i32* %tmp695.i1979, align 4, !dbg !758
  %2523 = load i32, i32* %tmp695.i1979, align 4, !dbg !758
  store i32 %2523, i32* %t.i1942, align 4, !dbg !1156
  %2524 = load i32, i32* %u.i1943, align 4, !dbg !1156
  %shr696.i2662 = lshr i32 %2524, 2, !dbg !1156
  %and697.i2663 = and i32 %shr696.i2662, 63, !dbg !1156
  %idxprom698.i2664 = zext i32 %and697.i2663 to i64, !dbg !1156
  %arrayidx699.i2665 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i2664, !dbg !1156
  %2525 = load i32, i32* %arrayidx699.i2665, align 4, !dbg !1156
  %2526 = load i32, i32* %u.i1943, align 4, !dbg !1156
  %shr700.i2666 = lshr i32 %2526, 10, !dbg !1156
  %and701.i2667 = and i32 %shr700.i2666, 63, !dbg !1156
  %idxprom702.i2668 = zext i32 %and701.i2667 to i64, !dbg !1156
  %arrayidx703.i2669 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i2668, !dbg !1156
  %2527 = load i32, i32* %arrayidx703.i2669, align 4, !dbg !1156
  %xor704.i2670 = xor i32 %2525, %2527, !dbg !1156
  %2528 = load i32, i32* %u.i1943, align 4, !dbg !1156
  %shr705.i2671 = lshr i32 %2528, 18, !dbg !1156
  %and706.i2672 = and i32 %shr705.i2671, 63, !dbg !1156
  %idxprom707.i2673 = zext i32 %and706.i2672 to i64, !dbg !1156
  %arrayidx708.i2674 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i2673, !dbg !1156
  %2529 = load i32, i32* %arrayidx708.i2674, align 4, !dbg !1156
  %xor709.i2675 = xor i32 %xor704.i2670, %2529, !dbg !1156
  %2530 = load i32, i32* %u.i1943, align 4, !dbg !1156
  %shr710.i2676 = lshr i32 %2530, 26, !dbg !1156
  %idxprom712.i2677 = zext i32 %shr710.i2676 to i64, !dbg !1156
  %arrayidx713.i2678 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i2677, !dbg !1156
  %2531 = load i32, i32* %arrayidx713.i2678, align 4, !dbg !1156
  %xor714.i2679 = xor i32 %xor709.i2675, %2531, !dbg !1156
  %2532 = load i32, i32* %t.i1942, align 4, !dbg !1156
  %shr715.i2680 = lshr i32 %2532, 2, !dbg !1156
  %and716.i2681 = and i32 %shr715.i2680, 63, !dbg !1156
  %idxprom717.i2682 = zext i32 %and716.i2681 to i64, !dbg !1156
  %arrayidx718.i2683 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i2682, !dbg !1156
  %2533 = load i32, i32* %arrayidx718.i2683, align 4, !dbg !1156
  %xor719.i2684 = xor i32 %xor714.i2679, %2533, !dbg !1156
  %2534 = load i32, i32* %t.i1942, align 4, !dbg !1156
  %shr720.i2685 = lshr i32 %2534, 10, !dbg !1156
  %and721.i2686 = and i32 %shr720.i2685, 63, !dbg !1156
  %idxprom722.i2687 = zext i32 %and721.i2686 to i64, !dbg !1156
  %arrayidx723.i2688 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i2687, !dbg !1156
  %2535 = load i32, i32* %arrayidx723.i2688, align 4, !dbg !1156
  %xor724.i2689 = xor i32 %xor719.i2684, %2535, !dbg !1156
  %2536 = load i32, i32* %t.i1942, align 4, !dbg !1156
  %shr725.i2690 = lshr i32 %2536, 18, !dbg !1156
  %and726.i2691 = and i32 %shr725.i2690, 63, !dbg !1156
  %idxprom727.i2692 = zext i32 %and726.i2691 to i64, !dbg !1156
  %arrayidx728.i2693 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i2692, !dbg !1156
  %2537 = load i32, i32* %arrayidx728.i2693, align 4, !dbg !1156
  %xor729.i2694 = xor i32 %xor724.i2689, %2537, !dbg !1156
  %2538 = load i32, i32* %t.i1942, align 4, !dbg !1156
  %shr730.i2695 = lshr i32 %2538, 26, !dbg !1156
  %idxprom732.i2696 = zext i32 %shr730.i2695 to i64, !dbg !1156
  %arrayidx733.i2697 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i2696, !dbg !1156
  %2539 = load i32, i32* %arrayidx733.i2697, align 4, !dbg !1156
  %xor734.i2698 = xor i32 %xor729.i2694, %2539, !dbg !1156
  %2540 = load i32, i32* %l.i1940, align 4, !dbg !1156
  %xor735.i2699 = xor i32 %2540, %xor734.i2698, !dbg !1156
  store i32 %xor735.i2699, i32* %l.i1940, align 4, !dbg !1156
  %2541 = load i32, i32* %l.i1940, align 4, !dbg !1157
  %2542 = load i32*, i32** %s.i1944, align 8, !dbg !1157
  %arrayidx736.i2700 = getelementptr inbounds i32, i32* %2542, i64 30, !dbg !1157
  %2543 = load i32, i32* %arrayidx736.i2700, align 4, !dbg !1157
  %xor737.i2701 = xor i32 %2541, %2543, !dbg !1157
  store i32 %xor737.i2701, i32* %u.i1943, align 4, !dbg !1157
  %2544 = load i32, i32* %l.i1940, align 4, !dbg !1157
  %2545 = load i32*, i32** %s.i1944, align 8, !dbg !1157
  %arrayidx738.i2702 = getelementptr inbounds i32, i32* %2545, i64 31, !dbg !1157
  %2546 = load i32, i32* %arrayidx738.i2702, align 4, !dbg !1157
  %xor739.i2703 = xor i32 %2544, %2546, !dbg !1157
  store i32 %xor739.i2703, i32* %t.i1942, align 4, !dbg !1157
  %2547 = load i32, i32* %t.i1942, align 4, !dbg !759
  %2548 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2547) #5, !dbg !759, !srcloc !184
  store i32 %2548, i32* %ret740.i1980, align 4, !dbg !759
  %2549 = load i32, i32* %ret740.i1980, align 4, !dbg !759
  store i32 %2549, i32* %tmp741.i1981, align 4, !dbg !759
  %2550 = load i32, i32* %tmp741.i1981, align 4, !dbg !759
  store i32 %2550, i32* %t.i1942, align 4, !dbg !1157
  %2551 = load i32, i32* %u.i1943, align 4, !dbg !1157
  %shr742.i2704 = lshr i32 %2551, 2, !dbg !1157
  %and743.i2705 = and i32 %shr742.i2704, 63, !dbg !1157
  %idxprom744.i2706 = zext i32 %and743.i2705 to i64, !dbg !1157
  %arrayidx745.i2707 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i2706, !dbg !1157
  %2552 = load i32, i32* %arrayidx745.i2707, align 4, !dbg !1157
  %2553 = load i32, i32* %u.i1943, align 4, !dbg !1157
  %shr746.i2708 = lshr i32 %2553, 10, !dbg !1157
  %and747.i2709 = and i32 %shr746.i2708, 63, !dbg !1157
  %idxprom748.i2710 = zext i32 %and747.i2709 to i64, !dbg !1157
  %arrayidx749.i2711 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i2710, !dbg !1157
  %2554 = load i32, i32* %arrayidx749.i2711, align 4, !dbg !1157
  %xor750.i2712 = xor i32 %2552, %2554, !dbg !1157
  %2555 = load i32, i32* %u.i1943, align 4, !dbg !1157
  %shr751.i2713 = lshr i32 %2555, 18, !dbg !1157
  %and752.i2714 = and i32 %shr751.i2713, 63, !dbg !1157
  %idxprom753.i2715 = zext i32 %and752.i2714 to i64, !dbg !1157
  %arrayidx754.i2716 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i2715, !dbg !1157
  %2556 = load i32, i32* %arrayidx754.i2716, align 4, !dbg !1157
  %xor755.i2717 = xor i32 %xor750.i2712, %2556, !dbg !1157
  %2557 = load i32, i32* %u.i1943, align 4, !dbg !1157
  %shr756.i2718 = lshr i32 %2557, 26, !dbg !1157
  %idxprom758.i2719 = zext i32 %shr756.i2718 to i64, !dbg !1157
  %arrayidx759.i2720 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i2719, !dbg !1157
  %2558 = load i32, i32* %arrayidx759.i2720, align 4, !dbg !1157
  %xor760.i2721 = xor i32 %xor755.i2717, %2558, !dbg !1157
  %2559 = load i32, i32* %t.i1942, align 4, !dbg !1157
  %shr761.i2722 = lshr i32 %2559, 2, !dbg !1157
  %and762.i2723 = and i32 %shr761.i2722, 63, !dbg !1157
  %idxprom763.i2724 = zext i32 %and762.i2723 to i64, !dbg !1157
  %arrayidx764.i2725 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i2724, !dbg !1157
  %2560 = load i32, i32* %arrayidx764.i2725, align 4, !dbg !1157
  %xor765.i2726 = xor i32 %xor760.i2721, %2560, !dbg !1157
  %2561 = load i32, i32* %t.i1942, align 4, !dbg !1157
  %shr766.i2727 = lshr i32 %2561, 10, !dbg !1157
  %and767.i2728 = and i32 %shr766.i2727, 63, !dbg !1157
  %idxprom768.i2729 = zext i32 %and767.i2728 to i64, !dbg !1157
  %arrayidx769.i2730 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i2729, !dbg !1157
  %2562 = load i32, i32* %arrayidx769.i2730, align 4, !dbg !1157
  %xor770.i2731 = xor i32 %xor765.i2726, %2562, !dbg !1157
  %2563 = load i32, i32* %t.i1942, align 4, !dbg !1157
  %shr771.i2732 = lshr i32 %2563, 18, !dbg !1157
  %and772.i2733 = and i32 %shr771.i2732, 63, !dbg !1157
  %idxprom773.i2734 = zext i32 %and772.i2733 to i64, !dbg !1157
  %arrayidx774.i2735 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i2734, !dbg !1157
  %2564 = load i32, i32* %arrayidx774.i2735, align 4, !dbg !1157
  %xor775.i2736 = xor i32 %xor770.i2731, %2564, !dbg !1157
  %2565 = load i32, i32* %t.i1942, align 4, !dbg !1157
  %shr776.i2737 = lshr i32 %2565, 26, !dbg !1157
  %idxprom778.i2738 = zext i32 %shr776.i2737 to i64, !dbg !1157
  %arrayidx779.i2739 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i2738, !dbg !1157
  %2566 = load i32, i32* %arrayidx779.i2739, align 4, !dbg !1157
  %xor780.i2740 = xor i32 %xor775.i2736, %2566, !dbg !1157
  %2567 = load i32, i32* %r.i1941, align 4, !dbg !1157
  %xor781.i2741 = xor i32 %2567, %xor780.i2740, !dbg !1157
  store i32 %xor781.i2741, i32* %r.i1941, align 4, !dbg !1157
  br label %DES_encrypt1.exit3462, !dbg !1158

if.else.i3414:                                    ; preds = %for.body227
  %2568 = load i32, i32* %r.i1941, align 4, !dbg !1159
  %2569 = load i32*, i32** %s.i1944, align 8, !dbg !1159
  %arrayidx782.i2743 = getelementptr inbounds i32, i32* %2569, i64 30, !dbg !1159
  %2570 = load i32, i32* %arrayidx782.i2743, align 4, !dbg !1159
  %xor783.i2744 = xor i32 %2568, %2570, !dbg !1159
  store i32 %xor783.i2744, i32* %u.i1943, align 4, !dbg !1159
  %2571 = load i32, i32* %r.i1941, align 4, !dbg !1159
  %2572 = load i32*, i32** %s.i1944, align 8, !dbg !1159
  %arrayidx784.i2745 = getelementptr inbounds i32, i32* %2572, i64 31, !dbg !1159
  %2573 = load i32, i32* %arrayidx784.i2745, align 4, !dbg !1159
  %xor785.i2746 = xor i32 %2571, %2573, !dbg !1159
  store i32 %xor785.i2746, i32* %t.i1942, align 4, !dbg !1159
  %2574 = load i32, i32* %t.i1942, align 4, !dbg !760
  %2575 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2574) #5, !dbg !760, !srcloc !192
  store i32 %2575, i32* %ret786.i1982, align 4, !dbg !760
  %2576 = load i32, i32* %ret786.i1982, align 4, !dbg !760
  store i32 %2576, i32* %tmp787.i1983, align 4, !dbg !760
  %2577 = load i32, i32* %tmp787.i1983, align 4, !dbg !760
  store i32 %2577, i32* %t.i1942, align 4, !dbg !1159
  %2578 = load i32, i32* %u.i1943, align 4, !dbg !1159
  %shr788.i2747 = lshr i32 %2578, 2, !dbg !1159
  %and789.i2748 = and i32 %shr788.i2747, 63, !dbg !1159
  %idxprom790.i2749 = zext i32 %and789.i2748 to i64, !dbg !1159
  %arrayidx791.i2750 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i2749, !dbg !1159
  %2579 = load i32, i32* %arrayidx791.i2750, align 4, !dbg !1159
  %2580 = load i32, i32* %u.i1943, align 4, !dbg !1159
  %shr792.i2751 = lshr i32 %2580, 10, !dbg !1159
  %and793.i2752 = and i32 %shr792.i2751, 63, !dbg !1159
  %idxprom794.i2753 = zext i32 %and793.i2752 to i64, !dbg !1159
  %arrayidx795.i2754 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i2753, !dbg !1159
  %2581 = load i32, i32* %arrayidx795.i2754, align 4, !dbg !1159
  %xor796.i2755 = xor i32 %2579, %2581, !dbg !1159
  %2582 = load i32, i32* %u.i1943, align 4, !dbg !1159
  %shr797.i2756 = lshr i32 %2582, 18, !dbg !1159
  %and798.i2757 = and i32 %shr797.i2756, 63, !dbg !1159
  %idxprom799.i2758 = zext i32 %and798.i2757 to i64, !dbg !1159
  %arrayidx800.i2759 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i2758, !dbg !1159
  %2583 = load i32, i32* %arrayidx800.i2759, align 4, !dbg !1159
  %xor801.i2760 = xor i32 %xor796.i2755, %2583, !dbg !1159
  %2584 = load i32, i32* %u.i1943, align 4, !dbg !1159
  %shr802.i2761 = lshr i32 %2584, 26, !dbg !1159
  %idxprom804.i2762 = zext i32 %shr802.i2761 to i64, !dbg !1159
  %arrayidx805.i2763 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i2762, !dbg !1159
  %2585 = load i32, i32* %arrayidx805.i2763, align 4, !dbg !1159
  %xor806.i2764 = xor i32 %xor801.i2760, %2585, !dbg !1159
  %2586 = load i32, i32* %t.i1942, align 4, !dbg !1159
  %shr807.i2765 = lshr i32 %2586, 2, !dbg !1159
  %and808.i2766 = and i32 %shr807.i2765, 63, !dbg !1159
  %idxprom809.i2767 = zext i32 %and808.i2766 to i64, !dbg !1159
  %arrayidx810.i2768 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i2767, !dbg !1159
  %2587 = load i32, i32* %arrayidx810.i2768, align 4, !dbg !1159
  %xor811.i2769 = xor i32 %xor806.i2764, %2587, !dbg !1159
  %2588 = load i32, i32* %t.i1942, align 4, !dbg !1159
  %shr812.i2770 = lshr i32 %2588, 10, !dbg !1159
  %and813.i2771 = and i32 %shr812.i2770, 63, !dbg !1159
  %idxprom814.i2772 = zext i32 %and813.i2771 to i64, !dbg !1159
  %arrayidx815.i2773 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i2772, !dbg !1159
  %2589 = load i32, i32* %arrayidx815.i2773, align 4, !dbg !1159
  %xor816.i2774 = xor i32 %xor811.i2769, %2589, !dbg !1159
  %2590 = load i32, i32* %t.i1942, align 4, !dbg !1159
  %shr817.i2775 = lshr i32 %2590, 18, !dbg !1159
  %and818.i2776 = and i32 %shr817.i2775, 63, !dbg !1159
  %idxprom819.i2777 = zext i32 %and818.i2776 to i64, !dbg !1159
  %arrayidx820.i2778 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i2777, !dbg !1159
  %2591 = load i32, i32* %arrayidx820.i2778, align 4, !dbg !1159
  %xor821.i2779 = xor i32 %xor816.i2774, %2591, !dbg !1159
  %2592 = load i32, i32* %t.i1942, align 4, !dbg !1159
  %shr822.i2780 = lshr i32 %2592, 26, !dbg !1159
  %idxprom824.i2781 = zext i32 %shr822.i2780 to i64, !dbg !1159
  %arrayidx825.i2782 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i2781, !dbg !1159
  %2593 = load i32, i32* %arrayidx825.i2782, align 4, !dbg !1159
  %xor826.i2783 = xor i32 %xor821.i2779, %2593, !dbg !1159
  %2594 = load i32, i32* %l.i1940, align 4, !dbg !1159
  %xor827.i2784 = xor i32 %2594, %xor826.i2783, !dbg !1159
  store i32 %xor827.i2784, i32* %l.i1940, align 4, !dbg !1159
  %2595 = load i32, i32* %l.i1940, align 4, !dbg !1160
  %2596 = load i32*, i32** %s.i1944, align 8, !dbg !1160
  %arrayidx828.i2785 = getelementptr inbounds i32, i32* %2596, i64 28, !dbg !1160
  %2597 = load i32, i32* %arrayidx828.i2785, align 4, !dbg !1160
  %xor829.i2786 = xor i32 %2595, %2597, !dbg !1160
  store i32 %xor829.i2786, i32* %u.i1943, align 4, !dbg !1160
  %2598 = load i32, i32* %l.i1940, align 4, !dbg !1160
  %2599 = load i32*, i32** %s.i1944, align 8, !dbg !1160
  %arrayidx830.i2787 = getelementptr inbounds i32, i32* %2599, i64 29, !dbg !1160
  %2600 = load i32, i32* %arrayidx830.i2787, align 4, !dbg !1160
  %xor831.i2788 = xor i32 %2598, %2600, !dbg !1160
  store i32 %xor831.i2788, i32* %t.i1942, align 4, !dbg !1160
  %2601 = load i32, i32* %t.i1942, align 4, !dbg !761
  %2602 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2601) #5, !dbg !761, !srcloc !198
  store i32 %2602, i32* %ret832.i1984, align 4, !dbg !761
  %2603 = load i32, i32* %ret832.i1984, align 4, !dbg !761
  store i32 %2603, i32* %tmp833.i1985, align 4, !dbg !761
  %2604 = load i32, i32* %tmp833.i1985, align 4, !dbg !761
  store i32 %2604, i32* %t.i1942, align 4, !dbg !1160
  %2605 = load i32, i32* %u.i1943, align 4, !dbg !1160
  %shr834.i2789 = lshr i32 %2605, 2, !dbg !1160
  %and835.i2790 = and i32 %shr834.i2789, 63, !dbg !1160
  %idxprom836.i2791 = zext i32 %and835.i2790 to i64, !dbg !1160
  %arrayidx837.i2792 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i2791, !dbg !1160
  %2606 = load i32, i32* %arrayidx837.i2792, align 4, !dbg !1160
  %2607 = load i32, i32* %u.i1943, align 4, !dbg !1160
  %shr838.i2793 = lshr i32 %2607, 10, !dbg !1160
  %and839.i2794 = and i32 %shr838.i2793, 63, !dbg !1160
  %idxprom840.i2795 = zext i32 %and839.i2794 to i64, !dbg !1160
  %arrayidx841.i2796 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i2795, !dbg !1160
  %2608 = load i32, i32* %arrayidx841.i2796, align 4, !dbg !1160
  %xor842.i2797 = xor i32 %2606, %2608, !dbg !1160
  %2609 = load i32, i32* %u.i1943, align 4, !dbg !1160
  %shr843.i2798 = lshr i32 %2609, 18, !dbg !1160
  %and844.i2799 = and i32 %shr843.i2798, 63, !dbg !1160
  %idxprom845.i2800 = zext i32 %and844.i2799 to i64, !dbg !1160
  %arrayidx846.i2801 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i2800, !dbg !1160
  %2610 = load i32, i32* %arrayidx846.i2801, align 4, !dbg !1160
  %xor847.i2802 = xor i32 %xor842.i2797, %2610, !dbg !1160
  %2611 = load i32, i32* %u.i1943, align 4, !dbg !1160
  %shr848.i2803 = lshr i32 %2611, 26, !dbg !1160
  %idxprom850.i2804 = zext i32 %shr848.i2803 to i64, !dbg !1160
  %arrayidx851.i2805 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i2804, !dbg !1160
  %2612 = load i32, i32* %arrayidx851.i2805, align 4, !dbg !1160
  %xor852.i2806 = xor i32 %xor847.i2802, %2612, !dbg !1160
  %2613 = load i32, i32* %t.i1942, align 4, !dbg !1160
  %shr853.i2807 = lshr i32 %2613, 2, !dbg !1160
  %and854.i2808 = and i32 %shr853.i2807, 63, !dbg !1160
  %idxprom855.i2809 = zext i32 %and854.i2808 to i64, !dbg !1160
  %arrayidx856.i2810 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i2809, !dbg !1160
  %2614 = load i32, i32* %arrayidx856.i2810, align 4, !dbg !1160
  %xor857.i2811 = xor i32 %xor852.i2806, %2614, !dbg !1160
  %2615 = load i32, i32* %t.i1942, align 4, !dbg !1160
  %shr858.i2812 = lshr i32 %2615, 10, !dbg !1160
  %and859.i2813 = and i32 %shr858.i2812, 63, !dbg !1160
  %idxprom860.i2814 = zext i32 %and859.i2813 to i64, !dbg !1160
  %arrayidx861.i2815 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i2814, !dbg !1160
  %2616 = load i32, i32* %arrayidx861.i2815, align 4, !dbg !1160
  %xor862.i2816 = xor i32 %xor857.i2811, %2616, !dbg !1160
  %2617 = load i32, i32* %t.i1942, align 4, !dbg !1160
  %shr863.i2817 = lshr i32 %2617, 18, !dbg !1160
  %and864.i2818 = and i32 %shr863.i2817, 63, !dbg !1160
  %idxprom865.i2819 = zext i32 %and864.i2818 to i64, !dbg !1160
  %arrayidx866.i2820 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i2819, !dbg !1160
  %2618 = load i32, i32* %arrayidx866.i2820, align 4, !dbg !1160
  %xor867.i2821 = xor i32 %xor862.i2816, %2618, !dbg !1160
  %2619 = load i32, i32* %t.i1942, align 4, !dbg !1160
  %shr868.i2822 = lshr i32 %2619, 26, !dbg !1160
  %idxprom870.i2823 = zext i32 %shr868.i2822 to i64, !dbg !1160
  %arrayidx871.i2824 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i2823, !dbg !1160
  %2620 = load i32, i32* %arrayidx871.i2824, align 4, !dbg !1160
  %xor872.i2825 = xor i32 %xor867.i2821, %2620, !dbg !1160
  %2621 = load i32, i32* %r.i1941, align 4, !dbg !1160
  %xor873.i2826 = xor i32 %2621, %xor872.i2825, !dbg !1160
  store i32 %xor873.i2826, i32* %r.i1941, align 4, !dbg !1160
  %2622 = load i32, i32* %r.i1941, align 4, !dbg !1161
  %2623 = load i32*, i32** %s.i1944, align 8, !dbg !1161
  %arrayidx874.i2827 = getelementptr inbounds i32, i32* %2623, i64 26, !dbg !1161
  %2624 = load i32, i32* %arrayidx874.i2827, align 4, !dbg !1161
  %xor875.i2828 = xor i32 %2622, %2624, !dbg !1161
  store i32 %xor875.i2828, i32* %u.i1943, align 4, !dbg !1161
  %2625 = load i32, i32* %r.i1941, align 4, !dbg !1161
  %2626 = load i32*, i32** %s.i1944, align 8, !dbg !1161
  %arrayidx876.i2829 = getelementptr inbounds i32, i32* %2626, i64 27, !dbg !1161
  %2627 = load i32, i32* %arrayidx876.i2829, align 4, !dbg !1161
  %xor877.i2830 = xor i32 %2625, %2627, !dbg !1161
  store i32 %xor877.i2830, i32* %t.i1942, align 4, !dbg !1161
  %2628 = load i32, i32* %t.i1942, align 4, !dbg !762
  %2629 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2628) #5, !dbg !762, !srcloc !204
  store i32 %2629, i32* %ret878.i1986, align 4, !dbg !762
  %2630 = load i32, i32* %ret878.i1986, align 4, !dbg !762
  store i32 %2630, i32* %tmp879.i1987, align 4, !dbg !762
  %2631 = load i32, i32* %tmp879.i1987, align 4, !dbg !762
  store i32 %2631, i32* %t.i1942, align 4, !dbg !1161
  %2632 = load i32, i32* %u.i1943, align 4, !dbg !1161
  %shr880.i2831 = lshr i32 %2632, 2, !dbg !1161
  %and881.i2832 = and i32 %shr880.i2831, 63, !dbg !1161
  %idxprom882.i2833 = zext i32 %and881.i2832 to i64, !dbg !1161
  %arrayidx883.i2834 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i2833, !dbg !1161
  %2633 = load i32, i32* %arrayidx883.i2834, align 4, !dbg !1161
  %2634 = load i32, i32* %u.i1943, align 4, !dbg !1161
  %shr884.i2835 = lshr i32 %2634, 10, !dbg !1161
  %and885.i2836 = and i32 %shr884.i2835, 63, !dbg !1161
  %idxprom886.i2837 = zext i32 %and885.i2836 to i64, !dbg !1161
  %arrayidx887.i2838 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i2837, !dbg !1161
  %2635 = load i32, i32* %arrayidx887.i2838, align 4, !dbg !1161
  %xor888.i2839 = xor i32 %2633, %2635, !dbg !1161
  %2636 = load i32, i32* %u.i1943, align 4, !dbg !1161
  %shr889.i2840 = lshr i32 %2636, 18, !dbg !1161
  %and890.i2841 = and i32 %shr889.i2840, 63, !dbg !1161
  %idxprom891.i2842 = zext i32 %and890.i2841 to i64, !dbg !1161
  %arrayidx892.i2843 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i2842, !dbg !1161
  %2637 = load i32, i32* %arrayidx892.i2843, align 4, !dbg !1161
  %xor893.i2844 = xor i32 %xor888.i2839, %2637, !dbg !1161
  %2638 = load i32, i32* %u.i1943, align 4, !dbg !1161
  %shr894.i2845 = lshr i32 %2638, 26, !dbg !1161
  %idxprom896.i2846 = zext i32 %shr894.i2845 to i64, !dbg !1161
  %arrayidx897.i2847 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i2846, !dbg !1161
  %2639 = load i32, i32* %arrayidx897.i2847, align 4, !dbg !1161
  %xor898.i2848 = xor i32 %xor893.i2844, %2639, !dbg !1161
  %2640 = load i32, i32* %t.i1942, align 4, !dbg !1161
  %shr899.i2849 = lshr i32 %2640, 2, !dbg !1161
  %and900.i2850 = and i32 %shr899.i2849, 63, !dbg !1161
  %idxprom901.i2851 = zext i32 %and900.i2850 to i64, !dbg !1161
  %arrayidx902.i2852 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i2851, !dbg !1161
  %2641 = load i32, i32* %arrayidx902.i2852, align 4, !dbg !1161
  %xor903.i2853 = xor i32 %xor898.i2848, %2641, !dbg !1161
  %2642 = load i32, i32* %t.i1942, align 4, !dbg !1161
  %shr904.i2854 = lshr i32 %2642, 10, !dbg !1161
  %and905.i2855 = and i32 %shr904.i2854, 63, !dbg !1161
  %idxprom906.i2856 = zext i32 %and905.i2855 to i64, !dbg !1161
  %arrayidx907.i2857 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i2856, !dbg !1161
  %2643 = load i32, i32* %arrayidx907.i2857, align 4, !dbg !1161
  %xor908.i2858 = xor i32 %xor903.i2853, %2643, !dbg !1161
  %2644 = load i32, i32* %t.i1942, align 4, !dbg !1161
  %shr909.i2859 = lshr i32 %2644, 18, !dbg !1161
  %and910.i2860 = and i32 %shr909.i2859, 63, !dbg !1161
  %idxprom911.i2861 = zext i32 %and910.i2860 to i64, !dbg !1161
  %arrayidx912.i2862 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i2861, !dbg !1161
  %2645 = load i32, i32* %arrayidx912.i2862, align 4, !dbg !1161
  %xor913.i2863 = xor i32 %xor908.i2858, %2645, !dbg !1161
  %2646 = load i32, i32* %t.i1942, align 4, !dbg !1161
  %shr914.i2864 = lshr i32 %2646, 26, !dbg !1161
  %idxprom916.i2865 = zext i32 %shr914.i2864 to i64, !dbg !1161
  %arrayidx917.i2866 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i2865, !dbg !1161
  %2647 = load i32, i32* %arrayidx917.i2866, align 4, !dbg !1161
  %xor918.i2867 = xor i32 %xor913.i2863, %2647, !dbg !1161
  %2648 = load i32, i32* %l.i1940, align 4, !dbg !1161
  %xor919.i2868 = xor i32 %2648, %xor918.i2867, !dbg !1161
  store i32 %xor919.i2868, i32* %l.i1940, align 4, !dbg !1161
  %2649 = load i32, i32* %l.i1940, align 4, !dbg !1162
  %2650 = load i32*, i32** %s.i1944, align 8, !dbg !1162
  %arrayidx920.i2869 = getelementptr inbounds i32, i32* %2650, i64 24, !dbg !1162
  %2651 = load i32, i32* %arrayidx920.i2869, align 4, !dbg !1162
  %xor921.i2870 = xor i32 %2649, %2651, !dbg !1162
  store i32 %xor921.i2870, i32* %u.i1943, align 4, !dbg !1162
  %2652 = load i32, i32* %l.i1940, align 4, !dbg !1162
  %2653 = load i32*, i32** %s.i1944, align 8, !dbg !1162
  %arrayidx922.i2871 = getelementptr inbounds i32, i32* %2653, i64 25, !dbg !1162
  %2654 = load i32, i32* %arrayidx922.i2871, align 4, !dbg !1162
  %xor923.i2872 = xor i32 %2652, %2654, !dbg !1162
  store i32 %xor923.i2872, i32* %t.i1942, align 4, !dbg !1162
  %2655 = load i32, i32* %t.i1942, align 4, !dbg !763
  %2656 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2655) #5, !dbg !763, !srcloc !210
  store i32 %2656, i32* %ret924.i1988, align 4, !dbg !763
  %2657 = load i32, i32* %ret924.i1988, align 4, !dbg !763
  store i32 %2657, i32* %tmp925.i1989, align 4, !dbg !763
  %2658 = load i32, i32* %tmp925.i1989, align 4, !dbg !763
  store i32 %2658, i32* %t.i1942, align 4, !dbg !1162
  %2659 = load i32, i32* %u.i1943, align 4, !dbg !1162
  %shr926.i2873 = lshr i32 %2659, 2, !dbg !1162
  %and927.i2874 = and i32 %shr926.i2873, 63, !dbg !1162
  %idxprom928.i2875 = zext i32 %and927.i2874 to i64, !dbg !1162
  %arrayidx929.i2876 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i2875, !dbg !1162
  %2660 = load i32, i32* %arrayidx929.i2876, align 4, !dbg !1162
  %2661 = load i32, i32* %u.i1943, align 4, !dbg !1162
  %shr930.i2877 = lshr i32 %2661, 10, !dbg !1162
  %and931.i2878 = and i32 %shr930.i2877, 63, !dbg !1162
  %idxprom932.i2879 = zext i32 %and931.i2878 to i64, !dbg !1162
  %arrayidx933.i2880 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i2879, !dbg !1162
  %2662 = load i32, i32* %arrayidx933.i2880, align 4, !dbg !1162
  %xor934.i2881 = xor i32 %2660, %2662, !dbg !1162
  %2663 = load i32, i32* %u.i1943, align 4, !dbg !1162
  %shr935.i2882 = lshr i32 %2663, 18, !dbg !1162
  %and936.i2883 = and i32 %shr935.i2882, 63, !dbg !1162
  %idxprom937.i2884 = zext i32 %and936.i2883 to i64, !dbg !1162
  %arrayidx938.i2885 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i2884, !dbg !1162
  %2664 = load i32, i32* %arrayidx938.i2885, align 4, !dbg !1162
  %xor939.i2886 = xor i32 %xor934.i2881, %2664, !dbg !1162
  %2665 = load i32, i32* %u.i1943, align 4, !dbg !1162
  %shr940.i2887 = lshr i32 %2665, 26, !dbg !1162
  %idxprom942.i2888 = zext i32 %shr940.i2887 to i64, !dbg !1162
  %arrayidx943.i2889 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i2888, !dbg !1162
  %2666 = load i32, i32* %arrayidx943.i2889, align 4, !dbg !1162
  %xor944.i2890 = xor i32 %xor939.i2886, %2666, !dbg !1162
  %2667 = load i32, i32* %t.i1942, align 4, !dbg !1162
  %shr945.i2891 = lshr i32 %2667, 2, !dbg !1162
  %and946.i2892 = and i32 %shr945.i2891, 63, !dbg !1162
  %idxprom947.i2893 = zext i32 %and946.i2892 to i64, !dbg !1162
  %arrayidx948.i2894 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i2893, !dbg !1162
  %2668 = load i32, i32* %arrayidx948.i2894, align 4, !dbg !1162
  %xor949.i2895 = xor i32 %xor944.i2890, %2668, !dbg !1162
  %2669 = load i32, i32* %t.i1942, align 4, !dbg !1162
  %shr950.i2896 = lshr i32 %2669, 10, !dbg !1162
  %and951.i2897 = and i32 %shr950.i2896, 63, !dbg !1162
  %idxprom952.i2898 = zext i32 %and951.i2897 to i64, !dbg !1162
  %arrayidx953.i2899 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i2898, !dbg !1162
  %2670 = load i32, i32* %arrayidx953.i2899, align 4, !dbg !1162
  %xor954.i2900 = xor i32 %xor949.i2895, %2670, !dbg !1162
  %2671 = load i32, i32* %t.i1942, align 4, !dbg !1162
  %shr955.i2901 = lshr i32 %2671, 18, !dbg !1162
  %and956.i2902 = and i32 %shr955.i2901, 63, !dbg !1162
  %idxprom957.i2903 = zext i32 %and956.i2902 to i64, !dbg !1162
  %arrayidx958.i2904 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i2903, !dbg !1162
  %2672 = load i32, i32* %arrayidx958.i2904, align 4, !dbg !1162
  %xor959.i2905 = xor i32 %xor954.i2900, %2672, !dbg !1162
  %2673 = load i32, i32* %t.i1942, align 4, !dbg !1162
  %shr960.i2906 = lshr i32 %2673, 26, !dbg !1162
  %idxprom962.i2907 = zext i32 %shr960.i2906 to i64, !dbg !1162
  %arrayidx963.i2908 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i2907, !dbg !1162
  %2674 = load i32, i32* %arrayidx963.i2908, align 4, !dbg !1162
  %xor964.i2909 = xor i32 %xor959.i2905, %2674, !dbg !1162
  %2675 = load i32, i32* %r.i1941, align 4, !dbg !1162
  %xor965.i2910 = xor i32 %2675, %xor964.i2909, !dbg !1162
  store i32 %xor965.i2910, i32* %r.i1941, align 4, !dbg !1162
  %2676 = load i32, i32* %r.i1941, align 4, !dbg !1163
  %2677 = load i32*, i32** %s.i1944, align 8, !dbg !1163
  %arrayidx966.i2911 = getelementptr inbounds i32, i32* %2677, i64 22, !dbg !1163
  %2678 = load i32, i32* %arrayidx966.i2911, align 4, !dbg !1163
  %xor967.i2912 = xor i32 %2676, %2678, !dbg !1163
  store i32 %xor967.i2912, i32* %u.i1943, align 4, !dbg !1163
  %2679 = load i32, i32* %r.i1941, align 4, !dbg !1163
  %2680 = load i32*, i32** %s.i1944, align 8, !dbg !1163
  %arrayidx968.i2913 = getelementptr inbounds i32, i32* %2680, i64 23, !dbg !1163
  %2681 = load i32, i32* %arrayidx968.i2913, align 4, !dbg !1163
  %xor969.i2914 = xor i32 %2679, %2681, !dbg !1163
  store i32 %xor969.i2914, i32* %t.i1942, align 4, !dbg !1163
  %2682 = load i32, i32* %t.i1942, align 4, !dbg !764
  %2683 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2682) #5, !dbg !764, !srcloc !216
  store i32 %2683, i32* %ret970.i1990, align 4, !dbg !764
  %2684 = load i32, i32* %ret970.i1990, align 4, !dbg !764
  store i32 %2684, i32* %tmp971.i1991, align 4, !dbg !764
  %2685 = load i32, i32* %tmp971.i1991, align 4, !dbg !764
  store i32 %2685, i32* %t.i1942, align 4, !dbg !1163
  %2686 = load i32, i32* %u.i1943, align 4, !dbg !1163
  %shr972.i2915 = lshr i32 %2686, 2, !dbg !1163
  %and973.i2916 = and i32 %shr972.i2915, 63, !dbg !1163
  %idxprom974.i2917 = zext i32 %and973.i2916 to i64, !dbg !1163
  %arrayidx975.i2918 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i2917, !dbg !1163
  %2687 = load i32, i32* %arrayidx975.i2918, align 4, !dbg !1163
  %2688 = load i32, i32* %u.i1943, align 4, !dbg !1163
  %shr976.i2919 = lshr i32 %2688, 10, !dbg !1163
  %and977.i2920 = and i32 %shr976.i2919, 63, !dbg !1163
  %idxprom978.i2921 = zext i32 %and977.i2920 to i64, !dbg !1163
  %arrayidx979.i2922 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i2921, !dbg !1163
  %2689 = load i32, i32* %arrayidx979.i2922, align 4, !dbg !1163
  %xor980.i2923 = xor i32 %2687, %2689, !dbg !1163
  %2690 = load i32, i32* %u.i1943, align 4, !dbg !1163
  %shr981.i2924 = lshr i32 %2690, 18, !dbg !1163
  %and982.i2925 = and i32 %shr981.i2924, 63, !dbg !1163
  %idxprom983.i2926 = zext i32 %and982.i2925 to i64, !dbg !1163
  %arrayidx984.i2927 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i2926, !dbg !1163
  %2691 = load i32, i32* %arrayidx984.i2927, align 4, !dbg !1163
  %xor985.i2928 = xor i32 %xor980.i2923, %2691, !dbg !1163
  %2692 = load i32, i32* %u.i1943, align 4, !dbg !1163
  %shr986.i2929 = lshr i32 %2692, 26, !dbg !1163
  %idxprom988.i2930 = zext i32 %shr986.i2929 to i64, !dbg !1163
  %arrayidx989.i2931 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i2930, !dbg !1163
  %2693 = load i32, i32* %arrayidx989.i2931, align 4, !dbg !1163
  %xor990.i2932 = xor i32 %xor985.i2928, %2693, !dbg !1163
  %2694 = load i32, i32* %t.i1942, align 4, !dbg !1163
  %shr991.i2933 = lshr i32 %2694, 2, !dbg !1163
  %and992.i2934 = and i32 %shr991.i2933, 63, !dbg !1163
  %idxprom993.i2935 = zext i32 %and992.i2934 to i64, !dbg !1163
  %arrayidx994.i2936 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i2935, !dbg !1163
  %2695 = load i32, i32* %arrayidx994.i2936, align 4, !dbg !1163
  %xor995.i2937 = xor i32 %xor990.i2932, %2695, !dbg !1163
  %2696 = load i32, i32* %t.i1942, align 4, !dbg !1163
  %shr996.i2938 = lshr i32 %2696, 10, !dbg !1163
  %and997.i2939 = and i32 %shr996.i2938, 63, !dbg !1163
  %idxprom998.i2940 = zext i32 %and997.i2939 to i64, !dbg !1163
  %arrayidx999.i2941 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i2940, !dbg !1163
  %2697 = load i32, i32* %arrayidx999.i2941, align 4, !dbg !1163
  %xor1000.i2942 = xor i32 %xor995.i2937, %2697, !dbg !1163
  %2698 = load i32, i32* %t.i1942, align 4, !dbg !1163
  %shr1001.i2943 = lshr i32 %2698, 18, !dbg !1163
  %and1002.i2944 = and i32 %shr1001.i2943, 63, !dbg !1163
  %idxprom1003.i2945 = zext i32 %and1002.i2944 to i64, !dbg !1163
  %arrayidx1004.i2946 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i2945, !dbg !1163
  %2699 = load i32, i32* %arrayidx1004.i2946, align 4, !dbg !1163
  %xor1005.i2947 = xor i32 %xor1000.i2942, %2699, !dbg !1163
  %2700 = load i32, i32* %t.i1942, align 4, !dbg !1163
  %shr1006.i2948 = lshr i32 %2700, 26, !dbg !1163
  %idxprom1008.i2949 = zext i32 %shr1006.i2948 to i64, !dbg !1163
  %arrayidx1009.i2950 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i2949, !dbg !1163
  %2701 = load i32, i32* %arrayidx1009.i2950, align 4, !dbg !1163
  %xor1010.i2951 = xor i32 %xor1005.i2947, %2701, !dbg !1163
  %2702 = load i32, i32* %l.i1940, align 4, !dbg !1163
  %xor1011.i2952 = xor i32 %2702, %xor1010.i2951, !dbg !1163
  store i32 %xor1011.i2952, i32* %l.i1940, align 4, !dbg !1163
  %2703 = load i32, i32* %l.i1940, align 4, !dbg !1164
  %2704 = load i32*, i32** %s.i1944, align 8, !dbg !1164
  %arrayidx1012.i2953 = getelementptr inbounds i32, i32* %2704, i64 20, !dbg !1164
  %2705 = load i32, i32* %arrayidx1012.i2953, align 4, !dbg !1164
  %xor1013.i2954 = xor i32 %2703, %2705, !dbg !1164
  store i32 %xor1013.i2954, i32* %u.i1943, align 4, !dbg !1164
  %2706 = load i32, i32* %l.i1940, align 4, !dbg !1164
  %2707 = load i32*, i32** %s.i1944, align 8, !dbg !1164
  %arrayidx1014.i2955 = getelementptr inbounds i32, i32* %2707, i64 21, !dbg !1164
  %2708 = load i32, i32* %arrayidx1014.i2955, align 4, !dbg !1164
  %xor1015.i2956 = xor i32 %2706, %2708, !dbg !1164
  store i32 %xor1015.i2956, i32* %t.i1942, align 4, !dbg !1164
  %2709 = load i32, i32* %t.i1942, align 4, !dbg !765
  %2710 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2709) #5, !dbg !765, !srcloc !222
  store i32 %2710, i32* %ret1016.i1992, align 4, !dbg !765
  %2711 = load i32, i32* %ret1016.i1992, align 4, !dbg !765
  store i32 %2711, i32* %tmp1017.i1993, align 4, !dbg !765
  %2712 = load i32, i32* %tmp1017.i1993, align 4, !dbg !765
  store i32 %2712, i32* %t.i1942, align 4, !dbg !1164
  %2713 = load i32, i32* %u.i1943, align 4, !dbg !1164
  %shr1018.i2957 = lshr i32 %2713, 2, !dbg !1164
  %and1019.i2958 = and i32 %shr1018.i2957, 63, !dbg !1164
  %idxprom1020.i2959 = zext i32 %and1019.i2958 to i64, !dbg !1164
  %arrayidx1021.i2960 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i2959, !dbg !1164
  %2714 = load i32, i32* %arrayidx1021.i2960, align 4, !dbg !1164
  %2715 = load i32, i32* %u.i1943, align 4, !dbg !1164
  %shr1022.i2961 = lshr i32 %2715, 10, !dbg !1164
  %and1023.i2962 = and i32 %shr1022.i2961, 63, !dbg !1164
  %idxprom1024.i2963 = zext i32 %and1023.i2962 to i64, !dbg !1164
  %arrayidx1025.i2964 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i2963, !dbg !1164
  %2716 = load i32, i32* %arrayidx1025.i2964, align 4, !dbg !1164
  %xor1026.i2965 = xor i32 %2714, %2716, !dbg !1164
  %2717 = load i32, i32* %u.i1943, align 4, !dbg !1164
  %shr1027.i2966 = lshr i32 %2717, 18, !dbg !1164
  %and1028.i2967 = and i32 %shr1027.i2966, 63, !dbg !1164
  %idxprom1029.i2968 = zext i32 %and1028.i2967 to i64, !dbg !1164
  %arrayidx1030.i2969 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i2968, !dbg !1164
  %2718 = load i32, i32* %arrayidx1030.i2969, align 4, !dbg !1164
  %xor1031.i2970 = xor i32 %xor1026.i2965, %2718, !dbg !1164
  %2719 = load i32, i32* %u.i1943, align 4, !dbg !1164
  %shr1032.i2971 = lshr i32 %2719, 26, !dbg !1164
  %idxprom1034.i2972 = zext i32 %shr1032.i2971 to i64, !dbg !1164
  %arrayidx1035.i2973 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i2972, !dbg !1164
  %2720 = load i32, i32* %arrayidx1035.i2973, align 4, !dbg !1164
  %xor1036.i2974 = xor i32 %xor1031.i2970, %2720, !dbg !1164
  %2721 = load i32, i32* %t.i1942, align 4, !dbg !1164
  %shr1037.i2975 = lshr i32 %2721, 2, !dbg !1164
  %and1038.i2976 = and i32 %shr1037.i2975, 63, !dbg !1164
  %idxprom1039.i2977 = zext i32 %and1038.i2976 to i64, !dbg !1164
  %arrayidx1040.i2978 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i2977, !dbg !1164
  %2722 = load i32, i32* %arrayidx1040.i2978, align 4, !dbg !1164
  %xor1041.i2979 = xor i32 %xor1036.i2974, %2722, !dbg !1164
  %2723 = load i32, i32* %t.i1942, align 4, !dbg !1164
  %shr1042.i2980 = lshr i32 %2723, 10, !dbg !1164
  %and1043.i2981 = and i32 %shr1042.i2980, 63, !dbg !1164
  %idxprom1044.i2982 = zext i32 %and1043.i2981 to i64, !dbg !1164
  %arrayidx1045.i2983 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i2982, !dbg !1164
  %2724 = load i32, i32* %arrayidx1045.i2983, align 4, !dbg !1164
  %xor1046.i2984 = xor i32 %xor1041.i2979, %2724, !dbg !1164
  %2725 = load i32, i32* %t.i1942, align 4, !dbg !1164
  %shr1047.i2985 = lshr i32 %2725, 18, !dbg !1164
  %and1048.i2986 = and i32 %shr1047.i2985, 63, !dbg !1164
  %idxprom1049.i2987 = zext i32 %and1048.i2986 to i64, !dbg !1164
  %arrayidx1050.i2988 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i2987, !dbg !1164
  %2726 = load i32, i32* %arrayidx1050.i2988, align 4, !dbg !1164
  %xor1051.i2989 = xor i32 %xor1046.i2984, %2726, !dbg !1164
  %2727 = load i32, i32* %t.i1942, align 4, !dbg !1164
  %shr1052.i2990 = lshr i32 %2727, 26, !dbg !1164
  %idxprom1054.i2991 = zext i32 %shr1052.i2990 to i64, !dbg !1164
  %arrayidx1055.i2992 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i2991, !dbg !1164
  %2728 = load i32, i32* %arrayidx1055.i2992, align 4, !dbg !1164
  %xor1056.i2993 = xor i32 %xor1051.i2989, %2728, !dbg !1164
  %2729 = load i32, i32* %r.i1941, align 4, !dbg !1164
  %xor1057.i2994 = xor i32 %2729, %xor1056.i2993, !dbg !1164
  store i32 %xor1057.i2994, i32* %r.i1941, align 4, !dbg !1164
  %2730 = load i32, i32* %r.i1941, align 4, !dbg !1165
  %2731 = load i32*, i32** %s.i1944, align 8, !dbg !1165
  %arrayidx1058.i2995 = getelementptr inbounds i32, i32* %2731, i64 18, !dbg !1165
  %2732 = load i32, i32* %arrayidx1058.i2995, align 4, !dbg !1165
  %xor1059.i2996 = xor i32 %2730, %2732, !dbg !1165
  store i32 %xor1059.i2996, i32* %u.i1943, align 4, !dbg !1165
  %2733 = load i32, i32* %r.i1941, align 4, !dbg !1165
  %2734 = load i32*, i32** %s.i1944, align 8, !dbg !1165
  %arrayidx1060.i2997 = getelementptr inbounds i32, i32* %2734, i64 19, !dbg !1165
  %2735 = load i32, i32* %arrayidx1060.i2997, align 4, !dbg !1165
  %xor1061.i2998 = xor i32 %2733, %2735, !dbg !1165
  store i32 %xor1061.i2998, i32* %t.i1942, align 4, !dbg !1165
  %2736 = load i32, i32* %t.i1942, align 4, !dbg !766
  %2737 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2736) #5, !dbg !766, !srcloc !228
  store i32 %2737, i32* %ret1062.i1994, align 4, !dbg !766
  %2738 = load i32, i32* %ret1062.i1994, align 4, !dbg !766
  store i32 %2738, i32* %tmp1063.i1995, align 4, !dbg !766
  %2739 = load i32, i32* %tmp1063.i1995, align 4, !dbg !766
  store i32 %2739, i32* %t.i1942, align 4, !dbg !1165
  %2740 = load i32, i32* %u.i1943, align 4, !dbg !1165
  %shr1064.i2999 = lshr i32 %2740, 2, !dbg !1165
  %and1065.i3000 = and i32 %shr1064.i2999, 63, !dbg !1165
  %idxprom1066.i3001 = zext i32 %and1065.i3000 to i64, !dbg !1165
  %arrayidx1067.i3002 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i3001, !dbg !1165
  %2741 = load i32, i32* %arrayidx1067.i3002, align 4, !dbg !1165
  %2742 = load i32, i32* %u.i1943, align 4, !dbg !1165
  %shr1068.i3003 = lshr i32 %2742, 10, !dbg !1165
  %and1069.i3004 = and i32 %shr1068.i3003, 63, !dbg !1165
  %idxprom1070.i3005 = zext i32 %and1069.i3004 to i64, !dbg !1165
  %arrayidx1071.i3006 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i3005, !dbg !1165
  %2743 = load i32, i32* %arrayidx1071.i3006, align 4, !dbg !1165
  %xor1072.i3007 = xor i32 %2741, %2743, !dbg !1165
  %2744 = load i32, i32* %u.i1943, align 4, !dbg !1165
  %shr1073.i3008 = lshr i32 %2744, 18, !dbg !1165
  %and1074.i3009 = and i32 %shr1073.i3008, 63, !dbg !1165
  %idxprom1075.i3010 = zext i32 %and1074.i3009 to i64, !dbg !1165
  %arrayidx1076.i3011 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i3010, !dbg !1165
  %2745 = load i32, i32* %arrayidx1076.i3011, align 4, !dbg !1165
  %xor1077.i3012 = xor i32 %xor1072.i3007, %2745, !dbg !1165
  %2746 = load i32, i32* %u.i1943, align 4, !dbg !1165
  %shr1078.i3013 = lshr i32 %2746, 26, !dbg !1165
  %idxprom1080.i3014 = zext i32 %shr1078.i3013 to i64, !dbg !1165
  %arrayidx1081.i3015 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i3014, !dbg !1165
  %2747 = load i32, i32* %arrayidx1081.i3015, align 4, !dbg !1165
  %xor1082.i3016 = xor i32 %xor1077.i3012, %2747, !dbg !1165
  %2748 = load i32, i32* %t.i1942, align 4, !dbg !1165
  %shr1083.i3017 = lshr i32 %2748, 2, !dbg !1165
  %and1084.i3018 = and i32 %shr1083.i3017, 63, !dbg !1165
  %idxprom1085.i3019 = zext i32 %and1084.i3018 to i64, !dbg !1165
  %arrayidx1086.i3020 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i3019, !dbg !1165
  %2749 = load i32, i32* %arrayidx1086.i3020, align 4, !dbg !1165
  %xor1087.i3021 = xor i32 %xor1082.i3016, %2749, !dbg !1165
  %2750 = load i32, i32* %t.i1942, align 4, !dbg !1165
  %shr1088.i3022 = lshr i32 %2750, 10, !dbg !1165
  %and1089.i3023 = and i32 %shr1088.i3022, 63, !dbg !1165
  %idxprom1090.i3024 = zext i32 %and1089.i3023 to i64, !dbg !1165
  %arrayidx1091.i3025 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i3024, !dbg !1165
  %2751 = load i32, i32* %arrayidx1091.i3025, align 4, !dbg !1165
  %xor1092.i3026 = xor i32 %xor1087.i3021, %2751, !dbg !1165
  %2752 = load i32, i32* %t.i1942, align 4, !dbg !1165
  %shr1093.i3027 = lshr i32 %2752, 18, !dbg !1165
  %and1094.i3028 = and i32 %shr1093.i3027, 63, !dbg !1165
  %idxprom1095.i3029 = zext i32 %and1094.i3028 to i64, !dbg !1165
  %arrayidx1096.i3030 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i3029, !dbg !1165
  %2753 = load i32, i32* %arrayidx1096.i3030, align 4, !dbg !1165
  %xor1097.i3031 = xor i32 %xor1092.i3026, %2753, !dbg !1165
  %2754 = load i32, i32* %t.i1942, align 4, !dbg !1165
  %shr1098.i3032 = lshr i32 %2754, 26, !dbg !1165
  %idxprom1100.i3033 = zext i32 %shr1098.i3032 to i64, !dbg !1165
  %arrayidx1101.i3034 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i3033, !dbg !1165
  %2755 = load i32, i32* %arrayidx1101.i3034, align 4, !dbg !1165
  %xor1102.i3035 = xor i32 %xor1097.i3031, %2755, !dbg !1165
  %2756 = load i32, i32* %l.i1940, align 4, !dbg !1165
  %xor1103.i3036 = xor i32 %2756, %xor1102.i3035, !dbg !1165
  store i32 %xor1103.i3036, i32* %l.i1940, align 4, !dbg !1165
  %2757 = load i32, i32* %l.i1940, align 4, !dbg !1166
  %2758 = load i32*, i32** %s.i1944, align 8, !dbg !1166
  %arrayidx1104.i3037 = getelementptr inbounds i32, i32* %2758, i64 16, !dbg !1166
  %2759 = load i32, i32* %arrayidx1104.i3037, align 4, !dbg !1166
  %xor1105.i3038 = xor i32 %2757, %2759, !dbg !1166
  store i32 %xor1105.i3038, i32* %u.i1943, align 4, !dbg !1166
  %2760 = load i32, i32* %l.i1940, align 4, !dbg !1166
  %2761 = load i32*, i32** %s.i1944, align 8, !dbg !1166
  %arrayidx1106.i3039 = getelementptr inbounds i32, i32* %2761, i64 17, !dbg !1166
  %2762 = load i32, i32* %arrayidx1106.i3039, align 4, !dbg !1166
  %xor1107.i3040 = xor i32 %2760, %2762, !dbg !1166
  store i32 %xor1107.i3040, i32* %t.i1942, align 4, !dbg !1166
  %2763 = load i32, i32* %t.i1942, align 4, !dbg !767
  %2764 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2763) #5, !dbg !767, !srcloc !234
  store i32 %2764, i32* %ret1108.i1996, align 4, !dbg !767
  %2765 = load i32, i32* %ret1108.i1996, align 4, !dbg !767
  store i32 %2765, i32* %tmp1109.i1997, align 4, !dbg !767
  %2766 = load i32, i32* %tmp1109.i1997, align 4, !dbg !767
  store i32 %2766, i32* %t.i1942, align 4, !dbg !1166
  %2767 = load i32, i32* %u.i1943, align 4, !dbg !1166
  %shr1110.i3041 = lshr i32 %2767, 2, !dbg !1166
  %and1111.i3042 = and i32 %shr1110.i3041, 63, !dbg !1166
  %idxprom1112.i3043 = zext i32 %and1111.i3042 to i64, !dbg !1166
  %arrayidx1113.i3044 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i3043, !dbg !1166
  %2768 = load i32, i32* %arrayidx1113.i3044, align 4, !dbg !1166
  %2769 = load i32, i32* %u.i1943, align 4, !dbg !1166
  %shr1114.i3045 = lshr i32 %2769, 10, !dbg !1166
  %and1115.i3046 = and i32 %shr1114.i3045, 63, !dbg !1166
  %idxprom1116.i3047 = zext i32 %and1115.i3046 to i64, !dbg !1166
  %arrayidx1117.i3048 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i3047, !dbg !1166
  %2770 = load i32, i32* %arrayidx1117.i3048, align 4, !dbg !1166
  %xor1118.i3049 = xor i32 %2768, %2770, !dbg !1166
  %2771 = load i32, i32* %u.i1943, align 4, !dbg !1166
  %shr1119.i3050 = lshr i32 %2771, 18, !dbg !1166
  %and1120.i3051 = and i32 %shr1119.i3050, 63, !dbg !1166
  %idxprom1121.i3052 = zext i32 %and1120.i3051 to i64, !dbg !1166
  %arrayidx1122.i3053 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i3052, !dbg !1166
  %2772 = load i32, i32* %arrayidx1122.i3053, align 4, !dbg !1166
  %xor1123.i3054 = xor i32 %xor1118.i3049, %2772, !dbg !1166
  %2773 = load i32, i32* %u.i1943, align 4, !dbg !1166
  %shr1124.i3055 = lshr i32 %2773, 26, !dbg !1166
  %idxprom1126.i3056 = zext i32 %shr1124.i3055 to i64, !dbg !1166
  %arrayidx1127.i3057 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i3056, !dbg !1166
  %2774 = load i32, i32* %arrayidx1127.i3057, align 4, !dbg !1166
  %xor1128.i3058 = xor i32 %xor1123.i3054, %2774, !dbg !1166
  %2775 = load i32, i32* %t.i1942, align 4, !dbg !1166
  %shr1129.i3059 = lshr i32 %2775, 2, !dbg !1166
  %and1130.i3060 = and i32 %shr1129.i3059, 63, !dbg !1166
  %idxprom1131.i3061 = zext i32 %and1130.i3060 to i64, !dbg !1166
  %arrayidx1132.i3062 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i3061, !dbg !1166
  %2776 = load i32, i32* %arrayidx1132.i3062, align 4, !dbg !1166
  %xor1133.i3063 = xor i32 %xor1128.i3058, %2776, !dbg !1166
  %2777 = load i32, i32* %t.i1942, align 4, !dbg !1166
  %shr1134.i3064 = lshr i32 %2777, 10, !dbg !1166
  %and1135.i3065 = and i32 %shr1134.i3064, 63, !dbg !1166
  %idxprom1136.i3066 = zext i32 %and1135.i3065 to i64, !dbg !1166
  %arrayidx1137.i3067 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i3066, !dbg !1166
  %2778 = load i32, i32* %arrayidx1137.i3067, align 4, !dbg !1166
  %xor1138.i3068 = xor i32 %xor1133.i3063, %2778, !dbg !1166
  %2779 = load i32, i32* %t.i1942, align 4, !dbg !1166
  %shr1139.i3069 = lshr i32 %2779, 18, !dbg !1166
  %and1140.i3070 = and i32 %shr1139.i3069, 63, !dbg !1166
  %idxprom1141.i3071 = zext i32 %and1140.i3070 to i64, !dbg !1166
  %arrayidx1142.i3072 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i3071, !dbg !1166
  %2780 = load i32, i32* %arrayidx1142.i3072, align 4, !dbg !1166
  %xor1143.i3073 = xor i32 %xor1138.i3068, %2780, !dbg !1166
  %2781 = load i32, i32* %t.i1942, align 4, !dbg !1166
  %shr1144.i3074 = lshr i32 %2781, 26, !dbg !1166
  %idxprom1146.i3075 = zext i32 %shr1144.i3074 to i64, !dbg !1166
  %arrayidx1147.i3076 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i3075, !dbg !1166
  %2782 = load i32, i32* %arrayidx1147.i3076, align 4, !dbg !1166
  %xor1148.i3077 = xor i32 %xor1143.i3073, %2782, !dbg !1166
  %2783 = load i32, i32* %r.i1941, align 4, !dbg !1166
  %xor1149.i3078 = xor i32 %2783, %xor1148.i3077, !dbg !1166
  store i32 %xor1149.i3078, i32* %r.i1941, align 4, !dbg !1166
  %2784 = load i32, i32* %r.i1941, align 4, !dbg !1167
  %2785 = load i32*, i32** %s.i1944, align 8, !dbg !1167
  %arrayidx1150.i3079 = getelementptr inbounds i32, i32* %2785, i64 14, !dbg !1167
  %2786 = load i32, i32* %arrayidx1150.i3079, align 4, !dbg !1167
  %xor1151.i3080 = xor i32 %2784, %2786, !dbg !1167
  store i32 %xor1151.i3080, i32* %u.i1943, align 4, !dbg !1167
  %2787 = load i32, i32* %r.i1941, align 4, !dbg !1167
  %2788 = load i32*, i32** %s.i1944, align 8, !dbg !1167
  %arrayidx1152.i3081 = getelementptr inbounds i32, i32* %2788, i64 15, !dbg !1167
  %2789 = load i32, i32* %arrayidx1152.i3081, align 4, !dbg !1167
  %xor1153.i3082 = xor i32 %2787, %2789, !dbg !1167
  store i32 %xor1153.i3082, i32* %t.i1942, align 4, !dbg !1167
  %2790 = load i32, i32* %t.i1942, align 4, !dbg !768
  %2791 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2790) #5, !dbg !768, !srcloc !240
  store i32 %2791, i32* %ret1154.i1998, align 4, !dbg !768
  %2792 = load i32, i32* %ret1154.i1998, align 4, !dbg !768
  store i32 %2792, i32* %tmp1155.i1999, align 4, !dbg !768
  %2793 = load i32, i32* %tmp1155.i1999, align 4, !dbg !768
  store i32 %2793, i32* %t.i1942, align 4, !dbg !1167
  %2794 = load i32, i32* %u.i1943, align 4, !dbg !1167
  %shr1156.i3083 = lshr i32 %2794, 2, !dbg !1167
  %and1157.i3084 = and i32 %shr1156.i3083, 63, !dbg !1167
  %idxprom1158.i3085 = zext i32 %and1157.i3084 to i64, !dbg !1167
  %arrayidx1159.i3086 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i3085, !dbg !1167
  %2795 = load i32, i32* %arrayidx1159.i3086, align 4, !dbg !1167
  %2796 = load i32, i32* %u.i1943, align 4, !dbg !1167
  %shr1160.i3087 = lshr i32 %2796, 10, !dbg !1167
  %and1161.i3088 = and i32 %shr1160.i3087, 63, !dbg !1167
  %idxprom1162.i3089 = zext i32 %and1161.i3088 to i64, !dbg !1167
  %arrayidx1163.i3090 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i3089, !dbg !1167
  %2797 = load i32, i32* %arrayidx1163.i3090, align 4, !dbg !1167
  %xor1164.i3091 = xor i32 %2795, %2797, !dbg !1167
  %2798 = load i32, i32* %u.i1943, align 4, !dbg !1167
  %shr1165.i3092 = lshr i32 %2798, 18, !dbg !1167
  %and1166.i3093 = and i32 %shr1165.i3092, 63, !dbg !1167
  %idxprom1167.i3094 = zext i32 %and1166.i3093 to i64, !dbg !1167
  %arrayidx1168.i3095 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i3094, !dbg !1167
  %2799 = load i32, i32* %arrayidx1168.i3095, align 4, !dbg !1167
  %xor1169.i3096 = xor i32 %xor1164.i3091, %2799, !dbg !1167
  %2800 = load i32, i32* %u.i1943, align 4, !dbg !1167
  %shr1170.i3097 = lshr i32 %2800, 26, !dbg !1167
  %idxprom1172.i3098 = zext i32 %shr1170.i3097 to i64, !dbg !1167
  %arrayidx1173.i3099 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i3098, !dbg !1167
  %2801 = load i32, i32* %arrayidx1173.i3099, align 4, !dbg !1167
  %xor1174.i3100 = xor i32 %xor1169.i3096, %2801, !dbg !1167
  %2802 = load i32, i32* %t.i1942, align 4, !dbg !1167
  %shr1175.i3101 = lshr i32 %2802, 2, !dbg !1167
  %and1176.i3102 = and i32 %shr1175.i3101, 63, !dbg !1167
  %idxprom1177.i3103 = zext i32 %and1176.i3102 to i64, !dbg !1167
  %arrayidx1178.i3104 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i3103, !dbg !1167
  %2803 = load i32, i32* %arrayidx1178.i3104, align 4, !dbg !1167
  %xor1179.i3105 = xor i32 %xor1174.i3100, %2803, !dbg !1167
  %2804 = load i32, i32* %t.i1942, align 4, !dbg !1167
  %shr1180.i3106 = lshr i32 %2804, 10, !dbg !1167
  %and1181.i3107 = and i32 %shr1180.i3106, 63, !dbg !1167
  %idxprom1182.i3108 = zext i32 %and1181.i3107 to i64, !dbg !1167
  %arrayidx1183.i3109 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i3108, !dbg !1167
  %2805 = load i32, i32* %arrayidx1183.i3109, align 4, !dbg !1167
  %xor1184.i3110 = xor i32 %xor1179.i3105, %2805, !dbg !1167
  %2806 = load i32, i32* %t.i1942, align 4, !dbg !1167
  %shr1185.i3111 = lshr i32 %2806, 18, !dbg !1167
  %and1186.i3112 = and i32 %shr1185.i3111, 63, !dbg !1167
  %idxprom1187.i3113 = zext i32 %and1186.i3112 to i64, !dbg !1167
  %arrayidx1188.i3114 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i3113, !dbg !1167
  %2807 = load i32, i32* %arrayidx1188.i3114, align 4, !dbg !1167
  %xor1189.i3115 = xor i32 %xor1184.i3110, %2807, !dbg !1167
  %2808 = load i32, i32* %t.i1942, align 4, !dbg !1167
  %shr1190.i3116 = lshr i32 %2808, 26, !dbg !1167
  %idxprom1192.i3117 = zext i32 %shr1190.i3116 to i64, !dbg !1167
  %arrayidx1193.i3118 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i3117, !dbg !1167
  %2809 = load i32, i32* %arrayidx1193.i3118, align 4, !dbg !1167
  %xor1194.i3119 = xor i32 %xor1189.i3115, %2809, !dbg !1167
  %2810 = load i32, i32* %l.i1940, align 4, !dbg !1167
  %xor1195.i3120 = xor i32 %2810, %xor1194.i3119, !dbg !1167
  store i32 %xor1195.i3120, i32* %l.i1940, align 4, !dbg !1167
  %2811 = load i32, i32* %l.i1940, align 4, !dbg !1168
  %2812 = load i32*, i32** %s.i1944, align 8, !dbg !1168
  %arrayidx1196.i3121 = getelementptr inbounds i32, i32* %2812, i64 12, !dbg !1168
  %2813 = load i32, i32* %arrayidx1196.i3121, align 4, !dbg !1168
  %xor1197.i3122 = xor i32 %2811, %2813, !dbg !1168
  store i32 %xor1197.i3122, i32* %u.i1943, align 4, !dbg !1168
  %2814 = load i32, i32* %l.i1940, align 4, !dbg !1168
  %2815 = load i32*, i32** %s.i1944, align 8, !dbg !1168
  %arrayidx1198.i3123 = getelementptr inbounds i32, i32* %2815, i64 13, !dbg !1168
  %2816 = load i32, i32* %arrayidx1198.i3123, align 4, !dbg !1168
  %xor1199.i3124 = xor i32 %2814, %2816, !dbg !1168
  store i32 %xor1199.i3124, i32* %t.i1942, align 4, !dbg !1168
  %2817 = load i32, i32* %t.i1942, align 4, !dbg !769
  %2818 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2817) #5, !dbg !769, !srcloc !246
  store i32 %2818, i32* %ret1200.i2000, align 4, !dbg !769
  %2819 = load i32, i32* %ret1200.i2000, align 4, !dbg !769
  store i32 %2819, i32* %tmp1201.i2001, align 4, !dbg !769
  %2820 = load i32, i32* %tmp1201.i2001, align 4, !dbg !769
  store i32 %2820, i32* %t.i1942, align 4, !dbg !1168
  %2821 = load i32, i32* %u.i1943, align 4, !dbg !1168
  %shr1202.i3125 = lshr i32 %2821, 2, !dbg !1168
  %and1203.i3126 = and i32 %shr1202.i3125, 63, !dbg !1168
  %idxprom1204.i3127 = zext i32 %and1203.i3126 to i64, !dbg !1168
  %arrayidx1205.i3128 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i3127, !dbg !1168
  %2822 = load i32, i32* %arrayidx1205.i3128, align 4, !dbg !1168
  %2823 = load i32, i32* %u.i1943, align 4, !dbg !1168
  %shr1206.i3129 = lshr i32 %2823, 10, !dbg !1168
  %and1207.i3130 = and i32 %shr1206.i3129, 63, !dbg !1168
  %idxprom1208.i3131 = zext i32 %and1207.i3130 to i64, !dbg !1168
  %arrayidx1209.i3132 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i3131, !dbg !1168
  %2824 = load i32, i32* %arrayidx1209.i3132, align 4, !dbg !1168
  %xor1210.i3133 = xor i32 %2822, %2824, !dbg !1168
  %2825 = load i32, i32* %u.i1943, align 4, !dbg !1168
  %shr1211.i3134 = lshr i32 %2825, 18, !dbg !1168
  %and1212.i3135 = and i32 %shr1211.i3134, 63, !dbg !1168
  %idxprom1213.i3136 = zext i32 %and1212.i3135 to i64, !dbg !1168
  %arrayidx1214.i3137 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i3136, !dbg !1168
  %2826 = load i32, i32* %arrayidx1214.i3137, align 4, !dbg !1168
  %xor1215.i3138 = xor i32 %xor1210.i3133, %2826, !dbg !1168
  %2827 = load i32, i32* %u.i1943, align 4, !dbg !1168
  %shr1216.i3139 = lshr i32 %2827, 26, !dbg !1168
  %idxprom1218.i3140 = zext i32 %shr1216.i3139 to i64, !dbg !1168
  %arrayidx1219.i3141 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i3140, !dbg !1168
  %2828 = load i32, i32* %arrayidx1219.i3141, align 4, !dbg !1168
  %xor1220.i3142 = xor i32 %xor1215.i3138, %2828, !dbg !1168
  %2829 = load i32, i32* %t.i1942, align 4, !dbg !1168
  %shr1221.i3143 = lshr i32 %2829, 2, !dbg !1168
  %and1222.i3144 = and i32 %shr1221.i3143, 63, !dbg !1168
  %idxprom1223.i3145 = zext i32 %and1222.i3144 to i64, !dbg !1168
  %arrayidx1224.i3146 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i3145, !dbg !1168
  %2830 = load i32, i32* %arrayidx1224.i3146, align 4, !dbg !1168
  %xor1225.i3147 = xor i32 %xor1220.i3142, %2830, !dbg !1168
  %2831 = load i32, i32* %t.i1942, align 4, !dbg !1168
  %shr1226.i3148 = lshr i32 %2831, 10, !dbg !1168
  %and1227.i3149 = and i32 %shr1226.i3148, 63, !dbg !1168
  %idxprom1228.i3150 = zext i32 %and1227.i3149 to i64, !dbg !1168
  %arrayidx1229.i3151 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i3150, !dbg !1168
  %2832 = load i32, i32* %arrayidx1229.i3151, align 4, !dbg !1168
  %xor1230.i3152 = xor i32 %xor1225.i3147, %2832, !dbg !1168
  %2833 = load i32, i32* %t.i1942, align 4, !dbg !1168
  %shr1231.i3153 = lshr i32 %2833, 18, !dbg !1168
  %and1232.i3154 = and i32 %shr1231.i3153, 63, !dbg !1168
  %idxprom1233.i3155 = zext i32 %and1232.i3154 to i64, !dbg !1168
  %arrayidx1234.i3156 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i3155, !dbg !1168
  %2834 = load i32, i32* %arrayidx1234.i3156, align 4, !dbg !1168
  %xor1235.i3157 = xor i32 %xor1230.i3152, %2834, !dbg !1168
  %2835 = load i32, i32* %t.i1942, align 4, !dbg !1168
  %shr1236.i3158 = lshr i32 %2835, 26, !dbg !1168
  %idxprom1238.i3159 = zext i32 %shr1236.i3158 to i64, !dbg !1168
  %arrayidx1239.i3160 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i3159, !dbg !1168
  %2836 = load i32, i32* %arrayidx1239.i3160, align 4, !dbg !1168
  %xor1240.i3161 = xor i32 %xor1235.i3157, %2836, !dbg !1168
  %2837 = load i32, i32* %r.i1941, align 4, !dbg !1168
  %xor1241.i3162 = xor i32 %2837, %xor1240.i3161, !dbg !1168
  store i32 %xor1241.i3162, i32* %r.i1941, align 4, !dbg !1168
  %2838 = load i32, i32* %r.i1941, align 4, !dbg !1169
  %2839 = load i32*, i32** %s.i1944, align 8, !dbg !1169
  %arrayidx1242.i3163 = getelementptr inbounds i32, i32* %2839, i64 10, !dbg !1169
  %2840 = load i32, i32* %arrayidx1242.i3163, align 4, !dbg !1169
  %xor1243.i3164 = xor i32 %2838, %2840, !dbg !1169
  store i32 %xor1243.i3164, i32* %u.i1943, align 4, !dbg !1169
  %2841 = load i32, i32* %r.i1941, align 4, !dbg !1169
  %2842 = load i32*, i32** %s.i1944, align 8, !dbg !1169
  %arrayidx1244.i3165 = getelementptr inbounds i32, i32* %2842, i64 11, !dbg !1169
  %2843 = load i32, i32* %arrayidx1244.i3165, align 4, !dbg !1169
  %xor1245.i3166 = xor i32 %2841, %2843, !dbg !1169
  store i32 %xor1245.i3166, i32* %t.i1942, align 4, !dbg !1169
  %2844 = load i32, i32* %t.i1942, align 4, !dbg !770
  %2845 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2844) #5, !dbg !770, !srcloc !252
  store i32 %2845, i32* %ret1246.i2002, align 4, !dbg !770
  %2846 = load i32, i32* %ret1246.i2002, align 4, !dbg !770
  store i32 %2846, i32* %tmp1247.i2003, align 4, !dbg !770
  %2847 = load i32, i32* %tmp1247.i2003, align 4, !dbg !770
  store i32 %2847, i32* %t.i1942, align 4, !dbg !1169
  %2848 = load i32, i32* %u.i1943, align 4, !dbg !1169
  %shr1248.i3167 = lshr i32 %2848, 2, !dbg !1169
  %and1249.i3168 = and i32 %shr1248.i3167, 63, !dbg !1169
  %idxprom1250.i3169 = zext i32 %and1249.i3168 to i64, !dbg !1169
  %arrayidx1251.i3170 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i3169, !dbg !1169
  %2849 = load i32, i32* %arrayidx1251.i3170, align 4, !dbg !1169
  %2850 = load i32, i32* %u.i1943, align 4, !dbg !1169
  %shr1252.i3171 = lshr i32 %2850, 10, !dbg !1169
  %and1253.i3172 = and i32 %shr1252.i3171, 63, !dbg !1169
  %idxprom1254.i3173 = zext i32 %and1253.i3172 to i64, !dbg !1169
  %arrayidx1255.i3174 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i3173, !dbg !1169
  %2851 = load i32, i32* %arrayidx1255.i3174, align 4, !dbg !1169
  %xor1256.i3175 = xor i32 %2849, %2851, !dbg !1169
  %2852 = load i32, i32* %u.i1943, align 4, !dbg !1169
  %shr1257.i3176 = lshr i32 %2852, 18, !dbg !1169
  %and1258.i3177 = and i32 %shr1257.i3176, 63, !dbg !1169
  %idxprom1259.i3178 = zext i32 %and1258.i3177 to i64, !dbg !1169
  %arrayidx1260.i3179 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i3178, !dbg !1169
  %2853 = load i32, i32* %arrayidx1260.i3179, align 4, !dbg !1169
  %xor1261.i3180 = xor i32 %xor1256.i3175, %2853, !dbg !1169
  %2854 = load i32, i32* %u.i1943, align 4, !dbg !1169
  %shr1262.i3181 = lshr i32 %2854, 26, !dbg !1169
  %idxprom1264.i3182 = zext i32 %shr1262.i3181 to i64, !dbg !1169
  %arrayidx1265.i3183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i3182, !dbg !1169
  %2855 = load i32, i32* %arrayidx1265.i3183, align 4, !dbg !1169
  %xor1266.i3184 = xor i32 %xor1261.i3180, %2855, !dbg !1169
  %2856 = load i32, i32* %t.i1942, align 4, !dbg !1169
  %shr1267.i3185 = lshr i32 %2856, 2, !dbg !1169
  %and1268.i3186 = and i32 %shr1267.i3185, 63, !dbg !1169
  %idxprom1269.i3187 = zext i32 %and1268.i3186 to i64, !dbg !1169
  %arrayidx1270.i3188 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i3187, !dbg !1169
  %2857 = load i32, i32* %arrayidx1270.i3188, align 4, !dbg !1169
  %xor1271.i3189 = xor i32 %xor1266.i3184, %2857, !dbg !1169
  %2858 = load i32, i32* %t.i1942, align 4, !dbg !1169
  %shr1272.i3190 = lshr i32 %2858, 10, !dbg !1169
  %and1273.i3191 = and i32 %shr1272.i3190, 63, !dbg !1169
  %idxprom1274.i3192 = zext i32 %and1273.i3191 to i64, !dbg !1169
  %arrayidx1275.i3193 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i3192, !dbg !1169
  %2859 = load i32, i32* %arrayidx1275.i3193, align 4, !dbg !1169
  %xor1276.i3194 = xor i32 %xor1271.i3189, %2859, !dbg !1169
  %2860 = load i32, i32* %t.i1942, align 4, !dbg !1169
  %shr1277.i3195 = lshr i32 %2860, 18, !dbg !1169
  %and1278.i3196 = and i32 %shr1277.i3195, 63, !dbg !1169
  %idxprom1279.i3197 = zext i32 %and1278.i3196 to i64, !dbg !1169
  %arrayidx1280.i3198 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i3197, !dbg !1169
  %2861 = load i32, i32* %arrayidx1280.i3198, align 4, !dbg !1169
  %xor1281.i3199 = xor i32 %xor1276.i3194, %2861, !dbg !1169
  %2862 = load i32, i32* %t.i1942, align 4, !dbg !1169
  %shr1282.i3200 = lshr i32 %2862, 26, !dbg !1169
  %idxprom1284.i3201 = zext i32 %shr1282.i3200 to i64, !dbg !1169
  %arrayidx1285.i3202 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i3201, !dbg !1169
  %2863 = load i32, i32* %arrayidx1285.i3202, align 4, !dbg !1169
  %xor1286.i3203 = xor i32 %xor1281.i3199, %2863, !dbg !1169
  %2864 = load i32, i32* %l.i1940, align 4, !dbg !1169
  %xor1287.i3204 = xor i32 %2864, %xor1286.i3203, !dbg !1169
  store i32 %xor1287.i3204, i32* %l.i1940, align 4, !dbg !1169
  %2865 = load i32, i32* %l.i1940, align 4, !dbg !1170
  %2866 = load i32*, i32** %s.i1944, align 8, !dbg !1170
  %arrayidx1288.i3205 = getelementptr inbounds i32, i32* %2866, i64 8, !dbg !1170
  %2867 = load i32, i32* %arrayidx1288.i3205, align 4, !dbg !1170
  %xor1289.i3206 = xor i32 %2865, %2867, !dbg !1170
  store i32 %xor1289.i3206, i32* %u.i1943, align 4, !dbg !1170
  %2868 = load i32, i32* %l.i1940, align 4, !dbg !1170
  %2869 = load i32*, i32** %s.i1944, align 8, !dbg !1170
  %arrayidx1290.i3207 = getelementptr inbounds i32, i32* %2869, i64 9, !dbg !1170
  %2870 = load i32, i32* %arrayidx1290.i3207, align 4, !dbg !1170
  %xor1291.i3208 = xor i32 %2868, %2870, !dbg !1170
  store i32 %xor1291.i3208, i32* %t.i1942, align 4, !dbg !1170
  %2871 = load i32, i32* %t.i1942, align 4, !dbg !771
  %2872 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2871) #5, !dbg !771, !srcloc !258
  store i32 %2872, i32* %ret1292.i2004, align 4, !dbg !771
  %2873 = load i32, i32* %ret1292.i2004, align 4, !dbg !771
  store i32 %2873, i32* %tmp1293.i2005, align 4, !dbg !771
  %2874 = load i32, i32* %tmp1293.i2005, align 4, !dbg !771
  store i32 %2874, i32* %t.i1942, align 4, !dbg !1170
  %2875 = load i32, i32* %u.i1943, align 4, !dbg !1170
  %shr1294.i3209 = lshr i32 %2875, 2, !dbg !1170
  %and1295.i3210 = and i32 %shr1294.i3209, 63, !dbg !1170
  %idxprom1296.i3211 = zext i32 %and1295.i3210 to i64, !dbg !1170
  %arrayidx1297.i3212 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i3211, !dbg !1170
  %2876 = load i32, i32* %arrayidx1297.i3212, align 4, !dbg !1170
  %2877 = load i32, i32* %u.i1943, align 4, !dbg !1170
  %shr1298.i3213 = lshr i32 %2877, 10, !dbg !1170
  %and1299.i3214 = and i32 %shr1298.i3213, 63, !dbg !1170
  %idxprom1300.i3215 = zext i32 %and1299.i3214 to i64, !dbg !1170
  %arrayidx1301.i3216 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i3215, !dbg !1170
  %2878 = load i32, i32* %arrayidx1301.i3216, align 4, !dbg !1170
  %xor1302.i3217 = xor i32 %2876, %2878, !dbg !1170
  %2879 = load i32, i32* %u.i1943, align 4, !dbg !1170
  %shr1303.i3218 = lshr i32 %2879, 18, !dbg !1170
  %and1304.i3219 = and i32 %shr1303.i3218, 63, !dbg !1170
  %idxprom1305.i3220 = zext i32 %and1304.i3219 to i64, !dbg !1170
  %arrayidx1306.i3221 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i3220, !dbg !1170
  %2880 = load i32, i32* %arrayidx1306.i3221, align 4, !dbg !1170
  %xor1307.i3222 = xor i32 %xor1302.i3217, %2880, !dbg !1170
  %2881 = load i32, i32* %u.i1943, align 4, !dbg !1170
  %shr1308.i3223 = lshr i32 %2881, 26, !dbg !1170
  %idxprom1310.i3224 = zext i32 %shr1308.i3223 to i64, !dbg !1170
  %arrayidx1311.i3225 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i3224, !dbg !1170
  %2882 = load i32, i32* %arrayidx1311.i3225, align 4, !dbg !1170
  %xor1312.i3226 = xor i32 %xor1307.i3222, %2882, !dbg !1170
  %2883 = load i32, i32* %t.i1942, align 4, !dbg !1170
  %shr1313.i3227 = lshr i32 %2883, 2, !dbg !1170
  %and1314.i3228 = and i32 %shr1313.i3227, 63, !dbg !1170
  %idxprom1315.i3229 = zext i32 %and1314.i3228 to i64, !dbg !1170
  %arrayidx1316.i3230 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i3229, !dbg !1170
  %2884 = load i32, i32* %arrayidx1316.i3230, align 4, !dbg !1170
  %xor1317.i3231 = xor i32 %xor1312.i3226, %2884, !dbg !1170
  %2885 = load i32, i32* %t.i1942, align 4, !dbg !1170
  %shr1318.i3232 = lshr i32 %2885, 10, !dbg !1170
  %and1319.i3233 = and i32 %shr1318.i3232, 63, !dbg !1170
  %idxprom1320.i3234 = zext i32 %and1319.i3233 to i64, !dbg !1170
  %arrayidx1321.i3235 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i3234, !dbg !1170
  %2886 = load i32, i32* %arrayidx1321.i3235, align 4, !dbg !1170
  %xor1322.i3236 = xor i32 %xor1317.i3231, %2886, !dbg !1170
  %2887 = load i32, i32* %t.i1942, align 4, !dbg !1170
  %shr1323.i3237 = lshr i32 %2887, 18, !dbg !1170
  %and1324.i3238 = and i32 %shr1323.i3237, 63, !dbg !1170
  %idxprom1325.i3239 = zext i32 %and1324.i3238 to i64, !dbg !1170
  %arrayidx1326.i3240 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i3239, !dbg !1170
  %2888 = load i32, i32* %arrayidx1326.i3240, align 4, !dbg !1170
  %xor1327.i3241 = xor i32 %xor1322.i3236, %2888, !dbg !1170
  %2889 = load i32, i32* %t.i1942, align 4, !dbg !1170
  %shr1328.i3242 = lshr i32 %2889, 26, !dbg !1170
  %idxprom1330.i3243 = zext i32 %shr1328.i3242 to i64, !dbg !1170
  %arrayidx1331.i3244 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i3243, !dbg !1170
  %2890 = load i32, i32* %arrayidx1331.i3244, align 4, !dbg !1170
  %xor1332.i3245 = xor i32 %xor1327.i3241, %2890, !dbg !1170
  %2891 = load i32, i32* %r.i1941, align 4, !dbg !1170
  %xor1333.i3246 = xor i32 %2891, %xor1332.i3245, !dbg !1170
  store i32 %xor1333.i3246, i32* %r.i1941, align 4, !dbg !1170
  %2892 = load i32, i32* %r.i1941, align 4, !dbg !1171
  %2893 = load i32*, i32** %s.i1944, align 8, !dbg !1171
  %arrayidx1334.i3247 = getelementptr inbounds i32, i32* %2893, i64 6, !dbg !1171
  %2894 = load i32, i32* %arrayidx1334.i3247, align 4, !dbg !1171
  %xor1335.i3248 = xor i32 %2892, %2894, !dbg !1171
  store i32 %xor1335.i3248, i32* %u.i1943, align 4, !dbg !1171
  %2895 = load i32, i32* %r.i1941, align 4, !dbg !1171
  %2896 = load i32*, i32** %s.i1944, align 8, !dbg !1171
  %arrayidx1336.i3249 = getelementptr inbounds i32, i32* %2896, i64 7, !dbg !1171
  %2897 = load i32, i32* %arrayidx1336.i3249, align 4, !dbg !1171
  %xor1337.i3250 = xor i32 %2895, %2897, !dbg !1171
  store i32 %xor1337.i3250, i32* %t.i1942, align 4, !dbg !1171
  %2898 = load i32, i32* %t.i1942, align 4, !dbg !772
  %2899 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2898) #5, !dbg !772, !srcloc !264
  store i32 %2899, i32* %ret1338.i2006, align 4, !dbg !772
  %2900 = load i32, i32* %ret1338.i2006, align 4, !dbg !772
  store i32 %2900, i32* %tmp1339.i2007, align 4, !dbg !772
  %2901 = load i32, i32* %tmp1339.i2007, align 4, !dbg !772
  store i32 %2901, i32* %t.i1942, align 4, !dbg !1171
  %2902 = load i32, i32* %u.i1943, align 4, !dbg !1171
  %shr1340.i3251 = lshr i32 %2902, 2, !dbg !1171
  %and1341.i3252 = and i32 %shr1340.i3251, 63, !dbg !1171
  %idxprom1342.i3253 = zext i32 %and1341.i3252 to i64, !dbg !1171
  %arrayidx1343.i3254 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i3253, !dbg !1171
  %2903 = load i32, i32* %arrayidx1343.i3254, align 4, !dbg !1171
  %2904 = load i32, i32* %u.i1943, align 4, !dbg !1171
  %shr1344.i3255 = lshr i32 %2904, 10, !dbg !1171
  %and1345.i3256 = and i32 %shr1344.i3255, 63, !dbg !1171
  %idxprom1346.i3257 = zext i32 %and1345.i3256 to i64, !dbg !1171
  %arrayidx1347.i3258 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i3257, !dbg !1171
  %2905 = load i32, i32* %arrayidx1347.i3258, align 4, !dbg !1171
  %xor1348.i3259 = xor i32 %2903, %2905, !dbg !1171
  %2906 = load i32, i32* %u.i1943, align 4, !dbg !1171
  %shr1349.i3260 = lshr i32 %2906, 18, !dbg !1171
  %and1350.i3261 = and i32 %shr1349.i3260, 63, !dbg !1171
  %idxprom1351.i3262 = zext i32 %and1350.i3261 to i64, !dbg !1171
  %arrayidx1352.i3263 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i3262, !dbg !1171
  %2907 = load i32, i32* %arrayidx1352.i3263, align 4, !dbg !1171
  %xor1353.i3264 = xor i32 %xor1348.i3259, %2907, !dbg !1171
  %2908 = load i32, i32* %u.i1943, align 4, !dbg !1171
  %shr1354.i3265 = lshr i32 %2908, 26, !dbg !1171
  %idxprom1356.i3266 = zext i32 %shr1354.i3265 to i64, !dbg !1171
  %arrayidx1357.i3267 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i3266, !dbg !1171
  %2909 = load i32, i32* %arrayidx1357.i3267, align 4, !dbg !1171
  %xor1358.i3268 = xor i32 %xor1353.i3264, %2909, !dbg !1171
  %2910 = load i32, i32* %t.i1942, align 4, !dbg !1171
  %shr1359.i3269 = lshr i32 %2910, 2, !dbg !1171
  %and1360.i3270 = and i32 %shr1359.i3269, 63, !dbg !1171
  %idxprom1361.i3271 = zext i32 %and1360.i3270 to i64, !dbg !1171
  %arrayidx1362.i3272 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i3271, !dbg !1171
  %2911 = load i32, i32* %arrayidx1362.i3272, align 4, !dbg !1171
  %xor1363.i3273 = xor i32 %xor1358.i3268, %2911, !dbg !1171
  %2912 = load i32, i32* %t.i1942, align 4, !dbg !1171
  %shr1364.i3274 = lshr i32 %2912, 10, !dbg !1171
  %and1365.i3275 = and i32 %shr1364.i3274, 63, !dbg !1171
  %idxprom1366.i3276 = zext i32 %and1365.i3275 to i64, !dbg !1171
  %arrayidx1367.i3277 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i3276, !dbg !1171
  %2913 = load i32, i32* %arrayidx1367.i3277, align 4, !dbg !1171
  %xor1368.i3278 = xor i32 %xor1363.i3273, %2913, !dbg !1171
  %2914 = load i32, i32* %t.i1942, align 4, !dbg !1171
  %shr1369.i3279 = lshr i32 %2914, 18, !dbg !1171
  %and1370.i3280 = and i32 %shr1369.i3279, 63, !dbg !1171
  %idxprom1371.i3281 = zext i32 %and1370.i3280 to i64, !dbg !1171
  %arrayidx1372.i3282 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i3281, !dbg !1171
  %2915 = load i32, i32* %arrayidx1372.i3282, align 4, !dbg !1171
  %xor1373.i3283 = xor i32 %xor1368.i3278, %2915, !dbg !1171
  %2916 = load i32, i32* %t.i1942, align 4, !dbg !1171
  %shr1374.i3284 = lshr i32 %2916, 26, !dbg !1171
  %idxprom1376.i3285 = zext i32 %shr1374.i3284 to i64, !dbg !1171
  %arrayidx1377.i3286 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i3285, !dbg !1171
  %2917 = load i32, i32* %arrayidx1377.i3286, align 4, !dbg !1171
  %xor1378.i3287 = xor i32 %xor1373.i3283, %2917, !dbg !1171
  %2918 = load i32, i32* %l.i1940, align 4, !dbg !1171
  %xor1379.i3288 = xor i32 %2918, %xor1378.i3287, !dbg !1171
  store i32 %xor1379.i3288, i32* %l.i1940, align 4, !dbg !1171
  %2919 = load i32, i32* %l.i1940, align 4, !dbg !1172
  %2920 = load i32*, i32** %s.i1944, align 8, !dbg !1172
  %arrayidx1380.i3289 = getelementptr inbounds i32, i32* %2920, i64 4, !dbg !1172
  %2921 = load i32, i32* %arrayidx1380.i3289, align 4, !dbg !1172
  %xor1381.i3290 = xor i32 %2919, %2921, !dbg !1172
  store i32 %xor1381.i3290, i32* %u.i1943, align 4, !dbg !1172
  %2922 = load i32, i32* %l.i1940, align 4, !dbg !1172
  %2923 = load i32*, i32** %s.i1944, align 8, !dbg !1172
  %arrayidx1382.i3291 = getelementptr inbounds i32, i32* %2923, i64 5, !dbg !1172
  %2924 = load i32, i32* %arrayidx1382.i3291, align 4, !dbg !1172
  %xor1383.i3292 = xor i32 %2922, %2924, !dbg !1172
  store i32 %xor1383.i3292, i32* %t.i1942, align 4, !dbg !1172
  %2925 = load i32, i32* %t.i1942, align 4, !dbg !773
  %2926 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2925) #5, !dbg !773, !srcloc !270
  store i32 %2926, i32* %ret1384.i2008, align 4, !dbg !773
  %2927 = load i32, i32* %ret1384.i2008, align 4, !dbg !773
  store i32 %2927, i32* %tmp1385.i2009, align 4, !dbg !773
  %2928 = load i32, i32* %tmp1385.i2009, align 4, !dbg !773
  store i32 %2928, i32* %t.i1942, align 4, !dbg !1172
  %2929 = load i32, i32* %u.i1943, align 4, !dbg !1172
  %shr1386.i3293 = lshr i32 %2929, 2, !dbg !1172
  %and1387.i3294 = and i32 %shr1386.i3293, 63, !dbg !1172
  %idxprom1388.i3295 = zext i32 %and1387.i3294 to i64, !dbg !1172
  %arrayidx1389.i3296 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i3295, !dbg !1172
  %2930 = load i32, i32* %arrayidx1389.i3296, align 4, !dbg !1172
  %2931 = load i32, i32* %u.i1943, align 4, !dbg !1172
  %shr1390.i3297 = lshr i32 %2931, 10, !dbg !1172
  %and1391.i3298 = and i32 %shr1390.i3297, 63, !dbg !1172
  %idxprom1392.i3299 = zext i32 %and1391.i3298 to i64, !dbg !1172
  %arrayidx1393.i3300 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i3299, !dbg !1172
  %2932 = load i32, i32* %arrayidx1393.i3300, align 4, !dbg !1172
  %xor1394.i3301 = xor i32 %2930, %2932, !dbg !1172
  %2933 = load i32, i32* %u.i1943, align 4, !dbg !1172
  %shr1395.i3302 = lshr i32 %2933, 18, !dbg !1172
  %and1396.i3303 = and i32 %shr1395.i3302, 63, !dbg !1172
  %idxprom1397.i3304 = zext i32 %and1396.i3303 to i64, !dbg !1172
  %arrayidx1398.i3305 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i3304, !dbg !1172
  %2934 = load i32, i32* %arrayidx1398.i3305, align 4, !dbg !1172
  %xor1399.i3306 = xor i32 %xor1394.i3301, %2934, !dbg !1172
  %2935 = load i32, i32* %u.i1943, align 4, !dbg !1172
  %shr1400.i3307 = lshr i32 %2935, 26, !dbg !1172
  %idxprom1402.i3308 = zext i32 %shr1400.i3307 to i64, !dbg !1172
  %arrayidx1403.i3309 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i3308, !dbg !1172
  %2936 = load i32, i32* %arrayidx1403.i3309, align 4, !dbg !1172
  %xor1404.i3310 = xor i32 %xor1399.i3306, %2936, !dbg !1172
  %2937 = load i32, i32* %t.i1942, align 4, !dbg !1172
  %shr1405.i3311 = lshr i32 %2937, 2, !dbg !1172
  %and1406.i3312 = and i32 %shr1405.i3311, 63, !dbg !1172
  %idxprom1407.i3313 = zext i32 %and1406.i3312 to i64, !dbg !1172
  %arrayidx1408.i3314 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i3313, !dbg !1172
  %2938 = load i32, i32* %arrayidx1408.i3314, align 4, !dbg !1172
  %xor1409.i3315 = xor i32 %xor1404.i3310, %2938, !dbg !1172
  %2939 = load i32, i32* %t.i1942, align 4, !dbg !1172
  %shr1410.i3316 = lshr i32 %2939, 10, !dbg !1172
  %and1411.i3317 = and i32 %shr1410.i3316, 63, !dbg !1172
  %idxprom1412.i3318 = zext i32 %and1411.i3317 to i64, !dbg !1172
  %arrayidx1413.i3319 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i3318, !dbg !1172
  %2940 = load i32, i32* %arrayidx1413.i3319, align 4, !dbg !1172
  %xor1414.i3320 = xor i32 %xor1409.i3315, %2940, !dbg !1172
  %2941 = load i32, i32* %t.i1942, align 4, !dbg !1172
  %shr1415.i3321 = lshr i32 %2941, 18, !dbg !1172
  %and1416.i3322 = and i32 %shr1415.i3321, 63, !dbg !1172
  %idxprom1417.i3323 = zext i32 %and1416.i3322 to i64, !dbg !1172
  %arrayidx1418.i3324 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i3323, !dbg !1172
  %2942 = load i32, i32* %arrayidx1418.i3324, align 4, !dbg !1172
  %xor1419.i3325 = xor i32 %xor1414.i3320, %2942, !dbg !1172
  %2943 = load i32, i32* %t.i1942, align 4, !dbg !1172
  %shr1420.i3326 = lshr i32 %2943, 26, !dbg !1172
  %idxprom1422.i3327 = zext i32 %shr1420.i3326 to i64, !dbg !1172
  %arrayidx1423.i3328 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i3327, !dbg !1172
  %2944 = load i32, i32* %arrayidx1423.i3328, align 4, !dbg !1172
  %xor1424.i3329 = xor i32 %xor1419.i3325, %2944, !dbg !1172
  %2945 = load i32, i32* %r.i1941, align 4, !dbg !1172
  %xor1425.i3330 = xor i32 %2945, %xor1424.i3329, !dbg !1172
  store i32 %xor1425.i3330, i32* %r.i1941, align 4, !dbg !1172
  %2946 = load i32, i32* %r.i1941, align 4, !dbg !1173
  %2947 = load i32*, i32** %s.i1944, align 8, !dbg !1173
  %arrayidx1426.i3331 = getelementptr inbounds i32, i32* %2947, i64 2, !dbg !1173
  %2948 = load i32, i32* %arrayidx1426.i3331, align 4, !dbg !1173
  %xor1427.i3332 = xor i32 %2946, %2948, !dbg !1173
  store i32 %xor1427.i3332, i32* %u.i1943, align 4, !dbg !1173
  %2949 = load i32, i32* %r.i1941, align 4, !dbg !1173
  %2950 = load i32*, i32** %s.i1944, align 8, !dbg !1173
  %arrayidx1428.i3333 = getelementptr inbounds i32, i32* %2950, i64 3, !dbg !1173
  %2951 = load i32, i32* %arrayidx1428.i3333, align 4, !dbg !1173
  %xor1429.i3334 = xor i32 %2949, %2951, !dbg !1173
  store i32 %xor1429.i3334, i32* %t.i1942, align 4, !dbg !1173
  %2952 = load i32, i32* %t.i1942, align 4, !dbg !774
  %2953 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2952) #5, !dbg !774, !srcloc !276
  store i32 %2953, i32* %ret1430.i2010, align 4, !dbg !774
  %2954 = load i32, i32* %ret1430.i2010, align 4, !dbg !774
  store i32 %2954, i32* %tmp1431.i2011, align 4, !dbg !774
  %2955 = load i32, i32* %tmp1431.i2011, align 4, !dbg !774
  store i32 %2955, i32* %t.i1942, align 4, !dbg !1173
  %2956 = load i32, i32* %u.i1943, align 4, !dbg !1173
  %shr1432.i3335 = lshr i32 %2956, 2, !dbg !1173
  %and1433.i3336 = and i32 %shr1432.i3335, 63, !dbg !1173
  %idxprom1434.i3337 = zext i32 %and1433.i3336 to i64, !dbg !1173
  %arrayidx1435.i3338 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i3337, !dbg !1173
  %2957 = load i32, i32* %arrayidx1435.i3338, align 4, !dbg !1173
  %2958 = load i32, i32* %u.i1943, align 4, !dbg !1173
  %shr1436.i3339 = lshr i32 %2958, 10, !dbg !1173
  %and1437.i3340 = and i32 %shr1436.i3339, 63, !dbg !1173
  %idxprom1438.i3341 = zext i32 %and1437.i3340 to i64, !dbg !1173
  %arrayidx1439.i3342 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i3341, !dbg !1173
  %2959 = load i32, i32* %arrayidx1439.i3342, align 4, !dbg !1173
  %xor1440.i3343 = xor i32 %2957, %2959, !dbg !1173
  %2960 = load i32, i32* %u.i1943, align 4, !dbg !1173
  %shr1441.i3344 = lshr i32 %2960, 18, !dbg !1173
  %and1442.i3345 = and i32 %shr1441.i3344, 63, !dbg !1173
  %idxprom1443.i3346 = zext i32 %and1442.i3345 to i64, !dbg !1173
  %arrayidx1444.i3347 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i3346, !dbg !1173
  %2961 = load i32, i32* %arrayidx1444.i3347, align 4, !dbg !1173
  %xor1445.i3348 = xor i32 %xor1440.i3343, %2961, !dbg !1173
  %2962 = load i32, i32* %u.i1943, align 4, !dbg !1173
  %shr1446.i3349 = lshr i32 %2962, 26, !dbg !1173
  %idxprom1448.i3350 = zext i32 %shr1446.i3349 to i64, !dbg !1173
  %arrayidx1449.i3351 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i3350, !dbg !1173
  %2963 = load i32, i32* %arrayidx1449.i3351, align 4, !dbg !1173
  %xor1450.i3352 = xor i32 %xor1445.i3348, %2963, !dbg !1173
  %2964 = load i32, i32* %t.i1942, align 4, !dbg !1173
  %shr1451.i3353 = lshr i32 %2964, 2, !dbg !1173
  %and1452.i3354 = and i32 %shr1451.i3353, 63, !dbg !1173
  %idxprom1453.i3355 = zext i32 %and1452.i3354 to i64, !dbg !1173
  %arrayidx1454.i3356 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i3355, !dbg !1173
  %2965 = load i32, i32* %arrayidx1454.i3356, align 4, !dbg !1173
  %xor1455.i3357 = xor i32 %xor1450.i3352, %2965, !dbg !1173
  %2966 = load i32, i32* %t.i1942, align 4, !dbg !1173
  %shr1456.i3358 = lshr i32 %2966, 10, !dbg !1173
  %and1457.i3359 = and i32 %shr1456.i3358, 63, !dbg !1173
  %idxprom1458.i3360 = zext i32 %and1457.i3359 to i64, !dbg !1173
  %arrayidx1459.i3361 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i3360, !dbg !1173
  %2967 = load i32, i32* %arrayidx1459.i3361, align 4, !dbg !1173
  %xor1460.i3362 = xor i32 %xor1455.i3357, %2967, !dbg !1173
  %2968 = load i32, i32* %t.i1942, align 4, !dbg !1173
  %shr1461.i3363 = lshr i32 %2968, 18, !dbg !1173
  %and1462.i3364 = and i32 %shr1461.i3363, 63, !dbg !1173
  %idxprom1463.i3365 = zext i32 %and1462.i3364 to i64, !dbg !1173
  %arrayidx1464.i3366 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i3365, !dbg !1173
  %2969 = load i32, i32* %arrayidx1464.i3366, align 4, !dbg !1173
  %xor1465.i3367 = xor i32 %xor1460.i3362, %2969, !dbg !1173
  %2970 = load i32, i32* %t.i1942, align 4, !dbg !1173
  %shr1466.i3368 = lshr i32 %2970, 26, !dbg !1173
  %idxprom1468.i3369 = zext i32 %shr1466.i3368 to i64, !dbg !1173
  %arrayidx1469.i3370 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i3369, !dbg !1173
  %2971 = load i32, i32* %arrayidx1469.i3370, align 4, !dbg !1173
  %xor1470.i3371 = xor i32 %xor1465.i3367, %2971, !dbg !1173
  %2972 = load i32, i32* %l.i1940, align 4, !dbg !1173
  %xor1471.i3372 = xor i32 %2972, %xor1470.i3371, !dbg !1173
  store i32 %xor1471.i3372, i32* %l.i1940, align 4, !dbg !1173
  %2973 = load i32, i32* %l.i1940, align 4, !dbg !1174
  %2974 = load i32*, i32** %s.i1944, align 8, !dbg !1174
  %2975 = load i32, i32* %2974, align 4, !dbg !1174
  %xor1473.i3373 = xor i32 %2973, %2975, !dbg !1174
  store i32 %xor1473.i3373, i32* %u.i1943, align 4, !dbg !1174
  %2976 = load i32, i32* %l.i1940, align 4, !dbg !1174
  %2977 = load i32*, i32** %s.i1944, align 8, !dbg !1174
  %arrayidx1474.i3374 = getelementptr inbounds i32, i32* %2977, i64 1, !dbg !1174
  %2978 = load i32, i32* %arrayidx1474.i3374, align 4, !dbg !1174
  %xor1475.i3375 = xor i32 %2976, %2978, !dbg !1174
  store i32 %xor1475.i3375, i32* %t.i1942, align 4, !dbg !1174
  %2979 = load i32, i32* %t.i1942, align 4, !dbg !775
  %2980 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2979) #5, !dbg !775, !srcloc !282
  store i32 %2980, i32* %ret1476.i2012, align 4, !dbg !775
  %2981 = load i32, i32* %ret1476.i2012, align 4, !dbg !775
  store i32 %2981, i32* %tmp1477.i2013, align 4, !dbg !775
  %2982 = load i32, i32* %tmp1477.i2013, align 4, !dbg !775
  store i32 %2982, i32* %t.i1942, align 4, !dbg !1174
  %2983 = load i32, i32* %u.i1943, align 4, !dbg !1174
  %shr1478.i3376 = lshr i32 %2983, 2, !dbg !1174
  %and1479.i3377 = and i32 %shr1478.i3376, 63, !dbg !1174
  %idxprom1480.i3378 = zext i32 %and1479.i3377 to i64, !dbg !1174
  %arrayidx1481.i3379 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i3378, !dbg !1174
  %2984 = load i32, i32* %arrayidx1481.i3379, align 4, !dbg !1174
  %2985 = load i32, i32* %u.i1943, align 4, !dbg !1174
  %shr1482.i3380 = lshr i32 %2985, 10, !dbg !1174
  %and1483.i3381 = and i32 %shr1482.i3380, 63, !dbg !1174
  %idxprom1484.i3382 = zext i32 %and1483.i3381 to i64, !dbg !1174
  %arrayidx1485.i3383 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i3382, !dbg !1174
  %2986 = load i32, i32* %arrayidx1485.i3383, align 4, !dbg !1174
  %xor1486.i3384 = xor i32 %2984, %2986, !dbg !1174
  %2987 = load i32, i32* %u.i1943, align 4, !dbg !1174
  %shr1487.i3385 = lshr i32 %2987, 18, !dbg !1174
  %and1488.i3386 = and i32 %shr1487.i3385, 63, !dbg !1174
  %idxprom1489.i3387 = zext i32 %and1488.i3386 to i64, !dbg !1174
  %arrayidx1490.i3388 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i3387, !dbg !1174
  %2988 = load i32, i32* %arrayidx1490.i3388, align 4, !dbg !1174
  %xor1491.i3389 = xor i32 %xor1486.i3384, %2988, !dbg !1174
  %2989 = load i32, i32* %u.i1943, align 4, !dbg !1174
  %shr1492.i3390 = lshr i32 %2989, 26, !dbg !1174
  %idxprom1494.i3391 = zext i32 %shr1492.i3390 to i64, !dbg !1174
  %arrayidx1495.i3392 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i3391, !dbg !1174
  %2990 = load i32, i32* %arrayidx1495.i3392, align 4, !dbg !1174
  %xor1496.i3393 = xor i32 %xor1491.i3389, %2990, !dbg !1174
  %2991 = load i32, i32* %t.i1942, align 4, !dbg !1174
  %shr1497.i3394 = lshr i32 %2991, 2, !dbg !1174
  %and1498.i3395 = and i32 %shr1497.i3394, 63, !dbg !1174
  %idxprom1499.i3396 = zext i32 %and1498.i3395 to i64, !dbg !1174
  %arrayidx1500.i3397 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i3396, !dbg !1174
  %2992 = load i32, i32* %arrayidx1500.i3397, align 4, !dbg !1174
  %xor1501.i3398 = xor i32 %xor1496.i3393, %2992, !dbg !1174
  %2993 = load i32, i32* %t.i1942, align 4, !dbg !1174
  %shr1502.i3399 = lshr i32 %2993, 10, !dbg !1174
  %and1503.i3400 = and i32 %shr1502.i3399, 63, !dbg !1174
  %idxprom1504.i3401 = zext i32 %and1503.i3400 to i64, !dbg !1174
  %arrayidx1505.i3402 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i3401, !dbg !1174
  %2994 = load i32, i32* %arrayidx1505.i3402, align 4, !dbg !1174
  %xor1506.i3403 = xor i32 %xor1501.i3398, %2994, !dbg !1174
  %2995 = load i32, i32* %t.i1942, align 4, !dbg !1174
  %shr1507.i3404 = lshr i32 %2995, 18, !dbg !1174
  %and1508.i3405 = and i32 %shr1507.i3404, 63, !dbg !1174
  %idxprom1509.i3406 = zext i32 %and1508.i3405 to i64, !dbg !1174
  %arrayidx1510.i3407 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i3406, !dbg !1174
  %2996 = load i32, i32* %arrayidx1510.i3407, align 4, !dbg !1174
  %xor1511.i3408 = xor i32 %xor1506.i3403, %2996, !dbg !1174
  %2997 = load i32, i32* %t.i1942, align 4, !dbg !1174
  %shr1512.i3409 = lshr i32 %2997, 26, !dbg !1174
  %idxprom1514.i3410 = zext i32 %shr1512.i3409 to i64, !dbg !1174
  %arrayidx1515.i3411 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i3410, !dbg !1174
  %2998 = load i32, i32* %arrayidx1515.i3411, align 4, !dbg !1174
  %xor1516.i3412 = xor i32 %xor1511.i3408, %2998, !dbg !1174
  %2999 = load i32, i32* %r.i1941, align 4, !dbg !1174
  %xor1517.i3413 = xor i32 %2999, %xor1516.i3412, !dbg !1174
  store i32 %xor1517.i3413, i32* %r.i1941, align 4, !dbg !1174
  br label %DES_encrypt1.exit3462

DES_encrypt1.exit3462:                            ; preds = %if.then.i2742, %if.else.i3414
  %3000 = load i32, i32* %l.i1940, align 4, !dbg !776
  %3001 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %3000) #5, !dbg !776, !srcloc !286
  store i32 %3001, i32* %ret1518.i2014, align 4, !dbg !776
  %3002 = load i32, i32* %ret1518.i2014, align 4, !dbg !776
  store i32 %3002, i32* %tmp1519.i2015, align 4, !dbg !776
  %3003 = load i32, i32* %tmp1519.i2015, align 4, !dbg !776
  %conv1520.i3415 = zext i32 %3003 to i64, !dbg !1175
  %and1521.i3416 = and i64 %conv1520.i3415, 4294967295, !dbg !1176
  %conv1522.i3417 = trunc i64 %and1521.i3416 to i32, !dbg !1175
  store i32 %conv1522.i3417, i32* %l.i1940, align 4, !dbg !1177
  %3004 = load i32, i32* %r.i1941, align 4, !dbg !777
  %3005 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %3004) #5, !dbg !777, !srcloc !293
  store i32 %3005, i32* %ret1523.i2016, align 4, !dbg !777
  %3006 = load i32, i32* %ret1523.i2016, align 4, !dbg !777
  store i32 %3006, i32* %tmp1524.i2017, align 4, !dbg !777
  %3007 = load i32, i32* %tmp1524.i2017, align 4, !dbg !777
  %conv1525.i3418 = zext i32 %3007 to i64, !dbg !1178
  %and1526.i3419 = and i64 %conv1525.i3418, 4294967295, !dbg !1179
  %conv1527.i3420 = trunc i64 %and1526.i3419 to i32, !dbg !1178
  store i32 %conv1527.i3420, i32* %r.i1941, align 4, !dbg !1180
  %3008 = load i32, i32* %r.i1941, align 4, !dbg !778
  %shr1529.i3421 = lshr i32 %3008, 1, !dbg !778
  %3009 = load i32, i32* %l.i1940, align 4, !dbg !778
  %xor1530.i3422 = xor i32 %shr1529.i3421, %3009, !dbg !778
  %conv1531.i3423 = zext i32 %xor1530.i3422 to i64, !dbg !778
  %and1532.i3424 = and i64 %conv1531.i3423, 1431655765, !dbg !778
  %conv1533.i3425 = trunc i64 %and1532.i3424 to i32, !dbg !778
  store i32 %conv1533.i3425, i32* %tt1528.i2018, align 4, !dbg !778
  %3010 = load i32, i32* %tt1528.i2018, align 4, !dbg !778
  %3011 = load i32, i32* %l.i1940, align 4, !dbg !778
  %xor1534.i3426 = xor i32 %3011, %3010, !dbg !778
  store i32 %xor1534.i3426, i32* %l.i1940, align 4, !dbg !778
  %3012 = load i32, i32* %tt1528.i2018, align 4, !dbg !778
  %shl1535.i3427 = shl i32 %3012, 1, !dbg !778
  %3013 = load i32, i32* %r.i1941, align 4, !dbg !778
  %xor1536.i3428 = xor i32 %3013, %shl1535.i3427, !dbg !778
  store i32 %xor1536.i3428, i32* %r.i1941, align 4, !dbg !778
  %3014 = load i32, i32* %l.i1940, align 4, !dbg !778
  %shr1537.i3429 = lshr i32 %3014, 8, !dbg !778
  %3015 = load i32, i32* %r.i1941, align 4, !dbg !778
  %xor1538.i3430 = xor i32 %shr1537.i3429, %3015, !dbg !778
  %conv1539.i3431 = zext i32 %xor1538.i3430 to i64, !dbg !778
  %and1540.i3432 = and i64 %conv1539.i3431, 16711935, !dbg !778
  %conv1541.i3433 = trunc i64 %and1540.i3432 to i32, !dbg !778
  store i32 %conv1541.i3433, i32* %tt1528.i2018, align 4, !dbg !778
  %3016 = load i32, i32* %tt1528.i2018, align 4, !dbg !778
  %3017 = load i32, i32* %r.i1941, align 4, !dbg !778
  %xor1542.i3434 = xor i32 %3017, %3016, !dbg !778
  store i32 %xor1542.i3434, i32* %r.i1941, align 4, !dbg !778
  %3018 = load i32, i32* %tt1528.i2018, align 4, !dbg !778
  %shl1543.i3435 = shl i32 %3018, 8, !dbg !778
  %3019 = load i32, i32* %l.i1940, align 4, !dbg !778
  %xor1544.i3436 = xor i32 %3019, %shl1543.i3435, !dbg !778
  store i32 %xor1544.i3436, i32* %l.i1940, align 4, !dbg !778
  %3020 = load i32, i32* %r.i1941, align 4, !dbg !778
  %shr1545.i3437 = lshr i32 %3020, 2, !dbg !778
  %3021 = load i32, i32* %l.i1940, align 4, !dbg !778
  %xor1546.i3438 = xor i32 %shr1545.i3437, %3021, !dbg !778
  %conv1547.i3439 = zext i32 %xor1546.i3438 to i64, !dbg !778
  %and1548.i3440 = and i64 %conv1547.i3439, 858993459, !dbg !778
  %conv1549.i3441 = trunc i64 %and1548.i3440 to i32, !dbg !778
  store i32 %conv1549.i3441, i32* %tt1528.i2018, align 4, !dbg !778
  %3022 = load i32, i32* %tt1528.i2018, align 4, !dbg !778
  %3023 = load i32, i32* %l.i1940, align 4, !dbg !778
  %xor1550.i3442 = xor i32 %3023, %3022, !dbg !778
  store i32 %xor1550.i3442, i32* %l.i1940, align 4, !dbg !778
  %3024 = load i32, i32* %tt1528.i2018, align 4, !dbg !778
  %shl1551.i3443 = shl i32 %3024, 2, !dbg !778
  %3025 = load i32, i32* %r.i1941, align 4, !dbg !778
  %xor1552.i3444 = xor i32 %3025, %shl1551.i3443, !dbg !778
  store i32 %xor1552.i3444, i32* %r.i1941, align 4, !dbg !778
  %3026 = load i32, i32* %l.i1940, align 4, !dbg !778
  %shr1553.i3445 = lshr i32 %3026, 16, !dbg !778
  %3027 = load i32, i32* %r.i1941, align 4, !dbg !778
  %xor1554.i3446 = xor i32 %shr1553.i3445, %3027, !dbg !778
  %conv1555.i3447 = zext i32 %xor1554.i3446 to i64, !dbg !778
  %and1556.i3448 = and i64 %conv1555.i3447, 65535, !dbg !778
  %conv1557.i3449 = trunc i64 %and1556.i3448 to i32, !dbg !778
  store i32 %conv1557.i3449, i32* %tt1528.i2018, align 4, !dbg !778
  %3028 = load i32, i32* %tt1528.i2018, align 4, !dbg !778
  %3029 = load i32, i32* %r.i1941, align 4, !dbg !778
  %xor1558.i3450 = xor i32 %3029, %3028, !dbg !778
  store i32 %xor1558.i3450, i32* %r.i1941, align 4, !dbg !778
  %3030 = load i32, i32* %tt1528.i2018, align 4, !dbg !778
  %shl1559.i3451 = shl i32 %3030, 16, !dbg !778
  %3031 = load i32, i32* %l.i1940, align 4, !dbg !778
  %xor1560.i3452 = xor i32 %3031, %shl1559.i3451, !dbg !778
  store i32 %xor1560.i3452, i32* %l.i1940, align 4, !dbg !778
  %3032 = load i32, i32* %r.i1941, align 4, !dbg !778
  %shr1561.i3453 = lshr i32 %3032, 4, !dbg !778
  %3033 = load i32, i32* %l.i1940, align 4, !dbg !778
  %xor1562.i3454 = xor i32 %shr1561.i3453, %3033, !dbg !778
  %conv1563.i3455 = zext i32 %xor1562.i3454 to i64, !dbg !778
  %and1564.i3456 = and i64 %conv1563.i3455, 252645135, !dbg !778
  %conv1565.i3457 = trunc i64 %and1564.i3456 to i32, !dbg !778
  store i32 %conv1565.i3457, i32* %tt1528.i2018, align 4, !dbg !778
  %3034 = load i32, i32* %tt1528.i2018, align 4, !dbg !778
  %3035 = load i32, i32* %l.i1940, align 4, !dbg !778
  %xor1566.i3458 = xor i32 %3035, %3034, !dbg !778
  store i32 %xor1566.i3458, i32* %l.i1940, align 4, !dbg !778
  %3036 = load i32, i32* %tt1528.i2018, align 4, !dbg !778
  %shl1567.i3459 = shl i32 %3036, 4, !dbg !778
  %3037 = load i32, i32* %r.i1941, align 4, !dbg !778
  %xor1568.i3460 = xor i32 %3037, %shl1567.i3459, !dbg !778
  store i32 %xor1568.i3460, i32* %r.i1941, align 4, !dbg !778
  %3038 = load i32, i32* %l.i1940, align 4, !dbg !1181
  %3039 = load i32*, i32** %data.addr.i1937, align 8, !dbg !1182
  store i32 %3038, i32* %3039, align 4, !dbg !1183
  %3040 = load i32, i32* %r.i1941, align 4, !dbg !1184
  %3041 = load i32*, i32** %data.addr.i1937, align 8, !dbg !1185
  %arrayidx1570.i3461 = getelementptr inbounds i32, i32* %3041, i64 1, !dbg !1185
  store i32 %3040, i32* %arrayidx1570.i3461, align 4, !dbg !1186
  store i32 0, i32* %u.i1943, align 4, !dbg !1187
  store i32 0, i32* %t.i1942, align 4, !dbg !1188
  store i32 0, i32* %r.i1941, align 4, !dbg !1189
  store i32 0, i32* %l.i1940, align 4, !dbg !1190
  %arrayidx259 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1191
  %3042 = load i32, i32* %arrayidx259, align 4, !dbg !1191
  %3043 = load i32, i32* %xor0, align 4, !dbg !1192
  %xor260 = xor i32 %3042, %3043, !dbg !1193
  store i32 %xor260, i32* %tout0, align 4, !dbg !1194
  %arrayidx261 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1195
  %3044 = load i32, i32* %arrayidx261, align 4, !dbg !1195
  %3045 = load i32, i32* %xor1, align 4, !dbg !1196
  %xor262 = xor i32 %3044, %3045, !dbg !1197
  store i32 %xor262, i32* %tout1, align 4, !dbg !1198
  %3046 = load i32, i32* %tout0, align 4, !dbg !1199
  %and263 = and i32 %3046, 255, !dbg !1199
  %conv264 = trunc i32 %and263 to i8, !dbg !1199
  %3047 = load i8*, i8** %out.addr, align 8, !dbg !1199
  %incdec.ptr265 = getelementptr inbounds i8, i8* %3047, i32 1, !dbg !1199
  store i8* %incdec.ptr265, i8** %out.addr, align 8, !dbg !1199
  store i8 %conv264, i8* %3047, align 1, !dbg !1199
  %3048 = load i32, i32* %tout0, align 4, !dbg !1199
  %shr266 = lshr i32 %3048, 8, !dbg !1199
  %and267 = and i32 %shr266, 255, !dbg !1199
  %conv268 = trunc i32 %and267 to i8, !dbg !1199
  %3049 = load i8*, i8** %out.addr, align 8, !dbg !1199
  %incdec.ptr269 = getelementptr inbounds i8, i8* %3049, i32 1, !dbg !1199
  store i8* %incdec.ptr269, i8** %out.addr, align 8, !dbg !1199
  store i8 %conv268, i8* %3049, align 1, !dbg !1199
  %3050 = load i32, i32* %tout0, align 4, !dbg !1199
  %shr270 = lshr i32 %3050, 16, !dbg !1199
  %and271 = and i32 %shr270, 255, !dbg !1199
  %conv272 = trunc i32 %and271 to i8, !dbg !1199
  %3051 = load i8*, i8** %out.addr, align 8, !dbg !1199
  %incdec.ptr273 = getelementptr inbounds i8, i8* %3051, i32 1, !dbg !1199
  store i8* %incdec.ptr273, i8** %out.addr, align 8, !dbg !1199
  store i8 %conv272, i8* %3051, align 1, !dbg !1199
  %3052 = load i32, i32* %tout0, align 4, !dbg !1199
  %shr274 = lshr i32 %3052, 24, !dbg !1199
  %and275 = and i32 %shr274, 255, !dbg !1199
  %conv276 = trunc i32 %and275 to i8, !dbg !1199
  %3053 = load i8*, i8** %out.addr, align 8, !dbg !1199
  %incdec.ptr277 = getelementptr inbounds i8, i8* %3053, i32 1, !dbg !1199
  store i8* %incdec.ptr277, i8** %out.addr, align 8, !dbg !1199
  store i8 %conv276, i8* %3053, align 1, !dbg !1199
  %3054 = load i32, i32* %tout1, align 4, !dbg !1200
  %and278 = and i32 %3054, 255, !dbg !1200
  %conv279 = trunc i32 %and278 to i8, !dbg !1200
  %3055 = load i8*, i8** %out.addr, align 8, !dbg !1200
  %incdec.ptr280 = getelementptr inbounds i8, i8* %3055, i32 1, !dbg !1200
  store i8* %incdec.ptr280, i8** %out.addr, align 8, !dbg !1200
  store i8 %conv279, i8* %3055, align 1, !dbg !1200
  %3056 = load i32, i32* %tout1, align 4, !dbg !1200
  %shr281 = lshr i32 %3056, 8, !dbg !1200
  %and282 = and i32 %shr281, 255, !dbg !1200
  %conv283 = trunc i32 %and282 to i8, !dbg !1200
  %3057 = load i8*, i8** %out.addr, align 8, !dbg !1200
  %incdec.ptr284 = getelementptr inbounds i8, i8* %3057, i32 1, !dbg !1200
  store i8* %incdec.ptr284, i8** %out.addr, align 8, !dbg !1200
  store i8 %conv283, i8* %3057, align 1, !dbg !1200
  %3058 = load i32, i32* %tout1, align 4, !dbg !1200
  %shr285 = lshr i32 %3058, 16, !dbg !1200
  %and286 = and i32 %shr285, 255, !dbg !1200
  %conv287 = trunc i32 %and286 to i8, !dbg !1200
  %3059 = load i8*, i8** %out.addr, align 8, !dbg !1200
  %incdec.ptr288 = getelementptr inbounds i8, i8* %3059, i32 1, !dbg !1200
  store i8* %incdec.ptr288, i8** %out.addr, align 8, !dbg !1200
  store i8 %conv287, i8* %3059, align 1, !dbg !1200
  %3060 = load i32, i32* %tout1, align 4, !dbg !1200
  %shr289 = lshr i32 %3060, 24, !dbg !1200
  %and290 = and i32 %shr289, 255, !dbg !1200
  %conv291 = trunc i32 %and290 to i8, !dbg !1200
  %3061 = load i8*, i8** %out.addr, align 8, !dbg !1200
  %incdec.ptr292 = getelementptr inbounds i8, i8* %3061, i32 1, !dbg !1200
  store i8* %incdec.ptr292, i8** %out.addr, align 8, !dbg !1200
  store i8 %conv291, i8* %3061, align 1, !dbg !1200
  %3062 = load i32, i32* %tin0, align 4, !dbg !1201
  store i32 %3062, i32* %xor0, align 4, !dbg !1202
  %3063 = load i32, i32* %tin1, align 4, !dbg !1203
  store i32 %3063, i32* %xor1, align 4, !dbg !1204
  br label %for.inc293, !dbg !1205

for.inc293:                                       ; preds = %DES_encrypt1.exit3462
  %3064 = load i64, i64* %l, align 8, !dbg !1206
  %sub294 = sub nsw i64 %3064, 8, !dbg !1206
  store i64 %sub294, i64* %l, align 8, !dbg !1206
  br label %for.cond224, !dbg !1207, !llvm.loop !1208

for.end295:                                       ; preds = %for.cond224
  %3065 = load i64, i64* %l, align 8, !dbg !1210
  %cmp296 = icmp ne i64 %3065, -8, !dbg !1211
  br i1 %cmp296, label %if.then298, label %if.end376, !dbg !1212

if.then298:                                       ; preds = %for.end295
  %3066 = load i8*, i8** %in.addr, align 8, !dbg !1213
  %incdec.ptr299 = getelementptr inbounds i8, i8* %3066, i32 1, !dbg !1213
  store i8* %incdec.ptr299, i8** %in.addr, align 8, !dbg !1213
  %3067 = load i8, i8* %3066, align 1, !dbg !1213
  %conv300 = zext i8 %3067 to i32, !dbg !1213
  store i32 %conv300, i32* %tin0, align 4, !dbg !1213
  %3068 = load i8*, i8** %in.addr, align 8, !dbg !1213
  %incdec.ptr301 = getelementptr inbounds i8, i8* %3068, i32 1, !dbg !1213
  store i8* %incdec.ptr301, i8** %in.addr, align 8, !dbg !1213
  %3069 = load i8, i8* %3068, align 1, !dbg !1213
  %conv302 = zext i8 %3069 to i32, !dbg !1213
  %shl303 = shl i32 %conv302, 8, !dbg !1213
  %3070 = load i32, i32* %tin0, align 4, !dbg !1213
  %or304 = or i32 %3070, %shl303, !dbg !1213
  store i32 %or304, i32* %tin0, align 4, !dbg !1213
  %3071 = load i8*, i8** %in.addr, align 8, !dbg !1213
  %incdec.ptr305 = getelementptr inbounds i8, i8* %3071, i32 1, !dbg !1213
  store i8* %incdec.ptr305, i8** %in.addr, align 8, !dbg !1213
  %3072 = load i8, i8* %3071, align 1, !dbg !1213
  %conv306 = zext i8 %3072 to i32, !dbg !1213
  %shl307 = shl i32 %conv306, 16, !dbg !1213
  %3073 = load i32, i32* %tin0, align 4, !dbg !1213
  %or308 = or i32 %3073, %shl307, !dbg !1213
  store i32 %or308, i32* %tin0, align 4, !dbg !1213
  %3074 = load i8*, i8** %in.addr, align 8, !dbg !1213
  %incdec.ptr309 = getelementptr inbounds i8, i8* %3074, i32 1, !dbg !1213
  store i8* %incdec.ptr309, i8** %in.addr, align 8, !dbg !1213
  %3075 = load i8, i8* %3074, align 1, !dbg !1213
  %conv310 = zext i8 %3075 to i32, !dbg !1213
  %shl311 = shl i32 %conv310, 24, !dbg !1213
  %3076 = load i32, i32* %tin0, align 4, !dbg !1213
  %or312 = or i32 %3076, %shl311, !dbg !1213
  store i32 %or312, i32* %tin0, align 4, !dbg !1213
  %3077 = load i32, i32* %tin0, align 4, !dbg !1214
  %arrayidx313 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1215
  store i32 %3077, i32* %arrayidx313, align 4, !dbg !1216
  %3078 = load i8*, i8** %in.addr, align 8, !dbg !1217
  %incdec.ptr314 = getelementptr inbounds i8, i8* %3078, i32 1, !dbg !1217
  store i8* %incdec.ptr314, i8** %in.addr, align 8, !dbg !1217
  %3079 = load i8, i8* %3078, align 1, !dbg !1217
  %conv315 = zext i8 %3079 to i32, !dbg !1217
  store i32 %conv315, i32* %tin1, align 4, !dbg !1217
  %3080 = load i8*, i8** %in.addr, align 8, !dbg !1217
  %incdec.ptr316 = getelementptr inbounds i8, i8* %3080, i32 1, !dbg !1217
  store i8* %incdec.ptr316, i8** %in.addr, align 8, !dbg !1217
  %3081 = load i8, i8* %3080, align 1, !dbg !1217
  %conv317 = zext i8 %3081 to i32, !dbg !1217
  %shl318 = shl i32 %conv317, 8, !dbg !1217
  %3082 = load i32, i32* %tin1, align 4, !dbg !1217
  %or319 = or i32 %3082, %shl318, !dbg !1217
  store i32 %or319, i32* %tin1, align 4, !dbg !1217
  %3083 = load i8*, i8** %in.addr, align 8, !dbg !1217
  %incdec.ptr320 = getelementptr inbounds i8, i8* %3083, i32 1, !dbg !1217
  store i8* %incdec.ptr320, i8** %in.addr, align 8, !dbg !1217
  %3084 = load i8, i8* %3083, align 1, !dbg !1217
  %conv321 = zext i8 %3084 to i32, !dbg !1217
  %shl322 = shl i32 %conv321, 16, !dbg !1217
  %3085 = load i32, i32* %tin1, align 4, !dbg !1217
  %or323 = or i32 %3085, %shl322, !dbg !1217
  store i32 %or323, i32* %tin1, align 4, !dbg !1217
  %3086 = load i8*, i8** %in.addr, align 8, !dbg !1217
  %incdec.ptr324 = getelementptr inbounds i8, i8* %3086, i32 1, !dbg !1217
  store i8* %incdec.ptr324, i8** %in.addr, align 8, !dbg !1217
  %3087 = load i8, i8* %3086, align 1, !dbg !1217
  %conv325 = zext i8 %3087 to i32, !dbg !1217
  %shl326 = shl i32 %conv325, 24, !dbg !1217
  %3088 = load i32, i32* %tin1, align 4, !dbg !1217
  %or327 = or i32 %3088, %shl326, !dbg !1217
  store i32 %or327, i32* %tin1, align 4, !dbg !1217
  %3089 = load i32, i32* %tin1, align 4, !dbg !1218
  %arrayidx328 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1219
  store i32 %3089, i32* %arrayidx328, align 4, !dbg !1220
  %arraydecay329 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1221
  %3090 = load %struct.DES_ks*, %struct.DES_ks** %_schedule.addr, align 8, !dbg !1222
  store i32* %arraydecay329, i32** %data.addr.i3463, align 8
  store %struct.DES_ks* %3090, %struct.DES_ks** %ks.addr.i3464, align 8
  store i32 0, i32* %enc.addr.i3465, align 4
  %3091 = load i32*, i32** %data.addr.i3463, align 8, !dbg !1223
  %3092 = load i32, i32* %3091, align 4, !dbg !1223
  store i32 %3092, i32* %r.i3467, align 4, !dbg !1224
  %3093 = load i32*, i32** %data.addr.i3463, align 8, !dbg !1225
  %arrayidx1.i3545 = getelementptr inbounds i32, i32* %3093, i64 1, !dbg !1225
  %3094 = load i32, i32* %arrayidx1.i3545, align 4, !dbg !1225
  store i32 %3094, i32* %l.i3466, align 4, !dbg !1226
  %3095 = load i32, i32* %l.i3466, align 4, !dbg !691
  %shr.i3546 = lshr i32 %3095, 4, !dbg !691
  %3096 = load i32, i32* %r.i3467, align 4, !dbg !691
  %xor.i3547 = xor i32 %shr.i3546, %3096, !dbg !691
  %conv.i3548 = zext i32 %xor.i3547 to i64, !dbg !691
  %and.i3549 = and i64 %conv.i3548, 252645135, !dbg !691
  %conv2.i3550 = trunc i64 %and.i3549 to i32, !dbg !691
  store i32 %conv2.i3550, i32* %tt.i3471, align 4, !dbg !691
  %3097 = load i32, i32* %tt.i3471, align 4, !dbg !691
  %3098 = load i32, i32* %r.i3467, align 4, !dbg !691
  %xor3.i3551 = xor i32 %3098, %3097, !dbg !691
  store i32 %xor3.i3551, i32* %r.i3467, align 4, !dbg !691
  %3099 = load i32, i32* %tt.i3471, align 4, !dbg !691
  %shl.i3552 = shl i32 %3099, 4, !dbg !691
  %3100 = load i32, i32* %l.i3466, align 4, !dbg !691
  %xor4.i3553 = xor i32 %3100, %shl.i3552, !dbg !691
  store i32 %xor4.i3553, i32* %l.i3466, align 4, !dbg !691
  %3101 = load i32, i32* %r.i3467, align 4, !dbg !691
  %shr5.i3554 = lshr i32 %3101, 16, !dbg !691
  %3102 = load i32, i32* %l.i3466, align 4, !dbg !691
  %xor6.i3555 = xor i32 %shr5.i3554, %3102, !dbg !691
  %conv7.i3556 = zext i32 %xor6.i3555 to i64, !dbg !691
  %and8.i3557 = and i64 %conv7.i3556, 65535, !dbg !691
  %conv9.i3558 = trunc i64 %and8.i3557 to i32, !dbg !691
  store i32 %conv9.i3558, i32* %tt.i3471, align 4, !dbg !691
  %3103 = load i32, i32* %tt.i3471, align 4, !dbg !691
  %3104 = load i32, i32* %l.i3466, align 4, !dbg !691
  %xor10.i3559 = xor i32 %3104, %3103, !dbg !691
  store i32 %xor10.i3559, i32* %l.i3466, align 4, !dbg !691
  %3105 = load i32, i32* %tt.i3471, align 4, !dbg !691
  %shl11.i3560 = shl i32 %3105, 16, !dbg !691
  %3106 = load i32, i32* %r.i3467, align 4, !dbg !691
  %xor12.i3561 = xor i32 %3106, %shl11.i3560, !dbg !691
  store i32 %xor12.i3561, i32* %r.i3467, align 4, !dbg !691
  %3107 = load i32, i32* %l.i3466, align 4, !dbg !691
  %shr13.i3562 = lshr i32 %3107, 2, !dbg !691
  %3108 = load i32, i32* %r.i3467, align 4, !dbg !691
  %xor14.i3563 = xor i32 %shr13.i3562, %3108, !dbg !691
  %conv15.i3564 = zext i32 %xor14.i3563 to i64, !dbg !691
  %and16.i3565 = and i64 %conv15.i3564, 858993459, !dbg !691
  %conv17.i3566 = trunc i64 %and16.i3565 to i32, !dbg !691
  store i32 %conv17.i3566, i32* %tt.i3471, align 4, !dbg !691
  %3109 = load i32, i32* %tt.i3471, align 4, !dbg !691
  %3110 = load i32, i32* %r.i3467, align 4, !dbg !691
  %xor18.i3567 = xor i32 %3110, %3109, !dbg !691
  store i32 %xor18.i3567, i32* %r.i3467, align 4, !dbg !691
  %3111 = load i32, i32* %tt.i3471, align 4, !dbg !691
  %shl19.i3568 = shl i32 %3111, 2, !dbg !691
  %3112 = load i32, i32* %l.i3466, align 4, !dbg !691
  %xor20.i3569 = xor i32 %3112, %shl19.i3568, !dbg !691
  store i32 %xor20.i3569, i32* %l.i3466, align 4, !dbg !691
  %3113 = load i32, i32* %r.i3467, align 4, !dbg !691
  %shr21.i3570 = lshr i32 %3113, 8, !dbg !691
  %3114 = load i32, i32* %l.i3466, align 4, !dbg !691
  %xor22.i3571 = xor i32 %shr21.i3570, %3114, !dbg !691
  %conv23.i3572 = zext i32 %xor22.i3571 to i64, !dbg !691
  %and24.i3573 = and i64 %conv23.i3572, 16711935, !dbg !691
  %conv25.i3574 = trunc i64 %and24.i3573 to i32, !dbg !691
  store i32 %conv25.i3574, i32* %tt.i3471, align 4, !dbg !691
  %3115 = load i32, i32* %tt.i3471, align 4, !dbg !691
  %3116 = load i32, i32* %l.i3466, align 4, !dbg !691
  %xor26.i3575 = xor i32 %3116, %3115, !dbg !691
  store i32 %xor26.i3575, i32* %l.i3466, align 4, !dbg !691
  %3117 = load i32, i32* %tt.i3471, align 4, !dbg !691
  %shl27.i3576 = shl i32 %3117, 8, !dbg !691
  %3118 = load i32, i32* %r.i3467, align 4, !dbg !691
  %xor28.i3577 = xor i32 %3118, %shl27.i3576, !dbg !691
  store i32 %xor28.i3577, i32* %r.i3467, align 4, !dbg !691
  %3119 = load i32, i32* %l.i3466, align 4, !dbg !691
  %shr29.i3578 = lshr i32 %3119, 1, !dbg !691
  %3120 = load i32, i32* %r.i3467, align 4, !dbg !691
  %xor30.i3579 = xor i32 %shr29.i3578, %3120, !dbg !691
  %conv31.i3580 = zext i32 %xor30.i3579 to i64, !dbg !691
  %and32.i3581 = and i64 %conv31.i3580, 1431655765, !dbg !691
  %conv33.i3582 = trunc i64 %and32.i3581 to i32, !dbg !691
  store i32 %conv33.i3582, i32* %tt.i3471, align 4, !dbg !691
  %3121 = load i32, i32* %tt.i3471, align 4, !dbg !691
  %3122 = load i32, i32* %r.i3467, align 4, !dbg !691
  %xor34.i3583 = xor i32 %3122, %3121, !dbg !691
  store i32 %xor34.i3583, i32* %r.i3467, align 4, !dbg !691
  %3123 = load i32, i32* %tt.i3471, align 4, !dbg !691
  %shl35.i3584 = shl i32 %3123, 1, !dbg !691
  %3124 = load i32, i32* %l.i3466, align 4, !dbg !691
  %xor36.i3585 = xor i32 %3124, %shl35.i3584, !dbg !691
  store i32 %xor36.i3585, i32* %l.i3466, align 4, !dbg !691
  %3125 = load i32, i32* %r.i3467, align 4, !dbg !692
  %3126 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %3125) #5, !dbg !692, !srcloc !70
  store i32 %3126, i32* %ret.i3472, align 4, !dbg !692
  %3127 = load i32, i32* %ret.i3472, align 4, !dbg !692
  store i32 %3127, i32* %tmp.i3473, align 4, !dbg !692
  %3128 = load i32, i32* %tmp.i3473, align 4, !dbg !692
  %conv37.i3586 = zext i32 %3128 to i64, !dbg !1227
  %and38.i3587 = and i64 %conv37.i3586, 4294967295, !dbg !1228
  %conv39.i3588 = trunc i64 %and38.i3587 to i32, !dbg !1227
  store i32 %conv39.i3588, i32* %r.i3467, align 4, !dbg !1229
  %3129 = load i32, i32* %l.i3466, align 4, !dbg !693
  %3130 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %3129) #5, !dbg !693, !srcloc !77
  store i32 %3130, i32* %ret40.i3474, align 4, !dbg !693
  %3131 = load i32, i32* %ret40.i3474, align 4, !dbg !693
  store i32 %3131, i32* %tmp41.i3475, align 4, !dbg !693
  %3132 = load i32, i32* %tmp41.i3475, align 4, !dbg !693
  %conv42.i3589 = zext i32 %3132 to i64, !dbg !1230
  %and43.i3590 = and i64 %conv42.i3589, 4294967295, !dbg !1231
  %conv44.i3591 = trunc i64 %and43.i3590 to i32, !dbg !1230
  store i32 %conv44.i3591, i32* %l.i3466, align 4, !dbg !1232
  %3133 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i3464, align 8, !dbg !1233
  %ks45.i3592 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %3133, i32 0, i32 0, !dbg !1234
  %arraydecay.i3593 = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i3592, i64 0, i64 0, !dbg !1235
  %deslong.i3594 = bitcast %union.anon* %arraydecay.i3593 to [2 x i32]*, !dbg !1235
  %arraydecay46.i3595 = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i3594, i64 0, i64 0, !dbg !1233
  store i32* %arraydecay46.i3595, i32** %s.i3470, align 8, !dbg !1236
  %3134 = load i32, i32* %enc.addr.i3465, align 4, !dbg !1237
  %tobool.i3596 = icmp ne i32 %3134, 0, !dbg !1237
  br i1 %tobool.i3596, label %if.then.i4268, label %if.else.i4940, !dbg !1238

if.then.i4268:                                    ; preds = %if.then298
  %3135 = load i32, i32* %r.i3467, align 4, !dbg !1239
  %3136 = load i32*, i32** %s.i3470, align 8, !dbg !1239
  %3137 = load i32, i32* %3136, align 4, !dbg !1239
  %xor48.i3597 = xor i32 %3135, %3137, !dbg !1239
  store i32 %xor48.i3597, i32* %u.i3469, align 4, !dbg !1239
  %3138 = load i32, i32* %r.i3467, align 4, !dbg !1239
  %3139 = load i32*, i32** %s.i3470, align 8, !dbg !1239
  %arrayidx49.i3598 = getelementptr inbounds i32, i32* %3139, i64 1, !dbg !1239
  %3140 = load i32, i32* %arrayidx49.i3598, align 4, !dbg !1239
  %xor50.i3599 = xor i32 %3138, %3140, !dbg !1239
  store i32 %xor50.i3599, i32* %t.i3468, align 4, !dbg !1239
  %3141 = load i32, i32* %t.i3468, align 4, !dbg !694
  %3142 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3141) #5, !dbg !694, !srcloc !94
  store i32 %3142, i32* %ret51.i3476, align 4, !dbg !694
  %3143 = load i32, i32* %ret51.i3476, align 4, !dbg !694
  store i32 %3143, i32* %tmp52.i3477, align 4, !dbg !694
  %3144 = load i32, i32* %tmp52.i3477, align 4, !dbg !694
  store i32 %3144, i32* %t.i3468, align 4, !dbg !1239
  %3145 = load i32, i32* %u.i3469, align 4, !dbg !1239
  %shr53.i3600 = lshr i32 %3145, 2, !dbg !1239
  %and54.i3601 = and i32 %shr53.i3600, 63, !dbg !1239
  %idxprom.i3602 = zext i32 %and54.i3601 to i64, !dbg !1239
  %arrayidx55.i3603 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i3602, !dbg !1239
  %3146 = load i32, i32* %arrayidx55.i3603, align 4, !dbg !1239
  %3147 = load i32, i32* %u.i3469, align 4, !dbg !1239
  %shr56.i3604 = lshr i32 %3147, 10, !dbg !1239
  %and57.i3605 = and i32 %shr56.i3604, 63, !dbg !1239
  %idxprom58.i3606 = zext i32 %and57.i3605 to i64, !dbg !1239
  %arrayidx59.i3607 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i3606, !dbg !1239
  %3148 = load i32, i32* %arrayidx59.i3607, align 4, !dbg !1239
  %xor60.i3608 = xor i32 %3146, %3148, !dbg !1239
  %3149 = load i32, i32* %u.i3469, align 4, !dbg !1239
  %shr61.i3609 = lshr i32 %3149, 18, !dbg !1239
  %and62.i3610 = and i32 %shr61.i3609, 63, !dbg !1239
  %idxprom63.i3611 = zext i32 %and62.i3610 to i64, !dbg !1239
  %arrayidx64.i3612 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i3611, !dbg !1239
  %3150 = load i32, i32* %arrayidx64.i3612, align 4, !dbg !1239
  %xor65.i3613 = xor i32 %xor60.i3608, %3150, !dbg !1239
  %3151 = load i32, i32* %u.i3469, align 4, !dbg !1239
  %shr66.i3614 = lshr i32 %3151, 26, !dbg !1239
  %idxprom68.i3615 = zext i32 %shr66.i3614 to i64, !dbg !1239
  %arrayidx69.i3616 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i3615, !dbg !1239
  %3152 = load i32, i32* %arrayidx69.i3616, align 4, !dbg !1239
  %xor70.i3617 = xor i32 %xor65.i3613, %3152, !dbg !1239
  %3153 = load i32, i32* %t.i3468, align 4, !dbg !1239
  %shr71.i3618 = lshr i32 %3153, 2, !dbg !1239
  %and72.i3619 = and i32 %shr71.i3618, 63, !dbg !1239
  %idxprom73.i3620 = zext i32 %and72.i3619 to i64, !dbg !1239
  %arrayidx74.i3621 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i3620, !dbg !1239
  %3154 = load i32, i32* %arrayidx74.i3621, align 4, !dbg !1239
  %xor75.i3622 = xor i32 %xor70.i3617, %3154, !dbg !1239
  %3155 = load i32, i32* %t.i3468, align 4, !dbg !1239
  %shr76.i3623 = lshr i32 %3155, 10, !dbg !1239
  %and77.i3624 = and i32 %shr76.i3623, 63, !dbg !1239
  %idxprom78.i3625 = zext i32 %and77.i3624 to i64, !dbg !1239
  %arrayidx79.i3626 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i3625, !dbg !1239
  %3156 = load i32, i32* %arrayidx79.i3626, align 4, !dbg !1239
  %xor80.i3627 = xor i32 %xor75.i3622, %3156, !dbg !1239
  %3157 = load i32, i32* %t.i3468, align 4, !dbg !1239
  %shr81.i3628 = lshr i32 %3157, 18, !dbg !1239
  %and82.i3629 = and i32 %shr81.i3628, 63, !dbg !1239
  %idxprom83.i3630 = zext i32 %and82.i3629 to i64, !dbg !1239
  %arrayidx84.i3631 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i3630, !dbg !1239
  %3158 = load i32, i32* %arrayidx84.i3631, align 4, !dbg !1239
  %xor85.i3632 = xor i32 %xor80.i3627, %3158, !dbg !1239
  %3159 = load i32, i32* %t.i3468, align 4, !dbg !1239
  %shr86.i3633 = lshr i32 %3159, 26, !dbg !1239
  %idxprom88.i3634 = zext i32 %shr86.i3633 to i64, !dbg !1239
  %arrayidx89.i3635 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i3634, !dbg !1239
  %3160 = load i32, i32* %arrayidx89.i3635, align 4, !dbg !1239
  %xor90.i3636 = xor i32 %xor85.i3632, %3160, !dbg !1239
  %3161 = load i32, i32* %l.i3466, align 4, !dbg !1239
  %xor91.i3637 = xor i32 %3161, %xor90.i3636, !dbg !1239
  store i32 %xor91.i3637, i32* %l.i3466, align 4, !dbg !1239
  %3162 = load i32, i32* %l.i3466, align 4, !dbg !1240
  %3163 = load i32*, i32** %s.i3470, align 8, !dbg !1240
  %arrayidx92.i3638 = getelementptr inbounds i32, i32* %3163, i64 2, !dbg !1240
  %3164 = load i32, i32* %arrayidx92.i3638, align 4, !dbg !1240
  %xor93.i3639 = xor i32 %3162, %3164, !dbg !1240
  store i32 %xor93.i3639, i32* %u.i3469, align 4, !dbg !1240
  %3165 = load i32, i32* %l.i3466, align 4, !dbg !1240
  %3166 = load i32*, i32** %s.i3470, align 8, !dbg !1240
  %arrayidx94.i3640 = getelementptr inbounds i32, i32* %3166, i64 3, !dbg !1240
  %3167 = load i32, i32* %arrayidx94.i3640, align 4, !dbg !1240
  %xor95.i3641 = xor i32 %3165, %3167, !dbg !1240
  store i32 %xor95.i3641, i32* %t.i3468, align 4, !dbg !1240
  %3168 = load i32, i32* %t.i3468, align 4, !dbg !695
  %3169 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3168) #5, !dbg !695, !srcloc !100
  store i32 %3169, i32* %ret96.i3478, align 4, !dbg !695
  %3170 = load i32, i32* %ret96.i3478, align 4, !dbg !695
  store i32 %3170, i32* %tmp97.i3479, align 4, !dbg !695
  %3171 = load i32, i32* %tmp97.i3479, align 4, !dbg !695
  store i32 %3171, i32* %t.i3468, align 4, !dbg !1240
  %3172 = load i32, i32* %u.i3469, align 4, !dbg !1240
  %shr98.i3642 = lshr i32 %3172, 2, !dbg !1240
  %and99.i3643 = and i32 %shr98.i3642, 63, !dbg !1240
  %idxprom100.i3644 = zext i32 %and99.i3643 to i64, !dbg !1240
  %arrayidx101.i3645 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i3644, !dbg !1240
  %3173 = load i32, i32* %arrayidx101.i3645, align 4, !dbg !1240
  %3174 = load i32, i32* %u.i3469, align 4, !dbg !1240
  %shr102.i3646 = lshr i32 %3174, 10, !dbg !1240
  %and103.i3647 = and i32 %shr102.i3646, 63, !dbg !1240
  %idxprom104.i3648 = zext i32 %and103.i3647 to i64, !dbg !1240
  %arrayidx105.i3649 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i3648, !dbg !1240
  %3175 = load i32, i32* %arrayidx105.i3649, align 4, !dbg !1240
  %xor106.i3650 = xor i32 %3173, %3175, !dbg !1240
  %3176 = load i32, i32* %u.i3469, align 4, !dbg !1240
  %shr107.i3651 = lshr i32 %3176, 18, !dbg !1240
  %and108.i3652 = and i32 %shr107.i3651, 63, !dbg !1240
  %idxprom109.i3653 = zext i32 %and108.i3652 to i64, !dbg !1240
  %arrayidx110.i3654 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i3653, !dbg !1240
  %3177 = load i32, i32* %arrayidx110.i3654, align 4, !dbg !1240
  %xor111.i3655 = xor i32 %xor106.i3650, %3177, !dbg !1240
  %3178 = load i32, i32* %u.i3469, align 4, !dbg !1240
  %shr112.i3656 = lshr i32 %3178, 26, !dbg !1240
  %idxprom114.i3657 = zext i32 %shr112.i3656 to i64, !dbg !1240
  %arrayidx115.i3658 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i3657, !dbg !1240
  %3179 = load i32, i32* %arrayidx115.i3658, align 4, !dbg !1240
  %xor116.i3659 = xor i32 %xor111.i3655, %3179, !dbg !1240
  %3180 = load i32, i32* %t.i3468, align 4, !dbg !1240
  %shr117.i3660 = lshr i32 %3180, 2, !dbg !1240
  %and118.i3661 = and i32 %shr117.i3660, 63, !dbg !1240
  %idxprom119.i3662 = zext i32 %and118.i3661 to i64, !dbg !1240
  %arrayidx120.i3663 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i3662, !dbg !1240
  %3181 = load i32, i32* %arrayidx120.i3663, align 4, !dbg !1240
  %xor121.i3664 = xor i32 %xor116.i3659, %3181, !dbg !1240
  %3182 = load i32, i32* %t.i3468, align 4, !dbg !1240
  %shr122.i3665 = lshr i32 %3182, 10, !dbg !1240
  %and123.i3666 = and i32 %shr122.i3665, 63, !dbg !1240
  %idxprom124.i3667 = zext i32 %and123.i3666 to i64, !dbg !1240
  %arrayidx125.i3668 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i3667, !dbg !1240
  %3183 = load i32, i32* %arrayidx125.i3668, align 4, !dbg !1240
  %xor126.i3669 = xor i32 %xor121.i3664, %3183, !dbg !1240
  %3184 = load i32, i32* %t.i3468, align 4, !dbg !1240
  %shr127.i3670 = lshr i32 %3184, 18, !dbg !1240
  %and128.i3671 = and i32 %shr127.i3670, 63, !dbg !1240
  %idxprom129.i3672 = zext i32 %and128.i3671 to i64, !dbg !1240
  %arrayidx130.i3673 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i3672, !dbg !1240
  %3185 = load i32, i32* %arrayidx130.i3673, align 4, !dbg !1240
  %xor131.i3674 = xor i32 %xor126.i3669, %3185, !dbg !1240
  %3186 = load i32, i32* %t.i3468, align 4, !dbg !1240
  %shr132.i3675 = lshr i32 %3186, 26, !dbg !1240
  %idxprom134.i3676 = zext i32 %shr132.i3675 to i64, !dbg !1240
  %arrayidx135.i3677 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i3676, !dbg !1240
  %3187 = load i32, i32* %arrayidx135.i3677, align 4, !dbg !1240
  %xor136.i3678 = xor i32 %xor131.i3674, %3187, !dbg !1240
  %3188 = load i32, i32* %r.i3467, align 4, !dbg !1240
  %xor137.i3679 = xor i32 %3188, %xor136.i3678, !dbg !1240
  store i32 %xor137.i3679, i32* %r.i3467, align 4, !dbg !1240
  %3189 = load i32, i32* %r.i3467, align 4, !dbg !1241
  %3190 = load i32*, i32** %s.i3470, align 8, !dbg !1241
  %arrayidx138.i3680 = getelementptr inbounds i32, i32* %3190, i64 4, !dbg !1241
  %3191 = load i32, i32* %arrayidx138.i3680, align 4, !dbg !1241
  %xor139.i3681 = xor i32 %3189, %3191, !dbg !1241
  store i32 %xor139.i3681, i32* %u.i3469, align 4, !dbg !1241
  %3192 = load i32, i32* %r.i3467, align 4, !dbg !1241
  %3193 = load i32*, i32** %s.i3470, align 8, !dbg !1241
  %arrayidx140.i3682 = getelementptr inbounds i32, i32* %3193, i64 5, !dbg !1241
  %3194 = load i32, i32* %arrayidx140.i3682, align 4, !dbg !1241
  %xor141.i3683 = xor i32 %3192, %3194, !dbg !1241
  store i32 %xor141.i3683, i32* %t.i3468, align 4, !dbg !1241
  %3195 = load i32, i32* %t.i3468, align 4, !dbg !696
  %3196 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3195) #5, !dbg !696, !srcloc !106
  store i32 %3196, i32* %ret142.i3480, align 4, !dbg !696
  %3197 = load i32, i32* %ret142.i3480, align 4, !dbg !696
  store i32 %3197, i32* %tmp143.i3481, align 4, !dbg !696
  %3198 = load i32, i32* %tmp143.i3481, align 4, !dbg !696
  store i32 %3198, i32* %t.i3468, align 4, !dbg !1241
  %3199 = load i32, i32* %u.i3469, align 4, !dbg !1241
  %shr144.i3684 = lshr i32 %3199, 2, !dbg !1241
  %and145.i3685 = and i32 %shr144.i3684, 63, !dbg !1241
  %idxprom146.i3686 = zext i32 %and145.i3685 to i64, !dbg !1241
  %arrayidx147.i3687 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i3686, !dbg !1241
  %3200 = load i32, i32* %arrayidx147.i3687, align 4, !dbg !1241
  %3201 = load i32, i32* %u.i3469, align 4, !dbg !1241
  %shr148.i3688 = lshr i32 %3201, 10, !dbg !1241
  %and149.i3689 = and i32 %shr148.i3688, 63, !dbg !1241
  %idxprom150.i3690 = zext i32 %and149.i3689 to i64, !dbg !1241
  %arrayidx151.i3691 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i3690, !dbg !1241
  %3202 = load i32, i32* %arrayidx151.i3691, align 4, !dbg !1241
  %xor152.i3692 = xor i32 %3200, %3202, !dbg !1241
  %3203 = load i32, i32* %u.i3469, align 4, !dbg !1241
  %shr153.i3693 = lshr i32 %3203, 18, !dbg !1241
  %and154.i3694 = and i32 %shr153.i3693, 63, !dbg !1241
  %idxprom155.i3695 = zext i32 %and154.i3694 to i64, !dbg !1241
  %arrayidx156.i3696 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i3695, !dbg !1241
  %3204 = load i32, i32* %arrayidx156.i3696, align 4, !dbg !1241
  %xor157.i3697 = xor i32 %xor152.i3692, %3204, !dbg !1241
  %3205 = load i32, i32* %u.i3469, align 4, !dbg !1241
  %shr158.i3698 = lshr i32 %3205, 26, !dbg !1241
  %idxprom160.i3699 = zext i32 %shr158.i3698 to i64, !dbg !1241
  %arrayidx161.i3700 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i3699, !dbg !1241
  %3206 = load i32, i32* %arrayidx161.i3700, align 4, !dbg !1241
  %xor162.i3701 = xor i32 %xor157.i3697, %3206, !dbg !1241
  %3207 = load i32, i32* %t.i3468, align 4, !dbg !1241
  %shr163.i3702 = lshr i32 %3207, 2, !dbg !1241
  %and164.i3703 = and i32 %shr163.i3702, 63, !dbg !1241
  %idxprom165.i3704 = zext i32 %and164.i3703 to i64, !dbg !1241
  %arrayidx166.i3705 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i3704, !dbg !1241
  %3208 = load i32, i32* %arrayidx166.i3705, align 4, !dbg !1241
  %xor167.i3706 = xor i32 %xor162.i3701, %3208, !dbg !1241
  %3209 = load i32, i32* %t.i3468, align 4, !dbg !1241
  %shr168.i3707 = lshr i32 %3209, 10, !dbg !1241
  %and169.i3708 = and i32 %shr168.i3707, 63, !dbg !1241
  %idxprom170.i3709 = zext i32 %and169.i3708 to i64, !dbg !1241
  %arrayidx171.i3710 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i3709, !dbg !1241
  %3210 = load i32, i32* %arrayidx171.i3710, align 4, !dbg !1241
  %xor172.i3711 = xor i32 %xor167.i3706, %3210, !dbg !1241
  %3211 = load i32, i32* %t.i3468, align 4, !dbg !1241
  %shr173.i3712 = lshr i32 %3211, 18, !dbg !1241
  %and174.i3713 = and i32 %shr173.i3712, 63, !dbg !1241
  %idxprom175.i3714 = zext i32 %and174.i3713 to i64, !dbg !1241
  %arrayidx176.i3715 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i3714, !dbg !1241
  %3212 = load i32, i32* %arrayidx176.i3715, align 4, !dbg !1241
  %xor177.i3716 = xor i32 %xor172.i3711, %3212, !dbg !1241
  %3213 = load i32, i32* %t.i3468, align 4, !dbg !1241
  %shr178.i3717 = lshr i32 %3213, 26, !dbg !1241
  %idxprom180.i3718 = zext i32 %shr178.i3717 to i64, !dbg !1241
  %arrayidx181.i3719 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i3718, !dbg !1241
  %3214 = load i32, i32* %arrayidx181.i3719, align 4, !dbg !1241
  %xor182.i3720 = xor i32 %xor177.i3716, %3214, !dbg !1241
  %3215 = load i32, i32* %l.i3466, align 4, !dbg !1241
  %xor183.i3721 = xor i32 %3215, %xor182.i3720, !dbg !1241
  store i32 %xor183.i3721, i32* %l.i3466, align 4, !dbg !1241
  %3216 = load i32, i32* %l.i3466, align 4, !dbg !1242
  %3217 = load i32*, i32** %s.i3470, align 8, !dbg !1242
  %arrayidx184.i3722 = getelementptr inbounds i32, i32* %3217, i64 6, !dbg !1242
  %3218 = load i32, i32* %arrayidx184.i3722, align 4, !dbg !1242
  %xor185.i3723 = xor i32 %3216, %3218, !dbg !1242
  store i32 %xor185.i3723, i32* %u.i3469, align 4, !dbg !1242
  %3219 = load i32, i32* %l.i3466, align 4, !dbg !1242
  %3220 = load i32*, i32** %s.i3470, align 8, !dbg !1242
  %arrayidx186.i3724 = getelementptr inbounds i32, i32* %3220, i64 7, !dbg !1242
  %3221 = load i32, i32* %arrayidx186.i3724, align 4, !dbg !1242
  %xor187.i3725 = xor i32 %3219, %3221, !dbg !1242
  store i32 %xor187.i3725, i32* %t.i3468, align 4, !dbg !1242
  %3222 = load i32, i32* %t.i3468, align 4, !dbg !697
  %3223 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3222) #5, !dbg !697, !srcloc !112
  store i32 %3223, i32* %ret188.i3482, align 4, !dbg !697
  %3224 = load i32, i32* %ret188.i3482, align 4, !dbg !697
  store i32 %3224, i32* %tmp189.i3483, align 4, !dbg !697
  %3225 = load i32, i32* %tmp189.i3483, align 4, !dbg !697
  store i32 %3225, i32* %t.i3468, align 4, !dbg !1242
  %3226 = load i32, i32* %u.i3469, align 4, !dbg !1242
  %shr190.i3726 = lshr i32 %3226, 2, !dbg !1242
  %and191.i3727 = and i32 %shr190.i3726, 63, !dbg !1242
  %idxprom192.i3728 = zext i32 %and191.i3727 to i64, !dbg !1242
  %arrayidx193.i3729 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i3728, !dbg !1242
  %3227 = load i32, i32* %arrayidx193.i3729, align 4, !dbg !1242
  %3228 = load i32, i32* %u.i3469, align 4, !dbg !1242
  %shr194.i3730 = lshr i32 %3228, 10, !dbg !1242
  %and195.i3731 = and i32 %shr194.i3730, 63, !dbg !1242
  %idxprom196.i3732 = zext i32 %and195.i3731 to i64, !dbg !1242
  %arrayidx197.i3733 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i3732, !dbg !1242
  %3229 = load i32, i32* %arrayidx197.i3733, align 4, !dbg !1242
  %xor198.i3734 = xor i32 %3227, %3229, !dbg !1242
  %3230 = load i32, i32* %u.i3469, align 4, !dbg !1242
  %shr199.i3735 = lshr i32 %3230, 18, !dbg !1242
  %and200.i3736 = and i32 %shr199.i3735, 63, !dbg !1242
  %idxprom201.i3737 = zext i32 %and200.i3736 to i64, !dbg !1242
  %arrayidx202.i3738 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i3737, !dbg !1242
  %3231 = load i32, i32* %arrayidx202.i3738, align 4, !dbg !1242
  %xor203.i3739 = xor i32 %xor198.i3734, %3231, !dbg !1242
  %3232 = load i32, i32* %u.i3469, align 4, !dbg !1242
  %shr204.i3740 = lshr i32 %3232, 26, !dbg !1242
  %idxprom206.i3741 = zext i32 %shr204.i3740 to i64, !dbg !1242
  %arrayidx207.i3742 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i3741, !dbg !1242
  %3233 = load i32, i32* %arrayidx207.i3742, align 4, !dbg !1242
  %xor208.i3743 = xor i32 %xor203.i3739, %3233, !dbg !1242
  %3234 = load i32, i32* %t.i3468, align 4, !dbg !1242
  %shr209.i3744 = lshr i32 %3234, 2, !dbg !1242
  %and210.i3745 = and i32 %shr209.i3744, 63, !dbg !1242
  %idxprom211.i3746 = zext i32 %and210.i3745 to i64, !dbg !1242
  %arrayidx212.i3747 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i3746, !dbg !1242
  %3235 = load i32, i32* %arrayidx212.i3747, align 4, !dbg !1242
  %xor213.i3748 = xor i32 %xor208.i3743, %3235, !dbg !1242
  %3236 = load i32, i32* %t.i3468, align 4, !dbg !1242
  %shr214.i3749 = lshr i32 %3236, 10, !dbg !1242
  %and215.i3750 = and i32 %shr214.i3749, 63, !dbg !1242
  %idxprom216.i3751 = zext i32 %and215.i3750 to i64, !dbg !1242
  %arrayidx217.i3752 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i3751, !dbg !1242
  %3237 = load i32, i32* %arrayidx217.i3752, align 4, !dbg !1242
  %xor218.i3753 = xor i32 %xor213.i3748, %3237, !dbg !1242
  %3238 = load i32, i32* %t.i3468, align 4, !dbg !1242
  %shr219.i3754 = lshr i32 %3238, 18, !dbg !1242
  %and220.i3755 = and i32 %shr219.i3754, 63, !dbg !1242
  %idxprom221.i3756 = zext i32 %and220.i3755 to i64, !dbg !1242
  %arrayidx222.i3757 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i3756, !dbg !1242
  %3239 = load i32, i32* %arrayidx222.i3757, align 4, !dbg !1242
  %xor223.i3758 = xor i32 %xor218.i3753, %3239, !dbg !1242
  %3240 = load i32, i32* %t.i3468, align 4, !dbg !1242
  %shr224.i3759 = lshr i32 %3240, 26, !dbg !1242
  %idxprom226.i3760 = zext i32 %shr224.i3759 to i64, !dbg !1242
  %arrayidx227.i3761 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i3760, !dbg !1242
  %3241 = load i32, i32* %arrayidx227.i3761, align 4, !dbg !1242
  %xor228.i3762 = xor i32 %xor223.i3758, %3241, !dbg !1242
  %3242 = load i32, i32* %r.i3467, align 4, !dbg !1242
  %xor229.i3763 = xor i32 %3242, %xor228.i3762, !dbg !1242
  store i32 %xor229.i3763, i32* %r.i3467, align 4, !dbg !1242
  %3243 = load i32, i32* %r.i3467, align 4, !dbg !1243
  %3244 = load i32*, i32** %s.i3470, align 8, !dbg !1243
  %arrayidx230.i3764 = getelementptr inbounds i32, i32* %3244, i64 8, !dbg !1243
  %3245 = load i32, i32* %arrayidx230.i3764, align 4, !dbg !1243
  %xor231.i3765 = xor i32 %3243, %3245, !dbg !1243
  store i32 %xor231.i3765, i32* %u.i3469, align 4, !dbg !1243
  %3246 = load i32, i32* %r.i3467, align 4, !dbg !1243
  %3247 = load i32*, i32** %s.i3470, align 8, !dbg !1243
  %arrayidx232.i3766 = getelementptr inbounds i32, i32* %3247, i64 9, !dbg !1243
  %3248 = load i32, i32* %arrayidx232.i3766, align 4, !dbg !1243
  %xor233.i3767 = xor i32 %3246, %3248, !dbg !1243
  store i32 %xor233.i3767, i32* %t.i3468, align 4, !dbg !1243
  %3249 = load i32, i32* %t.i3468, align 4, !dbg !698
  %3250 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3249) #5, !dbg !698, !srcloc !118
  store i32 %3250, i32* %ret234.i3484, align 4, !dbg !698
  %3251 = load i32, i32* %ret234.i3484, align 4, !dbg !698
  store i32 %3251, i32* %tmp235.i3485, align 4, !dbg !698
  %3252 = load i32, i32* %tmp235.i3485, align 4, !dbg !698
  store i32 %3252, i32* %t.i3468, align 4, !dbg !1243
  %3253 = load i32, i32* %u.i3469, align 4, !dbg !1243
  %shr236.i3768 = lshr i32 %3253, 2, !dbg !1243
  %and237.i3769 = and i32 %shr236.i3768, 63, !dbg !1243
  %idxprom238.i3770 = zext i32 %and237.i3769 to i64, !dbg !1243
  %arrayidx239.i3771 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i3770, !dbg !1243
  %3254 = load i32, i32* %arrayidx239.i3771, align 4, !dbg !1243
  %3255 = load i32, i32* %u.i3469, align 4, !dbg !1243
  %shr240.i3772 = lshr i32 %3255, 10, !dbg !1243
  %and241.i3773 = and i32 %shr240.i3772, 63, !dbg !1243
  %idxprom242.i3774 = zext i32 %and241.i3773 to i64, !dbg !1243
  %arrayidx243.i3775 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i3774, !dbg !1243
  %3256 = load i32, i32* %arrayidx243.i3775, align 4, !dbg !1243
  %xor244.i3776 = xor i32 %3254, %3256, !dbg !1243
  %3257 = load i32, i32* %u.i3469, align 4, !dbg !1243
  %shr245.i3777 = lshr i32 %3257, 18, !dbg !1243
  %and246.i3778 = and i32 %shr245.i3777, 63, !dbg !1243
  %idxprom247.i3779 = zext i32 %and246.i3778 to i64, !dbg !1243
  %arrayidx248.i3780 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i3779, !dbg !1243
  %3258 = load i32, i32* %arrayidx248.i3780, align 4, !dbg !1243
  %xor249.i3781 = xor i32 %xor244.i3776, %3258, !dbg !1243
  %3259 = load i32, i32* %u.i3469, align 4, !dbg !1243
  %shr250.i3782 = lshr i32 %3259, 26, !dbg !1243
  %idxprom252.i3783 = zext i32 %shr250.i3782 to i64, !dbg !1243
  %arrayidx253.i3784 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i3783, !dbg !1243
  %3260 = load i32, i32* %arrayidx253.i3784, align 4, !dbg !1243
  %xor254.i3785 = xor i32 %xor249.i3781, %3260, !dbg !1243
  %3261 = load i32, i32* %t.i3468, align 4, !dbg !1243
  %shr255.i3786 = lshr i32 %3261, 2, !dbg !1243
  %and256.i3787 = and i32 %shr255.i3786, 63, !dbg !1243
  %idxprom257.i3788 = zext i32 %and256.i3787 to i64, !dbg !1243
  %arrayidx258.i3789 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i3788, !dbg !1243
  %3262 = load i32, i32* %arrayidx258.i3789, align 4, !dbg !1243
  %xor259.i3790 = xor i32 %xor254.i3785, %3262, !dbg !1243
  %3263 = load i32, i32* %t.i3468, align 4, !dbg !1243
  %shr260.i3791 = lshr i32 %3263, 10, !dbg !1243
  %and261.i3792 = and i32 %shr260.i3791, 63, !dbg !1243
  %idxprom262.i3793 = zext i32 %and261.i3792 to i64, !dbg !1243
  %arrayidx263.i3794 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i3793, !dbg !1243
  %3264 = load i32, i32* %arrayidx263.i3794, align 4, !dbg !1243
  %xor264.i3795 = xor i32 %xor259.i3790, %3264, !dbg !1243
  %3265 = load i32, i32* %t.i3468, align 4, !dbg !1243
  %shr265.i3796 = lshr i32 %3265, 18, !dbg !1243
  %and266.i3797 = and i32 %shr265.i3796, 63, !dbg !1243
  %idxprom267.i3798 = zext i32 %and266.i3797 to i64, !dbg !1243
  %arrayidx268.i3799 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i3798, !dbg !1243
  %3266 = load i32, i32* %arrayidx268.i3799, align 4, !dbg !1243
  %xor269.i3800 = xor i32 %xor264.i3795, %3266, !dbg !1243
  %3267 = load i32, i32* %t.i3468, align 4, !dbg !1243
  %shr270.i3801 = lshr i32 %3267, 26, !dbg !1243
  %idxprom272.i3802 = zext i32 %shr270.i3801 to i64, !dbg !1243
  %arrayidx273.i3803 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i3802, !dbg !1243
  %3268 = load i32, i32* %arrayidx273.i3803, align 4, !dbg !1243
  %xor274.i3804 = xor i32 %xor269.i3800, %3268, !dbg !1243
  %3269 = load i32, i32* %l.i3466, align 4, !dbg !1243
  %xor275.i3805 = xor i32 %3269, %xor274.i3804, !dbg !1243
  store i32 %xor275.i3805, i32* %l.i3466, align 4, !dbg !1243
  %3270 = load i32, i32* %l.i3466, align 4, !dbg !1244
  %3271 = load i32*, i32** %s.i3470, align 8, !dbg !1244
  %arrayidx276.i3806 = getelementptr inbounds i32, i32* %3271, i64 10, !dbg !1244
  %3272 = load i32, i32* %arrayidx276.i3806, align 4, !dbg !1244
  %xor277.i3807 = xor i32 %3270, %3272, !dbg !1244
  store i32 %xor277.i3807, i32* %u.i3469, align 4, !dbg !1244
  %3273 = load i32, i32* %l.i3466, align 4, !dbg !1244
  %3274 = load i32*, i32** %s.i3470, align 8, !dbg !1244
  %arrayidx278.i3808 = getelementptr inbounds i32, i32* %3274, i64 11, !dbg !1244
  %3275 = load i32, i32* %arrayidx278.i3808, align 4, !dbg !1244
  %xor279.i3809 = xor i32 %3273, %3275, !dbg !1244
  store i32 %xor279.i3809, i32* %t.i3468, align 4, !dbg !1244
  %3276 = load i32, i32* %t.i3468, align 4, !dbg !699
  %3277 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3276) #5, !dbg !699, !srcloc !124
  store i32 %3277, i32* %ret280.i3486, align 4, !dbg !699
  %3278 = load i32, i32* %ret280.i3486, align 4, !dbg !699
  store i32 %3278, i32* %tmp281.i3487, align 4, !dbg !699
  %3279 = load i32, i32* %tmp281.i3487, align 4, !dbg !699
  store i32 %3279, i32* %t.i3468, align 4, !dbg !1244
  %3280 = load i32, i32* %u.i3469, align 4, !dbg !1244
  %shr282.i3810 = lshr i32 %3280, 2, !dbg !1244
  %and283.i3811 = and i32 %shr282.i3810, 63, !dbg !1244
  %idxprom284.i3812 = zext i32 %and283.i3811 to i64, !dbg !1244
  %arrayidx285.i3813 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i3812, !dbg !1244
  %3281 = load i32, i32* %arrayidx285.i3813, align 4, !dbg !1244
  %3282 = load i32, i32* %u.i3469, align 4, !dbg !1244
  %shr286.i3814 = lshr i32 %3282, 10, !dbg !1244
  %and287.i3815 = and i32 %shr286.i3814, 63, !dbg !1244
  %idxprom288.i3816 = zext i32 %and287.i3815 to i64, !dbg !1244
  %arrayidx289.i3817 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i3816, !dbg !1244
  %3283 = load i32, i32* %arrayidx289.i3817, align 4, !dbg !1244
  %xor290.i3818 = xor i32 %3281, %3283, !dbg !1244
  %3284 = load i32, i32* %u.i3469, align 4, !dbg !1244
  %shr291.i3819 = lshr i32 %3284, 18, !dbg !1244
  %and292.i3820 = and i32 %shr291.i3819, 63, !dbg !1244
  %idxprom293.i3821 = zext i32 %and292.i3820 to i64, !dbg !1244
  %arrayidx294.i3822 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i3821, !dbg !1244
  %3285 = load i32, i32* %arrayidx294.i3822, align 4, !dbg !1244
  %xor295.i3823 = xor i32 %xor290.i3818, %3285, !dbg !1244
  %3286 = load i32, i32* %u.i3469, align 4, !dbg !1244
  %shr296.i3824 = lshr i32 %3286, 26, !dbg !1244
  %idxprom298.i3825 = zext i32 %shr296.i3824 to i64, !dbg !1244
  %arrayidx299.i3826 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i3825, !dbg !1244
  %3287 = load i32, i32* %arrayidx299.i3826, align 4, !dbg !1244
  %xor300.i3827 = xor i32 %xor295.i3823, %3287, !dbg !1244
  %3288 = load i32, i32* %t.i3468, align 4, !dbg !1244
  %shr301.i3828 = lshr i32 %3288, 2, !dbg !1244
  %and302.i3829 = and i32 %shr301.i3828, 63, !dbg !1244
  %idxprom303.i3830 = zext i32 %and302.i3829 to i64, !dbg !1244
  %arrayidx304.i3831 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i3830, !dbg !1244
  %3289 = load i32, i32* %arrayidx304.i3831, align 4, !dbg !1244
  %xor305.i3832 = xor i32 %xor300.i3827, %3289, !dbg !1244
  %3290 = load i32, i32* %t.i3468, align 4, !dbg !1244
  %shr306.i3833 = lshr i32 %3290, 10, !dbg !1244
  %and307.i3834 = and i32 %shr306.i3833, 63, !dbg !1244
  %idxprom308.i3835 = zext i32 %and307.i3834 to i64, !dbg !1244
  %arrayidx309.i3836 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i3835, !dbg !1244
  %3291 = load i32, i32* %arrayidx309.i3836, align 4, !dbg !1244
  %xor310.i3837 = xor i32 %xor305.i3832, %3291, !dbg !1244
  %3292 = load i32, i32* %t.i3468, align 4, !dbg !1244
  %shr311.i3838 = lshr i32 %3292, 18, !dbg !1244
  %and312.i3839 = and i32 %shr311.i3838, 63, !dbg !1244
  %idxprom313.i3840 = zext i32 %and312.i3839 to i64, !dbg !1244
  %arrayidx314.i3841 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i3840, !dbg !1244
  %3293 = load i32, i32* %arrayidx314.i3841, align 4, !dbg !1244
  %xor315.i3842 = xor i32 %xor310.i3837, %3293, !dbg !1244
  %3294 = load i32, i32* %t.i3468, align 4, !dbg !1244
  %shr316.i3843 = lshr i32 %3294, 26, !dbg !1244
  %idxprom318.i3844 = zext i32 %shr316.i3843 to i64, !dbg !1244
  %arrayidx319.i3845 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i3844, !dbg !1244
  %3295 = load i32, i32* %arrayidx319.i3845, align 4, !dbg !1244
  %xor320.i3846 = xor i32 %xor315.i3842, %3295, !dbg !1244
  %3296 = load i32, i32* %r.i3467, align 4, !dbg !1244
  %xor321.i3847 = xor i32 %3296, %xor320.i3846, !dbg !1244
  store i32 %xor321.i3847, i32* %r.i3467, align 4, !dbg !1244
  %3297 = load i32, i32* %r.i3467, align 4, !dbg !1245
  %3298 = load i32*, i32** %s.i3470, align 8, !dbg !1245
  %arrayidx322.i3848 = getelementptr inbounds i32, i32* %3298, i64 12, !dbg !1245
  %3299 = load i32, i32* %arrayidx322.i3848, align 4, !dbg !1245
  %xor323.i3849 = xor i32 %3297, %3299, !dbg !1245
  store i32 %xor323.i3849, i32* %u.i3469, align 4, !dbg !1245
  %3300 = load i32, i32* %r.i3467, align 4, !dbg !1245
  %3301 = load i32*, i32** %s.i3470, align 8, !dbg !1245
  %arrayidx324.i3850 = getelementptr inbounds i32, i32* %3301, i64 13, !dbg !1245
  %3302 = load i32, i32* %arrayidx324.i3850, align 4, !dbg !1245
  %xor325.i3851 = xor i32 %3300, %3302, !dbg !1245
  store i32 %xor325.i3851, i32* %t.i3468, align 4, !dbg !1245
  %3303 = load i32, i32* %t.i3468, align 4, !dbg !700
  %3304 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3303) #5, !dbg !700, !srcloc !130
  store i32 %3304, i32* %ret326.i3488, align 4, !dbg !700
  %3305 = load i32, i32* %ret326.i3488, align 4, !dbg !700
  store i32 %3305, i32* %tmp327.i3489, align 4, !dbg !700
  %3306 = load i32, i32* %tmp327.i3489, align 4, !dbg !700
  store i32 %3306, i32* %t.i3468, align 4, !dbg !1245
  %3307 = load i32, i32* %u.i3469, align 4, !dbg !1245
  %shr328.i3852 = lshr i32 %3307, 2, !dbg !1245
  %and329.i3853 = and i32 %shr328.i3852, 63, !dbg !1245
  %idxprom330.i3854 = zext i32 %and329.i3853 to i64, !dbg !1245
  %arrayidx331.i3855 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i3854, !dbg !1245
  %3308 = load i32, i32* %arrayidx331.i3855, align 4, !dbg !1245
  %3309 = load i32, i32* %u.i3469, align 4, !dbg !1245
  %shr332.i3856 = lshr i32 %3309, 10, !dbg !1245
  %and333.i3857 = and i32 %shr332.i3856, 63, !dbg !1245
  %idxprom334.i3858 = zext i32 %and333.i3857 to i64, !dbg !1245
  %arrayidx335.i3859 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i3858, !dbg !1245
  %3310 = load i32, i32* %arrayidx335.i3859, align 4, !dbg !1245
  %xor336.i3860 = xor i32 %3308, %3310, !dbg !1245
  %3311 = load i32, i32* %u.i3469, align 4, !dbg !1245
  %shr337.i3861 = lshr i32 %3311, 18, !dbg !1245
  %and338.i3862 = and i32 %shr337.i3861, 63, !dbg !1245
  %idxprom339.i3863 = zext i32 %and338.i3862 to i64, !dbg !1245
  %arrayidx340.i3864 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i3863, !dbg !1245
  %3312 = load i32, i32* %arrayidx340.i3864, align 4, !dbg !1245
  %xor341.i3865 = xor i32 %xor336.i3860, %3312, !dbg !1245
  %3313 = load i32, i32* %u.i3469, align 4, !dbg !1245
  %shr342.i3866 = lshr i32 %3313, 26, !dbg !1245
  %idxprom344.i3867 = zext i32 %shr342.i3866 to i64, !dbg !1245
  %arrayidx345.i3868 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i3867, !dbg !1245
  %3314 = load i32, i32* %arrayidx345.i3868, align 4, !dbg !1245
  %xor346.i3869 = xor i32 %xor341.i3865, %3314, !dbg !1245
  %3315 = load i32, i32* %t.i3468, align 4, !dbg !1245
  %shr347.i3870 = lshr i32 %3315, 2, !dbg !1245
  %and348.i3871 = and i32 %shr347.i3870, 63, !dbg !1245
  %idxprom349.i3872 = zext i32 %and348.i3871 to i64, !dbg !1245
  %arrayidx350.i3873 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i3872, !dbg !1245
  %3316 = load i32, i32* %arrayidx350.i3873, align 4, !dbg !1245
  %xor351.i3874 = xor i32 %xor346.i3869, %3316, !dbg !1245
  %3317 = load i32, i32* %t.i3468, align 4, !dbg !1245
  %shr352.i3875 = lshr i32 %3317, 10, !dbg !1245
  %and353.i3876 = and i32 %shr352.i3875, 63, !dbg !1245
  %idxprom354.i3877 = zext i32 %and353.i3876 to i64, !dbg !1245
  %arrayidx355.i3878 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i3877, !dbg !1245
  %3318 = load i32, i32* %arrayidx355.i3878, align 4, !dbg !1245
  %xor356.i3879 = xor i32 %xor351.i3874, %3318, !dbg !1245
  %3319 = load i32, i32* %t.i3468, align 4, !dbg !1245
  %shr357.i3880 = lshr i32 %3319, 18, !dbg !1245
  %and358.i3881 = and i32 %shr357.i3880, 63, !dbg !1245
  %idxprom359.i3882 = zext i32 %and358.i3881 to i64, !dbg !1245
  %arrayidx360.i3883 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i3882, !dbg !1245
  %3320 = load i32, i32* %arrayidx360.i3883, align 4, !dbg !1245
  %xor361.i3884 = xor i32 %xor356.i3879, %3320, !dbg !1245
  %3321 = load i32, i32* %t.i3468, align 4, !dbg !1245
  %shr362.i3885 = lshr i32 %3321, 26, !dbg !1245
  %idxprom364.i3886 = zext i32 %shr362.i3885 to i64, !dbg !1245
  %arrayidx365.i3887 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i3886, !dbg !1245
  %3322 = load i32, i32* %arrayidx365.i3887, align 4, !dbg !1245
  %xor366.i3888 = xor i32 %xor361.i3884, %3322, !dbg !1245
  %3323 = load i32, i32* %l.i3466, align 4, !dbg !1245
  %xor367.i3889 = xor i32 %3323, %xor366.i3888, !dbg !1245
  store i32 %xor367.i3889, i32* %l.i3466, align 4, !dbg !1245
  %3324 = load i32, i32* %l.i3466, align 4, !dbg !1246
  %3325 = load i32*, i32** %s.i3470, align 8, !dbg !1246
  %arrayidx368.i3890 = getelementptr inbounds i32, i32* %3325, i64 14, !dbg !1246
  %3326 = load i32, i32* %arrayidx368.i3890, align 4, !dbg !1246
  %xor369.i3891 = xor i32 %3324, %3326, !dbg !1246
  store i32 %xor369.i3891, i32* %u.i3469, align 4, !dbg !1246
  %3327 = load i32, i32* %l.i3466, align 4, !dbg !1246
  %3328 = load i32*, i32** %s.i3470, align 8, !dbg !1246
  %arrayidx370.i3892 = getelementptr inbounds i32, i32* %3328, i64 15, !dbg !1246
  %3329 = load i32, i32* %arrayidx370.i3892, align 4, !dbg !1246
  %xor371.i3893 = xor i32 %3327, %3329, !dbg !1246
  store i32 %xor371.i3893, i32* %t.i3468, align 4, !dbg !1246
  %3330 = load i32, i32* %t.i3468, align 4, !dbg !701
  %3331 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3330) #5, !dbg !701, !srcloc !136
  store i32 %3331, i32* %ret372.i3490, align 4, !dbg !701
  %3332 = load i32, i32* %ret372.i3490, align 4, !dbg !701
  store i32 %3332, i32* %tmp373.i3491, align 4, !dbg !701
  %3333 = load i32, i32* %tmp373.i3491, align 4, !dbg !701
  store i32 %3333, i32* %t.i3468, align 4, !dbg !1246
  %3334 = load i32, i32* %u.i3469, align 4, !dbg !1246
  %shr374.i3894 = lshr i32 %3334, 2, !dbg !1246
  %and375.i3895 = and i32 %shr374.i3894, 63, !dbg !1246
  %idxprom376.i3896 = zext i32 %and375.i3895 to i64, !dbg !1246
  %arrayidx377.i3897 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i3896, !dbg !1246
  %3335 = load i32, i32* %arrayidx377.i3897, align 4, !dbg !1246
  %3336 = load i32, i32* %u.i3469, align 4, !dbg !1246
  %shr378.i3898 = lshr i32 %3336, 10, !dbg !1246
  %and379.i3899 = and i32 %shr378.i3898, 63, !dbg !1246
  %idxprom380.i3900 = zext i32 %and379.i3899 to i64, !dbg !1246
  %arrayidx381.i3901 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i3900, !dbg !1246
  %3337 = load i32, i32* %arrayidx381.i3901, align 4, !dbg !1246
  %xor382.i3902 = xor i32 %3335, %3337, !dbg !1246
  %3338 = load i32, i32* %u.i3469, align 4, !dbg !1246
  %shr383.i3903 = lshr i32 %3338, 18, !dbg !1246
  %and384.i3904 = and i32 %shr383.i3903, 63, !dbg !1246
  %idxprom385.i3905 = zext i32 %and384.i3904 to i64, !dbg !1246
  %arrayidx386.i3906 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i3905, !dbg !1246
  %3339 = load i32, i32* %arrayidx386.i3906, align 4, !dbg !1246
  %xor387.i3907 = xor i32 %xor382.i3902, %3339, !dbg !1246
  %3340 = load i32, i32* %u.i3469, align 4, !dbg !1246
  %shr388.i3908 = lshr i32 %3340, 26, !dbg !1246
  %idxprom390.i3909 = zext i32 %shr388.i3908 to i64, !dbg !1246
  %arrayidx391.i3910 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i3909, !dbg !1246
  %3341 = load i32, i32* %arrayidx391.i3910, align 4, !dbg !1246
  %xor392.i3911 = xor i32 %xor387.i3907, %3341, !dbg !1246
  %3342 = load i32, i32* %t.i3468, align 4, !dbg !1246
  %shr393.i3912 = lshr i32 %3342, 2, !dbg !1246
  %and394.i3913 = and i32 %shr393.i3912, 63, !dbg !1246
  %idxprom395.i3914 = zext i32 %and394.i3913 to i64, !dbg !1246
  %arrayidx396.i3915 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i3914, !dbg !1246
  %3343 = load i32, i32* %arrayidx396.i3915, align 4, !dbg !1246
  %xor397.i3916 = xor i32 %xor392.i3911, %3343, !dbg !1246
  %3344 = load i32, i32* %t.i3468, align 4, !dbg !1246
  %shr398.i3917 = lshr i32 %3344, 10, !dbg !1246
  %and399.i3918 = and i32 %shr398.i3917, 63, !dbg !1246
  %idxprom400.i3919 = zext i32 %and399.i3918 to i64, !dbg !1246
  %arrayidx401.i3920 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i3919, !dbg !1246
  %3345 = load i32, i32* %arrayidx401.i3920, align 4, !dbg !1246
  %xor402.i3921 = xor i32 %xor397.i3916, %3345, !dbg !1246
  %3346 = load i32, i32* %t.i3468, align 4, !dbg !1246
  %shr403.i3922 = lshr i32 %3346, 18, !dbg !1246
  %and404.i3923 = and i32 %shr403.i3922, 63, !dbg !1246
  %idxprom405.i3924 = zext i32 %and404.i3923 to i64, !dbg !1246
  %arrayidx406.i3925 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i3924, !dbg !1246
  %3347 = load i32, i32* %arrayidx406.i3925, align 4, !dbg !1246
  %xor407.i3926 = xor i32 %xor402.i3921, %3347, !dbg !1246
  %3348 = load i32, i32* %t.i3468, align 4, !dbg !1246
  %shr408.i3927 = lshr i32 %3348, 26, !dbg !1246
  %idxprom410.i3928 = zext i32 %shr408.i3927 to i64, !dbg !1246
  %arrayidx411.i3929 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i3928, !dbg !1246
  %3349 = load i32, i32* %arrayidx411.i3929, align 4, !dbg !1246
  %xor412.i3930 = xor i32 %xor407.i3926, %3349, !dbg !1246
  %3350 = load i32, i32* %r.i3467, align 4, !dbg !1246
  %xor413.i3931 = xor i32 %3350, %xor412.i3930, !dbg !1246
  store i32 %xor413.i3931, i32* %r.i3467, align 4, !dbg !1246
  %3351 = load i32, i32* %r.i3467, align 4, !dbg !1247
  %3352 = load i32*, i32** %s.i3470, align 8, !dbg !1247
  %arrayidx414.i3932 = getelementptr inbounds i32, i32* %3352, i64 16, !dbg !1247
  %3353 = load i32, i32* %arrayidx414.i3932, align 4, !dbg !1247
  %xor415.i3933 = xor i32 %3351, %3353, !dbg !1247
  store i32 %xor415.i3933, i32* %u.i3469, align 4, !dbg !1247
  %3354 = load i32, i32* %r.i3467, align 4, !dbg !1247
  %3355 = load i32*, i32** %s.i3470, align 8, !dbg !1247
  %arrayidx416.i3934 = getelementptr inbounds i32, i32* %3355, i64 17, !dbg !1247
  %3356 = load i32, i32* %arrayidx416.i3934, align 4, !dbg !1247
  %xor417.i3935 = xor i32 %3354, %3356, !dbg !1247
  store i32 %xor417.i3935, i32* %t.i3468, align 4, !dbg !1247
  %3357 = load i32, i32* %t.i3468, align 4, !dbg !702
  %3358 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3357) #5, !dbg !702, !srcloc !142
  store i32 %3358, i32* %ret418.i3492, align 4, !dbg !702
  %3359 = load i32, i32* %ret418.i3492, align 4, !dbg !702
  store i32 %3359, i32* %tmp419.i3493, align 4, !dbg !702
  %3360 = load i32, i32* %tmp419.i3493, align 4, !dbg !702
  store i32 %3360, i32* %t.i3468, align 4, !dbg !1247
  %3361 = load i32, i32* %u.i3469, align 4, !dbg !1247
  %shr420.i3936 = lshr i32 %3361, 2, !dbg !1247
  %and421.i3937 = and i32 %shr420.i3936, 63, !dbg !1247
  %idxprom422.i3938 = zext i32 %and421.i3937 to i64, !dbg !1247
  %arrayidx423.i3939 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i3938, !dbg !1247
  %3362 = load i32, i32* %arrayidx423.i3939, align 4, !dbg !1247
  %3363 = load i32, i32* %u.i3469, align 4, !dbg !1247
  %shr424.i3940 = lshr i32 %3363, 10, !dbg !1247
  %and425.i3941 = and i32 %shr424.i3940, 63, !dbg !1247
  %idxprom426.i3942 = zext i32 %and425.i3941 to i64, !dbg !1247
  %arrayidx427.i3943 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i3942, !dbg !1247
  %3364 = load i32, i32* %arrayidx427.i3943, align 4, !dbg !1247
  %xor428.i3944 = xor i32 %3362, %3364, !dbg !1247
  %3365 = load i32, i32* %u.i3469, align 4, !dbg !1247
  %shr429.i3945 = lshr i32 %3365, 18, !dbg !1247
  %and430.i3946 = and i32 %shr429.i3945, 63, !dbg !1247
  %idxprom431.i3947 = zext i32 %and430.i3946 to i64, !dbg !1247
  %arrayidx432.i3948 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i3947, !dbg !1247
  %3366 = load i32, i32* %arrayidx432.i3948, align 4, !dbg !1247
  %xor433.i3949 = xor i32 %xor428.i3944, %3366, !dbg !1247
  %3367 = load i32, i32* %u.i3469, align 4, !dbg !1247
  %shr434.i3950 = lshr i32 %3367, 26, !dbg !1247
  %idxprom436.i3951 = zext i32 %shr434.i3950 to i64, !dbg !1247
  %arrayidx437.i3952 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i3951, !dbg !1247
  %3368 = load i32, i32* %arrayidx437.i3952, align 4, !dbg !1247
  %xor438.i3953 = xor i32 %xor433.i3949, %3368, !dbg !1247
  %3369 = load i32, i32* %t.i3468, align 4, !dbg !1247
  %shr439.i3954 = lshr i32 %3369, 2, !dbg !1247
  %and440.i3955 = and i32 %shr439.i3954, 63, !dbg !1247
  %idxprom441.i3956 = zext i32 %and440.i3955 to i64, !dbg !1247
  %arrayidx442.i3957 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i3956, !dbg !1247
  %3370 = load i32, i32* %arrayidx442.i3957, align 4, !dbg !1247
  %xor443.i3958 = xor i32 %xor438.i3953, %3370, !dbg !1247
  %3371 = load i32, i32* %t.i3468, align 4, !dbg !1247
  %shr444.i3959 = lshr i32 %3371, 10, !dbg !1247
  %and445.i3960 = and i32 %shr444.i3959, 63, !dbg !1247
  %idxprom446.i3961 = zext i32 %and445.i3960 to i64, !dbg !1247
  %arrayidx447.i3962 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i3961, !dbg !1247
  %3372 = load i32, i32* %arrayidx447.i3962, align 4, !dbg !1247
  %xor448.i3963 = xor i32 %xor443.i3958, %3372, !dbg !1247
  %3373 = load i32, i32* %t.i3468, align 4, !dbg !1247
  %shr449.i3964 = lshr i32 %3373, 18, !dbg !1247
  %and450.i3965 = and i32 %shr449.i3964, 63, !dbg !1247
  %idxprom451.i3966 = zext i32 %and450.i3965 to i64, !dbg !1247
  %arrayidx452.i3967 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i3966, !dbg !1247
  %3374 = load i32, i32* %arrayidx452.i3967, align 4, !dbg !1247
  %xor453.i3968 = xor i32 %xor448.i3963, %3374, !dbg !1247
  %3375 = load i32, i32* %t.i3468, align 4, !dbg !1247
  %shr454.i3969 = lshr i32 %3375, 26, !dbg !1247
  %idxprom456.i3970 = zext i32 %shr454.i3969 to i64, !dbg !1247
  %arrayidx457.i3971 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i3970, !dbg !1247
  %3376 = load i32, i32* %arrayidx457.i3971, align 4, !dbg !1247
  %xor458.i3972 = xor i32 %xor453.i3968, %3376, !dbg !1247
  %3377 = load i32, i32* %l.i3466, align 4, !dbg !1247
  %xor459.i3973 = xor i32 %3377, %xor458.i3972, !dbg !1247
  store i32 %xor459.i3973, i32* %l.i3466, align 4, !dbg !1247
  %3378 = load i32, i32* %l.i3466, align 4, !dbg !1248
  %3379 = load i32*, i32** %s.i3470, align 8, !dbg !1248
  %arrayidx460.i3974 = getelementptr inbounds i32, i32* %3379, i64 18, !dbg !1248
  %3380 = load i32, i32* %arrayidx460.i3974, align 4, !dbg !1248
  %xor461.i3975 = xor i32 %3378, %3380, !dbg !1248
  store i32 %xor461.i3975, i32* %u.i3469, align 4, !dbg !1248
  %3381 = load i32, i32* %l.i3466, align 4, !dbg !1248
  %3382 = load i32*, i32** %s.i3470, align 8, !dbg !1248
  %arrayidx462.i3976 = getelementptr inbounds i32, i32* %3382, i64 19, !dbg !1248
  %3383 = load i32, i32* %arrayidx462.i3976, align 4, !dbg !1248
  %xor463.i3977 = xor i32 %3381, %3383, !dbg !1248
  store i32 %xor463.i3977, i32* %t.i3468, align 4, !dbg !1248
  %3384 = load i32, i32* %t.i3468, align 4, !dbg !703
  %3385 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3384) #5, !dbg !703, !srcloc !148
  store i32 %3385, i32* %ret464.i3494, align 4, !dbg !703
  %3386 = load i32, i32* %ret464.i3494, align 4, !dbg !703
  store i32 %3386, i32* %tmp465.i3495, align 4, !dbg !703
  %3387 = load i32, i32* %tmp465.i3495, align 4, !dbg !703
  store i32 %3387, i32* %t.i3468, align 4, !dbg !1248
  %3388 = load i32, i32* %u.i3469, align 4, !dbg !1248
  %shr466.i3978 = lshr i32 %3388, 2, !dbg !1248
  %and467.i3979 = and i32 %shr466.i3978, 63, !dbg !1248
  %idxprom468.i3980 = zext i32 %and467.i3979 to i64, !dbg !1248
  %arrayidx469.i3981 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i3980, !dbg !1248
  %3389 = load i32, i32* %arrayidx469.i3981, align 4, !dbg !1248
  %3390 = load i32, i32* %u.i3469, align 4, !dbg !1248
  %shr470.i3982 = lshr i32 %3390, 10, !dbg !1248
  %and471.i3983 = and i32 %shr470.i3982, 63, !dbg !1248
  %idxprom472.i3984 = zext i32 %and471.i3983 to i64, !dbg !1248
  %arrayidx473.i3985 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i3984, !dbg !1248
  %3391 = load i32, i32* %arrayidx473.i3985, align 4, !dbg !1248
  %xor474.i3986 = xor i32 %3389, %3391, !dbg !1248
  %3392 = load i32, i32* %u.i3469, align 4, !dbg !1248
  %shr475.i3987 = lshr i32 %3392, 18, !dbg !1248
  %and476.i3988 = and i32 %shr475.i3987, 63, !dbg !1248
  %idxprom477.i3989 = zext i32 %and476.i3988 to i64, !dbg !1248
  %arrayidx478.i3990 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i3989, !dbg !1248
  %3393 = load i32, i32* %arrayidx478.i3990, align 4, !dbg !1248
  %xor479.i3991 = xor i32 %xor474.i3986, %3393, !dbg !1248
  %3394 = load i32, i32* %u.i3469, align 4, !dbg !1248
  %shr480.i3992 = lshr i32 %3394, 26, !dbg !1248
  %idxprom482.i3993 = zext i32 %shr480.i3992 to i64, !dbg !1248
  %arrayidx483.i3994 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i3993, !dbg !1248
  %3395 = load i32, i32* %arrayidx483.i3994, align 4, !dbg !1248
  %xor484.i3995 = xor i32 %xor479.i3991, %3395, !dbg !1248
  %3396 = load i32, i32* %t.i3468, align 4, !dbg !1248
  %shr485.i3996 = lshr i32 %3396, 2, !dbg !1248
  %and486.i3997 = and i32 %shr485.i3996, 63, !dbg !1248
  %idxprom487.i3998 = zext i32 %and486.i3997 to i64, !dbg !1248
  %arrayidx488.i3999 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i3998, !dbg !1248
  %3397 = load i32, i32* %arrayidx488.i3999, align 4, !dbg !1248
  %xor489.i4000 = xor i32 %xor484.i3995, %3397, !dbg !1248
  %3398 = load i32, i32* %t.i3468, align 4, !dbg !1248
  %shr490.i4001 = lshr i32 %3398, 10, !dbg !1248
  %and491.i4002 = and i32 %shr490.i4001, 63, !dbg !1248
  %idxprom492.i4003 = zext i32 %and491.i4002 to i64, !dbg !1248
  %arrayidx493.i4004 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i4003, !dbg !1248
  %3399 = load i32, i32* %arrayidx493.i4004, align 4, !dbg !1248
  %xor494.i4005 = xor i32 %xor489.i4000, %3399, !dbg !1248
  %3400 = load i32, i32* %t.i3468, align 4, !dbg !1248
  %shr495.i4006 = lshr i32 %3400, 18, !dbg !1248
  %and496.i4007 = and i32 %shr495.i4006, 63, !dbg !1248
  %idxprom497.i4008 = zext i32 %and496.i4007 to i64, !dbg !1248
  %arrayidx498.i4009 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i4008, !dbg !1248
  %3401 = load i32, i32* %arrayidx498.i4009, align 4, !dbg !1248
  %xor499.i4010 = xor i32 %xor494.i4005, %3401, !dbg !1248
  %3402 = load i32, i32* %t.i3468, align 4, !dbg !1248
  %shr500.i4011 = lshr i32 %3402, 26, !dbg !1248
  %idxprom502.i4012 = zext i32 %shr500.i4011 to i64, !dbg !1248
  %arrayidx503.i4013 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i4012, !dbg !1248
  %3403 = load i32, i32* %arrayidx503.i4013, align 4, !dbg !1248
  %xor504.i4014 = xor i32 %xor499.i4010, %3403, !dbg !1248
  %3404 = load i32, i32* %r.i3467, align 4, !dbg !1248
  %xor505.i4015 = xor i32 %3404, %xor504.i4014, !dbg !1248
  store i32 %xor505.i4015, i32* %r.i3467, align 4, !dbg !1248
  %3405 = load i32, i32* %r.i3467, align 4, !dbg !1249
  %3406 = load i32*, i32** %s.i3470, align 8, !dbg !1249
  %arrayidx506.i4016 = getelementptr inbounds i32, i32* %3406, i64 20, !dbg !1249
  %3407 = load i32, i32* %arrayidx506.i4016, align 4, !dbg !1249
  %xor507.i4017 = xor i32 %3405, %3407, !dbg !1249
  store i32 %xor507.i4017, i32* %u.i3469, align 4, !dbg !1249
  %3408 = load i32, i32* %r.i3467, align 4, !dbg !1249
  %3409 = load i32*, i32** %s.i3470, align 8, !dbg !1249
  %arrayidx508.i4018 = getelementptr inbounds i32, i32* %3409, i64 21, !dbg !1249
  %3410 = load i32, i32* %arrayidx508.i4018, align 4, !dbg !1249
  %xor509.i4019 = xor i32 %3408, %3410, !dbg !1249
  store i32 %xor509.i4019, i32* %t.i3468, align 4, !dbg !1249
  %3411 = load i32, i32* %t.i3468, align 4, !dbg !704
  %3412 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3411) #5, !dbg !704, !srcloc !154
  store i32 %3412, i32* %ret510.i3496, align 4, !dbg !704
  %3413 = load i32, i32* %ret510.i3496, align 4, !dbg !704
  store i32 %3413, i32* %tmp511.i3497, align 4, !dbg !704
  %3414 = load i32, i32* %tmp511.i3497, align 4, !dbg !704
  store i32 %3414, i32* %t.i3468, align 4, !dbg !1249
  %3415 = load i32, i32* %u.i3469, align 4, !dbg !1249
  %shr512.i4020 = lshr i32 %3415, 2, !dbg !1249
  %and513.i4021 = and i32 %shr512.i4020, 63, !dbg !1249
  %idxprom514.i4022 = zext i32 %and513.i4021 to i64, !dbg !1249
  %arrayidx515.i4023 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i4022, !dbg !1249
  %3416 = load i32, i32* %arrayidx515.i4023, align 4, !dbg !1249
  %3417 = load i32, i32* %u.i3469, align 4, !dbg !1249
  %shr516.i4024 = lshr i32 %3417, 10, !dbg !1249
  %and517.i4025 = and i32 %shr516.i4024, 63, !dbg !1249
  %idxprom518.i4026 = zext i32 %and517.i4025 to i64, !dbg !1249
  %arrayidx519.i4027 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i4026, !dbg !1249
  %3418 = load i32, i32* %arrayidx519.i4027, align 4, !dbg !1249
  %xor520.i4028 = xor i32 %3416, %3418, !dbg !1249
  %3419 = load i32, i32* %u.i3469, align 4, !dbg !1249
  %shr521.i4029 = lshr i32 %3419, 18, !dbg !1249
  %and522.i4030 = and i32 %shr521.i4029, 63, !dbg !1249
  %idxprom523.i4031 = zext i32 %and522.i4030 to i64, !dbg !1249
  %arrayidx524.i4032 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i4031, !dbg !1249
  %3420 = load i32, i32* %arrayidx524.i4032, align 4, !dbg !1249
  %xor525.i4033 = xor i32 %xor520.i4028, %3420, !dbg !1249
  %3421 = load i32, i32* %u.i3469, align 4, !dbg !1249
  %shr526.i4034 = lshr i32 %3421, 26, !dbg !1249
  %idxprom528.i4035 = zext i32 %shr526.i4034 to i64, !dbg !1249
  %arrayidx529.i4036 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i4035, !dbg !1249
  %3422 = load i32, i32* %arrayidx529.i4036, align 4, !dbg !1249
  %xor530.i4037 = xor i32 %xor525.i4033, %3422, !dbg !1249
  %3423 = load i32, i32* %t.i3468, align 4, !dbg !1249
  %shr531.i4038 = lshr i32 %3423, 2, !dbg !1249
  %and532.i4039 = and i32 %shr531.i4038, 63, !dbg !1249
  %idxprom533.i4040 = zext i32 %and532.i4039 to i64, !dbg !1249
  %arrayidx534.i4041 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i4040, !dbg !1249
  %3424 = load i32, i32* %arrayidx534.i4041, align 4, !dbg !1249
  %xor535.i4042 = xor i32 %xor530.i4037, %3424, !dbg !1249
  %3425 = load i32, i32* %t.i3468, align 4, !dbg !1249
  %shr536.i4043 = lshr i32 %3425, 10, !dbg !1249
  %and537.i4044 = and i32 %shr536.i4043, 63, !dbg !1249
  %idxprom538.i4045 = zext i32 %and537.i4044 to i64, !dbg !1249
  %arrayidx539.i4046 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i4045, !dbg !1249
  %3426 = load i32, i32* %arrayidx539.i4046, align 4, !dbg !1249
  %xor540.i4047 = xor i32 %xor535.i4042, %3426, !dbg !1249
  %3427 = load i32, i32* %t.i3468, align 4, !dbg !1249
  %shr541.i4048 = lshr i32 %3427, 18, !dbg !1249
  %and542.i4049 = and i32 %shr541.i4048, 63, !dbg !1249
  %idxprom543.i4050 = zext i32 %and542.i4049 to i64, !dbg !1249
  %arrayidx544.i4051 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i4050, !dbg !1249
  %3428 = load i32, i32* %arrayidx544.i4051, align 4, !dbg !1249
  %xor545.i4052 = xor i32 %xor540.i4047, %3428, !dbg !1249
  %3429 = load i32, i32* %t.i3468, align 4, !dbg !1249
  %shr546.i4053 = lshr i32 %3429, 26, !dbg !1249
  %idxprom548.i4054 = zext i32 %shr546.i4053 to i64, !dbg !1249
  %arrayidx549.i4055 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i4054, !dbg !1249
  %3430 = load i32, i32* %arrayidx549.i4055, align 4, !dbg !1249
  %xor550.i4056 = xor i32 %xor545.i4052, %3430, !dbg !1249
  %3431 = load i32, i32* %l.i3466, align 4, !dbg !1249
  %xor551.i4057 = xor i32 %3431, %xor550.i4056, !dbg !1249
  store i32 %xor551.i4057, i32* %l.i3466, align 4, !dbg !1249
  %3432 = load i32, i32* %l.i3466, align 4, !dbg !1250
  %3433 = load i32*, i32** %s.i3470, align 8, !dbg !1250
  %arrayidx552.i4058 = getelementptr inbounds i32, i32* %3433, i64 22, !dbg !1250
  %3434 = load i32, i32* %arrayidx552.i4058, align 4, !dbg !1250
  %xor553.i4059 = xor i32 %3432, %3434, !dbg !1250
  store i32 %xor553.i4059, i32* %u.i3469, align 4, !dbg !1250
  %3435 = load i32, i32* %l.i3466, align 4, !dbg !1250
  %3436 = load i32*, i32** %s.i3470, align 8, !dbg !1250
  %arrayidx554.i4060 = getelementptr inbounds i32, i32* %3436, i64 23, !dbg !1250
  %3437 = load i32, i32* %arrayidx554.i4060, align 4, !dbg !1250
  %xor555.i4061 = xor i32 %3435, %3437, !dbg !1250
  store i32 %xor555.i4061, i32* %t.i3468, align 4, !dbg !1250
  %3438 = load i32, i32* %t.i3468, align 4, !dbg !705
  %3439 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3438) #5, !dbg !705, !srcloc !160
  store i32 %3439, i32* %ret556.i3498, align 4, !dbg !705
  %3440 = load i32, i32* %ret556.i3498, align 4, !dbg !705
  store i32 %3440, i32* %tmp557.i3499, align 4, !dbg !705
  %3441 = load i32, i32* %tmp557.i3499, align 4, !dbg !705
  store i32 %3441, i32* %t.i3468, align 4, !dbg !1250
  %3442 = load i32, i32* %u.i3469, align 4, !dbg !1250
  %shr558.i4062 = lshr i32 %3442, 2, !dbg !1250
  %and559.i4063 = and i32 %shr558.i4062, 63, !dbg !1250
  %idxprom560.i4064 = zext i32 %and559.i4063 to i64, !dbg !1250
  %arrayidx561.i4065 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i4064, !dbg !1250
  %3443 = load i32, i32* %arrayidx561.i4065, align 4, !dbg !1250
  %3444 = load i32, i32* %u.i3469, align 4, !dbg !1250
  %shr562.i4066 = lshr i32 %3444, 10, !dbg !1250
  %and563.i4067 = and i32 %shr562.i4066, 63, !dbg !1250
  %idxprom564.i4068 = zext i32 %and563.i4067 to i64, !dbg !1250
  %arrayidx565.i4069 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i4068, !dbg !1250
  %3445 = load i32, i32* %arrayidx565.i4069, align 4, !dbg !1250
  %xor566.i4070 = xor i32 %3443, %3445, !dbg !1250
  %3446 = load i32, i32* %u.i3469, align 4, !dbg !1250
  %shr567.i4071 = lshr i32 %3446, 18, !dbg !1250
  %and568.i4072 = and i32 %shr567.i4071, 63, !dbg !1250
  %idxprom569.i4073 = zext i32 %and568.i4072 to i64, !dbg !1250
  %arrayidx570.i4074 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i4073, !dbg !1250
  %3447 = load i32, i32* %arrayidx570.i4074, align 4, !dbg !1250
  %xor571.i4075 = xor i32 %xor566.i4070, %3447, !dbg !1250
  %3448 = load i32, i32* %u.i3469, align 4, !dbg !1250
  %shr572.i4076 = lshr i32 %3448, 26, !dbg !1250
  %idxprom574.i4077 = zext i32 %shr572.i4076 to i64, !dbg !1250
  %arrayidx575.i4078 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i4077, !dbg !1250
  %3449 = load i32, i32* %arrayidx575.i4078, align 4, !dbg !1250
  %xor576.i4079 = xor i32 %xor571.i4075, %3449, !dbg !1250
  %3450 = load i32, i32* %t.i3468, align 4, !dbg !1250
  %shr577.i4080 = lshr i32 %3450, 2, !dbg !1250
  %and578.i4081 = and i32 %shr577.i4080, 63, !dbg !1250
  %idxprom579.i4082 = zext i32 %and578.i4081 to i64, !dbg !1250
  %arrayidx580.i4083 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i4082, !dbg !1250
  %3451 = load i32, i32* %arrayidx580.i4083, align 4, !dbg !1250
  %xor581.i4084 = xor i32 %xor576.i4079, %3451, !dbg !1250
  %3452 = load i32, i32* %t.i3468, align 4, !dbg !1250
  %shr582.i4085 = lshr i32 %3452, 10, !dbg !1250
  %and583.i4086 = and i32 %shr582.i4085, 63, !dbg !1250
  %idxprom584.i4087 = zext i32 %and583.i4086 to i64, !dbg !1250
  %arrayidx585.i4088 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i4087, !dbg !1250
  %3453 = load i32, i32* %arrayidx585.i4088, align 4, !dbg !1250
  %xor586.i4089 = xor i32 %xor581.i4084, %3453, !dbg !1250
  %3454 = load i32, i32* %t.i3468, align 4, !dbg !1250
  %shr587.i4090 = lshr i32 %3454, 18, !dbg !1250
  %and588.i4091 = and i32 %shr587.i4090, 63, !dbg !1250
  %idxprom589.i4092 = zext i32 %and588.i4091 to i64, !dbg !1250
  %arrayidx590.i4093 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i4092, !dbg !1250
  %3455 = load i32, i32* %arrayidx590.i4093, align 4, !dbg !1250
  %xor591.i4094 = xor i32 %xor586.i4089, %3455, !dbg !1250
  %3456 = load i32, i32* %t.i3468, align 4, !dbg !1250
  %shr592.i4095 = lshr i32 %3456, 26, !dbg !1250
  %idxprom594.i4096 = zext i32 %shr592.i4095 to i64, !dbg !1250
  %arrayidx595.i4097 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i4096, !dbg !1250
  %3457 = load i32, i32* %arrayidx595.i4097, align 4, !dbg !1250
  %xor596.i4098 = xor i32 %xor591.i4094, %3457, !dbg !1250
  %3458 = load i32, i32* %r.i3467, align 4, !dbg !1250
  %xor597.i4099 = xor i32 %3458, %xor596.i4098, !dbg !1250
  store i32 %xor597.i4099, i32* %r.i3467, align 4, !dbg !1250
  %3459 = load i32, i32* %r.i3467, align 4, !dbg !1251
  %3460 = load i32*, i32** %s.i3470, align 8, !dbg !1251
  %arrayidx598.i4100 = getelementptr inbounds i32, i32* %3460, i64 24, !dbg !1251
  %3461 = load i32, i32* %arrayidx598.i4100, align 4, !dbg !1251
  %xor599.i4101 = xor i32 %3459, %3461, !dbg !1251
  store i32 %xor599.i4101, i32* %u.i3469, align 4, !dbg !1251
  %3462 = load i32, i32* %r.i3467, align 4, !dbg !1251
  %3463 = load i32*, i32** %s.i3470, align 8, !dbg !1251
  %arrayidx600.i4102 = getelementptr inbounds i32, i32* %3463, i64 25, !dbg !1251
  %3464 = load i32, i32* %arrayidx600.i4102, align 4, !dbg !1251
  %xor601.i4103 = xor i32 %3462, %3464, !dbg !1251
  store i32 %xor601.i4103, i32* %t.i3468, align 4, !dbg !1251
  %3465 = load i32, i32* %t.i3468, align 4, !dbg !706
  %3466 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3465) #5, !dbg !706, !srcloc !166
  store i32 %3466, i32* %ret602.i3500, align 4, !dbg !706
  %3467 = load i32, i32* %ret602.i3500, align 4, !dbg !706
  store i32 %3467, i32* %tmp603.i3501, align 4, !dbg !706
  %3468 = load i32, i32* %tmp603.i3501, align 4, !dbg !706
  store i32 %3468, i32* %t.i3468, align 4, !dbg !1251
  %3469 = load i32, i32* %u.i3469, align 4, !dbg !1251
  %shr604.i4104 = lshr i32 %3469, 2, !dbg !1251
  %and605.i4105 = and i32 %shr604.i4104, 63, !dbg !1251
  %idxprom606.i4106 = zext i32 %and605.i4105 to i64, !dbg !1251
  %arrayidx607.i4107 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i4106, !dbg !1251
  %3470 = load i32, i32* %arrayidx607.i4107, align 4, !dbg !1251
  %3471 = load i32, i32* %u.i3469, align 4, !dbg !1251
  %shr608.i4108 = lshr i32 %3471, 10, !dbg !1251
  %and609.i4109 = and i32 %shr608.i4108, 63, !dbg !1251
  %idxprom610.i4110 = zext i32 %and609.i4109 to i64, !dbg !1251
  %arrayidx611.i4111 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i4110, !dbg !1251
  %3472 = load i32, i32* %arrayidx611.i4111, align 4, !dbg !1251
  %xor612.i4112 = xor i32 %3470, %3472, !dbg !1251
  %3473 = load i32, i32* %u.i3469, align 4, !dbg !1251
  %shr613.i4113 = lshr i32 %3473, 18, !dbg !1251
  %and614.i4114 = and i32 %shr613.i4113, 63, !dbg !1251
  %idxprom615.i4115 = zext i32 %and614.i4114 to i64, !dbg !1251
  %arrayidx616.i4116 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i4115, !dbg !1251
  %3474 = load i32, i32* %arrayidx616.i4116, align 4, !dbg !1251
  %xor617.i4117 = xor i32 %xor612.i4112, %3474, !dbg !1251
  %3475 = load i32, i32* %u.i3469, align 4, !dbg !1251
  %shr618.i4118 = lshr i32 %3475, 26, !dbg !1251
  %idxprom620.i4119 = zext i32 %shr618.i4118 to i64, !dbg !1251
  %arrayidx621.i4120 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i4119, !dbg !1251
  %3476 = load i32, i32* %arrayidx621.i4120, align 4, !dbg !1251
  %xor622.i4121 = xor i32 %xor617.i4117, %3476, !dbg !1251
  %3477 = load i32, i32* %t.i3468, align 4, !dbg !1251
  %shr623.i4122 = lshr i32 %3477, 2, !dbg !1251
  %and624.i4123 = and i32 %shr623.i4122, 63, !dbg !1251
  %idxprom625.i4124 = zext i32 %and624.i4123 to i64, !dbg !1251
  %arrayidx626.i4125 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i4124, !dbg !1251
  %3478 = load i32, i32* %arrayidx626.i4125, align 4, !dbg !1251
  %xor627.i4126 = xor i32 %xor622.i4121, %3478, !dbg !1251
  %3479 = load i32, i32* %t.i3468, align 4, !dbg !1251
  %shr628.i4127 = lshr i32 %3479, 10, !dbg !1251
  %and629.i4128 = and i32 %shr628.i4127, 63, !dbg !1251
  %idxprom630.i4129 = zext i32 %and629.i4128 to i64, !dbg !1251
  %arrayidx631.i4130 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i4129, !dbg !1251
  %3480 = load i32, i32* %arrayidx631.i4130, align 4, !dbg !1251
  %xor632.i4131 = xor i32 %xor627.i4126, %3480, !dbg !1251
  %3481 = load i32, i32* %t.i3468, align 4, !dbg !1251
  %shr633.i4132 = lshr i32 %3481, 18, !dbg !1251
  %and634.i4133 = and i32 %shr633.i4132, 63, !dbg !1251
  %idxprom635.i4134 = zext i32 %and634.i4133 to i64, !dbg !1251
  %arrayidx636.i4135 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i4134, !dbg !1251
  %3482 = load i32, i32* %arrayidx636.i4135, align 4, !dbg !1251
  %xor637.i4136 = xor i32 %xor632.i4131, %3482, !dbg !1251
  %3483 = load i32, i32* %t.i3468, align 4, !dbg !1251
  %shr638.i4137 = lshr i32 %3483, 26, !dbg !1251
  %idxprom640.i4138 = zext i32 %shr638.i4137 to i64, !dbg !1251
  %arrayidx641.i4139 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i4138, !dbg !1251
  %3484 = load i32, i32* %arrayidx641.i4139, align 4, !dbg !1251
  %xor642.i4140 = xor i32 %xor637.i4136, %3484, !dbg !1251
  %3485 = load i32, i32* %l.i3466, align 4, !dbg !1251
  %xor643.i4141 = xor i32 %3485, %xor642.i4140, !dbg !1251
  store i32 %xor643.i4141, i32* %l.i3466, align 4, !dbg !1251
  %3486 = load i32, i32* %l.i3466, align 4, !dbg !1252
  %3487 = load i32*, i32** %s.i3470, align 8, !dbg !1252
  %arrayidx644.i4142 = getelementptr inbounds i32, i32* %3487, i64 26, !dbg !1252
  %3488 = load i32, i32* %arrayidx644.i4142, align 4, !dbg !1252
  %xor645.i4143 = xor i32 %3486, %3488, !dbg !1252
  store i32 %xor645.i4143, i32* %u.i3469, align 4, !dbg !1252
  %3489 = load i32, i32* %l.i3466, align 4, !dbg !1252
  %3490 = load i32*, i32** %s.i3470, align 8, !dbg !1252
  %arrayidx646.i4144 = getelementptr inbounds i32, i32* %3490, i64 27, !dbg !1252
  %3491 = load i32, i32* %arrayidx646.i4144, align 4, !dbg !1252
  %xor647.i4145 = xor i32 %3489, %3491, !dbg !1252
  store i32 %xor647.i4145, i32* %t.i3468, align 4, !dbg !1252
  %3492 = load i32, i32* %t.i3468, align 4, !dbg !707
  %3493 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3492) #5, !dbg !707, !srcloc !172
  store i32 %3493, i32* %ret648.i3502, align 4, !dbg !707
  %3494 = load i32, i32* %ret648.i3502, align 4, !dbg !707
  store i32 %3494, i32* %tmp649.i3503, align 4, !dbg !707
  %3495 = load i32, i32* %tmp649.i3503, align 4, !dbg !707
  store i32 %3495, i32* %t.i3468, align 4, !dbg !1252
  %3496 = load i32, i32* %u.i3469, align 4, !dbg !1252
  %shr650.i4146 = lshr i32 %3496, 2, !dbg !1252
  %and651.i4147 = and i32 %shr650.i4146, 63, !dbg !1252
  %idxprom652.i4148 = zext i32 %and651.i4147 to i64, !dbg !1252
  %arrayidx653.i4149 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i4148, !dbg !1252
  %3497 = load i32, i32* %arrayidx653.i4149, align 4, !dbg !1252
  %3498 = load i32, i32* %u.i3469, align 4, !dbg !1252
  %shr654.i4150 = lshr i32 %3498, 10, !dbg !1252
  %and655.i4151 = and i32 %shr654.i4150, 63, !dbg !1252
  %idxprom656.i4152 = zext i32 %and655.i4151 to i64, !dbg !1252
  %arrayidx657.i4153 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i4152, !dbg !1252
  %3499 = load i32, i32* %arrayidx657.i4153, align 4, !dbg !1252
  %xor658.i4154 = xor i32 %3497, %3499, !dbg !1252
  %3500 = load i32, i32* %u.i3469, align 4, !dbg !1252
  %shr659.i4155 = lshr i32 %3500, 18, !dbg !1252
  %and660.i4156 = and i32 %shr659.i4155, 63, !dbg !1252
  %idxprom661.i4157 = zext i32 %and660.i4156 to i64, !dbg !1252
  %arrayidx662.i4158 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i4157, !dbg !1252
  %3501 = load i32, i32* %arrayidx662.i4158, align 4, !dbg !1252
  %xor663.i4159 = xor i32 %xor658.i4154, %3501, !dbg !1252
  %3502 = load i32, i32* %u.i3469, align 4, !dbg !1252
  %shr664.i4160 = lshr i32 %3502, 26, !dbg !1252
  %idxprom666.i4161 = zext i32 %shr664.i4160 to i64, !dbg !1252
  %arrayidx667.i4162 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i4161, !dbg !1252
  %3503 = load i32, i32* %arrayidx667.i4162, align 4, !dbg !1252
  %xor668.i4163 = xor i32 %xor663.i4159, %3503, !dbg !1252
  %3504 = load i32, i32* %t.i3468, align 4, !dbg !1252
  %shr669.i4164 = lshr i32 %3504, 2, !dbg !1252
  %and670.i4165 = and i32 %shr669.i4164, 63, !dbg !1252
  %idxprom671.i4166 = zext i32 %and670.i4165 to i64, !dbg !1252
  %arrayidx672.i4167 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i4166, !dbg !1252
  %3505 = load i32, i32* %arrayidx672.i4167, align 4, !dbg !1252
  %xor673.i4168 = xor i32 %xor668.i4163, %3505, !dbg !1252
  %3506 = load i32, i32* %t.i3468, align 4, !dbg !1252
  %shr674.i4169 = lshr i32 %3506, 10, !dbg !1252
  %and675.i4170 = and i32 %shr674.i4169, 63, !dbg !1252
  %idxprom676.i4171 = zext i32 %and675.i4170 to i64, !dbg !1252
  %arrayidx677.i4172 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i4171, !dbg !1252
  %3507 = load i32, i32* %arrayidx677.i4172, align 4, !dbg !1252
  %xor678.i4173 = xor i32 %xor673.i4168, %3507, !dbg !1252
  %3508 = load i32, i32* %t.i3468, align 4, !dbg !1252
  %shr679.i4174 = lshr i32 %3508, 18, !dbg !1252
  %and680.i4175 = and i32 %shr679.i4174, 63, !dbg !1252
  %idxprom681.i4176 = zext i32 %and680.i4175 to i64, !dbg !1252
  %arrayidx682.i4177 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i4176, !dbg !1252
  %3509 = load i32, i32* %arrayidx682.i4177, align 4, !dbg !1252
  %xor683.i4178 = xor i32 %xor678.i4173, %3509, !dbg !1252
  %3510 = load i32, i32* %t.i3468, align 4, !dbg !1252
  %shr684.i4179 = lshr i32 %3510, 26, !dbg !1252
  %idxprom686.i4180 = zext i32 %shr684.i4179 to i64, !dbg !1252
  %arrayidx687.i4181 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i4180, !dbg !1252
  %3511 = load i32, i32* %arrayidx687.i4181, align 4, !dbg !1252
  %xor688.i4182 = xor i32 %xor683.i4178, %3511, !dbg !1252
  %3512 = load i32, i32* %r.i3467, align 4, !dbg !1252
  %xor689.i4183 = xor i32 %3512, %xor688.i4182, !dbg !1252
  store i32 %xor689.i4183, i32* %r.i3467, align 4, !dbg !1252
  %3513 = load i32, i32* %r.i3467, align 4, !dbg !1253
  %3514 = load i32*, i32** %s.i3470, align 8, !dbg !1253
  %arrayidx690.i4184 = getelementptr inbounds i32, i32* %3514, i64 28, !dbg !1253
  %3515 = load i32, i32* %arrayidx690.i4184, align 4, !dbg !1253
  %xor691.i4185 = xor i32 %3513, %3515, !dbg !1253
  store i32 %xor691.i4185, i32* %u.i3469, align 4, !dbg !1253
  %3516 = load i32, i32* %r.i3467, align 4, !dbg !1253
  %3517 = load i32*, i32** %s.i3470, align 8, !dbg !1253
  %arrayidx692.i4186 = getelementptr inbounds i32, i32* %3517, i64 29, !dbg !1253
  %3518 = load i32, i32* %arrayidx692.i4186, align 4, !dbg !1253
  %xor693.i4187 = xor i32 %3516, %3518, !dbg !1253
  store i32 %xor693.i4187, i32* %t.i3468, align 4, !dbg !1253
  %3519 = load i32, i32* %t.i3468, align 4, !dbg !708
  %3520 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3519) #5, !dbg !708, !srcloc !178
  store i32 %3520, i32* %ret694.i3504, align 4, !dbg !708
  %3521 = load i32, i32* %ret694.i3504, align 4, !dbg !708
  store i32 %3521, i32* %tmp695.i3505, align 4, !dbg !708
  %3522 = load i32, i32* %tmp695.i3505, align 4, !dbg !708
  store i32 %3522, i32* %t.i3468, align 4, !dbg !1253
  %3523 = load i32, i32* %u.i3469, align 4, !dbg !1253
  %shr696.i4188 = lshr i32 %3523, 2, !dbg !1253
  %and697.i4189 = and i32 %shr696.i4188, 63, !dbg !1253
  %idxprom698.i4190 = zext i32 %and697.i4189 to i64, !dbg !1253
  %arrayidx699.i4191 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i4190, !dbg !1253
  %3524 = load i32, i32* %arrayidx699.i4191, align 4, !dbg !1253
  %3525 = load i32, i32* %u.i3469, align 4, !dbg !1253
  %shr700.i4192 = lshr i32 %3525, 10, !dbg !1253
  %and701.i4193 = and i32 %shr700.i4192, 63, !dbg !1253
  %idxprom702.i4194 = zext i32 %and701.i4193 to i64, !dbg !1253
  %arrayidx703.i4195 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i4194, !dbg !1253
  %3526 = load i32, i32* %arrayidx703.i4195, align 4, !dbg !1253
  %xor704.i4196 = xor i32 %3524, %3526, !dbg !1253
  %3527 = load i32, i32* %u.i3469, align 4, !dbg !1253
  %shr705.i4197 = lshr i32 %3527, 18, !dbg !1253
  %and706.i4198 = and i32 %shr705.i4197, 63, !dbg !1253
  %idxprom707.i4199 = zext i32 %and706.i4198 to i64, !dbg !1253
  %arrayidx708.i4200 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i4199, !dbg !1253
  %3528 = load i32, i32* %arrayidx708.i4200, align 4, !dbg !1253
  %xor709.i4201 = xor i32 %xor704.i4196, %3528, !dbg !1253
  %3529 = load i32, i32* %u.i3469, align 4, !dbg !1253
  %shr710.i4202 = lshr i32 %3529, 26, !dbg !1253
  %idxprom712.i4203 = zext i32 %shr710.i4202 to i64, !dbg !1253
  %arrayidx713.i4204 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i4203, !dbg !1253
  %3530 = load i32, i32* %arrayidx713.i4204, align 4, !dbg !1253
  %xor714.i4205 = xor i32 %xor709.i4201, %3530, !dbg !1253
  %3531 = load i32, i32* %t.i3468, align 4, !dbg !1253
  %shr715.i4206 = lshr i32 %3531, 2, !dbg !1253
  %and716.i4207 = and i32 %shr715.i4206, 63, !dbg !1253
  %idxprom717.i4208 = zext i32 %and716.i4207 to i64, !dbg !1253
  %arrayidx718.i4209 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i4208, !dbg !1253
  %3532 = load i32, i32* %arrayidx718.i4209, align 4, !dbg !1253
  %xor719.i4210 = xor i32 %xor714.i4205, %3532, !dbg !1253
  %3533 = load i32, i32* %t.i3468, align 4, !dbg !1253
  %shr720.i4211 = lshr i32 %3533, 10, !dbg !1253
  %and721.i4212 = and i32 %shr720.i4211, 63, !dbg !1253
  %idxprom722.i4213 = zext i32 %and721.i4212 to i64, !dbg !1253
  %arrayidx723.i4214 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i4213, !dbg !1253
  %3534 = load i32, i32* %arrayidx723.i4214, align 4, !dbg !1253
  %xor724.i4215 = xor i32 %xor719.i4210, %3534, !dbg !1253
  %3535 = load i32, i32* %t.i3468, align 4, !dbg !1253
  %shr725.i4216 = lshr i32 %3535, 18, !dbg !1253
  %and726.i4217 = and i32 %shr725.i4216, 63, !dbg !1253
  %idxprom727.i4218 = zext i32 %and726.i4217 to i64, !dbg !1253
  %arrayidx728.i4219 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i4218, !dbg !1253
  %3536 = load i32, i32* %arrayidx728.i4219, align 4, !dbg !1253
  %xor729.i4220 = xor i32 %xor724.i4215, %3536, !dbg !1253
  %3537 = load i32, i32* %t.i3468, align 4, !dbg !1253
  %shr730.i4221 = lshr i32 %3537, 26, !dbg !1253
  %idxprom732.i4222 = zext i32 %shr730.i4221 to i64, !dbg !1253
  %arrayidx733.i4223 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i4222, !dbg !1253
  %3538 = load i32, i32* %arrayidx733.i4223, align 4, !dbg !1253
  %xor734.i4224 = xor i32 %xor729.i4220, %3538, !dbg !1253
  %3539 = load i32, i32* %l.i3466, align 4, !dbg !1253
  %xor735.i4225 = xor i32 %3539, %xor734.i4224, !dbg !1253
  store i32 %xor735.i4225, i32* %l.i3466, align 4, !dbg !1253
  %3540 = load i32, i32* %l.i3466, align 4, !dbg !1254
  %3541 = load i32*, i32** %s.i3470, align 8, !dbg !1254
  %arrayidx736.i4226 = getelementptr inbounds i32, i32* %3541, i64 30, !dbg !1254
  %3542 = load i32, i32* %arrayidx736.i4226, align 4, !dbg !1254
  %xor737.i4227 = xor i32 %3540, %3542, !dbg !1254
  store i32 %xor737.i4227, i32* %u.i3469, align 4, !dbg !1254
  %3543 = load i32, i32* %l.i3466, align 4, !dbg !1254
  %3544 = load i32*, i32** %s.i3470, align 8, !dbg !1254
  %arrayidx738.i4228 = getelementptr inbounds i32, i32* %3544, i64 31, !dbg !1254
  %3545 = load i32, i32* %arrayidx738.i4228, align 4, !dbg !1254
  %xor739.i4229 = xor i32 %3543, %3545, !dbg !1254
  store i32 %xor739.i4229, i32* %t.i3468, align 4, !dbg !1254
  %3546 = load i32, i32* %t.i3468, align 4, !dbg !709
  %3547 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3546) #5, !dbg !709, !srcloc !184
  store i32 %3547, i32* %ret740.i3506, align 4, !dbg !709
  %3548 = load i32, i32* %ret740.i3506, align 4, !dbg !709
  store i32 %3548, i32* %tmp741.i3507, align 4, !dbg !709
  %3549 = load i32, i32* %tmp741.i3507, align 4, !dbg !709
  store i32 %3549, i32* %t.i3468, align 4, !dbg !1254
  %3550 = load i32, i32* %u.i3469, align 4, !dbg !1254
  %shr742.i4230 = lshr i32 %3550, 2, !dbg !1254
  %and743.i4231 = and i32 %shr742.i4230, 63, !dbg !1254
  %idxprom744.i4232 = zext i32 %and743.i4231 to i64, !dbg !1254
  %arrayidx745.i4233 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i4232, !dbg !1254
  %3551 = load i32, i32* %arrayidx745.i4233, align 4, !dbg !1254
  %3552 = load i32, i32* %u.i3469, align 4, !dbg !1254
  %shr746.i4234 = lshr i32 %3552, 10, !dbg !1254
  %and747.i4235 = and i32 %shr746.i4234, 63, !dbg !1254
  %idxprom748.i4236 = zext i32 %and747.i4235 to i64, !dbg !1254
  %arrayidx749.i4237 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i4236, !dbg !1254
  %3553 = load i32, i32* %arrayidx749.i4237, align 4, !dbg !1254
  %xor750.i4238 = xor i32 %3551, %3553, !dbg !1254
  %3554 = load i32, i32* %u.i3469, align 4, !dbg !1254
  %shr751.i4239 = lshr i32 %3554, 18, !dbg !1254
  %and752.i4240 = and i32 %shr751.i4239, 63, !dbg !1254
  %idxprom753.i4241 = zext i32 %and752.i4240 to i64, !dbg !1254
  %arrayidx754.i4242 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i4241, !dbg !1254
  %3555 = load i32, i32* %arrayidx754.i4242, align 4, !dbg !1254
  %xor755.i4243 = xor i32 %xor750.i4238, %3555, !dbg !1254
  %3556 = load i32, i32* %u.i3469, align 4, !dbg !1254
  %shr756.i4244 = lshr i32 %3556, 26, !dbg !1254
  %idxprom758.i4245 = zext i32 %shr756.i4244 to i64, !dbg !1254
  %arrayidx759.i4246 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i4245, !dbg !1254
  %3557 = load i32, i32* %arrayidx759.i4246, align 4, !dbg !1254
  %xor760.i4247 = xor i32 %xor755.i4243, %3557, !dbg !1254
  %3558 = load i32, i32* %t.i3468, align 4, !dbg !1254
  %shr761.i4248 = lshr i32 %3558, 2, !dbg !1254
  %and762.i4249 = and i32 %shr761.i4248, 63, !dbg !1254
  %idxprom763.i4250 = zext i32 %and762.i4249 to i64, !dbg !1254
  %arrayidx764.i4251 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i4250, !dbg !1254
  %3559 = load i32, i32* %arrayidx764.i4251, align 4, !dbg !1254
  %xor765.i4252 = xor i32 %xor760.i4247, %3559, !dbg !1254
  %3560 = load i32, i32* %t.i3468, align 4, !dbg !1254
  %shr766.i4253 = lshr i32 %3560, 10, !dbg !1254
  %and767.i4254 = and i32 %shr766.i4253, 63, !dbg !1254
  %idxprom768.i4255 = zext i32 %and767.i4254 to i64, !dbg !1254
  %arrayidx769.i4256 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i4255, !dbg !1254
  %3561 = load i32, i32* %arrayidx769.i4256, align 4, !dbg !1254
  %xor770.i4257 = xor i32 %xor765.i4252, %3561, !dbg !1254
  %3562 = load i32, i32* %t.i3468, align 4, !dbg !1254
  %shr771.i4258 = lshr i32 %3562, 18, !dbg !1254
  %and772.i4259 = and i32 %shr771.i4258, 63, !dbg !1254
  %idxprom773.i4260 = zext i32 %and772.i4259 to i64, !dbg !1254
  %arrayidx774.i4261 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i4260, !dbg !1254
  %3563 = load i32, i32* %arrayidx774.i4261, align 4, !dbg !1254
  %xor775.i4262 = xor i32 %xor770.i4257, %3563, !dbg !1254
  %3564 = load i32, i32* %t.i3468, align 4, !dbg !1254
  %shr776.i4263 = lshr i32 %3564, 26, !dbg !1254
  %idxprom778.i4264 = zext i32 %shr776.i4263 to i64, !dbg !1254
  %arrayidx779.i4265 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i4264, !dbg !1254
  %3565 = load i32, i32* %arrayidx779.i4265, align 4, !dbg !1254
  %xor780.i4266 = xor i32 %xor775.i4262, %3565, !dbg !1254
  %3566 = load i32, i32* %r.i3467, align 4, !dbg !1254
  %xor781.i4267 = xor i32 %3566, %xor780.i4266, !dbg !1254
  store i32 %xor781.i4267, i32* %r.i3467, align 4, !dbg !1254
  br label %DES_encrypt1.exit4988, !dbg !1255

if.else.i4940:                                    ; preds = %if.then298
  %3567 = load i32, i32* %r.i3467, align 4, !dbg !1256
  %3568 = load i32*, i32** %s.i3470, align 8, !dbg !1256
  %arrayidx782.i4269 = getelementptr inbounds i32, i32* %3568, i64 30, !dbg !1256
  %3569 = load i32, i32* %arrayidx782.i4269, align 4, !dbg !1256
  %xor783.i4270 = xor i32 %3567, %3569, !dbg !1256
  store i32 %xor783.i4270, i32* %u.i3469, align 4, !dbg !1256
  %3570 = load i32, i32* %r.i3467, align 4, !dbg !1256
  %3571 = load i32*, i32** %s.i3470, align 8, !dbg !1256
  %arrayidx784.i4271 = getelementptr inbounds i32, i32* %3571, i64 31, !dbg !1256
  %3572 = load i32, i32* %arrayidx784.i4271, align 4, !dbg !1256
  %xor785.i4272 = xor i32 %3570, %3572, !dbg !1256
  store i32 %xor785.i4272, i32* %t.i3468, align 4, !dbg !1256
  %3573 = load i32, i32* %t.i3468, align 4, !dbg !710
  %3574 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3573) #5, !dbg !710, !srcloc !192
  store i32 %3574, i32* %ret786.i3508, align 4, !dbg !710
  %3575 = load i32, i32* %ret786.i3508, align 4, !dbg !710
  store i32 %3575, i32* %tmp787.i3509, align 4, !dbg !710
  %3576 = load i32, i32* %tmp787.i3509, align 4, !dbg !710
  store i32 %3576, i32* %t.i3468, align 4, !dbg !1256
  %3577 = load i32, i32* %u.i3469, align 4, !dbg !1256
  %shr788.i4273 = lshr i32 %3577, 2, !dbg !1256
  %and789.i4274 = and i32 %shr788.i4273, 63, !dbg !1256
  %idxprom790.i4275 = zext i32 %and789.i4274 to i64, !dbg !1256
  %arrayidx791.i4276 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i4275, !dbg !1256
  %3578 = load i32, i32* %arrayidx791.i4276, align 4, !dbg !1256
  %3579 = load i32, i32* %u.i3469, align 4, !dbg !1256
  %shr792.i4277 = lshr i32 %3579, 10, !dbg !1256
  %and793.i4278 = and i32 %shr792.i4277, 63, !dbg !1256
  %idxprom794.i4279 = zext i32 %and793.i4278 to i64, !dbg !1256
  %arrayidx795.i4280 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i4279, !dbg !1256
  %3580 = load i32, i32* %arrayidx795.i4280, align 4, !dbg !1256
  %xor796.i4281 = xor i32 %3578, %3580, !dbg !1256
  %3581 = load i32, i32* %u.i3469, align 4, !dbg !1256
  %shr797.i4282 = lshr i32 %3581, 18, !dbg !1256
  %and798.i4283 = and i32 %shr797.i4282, 63, !dbg !1256
  %idxprom799.i4284 = zext i32 %and798.i4283 to i64, !dbg !1256
  %arrayidx800.i4285 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i4284, !dbg !1256
  %3582 = load i32, i32* %arrayidx800.i4285, align 4, !dbg !1256
  %xor801.i4286 = xor i32 %xor796.i4281, %3582, !dbg !1256
  %3583 = load i32, i32* %u.i3469, align 4, !dbg !1256
  %shr802.i4287 = lshr i32 %3583, 26, !dbg !1256
  %idxprom804.i4288 = zext i32 %shr802.i4287 to i64, !dbg !1256
  %arrayidx805.i4289 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i4288, !dbg !1256
  %3584 = load i32, i32* %arrayidx805.i4289, align 4, !dbg !1256
  %xor806.i4290 = xor i32 %xor801.i4286, %3584, !dbg !1256
  %3585 = load i32, i32* %t.i3468, align 4, !dbg !1256
  %shr807.i4291 = lshr i32 %3585, 2, !dbg !1256
  %and808.i4292 = and i32 %shr807.i4291, 63, !dbg !1256
  %idxprom809.i4293 = zext i32 %and808.i4292 to i64, !dbg !1256
  %arrayidx810.i4294 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i4293, !dbg !1256
  %3586 = load i32, i32* %arrayidx810.i4294, align 4, !dbg !1256
  %xor811.i4295 = xor i32 %xor806.i4290, %3586, !dbg !1256
  %3587 = load i32, i32* %t.i3468, align 4, !dbg !1256
  %shr812.i4296 = lshr i32 %3587, 10, !dbg !1256
  %and813.i4297 = and i32 %shr812.i4296, 63, !dbg !1256
  %idxprom814.i4298 = zext i32 %and813.i4297 to i64, !dbg !1256
  %arrayidx815.i4299 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i4298, !dbg !1256
  %3588 = load i32, i32* %arrayidx815.i4299, align 4, !dbg !1256
  %xor816.i4300 = xor i32 %xor811.i4295, %3588, !dbg !1256
  %3589 = load i32, i32* %t.i3468, align 4, !dbg !1256
  %shr817.i4301 = lshr i32 %3589, 18, !dbg !1256
  %and818.i4302 = and i32 %shr817.i4301, 63, !dbg !1256
  %idxprom819.i4303 = zext i32 %and818.i4302 to i64, !dbg !1256
  %arrayidx820.i4304 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i4303, !dbg !1256
  %3590 = load i32, i32* %arrayidx820.i4304, align 4, !dbg !1256
  %xor821.i4305 = xor i32 %xor816.i4300, %3590, !dbg !1256
  %3591 = load i32, i32* %t.i3468, align 4, !dbg !1256
  %shr822.i4306 = lshr i32 %3591, 26, !dbg !1256
  %idxprom824.i4307 = zext i32 %shr822.i4306 to i64, !dbg !1256
  %arrayidx825.i4308 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i4307, !dbg !1256
  %3592 = load i32, i32* %arrayidx825.i4308, align 4, !dbg !1256
  %xor826.i4309 = xor i32 %xor821.i4305, %3592, !dbg !1256
  %3593 = load i32, i32* %l.i3466, align 4, !dbg !1256
  %xor827.i4310 = xor i32 %3593, %xor826.i4309, !dbg !1256
  store i32 %xor827.i4310, i32* %l.i3466, align 4, !dbg !1256
  %3594 = load i32, i32* %l.i3466, align 4, !dbg !1257
  %3595 = load i32*, i32** %s.i3470, align 8, !dbg !1257
  %arrayidx828.i4311 = getelementptr inbounds i32, i32* %3595, i64 28, !dbg !1257
  %3596 = load i32, i32* %arrayidx828.i4311, align 4, !dbg !1257
  %xor829.i4312 = xor i32 %3594, %3596, !dbg !1257
  store i32 %xor829.i4312, i32* %u.i3469, align 4, !dbg !1257
  %3597 = load i32, i32* %l.i3466, align 4, !dbg !1257
  %3598 = load i32*, i32** %s.i3470, align 8, !dbg !1257
  %arrayidx830.i4313 = getelementptr inbounds i32, i32* %3598, i64 29, !dbg !1257
  %3599 = load i32, i32* %arrayidx830.i4313, align 4, !dbg !1257
  %xor831.i4314 = xor i32 %3597, %3599, !dbg !1257
  store i32 %xor831.i4314, i32* %t.i3468, align 4, !dbg !1257
  %3600 = load i32, i32* %t.i3468, align 4, !dbg !711
  %3601 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3600) #5, !dbg !711, !srcloc !198
  store i32 %3601, i32* %ret832.i3510, align 4, !dbg !711
  %3602 = load i32, i32* %ret832.i3510, align 4, !dbg !711
  store i32 %3602, i32* %tmp833.i3511, align 4, !dbg !711
  %3603 = load i32, i32* %tmp833.i3511, align 4, !dbg !711
  store i32 %3603, i32* %t.i3468, align 4, !dbg !1257
  %3604 = load i32, i32* %u.i3469, align 4, !dbg !1257
  %shr834.i4315 = lshr i32 %3604, 2, !dbg !1257
  %and835.i4316 = and i32 %shr834.i4315, 63, !dbg !1257
  %idxprom836.i4317 = zext i32 %and835.i4316 to i64, !dbg !1257
  %arrayidx837.i4318 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i4317, !dbg !1257
  %3605 = load i32, i32* %arrayidx837.i4318, align 4, !dbg !1257
  %3606 = load i32, i32* %u.i3469, align 4, !dbg !1257
  %shr838.i4319 = lshr i32 %3606, 10, !dbg !1257
  %and839.i4320 = and i32 %shr838.i4319, 63, !dbg !1257
  %idxprom840.i4321 = zext i32 %and839.i4320 to i64, !dbg !1257
  %arrayidx841.i4322 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i4321, !dbg !1257
  %3607 = load i32, i32* %arrayidx841.i4322, align 4, !dbg !1257
  %xor842.i4323 = xor i32 %3605, %3607, !dbg !1257
  %3608 = load i32, i32* %u.i3469, align 4, !dbg !1257
  %shr843.i4324 = lshr i32 %3608, 18, !dbg !1257
  %and844.i4325 = and i32 %shr843.i4324, 63, !dbg !1257
  %idxprom845.i4326 = zext i32 %and844.i4325 to i64, !dbg !1257
  %arrayidx846.i4327 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i4326, !dbg !1257
  %3609 = load i32, i32* %arrayidx846.i4327, align 4, !dbg !1257
  %xor847.i4328 = xor i32 %xor842.i4323, %3609, !dbg !1257
  %3610 = load i32, i32* %u.i3469, align 4, !dbg !1257
  %shr848.i4329 = lshr i32 %3610, 26, !dbg !1257
  %idxprom850.i4330 = zext i32 %shr848.i4329 to i64, !dbg !1257
  %arrayidx851.i4331 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i4330, !dbg !1257
  %3611 = load i32, i32* %arrayidx851.i4331, align 4, !dbg !1257
  %xor852.i4332 = xor i32 %xor847.i4328, %3611, !dbg !1257
  %3612 = load i32, i32* %t.i3468, align 4, !dbg !1257
  %shr853.i4333 = lshr i32 %3612, 2, !dbg !1257
  %and854.i4334 = and i32 %shr853.i4333, 63, !dbg !1257
  %idxprom855.i4335 = zext i32 %and854.i4334 to i64, !dbg !1257
  %arrayidx856.i4336 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i4335, !dbg !1257
  %3613 = load i32, i32* %arrayidx856.i4336, align 4, !dbg !1257
  %xor857.i4337 = xor i32 %xor852.i4332, %3613, !dbg !1257
  %3614 = load i32, i32* %t.i3468, align 4, !dbg !1257
  %shr858.i4338 = lshr i32 %3614, 10, !dbg !1257
  %and859.i4339 = and i32 %shr858.i4338, 63, !dbg !1257
  %idxprom860.i4340 = zext i32 %and859.i4339 to i64, !dbg !1257
  %arrayidx861.i4341 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i4340, !dbg !1257
  %3615 = load i32, i32* %arrayidx861.i4341, align 4, !dbg !1257
  %xor862.i4342 = xor i32 %xor857.i4337, %3615, !dbg !1257
  %3616 = load i32, i32* %t.i3468, align 4, !dbg !1257
  %shr863.i4343 = lshr i32 %3616, 18, !dbg !1257
  %and864.i4344 = and i32 %shr863.i4343, 63, !dbg !1257
  %idxprom865.i4345 = zext i32 %and864.i4344 to i64, !dbg !1257
  %arrayidx866.i4346 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i4345, !dbg !1257
  %3617 = load i32, i32* %arrayidx866.i4346, align 4, !dbg !1257
  %xor867.i4347 = xor i32 %xor862.i4342, %3617, !dbg !1257
  %3618 = load i32, i32* %t.i3468, align 4, !dbg !1257
  %shr868.i4348 = lshr i32 %3618, 26, !dbg !1257
  %idxprom870.i4349 = zext i32 %shr868.i4348 to i64, !dbg !1257
  %arrayidx871.i4350 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i4349, !dbg !1257
  %3619 = load i32, i32* %arrayidx871.i4350, align 4, !dbg !1257
  %xor872.i4351 = xor i32 %xor867.i4347, %3619, !dbg !1257
  %3620 = load i32, i32* %r.i3467, align 4, !dbg !1257
  %xor873.i4352 = xor i32 %3620, %xor872.i4351, !dbg !1257
  store i32 %xor873.i4352, i32* %r.i3467, align 4, !dbg !1257
  %3621 = load i32, i32* %r.i3467, align 4, !dbg !1258
  %3622 = load i32*, i32** %s.i3470, align 8, !dbg !1258
  %arrayidx874.i4353 = getelementptr inbounds i32, i32* %3622, i64 26, !dbg !1258
  %3623 = load i32, i32* %arrayidx874.i4353, align 4, !dbg !1258
  %xor875.i4354 = xor i32 %3621, %3623, !dbg !1258
  store i32 %xor875.i4354, i32* %u.i3469, align 4, !dbg !1258
  %3624 = load i32, i32* %r.i3467, align 4, !dbg !1258
  %3625 = load i32*, i32** %s.i3470, align 8, !dbg !1258
  %arrayidx876.i4355 = getelementptr inbounds i32, i32* %3625, i64 27, !dbg !1258
  %3626 = load i32, i32* %arrayidx876.i4355, align 4, !dbg !1258
  %xor877.i4356 = xor i32 %3624, %3626, !dbg !1258
  store i32 %xor877.i4356, i32* %t.i3468, align 4, !dbg !1258
  %3627 = load i32, i32* %t.i3468, align 4, !dbg !712
  %3628 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3627) #5, !dbg !712, !srcloc !204
  store i32 %3628, i32* %ret878.i3512, align 4, !dbg !712
  %3629 = load i32, i32* %ret878.i3512, align 4, !dbg !712
  store i32 %3629, i32* %tmp879.i3513, align 4, !dbg !712
  %3630 = load i32, i32* %tmp879.i3513, align 4, !dbg !712
  store i32 %3630, i32* %t.i3468, align 4, !dbg !1258
  %3631 = load i32, i32* %u.i3469, align 4, !dbg !1258
  %shr880.i4357 = lshr i32 %3631, 2, !dbg !1258
  %and881.i4358 = and i32 %shr880.i4357, 63, !dbg !1258
  %idxprom882.i4359 = zext i32 %and881.i4358 to i64, !dbg !1258
  %arrayidx883.i4360 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i4359, !dbg !1258
  %3632 = load i32, i32* %arrayidx883.i4360, align 4, !dbg !1258
  %3633 = load i32, i32* %u.i3469, align 4, !dbg !1258
  %shr884.i4361 = lshr i32 %3633, 10, !dbg !1258
  %and885.i4362 = and i32 %shr884.i4361, 63, !dbg !1258
  %idxprom886.i4363 = zext i32 %and885.i4362 to i64, !dbg !1258
  %arrayidx887.i4364 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i4363, !dbg !1258
  %3634 = load i32, i32* %arrayidx887.i4364, align 4, !dbg !1258
  %xor888.i4365 = xor i32 %3632, %3634, !dbg !1258
  %3635 = load i32, i32* %u.i3469, align 4, !dbg !1258
  %shr889.i4366 = lshr i32 %3635, 18, !dbg !1258
  %and890.i4367 = and i32 %shr889.i4366, 63, !dbg !1258
  %idxprom891.i4368 = zext i32 %and890.i4367 to i64, !dbg !1258
  %arrayidx892.i4369 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i4368, !dbg !1258
  %3636 = load i32, i32* %arrayidx892.i4369, align 4, !dbg !1258
  %xor893.i4370 = xor i32 %xor888.i4365, %3636, !dbg !1258
  %3637 = load i32, i32* %u.i3469, align 4, !dbg !1258
  %shr894.i4371 = lshr i32 %3637, 26, !dbg !1258
  %idxprom896.i4372 = zext i32 %shr894.i4371 to i64, !dbg !1258
  %arrayidx897.i4373 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i4372, !dbg !1258
  %3638 = load i32, i32* %arrayidx897.i4373, align 4, !dbg !1258
  %xor898.i4374 = xor i32 %xor893.i4370, %3638, !dbg !1258
  %3639 = load i32, i32* %t.i3468, align 4, !dbg !1258
  %shr899.i4375 = lshr i32 %3639, 2, !dbg !1258
  %and900.i4376 = and i32 %shr899.i4375, 63, !dbg !1258
  %idxprom901.i4377 = zext i32 %and900.i4376 to i64, !dbg !1258
  %arrayidx902.i4378 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i4377, !dbg !1258
  %3640 = load i32, i32* %arrayidx902.i4378, align 4, !dbg !1258
  %xor903.i4379 = xor i32 %xor898.i4374, %3640, !dbg !1258
  %3641 = load i32, i32* %t.i3468, align 4, !dbg !1258
  %shr904.i4380 = lshr i32 %3641, 10, !dbg !1258
  %and905.i4381 = and i32 %shr904.i4380, 63, !dbg !1258
  %idxprom906.i4382 = zext i32 %and905.i4381 to i64, !dbg !1258
  %arrayidx907.i4383 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i4382, !dbg !1258
  %3642 = load i32, i32* %arrayidx907.i4383, align 4, !dbg !1258
  %xor908.i4384 = xor i32 %xor903.i4379, %3642, !dbg !1258
  %3643 = load i32, i32* %t.i3468, align 4, !dbg !1258
  %shr909.i4385 = lshr i32 %3643, 18, !dbg !1258
  %and910.i4386 = and i32 %shr909.i4385, 63, !dbg !1258
  %idxprom911.i4387 = zext i32 %and910.i4386 to i64, !dbg !1258
  %arrayidx912.i4388 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i4387, !dbg !1258
  %3644 = load i32, i32* %arrayidx912.i4388, align 4, !dbg !1258
  %xor913.i4389 = xor i32 %xor908.i4384, %3644, !dbg !1258
  %3645 = load i32, i32* %t.i3468, align 4, !dbg !1258
  %shr914.i4390 = lshr i32 %3645, 26, !dbg !1258
  %idxprom916.i4391 = zext i32 %shr914.i4390 to i64, !dbg !1258
  %arrayidx917.i4392 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i4391, !dbg !1258
  %3646 = load i32, i32* %arrayidx917.i4392, align 4, !dbg !1258
  %xor918.i4393 = xor i32 %xor913.i4389, %3646, !dbg !1258
  %3647 = load i32, i32* %l.i3466, align 4, !dbg !1258
  %xor919.i4394 = xor i32 %3647, %xor918.i4393, !dbg !1258
  store i32 %xor919.i4394, i32* %l.i3466, align 4, !dbg !1258
  %3648 = load i32, i32* %l.i3466, align 4, !dbg !1259
  %3649 = load i32*, i32** %s.i3470, align 8, !dbg !1259
  %arrayidx920.i4395 = getelementptr inbounds i32, i32* %3649, i64 24, !dbg !1259
  %3650 = load i32, i32* %arrayidx920.i4395, align 4, !dbg !1259
  %xor921.i4396 = xor i32 %3648, %3650, !dbg !1259
  store i32 %xor921.i4396, i32* %u.i3469, align 4, !dbg !1259
  %3651 = load i32, i32* %l.i3466, align 4, !dbg !1259
  %3652 = load i32*, i32** %s.i3470, align 8, !dbg !1259
  %arrayidx922.i4397 = getelementptr inbounds i32, i32* %3652, i64 25, !dbg !1259
  %3653 = load i32, i32* %arrayidx922.i4397, align 4, !dbg !1259
  %xor923.i4398 = xor i32 %3651, %3653, !dbg !1259
  store i32 %xor923.i4398, i32* %t.i3468, align 4, !dbg !1259
  %3654 = load i32, i32* %t.i3468, align 4, !dbg !713
  %3655 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3654) #5, !dbg !713, !srcloc !210
  store i32 %3655, i32* %ret924.i3514, align 4, !dbg !713
  %3656 = load i32, i32* %ret924.i3514, align 4, !dbg !713
  store i32 %3656, i32* %tmp925.i3515, align 4, !dbg !713
  %3657 = load i32, i32* %tmp925.i3515, align 4, !dbg !713
  store i32 %3657, i32* %t.i3468, align 4, !dbg !1259
  %3658 = load i32, i32* %u.i3469, align 4, !dbg !1259
  %shr926.i4399 = lshr i32 %3658, 2, !dbg !1259
  %and927.i4400 = and i32 %shr926.i4399, 63, !dbg !1259
  %idxprom928.i4401 = zext i32 %and927.i4400 to i64, !dbg !1259
  %arrayidx929.i4402 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i4401, !dbg !1259
  %3659 = load i32, i32* %arrayidx929.i4402, align 4, !dbg !1259
  %3660 = load i32, i32* %u.i3469, align 4, !dbg !1259
  %shr930.i4403 = lshr i32 %3660, 10, !dbg !1259
  %and931.i4404 = and i32 %shr930.i4403, 63, !dbg !1259
  %idxprom932.i4405 = zext i32 %and931.i4404 to i64, !dbg !1259
  %arrayidx933.i4406 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i4405, !dbg !1259
  %3661 = load i32, i32* %arrayidx933.i4406, align 4, !dbg !1259
  %xor934.i4407 = xor i32 %3659, %3661, !dbg !1259
  %3662 = load i32, i32* %u.i3469, align 4, !dbg !1259
  %shr935.i4408 = lshr i32 %3662, 18, !dbg !1259
  %and936.i4409 = and i32 %shr935.i4408, 63, !dbg !1259
  %idxprom937.i4410 = zext i32 %and936.i4409 to i64, !dbg !1259
  %arrayidx938.i4411 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i4410, !dbg !1259
  %3663 = load i32, i32* %arrayidx938.i4411, align 4, !dbg !1259
  %xor939.i4412 = xor i32 %xor934.i4407, %3663, !dbg !1259
  %3664 = load i32, i32* %u.i3469, align 4, !dbg !1259
  %shr940.i4413 = lshr i32 %3664, 26, !dbg !1259
  %idxprom942.i4414 = zext i32 %shr940.i4413 to i64, !dbg !1259
  %arrayidx943.i4415 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i4414, !dbg !1259
  %3665 = load i32, i32* %arrayidx943.i4415, align 4, !dbg !1259
  %xor944.i4416 = xor i32 %xor939.i4412, %3665, !dbg !1259
  %3666 = load i32, i32* %t.i3468, align 4, !dbg !1259
  %shr945.i4417 = lshr i32 %3666, 2, !dbg !1259
  %and946.i4418 = and i32 %shr945.i4417, 63, !dbg !1259
  %idxprom947.i4419 = zext i32 %and946.i4418 to i64, !dbg !1259
  %arrayidx948.i4420 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i4419, !dbg !1259
  %3667 = load i32, i32* %arrayidx948.i4420, align 4, !dbg !1259
  %xor949.i4421 = xor i32 %xor944.i4416, %3667, !dbg !1259
  %3668 = load i32, i32* %t.i3468, align 4, !dbg !1259
  %shr950.i4422 = lshr i32 %3668, 10, !dbg !1259
  %and951.i4423 = and i32 %shr950.i4422, 63, !dbg !1259
  %idxprom952.i4424 = zext i32 %and951.i4423 to i64, !dbg !1259
  %arrayidx953.i4425 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i4424, !dbg !1259
  %3669 = load i32, i32* %arrayidx953.i4425, align 4, !dbg !1259
  %xor954.i4426 = xor i32 %xor949.i4421, %3669, !dbg !1259
  %3670 = load i32, i32* %t.i3468, align 4, !dbg !1259
  %shr955.i4427 = lshr i32 %3670, 18, !dbg !1259
  %and956.i4428 = and i32 %shr955.i4427, 63, !dbg !1259
  %idxprom957.i4429 = zext i32 %and956.i4428 to i64, !dbg !1259
  %arrayidx958.i4430 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i4429, !dbg !1259
  %3671 = load i32, i32* %arrayidx958.i4430, align 4, !dbg !1259
  %xor959.i4431 = xor i32 %xor954.i4426, %3671, !dbg !1259
  %3672 = load i32, i32* %t.i3468, align 4, !dbg !1259
  %shr960.i4432 = lshr i32 %3672, 26, !dbg !1259
  %idxprom962.i4433 = zext i32 %shr960.i4432 to i64, !dbg !1259
  %arrayidx963.i4434 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i4433, !dbg !1259
  %3673 = load i32, i32* %arrayidx963.i4434, align 4, !dbg !1259
  %xor964.i4435 = xor i32 %xor959.i4431, %3673, !dbg !1259
  %3674 = load i32, i32* %r.i3467, align 4, !dbg !1259
  %xor965.i4436 = xor i32 %3674, %xor964.i4435, !dbg !1259
  store i32 %xor965.i4436, i32* %r.i3467, align 4, !dbg !1259
  %3675 = load i32, i32* %r.i3467, align 4, !dbg !1260
  %3676 = load i32*, i32** %s.i3470, align 8, !dbg !1260
  %arrayidx966.i4437 = getelementptr inbounds i32, i32* %3676, i64 22, !dbg !1260
  %3677 = load i32, i32* %arrayidx966.i4437, align 4, !dbg !1260
  %xor967.i4438 = xor i32 %3675, %3677, !dbg !1260
  store i32 %xor967.i4438, i32* %u.i3469, align 4, !dbg !1260
  %3678 = load i32, i32* %r.i3467, align 4, !dbg !1260
  %3679 = load i32*, i32** %s.i3470, align 8, !dbg !1260
  %arrayidx968.i4439 = getelementptr inbounds i32, i32* %3679, i64 23, !dbg !1260
  %3680 = load i32, i32* %arrayidx968.i4439, align 4, !dbg !1260
  %xor969.i4440 = xor i32 %3678, %3680, !dbg !1260
  store i32 %xor969.i4440, i32* %t.i3468, align 4, !dbg !1260
  %3681 = load i32, i32* %t.i3468, align 4, !dbg !714
  %3682 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3681) #5, !dbg !714, !srcloc !216
  store i32 %3682, i32* %ret970.i3516, align 4, !dbg !714
  %3683 = load i32, i32* %ret970.i3516, align 4, !dbg !714
  store i32 %3683, i32* %tmp971.i3517, align 4, !dbg !714
  %3684 = load i32, i32* %tmp971.i3517, align 4, !dbg !714
  store i32 %3684, i32* %t.i3468, align 4, !dbg !1260
  %3685 = load i32, i32* %u.i3469, align 4, !dbg !1260
  %shr972.i4441 = lshr i32 %3685, 2, !dbg !1260
  %and973.i4442 = and i32 %shr972.i4441, 63, !dbg !1260
  %idxprom974.i4443 = zext i32 %and973.i4442 to i64, !dbg !1260
  %arrayidx975.i4444 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i4443, !dbg !1260
  %3686 = load i32, i32* %arrayidx975.i4444, align 4, !dbg !1260
  %3687 = load i32, i32* %u.i3469, align 4, !dbg !1260
  %shr976.i4445 = lshr i32 %3687, 10, !dbg !1260
  %and977.i4446 = and i32 %shr976.i4445, 63, !dbg !1260
  %idxprom978.i4447 = zext i32 %and977.i4446 to i64, !dbg !1260
  %arrayidx979.i4448 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i4447, !dbg !1260
  %3688 = load i32, i32* %arrayidx979.i4448, align 4, !dbg !1260
  %xor980.i4449 = xor i32 %3686, %3688, !dbg !1260
  %3689 = load i32, i32* %u.i3469, align 4, !dbg !1260
  %shr981.i4450 = lshr i32 %3689, 18, !dbg !1260
  %and982.i4451 = and i32 %shr981.i4450, 63, !dbg !1260
  %idxprom983.i4452 = zext i32 %and982.i4451 to i64, !dbg !1260
  %arrayidx984.i4453 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i4452, !dbg !1260
  %3690 = load i32, i32* %arrayidx984.i4453, align 4, !dbg !1260
  %xor985.i4454 = xor i32 %xor980.i4449, %3690, !dbg !1260
  %3691 = load i32, i32* %u.i3469, align 4, !dbg !1260
  %shr986.i4455 = lshr i32 %3691, 26, !dbg !1260
  %idxprom988.i4456 = zext i32 %shr986.i4455 to i64, !dbg !1260
  %arrayidx989.i4457 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i4456, !dbg !1260
  %3692 = load i32, i32* %arrayidx989.i4457, align 4, !dbg !1260
  %xor990.i4458 = xor i32 %xor985.i4454, %3692, !dbg !1260
  %3693 = load i32, i32* %t.i3468, align 4, !dbg !1260
  %shr991.i4459 = lshr i32 %3693, 2, !dbg !1260
  %and992.i4460 = and i32 %shr991.i4459, 63, !dbg !1260
  %idxprom993.i4461 = zext i32 %and992.i4460 to i64, !dbg !1260
  %arrayidx994.i4462 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i4461, !dbg !1260
  %3694 = load i32, i32* %arrayidx994.i4462, align 4, !dbg !1260
  %xor995.i4463 = xor i32 %xor990.i4458, %3694, !dbg !1260
  %3695 = load i32, i32* %t.i3468, align 4, !dbg !1260
  %shr996.i4464 = lshr i32 %3695, 10, !dbg !1260
  %and997.i4465 = and i32 %shr996.i4464, 63, !dbg !1260
  %idxprom998.i4466 = zext i32 %and997.i4465 to i64, !dbg !1260
  %arrayidx999.i4467 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i4466, !dbg !1260
  %3696 = load i32, i32* %arrayidx999.i4467, align 4, !dbg !1260
  %xor1000.i4468 = xor i32 %xor995.i4463, %3696, !dbg !1260
  %3697 = load i32, i32* %t.i3468, align 4, !dbg !1260
  %shr1001.i4469 = lshr i32 %3697, 18, !dbg !1260
  %and1002.i4470 = and i32 %shr1001.i4469, 63, !dbg !1260
  %idxprom1003.i4471 = zext i32 %and1002.i4470 to i64, !dbg !1260
  %arrayidx1004.i4472 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i4471, !dbg !1260
  %3698 = load i32, i32* %arrayidx1004.i4472, align 4, !dbg !1260
  %xor1005.i4473 = xor i32 %xor1000.i4468, %3698, !dbg !1260
  %3699 = load i32, i32* %t.i3468, align 4, !dbg !1260
  %shr1006.i4474 = lshr i32 %3699, 26, !dbg !1260
  %idxprom1008.i4475 = zext i32 %shr1006.i4474 to i64, !dbg !1260
  %arrayidx1009.i4476 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i4475, !dbg !1260
  %3700 = load i32, i32* %arrayidx1009.i4476, align 4, !dbg !1260
  %xor1010.i4477 = xor i32 %xor1005.i4473, %3700, !dbg !1260
  %3701 = load i32, i32* %l.i3466, align 4, !dbg !1260
  %xor1011.i4478 = xor i32 %3701, %xor1010.i4477, !dbg !1260
  store i32 %xor1011.i4478, i32* %l.i3466, align 4, !dbg !1260
  %3702 = load i32, i32* %l.i3466, align 4, !dbg !1261
  %3703 = load i32*, i32** %s.i3470, align 8, !dbg !1261
  %arrayidx1012.i4479 = getelementptr inbounds i32, i32* %3703, i64 20, !dbg !1261
  %3704 = load i32, i32* %arrayidx1012.i4479, align 4, !dbg !1261
  %xor1013.i4480 = xor i32 %3702, %3704, !dbg !1261
  store i32 %xor1013.i4480, i32* %u.i3469, align 4, !dbg !1261
  %3705 = load i32, i32* %l.i3466, align 4, !dbg !1261
  %3706 = load i32*, i32** %s.i3470, align 8, !dbg !1261
  %arrayidx1014.i4481 = getelementptr inbounds i32, i32* %3706, i64 21, !dbg !1261
  %3707 = load i32, i32* %arrayidx1014.i4481, align 4, !dbg !1261
  %xor1015.i4482 = xor i32 %3705, %3707, !dbg !1261
  store i32 %xor1015.i4482, i32* %t.i3468, align 4, !dbg !1261
  %3708 = load i32, i32* %t.i3468, align 4, !dbg !715
  %3709 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3708) #5, !dbg !715, !srcloc !222
  store i32 %3709, i32* %ret1016.i3518, align 4, !dbg !715
  %3710 = load i32, i32* %ret1016.i3518, align 4, !dbg !715
  store i32 %3710, i32* %tmp1017.i3519, align 4, !dbg !715
  %3711 = load i32, i32* %tmp1017.i3519, align 4, !dbg !715
  store i32 %3711, i32* %t.i3468, align 4, !dbg !1261
  %3712 = load i32, i32* %u.i3469, align 4, !dbg !1261
  %shr1018.i4483 = lshr i32 %3712, 2, !dbg !1261
  %and1019.i4484 = and i32 %shr1018.i4483, 63, !dbg !1261
  %idxprom1020.i4485 = zext i32 %and1019.i4484 to i64, !dbg !1261
  %arrayidx1021.i4486 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i4485, !dbg !1261
  %3713 = load i32, i32* %arrayidx1021.i4486, align 4, !dbg !1261
  %3714 = load i32, i32* %u.i3469, align 4, !dbg !1261
  %shr1022.i4487 = lshr i32 %3714, 10, !dbg !1261
  %and1023.i4488 = and i32 %shr1022.i4487, 63, !dbg !1261
  %idxprom1024.i4489 = zext i32 %and1023.i4488 to i64, !dbg !1261
  %arrayidx1025.i4490 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i4489, !dbg !1261
  %3715 = load i32, i32* %arrayidx1025.i4490, align 4, !dbg !1261
  %xor1026.i4491 = xor i32 %3713, %3715, !dbg !1261
  %3716 = load i32, i32* %u.i3469, align 4, !dbg !1261
  %shr1027.i4492 = lshr i32 %3716, 18, !dbg !1261
  %and1028.i4493 = and i32 %shr1027.i4492, 63, !dbg !1261
  %idxprom1029.i4494 = zext i32 %and1028.i4493 to i64, !dbg !1261
  %arrayidx1030.i4495 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i4494, !dbg !1261
  %3717 = load i32, i32* %arrayidx1030.i4495, align 4, !dbg !1261
  %xor1031.i4496 = xor i32 %xor1026.i4491, %3717, !dbg !1261
  %3718 = load i32, i32* %u.i3469, align 4, !dbg !1261
  %shr1032.i4497 = lshr i32 %3718, 26, !dbg !1261
  %idxprom1034.i4498 = zext i32 %shr1032.i4497 to i64, !dbg !1261
  %arrayidx1035.i4499 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i4498, !dbg !1261
  %3719 = load i32, i32* %arrayidx1035.i4499, align 4, !dbg !1261
  %xor1036.i4500 = xor i32 %xor1031.i4496, %3719, !dbg !1261
  %3720 = load i32, i32* %t.i3468, align 4, !dbg !1261
  %shr1037.i4501 = lshr i32 %3720, 2, !dbg !1261
  %and1038.i4502 = and i32 %shr1037.i4501, 63, !dbg !1261
  %idxprom1039.i4503 = zext i32 %and1038.i4502 to i64, !dbg !1261
  %arrayidx1040.i4504 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i4503, !dbg !1261
  %3721 = load i32, i32* %arrayidx1040.i4504, align 4, !dbg !1261
  %xor1041.i4505 = xor i32 %xor1036.i4500, %3721, !dbg !1261
  %3722 = load i32, i32* %t.i3468, align 4, !dbg !1261
  %shr1042.i4506 = lshr i32 %3722, 10, !dbg !1261
  %and1043.i4507 = and i32 %shr1042.i4506, 63, !dbg !1261
  %idxprom1044.i4508 = zext i32 %and1043.i4507 to i64, !dbg !1261
  %arrayidx1045.i4509 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i4508, !dbg !1261
  %3723 = load i32, i32* %arrayidx1045.i4509, align 4, !dbg !1261
  %xor1046.i4510 = xor i32 %xor1041.i4505, %3723, !dbg !1261
  %3724 = load i32, i32* %t.i3468, align 4, !dbg !1261
  %shr1047.i4511 = lshr i32 %3724, 18, !dbg !1261
  %and1048.i4512 = and i32 %shr1047.i4511, 63, !dbg !1261
  %idxprom1049.i4513 = zext i32 %and1048.i4512 to i64, !dbg !1261
  %arrayidx1050.i4514 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i4513, !dbg !1261
  %3725 = load i32, i32* %arrayidx1050.i4514, align 4, !dbg !1261
  %xor1051.i4515 = xor i32 %xor1046.i4510, %3725, !dbg !1261
  %3726 = load i32, i32* %t.i3468, align 4, !dbg !1261
  %shr1052.i4516 = lshr i32 %3726, 26, !dbg !1261
  %idxprom1054.i4517 = zext i32 %shr1052.i4516 to i64, !dbg !1261
  %arrayidx1055.i4518 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i4517, !dbg !1261
  %3727 = load i32, i32* %arrayidx1055.i4518, align 4, !dbg !1261
  %xor1056.i4519 = xor i32 %xor1051.i4515, %3727, !dbg !1261
  %3728 = load i32, i32* %r.i3467, align 4, !dbg !1261
  %xor1057.i4520 = xor i32 %3728, %xor1056.i4519, !dbg !1261
  store i32 %xor1057.i4520, i32* %r.i3467, align 4, !dbg !1261
  %3729 = load i32, i32* %r.i3467, align 4, !dbg !1262
  %3730 = load i32*, i32** %s.i3470, align 8, !dbg !1262
  %arrayidx1058.i4521 = getelementptr inbounds i32, i32* %3730, i64 18, !dbg !1262
  %3731 = load i32, i32* %arrayidx1058.i4521, align 4, !dbg !1262
  %xor1059.i4522 = xor i32 %3729, %3731, !dbg !1262
  store i32 %xor1059.i4522, i32* %u.i3469, align 4, !dbg !1262
  %3732 = load i32, i32* %r.i3467, align 4, !dbg !1262
  %3733 = load i32*, i32** %s.i3470, align 8, !dbg !1262
  %arrayidx1060.i4523 = getelementptr inbounds i32, i32* %3733, i64 19, !dbg !1262
  %3734 = load i32, i32* %arrayidx1060.i4523, align 4, !dbg !1262
  %xor1061.i4524 = xor i32 %3732, %3734, !dbg !1262
  store i32 %xor1061.i4524, i32* %t.i3468, align 4, !dbg !1262
  %3735 = load i32, i32* %t.i3468, align 4, !dbg !716
  %3736 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3735) #5, !dbg !716, !srcloc !228
  store i32 %3736, i32* %ret1062.i3520, align 4, !dbg !716
  %3737 = load i32, i32* %ret1062.i3520, align 4, !dbg !716
  store i32 %3737, i32* %tmp1063.i3521, align 4, !dbg !716
  %3738 = load i32, i32* %tmp1063.i3521, align 4, !dbg !716
  store i32 %3738, i32* %t.i3468, align 4, !dbg !1262
  %3739 = load i32, i32* %u.i3469, align 4, !dbg !1262
  %shr1064.i4525 = lshr i32 %3739, 2, !dbg !1262
  %and1065.i4526 = and i32 %shr1064.i4525, 63, !dbg !1262
  %idxprom1066.i4527 = zext i32 %and1065.i4526 to i64, !dbg !1262
  %arrayidx1067.i4528 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i4527, !dbg !1262
  %3740 = load i32, i32* %arrayidx1067.i4528, align 4, !dbg !1262
  %3741 = load i32, i32* %u.i3469, align 4, !dbg !1262
  %shr1068.i4529 = lshr i32 %3741, 10, !dbg !1262
  %and1069.i4530 = and i32 %shr1068.i4529, 63, !dbg !1262
  %idxprom1070.i4531 = zext i32 %and1069.i4530 to i64, !dbg !1262
  %arrayidx1071.i4532 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i4531, !dbg !1262
  %3742 = load i32, i32* %arrayidx1071.i4532, align 4, !dbg !1262
  %xor1072.i4533 = xor i32 %3740, %3742, !dbg !1262
  %3743 = load i32, i32* %u.i3469, align 4, !dbg !1262
  %shr1073.i4534 = lshr i32 %3743, 18, !dbg !1262
  %and1074.i4535 = and i32 %shr1073.i4534, 63, !dbg !1262
  %idxprom1075.i4536 = zext i32 %and1074.i4535 to i64, !dbg !1262
  %arrayidx1076.i4537 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i4536, !dbg !1262
  %3744 = load i32, i32* %arrayidx1076.i4537, align 4, !dbg !1262
  %xor1077.i4538 = xor i32 %xor1072.i4533, %3744, !dbg !1262
  %3745 = load i32, i32* %u.i3469, align 4, !dbg !1262
  %shr1078.i4539 = lshr i32 %3745, 26, !dbg !1262
  %idxprom1080.i4540 = zext i32 %shr1078.i4539 to i64, !dbg !1262
  %arrayidx1081.i4541 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i4540, !dbg !1262
  %3746 = load i32, i32* %arrayidx1081.i4541, align 4, !dbg !1262
  %xor1082.i4542 = xor i32 %xor1077.i4538, %3746, !dbg !1262
  %3747 = load i32, i32* %t.i3468, align 4, !dbg !1262
  %shr1083.i4543 = lshr i32 %3747, 2, !dbg !1262
  %and1084.i4544 = and i32 %shr1083.i4543, 63, !dbg !1262
  %idxprom1085.i4545 = zext i32 %and1084.i4544 to i64, !dbg !1262
  %arrayidx1086.i4546 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i4545, !dbg !1262
  %3748 = load i32, i32* %arrayidx1086.i4546, align 4, !dbg !1262
  %xor1087.i4547 = xor i32 %xor1082.i4542, %3748, !dbg !1262
  %3749 = load i32, i32* %t.i3468, align 4, !dbg !1262
  %shr1088.i4548 = lshr i32 %3749, 10, !dbg !1262
  %and1089.i4549 = and i32 %shr1088.i4548, 63, !dbg !1262
  %idxprom1090.i4550 = zext i32 %and1089.i4549 to i64, !dbg !1262
  %arrayidx1091.i4551 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i4550, !dbg !1262
  %3750 = load i32, i32* %arrayidx1091.i4551, align 4, !dbg !1262
  %xor1092.i4552 = xor i32 %xor1087.i4547, %3750, !dbg !1262
  %3751 = load i32, i32* %t.i3468, align 4, !dbg !1262
  %shr1093.i4553 = lshr i32 %3751, 18, !dbg !1262
  %and1094.i4554 = and i32 %shr1093.i4553, 63, !dbg !1262
  %idxprom1095.i4555 = zext i32 %and1094.i4554 to i64, !dbg !1262
  %arrayidx1096.i4556 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i4555, !dbg !1262
  %3752 = load i32, i32* %arrayidx1096.i4556, align 4, !dbg !1262
  %xor1097.i4557 = xor i32 %xor1092.i4552, %3752, !dbg !1262
  %3753 = load i32, i32* %t.i3468, align 4, !dbg !1262
  %shr1098.i4558 = lshr i32 %3753, 26, !dbg !1262
  %idxprom1100.i4559 = zext i32 %shr1098.i4558 to i64, !dbg !1262
  %arrayidx1101.i4560 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i4559, !dbg !1262
  %3754 = load i32, i32* %arrayidx1101.i4560, align 4, !dbg !1262
  %xor1102.i4561 = xor i32 %xor1097.i4557, %3754, !dbg !1262
  %3755 = load i32, i32* %l.i3466, align 4, !dbg !1262
  %xor1103.i4562 = xor i32 %3755, %xor1102.i4561, !dbg !1262
  store i32 %xor1103.i4562, i32* %l.i3466, align 4, !dbg !1262
  %3756 = load i32, i32* %l.i3466, align 4, !dbg !1263
  %3757 = load i32*, i32** %s.i3470, align 8, !dbg !1263
  %arrayidx1104.i4563 = getelementptr inbounds i32, i32* %3757, i64 16, !dbg !1263
  %3758 = load i32, i32* %arrayidx1104.i4563, align 4, !dbg !1263
  %xor1105.i4564 = xor i32 %3756, %3758, !dbg !1263
  store i32 %xor1105.i4564, i32* %u.i3469, align 4, !dbg !1263
  %3759 = load i32, i32* %l.i3466, align 4, !dbg !1263
  %3760 = load i32*, i32** %s.i3470, align 8, !dbg !1263
  %arrayidx1106.i4565 = getelementptr inbounds i32, i32* %3760, i64 17, !dbg !1263
  %3761 = load i32, i32* %arrayidx1106.i4565, align 4, !dbg !1263
  %xor1107.i4566 = xor i32 %3759, %3761, !dbg !1263
  store i32 %xor1107.i4566, i32* %t.i3468, align 4, !dbg !1263
  %3762 = load i32, i32* %t.i3468, align 4, !dbg !717
  %3763 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3762) #5, !dbg !717, !srcloc !234
  store i32 %3763, i32* %ret1108.i3522, align 4, !dbg !717
  %3764 = load i32, i32* %ret1108.i3522, align 4, !dbg !717
  store i32 %3764, i32* %tmp1109.i3523, align 4, !dbg !717
  %3765 = load i32, i32* %tmp1109.i3523, align 4, !dbg !717
  store i32 %3765, i32* %t.i3468, align 4, !dbg !1263
  %3766 = load i32, i32* %u.i3469, align 4, !dbg !1263
  %shr1110.i4567 = lshr i32 %3766, 2, !dbg !1263
  %and1111.i4568 = and i32 %shr1110.i4567, 63, !dbg !1263
  %idxprom1112.i4569 = zext i32 %and1111.i4568 to i64, !dbg !1263
  %arrayidx1113.i4570 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i4569, !dbg !1263
  %3767 = load i32, i32* %arrayidx1113.i4570, align 4, !dbg !1263
  %3768 = load i32, i32* %u.i3469, align 4, !dbg !1263
  %shr1114.i4571 = lshr i32 %3768, 10, !dbg !1263
  %and1115.i4572 = and i32 %shr1114.i4571, 63, !dbg !1263
  %idxprom1116.i4573 = zext i32 %and1115.i4572 to i64, !dbg !1263
  %arrayidx1117.i4574 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i4573, !dbg !1263
  %3769 = load i32, i32* %arrayidx1117.i4574, align 4, !dbg !1263
  %xor1118.i4575 = xor i32 %3767, %3769, !dbg !1263
  %3770 = load i32, i32* %u.i3469, align 4, !dbg !1263
  %shr1119.i4576 = lshr i32 %3770, 18, !dbg !1263
  %and1120.i4577 = and i32 %shr1119.i4576, 63, !dbg !1263
  %idxprom1121.i4578 = zext i32 %and1120.i4577 to i64, !dbg !1263
  %arrayidx1122.i4579 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i4578, !dbg !1263
  %3771 = load i32, i32* %arrayidx1122.i4579, align 4, !dbg !1263
  %xor1123.i4580 = xor i32 %xor1118.i4575, %3771, !dbg !1263
  %3772 = load i32, i32* %u.i3469, align 4, !dbg !1263
  %shr1124.i4581 = lshr i32 %3772, 26, !dbg !1263
  %idxprom1126.i4582 = zext i32 %shr1124.i4581 to i64, !dbg !1263
  %arrayidx1127.i4583 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i4582, !dbg !1263
  %3773 = load i32, i32* %arrayidx1127.i4583, align 4, !dbg !1263
  %xor1128.i4584 = xor i32 %xor1123.i4580, %3773, !dbg !1263
  %3774 = load i32, i32* %t.i3468, align 4, !dbg !1263
  %shr1129.i4585 = lshr i32 %3774, 2, !dbg !1263
  %and1130.i4586 = and i32 %shr1129.i4585, 63, !dbg !1263
  %idxprom1131.i4587 = zext i32 %and1130.i4586 to i64, !dbg !1263
  %arrayidx1132.i4588 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i4587, !dbg !1263
  %3775 = load i32, i32* %arrayidx1132.i4588, align 4, !dbg !1263
  %xor1133.i4589 = xor i32 %xor1128.i4584, %3775, !dbg !1263
  %3776 = load i32, i32* %t.i3468, align 4, !dbg !1263
  %shr1134.i4590 = lshr i32 %3776, 10, !dbg !1263
  %and1135.i4591 = and i32 %shr1134.i4590, 63, !dbg !1263
  %idxprom1136.i4592 = zext i32 %and1135.i4591 to i64, !dbg !1263
  %arrayidx1137.i4593 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i4592, !dbg !1263
  %3777 = load i32, i32* %arrayidx1137.i4593, align 4, !dbg !1263
  %xor1138.i4594 = xor i32 %xor1133.i4589, %3777, !dbg !1263
  %3778 = load i32, i32* %t.i3468, align 4, !dbg !1263
  %shr1139.i4595 = lshr i32 %3778, 18, !dbg !1263
  %and1140.i4596 = and i32 %shr1139.i4595, 63, !dbg !1263
  %idxprom1141.i4597 = zext i32 %and1140.i4596 to i64, !dbg !1263
  %arrayidx1142.i4598 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i4597, !dbg !1263
  %3779 = load i32, i32* %arrayidx1142.i4598, align 4, !dbg !1263
  %xor1143.i4599 = xor i32 %xor1138.i4594, %3779, !dbg !1263
  %3780 = load i32, i32* %t.i3468, align 4, !dbg !1263
  %shr1144.i4600 = lshr i32 %3780, 26, !dbg !1263
  %idxprom1146.i4601 = zext i32 %shr1144.i4600 to i64, !dbg !1263
  %arrayidx1147.i4602 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i4601, !dbg !1263
  %3781 = load i32, i32* %arrayidx1147.i4602, align 4, !dbg !1263
  %xor1148.i4603 = xor i32 %xor1143.i4599, %3781, !dbg !1263
  %3782 = load i32, i32* %r.i3467, align 4, !dbg !1263
  %xor1149.i4604 = xor i32 %3782, %xor1148.i4603, !dbg !1263
  store i32 %xor1149.i4604, i32* %r.i3467, align 4, !dbg !1263
  %3783 = load i32, i32* %r.i3467, align 4, !dbg !1264
  %3784 = load i32*, i32** %s.i3470, align 8, !dbg !1264
  %arrayidx1150.i4605 = getelementptr inbounds i32, i32* %3784, i64 14, !dbg !1264
  %3785 = load i32, i32* %arrayidx1150.i4605, align 4, !dbg !1264
  %xor1151.i4606 = xor i32 %3783, %3785, !dbg !1264
  store i32 %xor1151.i4606, i32* %u.i3469, align 4, !dbg !1264
  %3786 = load i32, i32* %r.i3467, align 4, !dbg !1264
  %3787 = load i32*, i32** %s.i3470, align 8, !dbg !1264
  %arrayidx1152.i4607 = getelementptr inbounds i32, i32* %3787, i64 15, !dbg !1264
  %3788 = load i32, i32* %arrayidx1152.i4607, align 4, !dbg !1264
  %xor1153.i4608 = xor i32 %3786, %3788, !dbg !1264
  store i32 %xor1153.i4608, i32* %t.i3468, align 4, !dbg !1264
  %3789 = load i32, i32* %t.i3468, align 4, !dbg !718
  %3790 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3789) #5, !dbg !718, !srcloc !240
  store i32 %3790, i32* %ret1154.i3524, align 4, !dbg !718
  %3791 = load i32, i32* %ret1154.i3524, align 4, !dbg !718
  store i32 %3791, i32* %tmp1155.i3525, align 4, !dbg !718
  %3792 = load i32, i32* %tmp1155.i3525, align 4, !dbg !718
  store i32 %3792, i32* %t.i3468, align 4, !dbg !1264
  %3793 = load i32, i32* %u.i3469, align 4, !dbg !1264
  %shr1156.i4609 = lshr i32 %3793, 2, !dbg !1264
  %and1157.i4610 = and i32 %shr1156.i4609, 63, !dbg !1264
  %idxprom1158.i4611 = zext i32 %and1157.i4610 to i64, !dbg !1264
  %arrayidx1159.i4612 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i4611, !dbg !1264
  %3794 = load i32, i32* %arrayidx1159.i4612, align 4, !dbg !1264
  %3795 = load i32, i32* %u.i3469, align 4, !dbg !1264
  %shr1160.i4613 = lshr i32 %3795, 10, !dbg !1264
  %and1161.i4614 = and i32 %shr1160.i4613, 63, !dbg !1264
  %idxprom1162.i4615 = zext i32 %and1161.i4614 to i64, !dbg !1264
  %arrayidx1163.i4616 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i4615, !dbg !1264
  %3796 = load i32, i32* %arrayidx1163.i4616, align 4, !dbg !1264
  %xor1164.i4617 = xor i32 %3794, %3796, !dbg !1264
  %3797 = load i32, i32* %u.i3469, align 4, !dbg !1264
  %shr1165.i4618 = lshr i32 %3797, 18, !dbg !1264
  %and1166.i4619 = and i32 %shr1165.i4618, 63, !dbg !1264
  %idxprom1167.i4620 = zext i32 %and1166.i4619 to i64, !dbg !1264
  %arrayidx1168.i4621 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i4620, !dbg !1264
  %3798 = load i32, i32* %arrayidx1168.i4621, align 4, !dbg !1264
  %xor1169.i4622 = xor i32 %xor1164.i4617, %3798, !dbg !1264
  %3799 = load i32, i32* %u.i3469, align 4, !dbg !1264
  %shr1170.i4623 = lshr i32 %3799, 26, !dbg !1264
  %idxprom1172.i4624 = zext i32 %shr1170.i4623 to i64, !dbg !1264
  %arrayidx1173.i4625 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i4624, !dbg !1264
  %3800 = load i32, i32* %arrayidx1173.i4625, align 4, !dbg !1264
  %xor1174.i4626 = xor i32 %xor1169.i4622, %3800, !dbg !1264
  %3801 = load i32, i32* %t.i3468, align 4, !dbg !1264
  %shr1175.i4627 = lshr i32 %3801, 2, !dbg !1264
  %and1176.i4628 = and i32 %shr1175.i4627, 63, !dbg !1264
  %idxprom1177.i4629 = zext i32 %and1176.i4628 to i64, !dbg !1264
  %arrayidx1178.i4630 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i4629, !dbg !1264
  %3802 = load i32, i32* %arrayidx1178.i4630, align 4, !dbg !1264
  %xor1179.i4631 = xor i32 %xor1174.i4626, %3802, !dbg !1264
  %3803 = load i32, i32* %t.i3468, align 4, !dbg !1264
  %shr1180.i4632 = lshr i32 %3803, 10, !dbg !1264
  %and1181.i4633 = and i32 %shr1180.i4632, 63, !dbg !1264
  %idxprom1182.i4634 = zext i32 %and1181.i4633 to i64, !dbg !1264
  %arrayidx1183.i4635 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i4634, !dbg !1264
  %3804 = load i32, i32* %arrayidx1183.i4635, align 4, !dbg !1264
  %xor1184.i4636 = xor i32 %xor1179.i4631, %3804, !dbg !1264
  %3805 = load i32, i32* %t.i3468, align 4, !dbg !1264
  %shr1185.i4637 = lshr i32 %3805, 18, !dbg !1264
  %and1186.i4638 = and i32 %shr1185.i4637, 63, !dbg !1264
  %idxprom1187.i4639 = zext i32 %and1186.i4638 to i64, !dbg !1264
  %arrayidx1188.i4640 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i4639, !dbg !1264
  %3806 = load i32, i32* %arrayidx1188.i4640, align 4, !dbg !1264
  %xor1189.i4641 = xor i32 %xor1184.i4636, %3806, !dbg !1264
  %3807 = load i32, i32* %t.i3468, align 4, !dbg !1264
  %shr1190.i4642 = lshr i32 %3807, 26, !dbg !1264
  %idxprom1192.i4643 = zext i32 %shr1190.i4642 to i64, !dbg !1264
  %arrayidx1193.i4644 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i4643, !dbg !1264
  %3808 = load i32, i32* %arrayidx1193.i4644, align 4, !dbg !1264
  %xor1194.i4645 = xor i32 %xor1189.i4641, %3808, !dbg !1264
  %3809 = load i32, i32* %l.i3466, align 4, !dbg !1264
  %xor1195.i4646 = xor i32 %3809, %xor1194.i4645, !dbg !1264
  store i32 %xor1195.i4646, i32* %l.i3466, align 4, !dbg !1264
  %3810 = load i32, i32* %l.i3466, align 4, !dbg !1265
  %3811 = load i32*, i32** %s.i3470, align 8, !dbg !1265
  %arrayidx1196.i4647 = getelementptr inbounds i32, i32* %3811, i64 12, !dbg !1265
  %3812 = load i32, i32* %arrayidx1196.i4647, align 4, !dbg !1265
  %xor1197.i4648 = xor i32 %3810, %3812, !dbg !1265
  store i32 %xor1197.i4648, i32* %u.i3469, align 4, !dbg !1265
  %3813 = load i32, i32* %l.i3466, align 4, !dbg !1265
  %3814 = load i32*, i32** %s.i3470, align 8, !dbg !1265
  %arrayidx1198.i4649 = getelementptr inbounds i32, i32* %3814, i64 13, !dbg !1265
  %3815 = load i32, i32* %arrayidx1198.i4649, align 4, !dbg !1265
  %xor1199.i4650 = xor i32 %3813, %3815, !dbg !1265
  store i32 %xor1199.i4650, i32* %t.i3468, align 4, !dbg !1265
  %3816 = load i32, i32* %t.i3468, align 4, !dbg !719
  %3817 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3816) #5, !dbg !719, !srcloc !246
  store i32 %3817, i32* %ret1200.i3526, align 4, !dbg !719
  %3818 = load i32, i32* %ret1200.i3526, align 4, !dbg !719
  store i32 %3818, i32* %tmp1201.i3527, align 4, !dbg !719
  %3819 = load i32, i32* %tmp1201.i3527, align 4, !dbg !719
  store i32 %3819, i32* %t.i3468, align 4, !dbg !1265
  %3820 = load i32, i32* %u.i3469, align 4, !dbg !1265
  %shr1202.i4651 = lshr i32 %3820, 2, !dbg !1265
  %and1203.i4652 = and i32 %shr1202.i4651, 63, !dbg !1265
  %idxprom1204.i4653 = zext i32 %and1203.i4652 to i64, !dbg !1265
  %arrayidx1205.i4654 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i4653, !dbg !1265
  %3821 = load i32, i32* %arrayidx1205.i4654, align 4, !dbg !1265
  %3822 = load i32, i32* %u.i3469, align 4, !dbg !1265
  %shr1206.i4655 = lshr i32 %3822, 10, !dbg !1265
  %and1207.i4656 = and i32 %shr1206.i4655, 63, !dbg !1265
  %idxprom1208.i4657 = zext i32 %and1207.i4656 to i64, !dbg !1265
  %arrayidx1209.i4658 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i4657, !dbg !1265
  %3823 = load i32, i32* %arrayidx1209.i4658, align 4, !dbg !1265
  %xor1210.i4659 = xor i32 %3821, %3823, !dbg !1265
  %3824 = load i32, i32* %u.i3469, align 4, !dbg !1265
  %shr1211.i4660 = lshr i32 %3824, 18, !dbg !1265
  %and1212.i4661 = and i32 %shr1211.i4660, 63, !dbg !1265
  %idxprom1213.i4662 = zext i32 %and1212.i4661 to i64, !dbg !1265
  %arrayidx1214.i4663 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i4662, !dbg !1265
  %3825 = load i32, i32* %arrayidx1214.i4663, align 4, !dbg !1265
  %xor1215.i4664 = xor i32 %xor1210.i4659, %3825, !dbg !1265
  %3826 = load i32, i32* %u.i3469, align 4, !dbg !1265
  %shr1216.i4665 = lshr i32 %3826, 26, !dbg !1265
  %idxprom1218.i4666 = zext i32 %shr1216.i4665 to i64, !dbg !1265
  %arrayidx1219.i4667 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i4666, !dbg !1265
  %3827 = load i32, i32* %arrayidx1219.i4667, align 4, !dbg !1265
  %xor1220.i4668 = xor i32 %xor1215.i4664, %3827, !dbg !1265
  %3828 = load i32, i32* %t.i3468, align 4, !dbg !1265
  %shr1221.i4669 = lshr i32 %3828, 2, !dbg !1265
  %and1222.i4670 = and i32 %shr1221.i4669, 63, !dbg !1265
  %idxprom1223.i4671 = zext i32 %and1222.i4670 to i64, !dbg !1265
  %arrayidx1224.i4672 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i4671, !dbg !1265
  %3829 = load i32, i32* %arrayidx1224.i4672, align 4, !dbg !1265
  %xor1225.i4673 = xor i32 %xor1220.i4668, %3829, !dbg !1265
  %3830 = load i32, i32* %t.i3468, align 4, !dbg !1265
  %shr1226.i4674 = lshr i32 %3830, 10, !dbg !1265
  %and1227.i4675 = and i32 %shr1226.i4674, 63, !dbg !1265
  %idxprom1228.i4676 = zext i32 %and1227.i4675 to i64, !dbg !1265
  %arrayidx1229.i4677 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i4676, !dbg !1265
  %3831 = load i32, i32* %arrayidx1229.i4677, align 4, !dbg !1265
  %xor1230.i4678 = xor i32 %xor1225.i4673, %3831, !dbg !1265
  %3832 = load i32, i32* %t.i3468, align 4, !dbg !1265
  %shr1231.i4679 = lshr i32 %3832, 18, !dbg !1265
  %and1232.i4680 = and i32 %shr1231.i4679, 63, !dbg !1265
  %idxprom1233.i4681 = zext i32 %and1232.i4680 to i64, !dbg !1265
  %arrayidx1234.i4682 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i4681, !dbg !1265
  %3833 = load i32, i32* %arrayidx1234.i4682, align 4, !dbg !1265
  %xor1235.i4683 = xor i32 %xor1230.i4678, %3833, !dbg !1265
  %3834 = load i32, i32* %t.i3468, align 4, !dbg !1265
  %shr1236.i4684 = lshr i32 %3834, 26, !dbg !1265
  %idxprom1238.i4685 = zext i32 %shr1236.i4684 to i64, !dbg !1265
  %arrayidx1239.i4686 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i4685, !dbg !1265
  %3835 = load i32, i32* %arrayidx1239.i4686, align 4, !dbg !1265
  %xor1240.i4687 = xor i32 %xor1235.i4683, %3835, !dbg !1265
  %3836 = load i32, i32* %r.i3467, align 4, !dbg !1265
  %xor1241.i4688 = xor i32 %3836, %xor1240.i4687, !dbg !1265
  store i32 %xor1241.i4688, i32* %r.i3467, align 4, !dbg !1265
  %3837 = load i32, i32* %r.i3467, align 4, !dbg !1266
  %3838 = load i32*, i32** %s.i3470, align 8, !dbg !1266
  %arrayidx1242.i4689 = getelementptr inbounds i32, i32* %3838, i64 10, !dbg !1266
  %3839 = load i32, i32* %arrayidx1242.i4689, align 4, !dbg !1266
  %xor1243.i4690 = xor i32 %3837, %3839, !dbg !1266
  store i32 %xor1243.i4690, i32* %u.i3469, align 4, !dbg !1266
  %3840 = load i32, i32* %r.i3467, align 4, !dbg !1266
  %3841 = load i32*, i32** %s.i3470, align 8, !dbg !1266
  %arrayidx1244.i4691 = getelementptr inbounds i32, i32* %3841, i64 11, !dbg !1266
  %3842 = load i32, i32* %arrayidx1244.i4691, align 4, !dbg !1266
  %xor1245.i4692 = xor i32 %3840, %3842, !dbg !1266
  store i32 %xor1245.i4692, i32* %t.i3468, align 4, !dbg !1266
  %3843 = load i32, i32* %t.i3468, align 4, !dbg !720
  %3844 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3843) #5, !dbg !720, !srcloc !252
  store i32 %3844, i32* %ret1246.i3528, align 4, !dbg !720
  %3845 = load i32, i32* %ret1246.i3528, align 4, !dbg !720
  store i32 %3845, i32* %tmp1247.i3529, align 4, !dbg !720
  %3846 = load i32, i32* %tmp1247.i3529, align 4, !dbg !720
  store i32 %3846, i32* %t.i3468, align 4, !dbg !1266
  %3847 = load i32, i32* %u.i3469, align 4, !dbg !1266
  %shr1248.i4693 = lshr i32 %3847, 2, !dbg !1266
  %and1249.i4694 = and i32 %shr1248.i4693, 63, !dbg !1266
  %idxprom1250.i4695 = zext i32 %and1249.i4694 to i64, !dbg !1266
  %arrayidx1251.i4696 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i4695, !dbg !1266
  %3848 = load i32, i32* %arrayidx1251.i4696, align 4, !dbg !1266
  %3849 = load i32, i32* %u.i3469, align 4, !dbg !1266
  %shr1252.i4697 = lshr i32 %3849, 10, !dbg !1266
  %and1253.i4698 = and i32 %shr1252.i4697, 63, !dbg !1266
  %idxprom1254.i4699 = zext i32 %and1253.i4698 to i64, !dbg !1266
  %arrayidx1255.i4700 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i4699, !dbg !1266
  %3850 = load i32, i32* %arrayidx1255.i4700, align 4, !dbg !1266
  %xor1256.i4701 = xor i32 %3848, %3850, !dbg !1266
  %3851 = load i32, i32* %u.i3469, align 4, !dbg !1266
  %shr1257.i4702 = lshr i32 %3851, 18, !dbg !1266
  %and1258.i4703 = and i32 %shr1257.i4702, 63, !dbg !1266
  %idxprom1259.i4704 = zext i32 %and1258.i4703 to i64, !dbg !1266
  %arrayidx1260.i4705 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i4704, !dbg !1266
  %3852 = load i32, i32* %arrayidx1260.i4705, align 4, !dbg !1266
  %xor1261.i4706 = xor i32 %xor1256.i4701, %3852, !dbg !1266
  %3853 = load i32, i32* %u.i3469, align 4, !dbg !1266
  %shr1262.i4707 = lshr i32 %3853, 26, !dbg !1266
  %idxprom1264.i4708 = zext i32 %shr1262.i4707 to i64, !dbg !1266
  %arrayidx1265.i4709 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i4708, !dbg !1266
  %3854 = load i32, i32* %arrayidx1265.i4709, align 4, !dbg !1266
  %xor1266.i4710 = xor i32 %xor1261.i4706, %3854, !dbg !1266
  %3855 = load i32, i32* %t.i3468, align 4, !dbg !1266
  %shr1267.i4711 = lshr i32 %3855, 2, !dbg !1266
  %and1268.i4712 = and i32 %shr1267.i4711, 63, !dbg !1266
  %idxprom1269.i4713 = zext i32 %and1268.i4712 to i64, !dbg !1266
  %arrayidx1270.i4714 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i4713, !dbg !1266
  %3856 = load i32, i32* %arrayidx1270.i4714, align 4, !dbg !1266
  %xor1271.i4715 = xor i32 %xor1266.i4710, %3856, !dbg !1266
  %3857 = load i32, i32* %t.i3468, align 4, !dbg !1266
  %shr1272.i4716 = lshr i32 %3857, 10, !dbg !1266
  %and1273.i4717 = and i32 %shr1272.i4716, 63, !dbg !1266
  %idxprom1274.i4718 = zext i32 %and1273.i4717 to i64, !dbg !1266
  %arrayidx1275.i4719 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i4718, !dbg !1266
  %3858 = load i32, i32* %arrayidx1275.i4719, align 4, !dbg !1266
  %xor1276.i4720 = xor i32 %xor1271.i4715, %3858, !dbg !1266
  %3859 = load i32, i32* %t.i3468, align 4, !dbg !1266
  %shr1277.i4721 = lshr i32 %3859, 18, !dbg !1266
  %and1278.i4722 = and i32 %shr1277.i4721, 63, !dbg !1266
  %idxprom1279.i4723 = zext i32 %and1278.i4722 to i64, !dbg !1266
  %arrayidx1280.i4724 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i4723, !dbg !1266
  %3860 = load i32, i32* %arrayidx1280.i4724, align 4, !dbg !1266
  %xor1281.i4725 = xor i32 %xor1276.i4720, %3860, !dbg !1266
  %3861 = load i32, i32* %t.i3468, align 4, !dbg !1266
  %shr1282.i4726 = lshr i32 %3861, 26, !dbg !1266
  %idxprom1284.i4727 = zext i32 %shr1282.i4726 to i64, !dbg !1266
  %arrayidx1285.i4728 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i4727, !dbg !1266
  %3862 = load i32, i32* %arrayidx1285.i4728, align 4, !dbg !1266
  %xor1286.i4729 = xor i32 %xor1281.i4725, %3862, !dbg !1266
  %3863 = load i32, i32* %l.i3466, align 4, !dbg !1266
  %xor1287.i4730 = xor i32 %3863, %xor1286.i4729, !dbg !1266
  store i32 %xor1287.i4730, i32* %l.i3466, align 4, !dbg !1266
  %3864 = load i32, i32* %l.i3466, align 4, !dbg !1267
  %3865 = load i32*, i32** %s.i3470, align 8, !dbg !1267
  %arrayidx1288.i4731 = getelementptr inbounds i32, i32* %3865, i64 8, !dbg !1267
  %3866 = load i32, i32* %arrayidx1288.i4731, align 4, !dbg !1267
  %xor1289.i4732 = xor i32 %3864, %3866, !dbg !1267
  store i32 %xor1289.i4732, i32* %u.i3469, align 4, !dbg !1267
  %3867 = load i32, i32* %l.i3466, align 4, !dbg !1267
  %3868 = load i32*, i32** %s.i3470, align 8, !dbg !1267
  %arrayidx1290.i4733 = getelementptr inbounds i32, i32* %3868, i64 9, !dbg !1267
  %3869 = load i32, i32* %arrayidx1290.i4733, align 4, !dbg !1267
  %xor1291.i4734 = xor i32 %3867, %3869, !dbg !1267
  store i32 %xor1291.i4734, i32* %t.i3468, align 4, !dbg !1267
  %3870 = load i32, i32* %t.i3468, align 4, !dbg !721
  %3871 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3870) #5, !dbg !721, !srcloc !258
  store i32 %3871, i32* %ret1292.i3530, align 4, !dbg !721
  %3872 = load i32, i32* %ret1292.i3530, align 4, !dbg !721
  store i32 %3872, i32* %tmp1293.i3531, align 4, !dbg !721
  %3873 = load i32, i32* %tmp1293.i3531, align 4, !dbg !721
  store i32 %3873, i32* %t.i3468, align 4, !dbg !1267
  %3874 = load i32, i32* %u.i3469, align 4, !dbg !1267
  %shr1294.i4735 = lshr i32 %3874, 2, !dbg !1267
  %and1295.i4736 = and i32 %shr1294.i4735, 63, !dbg !1267
  %idxprom1296.i4737 = zext i32 %and1295.i4736 to i64, !dbg !1267
  %arrayidx1297.i4738 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i4737, !dbg !1267
  %3875 = load i32, i32* %arrayidx1297.i4738, align 4, !dbg !1267
  %3876 = load i32, i32* %u.i3469, align 4, !dbg !1267
  %shr1298.i4739 = lshr i32 %3876, 10, !dbg !1267
  %and1299.i4740 = and i32 %shr1298.i4739, 63, !dbg !1267
  %idxprom1300.i4741 = zext i32 %and1299.i4740 to i64, !dbg !1267
  %arrayidx1301.i4742 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i4741, !dbg !1267
  %3877 = load i32, i32* %arrayidx1301.i4742, align 4, !dbg !1267
  %xor1302.i4743 = xor i32 %3875, %3877, !dbg !1267
  %3878 = load i32, i32* %u.i3469, align 4, !dbg !1267
  %shr1303.i4744 = lshr i32 %3878, 18, !dbg !1267
  %and1304.i4745 = and i32 %shr1303.i4744, 63, !dbg !1267
  %idxprom1305.i4746 = zext i32 %and1304.i4745 to i64, !dbg !1267
  %arrayidx1306.i4747 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i4746, !dbg !1267
  %3879 = load i32, i32* %arrayidx1306.i4747, align 4, !dbg !1267
  %xor1307.i4748 = xor i32 %xor1302.i4743, %3879, !dbg !1267
  %3880 = load i32, i32* %u.i3469, align 4, !dbg !1267
  %shr1308.i4749 = lshr i32 %3880, 26, !dbg !1267
  %idxprom1310.i4750 = zext i32 %shr1308.i4749 to i64, !dbg !1267
  %arrayidx1311.i4751 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i4750, !dbg !1267
  %3881 = load i32, i32* %arrayidx1311.i4751, align 4, !dbg !1267
  %xor1312.i4752 = xor i32 %xor1307.i4748, %3881, !dbg !1267
  %3882 = load i32, i32* %t.i3468, align 4, !dbg !1267
  %shr1313.i4753 = lshr i32 %3882, 2, !dbg !1267
  %and1314.i4754 = and i32 %shr1313.i4753, 63, !dbg !1267
  %idxprom1315.i4755 = zext i32 %and1314.i4754 to i64, !dbg !1267
  %arrayidx1316.i4756 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i4755, !dbg !1267
  %3883 = load i32, i32* %arrayidx1316.i4756, align 4, !dbg !1267
  %xor1317.i4757 = xor i32 %xor1312.i4752, %3883, !dbg !1267
  %3884 = load i32, i32* %t.i3468, align 4, !dbg !1267
  %shr1318.i4758 = lshr i32 %3884, 10, !dbg !1267
  %and1319.i4759 = and i32 %shr1318.i4758, 63, !dbg !1267
  %idxprom1320.i4760 = zext i32 %and1319.i4759 to i64, !dbg !1267
  %arrayidx1321.i4761 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i4760, !dbg !1267
  %3885 = load i32, i32* %arrayidx1321.i4761, align 4, !dbg !1267
  %xor1322.i4762 = xor i32 %xor1317.i4757, %3885, !dbg !1267
  %3886 = load i32, i32* %t.i3468, align 4, !dbg !1267
  %shr1323.i4763 = lshr i32 %3886, 18, !dbg !1267
  %and1324.i4764 = and i32 %shr1323.i4763, 63, !dbg !1267
  %idxprom1325.i4765 = zext i32 %and1324.i4764 to i64, !dbg !1267
  %arrayidx1326.i4766 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i4765, !dbg !1267
  %3887 = load i32, i32* %arrayidx1326.i4766, align 4, !dbg !1267
  %xor1327.i4767 = xor i32 %xor1322.i4762, %3887, !dbg !1267
  %3888 = load i32, i32* %t.i3468, align 4, !dbg !1267
  %shr1328.i4768 = lshr i32 %3888, 26, !dbg !1267
  %idxprom1330.i4769 = zext i32 %shr1328.i4768 to i64, !dbg !1267
  %arrayidx1331.i4770 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i4769, !dbg !1267
  %3889 = load i32, i32* %arrayidx1331.i4770, align 4, !dbg !1267
  %xor1332.i4771 = xor i32 %xor1327.i4767, %3889, !dbg !1267
  %3890 = load i32, i32* %r.i3467, align 4, !dbg !1267
  %xor1333.i4772 = xor i32 %3890, %xor1332.i4771, !dbg !1267
  store i32 %xor1333.i4772, i32* %r.i3467, align 4, !dbg !1267
  %3891 = load i32, i32* %r.i3467, align 4, !dbg !1268
  %3892 = load i32*, i32** %s.i3470, align 8, !dbg !1268
  %arrayidx1334.i4773 = getelementptr inbounds i32, i32* %3892, i64 6, !dbg !1268
  %3893 = load i32, i32* %arrayidx1334.i4773, align 4, !dbg !1268
  %xor1335.i4774 = xor i32 %3891, %3893, !dbg !1268
  store i32 %xor1335.i4774, i32* %u.i3469, align 4, !dbg !1268
  %3894 = load i32, i32* %r.i3467, align 4, !dbg !1268
  %3895 = load i32*, i32** %s.i3470, align 8, !dbg !1268
  %arrayidx1336.i4775 = getelementptr inbounds i32, i32* %3895, i64 7, !dbg !1268
  %3896 = load i32, i32* %arrayidx1336.i4775, align 4, !dbg !1268
  %xor1337.i4776 = xor i32 %3894, %3896, !dbg !1268
  store i32 %xor1337.i4776, i32* %t.i3468, align 4, !dbg !1268
  %3897 = load i32, i32* %t.i3468, align 4, !dbg !722
  %3898 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3897) #5, !dbg !722, !srcloc !264
  store i32 %3898, i32* %ret1338.i3532, align 4, !dbg !722
  %3899 = load i32, i32* %ret1338.i3532, align 4, !dbg !722
  store i32 %3899, i32* %tmp1339.i3533, align 4, !dbg !722
  %3900 = load i32, i32* %tmp1339.i3533, align 4, !dbg !722
  store i32 %3900, i32* %t.i3468, align 4, !dbg !1268
  %3901 = load i32, i32* %u.i3469, align 4, !dbg !1268
  %shr1340.i4777 = lshr i32 %3901, 2, !dbg !1268
  %and1341.i4778 = and i32 %shr1340.i4777, 63, !dbg !1268
  %idxprom1342.i4779 = zext i32 %and1341.i4778 to i64, !dbg !1268
  %arrayidx1343.i4780 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i4779, !dbg !1268
  %3902 = load i32, i32* %arrayidx1343.i4780, align 4, !dbg !1268
  %3903 = load i32, i32* %u.i3469, align 4, !dbg !1268
  %shr1344.i4781 = lshr i32 %3903, 10, !dbg !1268
  %and1345.i4782 = and i32 %shr1344.i4781, 63, !dbg !1268
  %idxprom1346.i4783 = zext i32 %and1345.i4782 to i64, !dbg !1268
  %arrayidx1347.i4784 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i4783, !dbg !1268
  %3904 = load i32, i32* %arrayidx1347.i4784, align 4, !dbg !1268
  %xor1348.i4785 = xor i32 %3902, %3904, !dbg !1268
  %3905 = load i32, i32* %u.i3469, align 4, !dbg !1268
  %shr1349.i4786 = lshr i32 %3905, 18, !dbg !1268
  %and1350.i4787 = and i32 %shr1349.i4786, 63, !dbg !1268
  %idxprom1351.i4788 = zext i32 %and1350.i4787 to i64, !dbg !1268
  %arrayidx1352.i4789 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i4788, !dbg !1268
  %3906 = load i32, i32* %arrayidx1352.i4789, align 4, !dbg !1268
  %xor1353.i4790 = xor i32 %xor1348.i4785, %3906, !dbg !1268
  %3907 = load i32, i32* %u.i3469, align 4, !dbg !1268
  %shr1354.i4791 = lshr i32 %3907, 26, !dbg !1268
  %idxprom1356.i4792 = zext i32 %shr1354.i4791 to i64, !dbg !1268
  %arrayidx1357.i4793 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i4792, !dbg !1268
  %3908 = load i32, i32* %arrayidx1357.i4793, align 4, !dbg !1268
  %xor1358.i4794 = xor i32 %xor1353.i4790, %3908, !dbg !1268
  %3909 = load i32, i32* %t.i3468, align 4, !dbg !1268
  %shr1359.i4795 = lshr i32 %3909, 2, !dbg !1268
  %and1360.i4796 = and i32 %shr1359.i4795, 63, !dbg !1268
  %idxprom1361.i4797 = zext i32 %and1360.i4796 to i64, !dbg !1268
  %arrayidx1362.i4798 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i4797, !dbg !1268
  %3910 = load i32, i32* %arrayidx1362.i4798, align 4, !dbg !1268
  %xor1363.i4799 = xor i32 %xor1358.i4794, %3910, !dbg !1268
  %3911 = load i32, i32* %t.i3468, align 4, !dbg !1268
  %shr1364.i4800 = lshr i32 %3911, 10, !dbg !1268
  %and1365.i4801 = and i32 %shr1364.i4800, 63, !dbg !1268
  %idxprom1366.i4802 = zext i32 %and1365.i4801 to i64, !dbg !1268
  %arrayidx1367.i4803 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i4802, !dbg !1268
  %3912 = load i32, i32* %arrayidx1367.i4803, align 4, !dbg !1268
  %xor1368.i4804 = xor i32 %xor1363.i4799, %3912, !dbg !1268
  %3913 = load i32, i32* %t.i3468, align 4, !dbg !1268
  %shr1369.i4805 = lshr i32 %3913, 18, !dbg !1268
  %and1370.i4806 = and i32 %shr1369.i4805, 63, !dbg !1268
  %idxprom1371.i4807 = zext i32 %and1370.i4806 to i64, !dbg !1268
  %arrayidx1372.i4808 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i4807, !dbg !1268
  %3914 = load i32, i32* %arrayidx1372.i4808, align 4, !dbg !1268
  %xor1373.i4809 = xor i32 %xor1368.i4804, %3914, !dbg !1268
  %3915 = load i32, i32* %t.i3468, align 4, !dbg !1268
  %shr1374.i4810 = lshr i32 %3915, 26, !dbg !1268
  %idxprom1376.i4811 = zext i32 %shr1374.i4810 to i64, !dbg !1268
  %arrayidx1377.i4812 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i4811, !dbg !1268
  %3916 = load i32, i32* %arrayidx1377.i4812, align 4, !dbg !1268
  %xor1378.i4813 = xor i32 %xor1373.i4809, %3916, !dbg !1268
  %3917 = load i32, i32* %l.i3466, align 4, !dbg !1268
  %xor1379.i4814 = xor i32 %3917, %xor1378.i4813, !dbg !1268
  store i32 %xor1379.i4814, i32* %l.i3466, align 4, !dbg !1268
  %3918 = load i32, i32* %l.i3466, align 4, !dbg !1269
  %3919 = load i32*, i32** %s.i3470, align 8, !dbg !1269
  %arrayidx1380.i4815 = getelementptr inbounds i32, i32* %3919, i64 4, !dbg !1269
  %3920 = load i32, i32* %arrayidx1380.i4815, align 4, !dbg !1269
  %xor1381.i4816 = xor i32 %3918, %3920, !dbg !1269
  store i32 %xor1381.i4816, i32* %u.i3469, align 4, !dbg !1269
  %3921 = load i32, i32* %l.i3466, align 4, !dbg !1269
  %3922 = load i32*, i32** %s.i3470, align 8, !dbg !1269
  %arrayidx1382.i4817 = getelementptr inbounds i32, i32* %3922, i64 5, !dbg !1269
  %3923 = load i32, i32* %arrayidx1382.i4817, align 4, !dbg !1269
  %xor1383.i4818 = xor i32 %3921, %3923, !dbg !1269
  store i32 %xor1383.i4818, i32* %t.i3468, align 4, !dbg !1269
  %3924 = load i32, i32* %t.i3468, align 4, !dbg !723
  %3925 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3924) #5, !dbg !723, !srcloc !270
  store i32 %3925, i32* %ret1384.i3534, align 4, !dbg !723
  %3926 = load i32, i32* %ret1384.i3534, align 4, !dbg !723
  store i32 %3926, i32* %tmp1385.i3535, align 4, !dbg !723
  %3927 = load i32, i32* %tmp1385.i3535, align 4, !dbg !723
  store i32 %3927, i32* %t.i3468, align 4, !dbg !1269
  %3928 = load i32, i32* %u.i3469, align 4, !dbg !1269
  %shr1386.i4819 = lshr i32 %3928, 2, !dbg !1269
  %and1387.i4820 = and i32 %shr1386.i4819, 63, !dbg !1269
  %idxprom1388.i4821 = zext i32 %and1387.i4820 to i64, !dbg !1269
  %arrayidx1389.i4822 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i4821, !dbg !1269
  %3929 = load i32, i32* %arrayidx1389.i4822, align 4, !dbg !1269
  %3930 = load i32, i32* %u.i3469, align 4, !dbg !1269
  %shr1390.i4823 = lshr i32 %3930, 10, !dbg !1269
  %and1391.i4824 = and i32 %shr1390.i4823, 63, !dbg !1269
  %idxprom1392.i4825 = zext i32 %and1391.i4824 to i64, !dbg !1269
  %arrayidx1393.i4826 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i4825, !dbg !1269
  %3931 = load i32, i32* %arrayidx1393.i4826, align 4, !dbg !1269
  %xor1394.i4827 = xor i32 %3929, %3931, !dbg !1269
  %3932 = load i32, i32* %u.i3469, align 4, !dbg !1269
  %shr1395.i4828 = lshr i32 %3932, 18, !dbg !1269
  %and1396.i4829 = and i32 %shr1395.i4828, 63, !dbg !1269
  %idxprom1397.i4830 = zext i32 %and1396.i4829 to i64, !dbg !1269
  %arrayidx1398.i4831 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i4830, !dbg !1269
  %3933 = load i32, i32* %arrayidx1398.i4831, align 4, !dbg !1269
  %xor1399.i4832 = xor i32 %xor1394.i4827, %3933, !dbg !1269
  %3934 = load i32, i32* %u.i3469, align 4, !dbg !1269
  %shr1400.i4833 = lshr i32 %3934, 26, !dbg !1269
  %idxprom1402.i4834 = zext i32 %shr1400.i4833 to i64, !dbg !1269
  %arrayidx1403.i4835 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i4834, !dbg !1269
  %3935 = load i32, i32* %arrayidx1403.i4835, align 4, !dbg !1269
  %xor1404.i4836 = xor i32 %xor1399.i4832, %3935, !dbg !1269
  %3936 = load i32, i32* %t.i3468, align 4, !dbg !1269
  %shr1405.i4837 = lshr i32 %3936, 2, !dbg !1269
  %and1406.i4838 = and i32 %shr1405.i4837, 63, !dbg !1269
  %idxprom1407.i4839 = zext i32 %and1406.i4838 to i64, !dbg !1269
  %arrayidx1408.i4840 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i4839, !dbg !1269
  %3937 = load i32, i32* %arrayidx1408.i4840, align 4, !dbg !1269
  %xor1409.i4841 = xor i32 %xor1404.i4836, %3937, !dbg !1269
  %3938 = load i32, i32* %t.i3468, align 4, !dbg !1269
  %shr1410.i4842 = lshr i32 %3938, 10, !dbg !1269
  %and1411.i4843 = and i32 %shr1410.i4842, 63, !dbg !1269
  %idxprom1412.i4844 = zext i32 %and1411.i4843 to i64, !dbg !1269
  %arrayidx1413.i4845 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i4844, !dbg !1269
  %3939 = load i32, i32* %arrayidx1413.i4845, align 4, !dbg !1269
  %xor1414.i4846 = xor i32 %xor1409.i4841, %3939, !dbg !1269
  %3940 = load i32, i32* %t.i3468, align 4, !dbg !1269
  %shr1415.i4847 = lshr i32 %3940, 18, !dbg !1269
  %and1416.i4848 = and i32 %shr1415.i4847, 63, !dbg !1269
  %idxprom1417.i4849 = zext i32 %and1416.i4848 to i64, !dbg !1269
  %arrayidx1418.i4850 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i4849, !dbg !1269
  %3941 = load i32, i32* %arrayidx1418.i4850, align 4, !dbg !1269
  %xor1419.i4851 = xor i32 %xor1414.i4846, %3941, !dbg !1269
  %3942 = load i32, i32* %t.i3468, align 4, !dbg !1269
  %shr1420.i4852 = lshr i32 %3942, 26, !dbg !1269
  %idxprom1422.i4853 = zext i32 %shr1420.i4852 to i64, !dbg !1269
  %arrayidx1423.i4854 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i4853, !dbg !1269
  %3943 = load i32, i32* %arrayidx1423.i4854, align 4, !dbg !1269
  %xor1424.i4855 = xor i32 %xor1419.i4851, %3943, !dbg !1269
  %3944 = load i32, i32* %r.i3467, align 4, !dbg !1269
  %xor1425.i4856 = xor i32 %3944, %xor1424.i4855, !dbg !1269
  store i32 %xor1425.i4856, i32* %r.i3467, align 4, !dbg !1269
  %3945 = load i32, i32* %r.i3467, align 4, !dbg !1270
  %3946 = load i32*, i32** %s.i3470, align 8, !dbg !1270
  %arrayidx1426.i4857 = getelementptr inbounds i32, i32* %3946, i64 2, !dbg !1270
  %3947 = load i32, i32* %arrayidx1426.i4857, align 4, !dbg !1270
  %xor1427.i4858 = xor i32 %3945, %3947, !dbg !1270
  store i32 %xor1427.i4858, i32* %u.i3469, align 4, !dbg !1270
  %3948 = load i32, i32* %r.i3467, align 4, !dbg !1270
  %3949 = load i32*, i32** %s.i3470, align 8, !dbg !1270
  %arrayidx1428.i4859 = getelementptr inbounds i32, i32* %3949, i64 3, !dbg !1270
  %3950 = load i32, i32* %arrayidx1428.i4859, align 4, !dbg !1270
  %xor1429.i4860 = xor i32 %3948, %3950, !dbg !1270
  store i32 %xor1429.i4860, i32* %t.i3468, align 4, !dbg !1270
  %3951 = load i32, i32* %t.i3468, align 4, !dbg !724
  %3952 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3951) #5, !dbg !724, !srcloc !276
  store i32 %3952, i32* %ret1430.i3536, align 4, !dbg !724
  %3953 = load i32, i32* %ret1430.i3536, align 4, !dbg !724
  store i32 %3953, i32* %tmp1431.i3537, align 4, !dbg !724
  %3954 = load i32, i32* %tmp1431.i3537, align 4, !dbg !724
  store i32 %3954, i32* %t.i3468, align 4, !dbg !1270
  %3955 = load i32, i32* %u.i3469, align 4, !dbg !1270
  %shr1432.i4861 = lshr i32 %3955, 2, !dbg !1270
  %and1433.i4862 = and i32 %shr1432.i4861, 63, !dbg !1270
  %idxprom1434.i4863 = zext i32 %and1433.i4862 to i64, !dbg !1270
  %arrayidx1435.i4864 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i4863, !dbg !1270
  %3956 = load i32, i32* %arrayidx1435.i4864, align 4, !dbg !1270
  %3957 = load i32, i32* %u.i3469, align 4, !dbg !1270
  %shr1436.i4865 = lshr i32 %3957, 10, !dbg !1270
  %and1437.i4866 = and i32 %shr1436.i4865, 63, !dbg !1270
  %idxprom1438.i4867 = zext i32 %and1437.i4866 to i64, !dbg !1270
  %arrayidx1439.i4868 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i4867, !dbg !1270
  %3958 = load i32, i32* %arrayidx1439.i4868, align 4, !dbg !1270
  %xor1440.i4869 = xor i32 %3956, %3958, !dbg !1270
  %3959 = load i32, i32* %u.i3469, align 4, !dbg !1270
  %shr1441.i4870 = lshr i32 %3959, 18, !dbg !1270
  %and1442.i4871 = and i32 %shr1441.i4870, 63, !dbg !1270
  %idxprom1443.i4872 = zext i32 %and1442.i4871 to i64, !dbg !1270
  %arrayidx1444.i4873 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i4872, !dbg !1270
  %3960 = load i32, i32* %arrayidx1444.i4873, align 4, !dbg !1270
  %xor1445.i4874 = xor i32 %xor1440.i4869, %3960, !dbg !1270
  %3961 = load i32, i32* %u.i3469, align 4, !dbg !1270
  %shr1446.i4875 = lshr i32 %3961, 26, !dbg !1270
  %idxprom1448.i4876 = zext i32 %shr1446.i4875 to i64, !dbg !1270
  %arrayidx1449.i4877 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i4876, !dbg !1270
  %3962 = load i32, i32* %arrayidx1449.i4877, align 4, !dbg !1270
  %xor1450.i4878 = xor i32 %xor1445.i4874, %3962, !dbg !1270
  %3963 = load i32, i32* %t.i3468, align 4, !dbg !1270
  %shr1451.i4879 = lshr i32 %3963, 2, !dbg !1270
  %and1452.i4880 = and i32 %shr1451.i4879, 63, !dbg !1270
  %idxprom1453.i4881 = zext i32 %and1452.i4880 to i64, !dbg !1270
  %arrayidx1454.i4882 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i4881, !dbg !1270
  %3964 = load i32, i32* %arrayidx1454.i4882, align 4, !dbg !1270
  %xor1455.i4883 = xor i32 %xor1450.i4878, %3964, !dbg !1270
  %3965 = load i32, i32* %t.i3468, align 4, !dbg !1270
  %shr1456.i4884 = lshr i32 %3965, 10, !dbg !1270
  %and1457.i4885 = and i32 %shr1456.i4884, 63, !dbg !1270
  %idxprom1458.i4886 = zext i32 %and1457.i4885 to i64, !dbg !1270
  %arrayidx1459.i4887 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i4886, !dbg !1270
  %3966 = load i32, i32* %arrayidx1459.i4887, align 4, !dbg !1270
  %xor1460.i4888 = xor i32 %xor1455.i4883, %3966, !dbg !1270
  %3967 = load i32, i32* %t.i3468, align 4, !dbg !1270
  %shr1461.i4889 = lshr i32 %3967, 18, !dbg !1270
  %and1462.i4890 = and i32 %shr1461.i4889, 63, !dbg !1270
  %idxprom1463.i4891 = zext i32 %and1462.i4890 to i64, !dbg !1270
  %arrayidx1464.i4892 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i4891, !dbg !1270
  %3968 = load i32, i32* %arrayidx1464.i4892, align 4, !dbg !1270
  %xor1465.i4893 = xor i32 %xor1460.i4888, %3968, !dbg !1270
  %3969 = load i32, i32* %t.i3468, align 4, !dbg !1270
  %shr1466.i4894 = lshr i32 %3969, 26, !dbg !1270
  %idxprom1468.i4895 = zext i32 %shr1466.i4894 to i64, !dbg !1270
  %arrayidx1469.i4896 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i4895, !dbg !1270
  %3970 = load i32, i32* %arrayidx1469.i4896, align 4, !dbg !1270
  %xor1470.i4897 = xor i32 %xor1465.i4893, %3970, !dbg !1270
  %3971 = load i32, i32* %l.i3466, align 4, !dbg !1270
  %xor1471.i4898 = xor i32 %3971, %xor1470.i4897, !dbg !1270
  store i32 %xor1471.i4898, i32* %l.i3466, align 4, !dbg !1270
  %3972 = load i32, i32* %l.i3466, align 4, !dbg !1271
  %3973 = load i32*, i32** %s.i3470, align 8, !dbg !1271
  %3974 = load i32, i32* %3973, align 4, !dbg !1271
  %xor1473.i4899 = xor i32 %3972, %3974, !dbg !1271
  store i32 %xor1473.i4899, i32* %u.i3469, align 4, !dbg !1271
  %3975 = load i32, i32* %l.i3466, align 4, !dbg !1271
  %3976 = load i32*, i32** %s.i3470, align 8, !dbg !1271
  %arrayidx1474.i4900 = getelementptr inbounds i32, i32* %3976, i64 1, !dbg !1271
  %3977 = load i32, i32* %arrayidx1474.i4900, align 4, !dbg !1271
  %xor1475.i4901 = xor i32 %3975, %3977, !dbg !1271
  store i32 %xor1475.i4901, i32* %t.i3468, align 4, !dbg !1271
  %3978 = load i32, i32* %t.i3468, align 4, !dbg !725
  %3979 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %3978) #5, !dbg !725, !srcloc !282
  store i32 %3979, i32* %ret1476.i3538, align 4, !dbg !725
  %3980 = load i32, i32* %ret1476.i3538, align 4, !dbg !725
  store i32 %3980, i32* %tmp1477.i3539, align 4, !dbg !725
  %3981 = load i32, i32* %tmp1477.i3539, align 4, !dbg !725
  store i32 %3981, i32* %t.i3468, align 4, !dbg !1271
  %3982 = load i32, i32* %u.i3469, align 4, !dbg !1271
  %shr1478.i4902 = lshr i32 %3982, 2, !dbg !1271
  %and1479.i4903 = and i32 %shr1478.i4902, 63, !dbg !1271
  %idxprom1480.i4904 = zext i32 %and1479.i4903 to i64, !dbg !1271
  %arrayidx1481.i4905 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i4904, !dbg !1271
  %3983 = load i32, i32* %arrayidx1481.i4905, align 4, !dbg !1271
  %3984 = load i32, i32* %u.i3469, align 4, !dbg !1271
  %shr1482.i4906 = lshr i32 %3984, 10, !dbg !1271
  %and1483.i4907 = and i32 %shr1482.i4906, 63, !dbg !1271
  %idxprom1484.i4908 = zext i32 %and1483.i4907 to i64, !dbg !1271
  %arrayidx1485.i4909 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i4908, !dbg !1271
  %3985 = load i32, i32* %arrayidx1485.i4909, align 4, !dbg !1271
  %xor1486.i4910 = xor i32 %3983, %3985, !dbg !1271
  %3986 = load i32, i32* %u.i3469, align 4, !dbg !1271
  %shr1487.i4911 = lshr i32 %3986, 18, !dbg !1271
  %and1488.i4912 = and i32 %shr1487.i4911, 63, !dbg !1271
  %idxprom1489.i4913 = zext i32 %and1488.i4912 to i64, !dbg !1271
  %arrayidx1490.i4914 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i4913, !dbg !1271
  %3987 = load i32, i32* %arrayidx1490.i4914, align 4, !dbg !1271
  %xor1491.i4915 = xor i32 %xor1486.i4910, %3987, !dbg !1271
  %3988 = load i32, i32* %u.i3469, align 4, !dbg !1271
  %shr1492.i4916 = lshr i32 %3988, 26, !dbg !1271
  %idxprom1494.i4917 = zext i32 %shr1492.i4916 to i64, !dbg !1271
  %arrayidx1495.i4918 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i4917, !dbg !1271
  %3989 = load i32, i32* %arrayidx1495.i4918, align 4, !dbg !1271
  %xor1496.i4919 = xor i32 %xor1491.i4915, %3989, !dbg !1271
  %3990 = load i32, i32* %t.i3468, align 4, !dbg !1271
  %shr1497.i4920 = lshr i32 %3990, 2, !dbg !1271
  %and1498.i4921 = and i32 %shr1497.i4920, 63, !dbg !1271
  %idxprom1499.i4922 = zext i32 %and1498.i4921 to i64, !dbg !1271
  %arrayidx1500.i4923 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i4922, !dbg !1271
  %3991 = load i32, i32* %arrayidx1500.i4923, align 4, !dbg !1271
  %xor1501.i4924 = xor i32 %xor1496.i4919, %3991, !dbg !1271
  %3992 = load i32, i32* %t.i3468, align 4, !dbg !1271
  %shr1502.i4925 = lshr i32 %3992, 10, !dbg !1271
  %and1503.i4926 = and i32 %shr1502.i4925, 63, !dbg !1271
  %idxprom1504.i4927 = zext i32 %and1503.i4926 to i64, !dbg !1271
  %arrayidx1505.i4928 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i4927, !dbg !1271
  %3993 = load i32, i32* %arrayidx1505.i4928, align 4, !dbg !1271
  %xor1506.i4929 = xor i32 %xor1501.i4924, %3993, !dbg !1271
  %3994 = load i32, i32* %t.i3468, align 4, !dbg !1271
  %shr1507.i4930 = lshr i32 %3994, 18, !dbg !1271
  %and1508.i4931 = and i32 %shr1507.i4930, 63, !dbg !1271
  %idxprom1509.i4932 = zext i32 %and1508.i4931 to i64, !dbg !1271
  %arrayidx1510.i4933 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i4932, !dbg !1271
  %3995 = load i32, i32* %arrayidx1510.i4933, align 4, !dbg !1271
  %xor1511.i4934 = xor i32 %xor1506.i4929, %3995, !dbg !1271
  %3996 = load i32, i32* %t.i3468, align 4, !dbg !1271
  %shr1512.i4935 = lshr i32 %3996, 26, !dbg !1271
  %idxprom1514.i4936 = zext i32 %shr1512.i4935 to i64, !dbg !1271
  %arrayidx1515.i4937 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i4936, !dbg !1271
  %3997 = load i32, i32* %arrayidx1515.i4937, align 4, !dbg !1271
  %xor1516.i4938 = xor i32 %xor1511.i4934, %3997, !dbg !1271
  %3998 = load i32, i32* %r.i3467, align 4, !dbg !1271
  %xor1517.i4939 = xor i32 %3998, %xor1516.i4938, !dbg !1271
  store i32 %xor1517.i4939, i32* %r.i3467, align 4, !dbg !1271
  br label %DES_encrypt1.exit4988

DES_encrypt1.exit4988:                            ; preds = %if.then.i4268, %if.else.i4940
  %3999 = load i32, i32* %l.i3466, align 4, !dbg !726
  %4000 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %3999) #5, !dbg !726, !srcloc !286
  store i32 %4000, i32* %ret1518.i3540, align 4, !dbg !726
  %4001 = load i32, i32* %ret1518.i3540, align 4, !dbg !726
  store i32 %4001, i32* %tmp1519.i3541, align 4, !dbg !726
  %4002 = load i32, i32* %tmp1519.i3541, align 4, !dbg !726
  %conv1520.i4941 = zext i32 %4002 to i64, !dbg !1272
  %and1521.i4942 = and i64 %conv1520.i4941, 4294967295, !dbg !1273
  %conv1522.i4943 = trunc i64 %and1521.i4942 to i32, !dbg !1272
  store i32 %conv1522.i4943, i32* %l.i3466, align 4, !dbg !1274
  %4003 = load i32, i32* %r.i3467, align 4, !dbg !727
  %4004 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %4003) #5, !dbg !727, !srcloc !293
  store i32 %4004, i32* %ret1523.i3542, align 4, !dbg !727
  %4005 = load i32, i32* %ret1523.i3542, align 4, !dbg !727
  store i32 %4005, i32* %tmp1524.i3543, align 4, !dbg !727
  %4006 = load i32, i32* %tmp1524.i3543, align 4, !dbg !727
  %conv1525.i4944 = zext i32 %4006 to i64, !dbg !1275
  %and1526.i4945 = and i64 %conv1525.i4944, 4294967295, !dbg !1276
  %conv1527.i4946 = trunc i64 %and1526.i4945 to i32, !dbg !1275
  store i32 %conv1527.i4946, i32* %r.i3467, align 4, !dbg !1277
  %4007 = load i32, i32* %r.i3467, align 4, !dbg !728
  %shr1529.i4947 = lshr i32 %4007, 1, !dbg !728
  %4008 = load i32, i32* %l.i3466, align 4, !dbg !728
  %xor1530.i4948 = xor i32 %shr1529.i4947, %4008, !dbg !728
  %conv1531.i4949 = zext i32 %xor1530.i4948 to i64, !dbg !728
  %and1532.i4950 = and i64 %conv1531.i4949, 1431655765, !dbg !728
  %conv1533.i4951 = trunc i64 %and1532.i4950 to i32, !dbg !728
  store i32 %conv1533.i4951, i32* %tt1528.i3544, align 4, !dbg !728
  %4009 = load i32, i32* %tt1528.i3544, align 4, !dbg !728
  %4010 = load i32, i32* %l.i3466, align 4, !dbg !728
  %xor1534.i4952 = xor i32 %4010, %4009, !dbg !728
  store i32 %xor1534.i4952, i32* %l.i3466, align 4, !dbg !728
  %4011 = load i32, i32* %tt1528.i3544, align 4, !dbg !728
  %shl1535.i4953 = shl i32 %4011, 1, !dbg !728
  %4012 = load i32, i32* %r.i3467, align 4, !dbg !728
  %xor1536.i4954 = xor i32 %4012, %shl1535.i4953, !dbg !728
  store i32 %xor1536.i4954, i32* %r.i3467, align 4, !dbg !728
  %4013 = load i32, i32* %l.i3466, align 4, !dbg !728
  %shr1537.i4955 = lshr i32 %4013, 8, !dbg !728
  %4014 = load i32, i32* %r.i3467, align 4, !dbg !728
  %xor1538.i4956 = xor i32 %shr1537.i4955, %4014, !dbg !728
  %conv1539.i4957 = zext i32 %xor1538.i4956 to i64, !dbg !728
  %and1540.i4958 = and i64 %conv1539.i4957, 16711935, !dbg !728
  %conv1541.i4959 = trunc i64 %and1540.i4958 to i32, !dbg !728
  store i32 %conv1541.i4959, i32* %tt1528.i3544, align 4, !dbg !728
  %4015 = load i32, i32* %tt1528.i3544, align 4, !dbg !728
  %4016 = load i32, i32* %r.i3467, align 4, !dbg !728
  %xor1542.i4960 = xor i32 %4016, %4015, !dbg !728
  store i32 %xor1542.i4960, i32* %r.i3467, align 4, !dbg !728
  %4017 = load i32, i32* %tt1528.i3544, align 4, !dbg !728
  %shl1543.i4961 = shl i32 %4017, 8, !dbg !728
  %4018 = load i32, i32* %l.i3466, align 4, !dbg !728
  %xor1544.i4962 = xor i32 %4018, %shl1543.i4961, !dbg !728
  store i32 %xor1544.i4962, i32* %l.i3466, align 4, !dbg !728
  %4019 = load i32, i32* %r.i3467, align 4, !dbg !728
  %shr1545.i4963 = lshr i32 %4019, 2, !dbg !728
  %4020 = load i32, i32* %l.i3466, align 4, !dbg !728
  %xor1546.i4964 = xor i32 %shr1545.i4963, %4020, !dbg !728
  %conv1547.i4965 = zext i32 %xor1546.i4964 to i64, !dbg !728
  %and1548.i4966 = and i64 %conv1547.i4965, 858993459, !dbg !728
  %conv1549.i4967 = trunc i64 %and1548.i4966 to i32, !dbg !728
  store i32 %conv1549.i4967, i32* %tt1528.i3544, align 4, !dbg !728
  %4021 = load i32, i32* %tt1528.i3544, align 4, !dbg !728
  %4022 = load i32, i32* %l.i3466, align 4, !dbg !728
  %xor1550.i4968 = xor i32 %4022, %4021, !dbg !728
  store i32 %xor1550.i4968, i32* %l.i3466, align 4, !dbg !728
  %4023 = load i32, i32* %tt1528.i3544, align 4, !dbg !728
  %shl1551.i4969 = shl i32 %4023, 2, !dbg !728
  %4024 = load i32, i32* %r.i3467, align 4, !dbg !728
  %xor1552.i4970 = xor i32 %4024, %shl1551.i4969, !dbg !728
  store i32 %xor1552.i4970, i32* %r.i3467, align 4, !dbg !728
  %4025 = load i32, i32* %l.i3466, align 4, !dbg !728
  %shr1553.i4971 = lshr i32 %4025, 16, !dbg !728
  %4026 = load i32, i32* %r.i3467, align 4, !dbg !728
  %xor1554.i4972 = xor i32 %shr1553.i4971, %4026, !dbg !728
  %conv1555.i4973 = zext i32 %xor1554.i4972 to i64, !dbg !728
  %and1556.i4974 = and i64 %conv1555.i4973, 65535, !dbg !728
  %conv1557.i4975 = trunc i64 %and1556.i4974 to i32, !dbg !728
  store i32 %conv1557.i4975, i32* %tt1528.i3544, align 4, !dbg !728
  %4027 = load i32, i32* %tt1528.i3544, align 4, !dbg !728
  %4028 = load i32, i32* %r.i3467, align 4, !dbg !728
  %xor1558.i4976 = xor i32 %4028, %4027, !dbg !728
  store i32 %xor1558.i4976, i32* %r.i3467, align 4, !dbg !728
  %4029 = load i32, i32* %tt1528.i3544, align 4, !dbg !728
  %shl1559.i4977 = shl i32 %4029, 16, !dbg !728
  %4030 = load i32, i32* %l.i3466, align 4, !dbg !728
  %xor1560.i4978 = xor i32 %4030, %shl1559.i4977, !dbg !728
  store i32 %xor1560.i4978, i32* %l.i3466, align 4, !dbg !728
  %4031 = load i32, i32* %r.i3467, align 4, !dbg !728
  %shr1561.i4979 = lshr i32 %4031, 4, !dbg !728
  %4032 = load i32, i32* %l.i3466, align 4, !dbg !728
  %xor1562.i4980 = xor i32 %shr1561.i4979, %4032, !dbg !728
  %conv1563.i4981 = zext i32 %xor1562.i4980 to i64, !dbg !728
  %and1564.i4982 = and i64 %conv1563.i4981, 252645135, !dbg !728
  %conv1565.i4983 = trunc i64 %and1564.i4982 to i32, !dbg !728
  store i32 %conv1565.i4983, i32* %tt1528.i3544, align 4, !dbg !728
  %4033 = load i32, i32* %tt1528.i3544, align 4, !dbg !728
  %4034 = load i32, i32* %l.i3466, align 4, !dbg !728
  %xor1566.i4984 = xor i32 %4034, %4033, !dbg !728
  store i32 %xor1566.i4984, i32* %l.i3466, align 4, !dbg !728
  %4035 = load i32, i32* %tt1528.i3544, align 4, !dbg !728
  %shl1567.i4985 = shl i32 %4035, 4, !dbg !728
  %4036 = load i32, i32* %r.i3467, align 4, !dbg !728
  %xor1568.i4986 = xor i32 %4036, %shl1567.i4985, !dbg !728
  store i32 %xor1568.i4986, i32* %r.i3467, align 4, !dbg !728
  %4037 = load i32, i32* %l.i3466, align 4, !dbg !1278
  %4038 = load i32*, i32** %data.addr.i3463, align 8, !dbg !1279
  store i32 %4037, i32* %4038, align 4, !dbg !1280
  %4039 = load i32, i32* %r.i3467, align 4, !dbg !1281
  %4040 = load i32*, i32** %data.addr.i3463, align 8, !dbg !1282
  %arrayidx1570.i4987 = getelementptr inbounds i32, i32* %4040, i64 1, !dbg !1282
  store i32 %4039, i32* %arrayidx1570.i4987, align 4, !dbg !1283
  store i32 0, i32* %u.i3469, align 4, !dbg !1284
  store i32 0, i32* %t.i3468, align 4, !dbg !1285
  store i32 0, i32* %r.i3467, align 4, !dbg !1286
  store i32 0, i32* %l.i3466, align 4, !dbg !1287
  %arrayidx330 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1288
  %4041 = load i32, i32* %arrayidx330, align 4, !dbg !1288
  %4042 = load i32, i32* %xor0, align 4, !dbg !1289
  %xor331 = xor i32 %4041, %4042, !dbg !1290
  store i32 %xor331, i32* %tout0, align 4, !dbg !1291
  %arrayidx332 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1292
  %4043 = load i32, i32* %arrayidx332, align 4, !dbg !1292
  %4044 = load i32, i32* %xor1, align 4, !dbg !1293
  %xor333 = xor i32 %4043, %4044, !dbg !1294
  store i32 %xor333, i32* %tout1, align 4, !dbg !1295
  %4045 = load i64, i64* %l, align 8, !dbg !1296
  %add334 = add nsw i64 %4045, 8, !dbg !1296
  %4046 = load i8*, i8** %out.addr, align 8, !dbg !1296
  %add.ptr335 = getelementptr inbounds i8, i8* %4046, i64 %add334, !dbg !1296
  store i8* %add.ptr335, i8** %out.addr, align 8, !dbg !1296
  %4047 = load i64, i64* %l, align 8, !dbg !1296
  %add336 = add nsw i64 %4047, 8, !dbg !1296
  switch i64 %add336, label %sw.epilog375 [
    i64 8, label %sw.bb337
    i64 7, label %sw.bb342
    i64 6, label %sw.bb347
    i64 5, label %sw.bb352
    i64 4, label %sw.bb356
    i64 3, label %sw.bb361
    i64 2, label %sw.bb366
    i64 1, label %sw.bb371
  ], !dbg !1296

sw.bb337:                                         ; preds = %DES_encrypt1.exit4988
  %4048 = load i32, i32* %tout1, align 4, !dbg !1298
  %shr338 = lshr i32 %4048, 24, !dbg !1298
  %and339 = and i32 %shr338, 255, !dbg !1298
  %conv340 = trunc i32 %and339 to i8, !dbg !1298
  %4049 = load i8*, i8** %out.addr, align 8, !dbg !1298
  %incdec.ptr341 = getelementptr inbounds i8, i8* %4049, i32 -1, !dbg !1298
  store i8* %incdec.ptr341, i8** %out.addr, align 8, !dbg !1298
  store i8 %conv340, i8* %incdec.ptr341, align 1, !dbg !1298
  br label %sw.bb342, !dbg !1298

sw.bb342:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb337
  %4050 = load i32, i32* %tout1, align 4, !dbg !1298
  %shr343 = lshr i32 %4050, 16, !dbg !1298
  %and344 = and i32 %shr343, 255, !dbg !1298
  %conv345 = trunc i32 %and344 to i8, !dbg !1298
  %4051 = load i8*, i8** %out.addr, align 8, !dbg !1298
  %incdec.ptr346 = getelementptr inbounds i8, i8* %4051, i32 -1, !dbg !1298
  store i8* %incdec.ptr346, i8** %out.addr, align 8, !dbg !1298
  store i8 %conv345, i8* %incdec.ptr346, align 1, !dbg !1298
  br label %sw.bb347, !dbg !1298

sw.bb347:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb342
  %4052 = load i32, i32* %tout1, align 4, !dbg !1298
  %shr348 = lshr i32 %4052, 8, !dbg !1298
  %and349 = and i32 %shr348, 255, !dbg !1298
  %conv350 = trunc i32 %and349 to i8, !dbg !1298
  %4053 = load i8*, i8** %out.addr, align 8, !dbg !1298
  %incdec.ptr351 = getelementptr inbounds i8, i8* %4053, i32 -1, !dbg !1298
  store i8* %incdec.ptr351, i8** %out.addr, align 8, !dbg !1298
  store i8 %conv350, i8* %incdec.ptr351, align 1, !dbg !1298
  br label %sw.bb352, !dbg !1298

sw.bb352:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb347
  %4054 = load i32, i32* %tout1, align 4, !dbg !1298
  %and353 = and i32 %4054, 255, !dbg !1298
  %conv354 = trunc i32 %and353 to i8, !dbg !1298
  %4055 = load i8*, i8** %out.addr, align 8, !dbg !1298
  %incdec.ptr355 = getelementptr inbounds i8, i8* %4055, i32 -1, !dbg !1298
  store i8* %incdec.ptr355, i8** %out.addr, align 8, !dbg !1298
  store i8 %conv354, i8* %incdec.ptr355, align 1, !dbg !1298
  br label %sw.bb356, !dbg !1298

sw.bb356:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb352
  %4056 = load i32, i32* %tout0, align 4, !dbg !1298
  %shr357 = lshr i32 %4056, 24, !dbg !1298
  %and358 = and i32 %shr357, 255, !dbg !1298
  %conv359 = trunc i32 %and358 to i8, !dbg !1298
  %4057 = load i8*, i8** %out.addr, align 8, !dbg !1298
  %incdec.ptr360 = getelementptr inbounds i8, i8* %4057, i32 -1, !dbg !1298
  store i8* %incdec.ptr360, i8** %out.addr, align 8, !dbg !1298
  store i8 %conv359, i8* %incdec.ptr360, align 1, !dbg !1298
  br label %sw.bb361, !dbg !1298

sw.bb361:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb356
  %4058 = load i32, i32* %tout0, align 4, !dbg !1298
  %shr362 = lshr i32 %4058, 16, !dbg !1298
  %and363 = and i32 %shr362, 255, !dbg !1298
  %conv364 = trunc i32 %and363 to i8, !dbg !1298
  %4059 = load i8*, i8** %out.addr, align 8, !dbg !1298
  %incdec.ptr365 = getelementptr inbounds i8, i8* %4059, i32 -1, !dbg !1298
  store i8* %incdec.ptr365, i8** %out.addr, align 8, !dbg !1298
  store i8 %conv364, i8* %incdec.ptr365, align 1, !dbg !1298
  br label %sw.bb366, !dbg !1298

sw.bb366:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb361
  %4060 = load i32, i32* %tout0, align 4, !dbg !1298
  %shr367 = lshr i32 %4060, 8, !dbg !1298
  %and368 = and i32 %shr367, 255, !dbg !1298
  %conv369 = trunc i32 %and368 to i8, !dbg !1298
  %4061 = load i8*, i8** %out.addr, align 8, !dbg !1298
  %incdec.ptr370 = getelementptr inbounds i8, i8* %4061, i32 -1, !dbg !1298
  store i8* %incdec.ptr370, i8** %out.addr, align 8, !dbg !1298
  store i8 %conv369, i8* %incdec.ptr370, align 1, !dbg !1298
  br label %sw.bb371, !dbg !1298

sw.bb371:                                         ; preds = %DES_encrypt1.exit4988, %sw.bb366
  %4062 = load i32, i32* %tout0, align 4, !dbg !1298
  %and372 = and i32 %4062, 255, !dbg !1298
  %conv373 = trunc i32 %and372 to i8, !dbg !1298
  %4063 = load i8*, i8** %out.addr, align 8, !dbg !1298
  %incdec.ptr374 = getelementptr inbounds i8, i8* %4063, i32 -1, !dbg !1298
  store i8* %incdec.ptr374, i8** %out.addr, align 8, !dbg !1298
  store i8 %conv373, i8* %incdec.ptr374, align 1, !dbg !1298
  br label %sw.epilog375, !dbg !1298

sw.epilog375:                                     ; preds = %sw.bb371, %DES_encrypt1.exit4988
  %4064 = load i32, i32* %tin0, align 4, !dbg !1300
  store i32 %4064, i32* %xor0, align 4, !dbg !1301
  %4065 = load i32, i32* %tin1, align 4, !dbg !1302
  store i32 %4065, i32* %xor1, align 4, !dbg !1303
  br label %if.end376, !dbg !1304

if.end376:                                        ; preds = %sw.epilog375, %for.end295
  %4066 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !1305
  %arrayidx377 = getelementptr inbounds [8 x i8], [8 x i8]* %4066, i64 0, i64 0, !dbg !1306
  store i8* %arrayidx377, i8** %iv, align 8, !dbg !1307
  %4067 = load i32, i32* %xor0, align 4, !dbg !1308
  %and378 = and i32 %4067, 255, !dbg !1308
  %conv379 = trunc i32 %and378 to i8, !dbg !1308
  %4068 = load i8*, i8** %iv, align 8, !dbg !1308
  %incdec.ptr380 = getelementptr inbounds i8, i8* %4068, i32 1, !dbg !1308
  store i8* %incdec.ptr380, i8** %iv, align 8, !dbg !1308
  store i8 %conv379, i8* %4068, align 1, !dbg !1308
  %4069 = load i32, i32* %xor0, align 4, !dbg !1308
  %shr381 = lshr i32 %4069, 8, !dbg !1308
  %and382 = and i32 %shr381, 255, !dbg !1308
  %conv383 = trunc i32 %and382 to i8, !dbg !1308
  %4070 = load i8*, i8** %iv, align 8, !dbg !1308
  %incdec.ptr384 = getelementptr inbounds i8, i8* %4070, i32 1, !dbg !1308
  store i8* %incdec.ptr384, i8** %iv, align 8, !dbg !1308
  store i8 %conv383, i8* %4070, align 1, !dbg !1308
  %4071 = load i32, i32* %xor0, align 4, !dbg !1308
  %shr385 = lshr i32 %4071, 16, !dbg !1308
  %and386 = and i32 %shr385, 255, !dbg !1308
  %conv387 = trunc i32 %and386 to i8, !dbg !1308
  %4072 = load i8*, i8** %iv, align 8, !dbg !1308
  %incdec.ptr388 = getelementptr inbounds i8, i8* %4072, i32 1, !dbg !1308
  store i8* %incdec.ptr388, i8** %iv, align 8, !dbg !1308
  store i8 %conv387, i8* %4072, align 1, !dbg !1308
  %4073 = load i32, i32* %xor0, align 4, !dbg !1308
  %shr389 = lshr i32 %4073, 24, !dbg !1308
  %and390 = and i32 %shr389, 255, !dbg !1308
  %conv391 = trunc i32 %and390 to i8, !dbg !1308
  %4074 = load i8*, i8** %iv, align 8, !dbg !1308
  %incdec.ptr392 = getelementptr inbounds i8, i8* %4074, i32 1, !dbg !1308
  store i8* %incdec.ptr392, i8** %iv, align 8, !dbg !1308
  store i8 %conv391, i8* %4074, align 1, !dbg !1308
  %4075 = load i32, i32* %xor1, align 4, !dbg !1309
  %and393 = and i32 %4075, 255, !dbg !1309
  %conv394 = trunc i32 %and393 to i8, !dbg !1309
  %4076 = load i8*, i8** %iv, align 8, !dbg !1309
  %incdec.ptr395 = getelementptr inbounds i8, i8* %4076, i32 1, !dbg !1309
  store i8* %incdec.ptr395, i8** %iv, align 8, !dbg !1309
  store i8 %conv394, i8* %4076, align 1, !dbg !1309
  %4077 = load i32, i32* %xor1, align 4, !dbg !1309
  %shr396 = lshr i32 %4077, 8, !dbg !1309
  %and397 = and i32 %shr396, 255, !dbg !1309
  %conv398 = trunc i32 %and397 to i8, !dbg !1309
  %4078 = load i8*, i8** %iv, align 8, !dbg !1309
  %incdec.ptr399 = getelementptr inbounds i8, i8* %4078, i32 1, !dbg !1309
  store i8* %incdec.ptr399, i8** %iv, align 8, !dbg !1309
  store i8 %conv398, i8* %4078, align 1, !dbg !1309
  %4079 = load i32, i32* %xor1, align 4, !dbg !1309
  %shr400 = lshr i32 %4079, 16, !dbg !1309
  %and401 = and i32 %shr400, 255, !dbg !1309
  %conv402 = trunc i32 %and401 to i8, !dbg !1309
  %4080 = load i8*, i8** %iv, align 8, !dbg !1309
  %incdec.ptr403 = getelementptr inbounds i8, i8* %4080, i32 1, !dbg !1309
  store i8* %incdec.ptr403, i8** %iv, align 8, !dbg !1309
  store i8 %conv402, i8* %4080, align 1, !dbg !1309
  %4081 = load i32, i32* %xor1, align 4, !dbg !1309
  %shr404 = lshr i32 %4081, 24, !dbg !1309
  %and405 = and i32 %shr404, 255, !dbg !1309
  %conv406 = trunc i32 %and405 to i8, !dbg !1309
  %4082 = load i8*, i8** %iv, align 8, !dbg !1309
  %incdec.ptr407 = getelementptr inbounds i8, i8* %4082, i32 1, !dbg !1309
  store i8* %incdec.ptr407, i8** %iv, align 8, !dbg !1309
  store i8 %conv406, i8* %4082, align 1, !dbg !1309
  br label %if.end408

if.end408:                                        ; preds = %if.end376, %if.end
  store i32 0, i32* %xor1, align 4, !dbg !1310
  store i32 0, i32* %xor0, align 4, !dbg !1311
  store i32 0, i32* %tout1, align 4, !dbg !1312
  store i32 0, i32* %tout0, align 4, !dbg !1313
  store i32 0, i32* %tin1, align 4, !dbg !1314
  store i32 0, i32* %tin0, align 4, !dbg !1315
  %arrayidx409 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1316
  store i32 0, i32* %arrayidx409, align 4, !dbg !1317
  %arrayidx410 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1318
  store i32 0, i32* %arrayidx410, align 4, !dbg !1319
  ret void, !dbg !1320
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @DES_ede3_cbc_encrypt(i8* %input, i8* %output, i64 %length, %struct.DES_ks* %ks1, %struct.DES_ks* %ks2, %struct.DES_ks* %ks3, [8 x i8]* %ivec, i32 %enc) #2 !dbg !1321 {
entry:
  %input.addr = alloca i8*, align 8
  %output.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %ks1.addr = alloca %struct.DES_ks*, align 8
  %ks2.addr = alloca %struct.DES_ks*, align 8
  %ks3.addr = alloca %struct.DES_ks*, align 8
  %ivec.addr = alloca [8 x i8]*, align 8
  %enc.addr = alloca i32, align 4
  %tin0 = alloca i32, align 4
  %tin1 = alloca i32, align 4
  %tout0 = alloca i32, align 4
  %tout1 = alloca i32, align 4
  %xor0 = alloca i32, align 4
  %xor1 = alloca i32, align 4
  %in = alloca i8*, align 8
  %out = alloca i8*, align 8
  %l = alloca i64, align 8
  %tin = alloca [2 x i32], align 4
  %iv = alloca i8*, align 8
  %t0 = alloca i32, align 4
  %t1 = alloca i32, align 4
  store i8* %input, i8** %input.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %input.addr, metadata !1324, metadata !DIExpression()), !dbg !1325
  store i8* %output, i8** %output.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %output.addr, metadata !1326, metadata !DIExpression()), !dbg !1327
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !1328, metadata !DIExpression()), !dbg !1329
  store %struct.DES_ks* %ks1, %struct.DES_ks** %ks1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks1.addr, metadata !1330, metadata !DIExpression()), !dbg !1331
  store %struct.DES_ks* %ks2, %struct.DES_ks** %ks2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks2.addr, metadata !1332, metadata !DIExpression()), !dbg !1333
  store %struct.DES_ks* %ks3, %struct.DES_ks** %ks3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks3.addr, metadata !1334, metadata !DIExpression()), !dbg !1335
  store [8 x i8]* %ivec, [8 x i8]** %ivec.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %ivec.addr, metadata !1336, metadata !DIExpression()), !dbg !1337
  store i32 %enc, i32* %enc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr, metadata !1338, metadata !DIExpression()), !dbg !1339
  call void @llvm.dbg.declare(metadata i32* %tin0, metadata !1340, metadata !DIExpression()), !dbg !1341
  call void @llvm.dbg.declare(metadata i32* %tin1, metadata !1342, metadata !DIExpression()), !dbg !1343
  call void @llvm.dbg.declare(metadata i32* %tout0, metadata !1344, metadata !DIExpression()), !dbg !1345
  call void @llvm.dbg.declare(metadata i32* %tout1, metadata !1346, metadata !DIExpression()), !dbg !1347
  call void @llvm.dbg.declare(metadata i32* %xor0, metadata !1348, metadata !DIExpression()), !dbg !1349
  call void @llvm.dbg.declare(metadata i32* %xor1, metadata !1350, metadata !DIExpression()), !dbg !1351
  call void @llvm.dbg.declare(metadata i8** %in, metadata !1352, metadata !DIExpression()), !dbg !1353
  call void @llvm.dbg.declare(metadata i8** %out, metadata !1354, metadata !DIExpression()), !dbg !1355
  call void @llvm.dbg.declare(metadata i64* %l, metadata !1356, metadata !DIExpression()), !dbg !1357
  %0 = load i64, i64* %length.addr, align 8, !dbg !1358
  store i64 %0, i64* %l, align 8, !dbg !1357
  call void @llvm.dbg.declare(metadata [2 x i32]* %tin, metadata !1359, metadata !DIExpression()), !dbg !1360
  call void @llvm.dbg.declare(metadata i8** %iv, metadata !1361, metadata !DIExpression()), !dbg !1362
  %1 = load i8*, i8** %input.addr, align 8, !dbg !1363
  store i8* %1, i8** %in, align 8, !dbg !1364
  %2 = load i8*, i8** %output.addr, align 8, !dbg !1365
  store i8* %2, i8** %out, align 8, !dbg !1366
  %3 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !1367
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 0, !dbg !1368
  store i8* %arrayidx, i8** %iv, align 8, !dbg !1369
  %4 = load i32, i32* %enc.addr, align 4, !dbg !1370
  %tobool = icmp ne i32 %4, 0, !dbg !1370
  br i1 %tobool, label %if.then, label %if.else, !dbg !1372

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %iv, align 8, !dbg !1373
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !1373
  store i8* %incdec.ptr, i8** %iv, align 8, !dbg !1373
  %6 = load i8, i8* %5, align 1, !dbg !1373
  %conv = zext i8 %6 to i32, !dbg !1373
  store i32 %conv, i32* %tout0, align 4, !dbg !1373
  %7 = load i8*, i8** %iv, align 8, !dbg !1373
  %incdec.ptr1 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !1373
  store i8* %incdec.ptr1, i8** %iv, align 8, !dbg !1373
  %8 = load i8, i8* %7, align 1, !dbg !1373
  %conv2 = zext i8 %8 to i32, !dbg !1373
  %shl = shl i32 %conv2, 8, !dbg !1373
  %9 = load i32, i32* %tout0, align 4, !dbg !1373
  %or = or i32 %9, %shl, !dbg !1373
  store i32 %or, i32* %tout0, align 4, !dbg !1373
  %10 = load i8*, i8** %iv, align 8, !dbg !1373
  %incdec.ptr3 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !1373
  store i8* %incdec.ptr3, i8** %iv, align 8, !dbg !1373
  %11 = load i8, i8* %10, align 1, !dbg !1373
  %conv4 = zext i8 %11 to i32, !dbg !1373
  %shl5 = shl i32 %conv4, 16, !dbg !1373
  %12 = load i32, i32* %tout0, align 4, !dbg !1373
  %or6 = or i32 %12, %shl5, !dbg !1373
  store i32 %or6, i32* %tout0, align 4, !dbg !1373
  %13 = load i8*, i8** %iv, align 8, !dbg !1373
  %incdec.ptr7 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !1373
  store i8* %incdec.ptr7, i8** %iv, align 8, !dbg !1373
  %14 = load i8, i8* %13, align 1, !dbg !1373
  %conv8 = zext i8 %14 to i32, !dbg !1373
  %shl9 = shl i32 %conv8, 24, !dbg !1373
  %15 = load i32, i32* %tout0, align 4, !dbg !1373
  %or10 = or i32 %15, %shl9, !dbg !1373
  store i32 %or10, i32* %tout0, align 4, !dbg !1373
  %16 = load i8*, i8** %iv, align 8, !dbg !1375
  %incdec.ptr11 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !1375
  store i8* %incdec.ptr11, i8** %iv, align 8, !dbg !1375
  %17 = load i8, i8* %16, align 1, !dbg !1375
  %conv12 = zext i8 %17 to i32, !dbg !1375
  store i32 %conv12, i32* %tout1, align 4, !dbg !1375
  %18 = load i8*, i8** %iv, align 8, !dbg !1375
  %incdec.ptr13 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !1375
  store i8* %incdec.ptr13, i8** %iv, align 8, !dbg !1375
  %19 = load i8, i8* %18, align 1, !dbg !1375
  %conv14 = zext i8 %19 to i32, !dbg !1375
  %shl15 = shl i32 %conv14, 8, !dbg !1375
  %20 = load i32, i32* %tout1, align 4, !dbg !1375
  %or16 = or i32 %20, %shl15, !dbg !1375
  store i32 %or16, i32* %tout1, align 4, !dbg !1375
  %21 = load i8*, i8** %iv, align 8, !dbg !1375
  %incdec.ptr17 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !1375
  store i8* %incdec.ptr17, i8** %iv, align 8, !dbg !1375
  %22 = load i8, i8* %21, align 1, !dbg !1375
  %conv18 = zext i8 %22 to i32, !dbg !1375
  %shl19 = shl i32 %conv18, 16, !dbg !1375
  %23 = load i32, i32* %tout1, align 4, !dbg !1375
  %or20 = or i32 %23, %shl19, !dbg !1375
  store i32 %or20, i32* %tout1, align 4, !dbg !1375
  %24 = load i8*, i8** %iv, align 8, !dbg !1375
  %incdec.ptr21 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !1375
  store i8* %incdec.ptr21, i8** %iv, align 8, !dbg !1375
  %25 = load i8, i8* %24, align 1, !dbg !1375
  %conv22 = zext i8 %25 to i32, !dbg !1375
  %shl23 = shl i32 %conv22, 24, !dbg !1375
  %26 = load i32, i32* %tout1, align 4, !dbg !1375
  %or24 = or i32 %26, %shl23, !dbg !1375
  store i32 %or24, i32* %tout1, align 4, !dbg !1375
  %27 = load i64, i64* %l, align 8, !dbg !1376
  %sub = sub nsw i64 %27, 8, !dbg !1376
  store i64 %sub, i64* %l, align 8, !dbg !1376
  br label %for.cond, !dbg !1378

for.cond:                                         ; preds = %for.inc, %if.then
  %28 = load i64, i64* %l, align 8, !dbg !1379
  %cmp = icmp sge i64 %28, 0, !dbg !1381
  br i1 %cmp, label %for.body, label %for.end, !dbg !1382

for.body:                                         ; preds = %for.cond
  %29 = load i8*, i8** %in, align 8, !dbg !1383
  %incdec.ptr26 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !1383
  store i8* %incdec.ptr26, i8** %in, align 8, !dbg !1383
  %30 = load i8, i8* %29, align 1, !dbg !1383
  %conv27 = zext i8 %30 to i32, !dbg !1383
  store i32 %conv27, i32* %tin0, align 4, !dbg !1383
  %31 = load i8*, i8** %in, align 8, !dbg !1383
  %incdec.ptr28 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !1383
  store i8* %incdec.ptr28, i8** %in, align 8, !dbg !1383
  %32 = load i8, i8* %31, align 1, !dbg !1383
  %conv29 = zext i8 %32 to i32, !dbg !1383
  %shl30 = shl i32 %conv29, 8, !dbg !1383
  %33 = load i32, i32* %tin0, align 4, !dbg !1383
  %or31 = or i32 %33, %shl30, !dbg !1383
  store i32 %or31, i32* %tin0, align 4, !dbg !1383
  %34 = load i8*, i8** %in, align 8, !dbg !1383
  %incdec.ptr32 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !1383
  store i8* %incdec.ptr32, i8** %in, align 8, !dbg !1383
  %35 = load i8, i8* %34, align 1, !dbg !1383
  %conv33 = zext i8 %35 to i32, !dbg !1383
  %shl34 = shl i32 %conv33, 16, !dbg !1383
  %36 = load i32, i32* %tin0, align 4, !dbg !1383
  %or35 = or i32 %36, %shl34, !dbg !1383
  store i32 %or35, i32* %tin0, align 4, !dbg !1383
  %37 = load i8*, i8** %in, align 8, !dbg !1383
  %incdec.ptr36 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !1383
  store i8* %incdec.ptr36, i8** %in, align 8, !dbg !1383
  %38 = load i8, i8* %37, align 1, !dbg !1383
  %conv37 = zext i8 %38 to i32, !dbg !1383
  %shl38 = shl i32 %conv37, 24, !dbg !1383
  %39 = load i32, i32* %tin0, align 4, !dbg !1383
  %or39 = or i32 %39, %shl38, !dbg !1383
  store i32 %or39, i32* %tin0, align 4, !dbg !1383
  %40 = load i8*, i8** %in, align 8, !dbg !1385
  %incdec.ptr40 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !1385
  store i8* %incdec.ptr40, i8** %in, align 8, !dbg !1385
  %41 = load i8, i8* %40, align 1, !dbg !1385
  %conv41 = zext i8 %41 to i32, !dbg !1385
  store i32 %conv41, i32* %tin1, align 4, !dbg !1385
  %42 = load i8*, i8** %in, align 8, !dbg !1385
  %incdec.ptr42 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !1385
  store i8* %incdec.ptr42, i8** %in, align 8, !dbg !1385
  %43 = load i8, i8* %42, align 1, !dbg !1385
  %conv43 = zext i8 %43 to i32, !dbg !1385
  %shl44 = shl i32 %conv43, 8, !dbg !1385
  %44 = load i32, i32* %tin1, align 4, !dbg !1385
  %or45 = or i32 %44, %shl44, !dbg !1385
  store i32 %or45, i32* %tin1, align 4, !dbg !1385
  %45 = load i8*, i8** %in, align 8, !dbg !1385
  %incdec.ptr46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !1385
  store i8* %incdec.ptr46, i8** %in, align 8, !dbg !1385
  %46 = load i8, i8* %45, align 1, !dbg !1385
  %conv47 = zext i8 %46 to i32, !dbg !1385
  %shl48 = shl i32 %conv47, 16, !dbg !1385
  %47 = load i32, i32* %tin1, align 4, !dbg !1385
  %or49 = or i32 %47, %shl48, !dbg !1385
  store i32 %or49, i32* %tin1, align 4, !dbg !1385
  %48 = load i8*, i8** %in, align 8, !dbg !1385
  %incdec.ptr50 = getelementptr inbounds i8, i8* %48, i32 1, !dbg !1385
  store i8* %incdec.ptr50, i8** %in, align 8, !dbg !1385
  %49 = load i8, i8* %48, align 1, !dbg !1385
  %conv51 = zext i8 %49 to i32, !dbg !1385
  %shl52 = shl i32 %conv51, 24, !dbg !1385
  %50 = load i32, i32* %tin1, align 4, !dbg !1385
  %or53 = or i32 %50, %shl52, !dbg !1385
  store i32 %or53, i32* %tin1, align 4, !dbg !1385
  %51 = load i32, i32* %tout0, align 4, !dbg !1386
  %52 = load i32, i32* %tin0, align 4, !dbg !1387
  %xor = xor i32 %52, %51, !dbg !1387
  store i32 %xor, i32* %tin0, align 4, !dbg !1387
  %53 = load i32, i32* %tout1, align 4, !dbg !1388
  %54 = load i32, i32* %tin1, align 4, !dbg !1389
  %xor54 = xor i32 %54, %53, !dbg !1389
  store i32 %xor54, i32* %tin1, align 4, !dbg !1389
  %55 = load i32, i32* %tin0, align 4, !dbg !1390
  %arrayidx55 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1391
  store i32 %55, i32* %arrayidx55, align 4, !dbg !1392
  %56 = load i32, i32* %tin1, align 4, !dbg !1393
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1394
  store i32 %56, i32* %arrayidx56, align 4, !dbg !1395
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1396
  %57 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !1397
  %58 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !1398
  %59 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !1399
  call void @DES_encrypt3(i32* %arraydecay, %struct.DES_ks* %57, %struct.DES_ks* %58, %struct.DES_ks* %59), !dbg !1400
  %arrayidx57 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1401
  %60 = load i32, i32* %arrayidx57, align 4, !dbg !1401
  store i32 %60, i32* %tout0, align 4, !dbg !1402
  %arrayidx58 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1403
  %61 = load i32, i32* %arrayidx58, align 4, !dbg !1403
  store i32 %61, i32* %tout1, align 4, !dbg !1404
  %62 = load i32, i32* %tout0, align 4, !dbg !1405
  %and = and i32 %62, 255, !dbg !1405
  %conv59 = trunc i32 %and to i8, !dbg !1405
  %63 = load i8*, i8** %out, align 8, !dbg !1405
  %incdec.ptr60 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !1405
  store i8* %incdec.ptr60, i8** %out, align 8, !dbg !1405
  store i8 %conv59, i8* %63, align 1, !dbg !1405
  %64 = load i32, i32* %tout0, align 4, !dbg !1405
  %shr = lshr i32 %64, 8, !dbg !1405
  %and61 = and i32 %shr, 255, !dbg !1405
  %conv62 = trunc i32 %and61 to i8, !dbg !1405
  %65 = load i8*, i8** %out, align 8, !dbg !1405
  %incdec.ptr63 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !1405
  store i8* %incdec.ptr63, i8** %out, align 8, !dbg !1405
  store i8 %conv62, i8* %65, align 1, !dbg !1405
  %66 = load i32, i32* %tout0, align 4, !dbg !1405
  %shr64 = lshr i32 %66, 16, !dbg !1405
  %and65 = and i32 %shr64, 255, !dbg !1405
  %conv66 = trunc i32 %and65 to i8, !dbg !1405
  %67 = load i8*, i8** %out, align 8, !dbg !1405
  %incdec.ptr67 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !1405
  store i8* %incdec.ptr67, i8** %out, align 8, !dbg !1405
  store i8 %conv66, i8* %67, align 1, !dbg !1405
  %68 = load i32, i32* %tout0, align 4, !dbg !1405
  %shr68 = lshr i32 %68, 24, !dbg !1405
  %and69 = and i32 %shr68, 255, !dbg !1405
  %conv70 = trunc i32 %and69 to i8, !dbg !1405
  %69 = load i8*, i8** %out, align 8, !dbg !1405
  %incdec.ptr71 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !1405
  store i8* %incdec.ptr71, i8** %out, align 8, !dbg !1405
  store i8 %conv70, i8* %69, align 1, !dbg !1405
  %70 = load i32, i32* %tout1, align 4, !dbg !1406
  %and72 = and i32 %70, 255, !dbg !1406
  %conv73 = trunc i32 %and72 to i8, !dbg !1406
  %71 = load i8*, i8** %out, align 8, !dbg !1406
  %incdec.ptr74 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !1406
  store i8* %incdec.ptr74, i8** %out, align 8, !dbg !1406
  store i8 %conv73, i8* %71, align 1, !dbg !1406
  %72 = load i32, i32* %tout1, align 4, !dbg !1406
  %shr75 = lshr i32 %72, 8, !dbg !1406
  %and76 = and i32 %shr75, 255, !dbg !1406
  %conv77 = trunc i32 %and76 to i8, !dbg !1406
  %73 = load i8*, i8** %out, align 8, !dbg !1406
  %incdec.ptr78 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !1406
  store i8* %incdec.ptr78, i8** %out, align 8, !dbg !1406
  store i8 %conv77, i8* %73, align 1, !dbg !1406
  %74 = load i32, i32* %tout1, align 4, !dbg !1406
  %shr79 = lshr i32 %74, 16, !dbg !1406
  %and80 = and i32 %shr79, 255, !dbg !1406
  %conv81 = trunc i32 %and80 to i8, !dbg !1406
  %75 = load i8*, i8** %out, align 8, !dbg !1406
  %incdec.ptr82 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !1406
  store i8* %incdec.ptr82, i8** %out, align 8, !dbg !1406
  store i8 %conv81, i8* %75, align 1, !dbg !1406
  %76 = load i32, i32* %tout1, align 4, !dbg !1406
  %shr83 = lshr i32 %76, 24, !dbg !1406
  %and84 = and i32 %shr83, 255, !dbg !1406
  %conv85 = trunc i32 %and84 to i8, !dbg !1406
  %77 = load i8*, i8** %out, align 8, !dbg !1406
  %incdec.ptr86 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !1406
  store i8* %incdec.ptr86, i8** %out, align 8, !dbg !1406
  store i8 %conv85, i8* %77, align 1, !dbg !1406
  br label %for.inc, !dbg !1407

for.inc:                                          ; preds = %for.body
  %78 = load i64, i64* %l, align 8, !dbg !1408
  %sub87 = sub nsw i64 %78, 8, !dbg !1408
  store i64 %sub87, i64* %l, align 8, !dbg !1408
  br label %for.cond, !dbg !1409, !llvm.loop !1410

for.end:                                          ; preds = %for.cond
  %79 = load i64, i64* %l, align 8, !dbg !1412
  %cmp88 = icmp ne i64 %79, -8, !dbg !1414
  br i1 %cmp88, label %if.then90, label %if.end, !dbg !1415

if.then90:                                        ; preds = %for.end
  %80 = load i64, i64* %l, align 8, !dbg !1416
  %add = add nsw i64 %80, 8, !dbg !1416
  %81 = load i8*, i8** %in, align 8, !dbg !1416
  %add.ptr = getelementptr inbounds i8, i8* %81, i64 %add, !dbg !1416
  store i8* %add.ptr, i8** %in, align 8, !dbg !1416
  store i32 0, i32* %tin1, align 4, !dbg !1416
  store i32 0, i32* %tin0, align 4, !dbg !1416
  %82 = load i64, i64* %l, align 8, !dbg !1416
  %add91 = add nsw i64 %82, 8, !dbg !1416
  switch i64 %add91, label %sw.epilog [
    i64 8, label %sw.bb
    i64 7, label %sw.bb95
    i64 6, label %sw.bb100
    i64 5, label %sw.bb105
    i64 4, label %sw.bb109
    i64 3, label %sw.bb113
    i64 2, label %sw.bb118
    i64 1, label %sw.bb123
  ], !dbg !1416

sw.bb:                                            ; preds = %if.then90
  %83 = load i8*, i8** %in, align 8, !dbg !1419
  %incdec.ptr92 = getelementptr inbounds i8, i8* %83, i32 -1, !dbg !1419
  store i8* %incdec.ptr92, i8** %in, align 8, !dbg !1419
  %84 = load i8, i8* %incdec.ptr92, align 1, !dbg !1419
  %conv93 = zext i8 %84 to i32, !dbg !1419
  %shl94 = shl i32 %conv93, 24, !dbg !1419
  store i32 %shl94, i32* %tin1, align 4, !dbg !1419
  br label %sw.bb95, !dbg !1419

sw.bb95:                                          ; preds = %if.then90, %sw.bb
  %85 = load i8*, i8** %in, align 8, !dbg !1419
  %incdec.ptr96 = getelementptr inbounds i8, i8* %85, i32 -1, !dbg !1419
  store i8* %incdec.ptr96, i8** %in, align 8, !dbg !1419
  %86 = load i8, i8* %incdec.ptr96, align 1, !dbg !1419
  %conv97 = zext i8 %86 to i32, !dbg !1419
  %shl98 = shl i32 %conv97, 16, !dbg !1419
  %87 = load i32, i32* %tin1, align 4, !dbg !1419
  %or99 = or i32 %87, %shl98, !dbg !1419
  store i32 %or99, i32* %tin1, align 4, !dbg !1419
  br label %sw.bb100, !dbg !1419

sw.bb100:                                         ; preds = %if.then90, %sw.bb95
  %88 = load i8*, i8** %in, align 8, !dbg !1419
  %incdec.ptr101 = getelementptr inbounds i8, i8* %88, i32 -1, !dbg !1419
  store i8* %incdec.ptr101, i8** %in, align 8, !dbg !1419
  %89 = load i8, i8* %incdec.ptr101, align 1, !dbg !1419
  %conv102 = zext i8 %89 to i32, !dbg !1419
  %shl103 = shl i32 %conv102, 8, !dbg !1419
  %90 = load i32, i32* %tin1, align 4, !dbg !1419
  %or104 = or i32 %90, %shl103, !dbg !1419
  store i32 %or104, i32* %tin1, align 4, !dbg !1419
  br label %sw.bb105, !dbg !1419

sw.bb105:                                         ; preds = %if.then90, %sw.bb100
  %91 = load i8*, i8** %in, align 8, !dbg !1419
  %incdec.ptr106 = getelementptr inbounds i8, i8* %91, i32 -1, !dbg !1419
  store i8* %incdec.ptr106, i8** %in, align 8, !dbg !1419
  %92 = load i8, i8* %incdec.ptr106, align 1, !dbg !1419
  %conv107 = zext i8 %92 to i32, !dbg !1419
  %93 = load i32, i32* %tin1, align 4, !dbg !1419
  %or108 = or i32 %93, %conv107, !dbg !1419
  store i32 %or108, i32* %tin1, align 4, !dbg !1419
  br label %sw.bb109, !dbg !1419

sw.bb109:                                         ; preds = %if.then90, %sw.bb105
  %94 = load i8*, i8** %in, align 8, !dbg !1419
  %incdec.ptr110 = getelementptr inbounds i8, i8* %94, i32 -1, !dbg !1419
  store i8* %incdec.ptr110, i8** %in, align 8, !dbg !1419
  %95 = load i8, i8* %incdec.ptr110, align 1, !dbg !1419
  %conv111 = zext i8 %95 to i32, !dbg !1419
  %shl112 = shl i32 %conv111, 24, !dbg !1419
  store i32 %shl112, i32* %tin0, align 4, !dbg !1419
  br label %sw.bb113, !dbg !1419

sw.bb113:                                         ; preds = %if.then90, %sw.bb109
  %96 = load i8*, i8** %in, align 8, !dbg !1419
  %incdec.ptr114 = getelementptr inbounds i8, i8* %96, i32 -1, !dbg !1419
  store i8* %incdec.ptr114, i8** %in, align 8, !dbg !1419
  %97 = load i8, i8* %incdec.ptr114, align 1, !dbg !1419
  %conv115 = zext i8 %97 to i32, !dbg !1419
  %shl116 = shl i32 %conv115, 16, !dbg !1419
  %98 = load i32, i32* %tin0, align 4, !dbg !1419
  %or117 = or i32 %98, %shl116, !dbg !1419
  store i32 %or117, i32* %tin0, align 4, !dbg !1419
  br label %sw.bb118, !dbg !1419

sw.bb118:                                         ; preds = %if.then90, %sw.bb113
  %99 = load i8*, i8** %in, align 8, !dbg !1419
  %incdec.ptr119 = getelementptr inbounds i8, i8* %99, i32 -1, !dbg !1419
  store i8* %incdec.ptr119, i8** %in, align 8, !dbg !1419
  %100 = load i8, i8* %incdec.ptr119, align 1, !dbg !1419
  %conv120 = zext i8 %100 to i32, !dbg !1419
  %shl121 = shl i32 %conv120, 8, !dbg !1419
  %101 = load i32, i32* %tin0, align 4, !dbg !1419
  %or122 = or i32 %101, %shl121, !dbg !1419
  store i32 %or122, i32* %tin0, align 4, !dbg !1419
  br label %sw.bb123, !dbg !1419

sw.bb123:                                         ; preds = %if.then90, %sw.bb118
  %102 = load i8*, i8** %in, align 8, !dbg !1419
  %incdec.ptr124 = getelementptr inbounds i8, i8* %102, i32 -1, !dbg !1419
  store i8* %incdec.ptr124, i8** %in, align 8, !dbg !1419
  %103 = load i8, i8* %incdec.ptr124, align 1, !dbg !1419
  %conv125 = zext i8 %103 to i32, !dbg !1419
  %104 = load i32, i32* %tin0, align 4, !dbg !1419
  %or126 = or i32 %104, %conv125, !dbg !1419
  store i32 %or126, i32* %tin0, align 4, !dbg !1419
  br label %sw.epilog, !dbg !1419

sw.epilog:                                        ; preds = %sw.bb123, %if.then90
  %105 = load i32, i32* %tout0, align 4, !dbg !1421
  %106 = load i32, i32* %tin0, align 4, !dbg !1422
  %xor127 = xor i32 %106, %105, !dbg !1422
  store i32 %xor127, i32* %tin0, align 4, !dbg !1422
  %107 = load i32, i32* %tout1, align 4, !dbg !1423
  %108 = load i32, i32* %tin1, align 4, !dbg !1424
  %xor128 = xor i32 %108, %107, !dbg !1424
  store i32 %xor128, i32* %tin1, align 4, !dbg !1424
  %109 = load i32, i32* %tin0, align 4, !dbg !1425
  %arrayidx129 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1426
  store i32 %109, i32* %arrayidx129, align 4, !dbg !1427
  %110 = load i32, i32* %tin1, align 4, !dbg !1428
  %arrayidx130 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1429
  store i32 %110, i32* %arrayidx130, align 4, !dbg !1430
  %arraydecay131 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1431
  %111 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !1432
  %112 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !1433
  %113 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !1434
  call void @DES_encrypt3(i32* %arraydecay131, %struct.DES_ks* %111, %struct.DES_ks* %112, %struct.DES_ks* %113), !dbg !1435
  %arrayidx132 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1436
  %114 = load i32, i32* %arrayidx132, align 4, !dbg !1436
  store i32 %114, i32* %tout0, align 4, !dbg !1437
  %arrayidx133 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1438
  %115 = load i32, i32* %arrayidx133, align 4, !dbg !1438
  store i32 %115, i32* %tout1, align 4, !dbg !1439
  %116 = load i32, i32* %tout0, align 4, !dbg !1440
  %and134 = and i32 %116, 255, !dbg !1440
  %conv135 = trunc i32 %and134 to i8, !dbg !1440
  %117 = load i8*, i8** %out, align 8, !dbg !1440
  %incdec.ptr136 = getelementptr inbounds i8, i8* %117, i32 1, !dbg !1440
  store i8* %incdec.ptr136, i8** %out, align 8, !dbg !1440
  store i8 %conv135, i8* %117, align 1, !dbg !1440
  %118 = load i32, i32* %tout0, align 4, !dbg !1440
  %shr137 = lshr i32 %118, 8, !dbg !1440
  %and138 = and i32 %shr137, 255, !dbg !1440
  %conv139 = trunc i32 %and138 to i8, !dbg !1440
  %119 = load i8*, i8** %out, align 8, !dbg !1440
  %incdec.ptr140 = getelementptr inbounds i8, i8* %119, i32 1, !dbg !1440
  store i8* %incdec.ptr140, i8** %out, align 8, !dbg !1440
  store i8 %conv139, i8* %119, align 1, !dbg !1440
  %120 = load i32, i32* %tout0, align 4, !dbg !1440
  %shr141 = lshr i32 %120, 16, !dbg !1440
  %and142 = and i32 %shr141, 255, !dbg !1440
  %conv143 = trunc i32 %and142 to i8, !dbg !1440
  %121 = load i8*, i8** %out, align 8, !dbg !1440
  %incdec.ptr144 = getelementptr inbounds i8, i8* %121, i32 1, !dbg !1440
  store i8* %incdec.ptr144, i8** %out, align 8, !dbg !1440
  store i8 %conv143, i8* %121, align 1, !dbg !1440
  %122 = load i32, i32* %tout0, align 4, !dbg !1440
  %shr145 = lshr i32 %122, 24, !dbg !1440
  %and146 = and i32 %shr145, 255, !dbg !1440
  %conv147 = trunc i32 %and146 to i8, !dbg !1440
  %123 = load i8*, i8** %out, align 8, !dbg !1440
  %incdec.ptr148 = getelementptr inbounds i8, i8* %123, i32 1, !dbg !1440
  store i8* %incdec.ptr148, i8** %out, align 8, !dbg !1440
  store i8 %conv147, i8* %123, align 1, !dbg !1440
  %124 = load i32, i32* %tout1, align 4, !dbg !1441
  %and149 = and i32 %124, 255, !dbg !1441
  %conv150 = trunc i32 %and149 to i8, !dbg !1441
  %125 = load i8*, i8** %out, align 8, !dbg !1441
  %incdec.ptr151 = getelementptr inbounds i8, i8* %125, i32 1, !dbg !1441
  store i8* %incdec.ptr151, i8** %out, align 8, !dbg !1441
  store i8 %conv150, i8* %125, align 1, !dbg !1441
  %126 = load i32, i32* %tout1, align 4, !dbg !1441
  %shr152 = lshr i32 %126, 8, !dbg !1441
  %and153 = and i32 %shr152, 255, !dbg !1441
  %conv154 = trunc i32 %and153 to i8, !dbg !1441
  %127 = load i8*, i8** %out, align 8, !dbg !1441
  %incdec.ptr155 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !1441
  store i8* %incdec.ptr155, i8** %out, align 8, !dbg !1441
  store i8 %conv154, i8* %127, align 1, !dbg !1441
  %128 = load i32, i32* %tout1, align 4, !dbg !1441
  %shr156 = lshr i32 %128, 16, !dbg !1441
  %and157 = and i32 %shr156, 255, !dbg !1441
  %conv158 = trunc i32 %and157 to i8, !dbg !1441
  %129 = load i8*, i8** %out, align 8, !dbg !1441
  %incdec.ptr159 = getelementptr inbounds i8, i8* %129, i32 1, !dbg !1441
  store i8* %incdec.ptr159, i8** %out, align 8, !dbg !1441
  store i8 %conv158, i8* %129, align 1, !dbg !1441
  %130 = load i32, i32* %tout1, align 4, !dbg !1441
  %shr160 = lshr i32 %130, 24, !dbg !1441
  %and161 = and i32 %shr160, 255, !dbg !1441
  %conv162 = trunc i32 %and161 to i8, !dbg !1441
  %131 = load i8*, i8** %out, align 8, !dbg !1441
  %incdec.ptr163 = getelementptr inbounds i8, i8* %131, i32 1, !dbg !1441
  store i8* %incdec.ptr163, i8** %out, align 8, !dbg !1441
  store i8 %conv162, i8* %131, align 1, !dbg !1441
  br label %if.end, !dbg !1442

if.end:                                           ; preds = %sw.epilog, %for.end
  %132 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !1443
  %arrayidx164 = getelementptr inbounds [8 x i8], [8 x i8]* %132, i64 0, i64 0, !dbg !1444
  store i8* %arrayidx164, i8** %iv, align 8, !dbg !1445
  %133 = load i32, i32* %tout0, align 4, !dbg !1446
  %and165 = and i32 %133, 255, !dbg !1446
  %conv166 = trunc i32 %and165 to i8, !dbg !1446
  %134 = load i8*, i8** %iv, align 8, !dbg !1446
  %incdec.ptr167 = getelementptr inbounds i8, i8* %134, i32 1, !dbg !1446
  store i8* %incdec.ptr167, i8** %iv, align 8, !dbg !1446
  store i8 %conv166, i8* %134, align 1, !dbg !1446
  %135 = load i32, i32* %tout0, align 4, !dbg !1446
  %shr168 = lshr i32 %135, 8, !dbg !1446
  %and169 = and i32 %shr168, 255, !dbg !1446
  %conv170 = trunc i32 %and169 to i8, !dbg !1446
  %136 = load i8*, i8** %iv, align 8, !dbg !1446
  %incdec.ptr171 = getelementptr inbounds i8, i8* %136, i32 1, !dbg !1446
  store i8* %incdec.ptr171, i8** %iv, align 8, !dbg !1446
  store i8 %conv170, i8* %136, align 1, !dbg !1446
  %137 = load i32, i32* %tout0, align 4, !dbg !1446
  %shr172 = lshr i32 %137, 16, !dbg !1446
  %and173 = and i32 %shr172, 255, !dbg !1446
  %conv174 = trunc i32 %and173 to i8, !dbg !1446
  %138 = load i8*, i8** %iv, align 8, !dbg !1446
  %incdec.ptr175 = getelementptr inbounds i8, i8* %138, i32 1, !dbg !1446
  store i8* %incdec.ptr175, i8** %iv, align 8, !dbg !1446
  store i8 %conv174, i8* %138, align 1, !dbg !1446
  %139 = load i32, i32* %tout0, align 4, !dbg !1446
  %shr176 = lshr i32 %139, 24, !dbg !1446
  %and177 = and i32 %shr176, 255, !dbg !1446
  %conv178 = trunc i32 %and177 to i8, !dbg !1446
  %140 = load i8*, i8** %iv, align 8, !dbg !1446
  %incdec.ptr179 = getelementptr inbounds i8, i8* %140, i32 1, !dbg !1446
  store i8* %incdec.ptr179, i8** %iv, align 8, !dbg !1446
  store i8 %conv178, i8* %140, align 1, !dbg !1446
  %141 = load i32, i32* %tout1, align 4, !dbg !1447
  %and180 = and i32 %141, 255, !dbg !1447
  %conv181 = trunc i32 %and180 to i8, !dbg !1447
  %142 = load i8*, i8** %iv, align 8, !dbg !1447
  %incdec.ptr182 = getelementptr inbounds i8, i8* %142, i32 1, !dbg !1447
  store i8* %incdec.ptr182, i8** %iv, align 8, !dbg !1447
  store i8 %conv181, i8* %142, align 1, !dbg !1447
  %143 = load i32, i32* %tout1, align 4, !dbg !1447
  %shr183 = lshr i32 %143, 8, !dbg !1447
  %and184 = and i32 %shr183, 255, !dbg !1447
  %conv185 = trunc i32 %and184 to i8, !dbg !1447
  %144 = load i8*, i8** %iv, align 8, !dbg !1447
  %incdec.ptr186 = getelementptr inbounds i8, i8* %144, i32 1, !dbg !1447
  store i8* %incdec.ptr186, i8** %iv, align 8, !dbg !1447
  store i8 %conv185, i8* %144, align 1, !dbg !1447
  %145 = load i32, i32* %tout1, align 4, !dbg !1447
  %shr187 = lshr i32 %145, 16, !dbg !1447
  %and188 = and i32 %shr187, 255, !dbg !1447
  %conv189 = trunc i32 %and188 to i8, !dbg !1447
  %146 = load i8*, i8** %iv, align 8, !dbg !1447
  %incdec.ptr190 = getelementptr inbounds i8, i8* %146, i32 1, !dbg !1447
  store i8* %incdec.ptr190, i8** %iv, align 8, !dbg !1447
  store i8 %conv189, i8* %146, align 1, !dbg !1447
  %147 = load i32, i32* %tout1, align 4, !dbg !1447
  %shr191 = lshr i32 %147, 24, !dbg !1447
  %and192 = and i32 %shr191, 255, !dbg !1447
  %conv193 = trunc i32 %and192 to i8, !dbg !1447
  %148 = load i8*, i8** %iv, align 8, !dbg !1447
  %incdec.ptr194 = getelementptr inbounds i8, i8* %148, i32 1, !dbg !1447
  store i8* %incdec.ptr194, i8** %iv, align 8, !dbg !1447
  store i8 %conv193, i8* %148, align 1, !dbg !1447
  br label %if.end408, !dbg !1448

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %t0, metadata !1449, metadata !DIExpression()), !dbg !1451
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !1452, metadata !DIExpression()), !dbg !1453
  %149 = load i8*, i8** %iv, align 8, !dbg !1454
  %incdec.ptr195 = getelementptr inbounds i8, i8* %149, i32 1, !dbg !1454
  store i8* %incdec.ptr195, i8** %iv, align 8, !dbg !1454
  %150 = load i8, i8* %149, align 1, !dbg !1454
  %conv196 = zext i8 %150 to i32, !dbg !1454
  store i32 %conv196, i32* %xor0, align 4, !dbg !1454
  %151 = load i8*, i8** %iv, align 8, !dbg !1454
  %incdec.ptr197 = getelementptr inbounds i8, i8* %151, i32 1, !dbg !1454
  store i8* %incdec.ptr197, i8** %iv, align 8, !dbg !1454
  %152 = load i8, i8* %151, align 1, !dbg !1454
  %conv198 = zext i8 %152 to i32, !dbg !1454
  %shl199 = shl i32 %conv198, 8, !dbg !1454
  %153 = load i32, i32* %xor0, align 4, !dbg !1454
  %or200 = or i32 %153, %shl199, !dbg !1454
  store i32 %or200, i32* %xor0, align 4, !dbg !1454
  %154 = load i8*, i8** %iv, align 8, !dbg !1454
  %incdec.ptr201 = getelementptr inbounds i8, i8* %154, i32 1, !dbg !1454
  store i8* %incdec.ptr201, i8** %iv, align 8, !dbg !1454
  %155 = load i8, i8* %154, align 1, !dbg !1454
  %conv202 = zext i8 %155 to i32, !dbg !1454
  %shl203 = shl i32 %conv202, 16, !dbg !1454
  %156 = load i32, i32* %xor0, align 4, !dbg !1454
  %or204 = or i32 %156, %shl203, !dbg !1454
  store i32 %or204, i32* %xor0, align 4, !dbg !1454
  %157 = load i8*, i8** %iv, align 8, !dbg !1454
  %incdec.ptr205 = getelementptr inbounds i8, i8* %157, i32 1, !dbg !1454
  store i8* %incdec.ptr205, i8** %iv, align 8, !dbg !1454
  %158 = load i8, i8* %157, align 1, !dbg !1454
  %conv206 = zext i8 %158 to i32, !dbg !1454
  %shl207 = shl i32 %conv206, 24, !dbg !1454
  %159 = load i32, i32* %xor0, align 4, !dbg !1454
  %or208 = or i32 %159, %shl207, !dbg !1454
  store i32 %or208, i32* %xor0, align 4, !dbg !1454
  %160 = load i8*, i8** %iv, align 8, !dbg !1455
  %incdec.ptr209 = getelementptr inbounds i8, i8* %160, i32 1, !dbg !1455
  store i8* %incdec.ptr209, i8** %iv, align 8, !dbg !1455
  %161 = load i8, i8* %160, align 1, !dbg !1455
  %conv210 = zext i8 %161 to i32, !dbg !1455
  store i32 %conv210, i32* %xor1, align 4, !dbg !1455
  %162 = load i8*, i8** %iv, align 8, !dbg !1455
  %incdec.ptr211 = getelementptr inbounds i8, i8* %162, i32 1, !dbg !1455
  store i8* %incdec.ptr211, i8** %iv, align 8, !dbg !1455
  %163 = load i8, i8* %162, align 1, !dbg !1455
  %conv212 = zext i8 %163 to i32, !dbg !1455
  %shl213 = shl i32 %conv212, 8, !dbg !1455
  %164 = load i32, i32* %xor1, align 4, !dbg !1455
  %or214 = or i32 %164, %shl213, !dbg !1455
  store i32 %or214, i32* %xor1, align 4, !dbg !1455
  %165 = load i8*, i8** %iv, align 8, !dbg !1455
  %incdec.ptr215 = getelementptr inbounds i8, i8* %165, i32 1, !dbg !1455
  store i8* %incdec.ptr215, i8** %iv, align 8, !dbg !1455
  %166 = load i8, i8* %165, align 1, !dbg !1455
  %conv216 = zext i8 %166 to i32, !dbg !1455
  %shl217 = shl i32 %conv216, 16, !dbg !1455
  %167 = load i32, i32* %xor1, align 4, !dbg !1455
  %or218 = or i32 %167, %shl217, !dbg !1455
  store i32 %or218, i32* %xor1, align 4, !dbg !1455
  %168 = load i8*, i8** %iv, align 8, !dbg !1455
  %incdec.ptr219 = getelementptr inbounds i8, i8* %168, i32 1, !dbg !1455
  store i8* %incdec.ptr219, i8** %iv, align 8, !dbg !1455
  %169 = load i8, i8* %168, align 1, !dbg !1455
  %conv220 = zext i8 %169 to i32, !dbg !1455
  %shl221 = shl i32 %conv220, 24, !dbg !1455
  %170 = load i32, i32* %xor1, align 4, !dbg !1455
  %or222 = or i32 %170, %shl221, !dbg !1455
  store i32 %or222, i32* %xor1, align 4, !dbg !1455
  %171 = load i64, i64* %l, align 8, !dbg !1456
  %sub223 = sub nsw i64 %171, 8, !dbg !1456
  store i64 %sub223, i64* %l, align 8, !dbg !1456
  br label %for.cond224, !dbg !1458

for.cond224:                                      ; preds = %for.inc293, %if.else
  %172 = load i64, i64* %l, align 8, !dbg !1459
  %cmp225 = icmp sge i64 %172, 0, !dbg !1461
  br i1 %cmp225, label %for.body227, label %for.end295, !dbg !1462

for.body227:                                      ; preds = %for.cond224
  %173 = load i8*, i8** %in, align 8, !dbg !1463
  %incdec.ptr228 = getelementptr inbounds i8, i8* %173, i32 1, !dbg !1463
  store i8* %incdec.ptr228, i8** %in, align 8, !dbg !1463
  %174 = load i8, i8* %173, align 1, !dbg !1463
  %conv229 = zext i8 %174 to i32, !dbg !1463
  store i32 %conv229, i32* %tin0, align 4, !dbg !1463
  %175 = load i8*, i8** %in, align 8, !dbg !1463
  %incdec.ptr230 = getelementptr inbounds i8, i8* %175, i32 1, !dbg !1463
  store i8* %incdec.ptr230, i8** %in, align 8, !dbg !1463
  %176 = load i8, i8* %175, align 1, !dbg !1463
  %conv231 = zext i8 %176 to i32, !dbg !1463
  %shl232 = shl i32 %conv231, 8, !dbg !1463
  %177 = load i32, i32* %tin0, align 4, !dbg !1463
  %or233 = or i32 %177, %shl232, !dbg !1463
  store i32 %or233, i32* %tin0, align 4, !dbg !1463
  %178 = load i8*, i8** %in, align 8, !dbg !1463
  %incdec.ptr234 = getelementptr inbounds i8, i8* %178, i32 1, !dbg !1463
  store i8* %incdec.ptr234, i8** %in, align 8, !dbg !1463
  %179 = load i8, i8* %178, align 1, !dbg !1463
  %conv235 = zext i8 %179 to i32, !dbg !1463
  %shl236 = shl i32 %conv235, 16, !dbg !1463
  %180 = load i32, i32* %tin0, align 4, !dbg !1463
  %or237 = or i32 %180, %shl236, !dbg !1463
  store i32 %or237, i32* %tin0, align 4, !dbg !1463
  %181 = load i8*, i8** %in, align 8, !dbg !1463
  %incdec.ptr238 = getelementptr inbounds i8, i8* %181, i32 1, !dbg !1463
  store i8* %incdec.ptr238, i8** %in, align 8, !dbg !1463
  %182 = load i8, i8* %181, align 1, !dbg !1463
  %conv239 = zext i8 %182 to i32, !dbg !1463
  %shl240 = shl i32 %conv239, 24, !dbg !1463
  %183 = load i32, i32* %tin0, align 4, !dbg !1463
  %or241 = or i32 %183, %shl240, !dbg !1463
  store i32 %or241, i32* %tin0, align 4, !dbg !1463
  %184 = load i8*, i8** %in, align 8, !dbg !1465
  %incdec.ptr242 = getelementptr inbounds i8, i8* %184, i32 1, !dbg !1465
  store i8* %incdec.ptr242, i8** %in, align 8, !dbg !1465
  %185 = load i8, i8* %184, align 1, !dbg !1465
  %conv243 = zext i8 %185 to i32, !dbg !1465
  store i32 %conv243, i32* %tin1, align 4, !dbg !1465
  %186 = load i8*, i8** %in, align 8, !dbg !1465
  %incdec.ptr244 = getelementptr inbounds i8, i8* %186, i32 1, !dbg !1465
  store i8* %incdec.ptr244, i8** %in, align 8, !dbg !1465
  %187 = load i8, i8* %186, align 1, !dbg !1465
  %conv245 = zext i8 %187 to i32, !dbg !1465
  %shl246 = shl i32 %conv245, 8, !dbg !1465
  %188 = load i32, i32* %tin1, align 4, !dbg !1465
  %or247 = or i32 %188, %shl246, !dbg !1465
  store i32 %or247, i32* %tin1, align 4, !dbg !1465
  %189 = load i8*, i8** %in, align 8, !dbg !1465
  %incdec.ptr248 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !1465
  store i8* %incdec.ptr248, i8** %in, align 8, !dbg !1465
  %190 = load i8, i8* %189, align 1, !dbg !1465
  %conv249 = zext i8 %190 to i32, !dbg !1465
  %shl250 = shl i32 %conv249, 16, !dbg !1465
  %191 = load i32, i32* %tin1, align 4, !dbg !1465
  %or251 = or i32 %191, %shl250, !dbg !1465
  store i32 %or251, i32* %tin1, align 4, !dbg !1465
  %192 = load i8*, i8** %in, align 8, !dbg !1465
  %incdec.ptr252 = getelementptr inbounds i8, i8* %192, i32 1, !dbg !1465
  store i8* %incdec.ptr252, i8** %in, align 8, !dbg !1465
  %193 = load i8, i8* %192, align 1, !dbg !1465
  %conv253 = zext i8 %193 to i32, !dbg !1465
  %shl254 = shl i32 %conv253, 24, !dbg !1465
  %194 = load i32, i32* %tin1, align 4, !dbg !1465
  %or255 = or i32 %194, %shl254, !dbg !1465
  store i32 %or255, i32* %tin1, align 4, !dbg !1465
  %195 = load i32, i32* %tin0, align 4, !dbg !1466
  store i32 %195, i32* %t0, align 4, !dbg !1467
  %196 = load i32, i32* %tin1, align 4, !dbg !1468
  store i32 %196, i32* %t1, align 4, !dbg !1469
  %197 = load i32, i32* %tin0, align 4, !dbg !1470
  %arrayidx256 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1471
  store i32 %197, i32* %arrayidx256, align 4, !dbg !1472
  %198 = load i32, i32* %tin1, align 4, !dbg !1473
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1474
  store i32 %198, i32* %arrayidx257, align 4, !dbg !1475
  %arraydecay258 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1476
  %199 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !1477
  %200 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !1478
  %201 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !1479
  call void @DES_decrypt3(i32* %arraydecay258, %struct.DES_ks* %199, %struct.DES_ks* %200, %struct.DES_ks* %201), !dbg !1480
  %arrayidx259 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1481
  %202 = load i32, i32* %arrayidx259, align 4, !dbg !1481
  store i32 %202, i32* %tout0, align 4, !dbg !1482
  %arrayidx260 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1483
  %203 = load i32, i32* %arrayidx260, align 4, !dbg !1483
  store i32 %203, i32* %tout1, align 4, !dbg !1484
  %204 = load i32, i32* %xor0, align 4, !dbg !1485
  %205 = load i32, i32* %tout0, align 4, !dbg !1486
  %xor261 = xor i32 %205, %204, !dbg !1486
  store i32 %xor261, i32* %tout0, align 4, !dbg !1486
  %206 = load i32, i32* %xor1, align 4, !dbg !1487
  %207 = load i32, i32* %tout1, align 4, !dbg !1488
  %xor262 = xor i32 %207, %206, !dbg !1488
  store i32 %xor262, i32* %tout1, align 4, !dbg !1488
  %208 = load i32, i32* %tout0, align 4, !dbg !1489
  %and263 = and i32 %208, 255, !dbg !1489
  %conv264 = trunc i32 %and263 to i8, !dbg !1489
  %209 = load i8*, i8** %out, align 8, !dbg !1489
  %incdec.ptr265 = getelementptr inbounds i8, i8* %209, i32 1, !dbg !1489
  store i8* %incdec.ptr265, i8** %out, align 8, !dbg !1489
  store i8 %conv264, i8* %209, align 1, !dbg !1489
  %210 = load i32, i32* %tout0, align 4, !dbg !1489
  %shr266 = lshr i32 %210, 8, !dbg !1489
  %and267 = and i32 %shr266, 255, !dbg !1489
  %conv268 = trunc i32 %and267 to i8, !dbg !1489
  %211 = load i8*, i8** %out, align 8, !dbg !1489
  %incdec.ptr269 = getelementptr inbounds i8, i8* %211, i32 1, !dbg !1489
  store i8* %incdec.ptr269, i8** %out, align 8, !dbg !1489
  store i8 %conv268, i8* %211, align 1, !dbg !1489
  %212 = load i32, i32* %tout0, align 4, !dbg !1489
  %shr270 = lshr i32 %212, 16, !dbg !1489
  %and271 = and i32 %shr270, 255, !dbg !1489
  %conv272 = trunc i32 %and271 to i8, !dbg !1489
  %213 = load i8*, i8** %out, align 8, !dbg !1489
  %incdec.ptr273 = getelementptr inbounds i8, i8* %213, i32 1, !dbg !1489
  store i8* %incdec.ptr273, i8** %out, align 8, !dbg !1489
  store i8 %conv272, i8* %213, align 1, !dbg !1489
  %214 = load i32, i32* %tout0, align 4, !dbg !1489
  %shr274 = lshr i32 %214, 24, !dbg !1489
  %and275 = and i32 %shr274, 255, !dbg !1489
  %conv276 = trunc i32 %and275 to i8, !dbg !1489
  %215 = load i8*, i8** %out, align 8, !dbg !1489
  %incdec.ptr277 = getelementptr inbounds i8, i8* %215, i32 1, !dbg !1489
  store i8* %incdec.ptr277, i8** %out, align 8, !dbg !1489
  store i8 %conv276, i8* %215, align 1, !dbg !1489
  %216 = load i32, i32* %tout1, align 4, !dbg !1490
  %and278 = and i32 %216, 255, !dbg !1490
  %conv279 = trunc i32 %and278 to i8, !dbg !1490
  %217 = load i8*, i8** %out, align 8, !dbg !1490
  %incdec.ptr280 = getelementptr inbounds i8, i8* %217, i32 1, !dbg !1490
  store i8* %incdec.ptr280, i8** %out, align 8, !dbg !1490
  store i8 %conv279, i8* %217, align 1, !dbg !1490
  %218 = load i32, i32* %tout1, align 4, !dbg !1490
  %shr281 = lshr i32 %218, 8, !dbg !1490
  %and282 = and i32 %shr281, 255, !dbg !1490
  %conv283 = trunc i32 %and282 to i8, !dbg !1490
  %219 = load i8*, i8** %out, align 8, !dbg !1490
  %incdec.ptr284 = getelementptr inbounds i8, i8* %219, i32 1, !dbg !1490
  store i8* %incdec.ptr284, i8** %out, align 8, !dbg !1490
  store i8 %conv283, i8* %219, align 1, !dbg !1490
  %220 = load i32, i32* %tout1, align 4, !dbg !1490
  %shr285 = lshr i32 %220, 16, !dbg !1490
  %and286 = and i32 %shr285, 255, !dbg !1490
  %conv287 = trunc i32 %and286 to i8, !dbg !1490
  %221 = load i8*, i8** %out, align 8, !dbg !1490
  %incdec.ptr288 = getelementptr inbounds i8, i8* %221, i32 1, !dbg !1490
  store i8* %incdec.ptr288, i8** %out, align 8, !dbg !1490
  store i8 %conv287, i8* %221, align 1, !dbg !1490
  %222 = load i32, i32* %tout1, align 4, !dbg !1490
  %shr289 = lshr i32 %222, 24, !dbg !1490
  %and290 = and i32 %shr289, 255, !dbg !1490
  %conv291 = trunc i32 %and290 to i8, !dbg !1490
  %223 = load i8*, i8** %out, align 8, !dbg !1490
  %incdec.ptr292 = getelementptr inbounds i8, i8* %223, i32 1, !dbg !1490
  store i8* %incdec.ptr292, i8** %out, align 8, !dbg !1490
  store i8 %conv291, i8* %223, align 1, !dbg !1490
  %224 = load i32, i32* %t0, align 4, !dbg !1491
  store i32 %224, i32* %xor0, align 4, !dbg !1492
  %225 = load i32, i32* %t1, align 4, !dbg !1493
  store i32 %225, i32* %xor1, align 4, !dbg !1494
  br label %for.inc293, !dbg !1495

for.inc293:                                       ; preds = %for.body227
  %226 = load i64, i64* %l, align 8, !dbg !1496
  %sub294 = sub nsw i64 %226, 8, !dbg !1496
  store i64 %sub294, i64* %l, align 8, !dbg !1496
  br label %for.cond224, !dbg !1497, !llvm.loop !1498

for.end295:                                       ; preds = %for.cond224
  %227 = load i64, i64* %l, align 8, !dbg !1500
  %cmp296 = icmp ne i64 %227, -8, !dbg !1502
  br i1 %cmp296, label %if.then298, label %if.end376, !dbg !1503

if.then298:                                       ; preds = %for.end295
  %228 = load i8*, i8** %in, align 8, !dbg !1504
  %incdec.ptr299 = getelementptr inbounds i8, i8* %228, i32 1, !dbg !1504
  store i8* %incdec.ptr299, i8** %in, align 8, !dbg !1504
  %229 = load i8, i8* %228, align 1, !dbg !1504
  %conv300 = zext i8 %229 to i32, !dbg !1504
  store i32 %conv300, i32* %tin0, align 4, !dbg !1504
  %230 = load i8*, i8** %in, align 8, !dbg !1504
  %incdec.ptr301 = getelementptr inbounds i8, i8* %230, i32 1, !dbg !1504
  store i8* %incdec.ptr301, i8** %in, align 8, !dbg !1504
  %231 = load i8, i8* %230, align 1, !dbg !1504
  %conv302 = zext i8 %231 to i32, !dbg !1504
  %shl303 = shl i32 %conv302, 8, !dbg !1504
  %232 = load i32, i32* %tin0, align 4, !dbg !1504
  %or304 = or i32 %232, %shl303, !dbg !1504
  store i32 %or304, i32* %tin0, align 4, !dbg !1504
  %233 = load i8*, i8** %in, align 8, !dbg !1504
  %incdec.ptr305 = getelementptr inbounds i8, i8* %233, i32 1, !dbg !1504
  store i8* %incdec.ptr305, i8** %in, align 8, !dbg !1504
  %234 = load i8, i8* %233, align 1, !dbg !1504
  %conv306 = zext i8 %234 to i32, !dbg !1504
  %shl307 = shl i32 %conv306, 16, !dbg !1504
  %235 = load i32, i32* %tin0, align 4, !dbg !1504
  %or308 = or i32 %235, %shl307, !dbg !1504
  store i32 %or308, i32* %tin0, align 4, !dbg !1504
  %236 = load i8*, i8** %in, align 8, !dbg !1504
  %incdec.ptr309 = getelementptr inbounds i8, i8* %236, i32 1, !dbg !1504
  store i8* %incdec.ptr309, i8** %in, align 8, !dbg !1504
  %237 = load i8, i8* %236, align 1, !dbg !1504
  %conv310 = zext i8 %237 to i32, !dbg !1504
  %shl311 = shl i32 %conv310, 24, !dbg !1504
  %238 = load i32, i32* %tin0, align 4, !dbg !1504
  %or312 = or i32 %238, %shl311, !dbg !1504
  store i32 %or312, i32* %tin0, align 4, !dbg !1504
  %239 = load i8*, i8** %in, align 8, !dbg !1506
  %incdec.ptr313 = getelementptr inbounds i8, i8* %239, i32 1, !dbg !1506
  store i8* %incdec.ptr313, i8** %in, align 8, !dbg !1506
  %240 = load i8, i8* %239, align 1, !dbg !1506
  %conv314 = zext i8 %240 to i32, !dbg !1506
  store i32 %conv314, i32* %tin1, align 4, !dbg !1506
  %241 = load i8*, i8** %in, align 8, !dbg !1506
  %incdec.ptr315 = getelementptr inbounds i8, i8* %241, i32 1, !dbg !1506
  store i8* %incdec.ptr315, i8** %in, align 8, !dbg !1506
  %242 = load i8, i8* %241, align 1, !dbg !1506
  %conv316 = zext i8 %242 to i32, !dbg !1506
  %shl317 = shl i32 %conv316, 8, !dbg !1506
  %243 = load i32, i32* %tin1, align 4, !dbg !1506
  %or318 = or i32 %243, %shl317, !dbg !1506
  store i32 %or318, i32* %tin1, align 4, !dbg !1506
  %244 = load i8*, i8** %in, align 8, !dbg !1506
  %incdec.ptr319 = getelementptr inbounds i8, i8* %244, i32 1, !dbg !1506
  store i8* %incdec.ptr319, i8** %in, align 8, !dbg !1506
  %245 = load i8, i8* %244, align 1, !dbg !1506
  %conv320 = zext i8 %245 to i32, !dbg !1506
  %shl321 = shl i32 %conv320, 16, !dbg !1506
  %246 = load i32, i32* %tin1, align 4, !dbg !1506
  %or322 = or i32 %246, %shl321, !dbg !1506
  store i32 %or322, i32* %tin1, align 4, !dbg !1506
  %247 = load i8*, i8** %in, align 8, !dbg !1506
  %incdec.ptr323 = getelementptr inbounds i8, i8* %247, i32 1, !dbg !1506
  store i8* %incdec.ptr323, i8** %in, align 8, !dbg !1506
  %248 = load i8, i8* %247, align 1, !dbg !1506
  %conv324 = zext i8 %248 to i32, !dbg !1506
  %shl325 = shl i32 %conv324, 24, !dbg !1506
  %249 = load i32, i32* %tin1, align 4, !dbg !1506
  %or326 = or i32 %249, %shl325, !dbg !1506
  store i32 %or326, i32* %tin1, align 4, !dbg !1506
  %250 = load i32, i32* %tin0, align 4, !dbg !1507
  store i32 %250, i32* %t0, align 4, !dbg !1508
  %251 = load i32, i32* %tin1, align 4, !dbg !1509
  store i32 %251, i32* %t1, align 4, !dbg !1510
  %252 = load i32, i32* %tin0, align 4, !dbg !1511
  %arrayidx327 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1512
  store i32 %252, i32* %arrayidx327, align 4, !dbg !1513
  %253 = load i32, i32* %tin1, align 4, !dbg !1514
  %arrayidx328 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1515
  store i32 %253, i32* %arrayidx328, align 4, !dbg !1516
  %arraydecay329 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1517
  %254 = load %struct.DES_ks*, %struct.DES_ks** %ks1.addr, align 8, !dbg !1518
  %255 = load %struct.DES_ks*, %struct.DES_ks** %ks2.addr, align 8, !dbg !1519
  %256 = load %struct.DES_ks*, %struct.DES_ks** %ks3.addr, align 8, !dbg !1520
  call void @DES_decrypt3(i32* %arraydecay329, %struct.DES_ks* %254, %struct.DES_ks* %255, %struct.DES_ks* %256), !dbg !1521
  %arrayidx330 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1522
  %257 = load i32, i32* %arrayidx330, align 4, !dbg !1522
  store i32 %257, i32* %tout0, align 4, !dbg !1523
  %arrayidx331 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1524
  %258 = load i32, i32* %arrayidx331, align 4, !dbg !1524
  store i32 %258, i32* %tout1, align 4, !dbg !1525
  %259 = load i32, i32* %xor0, align 4, !dbg !1526
  %260 = load i32, i32* %tout0, align 4, !dbg !1527
  %xor332 = xor i32 %260, %259, !dbg !1527
  store i32 %xor332, i32* %tout0, align 4, !dbg !1527
  %261 = load i32, i32* %xor1, align 4, !dbg !1528
  %262 = load i32, i32* %tout1, align 4, !dbg !1529
  %xor333 = xor i32 %262, %261, !dbg !1529
  store i32 %xor333, i32* %tout1, align 4, !dbg !1529
  %263 = load i64, i64* %l, align 8, !dbg !1530
  %add334 = add nsw i64 %263, 8, !dbg !1530
  %264 = load i8*, i8** %out, align 8, !dbg !1530
  %add.ptr335 = getelementptr inbounds i8, i8* %264, i64 %add334, !dbg !1530
  store i8* %add.ptr335, i8** %out, align 8, !dbg !1530
  %265 = load i64, i64* %l, align 8, !dbg !1530
  %add336 = add nsw i64 %265, 8, !dbg !1530
  switch i64 %add336, label %sw.epilog375 [
    i64 8, label %sw.bb337
    i64 7, label %sw.bb342
    i64 6, label %sw.bb347
    i64 5, label %sw.bb352
    i64 4, label %sw.bb356
    i64 3, label %sw.bb361
    i64 2, label %sw.bb366
    i64 1, label %sw.bb371
  ], !dbg !1530

sw.bb337:                                         ; preds = %if.then298
  %266 = load i32, i32* %tout1, align 4, !dbg !1532
  %shr338 = lshr i32 %266, 24, !dbg !1532
  %and339 = and i32 %shr338, 255, !dbg !1532
  %conv340 = trunc i32 %and339 to i8, !dbg !1532
  %267 = load i8*, i8** %out, align 8, !dbg !1532
  %incdec.ptr341 = getelementptr inbounds i8, i8* %267, i32 -1, !dbg !1532
  store i8* %incdec.ptr341, i8** %out, align 8, !dbg !1532
  store i8 %conv340, i8* %incdec.ptr341, align 1, !dbg !1532
  br label %sw.bb342, !dbg !1532

sw.bb342:                                         ; preds = %if.then298, %sw.bb337
  %268 = load i32, i32* %tout1, align 4, !dbg !1532
  %shr343 = lshr i32 %268, 16, !dbg !1532
  %and344 = and i32 %shr343, 255, !dbg !1532
  %conv345 = trunc i32 %and344 to i8, !dbg !1532
  %269 = load i8*, i8** %out, align 8, !dbg !1532
  %incdec.ptr346 = getelementptr inbounds i8, i8* %269, i32 -1, !dbg !1532
  store i8* %incdec.ptr346, i8** %out, align 8, !dbg !1532
  store i8 %conv345, i8* %incdec.ptr346, align 1, !dbg !1532
  br label %sw.bb347, !dbg !1532

sw.bb347:                                         ; preds = %if.then298, %sw.bb342
  %270 = load i32, i32* %tout1, align 4, !dbg !1532
  %shr348 = lshr i32 %270, 8, !dbg !1532
  %and349 = and i32 %shr348, 255, !dbg !1532
  %conv350 = trunc i32 %and349 to i8, !dbg !1532
  %271 = load i8*, i8** %out, align 8, !dbg !1532
  %incdec.ptr351 = getelementptr inbounds i8, i8* %271, i32 -1, !dbg !1532
  store i8* %incdec.ptr351, i8** %out, align 8, !dbg !1532
  store i8 %conv350, i8* %incdec.ptr351, align 1, !dbg !1532
  br label %sw.bb352, !dbg !1532

sw.bb352:                                         ; preds = %if.then298, %sw.bb347
  %272 = load i32, i32* %tout1, align 4, !dbg !1532
  %and353 = and i32 %272, 255, !dbg !1532
  %conv354 = trunc i32 %and353 to i8, !dbg !1532
  %273 = load i8*, i8** %out, align 8, !dbg !1532
  %incdec.ptr355 = getelementptr inbounds i8, i8* %273, i32 -1, !dbg !1532
  store i8* %incdec.ptr355, i8** %out, align 8, !dbg !1532
  store i8 %conv354, i8* %incdec.ptr355, align 1, !dbg !1532
  br label %sw.bb356, !dbg !1532

sw.bb356:                                         ; preds = %if.then298, %sw.bb352
  %274 = load i32, i32* %tout0, align 4, !dbg !1532
  %shr357 = lshr i32 %274, 24, !dbg !1532
  %and358 = and i32 %shr357, 255, !dbg !1532
  %conv359 = trunc i32 %and358 to i8, !dbg !1532
  %275 = load i8*, i8** %out, align 8, !dbg !1532
  %incdec.ptr360 = getelementptr inbounds i8, i8* %275, i32 -1, !dbg !1532
  store i8* %incdec.ptr360, i8** %out, align 8, !dbg !1532
  store i8 %conv359, i8* %incdec.ptr360, align 1, !dbg !1532
  br label %sw.bb361, !dbg !1532

sw.bb361:                                         ; preds = %if.then298, %sw.bb356
  %276 = load i32, i32* %tout0, align 4, !dbg !1532
  %shr362 = lshr i32 %276, 16, !dbg !1532
  %and363 = and i32 %shr362, 255, !dbg !1532
  %conv364 = trunc i32 %and363 to i8, !dbg !1532
  %277 = load i8*, i8** %out, align 8, !dbg !1532
  %incdec.ptr365 = getelementptr inbounds i8, i8* %277, i32 -1, !dbg !1532
  store i8* %incdec.ptr365, i8** %out, align 8, !dbg !1532
  store i8 %conv364, i8* %incdec.ptr365, align 1, !dbg !1532
  br label %sw.bb366, !dbg !1532

sw.bb366:                                         ; preds = %if.then298, %sw.bb361
  %278 = load i32, i32* %tout0, align 4, !dbg !1532
  %shr367 = lshr i32 %278, 8, !dbg !1532
  %and368 = and i32 %shr367, 255, !dbg !1532
  %conv369 = trunc i32 %and368 to i8, !dbg !1532
  %279 = load i8*, i8** %out, align 8, !dbg !1532
  %incdec.ptr370 = getelementptr inbounds i8, i8* %279, i32 -1, !dbg !1532
  store i8* %incdec.ptr370, i8** %out, align 8, !dbg !1532
  store i8 %conv369, i8* %incdec.ptr370, align 1, !dbg !1532
  br label %sw.bb371, !dbg !1532

sw.bb371:                                         ; preds = %if.then298, %sw.bb366
  %280 = load i32, i32* %tout0, align 4, !dbg !1532
  %and372 = and i32 %280, 255, !dbg !1532
  %conv373 = trunc i32 %and372 to i8, !dbg !1532
  %281 = load i8*, i8** %out, align 8, !dbg !1532
  %incdec.ptr374 = getelementptr inbounds i8, i8* %281, i32 -1, !dbg !1532
  store i8* %incdec.ptr374, i8** %out, align 8, !dbg !1532
  store i8 %conv373, i8* %incdec.ptr374, align 1, !dbg !1532
  br label %sw.epilog375, !dbg !1532

sw.epilog375:                                     ; preds = %sw.bb371, %if.then298
  %282 = load i32, i32* %t0, align 4, !dbg !1534
  store i32 %282, i32* %xor0, align 4, !dbg !1535
  %283 = load i32, i32* %t1, align 4, !dbg !1536
  store i32 %283, i32* %xor1, align 4, !dbg !1537
  br label %if.end376, !dbg !1538

if.end376:                                        ; preds = %sw.epilog375, %for.end295
  %284 = load [8 x i8]*, [8 x i8]** %ivec.addr, align 8, !dbg !1539
  %arrayidx377 = getelementptr inbounds [8 x i8], [8 x i8]* %284, i64 0, i64 0, !dbg !1540
  store i8* %arrayidx377, i8** %iv, align 8, !dbg !1541
  %285 = load i32, i32* %xor0, align 4, !dbg !1542
  %and378 = and i32 %285, 255, !dbg !1542
  %conv379 = trunc i32 %and378 to i8, !dbg !1542
  %286 = load i8*, i8** %iv, align 8, !dbg !1542
  %incdec.ptr380 = getelementptr inbounds i8, i8* %286, i32 1, !dbg !1542
  store i8* %incdec.ptr380, i8** %iv, align 8, !dbg !1542
  store i8 %conv379, i8* %286, align 1, !dbg !1542
  %287 = load i32, i32* %xor0, align 4, !dbg !1542
  %shr381 = lshr i32 %287, 8, !dbg !1542
  %and382 = and i32 %shr381, 255, !dbg !1542
  %conv383 = trunc i32 %and382 to i8, !dbg !1542
  %288 = load i8*, i8** %iv, align 8, !dbg !1542
  %incdec.ptr384 = getelementptr inbounds i8, i8* %288, i32 1, !dbg !1542
  store i8* %incdec.ptr384, i8** %iv, align 8, !dbg !1542
  store i8 %conv383, i8* %288, align 1, !dbg !1542
  %289 = load i32, i32* %xor0, align 4, !dbg !1542
  %shr385 = lshr i32 %289, 16, !dbg !1542
  %and386 = and i32 %shr385, 255, !dbg !1542
  %conv387 = trunc i32 %and386 to i8, !dbg !1542
  %290 = load i8*, i8** %iv, align 8, !dbg !1542
  %incdec.ptr388 = getelementptr inbounds i8, i8* %290, i32 1, !dbg !1542
  store i8* %incdec.ptr388, i8** %iv, align 8, !dbg !1542
  store i8 %conv387, i8* %290, align 1, !dbg !1542
  %291 = load i32, i32* %xor0, align 4, !dbg !1542
  %shr389 = lshr i32 %291, 24, !dbg !1542
  %and390 = and i32 %shr389, 255, !dbg !1542
  %conv391 = trunc i32 %and390 to i8, !dbg !1542
  %292 = load i8*, i8** %iv, align 8, !dbg !1542
  %incdec.ptr392 = getelementptr inbounds i8, i8* %292, i32 1, !dbg !1542
  store i8* %incdec.ptr392, i8** %iv, align 8, !dbg !1542
  store i8 %conv391, i8* %292, align 1, !dbg !1542
  %293 = load i32, i32* %xor1, align 4, !dbg !1543
  %and393 = and i32 %293, 255, !dbg !1543
  %conv394 = trunc i32 %and393 to i8, !dbg !1543
  %294 = load i8*, i8** %iv, align 8, !dbg !1543
  %incdec.ptr395 = getelementptr inbounds i8, i8* %294, i32 1, !dbg !1543
  store i8* %incdec.ptr395, i8** %iv, align 8, !dbg !1543
  store i8 %conv394, i8* %294, align 1, !dbg !1543
  %295 = load i32, i32* %xor1, align 4, !dbg !1543
  %shr396 = lshr i32 %295, 8, !dbg !1543
  %and397 = and i32 %shr396, 255, !dbg !1543
  %conv398 = trunc i32 %and397 to i8, !dbg !1543
  %296 = load i8*, i8** %iv, align 8, !dbg !1543
  %incdec.ptr399 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !1543
  store i8* %incdec.ptr399, i8** %iv, align 8, !dbg !1543
  store i8 %conv398, i8* %296, align 1, !dbg !1543
  %297 = load i32, i32* %xor1, align 4, !dbg !1543
  %shr400 = lshr i32 %297, 16, !dbg !1543
  %and401 = and i32 %shr400, 255, !dbg !1543
  %conv402 = trunc i32 %and401 to i8, !dbg !1543
  %298 = load i8*, i8** %iv, align 8, !dbg !1543
  %incdec.ptr403 = getelementptr inbounds i8, i8* %298, i32 1, !dbg !1543
  store i8* %incdec.ptr403, i8** %iv, align 8, !dbg !1543
  store i8 %conv402, i8* %298, align 1, !dbg !1543
  %299 = load i32, i32* %xor1, align 4, !dbg !1543
  %shr404 = lshr i32 %299, 24, !dbg !1543
  %and405 = and i32 %shr404, 255, !dbg !1543
  %conv406 = trunc i32 %and405 to i8, !dbg !1543
  %300 = load i8*, i8** %iv, align 8, !dbg !1543
  %incdec.ptr407 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !1543
  store i8* %incdec.ptr407, i8** %iv, align 8, !dbg !1543
  store i8 %conv406, i8* %300, align 1, !dbg !1543
  br label %if.end408

if.end408:                                        ; preds = %if.end376, %if.end
  store i32 0, i32* %xor1, align 4, !dbg !1544
  store i32 0, i32* %xor0, align 4, !dbg !1545
  store i32 0, i32* %tout1, align 4, !dbg !1546
  store i32 0, i32* %tout0, align 4, !dbg !1547
  store i32 0, i32* %tin1, align 4, !dbg !1548
  store i32 0, i32* %tin0, align 4, !dbg !1549
  %arrayidx409 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1, !dbg !1550
  store i32 0, i32* %arrayidx409, align 4, !dbg !1551
  %arrayidx410 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0, !dbg !1552
  store i32 0, i32* %arrayidx410, align 4, !dbg !1553
  ret void, !dbg !1554
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @DES_ecb_encrypt([8 x i8]* %input, [8 x i8]* %output, %struct.DES_ks* %ks, i32 %enc) #0 !dbg !1555 {
entry:
  %data.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i, metadata !44, metadata !DIExpression()), !dbg !1560
  %ks.addr.i = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i, metadata !46, metadata !DIExpression()), !dbg !1562
  %enc.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i, metadata !48, metadata !DIExpression()), !dbg !1563
  %l.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i, metadata !50, metadata !DIExpression()), !dbg !1564
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !52, metadata !DIExpression()), !dbg !1565
  %t.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i, metadata !54, metadata !DIExpression()), !dbg !1566
  %u.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i, metadata !56, metadata !DIExpression()), !dbg !1567
  %s.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i, metadata !58, metadata !DIExpression()), !dbg !1568
  %tt.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i, metadata !64, metadata !DIExpression()), !dbg !1569
  %ret.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i, metadata !67, metadata !DIExpression()), !dbg !1570
  %tmp.i = alloca i32, align 4
  %ret40.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret40.i, metadata !74, metadata !DIExpression()), !dbg !1571
  %tmp41.i = alloca i32, align 4
  %ret51.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret51.i, metadata !91, metadata !DIExpression()), !dbg !1572
  %tmp52.i = alloca i32, align 4
  %ret96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret96.i, metadata !97, metadata !DIExpression()), !dbg !1573
  %tmp97.i = alloca i32, align 4
  %ret142.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret142.i, metadata !103, metadata !DIExpression()), !dbg !1574
  %tmp143.i = alloca i32, align 4
  %ret188.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret188.i, metadata !109, metadata !DIExpression()), !dbg !1575
  %tmp189.i = alloca i32, align 4
  %ret234.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret234.i, metadata !115, metadata !DIExpression()), !dbg !1576
  %tmp235.i = alloca i32, align 4
  %ret280.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret280.i, metadata !121, metadata !DIExpression()), !dbg !1577
  %tmp281.i = alloca i32, align 4
  %ret326.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret326.i, metadata !127, metadata !DIExpression()), !dbg !1578
  %tmp327.i = alloca i32, align 4
  %ret372.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret372.i, metadata !133, metadata !DIExpression()), !dbg !1579
  %tmp373.i = alloca i32, align 4
  %ret418.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret418.i, metadata !139, metadata !DIExpression()), !dbg !1580
  %tmp419.i = alloca i32, align 4
  %ret464.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret464.i, metadata !145, metadata !DIExpression()), !dbg !1581
  %tmp465.i = alloca i32, align 4
  %ret510.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret510.i, metadata !151, metadata !DIExpression()), !dbg !1582
  %tmp511.i = alloca i32, align 4
  %ret556.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret556.i, metadata !157, metadata !DIExpression()), !dbg !1583
  %tmp557.i = alloca i32, align 4
  %ret602.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret602.i, metadata !163, metadata !DIExpression()), !dbg !1584
  %tmp603.i = alloca i32, align 4
  %ret648.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret648.i, metadata !169, metadata !DIExpression()), !dbg !1585
  %tmp649.i = alloca i32, align 4
  %ret694.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret694.i, metadata !175, metadata !DIExpression()), !dbg !1586
  %tmp695.i = alloca i32, align 4
  %ret740.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret740.i, metadata !181, metadata !DIExpression()), !dbg !1587
  %tmp741.i = alloca i32, align 4
  %ret786.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret786.i, metadata !189, metadata !DIExpression()), !dbg !1588
  %tmp787.i = alloca i32, align 4
  %ret832.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret832.i, metadata !195, metadata !DIExpression()), !dbg !1589
  %tmp833.i = alloca i32, align 4
  %ret878.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret878.i, metadata !201, metadata !DIExpression()), !dbg !1590
  %tmp879.i = alloca i32, align 4
  %ret924.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret924.i, metadata !207, metadata !DIExpression()), !dbg !1591
  %tmp925.i = alloca i32, align 4
  %ret970.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret970.i, metadata !213, metadata !DIExpression()), !dbg !1592
  %tmp971.i = alloca i32, align 4
  %ret1016.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1016.i, metadata !219, metadata !DIExpression()), !dbg !1593
  %tmp1017.i = alloca i32, align 4
  %ret1062.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1062.i, metadata !225, metadata !DIExpression()), !dbg !1594
  %tmp1063.i = alloca i32, align 4
  %ret1108.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1108.i, metadata !231, metadata !DIExpression()), !dbg !1595
  %tmp1109.i = alloca i32, align 4
  %ret1154.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1154.i, metadata !237, metadata !DIExpression()), !dbg !1596
  %tmp1155.i = alloca i32, align 4
  %ret1200.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1200.i, metadata !243, metadata !DIExpression()), !dbg !1597
  %tmp1201.i = alloca i32, align 4
  %ret1246.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1246.i, metadata !249, metadata !DIExpression()), !dbg !1598
  %tmp1247.i = alloca i32, align 4
  %ret1292.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1292.i, metadata !255, metadata !DIExpression()), !dbg !1599
  %tmp1293.i = alloca i32, align 4
  %ret1338.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1338.i, metadata !261, metadata !DIExpression()), !dbg !1600
  %tmp1339.i = alloca i32, align 4
  %ret1384.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1384.i, metadata !267, metadata !DIExpression()), !dbg !1601
  %tmp1385.i = alloca i32, align 4
  %ret1430.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1430.i, metadata !273, metadata !DIExpression()), !dbg !1602
  %tmp1431.i = alloca i32, align 4
  %ret1476.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1476.i, metadata !279, metadata !DIExpression()), !dbg !1603
  %tmp1477.i = alloca i32, align 4
  %ret1518.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1518.i, metadata !283, metadata !DIExpression()), !dbg !1604
  %tmp1519.i = alloca i32, align 4
  %ret1523.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1523.i, metadata !290, metadata !DIExpression()), !dbg !1605
  %tmp1524.i = alloca i32, align 4
  %tt1528.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1528.i, metadata !297, metadata !DIExpression()), !dbg !1606
  %input.addr = alloca [8 x i8]*, align 8
  %output.addr = alloca [8 x i8]*, align 8
  %ks.addr = alloca %struct.DES_ks*, align 8
  %enc.addr = alloca i32, align 4
  %l = alloca i32, align 4
  %ll = alloca [2 x i32], align 4
  %in = alloca i8*, align 8
  %out = alloca i8*, align 8
  store [8 x i8]* %input, [8 x i8]** %input.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %input.addr, metadata !1607, metadata !DIExpression()), !dbg !1608
  store [8 x i8]* %output, [8 x i8]** %output.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %output.addr, metadata !1609, metadata !DIExpression()), !dbg !1610
  store %struct.DES_ks* %ks, %struct.DES_ks** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr, metadata !1611, metadata !DIExpression()), !dbg !1612
  store i32 %enc, i32* %enc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr, metadata !1613, metadata !DIExpression()), !dbg !1614
  call void @llvm.dbg.declare(metadata i32* %l, metadata !1615, metadata !DIExpression()), !dbg !1616
  call void @llvm.dbg.declare(metadata [2 x i32]* %ll, metadata !1617, metadata !DIExpression()), !dbg !1618
  call void @llvm.dbg.declare(metadata i8** %in, metadata !1619, metadata !DIExpression()), !dbg !1620
  %0 = load [8 x i8]*, [8 x i8]** %input.addr, align 8, !dbg !1621
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %0, i64 0, i64 0, !dbg !1622
  store i8* %arrayidx, i8** %in, align 8, !dbg !1620
  call void @llvm.dbg.declare(metadata i8** %out, metadata !1623, metadata !DIExpression()), !dbg !1624
  %1 = load [8 x i8]*, [8 x i8]** %output.addr, align 8, !dbg !1625
  %arrayidx1 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0, !dbg !1626
  store i8* %arrayidx1, i8** %out, align 8, !dbg !1624
  %2 = load i8*, i8** %in, align 8, !dbg !1627
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !1627
  store i8* %incdec.ptr, i8** %in, align 8, !dbg !1627
  %3 = load i8, i8* %2, align 1, !dbg !1627
  %conv = zext i8 %3 to i32, !dbg !1627
  store i32 %conv, i32* %l, align 4, !dbg !1627
  %4 = load i8*, i8** %in, align 8, !dbg !1627
  %incdec.ptr2 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !1627
  store i8* %incdec.ptr2, i8** %in, align 8, !dbg !1627
  %5 = load i8, i8* %4, align 1, !dbg !1627
  %conv3 = zext i8 %5 to i32, !dbg !1627
  %shl = shl i32 %conv3, 8, !dbg !1627
  %6 = load i32, i32* %l, align 4, !dbg !1627
  %or = or i32 %6, %shl, !dbg !1627
  store i32 %or, i32* %l, align 4, !dbg !1627
  %7 = load i8*, i8** %in, align 8, !dbg !1627
  %incdec.ptr4 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !1627
  store i8* %incdec.ptr4, i8** %in, align 8, !dbg !1627
  %8 = load i8, i8* %7, align 1, !dbg !1627
  %conv5 = zext i8 %8 to i32, !dbg !1627
  %shl6 = shl i32 %conv5, 16, !dbg !1627
  %9 = load i32, i32* %l, align 4, !dbg !1627
  %or7 = or i32 %9, %shl6, !dbg !1627
  store i32 %or7, i32* %l, align 4, !dbg !1627
  %10 = load i8*, i8** %in, align 8, !dbg !1627
  %incdec.ptr8 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !1627
  store i8* %incdec.ptr8, i8** %in, align 8, !dbg !1627
  %11 = load i8, i8* %10, align 1, !dbg !1627
  %conv9 = zext i8 %11 to i32, !dbg !1627
  %shl10 = shl i32 %conv9, 24, !dbg !1627
  %12 = load i32, i32* %l, align 4, !dbg !1627
  %or11 = or i32 %12, %shl10, !dbg !1627
  store i32 %or11, i32* %l, align 4, !dbg !1627
  %13 = load i32, i32* %l, align 4, !dbg !1628
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0, !dbg !1629
  store i32 %13, i32* %arrayidx12, align 4, !dbg !1630
  %14 = load i8*, i8** %in, align 8, !dbg !1631
  %incdec.ptr13 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !1631
  store i8* %incdec.ptr13, i8** %in, align 8, !dbg !1631
  %15 = load i8, i8* %14, align 1, !dbg !1631
  %conv14 = zext i8 %15 to i32, !dbg !1631
  store i32 %conv14, i32* %l, align 4, !dbg !1631
  %16 = load i8*, i8** %in, align 8, !dbg !1631
  %incdec.ptr15 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !1631
  store i8* %incdec.ptr15, i8** %in, align 8, !dbg !1631
  %17 = load i8, i8* %16, align 1, !dbg !1631
  %conv16 = zext i8 %17 to i32, !dbg !1631
  %shl17 = shl i32 %conv16, 8, !dbg !1631
  %18 = load i32, i32* %l, align 4, !dbg !1631
  %or18 = or i32 %18, %shl17, !dbg !1631
  store i32 %or18, i32* %l, align 4, !dbg !1631
  %19 = load i8*, i8** %in, align 8, !dbg !1631
  %incdec.ptr19 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !1631
  store i8* %incdec.ptr19, i8** %in, align 8, !dbg !1631
  %20 = load i8, i8* %19, align 1, !dbg !1631
  %conv20 = zext i8 %20 to i32, !dbg !1631
  %shl21 = shl i32 %conv20, 16, !dbg !1631
  %21 = load i32, i32* %l, align 4, !dbg !1631
  %or22 = or i32 %21, %shl21, !dbg !1631
  store i32 %or22, i32* %l, align 4, !dbg !1631
  %22 = load i8*, i8** %in, align 8, !dbg !1631
  %incdec.ptr23 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !1631
  store i8* %incdec.ptr23, i8** %in, align 8, !dbg !1631
  %23 = load i8, i8* %22, align 1, !dbg !1631
  %conv24 = zext i8 %23 to i32, !dbg !1631
  %shl25 = shl i32 %conv24, 24, !dbg !1631
  %24 = load i32, i32* %l, align 4, !dbg !1631
  %or26 = or i32 %24, %shl25, !dbg !1631
  store i32 %or26, i32* %l, align 4, !dbg !1631
  %25 = load i32, i32* %l, align 4, !dbg !1632
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 1, !dbg !1633
  store i32 %25, i32* %arrayidx27, align 4, !dbg !1634
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0, !dbg !1635
  %26 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr, align 8, !dbg !1636
  %27 = load i32, i32* %enc.addr, align 4, !dbg !1637
  store i32* %arraydecay, i32** %data.addr.i, align 8
  store %struct.DES_ks* %26, %struct.DES_ks** %ks.addr.i, align 8
  store i32 %27, i32* %enc.addr.i, align 4
  %28 = load i32*, i32** %data.addr.i, align 8, !dbg !1638
  %29 = load i32, i32* %28, align 4, !dbg !1638
  store i32 %29, i32* %r.i, align 4, !dbg !1639
  %30 = load i32*, i32** %data.addr.i, align 8, !dbg !1640
  %arrayidx1.i = getelementptr inbounds i32, i32* %30, i64 1, !dbg !1640
  %31 = load i32, i32* %arrayidx1.i, align 4, !dbg !1640
  store i32 %31, i32* %l.i, align 4, !dbg !1641
  %32 = load i32, i32* %l.i, align 4, !dbg !1569
  %shr.i = lshr i32 %32, 4, !dbg !1569
  %33 = load i32, i32* %r.i, align 4, !dbg !1569
  %xor.i = xor i32 %shr.i, %33, !dbg !1569
  %conv.i = zext i32 %xor.i to i64, !dbg !1569
  %and.i = and i64 %conv.i, 252645135, !dbg !1569
  %conv2.i = trunc i64 %and.i to i32, !dbg !1569
  store i32 %conv2.i, i32* %tt.i, align 4, !dbg !1569
  %34 = load i32, i32* %tt.i, align 4, !dbg !1569
  %35 = load i32, i32* %r.i, align 4, !dbg !1569
  %xor3.i = xor i32 %35, %34, !dbg !1569
  store i32 %xor3.i, i32* %r.i, align 4, !dbg !1569
  %36 = load i32, i32* %tt.i, align 4, !dbg !1569
  %shl.i = shl i32 %36, 4, !dbg !1569
  %37 = load i32, i32* %l.i, align 4, !dbg !1569
  %xor4.i = xor i32 %37, %shl.i, !dbg !1569
  store i32 %xor4.i, i32* %l.i, align 4, !dbg !1569
  %38 = load i32, i32* %r.i, align 4, !dbg !1569
  %shr5.i = lshr i32 %38, 16, !dbg !1569
  %39 = load i32, i32* %l.i, align 4, !dbg !1569
  %xor6.i = xor i32 %shr5.i, %39, !dbg !1569
  %conv7.i = zext i32 %xor6.i to i64, !dbg !1569
  %and8.i = and i64 %conv7.i, 65535, !dbg !1569
  %conv9.i = trunc i64 %and8.i to i32, !dbg !1569
  store i32 %conv9.i, i32* %tt.i, align 4, !dbg !1569
  %40 = load i32, i32* %tt.i, align 4, !dbg !1569
  %41 = load i32, i32* %l.i, align 4, !dbg !1569
  %xor10.i = xor i32 %41, %40, !dbg !1569
  store i32 %xor10.i, i32* %l.i, align 4, !dbg !1569
  %42 = load i32, i32* %tt.i, align 4, !dbg !1569
  %shl11.i = shl i32 %42, 16, !dbg !1569
  %43 = load i32, i32* %r.i, align 4, !dbg !1569
  %xor12.i = xor i32 %43, %shl11.i, !dbg !1569
  store i32 %xor12.i, i32* %r.i, align 4, !dbg !1569
  %44 = load i32, i32* %l.i, align 4, !dbg !1569
  %shr13.i = lshr i32 %44, 2, !dbg !1569
  %45 = load i32, i32* %r.i, align 4, !dbg !1569
  %xor14.i = xor i32 %shr13.i, %45, !dbg !1569
  %conv15.i = zext i32 %xor14.i to i64, !dbg !1569
  %and16.i = and i64 %conv15.i, 858993459, !dbg !1569
  %conv17.i = trunc i64 %and16.i to i32, !dbg !1569
  store i32 %conv17.i, i32* %tt.i, align 4, !dbg !1569
  %46 = load i32, i32* %tt.i, align 4, !dbg !1569
  %47 = load i32, i32* %r.i, align 4, !dbg !1569
  %xor18.i = xor i32 %47, %46, !dbg !1569
  store i32 %xor18.i, i32* %r.i, align 4, !dbg !1569
  %48 = load i32, i32* %tt.i, align 4, !dbg !1569
  %shl19.i = shl i32 %48, 2, !dbg !1569
  %49 = load i32, i32* %l.i, align 4, !dbg !1569
  %xor20.i = xor i32 %49, %shl19.i, !dbg !1569
  store i32 %xor20.i, i32* %l.i, align 4, !dbg !1569
  %50 = load i32, i32* %r.i, align 4, !dbg !1569
  %shr21.i = lshr i32 %50, 8, !dbg !1569
  %51 = load i32, i32* %l.i, align 4, !dbg !1569
  %xor22.i = xor i32 %shr21.i, %51, !dbg !1569
  %conv23.i = zext i32 %xor22.i to i64, !dbg !1569
  %and24.i = and i64 %conv23.i, 16711935, !dbg !1569
  %conv25.i = trunc i64 %and24.i to i32, !dbg !1569
  store i32 %conv25.i, i32* %tt.i, align 4, !dbg !1569
  %52 = load i32, i32* %tt.i, align 4, !dbg !1569
  %53 = load i32, i32* %l.i, align 4, !dbg !1569
  %xor26.i = xor i32 %53, %52, !dbg !1569
  store i32 %xor26.i, i32* %l.i, align 4, !dbg !1569
  %54 = load i32, i32* %tt.i, align 4, !dbg !1569
  %shl27.i = shl i32 %54, 8, !dbg !1569
  %55 = load i32, i32* %r.i, align 4, !dbg !1569
  %xor28.i = xor i32 %55, %shl27.i, !dbg !1569
  store i32 %xor28.i, i32* %r.i, align 4, !dbg !1569
  %56 = load i32, i32* %l.i, align 4, !dbg !1569
  %shr29.i = lshr i32 %56, 1, !dbg !1569
  %57 = load i32, i32* %r.i, align 4, !dbg !1569
  %xor30.i = xor i32 %shr29.i, %57, !dbg !1569
  %conv31.i = zext i32 %xor30.i to i64, !dbg !1569
  %and32.i = and i64 %conv31.i, 1431655765, !dbg !1569
  %conv33.i = trunc i64 %and32.i to i32, !dbg !1569
  store i32 %conv33.i, i32* %tt.i, align 4, !dbg !1569
  %58 = load i32, i32* %tt.i, align 4, !dbg !1569
  %59 = load i32, i32* %r.i, align 4, !dbg !1569
  %xor34.i = xor i32 %59, %58, !dbg !1569
  store i32 %xor34.i, i32* %r.i, align 4, !dbg !1569
  %60 = load i32, i32* %tt.i, align 4, !dbg !1569
  %shl35.i = shl i32 %60, 1, !dbg !1569
  %61 = load i32, i32* %l.i, align 4, !dbg !1569
  %xor36.i = xor i32 %61, %shl35.i, !dbg !1569
  store i32 %xor36.i, i32* %l.i, align 4, !dbg !1569
  %62 = load i32, i32* %r.i, align 4, !dbg !1570
  %63 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %62) #5, !dbg !1570, !srcloc !70
  store i32 %63, i32* %ret.i, align 4, !dbg !1570
  %64 = load i32, i32* %ret.i, align 4, !dbg !1570
  store i32 %64, i32* %tmp.i, align 4, !dbg !1570
  %65 = load i32, i32* %tmp.i, align 4, !dbg !1570
  %conv37.i = zext i32 %65 to i64, !dbg !1642
  %and38.i = and i64 %conv37.i, 4294967295, !dbg !1643
  %conv39.i = trunc i64 %and38.i to i32, !dbg !1642
  store i32 %conv39.i, i32* %r.i, align 4, !dbg !1644
  %66 = load i32, i32* %l.i, align 4, !dbg !1571
  %67 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %66) #5, !dbg !1571, !srcloc !77
  store i32 %67, i32* %ret40.i, align 4, !dbg !1571
  %68 = load i32, i32* %ret40.i, align 4, !dbg !1571
  store i32 %68, i32* %tmp41.i, align 4, !dbg !1571
  %69 = load i32, i32* %tmp41.i, align 4, !dbg !1571
  %conv42.i = zext i32 %69 to i64, !dbg !1645
  %and43.i = and i64 %conv42.i, 4294967295, !dbg !1646
  %conv44.i = trunc i64 %and43.i to i32, !dbg !1645
  store i32 %conv44.i, i32* %l.i, align 4, !dbg !1647
  %70 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i, align 8, !dbg !1648
  %ks45.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %70, i32 0, i32 0, !dbg !1649
  %arraydecay.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i, i64 0, i64 0, !dbg !1650
  %deslong.i = bitcast %union.anon* %arraydecay.i to [2 x i32]*, !dbg !1650
  %arraydecay46.i = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i, i64 0, i64 0, !dbg !1648
  store i32* %arraydecay46.i, i32** %s.i, align 8, !dbg !1651
  %71 = load i32, i32* %enc.addr.i, align 4, !dbg !1652
  %tobool.i = icmp ne i32 %71, 0, !dbg !1652
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !1653

if.then.i:                                        ; preds = %entry
  %72 = load i32, i32* %r.i, align 4, !dbg !1654
  %73 = load i32*, i32** %s.i, align 8, !dbg !1654
  %74 = load i32, i32* %73, align 4, !dbg !1654
  %xor48.i = xor i32 %72, %74, !dbg !1654
  store i32 %xor48.i, i32* %u.i, align 4, !dbg !1654
  %75 = load i32, i32* %r.i, align 4, !dbg !1654
  %76 = load i32*, i32** %s.i, align 8, !dbg !1654
  %arrayidx49.i = getelementptr inbounds i32, i32* %76, i64 1, !dbg !1654
  %77 = load i32, i32* %arrayidx49.i, align 4, !dbg !1654
  %xor50.i = xor i32 %75, %77, !dbg !1654
  store i32 %xor50.i, i32* %t.i, align 4, !dbg !1654
  %78 = load i32, i32* %t.i, align 4, !dbg !1572
  %79 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %78) #5, !dbg !1572, !srcloc !94
  store i32 %79, i32* %ret51.i, align 4, !dbg !1572
  %80 = load i32, i32* %ret51.i, align 4, !dbg !1572
  store i32 %80, i32* %tmp52.i, align 4, !dbg !1572
  %81 = load i32, i32* %tmp52.i, align 4, !dbg !1572
  store i32 %81, i32* %t.i, align 4, !dbg !1654
  %82 = load i32, i32* %u.i, align 4, !dbg !1654
  %shr53.i = lshr i32 %82, 2, !dbg !1654
  %and54.i = and i32 %shr53.i, 63, !dbg !1654
  %idxprom.i = zext i32 %and54.i to i64, !dbg !1654
  %arrayidx55.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i, !dbg !1654
  %83 = load i32, i32* %arrayidx55.i, align 4, !dbg !1654
  %84 = load i32, i32* %u.i, align 4, !dbg !1654
  %shr56.i = lshr i32 %84, 10, !dbg !1654
  %and57.i = and i32 %shr56.i, 63, !dbg !1654
  %idxprom58.i = zext i32 %and57.i to i64, !dbg !1654
  %arrayidx59.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i, !dbg !1654
  %85 = load i32, i32* %arrayidx59.i, align 4, !dbg !1654
  %xor60.i = xor i32 %83, %85, !dbg !1654
  %86 = load i32, i32* %u.i, align 4, !dbg !1654
  %shr61.i = lshr i32 %86, 18, !dbg !1654
  %and62.i = and i32 %shr61.i, 63, !dbg !1654
  %idxprom63.i = zext i32 %and62.i to i64, !dbg !1654
  %arrayidx64.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i, !dbg !1654
  %87 = load i32, i32* %arrayidx64.i, align 4, !dbg !1654
  %xor65.i = xor i32 %xor60.i, %87, !dbg !1654
  %88 = load i32, i32* %u.i, align 4, !dbg !1654
  %shr66.i = lshr i32 %88, 26, !dbg !1654
  %idxprom68.i = zext i32 %shr66.i to i64, !dbg !1654
  %arrayidx69.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i, !dbg !1654
  %89 = load i32, i32* %arrayidx69.i, align 4, !dbg !1654
  %xor70.i = xor i32 %xor65.i, %89, !dbg !1654
  %90 = load i32, i32* %t.i, align 4, !dbg !1654
  %shr71.i = lshr i32 %90, 2, !dbg !1654
  %and72.i = and i32 %shr71.i, 63, !dbg !1654
  %idxprom73.i = zext i32 %and72.i to i64, !dbg !1654
  %arrayidx74.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i, !dbg !1654
  %91 = load i32, i32* %arrayidx74.i, align 4, !dbg !1654
  %xor75.i = xor i32 %xor70.i, %91, !dbg !1654
  %92 = load i32, i32* %t.i, align 4, !dbg !1654
  %shr76.i = lshr i32 %92, 10, !dbg !1654
  %and77.i = and i32 %shr76.i, 63, !dbg !1654
  %idxprom78.i = zext i32 %and77.i to i64, !dbg !1654
  %arrayidx79.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i, !dbg !1654
  %93 = load i32, i32* %arrayidx79.i, align 4, !dbg !1654
  %xor80.i = xor i32 %xor75.i, %93, !dbg !1654
  %94 = load i32, i32* %t.i, align 4, !dbg !1654
  %shr81.i = lshr i32 %94, 18, !dbg !1654
  %and82.i = and i32 %shr81.i, 63, !dbg !1654
  %idxprom83.i = zext i32 %and82.i to i64, !dbg !1654
  %arrayidx84.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i, !dbg !1654
  %95 = load i32, i32* %arrayidx84.i, align 4, !dbg !1654
  %xor85.i = xor i32 %xor80.i, %95, !dbg !1654
  %96 = load i32, i32* %t.i, align 4, !dbg !1654
  %shr86.i = lshr i32 %96, 26, !dbg !1654
  %idxprom88.i = zext i32 %shr86.i to i64, !dbg !1654
  %arrayidx89.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i, !dbg !1654
  %97 = load i32, i32* %arrayidx89.i, align 4, !dbg !1654
  %xor90.i = xor i32 %xor85.i, %97, !dbg !1654
  %98 = load i32, i32* %l.i, align 4, !dbg !1654
  %xor91.i = xor i32 %98, %xor90.i, !dbg !1654
  store i32 %xor91.i, i32* %l.i, align 4, !dbg !1654
  %99 = load i32, i32* %l.i, align 4, !dbg !1655
  %100 = load i32*, i32** %s.i, align 8, !dbg !1655
  %arrayidx92.i = getelementptr inbounds i32, i32* %100, i64 2, !dbg !1655
  %101 = load i32, i32* %arrayidx92.i, align 4, !dbg !1655
  %xor93.i = xor i32 %99, %101, !dbg !1655
  store i32 %xor93.i, i32* %u.i, align 4, !dbg !1655
  %102 = load i32, i32* %l.i, align 4, !dbg !1655
  %103 = load i32*, i32** %s.i, align 8, !dbg !1655
  %arrayidx94.i = getelementptr inbounds i32, i32* %103, i64 3, !dbg !1655
  %104 = load i32, i32* %arrayidx94.i, align 4, !dbg !1655
  %xor95.i = xor i32 %102, %104, !dbg !1655
  store i32 %xor95.i, i32* %t.i, align 4, !dbg !1655
  %105 = load i32, i32* %t.i, align 4, !dbg !1573
  %106 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %105) #5, !dbg !1573, !srcloc !100
  store i32 %106, i32* %ret96.i, align 4, !dbg !1573
  %107 = load i32, i32* %ret96.i, align 4, !dbg !1573
  store i32 %107, i32* %tmp97.i, align 4, !dbg !1573
  %108 = load i32, i32* %tmp97.i, align 4, !dbg !1573
  store i32 %108, i32* %t.i, align 4, !dbg !1655
  %109 = load i32, i32* %u.i, align 4, !dbg !1655
  %shr98.i = lshr i32 %109, 2, !dbg !1655
  %and99.i = and i32 %shr98.i, 63, !dbg !1655
  %idxprom100.i = zext i32 %and99.i to i64, !dbg !1655
  %arrayidx101.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i, !dbg !1655
  %110 = load i32, i32* %arrayidx101.i, align 4, !dbg !1655
  %111 = load i32, i32* %u.i, align 4, !dbg !1655
  %shr102.i = lshr i32 %111, 10, !dbg !1655
  %and103.i = and i32 %shr102.i, 63, !dbg !1655
  %idxprom104.i = zext i32 %and103.i to i64, !dbg !1655
  %arrayidx105.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i, !dbg !1655
  %112 = load i32, i32* %arrayidx105.i, align 4, !dbg !1655
  %xor106.i = xor i32 %110, %112, !dbg !1655
  %113 = load i32, i32* %u.i, align 4, !dbg !1655
  %shr107.i = lshr i32 %113, 18, !dbg !1655
  %and108.i = and i32 %shr107.i, 63, !dbg !1655
  %idxprom109.i = zext i32 %and108.i to i64, !dbg !1655
  %arrayidx110.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i, !dbg !1655
  %114 = load i32, i32* %arrayidx110.i, align 4, !dbg !1655
  %xor111.i = xor i32 %xor106.i, %114, !dbg !1655
  %115 = load i32, i32* %u.i, align 4, !dbg !1655
  %shr112.i = lshr i32 %115, 26, !dbg !1655
  %idxprom114.i = zext i32 %shr112.i to i64, !dbg !1655
  %arrayidx115.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i, !dbg !1655
  %116 = load i32, i32* %arrayidx115.i, align 4, !dbg !1655
  %xor116.i = xor i32 %xor111.i, %116, !dbg !1655
  %117 = load i32, i32* %t.i, align 4, !dbg !1655
  %shr117.i = lshr i32 %117, 2, !dbg !1655
  %and118.i = and i32 %shr117.i, 63, !dbg !1655
  %idxprom119.i = zext i32 %and118.i to i64, !dbg !1655
  %arrayidx120.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i, !dbg !1655
  %118 = load i32, i32* %arrayidx120.i, align 4, !dbg !1655
  %xor121.i = xor i32 %xor116.i, %118, !dbg !1655
  %119 = load i32, i32* %t.i, align 4, !dbg !1655
  %shr122.i = lshr i32 %119, 10, !dbg !1655
  %and123.i = and i32 %shr122.i, 63, !dbg !1655
  %idxprom124.i = zext i32 %and123.i to i64, !dbg !1655
  %arrayidx125.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i, !dbg !1655
  %120 = load i32, i32* %arrayidx125.i, align 4, !dbg !1655
  %xor126.i = xor i32 %xor121.i, %120, !dbg !1655
  %121 = load i32, i32* %t.i, align 4, !dbg !1655
  %shr127.i = lshr i32 %121, 18, !dbg !1655
  %and128.i = and i32 %shr127.i, 63, !dbg !1655
  %idxprom129.i = zext i32 %and128.i to i64, !dbg !1655
  %arrayidx130.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i, !dbg !1655
  %122 = load i32, i32* %arrayidx130.i, align 4, !dbg !1655
  %xor131.i = xor i32 %xor126.i, %122, !dbg !1655
  %123 = load i32, i32* %t.i, align 4, !dbg !1655
  %shr132.i = lshr i32 %123, 26, !dbg !1655
  %idxprom134.i = zext i32 %shr132.i to i64, !dbg !1655
  %arrayidx135.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i, !dbg !1655
  %124 = load i32, i32* %arrayidx135.i, align 4, !dbg !1655
  %xor136.i = xor i32 %xor131.i, %124, !dbg !1655
  %125 = load i32, i32* %r.i, align 4, !dbg !1655
  %xor137.i = xor i32 %125, %xor136.i, !dbg !1655
  store i32 %xor137.i, i32* %r.i, align 4, !dbg !1655
  %126 = load i32, i32* %r.i, align 4, !dbg !1656
  %127 = load i32*, i32** %s.i, align 8, !dbg !1656
  %arrayidx138.i = getelementptr inbounds i32, i32* %127, i64 4, !dbg !1656
  %128 = load i32, i32* %arrayidx138.i, align 4, !dbg !1656
  %xor139.i = xor i32 %126, %128, !dbg !1656
  store i32 %xor139.i, i32* %u.i, align 4, !dbg !1656
  %129 = load i32, i32* %r.i, align 4, !dbg !1656
  %130 = load i32*, i32** %s.i, align 8, !dbg !1656
  %arrayidx140.i = getelementptr inbounds i32, i32* %130, i64 5, !dbg !1656
  %131 = load i32, i32* %arrayidx140.i, align 4, !dbg !1656
  %xor141.i = xor i32 %129, %131, !dbg !1656
  store i32 %xor141.i, i32* %t.i, align 4, !dbg !1656
  %132 = load i32, i32* %t.i, align 4, !dbg !1574
  %133 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %132) #5, !dbg !1574, !srcloc !106
  store i32 %133, i32* %ret142.i, align 4, !dbg !1574
  %134 = load i32, i32* %ret142.i, align 4, !dbg !1574
  store i32 %134, i32* %tmp143.i, align 4, !dbg !1574
  %135 = load i32, i32* %tmp143.i, align 4, !dbg !1574
  store i32 %135, i32* %t.i, align 4, !dbg !1656
  %136 = load i32, i32* %u.i, align 4, !dbg !1656
  %shr144.i = lshr i32 %136, 2, !dbg !1656
  %and145.i = and i32 %shr144.i, 63, !dbg !1656
  %idxprom146.i = zext i32 %and145.i to i64, !dbg !1656
  %arrayidx147.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i, !dbg !1656
  %137 = load i32, i32* %arrayidx147.i, align 4, !dbg !1656
  %138 = load i32, i32* %u.i, align 4, !dbg !1656
  %shr148.i = lshr i32 %138, 10, !dbg !1656
  %and149.i = and i32 %shr148.i, 63, !dbg !1656
  %idxprom150.i = zext i32 %and149.i to i64, !dbg !1656
  %arrayidx151.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i, !dbg !1656
  %139 = load i32, i32* %arrayidx151.i, align 4, !dbg !1656
  %xor152.i = xor i32 %137, %139, !dbg !1656
  %140 = load i32, i32* %u.i, align 4, !dbg !1656
  %shr153.i = lshr i32 %140, 18, !dbg !1656
  %and154.i = and i32 %shr153.i, 63, !dbg !1656
  %idxprom155.i = zext i32 %and154.i to i64, !dbg !1656
  %arrayidx156.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i, !dbg !1656
  %141 = load i32, i32* %arrayidx156.i, align 4, !dbg !1656
  %xor157.i = xor i32 %xor152.i, %141, !dbg !1656
  %142 = load i32, i32* %u.i, align 4, !dbg !1656
  %shr158.i = lshr i32 %142, 26, !dbg !1656
  %idxprom160.i = zext i32 %shr158.i to i64, !dbg !1656
  %arrayidx161.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i, !dbg !1656
  %143 = load i32, i32* %arrayidx161.i, align 4, !dbg !1656
  %xor162.i = xor i32 %xor157.i, %143, !dbg !1656
  %144 = load i32, i32* %t.i, align 4, !dbg !1656
  %shr163.i = lshr i32 %144, 2, !dbg !1656
  %and164.i = and i32 %shr163.i, 63, !dbg !1656
  %idxprom165.i = zext i32 %and164.i to i64, !dbg !1656
  %arrayidx166.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i, !dbg !1656
  %145 = load i32, i32* %arrayidx166.i, align 4, !dbg !1656
  %xor167.i = xor i32 %xor162.i, %145, !dbg !1656
  %146 = load i32, i32* %t.i, align 4, !dbg !1656
  %shr168.i = lshr i32 %146, 10, !dbg !1656
  %and169.i = and i32 %shr168.i, 63, !dbg !1656
  %idxprom170.i = zext i32 %and169.i to i64, !dbg !1656
  %arrayidx171.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i, !dbg !1656
  %147 = load i32, i32* %arrayidx171.i, align 4, !dbg !1656
  %xor172.i = xor i32 %xor167.i, %147, !dbg !1656
  %148 = load i32, i32* %t.i, align 4, !dbg !1656
  %shr173.i = lshr i32 %148, 18, !dbg !1656
  %and174.i = and i32 %shr173.i, 63, !dbg !1656
  %idxprom175.i = zext i32 %and174.i to i64, !dbg !1656
  %arrayidx176.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i, !dbg !1656
  %149 = load i32, i32* %arrayidx176.i, align 4, !dbg !1656
  %xor177.i = xor i32 %xor172.i, %149, !dbg !1656
  %150 = load i32, i32* %t.i, align 4, !dbg !1656
  %shr178.i = lshr i32 %150, 26, !dbg !1656
  %idxprom180.i = zext i32 %shr178.i to i64, !dbg !1656
  %arrayidx181.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i, !dbg !1656
  %151 = load i32, i32* %arrayidx181.i, align 4, !dbg !1656
  %xor182.i = xor i32 %xor177.i, %151, !dbg !1656
  %152 = load i32, i32* %l.i, align 4, !dbg !1656
  %xor183.i = xor i32 %152, %xor182.i, !dbg !1656
  store i32 %xor183.i, i32* %l.i, align 4, !dbg !1656
  %153 = load i32, i32* %l.i, align 4, !dbg !1657
  %154 = load i32*, i32** %s.i, align 8, !dbg !1657
  %arrayidx184.i = getelementptr inbounds i32, i32* %154, i64 6, !dbg !1657
  %155 = load i32, i32* %arrayidx184.i, align 4, !dbg !1657
  %xor185.i = xor i32 %153, %155, !dbg !1657
  store i32 %xor185.i, i32* %u.i, align 4, !dbg !1657
  %156 = load i32, i32* %l.i, align 4, !dbg !1657
  %157 = load i32*, i32** %s.i, align 8, !dbg !1657
  %arrayidx186.i = getelementptr inbounds i32, i32* %157, i64 7, !dbg !1657
  %158 = load i32, i32* %arrayidx186.i, align 4, !dbg !1657
  %xor187.i = xor i32 %156, %158, !dbg !1657
  store i32 %xor187.i, i32* %t.i, align 4, !dbg !1657
  %159 = load i32, i32* %t.i, align 4, !dbg !1575
  %160 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %159) #5, !dbg !1575, !srcloc !112
  store i32 %160, i32* %ret188.i, align 4, !dbg !1575
  %161 = load i32, i32* %ret188.i, align 4, !dbg !1575
  store i32 %161, i32* %tmp189.i, align 4, !dbg !1575
  %162 = load i32, i32* %tmp189.i, align 4, !dbg !1575
  store i32 %162, i32* %t.i, align 4, !dbg !1657
  %163 = load i32, i32* %u.i, align 4, !dbg !1657
  %shr190.i = lshr i32 %163, 2, !dbg !1657
  %and191.i = and i32 %shr190.i, 63, !dbg !1657
  %idxprom192.i = zext i32 %and191.i to i64, !dbg !1657
  %arrayidx193.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i, !dbg !1657
  %164 = load i32, i32* %arrayidx193.i, align 4, !dbg !1657
  %165 = load i32, i32* %u.i, align 4, !dbg !1657
  %shr194.i = lshr i32 %165, 10, !dbg !1657
  %and195.i = and i32 %shr194.i, 63, !dbg !1657
  %idxprom196.i = zext i32 %and195.i to i64, !dbg !1657
  %arrayidx197.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i, !dbg !1657
  %166 = load i32, i32* %arrayidx197.i, align 4, !dbg !1657
  %xor198.i = xor i32 %164, %166, !dbg !1657
  %167 = load i32, i32* %u.i, align 4, !dbg !1657
  %shr199.i = lshr i32 %167, 18, !dbg !1657
  %and200.i = and i32 %shr199.i, 63, !dbg !1657
  %idxprom201.i = zext i32 %and200.i to i64, !dbg !1657
  %arrayidx202.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i, !dbg !1657
  %168 = load i32, i32* %arrayidx202.i, align 4, !dbg !1657
  %xor203.i = xor i32 %xor198.i, %168, !dbg !1657
  %169 = load i32, i32* %u.i, align 4, !dbg !1657
  %shr204.i = lshr i32 %169, 26, !dbg !1657
  %idxprom206.i = zext i32 %shr204.i to i64, !dbg !1657
  %arrayidx207.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i, !dbg !1657
  %170 = load i32, i32* %arrayidx207.i, align 4, !dbg !1657
  %xor208.i = xor i32 %xor203.i, %170, !dbg !1657
  %171 = load i32, i32* %t.i, align 4, !dbg !1657
  %shr209.i = lshr i32 %171, 2, !dbg !1657
  %and210.i = and i32 %shr209.i, 63, !dbg !1657
  %idxprom211.i = zext i32 %and210.i to i64, !dbg !1657
  %arrayidx212.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i, !dbg !1657
  %172 = load i32, i32* %arrayidx212.i, align 4, !dbg !1657
  %xor213.i = xor i32 %xor208.i, %172, !dbg !1657
  %173 = load i32, i32* %t.i, align 4, !dbg !1657
  %shr214.i = lshr i32 %173, 10, !dbg !1657
  %and215.i = and i32 %shr214.i, 63, !dbg !1657
  %idxprom216.i = zext i32 %and215.i to i64, !dbg !1657
  %arrayidx217.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i, !dbg !1657
  %174 = load i32, i32* %arrayidx217.i, align 4, !dbg !1657
  %xor218.i = xor i32 %xor213.i, %174, !dbg !1657
  %175 = load i32, i32* %t.i, align 4, !dbg !1657
  %shr219.i = lshr i32 %175, 18, !dbg !1657
  %and220.i = and i32 %shr219.i, 63, !dbg !1657
  %idxprom221.i = zext i32 %and220.i to i64, !dbg !1657
  %arrayidx222.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i, !dbg !1657
  %176 = load i32, i32* %arrayidx222.i, align 4, !dbg !1657
  %xor223.i = xor i32 %xor218.i, %176, !dbg !1657
  %177 = load i32, i32* %t.i, align 4, !dbg !1657
  %shr224.i = lshr i32 %177, 26, !dbg !1657
  %idxprom226.i = zext i32 %shr224.i to i64, !dbg !1657
  %arrayidx227.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i, !dbg !1657
  %178 = load i32, i32* %arrayidx227.i, align 4, !dbg !1657
  %xor228.i = xor i32 %xor223.i, %178, !dbg !1657
  %179 = load i32, i32* %r.i, align 4, !dbg !1657
  %xor229.i = xor i32 %179, %xor228.i, !dbg !1657
  store i32 %xor229.i, i32* %r.i, align 4, !dbg !1657
  %180 = load i32, i32* %r.i, align 4, !dbg !1658
  %181 = load i32*, i32** %s.i, align 8, !dbg !1658
  %arrayidx230.i = getelementptr inbounds i32, i32* %181, i64 8, !dbg !1658
  %182 = load i32, i32* %arrayidx230.i, align 4, !dbg !1658
  %xor231.i = xor i32 %180, %182, !dbg !1658
  store i32 %xor231.i, i32* %u.i, align 4, !dbg !1658
  %183 = load i32, i32* %r.i, align 4, !dbg !1658
  %184 = load i32*, i32** %s.i, align 8, !dbg !1658
  %arrayidx232.i = getelementptr inbounds i32, i32* %184, i64 9, !dbg !1658
  %185 = load i32, i32* %arrayidx232.i, align 4, !dbg !1658
  %xor233.i = xor i32 %183, %185, !dbg !1658
  store i32 %xor233.i, i32* %t.i, align 4, !dbg !1658
  %186 = load i32, i32* %t.i, align 4, !dbg !1576
  %187 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %186) #5, !dbg !1576, !srcloc !118
  store i32 %187, i32* %ret234.i, align 4, !dbg !1576
  %188 = load i32, i32* %ret234.i, align 4, !dbg !1576
  store i32 %188, i32* %tmp235.i, align 4, !dbg !1576
  %189 = load i32, i32* %tmp235.i, align 4, !dbg !1576
  store i32 %189, i32* %t.i, align 4, !dbg !1658
  %190 = load i32, i32* %u.i, align 4, !dbg !1658
  %shr236.i = lshr i32 %190, 2, !dbg !1658
  %and237.i = and i32 %shr236.i, 63, !dbg !1658
  %idxprom238.i = zext i32 %and237.i to i64, !dbg !1658
  %arrayidx239.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i, !dbg !1658
  %191 = load i32, i32* %arrayidx239.i, align 4, !dbg !1658
  %192 = load i32, i32* %u.i, align 4, !dbg !1658
  %shr240.i = lshr i32 %192, 10, !dbg !1658
  %and241.i = and i32 %shr240.i, 63, !dbg !1658
  %idxprom242.i = zext i32 %and241.i to i64, !dbg !1658
  %arrayidx243.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i, !dbg !1658
  %193 = load i32, i32* %arrayidx243.i, align 4, !dbg !1658
  %xor244.i = xor i32 %191, %193, !dbg !1658
  %194 = load i32, i32* %u.i, align 4, !dbg !1658
  %shr245.i = lshr i32 %194, 18, !dbg !1658
  %and246.i = and i32 %shr245.i, 63, !dbg !1658
  %idxprom247.i = zext i32 %and246.i to i64, !dbg !1658
  %arrayidx248.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i, !dbg !1658
  %195 = load i32, i32* %arrayidx248.i, align 4, !dbg !1658
  %xor249.i = xor i32 %xor244.i, %195, !dbg !1658
  %196 = load i32, i32* %u.i, align 4, !dbg !1658
  %shr250.i = lshr i32 %196, 26, !dbg !1658
  %idxprom252.i = zext i32 %shr250.i to i64, !dbg !1658
  %arrayidx253.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i, !dbg !1658
  %197 = load i32, i32* %arrayidx253.i, align 4, !dbg !1658
  %xor254.i = xor i32 %xor249.i, %197, !dbg !1658
  %198 = load i32, i32* %t.i, align 4, !dbg !1658
  %shr255.i = lshr i32 %198, 2, !dbg !1658
  %and256.i = and i32 %shr255.i, 63, !dbg !1658
  %idxprom257.i = zext i32 %and256.i to i64, !dbg !1658
  %arrayidx258.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i, !dbg !1658
  %199 = load i32, i32* %arrayidx258.i, align 4, !dbg !1658
  %xor259.i = xor i32 %xor254.i, %199, !dbg !1658
  %200 = load i32, i32* %t.i, align 4, !dbg !1658
  %shr260.i = lshr i32 %200, 10, !dbg !1658
  %and261.i = and i32 %shr260.i, 63, !dbg !1658
  %idxprom262.i = zext i32 %and261.i to i64, !dbg !1658
  %arrayidx263.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i, !dbg !1658
  %201 = load i32, i32* %arrayidx263.i, align 4, !dbg !1658
  %xor264.i = xor i32 %xor259.i, %201, !dbg !1658
  %202 = load i32, i32* %t.i, align 4, !dbg !1658
  %shr265.i = lshr i32 %202, 18, !dbg !1658
  %and266.i = and i32 %shr265.i, 63, !dbg !1658
  %idxprom267.i = zext i32 %and266.i to i64, !dbg !1658
  %arrayidx268.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i, !dbg !1658
  %203 = load i32, i32* %arrayidx268.i, align 4, !dbg !1658
  %xor269.i = xor i32 %xor264.i, %203, !dbg !1658
  %204 = load i32, i32* %t.i, align 4, !dbg !1658
  %shr270.i = lshr i32 %204, 26, !dbg !1658
  %idxprom272.i = zext i32 %shr270.i to i64, !dbg !1658
  %arrayidx273.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i, !dbg !1658
  %205 = load i32, i32* %arrayidx273.i, align 4, !dbg !1658
  %xor274.i = xor i32 %xor269.i, %205, !dbg !1658
  %206 = load i32, i32* %l.i, align 4, !dbg !1658
  %xor275.i = xor i32 %206, %xor274.i, !dbg !1658
  store i32 %xor275.i, i32* %l.i, align 4, !dbg !1658
  %207 = load i32, i32* %l.i, align 4, !dbg !1659
  %208 = load i32*, i32** %s.i, align 8, !dbg !1659
  %arrayidx276.i = getelementptr inbounds i32, i32* %208, i64 10, !dbg !1659
  %209 = load i32, i32* %arrayidx276.i, align 4, !dbg !1659
  %xor277.i = xor i32 %207, %209, !dbg !1659
  store i32 %xor277.i, i32* %u.i, align 4, !dbg !1659
  %210 = load i32, i32* %l.i, align 4, !dbg !1659
  %211 = load i32*, i32** %s.i, align 8, !dbg !1659
  %arrayidx278.i = getelementptr inbounds i32, i32* %211, i64 11, !dbg !1659
  %212 = load i32, i32* %arrayidx278.i, align 4, !dbg !1659
  %xor279.i = xor i32 %210, %212, !dbg !1659
  store i32 %xor279.i, i32* %t.i, align 4, !dbg !1659
  %213 = load i32, i32* %t.i, align 4, !dbg !1577
  %214 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %213) #5, !dbg !1577, !srcloc !124
  store i32 %214, i32* %ret280.i, align 4, !dbg !1577
  %215 = load i32, i32* %ret280.i, align 4, !dbg !1577
  store i32 %215, i32* %tmp281.i, align 4, !dbg !1577
  %216 = load i32, i32* %tmp281.i, align 4, !dbg !1577
  store i32 %216, i32* %t.i, align 4, !dbg !1659
  %217 = load i32, i32* %u.i, align 4, !dbg !1659
  %shr282.i = lshr i32 %217, 2, !dbg !1659
  %and283.i = and i32 %shr282.i, 63, !dbg !1659
  %idxprom284.i = zext i32 %and283.i to i64, !dbg !1659
  %arrayidx285.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i, !dbg !1659
  %218 = load i32, i32* %arrayidx285.i, align 4, !dbg !1659
  %219 = load i32, i32* %u.i, align 4, !dbg !1659
  %shr286.i = lshr i32 %219, 10, !dbg !1659
  %and287.i = and i32 %shr286.i, 63, !dbg !1659
  %idxprom288.i = zext i32 %and287.i to i64, !dbg !1659
  %arrayidx289.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i, !dbg !1659
  %220 = load i32, i32* %arrayidx289.i, align 4, !dbg !1659
  %xor290.i = xor i32 %218, %220, !dbg !1659
  %221 = load i32, i32* %u.i, align 4, !dbg !1659
  %shr291.i = lshr i32 %221, 18, !dbg !1659
  %and292.i = and i32 %shr291.i, 63, !dbg !1659
  %idxprom293.i = zext i32 %and292.i to i64, !dbg !1659
  %arrayidx294.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i, !dbg !1659
  %222 = load i32, i32* %arrayidx294.i, align 4, !dbg !1659
  %xor295.i = xor i32 %xor290.i, %222, !dbg !1659
  %223 = load i32, i32* %u.i, align 4, !dbg !1659
  %shr296.i = lshr i32 %223, 26, !dbg !1659
  %idxprom298.i = zext i32 %shr296.i to i64, !dbg !1659
  %arrayidx299.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i, !dbg !1659
  %224 = load i32, i32* %arrayidx299.i, align 4, !dbg !1659
  %xor300.i = xor i32 %xor295.i, %224, !dbg !1659
  %225 = load i32, i32* %t.i, align 4, !dbg !1659
  %shr301.i = lshr i32 %225, 2, !dbg !1659
  %and302.i = and i32 %shr301.i, 63, !dbg !1659
  %idxprom303.i = zext i32 %and302.i to i64, !dbg !1659
  %arrayidx304.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i, !dbg !1659
  %226 = load i32, i32* %arrayidx304.i, align 4, !dbg !1659
  %xor305.i = xor i32 %xor300.i, %226, !dbg !1659
  %227 = load i32, i32* %t.i, align 4, !dbg !1659
  %shr306.i = lshr i32 %227, 10, !dbg !1659
  %and307.i = and i32 %shr306.i, 63, !dbg !1659
  %idxprom308.i = zext i32 %and307.i to i64, !dbg !1659
  %arrayidx309.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i, !dbg !1659
  %228 = load i32, i32* %arrayidx309.i, align 4, !dbg !1659
  %xor310.i = xor i32 %xor305.i, %228, !dbg !1659
  %229 = load i32, i32* %t.i, align 4, !dbg !1659
  %shr311.i = lshr i32 %229, 18, !dbg !1659
  %and312.i = and i32 %shr311.i, 63, !dbg !1659
  %idxprom313.i = zext i32 %and312.i to i64, !dbg !1659
  %arrayidx314.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i, !dbg !1659
  %230 = load i32, i32* %arrayidx314.i, align 4, !dbg !1659
  %xor315.i = xor i32 %xor310.i, %230, !dbg !1659
  %231 = load i32, i32* %t.i, align 4, !dbg !1659
  %shr316.i = lshr i32 %231, 26, !dbg !1659
  %idxprom318.i = zext i32 %shr316.i to i64, !dbg !1659
  %arrayidx319.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i, !dbg !1659
  %232 = load i32, i32* %arrayidx319.i, align 4, !dbg !1659
  %xor320.i = xor i32 %xor315.i, %232, !dbg !1659
  %233 = load i32, i32* %r.i, align 4, !dbg !1659
  %xor321.i = xor i32 %233, %xor320.i, !dbg !1659
  store i32 %xor321.i, i32* %r.i, align 4, !dbg !1659
  %234 = load i32, i32* %r.i, align 4, !dbg !1660
  %235 = load i32*, i32** %s.i, align 8, !dbg !1660
  %arrayidx322.i = getelementptr inbounds i32, i32* %235, i64 12, !dbg !1660
  %236 = load i32, i32* %arrayidx322.i, align 4, !dbg !1660
  %xor323.i = xor i32 %234, %236, !dbg !1660
  store i32 %xor323.i, i32* %u.i, align 4, !dbg !1660
  %237 = load i32, i32* %r.i, align 4, !dbg !1660
  %238 = load i32*, i32** %s.i, align 8, !dbg !1660
  %arrayidx324.i = getelementptr inbounds i32, i32* %238, i64 13, !dbg !1660
  %239 = load i32, i32* %arrayidx324.i, align 4, !dbg !1660
  %xor325.i = xor i32 %237, %239, !dbg !1660
  store i32 %xor325.i, i32* %t.i, align 4, !dbg !1660
  %240 = load i32, i32* %t.i, align 4, !dbg !1578
  %241 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %240) #5, !dbg !1578, !srcloc !130
  store i32 %241, i32* %ret326.i, align 4, !dbg !1578
  %242 = load i32, i32* %ret326.i, align 4, !dbg !1578
  store i32 %242, i32* %tmp327.i, align 4, !dbg !1578
  %243 = load i32, i32* %tmp327.i, align 4, !dbg !1578
  store i32 %243, i32* %t.i, align 4, !dbg !1660
  %244 = load i32, i32* %u.i, align 4, !dbg !1660
  %shr328.i = lshr i32 %244, 2, !dbg !1660
  %and329.i = and i32 %shr328.i, 63, !dbg !1660
  %idxprom330.i = zext i32 %and329.i to i64, !dbg !1660
  %arrayidx331.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i, !dbg !1660
  %245 = load i32, i32* %arrayidx331.i, align 4, !dbg !1660
  %246 = load i32, i32* %u.i, align 4, !dbg !1660
  %shr332.i = lshr i32 %246, 10, !dbg !1660
  %and333.i = and i32 %shr332.i, 63, !dbg !1660
  %idxprom334.i = zext i32 %and333.i to i64, !dbg !1660
  %arrayidx335.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i, !dbg !1660
  %247 = load i32, i32* %arrayidx335.i, align 4, !dbg !1660
  %xor336.i = xor i32 %245, %247, !dbg !1660
  %248 = load i32, i32* %u.i, align 4, !dbg !1660
  %shr337.i = lshr i32 %248, 18, !dbg !1660
  %and338.i = and i32 %shr337.i, 63, !dbg !1660
  %idxprom339.i = zext i32 %and338.i to i64, !dbg !1660
  %arrayidx340.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i, !dbg !1660
  %249 = load i32, i32* %arrayidx340.i, align 4, !dbg !1660
  %xor341.i = xor i32 %xor336.i, %249, !dbg !1660
  %250 = load i32, i32* %u.i, align 4, !dbg !1660
  %shr342.i = lshr i32 %250, 26, !dbg !1660
  %idxprom344.i = zext i32 %shr342.i to i64, !dbg !1660
  %arrayidx345.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i, !dbg !1660
  %251 = load i32, i32* %arrayidx345.i, align 4, !dbg !1660
  %xor346.i = xor i32 %xor341.i, %251, !dbg !1660
  %252 = load i32, i32* %t.i, align 4, !dbg !1660
  %shr347.i = lshr i32 %252, 2, !dbg !1660
  %and348.i = and i32 %shr347.i, 63, !dbg !1660
  %idxprom349.i = zext i32 %and348.i to i64, !dbg !1660
  %arrayidx350.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i, !dbg !1660
  %253 = load i32, i32* %arrayidx350.i, align 4, !dbg !1660
  %xor351.i = xor i32 %xor346.i, %253, !dbg !1660
  %254 = load i32, i32* %t.i, align 4, !dbg !1660
  %shr352.i = lshr i32 %254, 10, !dbg !1660
  %and353.i = and i32 %shr352.i, 63, !dbg !1660
  %idxprom354.i = zext i32 %and353.i to i64, !dbg !1660
  %arrayidx355.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i, !dbg !1660
  %255 = load i32, i32* %arrayidx355.i, align 4, !dbg !1660
  %xor356.i = xor i32 %xor351.i, %255, !dbg !1660
  %256 = load i32, i32* %t.i, align 4, !dbg !1660
  %shr357.i = lshr i32 %256, 18, !dbg !1660
  %and358.i = and i32 %shr357.i, 63, !dbg !1660
  %idxprom359.i = zext i32 %and358.i to i64, !dbg !1660
  %arrayidx360.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i, !dbg !1660
  %257 = load i32, i32* %arrayidx360.i, align 4, !dbg !1660
  %xor361.i = xor i32 %xor356.i, %257, !dbg !1660
  %258 = load i32, i32* %t.i, align 4, !dbg !1660
  %shr362.i = lshr i32 %258, 26, !dbg !1660
  %idxprom364.i = zext i32 %shr362.i to i64, !dbg !1660
  %arrayidx365.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i, !dbg !1660
  %259 = load i32, i32* %arrayidx365.i, align 4, !dbg !1660
  %xor366.i = xor i32 %xor361.i, %259, !dbg !1660
  %260 = load i32, i32* %l.i, align 4, !dbg !1660
  %xor367.i = xor i32 %260, %xor366.i, !dbg !1660
  store i32 %xor367.i, i32* %l.i, align 4, !dbg !1660
  %261 = load i32, i32* %l.i, align 4, !dbg !1661
  %262 = load i32*, i32** %s.i, align 8, !dbg !1661
  %arrayidx368.i = getelementptr inbounds i32, i32* %262, i64 14, !dbg !1661
  %263 = load i32, i32* %arrayidx368.i, align 4, !dbg !1661
  %xor369.i = xor i32 %261, %263, !dbg !1661
  store i32 %xor369.i, i32* %u.i, align 4, !dbg !1661
  %264 = load i32, i32* %l.i, align 4, !dbg !1661
  %265 = load i32*, i32** %s.i, align 8, !dbg !1661
  %arrayidx370.i = getelementptr inbounds i32, i32* %265, i64 15, !dbg !1661
  %266 = load i32, i32* %arrayidx370.i, align 4, !dbg !1661
  %xor371.i = xor i32 %264, %266, !dbg !1661
  store i32 %xor371.i, i32* %t.i, align 4, !dbg !1661
  %267 = load i32, i32* %t.i, align 4, !dbg !1579
  %268 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %267) #5, !dbg !1579, !srcloc !136
  store i32 %268, i32* %ret372.i, align 4, !dbg !1579
  %269 = load i32, i32* %ret372.i, align 4, !dbg !1579
  store i32 %269, i32* %tmp373.i, align 4, !dbg !1579
  %270 = load i32, i32* %tmp373.i, align 4, !dbg !1579
  store i32 %270, i32* %t.i, align 4, !dbg !1661
  %271 = load i32, i32* %u.i, align 4, !dbg !1661
  %shr374.i = lshr i32 %271, 2, !dbg !1661
  %and375.i = and i32 %shr374.i, 63, !dbg !1661
  %idxprom376.i = zext i32 %and375.i to i64, !dbg !1661
  %arrayidx377.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i, !dbg !1661
  %272 = load i32, i32* %arrayidx377.i, align 4, !dbg !1661
  %273 = load i32, i32* %u.i, align 4, !dbg !1661
  %shr378.i = lshr i32 %273, 10, !dbg !1661
  %and379.i = and i32 %shr378.i, 63, !dbg !1661
  %idxprom380.i = zext i32 %and379.i to i64, !dbg !1661
  %arrayidx381.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i, !dbg !1661
  %274 = load i32, i32* %arrayidx381.i, align 4, !dbg !1661
  %xor382.i = xor i32 %272, %274, !dbg !1661
  %275 = load i32, i32* %u.i, align 4, !dbg !1661
  %shr383.i = lshr i32 %275, 18, !dbg !1661
  %and384.i = and i32 %shr383.i, 63, !dbg !1661
  %idxprom385.i = zext i32 %and384.i to i64, !dbg !1661
  %arrayidx386.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i, !dbg !1661
  %276 = load i32, i32* %arrayidx386.i, align 4, !dbg !1661
  %xor387.i = xor i32 %xor382.i, %276, !dbg !1661
  %277 = load i32, i32* %u.i, align 4, !dbg !1661
  %shr388.i = lshr i32 %277, 26, !dbg !1661
  %idxprom390.i = zext i32 %shr388.i to i64, !dbg !1661
  %arrayidx391.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i, !dbg !1661
  %278 = load i32, i32* %arrayidx391.i, align 4, !dbg !1661
  %xor392.i = xor i32 %xor387.i, %278, !dbg !1661
  %279 = load i32, i32* %t.i, align 4, !dbg !1661
  %shr393.i = lshr i32 %279, 2, !dbg !1661
  %and394.i = and i32 %shr393.i, 63, !dbg !1661
  %idxprom395.i = zext i32 %and394.i to i64, !dbg !1661
  %arrayidx396.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i, !dbg !1661
  %280 = load i32, i32* %arrayidx396.i, align 4, !dbg !1661
  %xor397.i = xor i32 %xor392.i, %280, !dbg !1661
  %281 = load i32, i32* %t.i, align 4, !dbg !1661
  %shr398.i = lshr i32 %281, 10, !dbg !1661
  %and399.i = and i32 %shr398.i, 63, !dbg !1661
  %idxprom400.i = zext i32 %and399.i to i64, !dbg !1661
  %arrayidx401.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i, !dbg !1661
  %282 = load i32, i32* %arrayidx401.i, align 4, !dbg !1661
  %xor402.i = xor i32 %xor397.i, %282, !dbg !1661
  %283 = load i32, i32* %t.i, align 4, !dbg !1661
  %shr403.i = lshr i32 %283, 18, !dbg !1661
  %and404.i = and i32 %shr403.i, 63, !dbg !1661
  %idxprom405.i = zext i32 %and404.i to i64, !dbg !1661
  %arrayidx406.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i, !dbg !1661
  %284 = load i32, i32* %arrayidx406.i, align 4, !dbg !1661
  %xor407.i = xor i32 %xor402.i, %284, !dbg !1661
  %285 = load i32, i32* %t.i, align 4, !dbg !1661
  %shr408.i = lshr i32 %285, 26, !dbg !1661
  %idxprom410.i = zext i32 %shr408.i to i64, !dbg !1661
  %arrayidx411.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i, !dbg !1661
  %286 = load i32, i32* %arrayidx411.i, align 4, !dbg !1661
  %xor412.i = xor i32 %xor407.i, %286, !dbg !1661
  %287 = load i32, i32* %r.i, align 4, !dbg !1661
  %xor413.i = xor i32 %287, %xor412.i, !dbg !1661
  store i32 %xor413.i, i32* %r.i, align 4, !dbg !1661
  %288 = load i32, i32* %r.i, align 4, !dbg !1662
  %289 = load i32*, i32** %s.i, align 8, !dbg !1662
  %arrayidx414.i = getelementptr inbounds i32, i32* %289, i64 16, !dbg !1662
  %290 = load i32, i32* %arrayidx414.i, align 4, !dbg !1662
  %xor415.i = xor i32 %288, %290, !dbg !1662
  store i32 %xor415.i, i32* %u.i, align 4, !dbg !1662
  %291 = load i32, i32* %r.i, align 4, !dbg !1662
  %292 = load i32*, i32** %s.i, align 8, !dbg !1662
  %arrayidx416.i = getelementptr inbounds i32, i32* %292, i64 17, !dbg !1662
  %293 = load i32, i32* %arrayidx416.i, align 4, !dbg !1662
  %xor417.i = xor i32 %291, %293, !dbg !1662
  store i32 %xor417.i, i32* %t.i, align 4, !dbg !1662
  %294 = load i32, i32* %t.i, align 4, !dbg !1580
  %295 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %294) #5, !dbg !1580, !srcloc !142
  store i32 %295, i32* %ret418.i, align 4, !dbg !1580
  %296 = load i32, i32* %ret418.i, align 4, !dbg !1580
  store i32 %296, i32* %tmp419.i, align 4, !dbg !1580
  %297 = load i32, i32* %tmp419.i, align 4, !dbg !1580
  store i32 %297, i32* %t.i, align 4, !dbg !1662
  %298 = load i32, i32* %u.i, align 4, !dbg !1662
  %shr420.i = lshr i32 %298, 2, !dbg !1662
  %and421.i = and i32 %shr420.i, 63, !dbg !1662
  %idxprom422.i = zext i32 %and421.i to i64, !dbg !1662
  %arrayidx423.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i, !dbg !1662
  %299 = load i32, i32* %arrayidx423.i, align 4, !dbg !1662
  %300 = load i32, i32* %u.i, align 4, !dbg !1662
  %shr424.i = lshr i32 %300, 10, !dbg !1662
  %and425.i = and i32 %shr424.i, 63, !dbg !1662
  %idxprom426.i = zext i32 %and425.i to i64, !dbg !1662
  %arrayidx427.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i, !dbg !1662
  %301 = load i32, i32* %arrayidx427.i, align 4, !dbg !1662
  %xor428.i = xor i32 %299, %301, !dbg !1662
  %302 = load i32, i32* %u.i, align 4, !dbg !1662
  %shr429.i = lshr i32 %302, 18, !dbg !1662
  %and430.i = and i32 %shr429.i, 63, !dbg !1662
  %idxprom431.i = zext i32 %and430.i to i64, !dbg !1662
  %arrayidx432.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i, !dbg !1662
  %303 = load i32, i32* %arrayidx432.i, align 4, !dbg !1662
  %xor433.i = xor i32 %xor428.i, %303, !dbg !1662
  %304 = load i32, i32* %u.i, align 4, !dbg !1662
  %shr434.i = lshr i32 %304, 26, !dbg !1662
  %idxprom436.i = zext i32 %shr434.i to i64, !dbg !1662
  %arrayidx437.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i, !dbg !1662
  %305 = load i32, i32* %arrayidx437.i, align 4, !dbg !1662
  %xor438.i = xor i32 %xor433.i, %305, !dbg !1662
  %306 = load i32, i32* %t.i, align 4, !dbg !1662
  %shr439.i = lshr i32 %306, 2, !dbg !1662
  %and440.i = and i32 %shr439.i, 63, !dbg !1662
  %idxprom441.i = zext i32 %and440.i to i64, !dbg !1662
  %arrayidx442.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i, !dbg !1662
  %307 = load i32, i32* %arrayidx442.i, align 4, !dbg !1662
  %xor443.i = xor i32 %xor438.i, %307, !dbg !1662
  %308 = load i32, i32* %t.i, align 4, !dbg !1662
  %shr444.i = lshr i32 %308, 10, !dbg !1662
  %and445.i = and i32 %shr444.i, 63, !dbg !1662
  %idxprom446.i = zext i32 %and445.i to i64, !dbg !1662
  %arrayidx447.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i, !dbg !1662
  %309 = load i32, i32* %arrayidx447.i, align 4, !dbg !1662
  %xor448.i = xor i32 %xor443.i, %309, !dbg !1662
  %310 = load i32, i32* %t.i, align 4, !dbg !1662
  %shr449.i = lshr i32 %310, 18, !dbg !1662
  %and450.i = and i32 %shr449.i, 63, !dbg !1662
  %idxprom451.i = zext i32 %and450.i to i64, !dbg !1662
  %arrayidx452.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i, !dbg !1662
  %311 = load i32, i32* %arrayidx452.i, align 4, !dbg !1662
  %xor453.i = xor i32 %xor448.i, %311, !dbg !1662
  %312 = load i32, i32* %t.i, align 4, !dbg !1662
  %shr454.i = lshr i32 %312, 26, !dbg !1662
  %idxprom456.i = zext i32 %shr454.i to i64, !dbg !1662
  %arrayidx457.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i, !dbg !1662
  %313 = load i32, i32* %arrayidx457.i, align 4, !dbg !1662
  %xor458.i = xor i32 %xor453.i, %313, !dbg !1662
  %314 = load i32, i32* %l.i, align 4, !dbg !1662
  %xor459.i = xor i32 %314, %xor458.i, !dbg !1662
  store i32 %xor459.i, i32* %l.i, align 4, !dbg !1662
  %315 = load i32, i32* %l.i, align 4, !dbg !1663
  %316 = load i32*, i32** %s.i, align 8, !dbg !1663
  %arrayidx460.i = getelementptr inbounds i32, i32* %316, i64 18, !dbg !1663
  %317 = load i32, i32* %arrayidx460.i, align 4, !dbg !1663
  %xor461.i = xor i32 %315, %317, !dbg !1663
  store i32 %xor461.i, i32* %u.i, align 4, !dbg !1663
  %318 = load i32, i32* %l.i, align 4, !dbg !1663
  %319 = load i32*, i32** %s.i, align 8, !dbg !1663
  %arrayidx462.i = getelementptr inbounds i32, i32* %319, i64 19, !dbg !1663
  %320 = load i32, i32* %arrayidx462.i, align 4, !dbg !1663
  %xor463.i = xor i32 %318, %320, !dbg !1663
  store i32 %xor463.i, i32* %t.i, align 4, !dbg !1663
  %321 = load i32, i32* %t.i, align 4, !dbg !1581
  %322 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %321) #5, !dbg !1581, !srcloc !148
  store i32 %322, i32* %ret464.i, align 4, !dbg !1581
  %323 = load i32, i32* %ret464.i, align 4, !dbg !1581
  store i32 %323, i32* %tmp465.i, align 4, !dbg !1581
  %324 = load i32, i32* %tmp465.i, align 4, !dbg !1581
  store i32 %324, i32* %t.i, align 4, !dbg !1663
  %325 = load i32, i32* %u.i, align 4, !dbg !1663
  %shr466.i = lshr i32 %325, 2, !dbg !1663
  %and467.i = and i32 %shr466.i, 63, !dbg !1663
  %idxprom468.i = zext i32 %and467.i to i64, !dbg !1663
  %arrayidx469.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i, !dbg !1663
  %326 = load i32, i32* %arrayidx469.i, align 4, !dbg !1663
  %327 = load i32, i32* %u.i, align 4, !dbg !1663
  %shr470.i = lshr i32 %327, 10, !dbg !1663
  %and471.i = and i32 %shr470.i, 63, !dbg !1663
  %idxprom472.i = zext i32 %and471.i to i64, !dbg !1663
  %arrayidx473.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i, !dbg !1663
  %328 = load i32, i32* %arrayidx473.i, align 4, !dbg !1663
  %xor474.i = xor i32 %326, %328, !dbg !1663
  %329 = load i32, i32* %u.i, align 4, !dbg !1663
  %shr475.i = lshr i32 %329, 18, !dbg !1663
  %and476.i = and i32 %shr475.i, 63, !dbg !1663
  %idxprom477.i = zext i32 %and476.i to i64, !dbg !1663
  %arrayidx478.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i, !dbg !1663
  %330 = load i32, i32* %arrayidx478.i, align 4, !dbg !1663
  %xor479.i = xor i32 %xor474.i, %330, !dbg !1663
  %331 = load i32, i32* %u.i, align 4, !dbg !1663
  %shr480.i = lshr i32 %331, 26, !dbg !1663
  %idxprom482.i = zext i32 %shr480.i to i64, !dbg !1663
  %arrayidx483.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i, !dbg !1663
  %332 = load i32, i32* %arrayidx483.i, align 4, !dbg !1663
  %xor484.i = xor i32 %xor479.i, %332, !dbg !1663
  %333 = load i32, i32* %t.i, align 4, !dbg !1663
  %shr485.i = lshr i32 %333, 2, !dbg !1663
  %and486.i = and i32 %shr485.i, 63, !dbg !1663
  %idxprom487.i = zext i32 %and486.i to i64, !dbg !1663
  %arrayidx488.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i, !dbg !1663
  %334 = load i32, i32* %arrayidx488.i, align 4, !dbg !1663
  %xor489.i = xor i32 %xor484.i, %334, !dbg !1663
  %335 = load i32, i32* %t.i, align 4, !dbg !1663
  %shr490.i = lshr i32 %335, 10, !dbg !1663
  %and491.i = and i32 %shr490.i, 63, !dbg !1663
  %idxprom492.i = zext i32 %and491.i to i64, !dbg !1663
  %arrayidx493.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i, !dbg !1663
  %336 = load i32, i32* %arrayidx493.i, align 4, !dbg !1663
  %xor494.i = xor i32 %xor489.i, %336, !dbg !1663
  %337 = load i32, i32* %t.i, align 4, !dbg !1663
  %shr495.i = lshr i32 %337, 18, !dbg !1663
  %and496.i = and i32 %shr495.i, 63, !dbg !1663
  %idxprom497.i = zext i32 %and496.i to i64, !dbg !1663
  %arrayidx498.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i, !dbg !1663
  %338 = load i32, i32* %arrayidx498.i, align 4, !dbg !1663
  %xor499.i = xor i32 %xor494.i, %338, !dbg !1663
  %339 = load i32, i32* %t.i, align 4, !dbg !1663
  %shr500.i = lshr i32 %339, 26, !dbg !1663
  %idxprom502.i = zext i32 %shr500.i to i64, !dbg !1663
  %arrayidx503.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i, !dbg !1663
  %340 = load i32, i32* %arrayidx503.i, align 4, !dbg !1663
  %xor504.i = xor i32 %xor499.i, %340, !dbg !1663
  %341 = load i32, i32* %r.i, align 4, !dbg !1663
  %xor505.i = xor i32 %341, %xor504.i, !dbg !1663
  store i32 %xor505.i, i32* %r.i, align 4, !dbg !1663
  %342 = load i32, i32* %r.i, align 4, !dbg !1664
  %343 = load i32*, i32** %s.i, align 8, !dbg !1664
  %arrayidx506.i = getelementptr inbounds i32, i32* %343, i64 20, !dbg !1664
  %344 = load i32, i32* %arrayidx506.i, align 4, !dbg !1664
  %xor507.i = xor i32 %342, %344, !dbg !1664
  store i32 %xor507.i, i32* %u.i, align 4, !dbg !1664
  %345 = load i32, i32* %r.i, align 4, !dbg !1664
  %346 = load i32*, i32** %s.i, align 8, !dbg !1664
  %arrayidx508.i = getelementptr inbounds i32, i32* %346, i64 21, !dbg !1664
  %347 = load i32, i32* %arrayidx508.i, align 4, !dbg !1664
  %xor509.i = xor i32 %345, %347, !dbg !1664
  store i32 %xor509.i, i32* %t.i, align 4, !dbg !1664
  %348 = load i32, i32* %t.i, align 4, !dbg !1582
  %349 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %348) #5, !dbg !1582, !srcloc !154
  store i32 %349, i32* %ret510.i, align 4, !dbg !1582
  %350 = load i32, i32* %ret510.i, align 4, !dbg !1582
  store i32 %350, i32* %tmp511.i, align 4, !dbg !1582
  %351 = load i32, i32* %tmp511.i, align 4, !dbg !1582
  store i32 %351, i32* %t.i, align 4, !dbg !1664
  %352 = load i32, i32* %u.i, align 4, !dbg !1664
  %shr512.i = lshr i32 %352, 2, !dbg !1664
  %and513.i = and i32 %shr512.i, 63, !dbg !1664
  %idxprom514.i = zext i32 %and513.i to i64, !dbg !1664
  %arrayidx515.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i, !dbg !1664
  %353 = load i32, i32* %arrayidx515.i, align 4, !dbg !1664
  %354 = load i32, i32* %u.i, align 4, !dbg !1664
  %shr516.i = lshr i32 %354, 10, !dbg !1664
  %and517.i = and i32 %shr516.i, 63, !dbg !1664
  %idxprom518.i = zext i32 %and517.i to i64, !dbg !1664
  %arrayidx519.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i, !dbg !1664
  %355 = load i32, i32* %arrayidx519.i, align 4, !dbg !1664
  %xor520.i = xor i32 %353, %355, !dbg !1664
  %356 = load i32, i32* %u.i, align 4, !dbg !1664
  %shr521.i = lshr i32 %356, 18, !dbg !1664
  %and522.i = and i32 %shr521.i, 63, !dbg !1664
  %idxprom523.i = zext i32 %and522.i to i64, !dbg !1664
  %arrayidx524.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i, !dbg !1664
  %357 = load i32, i32* %arrayidx524.i, align 4, !dbg !1664
  %xor525.i = xor i32 %xor520.i, %357, !dbg !1664
  %358 = load i32, i32* %u.i, align 4, !dbg !1664
  %shr526.i = lshr i32 %358, 26, !dbg !1664
  %idxprom528.i = zext i32 %shr526.i to i64, !dbg !1664
  %arrayidx529.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i, !dbg !1664
  %359 = load i32, i32* %arrayidx529.i, align 4, !dbg !1664
  %xor530.i = xor i32 %xor525.i, %359, !dbg !1664
  %360 = load i32, i32* %t.i, align 4, !dbg !1664
  %shr531.i = lshr i32 %360, 2, !dbg !1664
  %and532.i = and i32 %shr531.i, 63, !dbg !1664
  %idxprom533.i = zext i32 %and532.i to i64, !dbg !1664
  %arrayidx534.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i, !dbg !1664
  %361 = load i32, i32* %arrayidx534.i, align 4, !dbg !1664
  %xor535.i = xor i32 %xor530.i, %361, !dbg !1664
  %362 = load i32, i32* %t.i, align 4, !dbg !1664
  %shr536.i = lshr i32 %362, 10, !dbg !1664
  %and537.i = and i32 %shr536.i, 63, !dbg !1664
  %idxprom538.i = zext i32 %and537.i to i64, !dbg !1664
  %arrayidx539.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i, !dbg !1664
  %363 = load i32, i32* %arrayidx539.i, align 4, !dbg !1664
  %xor540.i = xor i32 %xor535.i, %363, !dbg !1664
  %364 = load i32, i32* %t.i, align 4, !dbg !1664
  %shr541.i = lshr i32 %364, 18, !dbg !1664
  %and542.i = and i32 %shr541.i, 63, !dbg !1664
  %idxprom543.i = zext i32 %and542.i to i64, !dbg !1664
  %arrayidx544.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i, !dbg !1664
  %365 = load i32, i32* %arrayidx544.i, align 4, !dbg !1664
  %xor545.i = xor i32 %xor540.i, %365, !dbg !1664
  %366 = load i32, i32* %t.i, align 4, !dbg !1664
  %shr546.i = lshr i32 %366, 26, !dbg !1664
  %idxprom548.i = zext i32 %shr546.i to i64, !dbg !1664
  %arrayidx549.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i, !dbg !1664
  %367 = load i32, i32* %arrayidx549.i, align 4, !dbg !1664
  %xor550.i = xor i32 %xor545.i, %367, !dbg !1664
  %368 = load i32, i32* %l.i, align 4, !dbg !1664
  %xor551.i = xor i32 %368, %xor550.i, !dbg !1664
  store i32 %xor551.i, i32* %l.i, align 4, !dbg !1664
  %369 = load i32, i32* %l.i, align 4, !dbg !1665
  %370 = load i32*, i32** %s.i, align 8, !dbg !1665
  %arrayidx552.i = getelementptr inbounds i32, i32* %370, i64 22, !dbg !1665
  %371 = load i32, i32* %arrayidx552.i, align 4, !dbg !1665
  %xor553.i = xor i32 %369, %371, !dbg !1665
  store i32 %xor553.i, i32* %u.i, align 4, !dbg !1665
  %372 = load i32, i32* %l.i, align 4, !dbg !1665
  %373 = load i32*, i32** %s.i, align 8, !dbg !1665
  %arrayidx554.i = getelementptr inbounds i32, i32* %373, i64 23, !dbg !1665
  %374 = load i32, i32* %arrayidx554.i, align 4, !dbg !1665
  %xor555.i = xor i32 %372, %374, !dbg !1665
  store i32 %xor555.i, i32* %t.i, align 4, !dbg !1665
  %375 = load i32, i32* %t.i, align 4, !dbg !1583
  %376 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %375) #5, !dbg !1583, !srcloc !160
  store i32 %376, i32* %ret556.i, align 4, !dbg !1583
  %377 = load i32, i32* %ret556.i, align 4, !dbg !1583
  store i32 %377, i32* %tmp557.i, align 4, !dbg !1583
  %378 = load i32, i32* %tmp557.i, align 4, !dbg !1583
  store i32 %378, i32* %t.i, align 4, !dbg !1665
  %379 = load i32, i32* %u.i, align 4, !dbg !1665
  %shr558.i = lshr i32 %379, 2, !dbg !1665
  %and559.i = and i32 %shr558.i, 63, !dbg !1665
  %idxprom560.i = zext i32 %and559.i to i64, !dbg !1665
  %arrayidx561.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i, !dbg !1665
  %380 = load i32, i32* %arrayidx561.i, align 4, !dbg !1665
  %381 = load i32, i32* %u.i, align 4, !dbg !1665
  %shr562.i = lshr i32 %381, 10, !dbg !1665
  %and563.i = and i32 %shr562.i, 63, !dbg !1665
  %idxprom564.i = zext i32 %and563.i to i64, !dbg !1665
  %arrayidx565.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i, !dbg !1665
  %382 = load i32, i32* %arrayidx565.i, align 4, !dbg !1665
  %xor566.i = xor i32 %380, %382, !dbg !1665
  %383 = load i32, i32* %u.i, align 4, !dbg !1665
  %shr567.i = lshr i32 %383, 18, !dbg !1665
  %and568.i = and i32 %shr567.i, 63, !dbg !1665
  %idxprom569.i = zext i32 %and568.i to i64, !dbg !1665
  %arrayidx570.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i, !dbg !1665
  %384 = load i32, i32* %arrayidx570.i, align 4, !dbg !1665
  %xor571.i = xor i32 %xor566.i, %384, !dbg !1665
  %385 = load i32, i32* %u.i, align 4, !dbg !1665
  %shr572.i = lshr i32 %385, 26, !dbg !1665
  %idxprom574.i = zext i32 %shr572.i to i64, !dbg !1665
  %arrayidx575.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i, !dbg !1665
  %386 = load i32, i32* %arrayidx575.i, align 4, !dbg !1665
  %xor576.i = xor i32 %xor571.i, %386, !dbg !1665
  %387 = load i32, i32* %t.i, align 4, !dbg !1665
  %shr577.i = lshr i32 %387, 2, !dbg !1665
  %and578.i = and i32 %shr577.i, 63, !dbg !1665
  %idxprom579.i = zext i32 %and578.i to i64, !dbg !1665
  %arrayidx580.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i, !dbg !1665
  %388 = load i32, i32* %arrayidx580.i, align 4, !dbg !1665
  %xor581.i = xor i32 %xor576.i, %388, !dbg !1665
  %389 = load i32, i32* %t.i, align 4, !dbg !1665
  %shr582.i = lshr i32 %389, 10, !dbg !1665
  %and583.i = and i32 %shr582.i, 63, !dbg !1665
  %idxprom584.i = zext i32 %and583.i to i64, !dbg !1665
  %arrayidx585.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i, !dbg !1665
  %390 = load i32, i32* %arrayidx585.i, align 4, !dbg !1665
  %xor586.i = xor i32 %xor581.i, %390, !dbg !1665
  %391 = load i32, i32* %t.i, align 4, !dbg !1665
  %shr587.i = lshr i32 %391, 18, !dbg !1665
  %and588.i = and i32 %shr587.i, 63, !dbg !1665
  %idxprom589.i = zext i32 %and588.i to i64, !dbg !1665
  %arrayidx590.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i, !dbg !1665
  %392 = load i32, i32* %arrayidx590.i, align 4, !dbg !1665
  %xor591.i = xor i32 %xor586.i, %392, !dbg !1665
  %393 = load i32, i32* %t.i, align 4, !dbg !1665
  %shr592.i = lshr i32 %393, 26, !dbg !1665
  %idxprom594.i = zext i32 %shr592.i to i64, !dbg !1665
  %arrayidx595.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i, !dbg !1665
  %394 = load i32, i32* %arrayidx595.i, align 4, !dbg !1665
  %xor596.i = xor i32 %xor591.i, %394, !dbg !1665
  %395 = load i32, i32* %r.i, align 4, !dbg !1665
  %xor597.i = xor i32 %395, %xor596.i, !dbg !1665
  store i32 %xor597.i, i32* %r.i, align 4, !dbg !1665
  %396 = load i32, i32* %r.i, align 4, !dbg !1666
  %397 = load i32*, i32** %s.i, align 8, !dbg !1666
  %arrayidx598.i = getelementptr inbounds i32, i32* %397, i64 24, !dbg !1666
  %398 = load i32, i32* %arrayidx598.i, align 4, !dbg !1666
  %xor599.i = xor i32 %396, %398, !dbg !1666
  store i32 %xor599.i, i32* %u.i, align 4, !dbg !1666
  %399 = load i32, i32* %r.i, align 4, !dbg !1666
  %400 = load i32*, i32** %s.i, align 8, !dbg !1666
  %arrayidx600.i = getelementptr inbounds i32, i32* %400, i64 25, !dbg !1666
  %401 = load i32, i32* %arrayidx600.i, align 4, !dbg !1666
  %xor601.i = xor i32 %399, %401, !dbg !1666
  store i32 %xor601.i, i32* %t.i, align 4, !dbg !1666
  %402 = load i32, i32* %t.i, align 4, !dbg !1584
  %403 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %402) #5, !dbg !1584, !srcloc !166
  store i32 %403, i32* %ret602.i, align 4, !dbg !1584
  %404 = load i32, i32* %ret602.i, align 4, !dbg !1584
  store i32 %404, i32* %tmp603.i, align 4, !dbg !1584
  %405 = load i32, i32* %tmp603.i, align 4, !dbg !1584
  store i32 %405, i32* %t.i, align 4, !dbg !1666
  %406 = load i32, i32* %u.i, align 4, !dbg !1666
  %shr604.i = lshr i32 %406, 2, !dbg !1666
  %and605.i = and i32 %shr604.i, 63, !dbg !1666
  %idxprom606.i = zext i32 %and605.i to i64, !dbg !1666
  %arrayidx607.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i, !dbg !1666
  %407 = load i32, i32* %arrayidx607.i, align 4, !dbg !1666
  %408 = load i32, i32* %u.i, align 4, !dbg !1666
  %shr608.i = lshr i32 %408, 10, !dbg !1666
  %and609.i = and i32 %shr608.i, 63, !dbg !1666
  %idxprom610.i = zext i32 %and609.i to i64, !dbg !1666
  %arrayidx611.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i, !dbg !1666
  %409 = load i32, i32* %arrayidx611.i, align 4, !dbg !1666
  %xor612.i = xor i32 %407, %409, !dbg !1666
  %410 = load i32, i32* %u.i, align 4, !dbg !1666
  %shr613.i = lshr i32 %410, 18, !dbg !1666
  %and614.i = and i32 %shr613.i, 63, !dbg !1666
  %idxprom615.i = zext i32 %and614.i to i64, !dbg !1666
  %arrayidx616.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i, !dbg !1666
  %411 = load i32, i32* %arrayidx616.i, align 4, !dbg !1666
  %xor617.i = xor i32 %xor612.i, %411, !dbg !1666
  %412 = load i32, i32* %u.i, align 4, !dbg !1666
  %shr618.i = lshr i32 %412, 26, !dbg !1666
  %idxprom620.i = zext i32 %shr618.i to i64, !dbg !1666
  %arrayidx621.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i, !dbg !1666
  %413 = load i32, i32* %arrayidx621.i, align 4, !dbg !1666
  %xor622.i = xor i32 %xor617.i, %413, !dbg !1666
  %414 = load i32, i32* %t.i, align 4, !dbg !1666
  %shr623.i = lshr i32 %414, 2, !dbg !1666
  %and624.i = and i32 %shr623.i, 63, !dbg !1666
  %idxprom625.i = zext i32 %and624.i to i64, !dbg !1666
  %arrayidx626.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i, !dbg !1666
  %415 = load i32, i32* %arrayidx626.i, align 4, !dbg !1666
  %xor627.i = xor i32 %xor622.i, %415, !dbg !1666
  %416 = load i32, i32* %t.i, align 4, !dbg !1666
  %shr628.i = lshr i32 %416, 10, !dbg !1666
  %and629.i = and i32 %shr628.i, 63, !dbg !1666
  %idxprom630.i = zext i32 %and629.i to i64, !dbg !1666
  %arrayidx631.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i, !dbg !1666
  %417 = load i32, i32* %arrayidx631.i, align 4, !dbg !1666
  %xor632.i = xor i32 %xor627.i, %417, !dbg !1666
  %418 = load i32, i32* %t.i, align 4, !dbg !1666
  %shr633.i = lshr i32 %418, 18, !dbg !1666
  %and634.i = and i32 %shr633.i, 63, !dbg !1666
  %idxprom635.i = zext i32 %and634.i to i64, !dbg !1666
  %arrayidx636.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i, !dbg !1666
  %419 = load i32, i32* %arrayidx636.i, align 4, !dbg !1666
  %xor637.i = xor i32 %xor632.i, %419, !dbg !1666
  %420 = load i32, i32* %t.i, align 4, !dbg !1666
  %shr638.i = lshr i32 %420, 26, !dbg !1666
  %idxprom640.i = zext i32 %shr638.i to i64, !dbg !1666
  %arrayidx641.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i, !dbg !1666
  %421 = load i32, i32* %arrayidx641.i, align 4, !dbg !1666
  %xor642.i = xor i32 %xor637.i, %421, !dbg !1666
  %422 = load i32, i32* %l.i, align 4, !dbg !1666
  %xor643.i = xor i32 %422, %xor642.i, !dbg !1666
  store i32 %xor643.i, i32* %l.i, align 4, !dbg !1666
  %423 = load i32, i32* %l.i, align 4, !dbg !1667
  %424 = load i32*, i32** %s.i, align 8, !dbg !1667
  %arrayidx644.i = getelementptr inbounds i32, i32* %424, i64 26, !dbg !1667
  %425 = load i32, i32* %arrayidx644.i, align 4, !dbg !1667
  %xor645.i = xor i32 %423, %425, !dbg !1667
  store i32 %xor645.i, i32* %u.i, align 4, !dbg !1667
  %426 = load i32, i32* %l.i, align 4, !dbg !1667
  %427 = load i32*, i32** %s.i, align 8, !dbg !1667
  %arrayidx646.i = getelementptr inbounds i32, i32* %427, i64 27, !dbg !1667
  %428 = load i32, i32* %arrayidx646.i, align 4, !dbg !1667
  %xor647.i = xor i32 %426, %428, !dbg !1667
  store i32 %xor647.i, i32* %t.i, align 4, !dbg !1667
  %429 = load i32, i32* %t.i, align 4, !dbg !1585
  %430 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %429) #5, !dbg !1585, !srcloc !172
  store i32 %430, i32* %ret648.i, align 4, !dbg !1585
  %431 = load i32, i32* %ret648.i, align 4, !dbg !1585
  store i32 %431, i32* %tmp649.i, align 4, !dbg !1585
  %432 = load i32, i32* %tmp649.i, align 4, !dbg !1585
  store i32 %432, i32* %t.i, align 4, !dbg !1667
  %433 = load i32, i32* %u.i, align 4, !dbg !1667
  %shr650.i = lshr i32 %433, 2, !dbg !1667
  %and651.i = and i32 %shr650.i, 63, !dbg !1667
  %idxprom652.i = zext i32 %and651.i to i64, !dbg !1667
  %arrayidx653.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i, !dbg !1667
  %434 = load i32, i32* %arrayidx653.i, align 4, !dbg !1667
  %435 = load i32, i32* %u.i, align 4, !dbg !1667
  %shr654.i = lshr i32 %435, 10, !dbg !1667
  %and655.i = and i32 %shr654.i, 63, !dbg !1667
  %idxprom656.i = zext i32 %and655.i to i64, !dbg !1667
  %arrayidx657.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i, !dbg !1667
  %436 = load i32, i32* %arrayidx657.i, align 4, !dbg !1667
  %xor658.i = xor i32 %434, %436, !dbg !1667
  %437 = load i32, i32* %u.i, align 4, !dbg !1667
  %shr659.i = lshr i32 %437, 18, !dbg !1667
  %and660.i = and i32 %shr659.i, 63, !dbg !1667
  %idxprom661.i = zext i32 %and660.i to i64, !dbg !1667
  %arrayidx662.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i, !dbg !1667
  %438 = load i32, i32* %arrayidx662.i, align 4, !dbg !1667
  %xor663.i = xor i32 %xor658.i, %438, !dbg !1667
  %439 = load i32, i32* %u.i, align 4, !dbg !1667
  %shr664.i = lshr i32 %439, 26, !dbg !1667
  %idxprom666.i = zext i32 %shr664.i to i64, !dbg !1667
  %arrayidx667.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i, !dbg !1667
  %440 = load i32, i32* %arrayidx667.i, align 4, !dbg !1667
  %xor668.i = xor i32 %xor663.i, %440, !dbg !1667
  %441 = load i32, i32* %t.i, align 4, !dbg !1667
  %shr669.i = lshr i32 %441, 2, !dbg !1667
  %and670.i = and i32 %shr669.i, 63, !dbg !1667
  %idxprom671.i = zext i32 %and670.i to i64, !dbg !1667
  %arrayidx672.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i, !dbg !1667
  %442 = load i32, i32* %arrayidx672.i, align 4, !dbg !1667
  %xor673.i = xor i32 %xor668.i, %442, !dbg !1667
  %443 = load i32, i32* %t.i, align 4, !dbg !1667
  %shr674.i = lshr i32 %443, 10, !dbg !1667
  %and675.i = and i32 %shr674.i, 63, !dbg !1667
  %idxprom676.i = zext i32 %and675.i to i64, !dbg !1667
  %arrayidx677.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i, !dbg !1667
  %444 = load i32, i32* %arrayidx677.i, align 4, !dbg !1667
  %xor678.i = xor i32 %xor673.i, %444, !dbg !1667
  %445 = load i32, i32* %t.i, align 4, !dbg !1667
  %shr679.i = lshr i32 %445, 18, !dbg !1667
  %and680.i = and i32 %shr679.i, 63, !dbg !1667
  %idxprom681.i = zext i32 %and680.i to i64, !dbg !1667
  %arrayidx682.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i, !dbg !1667
  %446 = load i32, i32* %arrayidx682.i, align 4, !dbg !1667
  %xor683.i = xor i32 %xor678.i, %446, !dbg !1667
  %447 = load i32, i32* %t.i, align 4, !dbg !1667
  %shr684.i = lshr i32 %447, 26, !dbg !1667
  %idxprom686.i = zext i32 %shr684.i to i64, !dbg !1667
  %arrayidx687.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i, !dbg !1667
  %448 = load i32, i32* %arrayidx687.i, align 4, !dbg !1667
  %xor688.i = xor i32 %xor683.i, %448, !dbg !1667
  %449 = load i32, i32* %r.i, align 4, !dbg !1667
  %xor689.i = xor i32 %449, %xor688.i, !dbg !1667
  store i32 %xor689.i, i32* %r.i, align 4, !dbg !1667
  %450 = load i32, i32* %r.i, align 4, !dbg !1668
  %451 = load i32*, i32** %s.i, align 8, !dbg !1668
  %arrayidx690.i = getelementptr inbounds i32, i32* %451, i64 28, !dbg !1668
  %452 = load i32, i32* %arrayidx690.i, align 4, !dbg !1668
  %xor691.i = xor i32 %450, %452, !dbg !1668
  store i32 %xor691.i, i32* %u.i, align 4, !dbg !1668
  %453 = load i32, i32* %r.i, align 4, !dbg !1668
  %454 = load i32*, i32** %s.i, align 8, !dbg !1668
  %arrayidx692.i = getelementptr inbounds i32, i32* %454, i64 29, !dbg !1668
  %455 = load i32, i32* %arrayidx692.i, align 4, !dbg !1668
  %xor693.i = xor i32 %453, %455, !dbg !1668
  store i32 %xor693.i, i32* %t.i, align 4, !dbg !1668
  %456 = load i32, i32* %t.i, align 4, !dbg !1586
  %457 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %456) #5, !dbg !1586, !srcloc !178
  store i32 %457, i32* %ret694.i, align 4, !dbg !1586
  %458 = load i32, i32* %ret694.i, align 4, !dbg !1586
  store i32 %458, i32* %tmp695.i, align 4, !dbg !1586
  %459 = load i32, i32* %tmp695.i, align 4, !dbg !1586
  store i32 %459, i32* %t.i, align 4, !dbg !1668
  %460 = load i32, i32* %u.i, align 4, !dbg !1668
  %shr696.i = lshr i32 %460, 2, !dbg !1668
  %and697.i = and i32 %shr696.i, 63, !dbg !1668
  %idxprom698.i = zext i32 %and697.i to i64, !dbg !1668
  %arrayidx699.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i, !dbg !1668
  %461 = load i32, i32* %arrayidx699.i, align 4, !dbg !1668
  %462 = load i32, i32* %u.i, align 4, !dbg !1668
  %shr700.i = lshr i32 %462, 10, !dbg !1668
  %and701.i = and i32 %shr700.i, 63, !dbg !1668
  %idxprom702.i = zext i32 %and701.i to i64, !dbg !1668
  %arrayidx703.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i, !dbg !1668
  %463 = load i32, i32* %arrayidx703.i, align 4, !dbg !1668
  %xor704.i = xor i32 %461, %463, !dbg !1668
  %464 = load i32, i32* %u.i, align 4, !dbg !1668
  %shr705.i = lshr i32 %464, 18, !dbg !1668
  %and706.i = and i32 %shr705.i, 63, !dbg !1668
  %idxprom707.i = zext i32 %and706.i to i64, !dbg !1668
  %arrayidx708.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i, !dbg !1668
  %465 = load i32, i32* %arrayidx708.i, align 4, !dbg !1668
  %xor709.i = xor i32 %xor704.i, %465, !dbg !1668
  %466 = load i32, i32* %u.i, align 4, !dbg !1668
  %shr710.i = lshr i32 %466, 26, !dbg !1668
  %idxprom712.i = zext i32 %shr710.i to i64, !dbg !1668
  %arrayidx713.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i, !dbg !1668
  %467 = load i32, i32* %arrayidx713.i, align 4, !dbg !1668
  %xor714.i = xor i32 %xor709.i, %467, !dbg !1668
  %468 = load i32, i32* %t.i, align 4, !dbg !1668
  %shr715.i = lshr i32 %468, 2, !dbg !1668
  %and716.i = and i32 %shr715.i, 63, !dbg !1668
  %idxprom717.i = zext i32 %and716.i to i64, !dbg !1668
  %arrayidx718.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i, !dbg !1668
  %469 = load i32, i32* %arrayidx718.i, align 4, !dbg !1668
  %xor719.i = xor i32 %xor714.i, %469, !dbg !1668
  %470 = load i32, i32* %t.i, align 4, !dbg !1668
  %shr720.i = lshr i32 %470, 10, !dbg !1668
  %and721.i = and i32 %shr720.i, 63, !dbg !1668
  %idxprom722.i = zext i32 %and721.i to i64, !dbg !1668
  %arrayidx723.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i, !dbg !1668
  %471 = load i32, i32* %arrayidx723.i, align 4, !dbg !1668
  %xor724.i = xor i32 %xor719.i, %471, !dbg !1668
  %472 = load i32, i32* %t.i, align 4, !dbg !1668
  %shr725.i = lshr i32 %472, 18, !dbg !1668
  %and726.i = and i32 %shr725.i, 63, !dbg !1668
  %idxprom727.i = zext i32 %and726.i to i64, !dbg !1668
  %arrayidx728.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i, !dbg !1668
  %473 = load i32, i32* %arrayidx728.i, align 4, !dbg !1668
  %xor729.i = xor i32 %xor724.i, %473, !dbg !1668
  %474 = load i32, i32* %t.i, align 4, !dbg !1668
  %shr730.i = lshr i32 %474, 26, !dbg !1668
  %idxprom732.i = zext i32 %shr730.i to i64, !dbg !1668
  %arrayidx733.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i, !dbg !1668
  %475 = load i32, i32* %arrayidx733.i, align 4, !dbg !1668
  %xor734.i = xor i32 %xor729.i, %475, !dbg !1668
  %476 = load i32, i32* %l.i, align 4, !dbg !1668
  %xor735.i = xor i32 %476, %xor734.i, !dbg !1668
  store i32 %xor735.i, i32* %l.i, align 4, !dbg !1668
  %477 = load i32, i32* %l.i, align 4, !dbg !1669
  %478 = load i32*, i32** %s.i, align 8, !dbg !1669
  %arrayidx736.i = getelementptr inbounds i32, i32* %478, i64 30, !dbg !1669
  %479 = load i32, i32* %arrayidx736.i, align 4, !dbg !1669
  %xor737.i = xor i32 %477, %479, !dbg !1669
  store i32 %xor737.i, i32* %u.i, align 4, !dbg !1669
  %480 = load i32, i32* %l.i, align 4, !dbg !1669
  %481 = load i32*, i32** %s.i, align 8, !dbg !1669
  %arrayidx738.i = getelementptr inbounds i32, i32* %481, i64 31, !dbg !1669
  %482 = load i32, i32* %arrayidx738.i, align 4, !dbg !1669
  %xor739.i = xor i32 %480, %482, !dbg !1669
  store i32 %xor739.i, i32* %t.i, align 4, !dbg !1669
  %483 = load i32, i32* %t.i, align 4, !dbg !1587
  %484 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %483) #5, !dbg !1587, !srcloc !184
  store i32 %484, i32* %ret740.i, align 4, !dbg !1587
  %485 = load i32, i32* %ret740.i, align 4, !dbg !1587
  store i32 %485, i32* %tmp741.i, align 4, !dbg !1587
  %486 = load i32, i32* %tmp741.i, align 4, !dbg !1587
  store i32 %486, i32* %t.i, align 4, !dbg !1669
  %487 = load i32, i32* %u.i, align 4, !dbg !1669
  %shr742.i = lshr i32 %487, 2, !dbg !1669
  %and743.i = and i32 %shr742.i, 63, !dbg !1669
  %idxprom744.i = zext i32 %and743.i to i64, !dbg !1669
  %arrayidx745.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i, !dbg !1669
  %488 = load i32, i32* %arrayidx745.i, align 4, !dbg !1669
  %489 = load i32, i32* %u.i, align 4, !dbg !1669
  %shr746.i = lshr i32 %489, 10, !dbg !1669
  %and747.i = and i32 %shr746.i, 63, !dbg !1669
  %idxprom748.i = zext i32 %and747.i to i64, !dbg !1669
  %arrayidx749.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i, !dbg !1669
  %490 = load i32, i32* %arrayidx749.i, align 4, !dbg !1669
  %xor750.i = xor i32 %488, %490, !dbg !1669
  %491 = load i32, i32* %u.i, align 4, !dbg !1669
  %shr751.i = lshr i32 %491, 18, !dbg !1669
  %and752.i = and i32 %shr751.i, 63, !dbg !1669
  %idxprom753.i = zext i32 %and752.i to i64, !dbg !1669
  %arrayidx754.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i, !dbg !1669
  %492 = load i32, i32* %arrayidx754.i, align 4, !dbg !1669
  %xor755.i = xor i32 %xor750.i, %492, !dbg !1669
  %493 = load i32, i32* %u.i, align 4, !dbg !1669
  %shr756.i = lshr i32 %493, 26, !dbg !1669
  %idxprom758.i = zext i32 %shr756.i to i64, !dbg !1669
  %arrayidx759.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i, !dbg !1669
  %494 = load i32, i32* %arrayidx759.i, align 4, !dbg !1669
  %xor760.i = xor i32 %xor755.i, %494, !dbg !1669
  %495 = load i32, i32* %t.i, align 4, !dbg !1669
  %shr761.i = lshr i32 %495, 2, !dbg !1669
  %and762.i = and i32 %shr761.i, 63, !dbg !1669
  %idxprom763.i = zext i32 %and762.i to i64, !dbg !1669
  %arrayidx764.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i, !dbg !1669
  %496 = load i32, i32* %arrayidx764.i, align 4, !dbg !1669
  %xor765.i = xor i32 %xor760.i, %496, !dbg !1669
  %497 = load i32, i32* %t.i, align 4, !dbg !1669
  %shr766.i = lshr i32 %497, 10, !dbg !1669
  %and767.i = and i32 %shr766.i, 63, !dbg !1669
  %idxprom768.i = zext i32 %and767.i to i64, !dbg !1669
  %arrayidx769.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i, !dbg !1669
  %498 = load i32, i32* %arrayidx769.i, align 4, !dbg !1669
  %xor770.i = xor i32 %xor765.i, %498, !dbg !1669
  %499 = load i32, i32* %t.i, align 4, !dbg !1669
  %shr771.i = lshr i32 %499, 18, !dbg !1669
  %and772.i = and i32 %shr771.i, 63, !dbg !1669
  %idxprom773.i = zext i32 %and772.i to i64, !dbg !1669
  %arrayidx774.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i, !dbg !1669
  %500 = load i32, i32* %arrayidx774.i, align 4, !dbg !1669
  %xor775.i = xor i32 %xor770.i, %500, !dbg !1669
  %501 = load i32, i32* %t.i, align 4, !dbg !1669
  %shr776.i = lshr i32 %501, 26, !dbg !1669
  %idxprom778.i = zext i32 %shr776.i to i64, !dbg !1669
  %arrayidx779.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i, !dbg !1669
  %502 = load i32, i32* %arrayidx779.i, align 4, !dbg !1669
  %xor780.i = xor i32 %xor775.i, %502, !dbg !1669
  %503 = load i32, i32* %r.i, align 4, !dbg !1669
  %xor781.i = xor i32 %503, %xor780.i, !dbg !1669
  store i32 %xor781.i, i32* %r.i, align 4, !dbg !1669
  br label %DES_encrypt1.exit, !dbg !1670

if.else.i:                                        ; preds = %entry
  %504 = load i32, i32* %r.i, align 4, !dbg !1671
  %505 = load i32*, i32** %s.i, align 8, !dbg !1671
  %arrayidx782.i = getelementptr inbounds i32, i32* %505, i64 30, !dbg !1671
  %506 = load i32, i32* %arrayidx782.i, align 4, !dbg !1671
  %xor783.i = xor i32 %504, %506, !dbg !1671
  store i32 %xor783.i, i32* %u.i, align 4, !dbg !1671
  %507 = load i32, i32* %r.i, align 4, !dbg !1671
  %508 = load i32*, i32** %s.i, align 8, !dbg !1671
  %arrayidx784.i = getelementptr inbounds i32, i32* %508, i64 31, !dbg !1671
  %509 = load i32, i32* %arrayidx784.i, align 4, !dbg !1671
  %xor785.i = xor i32 %507, %509, !dbg !1671
  store i32 %xor785.i, i32* %t.i, align 4, !dbg !1671
  %510 = load i32, i32* %t.i, align 4, !dbg !1588
  %511 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %510) #5, !dbg !1588, !srcloc !192
  store i32 %511, i32* %ret786.i, align 4, !dbg !1588
  %512 = load i32, i32* %ret786.i, align 4, !dbg !1588
  store i32 %512, i32* %tmp787.i, align 4, !dbg !1588
  %513 = load i32, i32* %tmp787.i, align 4, !dbg !1588
  store i32 %513, i32* %t.i, align 4, !dbg !1671
  %514 = load i32, i32* %u.i, align 4, !dbg !1671
  %shr788.i = lshr i32 %514, 2, !dbg !1671
  %and789.i = and i32 %shr788.i, 63, !dbg !1671
  %idxprom790.i = zext i32 %and789.i to i64, !dbg !1671
  %arrayidx791.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i, !dbg !1671
  %515 = load i32, i32* %arrayidx791.i, align 4, !dbg !1671
  %516 = load i32, i32* %u.i, align 4, !dbg !1671
  %shr792.i = lshr i32 %516, 10, !dbg !1671
  %and793.i = and i32 %shr792.i, 63, !dbg !1671
  %idxprom794.i = zext i32 %and793.i to i64, !dbg !1671
  %arrayidx795.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i, !dbg !1671
  %517 = load i32, i32* %arrayidx795.i, align 4, !dbg !1671
  %xor796.i = xor i32 %515, %517, !dbg !1671
  %518 = load i32, i32* %u.i, align 4, !dbg !1671
  %shr797.i = lshr i32 %518, 18, !dbg !1671
  %and798.i = and i32 %shr797.i, 63, !dbg !1671
  %idxprom799.i = zext i32 %and798.i to i64, !dbg !1671
  %arrayidx800.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i, !dbg !1671
  %519 = load i32, i32* %arrayidx800.i, align 4, !dbg !1671
  %xor801.i = xor i32 %xor796.i, %519, !dbg !1671
  %520 = load i32, i32* %u.i, align 4, !dbg !1671
  %shr802.i = lshr i32 %520, 26, !dbg !1671
  %idxprom804.i = zext i32 %shr802.i to i64, !dbg !1671
  %arrayidx805.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i, !dbg !1671
  %521 = load i32, i32* %arrayidx805.i, align 4, !dbg !1671
  %xor806.i = xor i32 %xor801.i, %521, !dbg !1671
  %522 = load i32, i32* %t.i, align 4, !dbg !1671
  %shr807.i = lshr i32 %522, 2, !dbg !1671
  %and808.i = and i32 %shr807.i, 63, !dbg !1671
  %idxprom809.i = zext i32 %and808.i to i64, !dbg !1671
  %arrayidx810.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i, !dbg !1671
  %523 = load i32, i32* %arrayidx810.i, align 4, !dbg !1671
  %xor811.i = xor i32 %xor806.i, %523, !dbg !1671
  %524 = load i32, i32* %t.i, align 4, !dbg !1671
  %shr812.i = lshr i32 %524, 10, !dbg !1671
  %and813.i = and i32 %shr812.i, 63, !dbg !1671
  %idxprom814.i = zext i32 %and813.i to i64, !dbg !1671
  %arrayidx815.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i, !dbg !1671
  %525 = load i32, i32* %arrayidx815.i, align 4, !dbg !1671
  %xor816.i = xor i32 %xor811.i, %525, !dbg !1671
  %526 = load i32, i32* %t.i, align 4, !dbg !1671
  %shr817.i = lshr i32 %526, 18, !dbg !1671
  %and818.i = and i32 %shr817.i, 63, !dbg !1671
  %idxprom819.i = zext i32 %and818.i to i64, !dbg !1671
  %arrayidx820.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i, !dbg !1671
  %527 = load i32, i32* %arrayidx820.i, align 4, !dbg !1671
  %xor821.i = xor i32 %xor816.i, %527, !dbg !1671
  %528 = load i32, i32* %t.i, align 4, !dbg !1671
  %shr822.i = lshr i32 %528, 26, !dbg !1671
  %idxprom824.i = zext i32 %shr822.i to i64, !dbg !1671
  %arrayidx825.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i, !dbg !1671
  %529 = load i32, i32* %arrayidx825.i, align 4, !dbg !1671
  %xor826.i = xor i32 %xor821.i, %529, !dbg !1671
  %530 = load i32, i32* %l.i, align 4, !dbg !1671
  %xor827.i = xor i32 %530, %xor826.i, !dbg !1671
  store i32 %xor827.i, i32* %l.i, align 4, !dbg !1671
  %531 = load i32, i32* %l.i, align 4, !dbg !1672
  %532 = load i32*, i32** %s.i, align 8, !dbg !1672
  %arrayidx828.i = getelementptr inbounds i32, i32* %532, i64 28, !dbg !1672
  %533 = load i32, i32* %arrayidx828.i, align 4, !dbg !1672
  %xor829.i = xor i32 %531, %533, !dbg !1672
  store i32 %xor829.i, i32* %u.i, align 4, !dbg !1672
  %534 = load i32, i32* %l.i, align 4, !dbg !1672
  %535 = load i32*, i32** %s.i, align 8, !dbg !1672
  %arrayidx830.i = getelementptr inbounds i32, i32* %535, i64 29, !dbg !1672
  %536 = load i32, i32* %arrayidx830.i, align 4, !dbg !1672
  %xor831.i = xor i32 %534, %536, !dbg !1672
  store i32 %xor831.i, i32* %t.i, align 4, !dbg !1672
  %537 = load i32, i32* %t.i, align 4, !dbg !1589
  %538 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %537) #5, !dbg !1589, !srcloc !198
  store i32 %538, i32* %ret832.i, align 4, !dbg !1589
  %539 = load i32, i32* %ret832.i, align 4, !dbg !1589
  store i32 %539, i32* %tmp833.i, align 4, !dbg !1589
  %540 = load i32, i32* %tmp833.i, align 4, !dbg !1589
  store i32 %540, i32* %t.i, align 4, !dbg !1672
  %541 = load i32, i32* %u.i, align 4, !dbg !1672
  %shr834.i = lshr i32 %541, 2, !dbg !1672
  %and835.i = and i32 %shr834.i, 63, !dbg !1672
  %idxprom836.i = zext i32 %and835.i to i64, !dbg !1672
  %arrayidx837.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i, !dbg !1672
  %542 = load i32, i32* %arrayidx837.i, align 4, !dbg !1672
  %543 = load i32, i32* %u.i, align 4, !dbg !1672
  %shr838.i = lshr i32 %543, 10, !dbg !1672
  %and839.i = and i32 %shr838.i, 63, !dbg !1672
  %idxprom840.i = zext i32 %and839.i to i64, !dbg !1672
  %arrayidx841.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i, !dbg !1672
  %544 = load i32, i32* %arrayidx841.i, align 4, !dbg !1672
  %xor842.i = xor i32 %542, %544, !dbg !1672
  %545 = load i32, i32* %u.i, align 4, !dbg !1672
  %shr843.i = lshr i32 %545, 18, !dbg !1672
  %and844.i = and i32 %shr843.i, 63, !dbg !1672
  %idxprom845.i = zext i32 %and844.i to i64, !dbg !1672
  %arrayidx846.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i, !dbg !1672
  %546 = load i32, i32* %arrayidx846.i, align 4, !dbg !1672
  %xor847.i = xor i32 %xor842.i, %546, !dbg !1672
  %547 = load i32, i32* %u.i, align 4, !dbg !1672
  %shr848.i = lshr i32 %547, 26, !dbg !1672
  %idxprom850.i = zext i32 %shr848.i to i64, !dbg !1672
  %arrayidx851.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i, !dbg !1672
  %548 = load i32, i32* %arrayidx851.i, align 4, !dbg !1672
  %xor852.i = xor i32 %xor847.i, %548, !dbg !1672
  %549 = load i32, i32* %t.i, align 4, !dbg !1672
  %shr853.i = lshr i32 %549, 2, !dbg !1672
  %and854.i = and i32 %shr853.i, 63, !dbg !1672
  %idxprom855.i = zext i32 %and854.i to i64, !dbg !1672
  %arrayidx856.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i, !dbg !1672
  %550 = load i32, i32* %arrayidx856.i, align 4, !dbg !1672
  %xor857.i = xor i32 %xor852.i, %550, !dbg !1672
  %551 = load i32, i32* %t.i, align 4, !dbg !1672
  %shr858.i = lshr i32 %551, 10, !dbg !1672
  %and859.i = and i32 %shr858.i, 63, !dbg !1672
  %idxprom860.i = zext i32 %and859.i to i64, !dbg !1672
  %arrayidx861.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i, !dbg !1672
  %552 = load i32, i32* %arrayidx861.i, align 4, !dbg !1672
  %xor862.i = xor i32 %xor857.i, %552, !dbg !1672
  %553 = load i32, i32* %t.i, align 4, !dbg !1672
  %shr863.i = lshr i32 %553, 18, !dbg !1672
  %and864.i = and i32 %shr863.i, 63, !dbg !1672
  %idxprom865.i = zext i32 %and864.i to i64, !dbg !1672
  %arrayidx866.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i, !dbg !1672
  %554 = load i32, i32* %arrayidx866.i, align 4, !dbg !1672
  %xor867.i = xor i32 %xor862.i, %554, !dbg !1672
  %555 = load i32, i32* %t.i, align 4, !dbg !1672
  %shr868.i = lshr i32 %555, 26, !dbg !1672
  %idxprom870.i = zext i32 %shr868.i to i64, !dbg !1672
  %arrayidx871.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i, !dbg !1672
  %556 = load i32, i32* %arrayidx871.i, align 4, !dbg !1672
  %xor872.i = xor i32 %xor867.i, %556, !dbg !1672
  %557 = load i32, i32* %r.i, align 4, !dbg !1672
  %xor873.i = xor i32 %557, %xor872.i, !dbg !1672
  store i32 %xor873.i, i32* %r.i, align 4, !dbg !1672
  %558 = load i32, i32* %r.i, align 4, !dbg !1673
  %559 = load i32*, i32** %s.i, align 8, !dbg !1673
  %arrayidx874.i = getelementptr inbounds i32, i32* %559, i64 26, !dbg !1673
  %560 = load i32, i32* %arrayidx874.i, align 4, !dbg !1673
  %xor875.i = xor i32 %558, %560, !dbg !1673
  store i32 %xor875.i, i32* %u.i, align 4, !dbg !1673
  %561 = load i32, i32* %r.i, align 4, !dbg !1673
  %562 = load i32*, i32** %s.i, align 8, !dbg !1673
  %arrayidx876.i = getelementptr inbounds i32, i32* %562, i64 27, !dbg !1673
  %563 = load i32, i32* %arrayidx876.i, align 4, !dbg !1673
  %xor877.i = xor i32 %561, %563, !dbg !1673
  store i32 %xor877.i, i32* %t.i, align 4, !dbg !1673
  %564 = load i32, i32* %t.i, align 4, !dbg !1590
  %565 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %564) #5, !dbg !1590, !srcloc !204
  store i32 %565, i32* %ret878.i, align 4, !dbg !1590
  %566 = load i32, i32* %ret878.i, align 4, !dbg !1590
  store i32 %566, i32* %tmp879.i, align 4, !dbg !1590
  %567 = load i32, i32* %tmp879.i, align 4, !dbg !1590
  store i32 %567, i32* %t.i, align 4, !dbg !1673
  %568 = load i32, i32* %u.i, align 4, !dbg !1673
  %shr880.i = lshr i32 %568, 2, !dbg !1673
  %and881.i = and i32 %shr880.i, 63, !dbg !1673
  %idxprom882.i = zext i32 %and881.i to i64, !dbg !1673
  %arrayidx883.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i, !dbg !1673
  %569 = load i32, i32* %arrayidx883.i, align 4, !dbg !1673
  %570 = load i32, i32* %u.i, align 4, !dbg !1673
  %shr884.i = lshr i32 %570, 10, !dbg !1673
  %and885.i = and i32 %shr884.i, 63, !dbg !1673
  %idxprom886.i = zext i32 %and885.i to i64, !dbg !1673
  %arrayidx887.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i, !dbg !1673
  %571 = load i32, i32* %arrayidx887.i, align 4, !dbg !1673
  %xor888.i = xor i32 %569, %571, !dbg !1673
  %572 = load i32, i32* %u.i, align 4, !dbg !1673
  %shr889.i = lshr i32 %572, 18, !dbg !1673
  %and890.i = and i32 %shr889.i, 63, !dbg !1673
  %idxprom891.i = zext i32 %and890.i to i64, !dbg !1673
  %arrayidx892.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i, !dbg !1673
  %573 = load i32, i32* %arrayidx892.i, align 4, !dbg !1673
  %xor893.i = xor i32 %xor888.i, %573, !dbg !1673
  %574 = load i32, i32* %u.i, align 4, !dbg !1673
  %shr894.i = lshr i32 %574, 26, !dbg !1673
  %idxprom896.i = zext i32 %shr894.i to i64, !dbg !1673
  %arrayidx897.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i, !dbg !1673
  %575 = load i32, i32* %arrayidx897.i, align 4, !dbg !1673
  %xor898.i = xor i32 %xor893.i, %575, !dbg !1673
  %576 = load i32, i32* %t.i, align 4, !dbg !1673
  %shr899.i = lshr i32 %576, 2, !dbg !1673
  %and900.i = and i32 %shr899.i, 63, !dbg !1673
  %idxprom901.i = zext i32 %and900.i to i64, !dbg !1673
  %arrayidx902.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i, !dbg !1673
  %577 = load i32, i32* %arrayidx902.i, align 4, !dbg !1673
  %xor903.i = xor i32 %xor898.i, %577, !dbg !1673
  %578 = load i32, i32* %t.i, align 4, !dbg !1673
  %shr904.i = lshr i32 %578, 10, !dbg !1673
  %and905.i = and i32 %shr904.i, 63, !dbg !1673
  %idxprom906.i = zext i32 %and905.i to i64, !dbg !1673
  %arrayidx907.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i, !dbg !1673
  %579 = load i32, i32* %arrayidx907.i, align 4, !dbg !1673
  %xor908.i = xor i32 %xor903.i, %579, !dbg !1673
  %580 = load i32, i32* %t.i, align 4, !dbg !1673
  %shr909.i = lshr i32 %580, 18, !dbg !1673
  %and910.i = and i32 %shr909.i, 63, !dbg !1673
  %idxprom911.i = zext i32 %and910.i to i64, !dbg !1673
  %arrayidx912.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i, !dbg !1673
  %581 = load i32, i32* %arrayidx912.i, align 4, !dbg !1673
  %xor913.i = xor i32 %xor908.i, %581, !dbg !1673
  %582 = load i32, i32* %t.i, align 4, !dbg !1673
  %shr914.i = lshr i32 %582, 26, !dbg !1673
  %idxprom916.i = zext i32 %shr914.i to i64, !dbg !1673
  %arrayidx917.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i, !dbg !1673
  %583 = load i32, i32* %arrayidx917.i, align 4, !dbg !1673
  %xor918.i = xor i32 %xor913.i, %583, !dbg !1673
  %584 = load i32, i32* %l.i, align 4, !dbg !1673
  %xor919.i = xor i32 %584, %xor918.i, !dbg !1673
  store i32 %xor919.i, i32* %l.i, align 4, !dbg !1673
  %585 = load i32, i32* %l.i, align 4, !dbg !1674
  %586 = load i32*, i32** %s.i, align 8, !dbg !1674
  %arrayidx920.i = getelementptr inbounds i32, i32* %586, i64 24, !dbg !1674
  %587 = load i32, i32* %arrayidx920.i, align 4, !dbg !1674
  %xor921.i = xor i32 %585, %587, !dbg !1674
  store i32 %xor921.i, i32* %u.i, align 4, !dbg !1674
  %588 = load i32, i32* %l.i, align 4, !dbg !1674
  %589 = load i32*, i32** %s.i, align 8, !dbg !1674
  %arrayidx922.i = getelementptr inbounds i32, i32* %589, i64 25, !dbg !1674
  %590 = load i32, i32* %arrayidx922.i, align 4, !dbg !1674
  %xor923.i = xor i32 %588, %590, !dbg !1674
  store i32 %xor923.i, i32* %t.i, align 4, !dbg !1674
  %591 = load i32, i32* %t.i, align 4, !dbg !1591
  %592 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %591) #5, !dbg !1591, !srcloc !210
  store i32 %592, i32* %ret924.i, align 4, !dbg !1591
  %593 = load i32, i32* %ret924.i, align 4, !dbg !1591
  store i32 %593, i32* %tmp925.i, align 4, !dbg !1591
  %594 = load i32, i32* %tmp925.i, align 4, !dbg !1591
  store i32 %594, i32* %t.i, align 4, !dbg !1674
  %595 = load i32, i32* %u.i, align 4, !dbg !1674
  %shr926.i = lshr i32 %595, 2, !dbg !1674
  %and927.i = and i32 %shr926.i, 63, !dbg !1674
  %idxprom928.i = zext i32 %and927.i to i64, !dbg !1674
  %arrayidx929.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i, !dbg !1674
  %596 = load i32, i32* %arrayidx929.i, align 4, !dbg !1674
  %597 = load i32, i32* %u.i, align 4, !dbg !1674
  %shr930.i = lshr i32 %597, 10, !dbg !1674
  %and931.i = and i32 %shr930.i, 63, !dbg !1674
  %idxprom932.i = zext i32 %and931.i to i64, !dbg !1674
  %arrayidx933.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i, !dbg !1674
  %598 = load i32, i32* %arrayidx933.i, align 4, !dbg !1674
  %xor934.i = xor i32 %596, %598, !dbg !1674
  %599 = load i32, i32* %u.i, align 4, !dbg !1674
  %shr935.i = lshr i32 %599, 18, !dbg !1674
  %and936.i = and i32 %shr935.i, 63, !dbg !1674
  %idxprom937.i = zext i32 %and936.i to i64, !dbg !1674
  %arrayidx938.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i, !dbg !1674
  %600 = load i32, i32* %arrayidx938.i, align 4, !dbg !1674
  %xor939.i = xor i32 %xor934.i, %600, !dbg !1674
  %601 = load i32, i32* %u.i, align 4, !dbg !1674
  %shr940.i = lshr i32 %601, 26, !dbg !1674
  %idxprom942.i = zext i32 %shr940.i to i64, !dbg !1674
  %arrayidx943.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i, !dbg !1674
  %602 = load i32, i32* %arrayidx943.i, align 4, !dbg !1674
  %xor944.i = xor i32 %xor939.i, %602, !dbg !1674
  %603 = load i32, i32* %t.i, align 4, !dbg !1674
  %shr945.i = lshr i32 %603, 2, !dbg !1674
  %and946.i = and i32 %shr945.i, 63, !dbg !1674
  %idxprom947.i = zext i32 %and946.i to i64, !dbg !1674
  %arrayidx948.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i, !dbg !1674
  %604 = load i32, i32* %arrayidx948.i, align 4, !dbg !1674
  %xor949.i = xor i32 %xor944.i, %604, !dbg !1674
  %605 = load i32, i32* %t.i, align 4, !dbg !1674
  %shr950.i = lshr i32 %605, 10, !dbg !1674
  %and951.i = and i32 %shr950.i, 63, !dbg !1674
  %idxprom952.i = zext i32 %and951.i to i64, !dbg !1674
  %arrayidx953.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i, !dbg !1674
  %606 = load i32, i32* %arrayidx953.i, align 4, !dbg !1674
  %xor954.i = xor i32 %xor949.i, %606, !dbg !1674
  %607 = load i32, i32* %t.i, align 4, !dbg !1674
  %shr955.i = lshr i32 %607, 18, !dbg !1674
  %and956.i = and i32 %shr955.i, 63, !dbg !1674
  %idxprom957.i = zext i32 %and956.i to i64, !dbg !1674
  %arrayidx958.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i, !dbg !1674
  %608 = load i32, i32* %arrayidx958.i, align 4, !dbg !1674
  %xor959.i = xor i32 %xor954.i, %608, !dbg !1674
  %609 = load i32, i32* %t.i, align 4, !dbg !1674
  %shr960.i = lshr i32 %609, 26, !dbg !1674
  %idxprom962.i = zext i32 %shr960.i to i64, !dbg !1674
  %arrayidx963.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i, !dbg !1674
  %610 = load i32, i32* %arrayidx963.i, align 4, !dbg !1674
  %xor964.i = xor i32 %xor959.i, %610, !dbg !1674
  %611 = load i32, i32* %r.i, align 4, !dbg !1674
  %xor965.i = xor i32 %611, %xor964.i, !dbg !1674
  store i32 %xor965.i, i32* %r.i, align 4, !dbg !1674
  %612 = load i32, i32* %r.i, align 4, !dbg !1675
  %613 = load i32*, i32** %s.i, align 8, !dbg !1675
  %arrayidx966.i = getelementptr inbounds i32, i32* %613, i64 22, !dbg !1675
  %614 = load i32, i32* %arrayidx966.i, align 4, !dbg !1675
  %xor967.i = xor i32 %612, %614, !dbg !1675
  store i32 %xor967.i, i32* %u.i, align 4, !dbg !1675
  %615 = load i32, i32* %r.i, align 4, !dbg !1675
  %616 = load i32*, i32** %s.i, align 8, !dbg !1675
  %arrayidx968.i = getelementptr inbounds i32, i32* %616, i64 23, !dbg !1675
  %617 = load i32, i32* %arrayidx968.i, align 4, !dbg !1675
  %xor969.i = xor i32 %615, %617, !dbg !1675
  store i32 %xor969.i, i32* %t.i, align 4, !dbg !1675
  %618 = load i32, i32* %t.i, align 4, !dbg !1592
  %619 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %618) #5, !dbg !1592, !srcloc !216
  store i32 %619, i32* %ret970.i, align 4, !dbg !1592
  %620 = load i32, i32* %ret970.i, align 4, !dbg !1592
  store i32 %620, i32* %tmp971.i, align 4, !dbg !1592
  %621 = load i32, i32* %tmp971.i, align 4, !dbg !1592
  store i32 %621, i32* %t.i, align 4, !dbg !1675
  %622 = load i32, i32* %u.i, align 4, !dbg !1675
  %shr972.i = lshr i32 %622, 2, !dbg !1675
  %and973.i = and i32 %shr972.i, 63, !dbg !1675
  %idxprom974.i = zext i32 %and973.i to i64, !dbg !1675
  %arrayidx975.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i, !dbg !1675
  %623 = load i32, i32* %arrayidx975.i, align 4, !dbg !1675
  %624 = load i32, i32* %u.i, align 4, !dbg !1675
  %shr976.i = lshr i32 %624, 10, !dbg !1675
  %and977.i = and i32 %shr976.i, 63, !dbg !1675
  %idxprom978.i = zext i32 %and977.i to i64, !dbg !1675
  %arrayidx979.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i, !dbg !1675
  %625 = load i32, i32* %arrayidx979.i, align 4, !dbg !1675
  %xor980.i = xor i32 %623, %625, !dbg !1675
  %626 = load i32, i32* %u.i, align 4, !dbg !1675
  %shr981.i = lshr i32 %626, 18, !dbg !1675
  %and982.i = and i32 %shr981.i, 63, !dbg !1675
  %idxprom983.i = zext i32 %and982.i to i64, !dbg !1675
  %arrayidx984.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i, !dbg !1675
  %627 = load i32, i32* %arrayidx984.i, align 4, !dbg !1675
  %xor985.i = xor i32 %xor980.i, %627, !dbg !1675
  %628 = load i32, i32* %u.i, align 4, !dbg !1675
  %shr986.i = lshr i32 %628, 26, !dbg !1675
  %idxprom988.i = zext i32 %shr986.i to i64, !dbg !1675
  %arrayidx989.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i, !dbg !1675
  %629 = load i32, i32* %arrayidx989.i, align 4, !dbg !1675
  %xor990.i = xor i32 %xor985.i, %629, !dbg !1675
  %630 = load i32, i32* %t.i, align 4, !dbg !1675
  %shr991.i = lshr i32 %630, 2, !dbg !1675
  %and992.i = and i32 %shr991.i, 63, !dbg !1675
  %idxprom993.i = zext i32 %and992.i to i64, !dbg !1675
  %arrayidx994.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i, !dbg !1675
  %631 = load i32, i32* %arrayidx994.i, align 4, !dbg !1675
  %xor995.i = xor i32 %xor990.i, %631, !dbg !1675
  %632 = load i32, i32* %t.i, align 4, !dbg !1675
  %shr996.i = lshr i32 %632, 10, !dbg !1675
  %and997.i = and i32 %shr996.i, 63, !dbg !1675
  %idxprom998.i = zext i32 %and997.i to i64, !dbg !1675
  %arrayidx999.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i, !dbg !1675
  %633 = load i32, i32* %arrayidx999.i, align 4, !dbg !1675
  %xor1000.i = xor i32 %xor995.i, %633, !dbg !1675
  %634 = load i32, i32* %t.i, align 4, !dbg !1675
  %shr1001.i = lshr i32 %634, 18, !dbg !1675
  %and1002.i = and i32 %shr1001.i, 63, !dbg !1675
  %idxprom1003.i = zext i32 %and1002.i to i64, !dbg !1675
  %arrayidx1004.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i, !dbg !1675
  %635 = load i32, i32* %arrayidx1004.i, align 4, !dbg !1675
  %xor1005.i = xor i32 %xor1000.i, %635, !dbg !1675
  %636 = load i32, i32* %t.i, align 4, !dbg !1675
  %shr1006.i = lshr i32 %636, 26, !dbg !1675
  %idxprom1008.i = zext i32 %shr1006.i to i64, !dbg !1675
  %arrayidx1009.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i, !dbg !1675
  %637 = load i32, i32* %arrayidx1009.i, align 4, !dbg !1675
  %xor1010.i = xor i32 %xor1005.i, %637, !dbg !1675
  %638 = load i32, i32* %l.i, align 4, !dbg !1675
  %xor1011.i = xor i32 %638, %xor1010.i, !dbg !1675
  store i32 %xor1011.i, i32* %l.i, align 4, !dbg !1675
  %639 = load i32, i32* %l.i, align 4, !dbg !1676
  %640 = load i32*, i32** %s.i, align 8, !dbg !1676
  %arrayidx1012.i = getelementptr inbounds i32, i32* %640, i64 20, !dbg !1676
  %641 = load i32, i32* %arrayidx1012.i, align 4, !dbg !1676
  %xor1013.i = xor i32 %639, %641, !dbg !1676
  store i32 %xor1013.i, i32* %u.i, align 4, !dbg !1676
  %642 = load i32, i32* %l.i, align 4, !dbg !1676
  %643 = load i32*, i32** %s.i, align 8, !dbg !1676
  %arrayidx1014.i = getelementptr inbounds i32, i32* %643, i64 21, !dbg !1676
  %644 = load i32, i32* %arrayidx1014.i, align 4, !dbg !1676
  %xor1015.i = xor i32 %642, %644, !dbg !1676
  store i32 %xor1015.i, i32* %t.i, align 4, !dbg !1676
  %645 = load i32, i32* %t.i, align 4, !dbg !1593
  %646 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %645) #5, !dbg !1593, !srcloc !222
  store i32 %646, i32* %ret1016.i, align 4, !dbg !1593
  %647 = load i32, i32* %ret1016.i, align 4, !dbg !1593
  store i32 %647, i32* %tmp1017.i, align 4, !dbg !1593
  %648 = load i32, i32* %tmp1017.i, align 4, !dbg !1593
  store i32 %648, i32* %t.i, align 4, !dbg !1676
  %649 = load i32, i32* %u.i, align 4, !dbg !1676
  %shr1018.i = lshr i32 %649, 2, !dbg !1676
  %and1019.i = and i32 %shr1018.i, 63, !dbg !1676
  %idxprom1020.i = zext i32 %and1019.i to i64, !dbg !1676
  %arrayidx1021.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i, !dbg !1676
  %650 = load i32, i32* %arrayidx1021.i, align 4, !dbg !1676
  %651 = load i32, i32* %u.i, align 4, !dbg !1676
  %shr1022.i = lshr i32 %651, 10, !dbg !1676
  %and1023.i = and i32 %shr1022.i, 63, !dbg !1676
  %idxprom1024.i = zext i32 %and1023.i to i64, !dbg !1676
  %arrayidx1025.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i, !dbg !1676
  %652 = load i32, i32* %arrayidx1025.i, align 4, !dbg !1676
  %xor1026.i = xor i32 %650, %652, !dbg !1676
  %653 = load i32, i32* %u.i, align 4, !dbg !1676
  %shr1027.i = lshr i32 %653, 18, !dbg !1676
  %and1028.i = and i32 %shr1027.i, 63, !dbg !1676
  %idxprom1029.i = zext i32 %and1028.i to i64, !dbg !1676
  %arrayidx1030.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i, !dbg !1676
  %654 = load i32, i32* %arrayidx1030.i, align 4, !dbg !1676
  %xor1031.i = xor i32 %xor1026.i, %654, !dbg !1676
  %655 = load i32, i32* %u.i, align 4, !dbg !1676
  %shr1032.i = lshr i32 %655, 26, !dbg !1676
  %idxprom1034.i = zext i32 %shr1032.i to i64, !dbg !1676
  %arrayidx1035.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i, !dbg !1676
  %656 = load i32, i32* %arrayidx1035.i, align 4, !dbg !1676
  %xor1036.i = xor i32 %xor1031.i, %656, !dbg !1676
  %657 = load i32, i32* %t.i, align 4, !dbg !1676
  %shr1037.i = lshr i32 %657, 2, !dbg !1676
  %and1038.i = and i32 %shr1037.i, 63, !dbg !1676
  %idxprom1039.i = zext i32 %and1038.i to i64, !dbg !1676
  %arrayidx1040.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i, !dbg !1676
  %658 = load i32, i32* %arrayidx1040.i, align 4, !dbg !1676
  %xor1041.i = xor i32 %xor1036.i, %658, !dbg !1676
  %659 = load i32, i32* %t.i, align 4, !dbg !1676
  %shr1042.i = lshr i32 %659, 10, !dbg !1676
  %and1043.i = and i32 %shr1042.i, 63, !dbg !1676
  %idxprom1044.i = zext i32 %and1043.i to i64, !dbg !1676
  %arrayidx1045.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i, !dbg !1676
  %660 = load i32, i32* %arrayidx1045.i, align 4, !dbg !1676
  %xor1046.i = xor i32 %xor1041.i, %660, !dbg !1676
  %661 = load i32, i32* %t.i, align 4, !dbg !1676
  %shr1047.i = lshr i32 %661, 18, !dbg !1676
  %and1048.i = and i32 %shr1047.i, 63, !dbg !1676
  %idxprom1049.i = zext i32 %and1048.i to i64, !dbg !1676
  %arrayidx1050.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i, !dbg !1676
  %662 = load i32, i32* %arrayidx1050.i, align 4, !dbg !1676
  %xor1051.i = xor i32 %xor1046.i, %662, !dbg !1676
  %663 = load i32, i32* %t.i, align 4, !dbg !1676
  %shr1052.i = lshr i32 %663, 26, !dbg !1676
  %idxprom1054.i = zext i32 %shr1052.i to i64, !dbg !1676
  %arrayidx1055.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i, !dbg !1676
  %664 = load i32, i32* %arrayidx1055.i, align 4, !dbg !1676
  %xor1056.i = xor i32 %xor1051.i, %664, !dbg !1676
  %665 = load i32, i32* %r.i, align 4, !dbg !1676
  %xor1057.i = xor i32 %665, %xor1056.i, !dbg !1676
  store i32 %xor1057.i, i32* %r.i, align 4, !dbg !1676
  %666 = load i32, i32* %r.i, align 4, !dbg !1677
  %667 = load i32*, i32** %s.i, align 8, !dbg !1677
  %arrayidx1058.i = getelementptr inbounds i32, i32* %667, i64 18, !dbg !1677
  %668 = load i32, i32* %arrayidx1058.i, align 4, !dbg !1677
  %xor1059.i = xor i32 %666, %668, !dbg !1677
  store i32 %xor1059.i, i32* %u.i, align 4, !dbg !1677
  %669 = load i32, i32* %r.i, align 4, !dbg !1677
  %670 = load i32*, i32** %s.i, align 8, !dbg !1677
  %arrayidx1060.i = getelementptr inbounds i32, i32* %670, i64 19, !dbg !1677
  %671 = load i32, i32* %arrayidx1060.i, align 4, !dbg !1677
  %xor1061.i = xor i32 %669, %671, !dbg !1677
  store i32 %xor1061.i, i32* %t.i, align 4, !dbg !1677
  %672 = load i32, i32* %t.i, align 4, !dbg !1594
  %673 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %672) #5, !dbg !1594, !srcloc !228
  store i32 %673, i32* %ret1062.i, align 4, !dbg !1594
  %674 = load i32, i32* %ret1062.i, align 4, !dbg !1594
  store i32 %674, i32* %tmp1063.i, align 4, !dbg !1594
  %675 = load i32, i32* %tmp1063.i, align 4, !dbg !1594
  store i32 %675, i32* %t.i, align 4, !dbg !1677
  %676 = load i32, i32* %u.i, align 4, !dbg !1677
  %shr1064.i = lshr i32 %676, 2, !dbg !1677
  %and1065.i = and i32 %shr1064.i, 63, !dbg !1677
  %idxprom1066.i = zext i32 %and1065.i to i64, !dbg !1677
  %arrayidx1067.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i, !dbg !1677
  %677 = load i32, i32* %arrayidx1067.i, align 4, !dbg !1677
  %678 = load i32, i32* %u.i, align 4, !dbg !1677
  %shr1068.i = lshr i32 %678, 10, !dbg !1677
  %and1069.i = and i32 %shr1068.i, 63, !dbg !1677
  %idxprom1070.i = zext i32 %and1069.i to i64, !dbg !1677
  %arrayidx1071.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i, !dbg !1677
  %679 = load i32, i32* %arrayidx1071.i, align 4, !dbg !1677
  %xor1072.i = xor i32 %677, %679, !dbg !1677
  %680 = load i32, i32* %u.i, align 4, !dbg !1677
  %shr1073.i = lshr i32 %680, 18, !dbg !1677
  %and1074.i = and i32 %shr1073.i, 63, !dbg !1677
  %idxprom1075.i = zext i32 %and1074.i to i64, !dbg !1677
  %arrayidx1076.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i, !dbg !1677
  %681 = load i32, i32* %arrayidx1076.i, align 4, !dbg !1677
  %xor1077.i = xor i32 %xor1072.i, %681, !dbg !1677
  %682 = load i32, i32* %u.i, align 4, !dbg !1677
  %shr1078.i = lshr i32 %682, 26, !dbg !1677
  %idxprom1080.i = zext i32 %shr1078.i to i64, !dbg !1677
  %arrayidx1081.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i, !dbg !1677
  %683 = load i32, i32* %arrayidx1081.i, align 4, !dbg !1677
  %xor1082.i = xor i32 %xor1077.i, %683, !dbg !1677
  %684 = load i32, i32* %t.i, align 4, !dbg !1677
  %shr1083.i = lshr i32 %684, 2, !dbg !1677
  %and1084.i = and i32 %shr1083.i, 63, !dbg !1677
  %idxprom1085.i = zext i32 %and1084.i to i64, !dbg !1677
  %arrayidx1086.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i, !dbg !1677
  %685 = load i32, i32* %arrayidx1086.i, align 4, !dbg !1677
  %xor1087.i = xor i32 %xor1082.i, %685, !dbg !1677
  %686 = load i32, i32* %t.i, align 4, !dbg !1677
  %shr1088.i = lshr i32 %686, 10, !dbg !1677
  %and1089.i = and i32 %shr1088.i, 63, !dbg !1677
  %idxprom1090.i = zext i32 %and1089.i to i64, !dbg !1677
  %arrayidx1091.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i, !dbg !1677
  %687 = load i32, i32* %arrayidx1091.i, align 4, !dbg !1677
  %xor1092.i = xor i32 %xor1087.i, %687, !dbg !1677
  %688 = load i32, i32* %t.i, align 4, !dbg !1677
  %shr1093.i = lshr i32 %688, 18, !dbg !1677
  %and1094.i = and i32 %shr1093.i, 63, !dbg !1677
  %idxprom1095.i = zext i32 %and1094.i to i64, !dbg !1677
  %arrayidx1096.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i, !dbg !1677
  %689 = load i32, i32* %arrayidx1096.i, align 4, !dbg !1677
  %xor1097.i = xor i32 %xor1092.i, %689, !dbg !1677
  %690 = load i32, i32* %t.i, align 4, !dbg !1677
  %shr1098.i = lshr i32 %690, 26, !dbg !1677
  %idxprom1100.i = zext i32 %shr1098.i to i64, !dbg !1677
  %arrayidx1101.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i, !dbg !1677
  %691 = load i32, i32* %arrayidx1101.i, align 4, !dbg !1677
  %xor1102.i = xor i32 %xor1097.i, %691, !dbg !1677
  %692 = load i32, i32* %l.i, align 4, !dbg !1677
  %xor1103.i = xor i32 %692, %xor1102.i, !dbg !1677
  store i32 %xor1103.i, i32* %l.i, align 4, !dbg !1677
  %693 = load i32, i32* %l.i, align 4, !dbg !1678
  %694 = load i32*, i32** %s.i, align 8, !dbg !1678
  %arrayidx1104.i = getelementptr inbounds i32, i32* %694, i64 16, !dbg !1678
  %695 = load i32, i32* %arrayidx1104.i, align 4, !dbg !1678
  %xor1105.i = xor i32 %693, %695, !dbg !1678
  store i32 %xor1105.i, i32* %u.i, align 4, !dbg !1678
  %696 = load i32, i32* %l.i, align 4, !dbg !1678
  %697 = load i32*, i32** %s.i, align 8, !dbg !1678
  %arrayidx1106.i = getelementptr inbounds i32, i32* %697, i64 17, !dbg !1678
  %698 = load i32, i32* %arrayidx1106.i, align 4, !dbg !1678
  %xor1107.i = xor i32 %696, %698, !dbg !1678
  store i32 %xor1107.i, i32* %t.i, align 4, !dbg !1678
  %699 = load i32, i32* %t.i, align 4, !dbg !1595
  %700 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %699) #5, !dbg !1595, !srcloc !234
  store i32 %700, i32* %ret1108.i, align 4, !dbg !1595
  %701 = load i32, i32* %ret1108.i, align 4, !dbg !1595
  store i32 %701, i32* %tmp1109.i, align 4, !dbg !1595
  %702 = load i32, i32* %tmp1109.i, align 4, !dbg !1595
  store i32 %702, i32* %t.i, align 4, !dbg !1678
  %703 = load i32, i32* %u.i, align 4, !dbg !1678
  %shr1110.i = lshr i32 %703, 2, !dbg !1678
  %and1111.i = and i32 %shr1110.i, 63, !dbg !1678
  %idxprom1112.i = zext i32 %and1111.i to i64, !dbg !1678
  %arrayidx1113.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i, !dbg !1678
  %704 = load i32, i32* %arrayidx1113.i, align 4, !dbg !1678
  %705 = load i32, i32* %u.i, align 4, !dbg !1678
  %shr1114.i = lshr i32 %705, 10, !dbg !1678
  %and1115.i = and i32 %shr1114.i, 63, !dbg !1678
  %idxprom1116.i = zext i32 %and1115.i to i64, !dbg !1678
  %arrayidx1117.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i, !dbg !1678
  %706 = load i32, i32* %arrayidx1117.i, align 4, !dbg !1678
  %xor1118.i = xor i32 %704, %706, !dbg !1678
  %707 = load i32, i32* %u.i, align 4, !dbg !1678
  %shr1119.i = lshr i32 %707, 18, !dbg !1678
  %and1120.i = and i32 %shr1119.i, 63, !dbg !1678
  %idxprom1121.i = zext i32 %and1120.i to i64, !dbg !1678
  %arrayidx1122.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i, !dbg !1678
  %708 = load i32, i32* %arrayidx1122.i, align 4, !dbg !1678
  %xor1123.i = xor i32 %xor1118.i, %708, !dbg !1678
  %709 = load i32, i32* %u.i, align 4, !dbg !1678
  %shr1124.i = lshr i32 %709, 26, !dbg !1678
  %idxprom1126.i = zext i32 %shr1124.i to i64, !dbg !1678
  %arrayidx1127.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i, !dbg !1678
  %710 = load i32, i32* %arrayidx1127.i, align 4, !dbg !1678
  %xor1128.i = xor i32 %xor1123.i, %710, !dbg !1678
  %711 = load i32, i32* %t.i, align 4, !dbg !1678
  %shr1129.i = lshr i32 %711, 2, !dbg !1678
  %and1130.i = and i32 %shr1129.i, 63, !dbg !1678
  %idxprom1131.i = zext i32 %and1130.i to i64, !dbg !1678
  %arrayidx1132.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i, !dbg !1678
  %712 = load i32, i32* %arrayidx1132.i, align 4, !dbg !1678
  %xor1133.i = xor i32 %xor1128.i, %712, !dbg !1678
  %713 = load i32, i32* %t.i, align 4, !dbg !1678
  %shr1134.i = lshr i32 %713, 10, !dbg !1678
  %and1135.i = and i32 %shr1134.i, 63, !dbg !1678
  %idxprom1136.i = zext i32 %and1135.i to i64, !dbg !1678
  %arrayidx1137.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i, !dbg !1678
  %714 = load i32, i32* %arrayidx1137.i, align 4, !dbg !1678
  %xor1138.i = xor i32 %xor1133.i, %714, !dbg !1678
  %715 = load i32, i32* %t.i, align 4, !dbg !1678
  %shr1139.i = lshr i32 %715, 18, !dbg !1678
  %and1140.i = and i32 %shr1139.i, 63, !dbg !1678
  %idxprom1141.i = zext i32 %and1140.i to i64, !dbg !1678
  %arrayidx1142.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i, !dbg !1678
  %716 = load i32, i32* %arrayidx1142.i, align 4, !dbg !1678
  %xor1143.i = xor i32 %xor1138.i, %716, !dbg !1678
  %717 = load i32, i32* %t.i, align 4, !dbg !1678
  %shr1144.i = lshr i32 %717, 26, !dbg !1678
  %idxprom1146.i = zext i32 %shr1144.i to i64, !dbg !1678
  %arrayidx1147.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i, !dbg !1678
  %718 = load i32, i32* %arrayidx1147.i, align 4, !dbg !1678
  %xor1148.i = xor i32 %xor1143.i, %718, !dbg !1678
  %719 = load i32, i32* %r.i, align 4, !dbg !1678
  %xor1149.i = xor i32 %719, %xor1148.i, !dbg !1678
  store i32 %xor1149.i, i32* %r.i, align 4, !dbg !1678
  %720 = load i32, i32* %r.i, align 4, !dbg !1679
  %721 = load i32*, i32** %s.i, align 8, !dbg !1679
  %arrayidx1150.i = getelementptr inbounds i32, i32* %721, i64 14, !dbg !1679
  %722 = load i32, i32* %arrayidx1150.i, align 4, !dbg !1679
  %xor1151.i = xor i32 %720, %722, !dbg !1679
  store i32 %xor1151.i, i32* %u.i, align 4, !dbg !1679
  %723 = load i32, i32* %r.i, align 4, !dbg !1679
  %724 = load i32*, i32** %s.i, align 8, !dbg !1679
  %arrayidx1152.i = getelementptr inbounds i32, i32* %724, i64 15, !dbg !1679
  %725 = load i32, i32* %arrayidx1152.i, align 4, !dbg !1679
  %xor1153.i = xor i32 %723, %725, !dbg !1679
  store i32 %xor1153.i, i32* %t.i, align 4, !dbg !1679
  %726 = load i32, i32* %t.i, align 4, !dbg !1596
  %727 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %726) #5, !dbg !1596, !srcloc !240
  store i32 %727, i32* %ret1154.i, align 4, !dbg !1596
  %728 = load i32, i32* %ret1154.i, align 4, !dbg !1596
  store i32 %728, i32* %tmp1155.i, align 4, !dbg !1596
  %729 = load i32, i32* %tmp1155.i, align 4, !dbg !1596
  store i32 %729, i32* %t.i, align 4, !dbg !1679
  %730 = load i32, i32* %u.i, align 4, !dbg !1679
  %shr1156.i = lshr i32 %730, 2, !dbg !1679
  %and1157.i = and i32 %shr1156.i, 63, !dbg !1679
  %idxprom1158.i = zext i32 %and1157.i to i64, !dbg !1679
  %arrayidx1159.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i, !dbg !1679
  %731 = load i32, i32* %arrayidx1159.i, align 4, !dbg !1679
  %732 = load i32, i32* %u.i, align 4, !dbg !1679
  %shr1160.i = lshr i32 %732, 10, !dbg !1679
  %and1161.i = and i32 %shr1160.i, 63, !dbg !1679
  %idxprom1162.i = zext i32 %and1161.i to i64, !dbg !1679
  %arrayidx1163.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i, !dbg !1679
  %733 = load i32, i32* %arrayidx1163.i, align 4, !dbg !1679
  %xor1164.i = xor i32 %731, %733, !dbg !1679
  %734 = load i32, i32* %u.i, align 4, !dbg !1679
  %shr1165.i = lshr i32 %734, 18, !dbg !1679
  %and1166.i = and i32 %shr1165.i, 63, !dbg !1679
  %idxprom1167.i = zext i32 %and1166.i to i64, !dbg !1679
  %arrayidx1168.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i, !dbg !1679
  %735 = load i32, i32* %arrayidx1168.i, align 4, !dbg !1679
  %xor1169.i = xor i32 %xor1164.i, %735, !dbg !1679
  %736 = load i32, i32* %u.i, align 4, !dbg !1679
  %shr1170.i = lshr i32 %736, 26, !dbg !1679
  %idxprom1172.i = zext i32 %shr1170.i to i64, !dbg !1679
  %arrayidx1173.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i, !dbg !1679
  %737 = load i32, i32* %arrayidx1173.i, align 4, !dbg !1679
  %xor1174.i = xor i32 %xor1169.i, %737, !dbg !1679
  %738 = load i32, i32* %t.i, align 4, !dbg !1679
  %shr1175.i = lshr i32 %738, 2, !dbg !1679
  %and1176.i = and i32 %shr1175.i, 63, !dbg !1679
  %idxprom1177.i = zext i32 %and1176.i to i64, !dbg !1679
  %arrayidx1178.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i, !dbg !1679
  %739 = load i32, i32* %arrayidx1178.i, align 4, !dbg !1679
  %xor1179.i = xor i32 %xor1174.i, %739, !dbg !1679
  %740 = load i32, i32* %t.i, align 4, !dbg !1679
  %shr1180.i = lshr i32 %740, 10, !dbg !1679
  %and1181.i = and i32 %shr1180.i, 63, !dbg !1679
  %idxprom1182.i = zext i32 %and1181.i to i64, !dbg !1679
  %arrayidx1183.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i, !dbg !1679
  %741 = load i32, i32* %arrayidx1183.i, align 4, !dbg !1679
  %xor1184.i = xor i32 %xor1179.i, %741, !dbg !1679
  %742 = load i32, i32* %t.i, align 4, !dbg !1679
  %shr1185.i = lshr i32 %742, 18, !dbg !1679
  %and1186.i = and i32 %shr1185.i, 63, !dbg !1679
  %idxprom1187.i = zext i32 %and1186.i to i64, !dbg !1679
  %arrayidx1188.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i, !dbg !1679
  %743 = load i32, i32* %arrayidx1188.i, align 4, !dbg !1679
  %xor1189.i = xor i32 %xor1184.i, %743, !dbg !1679
  %744 = load i32, i32* %t.i, align 4, !dbg !1679
  %shr1190.i = lshr i32 %744, 26, !dbg !1679
  %idxprom1192.i = zext i32 %shr1190.i to i64, !dbg !1679
  %arrayidx1193.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i, !dbg !1679
  %745 = load i32, i32* %arrayidx1193.i, align 4, !dbg !1679
  %xor1194.i = xor i32 %xor1189.i, %745, !dbg !1679
  %746 = load i32, i32* %l.i, align 4, !dbg !1679
  %xor1195.i = xor i32 %746, %xor1194.i, !dbg !1679
  store i32 %xor1195.i, i32* %l.i, align 4, !dbg !1679
  %747 = load i32, i32* %l.i, align 4, !dbg !1680
  %748 = load i32*, i32** %s.i, align 8, !dbg !1680
  %arrayidx1196.i = getelementptr inbounds i32, i32* %748, i64 12, !dbg !1680
  %749 = load i32, i32* %arrayidx1196.i, align 4, !dbg !1680
  %xor1197.i = xor i32 %747, %749, !dbg !1680
  store i32 %xor1197.i, i32* %u.i, align 4, !dbg !1680
  %750 = load i32, i32* %l.i, align 4, !dbg !1680
  %751 = load i32*, i32** %s.i, align 8, !dbg !1680
  %arrayidx1198.i = getelementptr inbounds i32, i32* %751, i64 13, !dbg !1680
  %752 = load i32, i32* %arrayidx1198.i, align 4, !dbg !1680
  %xor1199.i = xor i32 %750, %752, !dbg !1680
  store i32 %xor1199.i, i32* %t.i, align 4, !dbg !1680
  %753 = load i32, i32* %t.i, align 4, !dbg !1597
  %754 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %753) #5, !dbg !1597, !srcloc !246
  store i32 %754, i32* %ret1200.i, align 4, !dbg !1597
  %755 = load i32, i32* %ret1200.i, align 4, !dbg !1597
  store i32 %755, i32* %tmp1201.i, align 4, !dbg !1597
  %756 = load i32, i32* %tmp1201.i, align 4, !dbg !1597
  store i32 %756, i32* %t.i, align 4, !dbg !1680
  %757 = load i32, i32* %u.i, align 4, !dbg !1680
  %shr1202.i = lshr i32 %757, 2, !dbg !1680
  %and1203.i = and i32 %shr1202.i, 63, !dbg !1680
  %idxprom1204.i = zext i32 %and1203.i to i64, !dbg !1680
  %arrayidx1205.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i, !dbg !1680
  %758 = load i32, i32* %arrayidx1205.i, align 4, !dbg !1680
  %759 = load i32, i32* %u.i, align 4, !dbg !1680
  %shr1206.i = lshr i32 %759, 10, !dbg !1680
  %and1207.i = and i32 %shr1206.i, 63, !dbg !1680
  %idxprom1208.i = zext i32 %and1207.i to i64, !dbg !1680
  %arrayidx1209.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i, !dbg !1680
  %760 = load i32, i32* %arrayidx1209.i, align 4, !dbg !1680
  %xor1210.i = xor i32 %758, %760, !dbg !1680
  %761 = load i32, i32* %u.i, align 4, !dbg !1680
  %shr1211.i = lshr i32 %761, 18, !dbg !1680
  %and1212.i = and i32 %shr1211.i, 63, !dbg !1680
  %idxprom1213.i = zext i32 %and1212.i to i64, !dbg !1680
  %arrayidx1214.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i, !dbg !1680
  %762 = load i32, i32* %arrayidx1214.i, align 4, !dbg !1680
  %xor1215.i = xor i32 %xor1210.i, %762, !dbg !1680
  %763 = load i32, i32* %u.i, align 4, !dbg !1680
  %shr1216.i = lshr i32 %763, 26, !dbg !1680
  %idxprom1218.i = zext i32 %shr1216.i to i64, !dbg !1680
  %arrayidx1219.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i, !dbg !1680
  %764 = load i32, i32* %arrayidx1219.i, align 4, !dbg !1680
  %xor1220.i = xor i32 %xor1215.i, %764, !dbg !1680
  %765 = load i32, i32* %t.i, align 4, !dbg !1680
  %shr1221.i = lshr i32 %765, 2, !dbg !1680
  %and1222.i = and i32 %shr1221.i, 63, !dbg !1680
  %idxprom1223.i = zext i32 %and1222.i to i64, !dbg !1680
  %arrayidx1224.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i, !dbg !1680
  %766 = load i32, i32* %arrayidx1224.i, align 4, !dbg !1680
  %xor1225.i = xor i32 %xor1220.i, %766, !dbg !1680
  %767 = load i32, i32* %t.i, align 4, !dbg !1680
  %shr1226.i = lshr i32 %767, 10, !dbg !1680
  %and1227.i = and i32 %shr1226.i, 63, !dbg !1680
  %idxprom1228.i = zext i32 %and1227.i to i64, !dbg !1680
  %arrayidx1229.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i, !dbg !1680
  %768 = load i32, i32* %arrayidx1229.i, align 4, !dbg !1680
  %xor1230.i = xor i32 %xor1225.i, %768, !dbg !1680
  %769 = load i32, i32* %t.i, align 4, !dbg !1680
  %shr1231.i = lshr i32 %769, 18, !dbg !1680
  %and1232.i = and i32 %shr1231.i, 63, !dbg !1680
  %idxprom1233.i = zext i32 %and1232.i to i64, !dbg !1680
  %arrayidx1234.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i, !dbg !1680
  %770 = load i32, i32* %arrayidx1234.i, align 4, !dbg !1680
  %xor1235.i = xor i32 %xor1230.i, %770, !dbg !1680
  %771 = load i32, i32* %t.i, align 4, !dbg !1680
  %shr1236.i = lshr i32 %771, 26, !dbg !1680
  %idxprom1238.i = zext i32 %shr1236.i to i64, !dbg !1680
  %arrayidx1239.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i, !dbg !1680
  %772 = load i32, i32* %arrayidx1239.i, align 4, !dbg !1680
  %xor1240.i = xor i32 %xor1235.i, %772, !dbg !1680
  %773 = load i32, i32* %r.i, align 4, !dbg !1680
  %xor1241.i = xor i32 %773, %xor1240.i, !dbg !1680
  store i32 %xor1241.i, i32* %r.i, align 4, !dbg !1680
  %774 = load i32, i32* %r.i, align 4, !dbg !1681
  %775 = load i32*, i32** %s.i, align 8, !dbg !1681
  %arrayidx1242.i = getelementptr inbounds i32, i32* %775, i64 10, !dbg !1681
  %776 = load i32, i32* %arrayidx1242.i, align 4, !dbg !1681
  %xor1243.i = xor i32 %774, %776, !dbg !1681
  store i32 %xor1243.i, i32* %u.i, align 4, !dbg !1681
  %777 = load i32, i32* %r.i, align 4, !dbg !1681
  %778 = load i32*, i32** %s.i, align 8, !dbg !1681
  %arrayidx1244.i = getelementptr inbounds i32, i32* %778, i64 11, !dbg !1681
  %779 = load i32, i32* %arrayidx1244.i, align 4, !dbg !1681
  %xor1245.i = xor i32 %777, %779, !dbg !1681
  store i32 %xor1245.i, i32* %t.i, align 4, !dbg !1681
  %780 = load i32, i32* %t.i, align 4, !dbg !1598
  %781 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %780) #5, !dbg !1598, !srcloc !252
  store i32 %781, i32* %ret1246.i, align 4, !dbg !1598
  %782 = load i32, i32* %ret1246.i, align 4, !dbg !1598
  store i32 %782, i32* %tmp1247.i, align 4, !dbg !1598
  %783 = load i32, i32* %tmp1247.i, align 4, !dbg !1598
  store i32 %783, i32* %t.i, align 4, !dbg !1681
  %784 = load i32, i32* %u.i, align 4, !dbg !1681
  %shr1248.i = lshr i32 %784, 2, !dbg !1681
  %and1249.i = and i32 %shr1248.i, 63, !dbg !1681
  %idxprom1250.i = zext i32 %and1249.i to i64, !dbg !1681
  %arrayidx1251.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i, !dbg !1681
  %785 = load i32, i32* %arrayidx1251.i, align 4, !dbg !1681
  %786 = load i32, i32* %u.i, align 4, !dbg !1681
  %shr1252.i = lshr i32 %786, 10, !dbg !1681
  %and1253.i = and i32 %shr1252.i, 63, !dbg !1681
  %idxprom1254.i = zext i32 %and1253.i to i64, !dbg !1681
  %arrayidx1255.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i, !dbg !1681
  %787 = load i32, i32* %arrayidx1255.i, align 4, !dbg !1681
  %xor1256.i = xor i32 %785, %787, !dbg !1681
  %788 = load i32, i32* %u.i, align 4, !dbg !1681
  %shr1257.i = lshr i32 %788, 18, !dbg !1681
  %and1258.i = and i32 %shr1257.i, 63, !dbg !1681
  %idxprom1259.i = zext i32 %and1258.i to i64, !dbg !1681
  %arrayidx1260.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i, !dbg !1681
  %789 = load i32, i32* %arrayidx1260.i, align 4, !dbg !1681
  %xor1261.i = xor i32 %xor1256.i, %789, !dbg !1681
  %790 = load i32, i32* %u.i, align 4, !dbg !1681
  %shr1262.i = lshr i32 %790, 26, !dbg !1681
  %idxprom1264.i = zext i32 %shr1262.i to i64, !dbg !1681
  %arrayidx1265.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i, !dbg !1681
  %791 = load i32, i32* %arrayidx1265.i, align 4, !dbg !1681
  %xor1266.i = xor i32 %xor1261.i, %791, !dbg !1681
  %792 = load i32, i32* %t.i, align 4, !dbg !1681
  %shr1267.i = lshr i32 %792, 2, !dbg !1681
  %and1268.i = and i32 %shr1267.i, 63, !dbg !1681
  %idxprom1269.i = zext i32 %and1268.i to i64, !dbg !1681
  %arrayidx1270.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i, !dbg !1681
  %793 = load i32, i32* %arrayidx1270.i, align 4, !dbg !1681
  %xor1271.i = xor i32 %xor1266.i, %793, !dbg !1681
  %794 = load i32, i32* %t.i, align 4, !dbg !1681
  %shr1272.i = lshr i32 %794, 10, !dbg !1681
  %and1273.i = and i32 %shr1272.i, 63, !dbg !1681
  %idxprom1274.i = zext i32 %and1273.i to i64, !dbg !1681
  %arrayidx1275.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i, !dbg !1681
  %795 = load i32, i32* %arrayidx1275.i, align 4, !dbg !1681
  %xor1276.i = xor i32 %xor1271.i, %795, !dbg !1681
  %796 = load i32, i32* %t.i, align 4, !dbg !1681
  %shr1277.i = lshr i32 %796, 18, !dbg !1681
  %and1278.i = and i32 %shr1277.i, 63, !dbg !1681
  %idxprom1279.i = zext i32 %and1278.i to i64, !dbg !1681
  %arrayidx1280.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i, !dbg !1681
  %797 = load i32, i32* %arrayidx1280.i, align 4, !dbg !1681
  %xor1281.i = xor i32 %xor1276.i, %797, !dbg !1681
  %798 = load i32, i32* %t.i, align 4, !dbg !1681
  %shr1282.i = lshr i32 %798, 26, !dbg !1681
  %idxprom1284.i = zext i32 %shr1282.i to i64, !dbg !1681
  %arrayidx1285.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i, !dbg !1681
  %799 = load i32, i32* %arrayidx1285.i, align 4, !dbg !1681
  %xor1286.i = xor i32 %xor1281.i, %799, !dbg !1681
  %800 = load i32, i32* %l.i, align 4, !dbg !1681
  %xor1287.i = xor i32 %800, %xor1286.i, !dbg !1681
  store i32 %xor1287.i, i32* %l.i, align 4, !dbg !1681
  %801 = load i32, i32* %l.i, align 4, !dbg !1682
  %802 = load i32*, i32** %s.i, align 8, !dbg !1682
  %arrayidx1288.i = getelementptr inbounds i32, i32* %802, i64 8, !dbg !1682
  %803 = load i32, i32* %arrayidx1288.i, align 4, !dbg !1682
  %xor1289.i = xor i32 %801, %803, !dbg !1682
  store i32 %xor1289.i, i32* %u.i, align 4, !dbg !1682
  %804 = load i32, i32* %l.i, align 4, !dbg !1682
  %805 = load i32*, i32** %s.i, align 8, !dbg !1682
  %arrayidx1290.i = getelementptr inbounds i32, i32* %805, i64 9, !dbg !1682
  %806 = load i32, i32* %arrayidx1290.i, align 4, !dbg !1682
  %xor1291.i = xor i32 %804, %806, !dbg !1682
  store i32 %xor1291.i, i32* %t.i, align 4, !dbg !1682
  %807 = load i32, i32* %t.i, align 4, !dbg !1599
  %808 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %807) #5, !dbg !1599, !srcloc !258
  store i32 %808, i32* %ret1292.i, align 4, !dbg !1599
  %809 = load i32, i32* %ret1292.i, align 4, !dbg !1599
  store i32 %809, i32* %tmp1293.i, align 4, !dbg !1599
  %810 = load i32, i32* %tmp1293.i, align 4, !dbg !1599
  store i32 %810, i32* %t.i, align 4, !dbg !1682
  %811 = load i32, i32* %u.i, align 4, !dbg !1682
  %shr1294.i = lshr i32 %811, 2, !dbg !1682
  %and1295.i = and i32 %shr1294.i, 63, !dbg !1682
  %idxprom1296.i = zext i32 %and1295.i to i64, !dbg !1682
  %arrayidx1297.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i, !dbg !1682
  %812 = load i32, i32* %arrayidx1297.i, align 4, !dbg !1682
  %813 = load i32, i32* %u.i, align 4, !dbg !1682
  %shr1298.i = lshr i32 %813, 10, !dbg !1682
  %and1299.i = and i32 %shr1298.i, 63, !dbg !1682
  %idxprom1300.i = zext i32 %and1299.i to i64, !dbg !1682
  %arrayidx1301.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i, !dbg !1682
  %814 = load i32, i32* %arrayidx1301.i, align 4, !dbg !1682
  %xor1302.i = xor i32 %812, %814, !dbg !1682
  %815 = load i32, i32* %u.i, align 4, !dbg !1682
  %shr1303.i = lshr i32 %815, 18, !dbg !1682
  %and1304.i = and i32 %shr1303.i, 63, !dbg !1682
  %idxprom1305.i = zext i32 %and1304.i to i64, !dbg !1682
  %arrayidx1306.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i, !dbg !1682
  %816 = load i32, i32* %arrayidx1306.i, align 4, !dbg !1682
  %xor1307.i = xor i32 %xor1302.i, %816, !dbg !1682
  %817 = load i32, i32* %u.i, align 4, !dbg !1682
  %shr1308.i = lshr i32 %817, 26, !dbg !1682
  %idxprom1310.i = zext i32 %shr1308.i to i64, !dbg !1682
  %arrayidx1311.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i, !dbg !1682
  %818 = load i32, i32* %arrayidx1311.i, align 4, !dbg !1682
  %xor1312.i = xor i32 %xor1307.i, %818, !dbg !1682
  %819 = load i32, i32* %t.i, align 4, !dbg !1682
  %shr1313.i = lshr i32 %819, 2, !dbg !1682
  %and1314.i = and i32 %shr1313.i, 63, !dbg !1682
  %idxprom1315.i = zext i32 %and1314.i to i64, !dbg !1682
  %arrayidx1316.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i, !dbg !1682
  %820 = load i32, i32* %arrayidx1316.i, align 4, !dbg !1682
  %xor1317.i = xor i32 %xor1312.i, %820, !dbg !1682
  %821 = load i32, i32* %t.i, align 4, !dbg !1682
  %shr1318.i = lshr i32 %821, 10, !dbg !1682
  %and1319.i = and i32 %shr1318.i, 63, !dbg !1682
  %idxprom1320.i = zext i32 %and1319.i to i64, !dbg !1682
  %arrayidx1321.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i, !dbg !1682
  %822 = load i32, i32* %arrayidx1321.i, align 4, !dbg !1682
  %xor1322.i = xor i32 %xor1317.i, %822, !dbg !1682
  %823 = load i32, i32* %t.i, align 4, !dbg !1682
  %shr1323.i = lshr i32 %823, 18, !dbg !1682
  %and1324.i = and i32 %shr1323.i, 63, !dbg !1682
  %idxprom1325.i = zext i32 %and1324.i to i64, !dbg !1682
  %arrayidx1326.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i, !dbg !1682
  %824 = load i32, i32* %arrayidx1326.i, align 4, !dbg !1682
  %xor1327.i = xor i32 %xor1322.i, %824, !dbg !1682
  %825 = load i32, i32* %t.i, align 4, !dbg !1682
  %shr1328.i = lshr i32 %825, 26, !dbg !1682
  %idxprom1330.i = zext i32 %shr1328.i to i64, !dbg !1682
  %arrayidx1331.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i, !dbg !1682
  %826 = load i32, i32* %arrayidx1331.i, align 4, !dbg !1682
  %xor1332.i = xor i32 %xor1327.i, %826, !dbg !1682
  %827 = load i32, i32* %r.i, align 4, !dbg !1682
  %xor1333.i = xor i32 %827, %xor1332.i, !dbg !1682
  store i32 %xor1333.i, i32* %r.i, align 4, !dbg !1682
  %828 = load i32, i32* %r.i, align 4, !dbg !1683
  %829 = load i32*, i32** %s.i, align 8, !dbg !1683
  %arrayidx1334.i = getelementptr inbounds i32, i32* %829, i64 6, !dbg !1683
  %830 = load i32, i32* %arrayidx1334.i, align 4, !dbg !1683
  %xor1335.i = xor i32 %828, %830, !dbg !1683
  store i32 %xor1335.i, i32* %u.i, align 4, !dbg !1683
  %831 = load i32, i32* %r.i, align 4, !dbg !1683
  %832 = load i32*, i32** %s.i, align 8, !dbg !1683
  %arrayidx1336.i = getelementptr inbounds i32, i32* %832, i64 7, !dbg !1683
  %833 = load i32, i32* %arrayidx1336.i, align 4, !dbg !1683
  %xor1337.i = xor i32 %831, %833, !dbg !1683
  store i32 %xor1337.i, i32* %t.i, align 4, !dbg !1683
  %834 = load i32, i32* %t.i, align 4, !dbg !1600
  %835 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %834) #5, !dbg !1600, !srcloc !264
  store i32 %835, i32* %ret1338.i, align 4, !dbg !1600
  %836 = load i32, i32* %ret1338.i, align 4, !dbg !1600
  store i32 %836, i32* %tmp1339.i, align 4, !dbg !1600
  %837 = load i32, i32* %tmp1339.i, align 4, !dbg !1600
  store i32 %837, i32* %t.i, align 4, !dbg !1683
  %838 = load i32, i32* %u.i, align 4, !dbg !1683
  %shr1340.i = lshr i32 %838, 2, !dbg !1683
  %and1341.i = and i32 %shr1340.i, 63, !dbg !1683
  %idxprom1342.i = zext i32 %and1341.i to i64, !dbg !1683
  %arrayidx1343.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i, !dbg !1683
  %839 = load i32, i32* %arrayidx1343.i, align 4, !dbg !1683
  %840 = load i32, i32* %u.i, align 4, !dbg !1683
  %shr1344.i = lshr i32 %840, 10, !dbg !1683
  %and1345.i = and i32 %shr1344.i, 63, !dbg !1683
  %idxprom1346.i = zext i32 %and1345.i to i64, !dbg !1683
  %arrayidx1347.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i, !dbg !1683
  %841 = load i32, i32* %arrayidx1347.i, align 4, !dbg !1683
  %xor1348.i = xor i32 %839, %841, !dbg !1683
  %842 = load i32, i32* %u.i, align 4, !dbg !1683
  %shr1349.i = lshr i32 %842, 18, !dbg !1683
  %and1350.i = and i32 %shr1349.i, 63, !dbg !1683
  %idxprom1351.i = zext i32 %and1350.i to i64, !dbg !1683
  %arrayidx1352.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i, !dbg !1683
  %843 = load i32, i32* %arrayidx1352.i, align 4, !dbg !1683
  %xor1353.i = xor i32 %xor1348.i, %843, !dbg !1683
  %844 = load i32, i32* %u.i, align 4, !dbg !1683
  %shr1354.i = lshr i32 %844, 26, !dbg !1683
  %idxprom1356.i = zext i32 %shr1354.i to i64, !dbg !1683
  %arrayidx1357.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i, !dbg !1683
  %845 = load i32, i32* %arrayidx1357.i, align 4, !dbg !1683
  %xor1358.i = xor i32 %xor1353.i, %845, !dbg !1683
  %846 = load i32, i32* %t.i, align 4, !dbg !1683
  %shr1359.i = lshr i32 %846, 2, !dbg !1683
  %and1360.i = and i32 %shr1359.i, 63, !dbg !1683
  %idxprom1361.i = zext i32 %and1360.i to i64, !dbg !1683
  %arrayidx1362.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i, !dbg !1683
  %847 = load i32, i32* %arrayidx1362.i, align 4, !dbg !1683
  %xor1363.i = xor i32 %xor1358.i, %847, !dbg !1683
  %848 = load i32, i32* %t.i, align 4, !dbg !1683
  %shr1364.i = lshr i32 %848, 10, !dbg !1683
  %and1365.i = and i32 %shr1364.i, 63, !dbg !1683
  %idxprom1366.i = zext i32 %and1365.i to i64, !dbg !1683
  %arrayidx1367.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i, !dbg !1683
  %849 = load i32, i32* %arrayidx1367.i, align 4, !dbg !1683
  %xor1368.i = xor i32 %xor1363.i, %849, !dbg !1683
  %850 = load i32, i32* %t.i, align 4, !dbg !1683
  %shr1369.i = lshr i32 %850, 18, !dbg !1683
  %and1370.i = and i32 %shr1369.i, 63, !dbg !1683
  %idxprom1371.i = zext i32 %and1370.i to i64, !dbg !1683
  %arrayidx1372.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i, !dbg !1683
  %851 = load i32, i32* %arrayidx1372.i, align 4, !dbg !1683
  %xor1373.i = xor i32 %xor1368.i, %851, !dbg !1683
  %852 = load i32, i32* %t.i, align 4, !dbg !1683
  %shr1374.i = lshr i32 %852, 26, !dbg !1683
  %idxprom1376.i = zext i32 %shr1374.i to i64, !dbg !1683
  %arrayidx1377.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i, !dbg !1683
  %853 = load i32, i32* %arrayidx1377.i, align 4, !dbg !1683
  %xor1378.i = xor i32 %xor1373.i, %853, !dbg !1683
  %854 = load i32, i32* %l.i, align 4, !dbg !1683
  %xor1379.i = xor i32 %854, %xor1378.i, !dbg !1683
  store i32 %xor1379.i, i32* %l.i, align 4, !dbg !1683
  %855 = load i32, i32* %l.i, align 4, !dbg !1684
  %856 = load i32*, i32** %s.i, align 8, !dbg !1684
  %arrayidx1380.i = getelementptr inbounds i32, i32* %856, i64 4, !dbg !1684
  %857 = load i32, i32* %arrayidx1380.i, align 4, !dbg !1684
  %xor1381.i = xor i32 %855, %857, !dbg !1684
  store i32 %xor1381.i, i32* %u.i, align 4, !dbg !1684
  %858 = load i32, i32* %l.i, align 4, !dbg !1684
  %859 = load i32*, i32** %s.i, align 8, !dbg !1684
  %arrayidx1382.i = getelementptr inbounds i32, i32* %859, i64 5, !dbg !1684
  %860 = load i32, i32* %arrayidx1382.i, align 4, !dbg !1684
  %xor1383.i = xor i32 %858, %860, !dbg !1684
  store i32 %xor1383.i, i32* %t.i, align 4, !dbg !1684
  %861 = load i32, i32* %t.i, align 4, !dbg !1601
  %862 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %861) #5, !dbg !1601, !srcloc !270
  store i32 %862, i32* %ret1384.i, align 4, !dbg !1601
  %863 = load i32, i32* %ret1384.i, align 4, !dbg !1601
  store i32 %863, i32* %tmp1385.i, align 4, !dbg !1601
  %864 = load i32, i32* %tmp1385.i, align 4, !dbg !1601
  store i32 %864, i32* %t.i, align 4, !dbg !1684
  %865 = load i32, i32* %u.i, align 4, !dbg !1684
  %shr1386.i = lshr i32 %865, 2, !dbg !1684
  %and1387.i = and i32 %shr1386.i, 63, !dbg !1684
  %idxprom1388.i = zext i32 %and1387.i to i64, !dbg !1684
  %arrayidx1389.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i, !dbg !1684
  %866 = load i32, i32* %arrayidx1389.i, align 4, !dbg !1684
  %867 = load i32, i32* %u.i, align 4, !dbg !1684
  %shr1390.i = lshr i32 %867, 10, !dbg !1684
  %and1391.i = and i32 %shr1390.i, 63, !dbg !1684
  %idxprom1392.i = zext i32 %and1391.i to i64, !dbg !1684
  %arrayidx1393.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i, !dbg !1684
  %868 = load i32, i32* %arrayidx1393.i, align 4, !dbg !1684
  %xor1394.i = xor i32 %866, %868, !dbg !1684
  %869 = load i32, i32* %u.i, align 4, !dbg !1684
  %shr1395.i = lshr i32 %869, 18, !dbg !1684
  %and1396.i = and i32 %shr1395.i, 63, !dbg !1684
  %idxprom1397.i = zext i32 %and1396.i to i64, !dbg !1684
  %arrayidx1398.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i, !dbg !1684
  %870 = load i32, i32* %arrayidx1398.i, align 4, !dbg !1684
  %xor1399.i = xor i32 %xor1394.i, %870, !dbg !1684
  %871 = load i32, i32* %u.i, align 4, !dbg !1684
  %shr1400.i = lshr i32 %871, 26, !dbg !1684
  %idxprom1402.i = zext i32 %shr1400.i to i64, !dbg !1684
  %arrayidx1403.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i, !dbg !1684
  %872 = load i32, i32* %arrayidx1403.i, align 4, !dbg !1684
  %xor1404.i = xor i32 %xor1399.i, %872, !dbg !1684
  %873 = load i32, i32* %t.i, align 4, !dbg !1684
  %shr1405.i = lshr i32 %873, 2, !dbg !1684
  %and1406.i = and i32 %shr1405.i, 63, !dbg !1684
  %idxprom1407.i = zext i32 %and1406.i to i64, !dbg !1684
  %arrayidx1408.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i, !dbg !1684
  %874 = load i32, i32* %arrayidx1408.i, align 4, !dbg !1684
  %xor1409.i = xor i32 %xor1404.i, %874, !dbg !1684
  %875 = load i32, i32* %t.i, align 4, !dbg !1684
  %shr1410.i = lshr i32 %875, 10, !dbg !1684
  %and1411.i = and i32 %shr1410.i, 63, !dbg !1684
  %idxprom1412.i = zext i32 %and1411.i to i64, !dbg !1684
  %arrayidx1413.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i, !dbg !1684
  %876 = load i32, i32* %arrayidx1413.i, align 4, !dbg !1684
  %xor1414.i = xor i32 %xor1409.i, %876, !dbg !1684
  %877 = load i32, i32* %t.i, align 4, !dbg !1684
  %shr1415.i = lshr i32 %877, 18, !dbg !1684
  %and1416.i = and i32 %shr1415.i, 63, !dbg !1684
  %idxprom1417.i = zext i32 %and1416.i to i64, !dbg !1684
  %arrayidx1418.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i, !dbg !1684
  %878 = load i32, i32* %arrayidx1418.i, align 4, !dbg !1684
  %xor1419.i = xor i32 %xor1414.i, %878, !dbg !1684
  %879 = load i32, i32* %t.i, align 4, !dbg !1684
  %shr1420.i = lshr i32 %879, 26, !dbg !1684
  %idxprom1422.i = zext i32 %shr1420.i to i64, !dbg !1684
  %arrayidx1423.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i, !dbg !1684
  %880 = load i32, i32* %arrayidx1423.i, align 4, !dbg !1684
  %xor1424.i = xor i32 %xor1419.i, %880, !dbg !1684
  %881 = load i32, i32* %r.i, align 4, !dbg !1684
  %xor1425.i = xor i32 %881, %xor1424.i, !dbg !1684
  store i32 %xor1425.i, i32* %r.i, align 4, !dbg !1684
  %882 = load i32, i32* %r.i, align 4, !dbg !1685
  %883 = load i32*, i32** %s.i, align 8, !dbg !1685
  %arrayidx1426.i = getelementptr inbounds i32, i32* %883, i64 2, !dbg !1685
  %884 = load i32, i32* %arrayidx1426.i, align 4, !dbg !1685
  %xor1427.i = xor i32 %882, %884, !dbg !1685
  store i32 %xor1427.i, i32* %u.i, align 4, !dbg !1685
  %885 = load i32, i32* %r.i, align 4, !dbg !1685
  %886 = load i32*, i32** %s.i, align 8, !dbg !1685
  %arrayidx1428.i = getelementptr inbounds i32, i32* %886, i64 3, !dbg !1685
  %887 = load i32, i32* %arrayidx1428.i, align 4, !dbg !1685
  %xor1429.i = xor i32 %885, %887, !dbg !1685
  store i32 %xor1429.i, i32* %t.i, align 4, !dbg !1685
  %888 = load i32, i32* %t.i, align 4, !dbg !1602
  %889 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %888) #5, !dbg !1602, !srcloc !276
  store i32 %889, i32* %ret1430.i, align 4, !dbg !1602
  %890 = load i32, i32* %ret1430.i, align 4, !dbg !1602
  store i32 %890, i32* %tmp1431.i, align 4, !dbg !1602
  %891 = load i32, i32* %tmp1431.i, align 4, !dbg !1602
  store i32 %891, i32* %t.i, align 4, !dbg !1685
  %892 = load i32, i32* %u.i, align 4, !dbg !1685
  %shr1432.i = lshr i32 %892, 2, !dbg !1685
  %and1433.i = and i32 %shr1432.i, 63, !dbg !1685
  %idxprom1434.i = zext i32 %and1433.i to i64, !dbg !1685
  %arrayidx1435.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i, !dbg !1685
  %893 = load i32, i32* %arrayidx1435.i, align 4, !dbg !1685
  %894 = load i32, i32* %u.i, align 4, !dbg !1685
  %shr1436.i = lshr i32 %894, 10, !dbg !1685
  %and1437.i = and i32 %shr1436.i, 63, !dbg !1685
  %idxprom1438.i = zext i32 %and1437.i to i64, !dbg !1685
  %arrayidx1439.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i, !dbg !1685
  %895 = load i32, i32* %arrayidx1439.i, align 4, !dbg !1685
  %xor1440.i = xor i32 %893, %895, !dbg !1685
  %896 = load i32, i32* %u.i, align 4, !dbg !1685
  %shr1441.i = lshr i32 %896, 18, !dbg !1685
  %and1442.i = and i32 %shr1441.i, 63, !dbg !1685
  %idxprom1443.i = zext i32 %and1442.i to i64, !dbg !1685
  %arrayidx1444.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i, !dbg !1685
  %897 = load i32, i32* %arrayidx1444.i, align 4, !dbg !1685
  %xor1445.i = xor i32 %xor1440.i, %897, !dbg !1685
  %898 = load i32, i32* %u.i, align 4, !dbg !1685
  %shr1446.i = lshr i32 %898, 26, !dbg !1685
  %idxprom1448.i = zext i32 %shr1446.i to i64, !dbg !1685
  %arrayidx1449.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i, !dbg !1685
  %899 = load i32, i32* %arrayidx1449.i, align 4, !dbg !1685
  %xor1450.i = xor i32 %xor1445.i, %899, !dbg !1685
  %900 = load i32, i32* %t.i, align 4, !dbg !1685
  %shr1451.i = lshr i32 %900, 2, !dbg !1685
  %and1452.i = and i32 %shr1451.i, 63, !dbg !1685
  %idxprom1453.i = zext i32 %and1452.i to i64, !dbg !1685
  %arrayidx1454.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i, !dbg !1685
  %901 = load i32, i32* %arrayidx1454.i, align 4, !dbg !1685
  %xor1455.i = xor i32 %xor1450.i, %901, !dbg !1685
  %902 = load i32, i32* %t.i, align 4, !dbg !1685
  %shr1456.i = lshr i32 %902, 10, !dbg !1685
  %and1457.i = and i32 %shr1456.i, 63, !dbg !1685
  %idxprom1458.i = zext i32 %and1457.i to i64, !dbg !1685
  %arrayidx1459.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i, !dbg !1685
  %903 = load i32, i32* %arrayidx1459.i, align 4, !dbg !1685
  %xor1460.i = xor i32 %xor1455.i, %903, !dbg !1685
  %904 = load i32, i32* %t.i, align 4, !dbg !1685
  %shr1461.i = lshr i32 %904, 18, !dbg !1685
  %and1462.i = and i32 %shr1461.i, 63, !dbg !1685
  %idxprom1463.i = zext i32 %and1462.i to i64, !dbg !1685
  %arrayidx1464.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i, !dbg !1685
  %905 = load i32, i32* %arrayidx1464.i, align 4, !dbg !1685
  %xor1465.i = xor i32 %xor1460.i, %905, !dbg !1685
  %906 = load i32, i32* %t.i, align 4, !dbg !1685
  %shr1466.i = lshr i32 %906, 26, !dbg !1685
  %idxprom1468.i = zext i32 %shr1466.i to i64, !dbg !1685
  %arrayidx1469.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i, !dbg !1685
  %907 = load i32, i32* %arrayidx1469.i, align 4, !dbg !1685
  %xor1470.i = xor i32 %xor1465.i, %907, !dbg !1685
  %908 = load i32, i32* %l.i, align 4, !dbg !1685
  %xor1471.i = xor i32 %908, %xor1470.i, !dbg !1685
  store i32 %xor1471.i, i32* %l.i, align 4, !dbg !1685
  %909 = load i32, i32* %l.i, align 4, !dbg !1686
  %910 = load i32*, i32** %s.i, align 8, !dbg !1686
  %911 = load i32, i32* %910, align 4, !dbg !1686
  %xor1473.i = xor i32 %909, %911, !dbg !1686
  store i32 %xor1473.i, i32* %u.i, align 4, !dbg !1686
  %912 = load i32, i32* %l.i, align 4, !dbg !1686
  %913 = load i32*, i32** %s.i, align 8, !dbg !1686
  %arrayidx1474.i = getelementptr inbounds i32, i32* %913, i64 1, !dbg !1686
  %914 = load i32, i32* %arrayidx1474.i, align 4, !dbg !1686
  %xor1475.i = xor i32 %912, %914, !dbg !1686
  store i32 %xor1475.i, i32* %t.i, align 4, !dbg !1686
  %915 = load i32, i32* %t.i, align 4, !dbg !1603
  %916 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %915) #5, !dbg !1603, !srcloc !282
  store i32 %916, i32* %ret1476.i, align 4, !dbg !1603
  %917 = load i32, i32* %ret1476.i, align 4, !dbg !1603
  store i32 %917, i32* %tmp1477.i, align 4, !dbg !1603
  %918 = load i32, i32* %tmp1477.i, align 4, !dbg !1603
  store i32 %918, i32* %t.i, align 4, !dbg !1686
  %919 = load i32, i32* %u.i, align 4, !dbg !1686
  %shr1478.i = lshr i32 %919, 2, !dbg !1686
  %and1479.i = and i32 %shr1478.i, 63, !dbg !1686
  %idxprom1480.i = zext i32 %and1479.i to i64, !dbg !1686
  %arrayidx1481.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i, !dbg !1686
  %920 = load i32, i32* %arrayidx1481.i, align 4, !dbg !1686
  %921 = load i32, i32* %u.i, align 4, !dbg !1686
  %shr1482.i = lshr i32 %921, 10, !dbg !1686
  %and1483.i = and i32 %shr1482.i, 63, !dbg !1686
  %idxprom1484.i = zext i32 %and1483.i to i64, !dbg !1686
  %arrayidx1485.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i, !dbg !1686
  %922 = load i32, i32* %arrayidx1485.i, align 4, !dbg !1686
  %xor1486.i = xor i32 %920, %922, !dbg !1686
  %923 = load i32, i32* %u.i, align 4, !dbg !1686
  %shr1487.i = lshr i32 %923, 18, !dbg !1686
  %and1488.i = and i32 %shr1487.i, 63, !dbg !1686
  %idxprom1489.i = zext i32 %and1488.i to i64, !dbg !1686
  %arrayidx1490.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i, !dbg !1686
  %924 = load i32, i32* %arrayidx1490.i, align 4, !dbg !1686
  %xor1491.i = xor i32 %xor1486.i, %924, !dbg !1686
  %925 = load i32, i32* %u.i, align 4, !dbg !1686
  %shr1492.i = lshr i32 %925, 26, !dbg !1686
  %idxprom1494.i = zext i32 %shr1492.i to i64, !dbg !1686
  %arrayidx1495.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i, !dbg !1686
  %926 = load i32, i32* %arrayidx1495.i, align 4, !dbg !1686
  %xor1496.i = xor i32 %xor1491.i, %926, !dbg !1686
  %927 = load i32, i32* %t.i, align 4, !dbg !1686
  %shr1497.i = lshr i32 %927, 2, !dbg !1686
  %and1498.i = and i32 %shr1497.i, 63, !dbg !1686
  %idxprom1499.i = zext i32 %and1498.i to i64, !dbg !1686
  %arrayidx1500.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i, !dbg !1686
  %928 = load i32, i32* %arrayidx1500.i, align 4, !dbg !1686
  %xor1501.i = xor i32 %xor1496.i, %928, !dbg !1686
  %929 = load i32, i32* %t.i, align 4, !dbg !1686
  %shr1502.i = lshr i32 %929, 10, !dbg !1686
  %and1503.i = and i32 %shr1502.i, 63, !dbg !1686
  %idxprom1504.i = zext i32 %and1503.i to i64, !dbg !1686
  %arrayidx1505.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i, !dbg !1686
  %930 = load i32, i32* %arrayidx1505.i, align 4, !dbg !1686
  %xor1506.i = xor i32 %xor1501.i, %930, !dbg !1686
  %931 = load i32, i32* %t.i, align 4, !dbg !1686
  %shr1507.i = lshr i32 %931, 18, !dbg !1686
  %and1508.i = and i32 %shr1507.i, 63, !dbg !1686
  %idxprom1509.i = zext i32 %and1508.i to i64, !dbg !1686
  %arrayidx1510.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i, !dbg !1686
  %932 = load i32, i32* %arrayidx1510.i, align 4, !dbg !1686
  %xor1511.i = xor i32 %xor1506.i, %932, !dbg !1686
  %933 = load i32, i32* %t.i, align 4, !dbg !1686
  %shr1512.i = lshr i32 %933, 26, !dbg !1686
  %idxprom1514.i = zext i32 %shr1512.i to i64, !dbg !1686
  %arrayidx1515.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i, !dbg !1686
  %934 = load i32, i32* %arrayidx1515.i, align 4, !dbg !1686
  %xor1516.i = xor i32 %xor1511.i, %934, !dbg !1686
  %935 = load i32, i32* %r.i, align 4, !dbg !1686
  %xor1517.i = xor i32 %935, %xor1516.i, !dbg !1686
  store i32 %xor1517.i, i32* %r.i, align 4, !dbg !1686
  br label %DES_encrypt1.exit

DES_encrypt1.exit:                                ; preds = %if.then.i, %if.else.i
  %936 = load i32, i32* %l.i, align 4, !dbg !1604
  %937 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %936) #5, !dbg !1604, !srcloc !286
  store i32 %937, i32* %ret1518.i, align 4, !dbg !1604
  %938 = load i32, i32* %ret1518.i, align 4, !dbg !1604
  store i32 %938, i32* %tmp1519.i, align 4, !dbg !1604
  %939 = load i32, i32* %tmp1519.i, align 4, !dbg !1604
  %conv1520.i = zext i32 %939 to i64, !dbg !1687
  %and1521.i = and i64 %conv1520.i, 4294967295, !dbg !1688
  %conv1522.i = trunc i64 %and1521.i to i32, !dbg !1687
  store i32 %conv1522.i, i32* %l.i, align 4, !dbg !1689
  %940 = load i32, i32* %r.i, align 4, !dbg !1605
  %941 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %940) #5, !dbg !1605, !srcloc !293
  store i32 %941, i32* %ret1523.i, align 4, !dbg !1605
  %942 = load i32, i32* %ret1523.i, align 4, !dbg !1605
  store i32 %942, i32* %tmp1524.i, align 4, !dbg !1605
  %943 = load i32, i32* %tmp1524.i, align 4, !dbg !1605
  %conv1525.i = zext i32 %943 to i64, !dbg !1690
  %and1526.i = and i64 %conv1525.i, 4294967295, !dbg !1691
  %conv1527.i = trunc i64 %and1526.i to i32, !dbg !1690
  store i32 %conv1527.i, i32* %r.i, align 4, !dbg !1692
  %944 = load i32, i32* %r.i, align 4, !dbg !1606
  %shr1529.i = lshr i32 %944, 1, !dbg !1606
  %945 = load i32, i32* %l.i, align 4, !dbg !1606
  %xor1530.i = xor i32 %shr1529.i, %945, !dbg !1606
  %conv1531.i = zext i32 %xor1530.i to i64, !dbg !1606
  %and1532.i = and i64 %conv1531.i, 1431655765, !dbg !1606
  %conv1533.i = trunc i64 %and1532.i to i32, !dbg !1606
  store i32 %conv1533.i, i32* %tt1528.i, align 4, !dbg !1606
  %946 = load i32, i32* %tt1528.i, align 4, !dbg !1606
  %947 = load i32, i32* %l.i, align 4, !dbg !1606
  %xor1534.i = xor i32 %947, %946, !dbg !1606
  store i32 %xor1534.i, i32* %l.i, align 4, !dbg !1606
  %948 = load i32, i32* %tt1528.i, align 4, !dbg !1606
  %shl1535.i = shl i32 %948, 1, !dbg !1606
  %949 = load i32, i32* %r.i, align 4, !dbg !1606
  %xor1536.i = xor i32 %949, %shl1535.i, !dbg !1606
  store i32 %xor1536.i, i32* %r.i, align 4, !dbg !1606
  %950 = load i32, i32* %l.i, align 4, !dbg !1606
  %shr1537.i = lshr i32 %950, 8, !dbg !1606
  %951 = load i32, i32* %r.i, align 4, !dbg !1606
  %xor1538.i = xor i32 %shr1537.i, %951, !dbg !1606
  %conv1539.i = zext i32 %xor1538.i to i64, !dbg !1606
  %and1540.i = and i64 %conv1539.i, 16711935, !dbg !1606
  %conv1541.i = trunc i64 %and1540.i to i32, !dbg !1606
  store i32 %conv1541.i, i32* %tt1528.i, align 4, !dbg !1606
  %952 = load i32, i32* %tt1528.i, align 4, !dbg !1606
  %953 = load i32, i32* %r.i, align 4, !dbg !1606
  %xor1542.i = xor i32 %953, %952, !dbg !1606
  store i32 %xor1542.i, i32* %r.i, align 4, !dbg !1606
  %954 = load i32, i32* %tt1528.i, align 4, !dbg !1606
  %shl1543.i = shl i32 %954, 8, !dbg !1606
  %955 = load i32, i32* %l.i, align 4, !dbg !1606
  %xor1544.i = xor i32 %955, %shl1543.i, !dbg !1606
  store i32 %xor1544.i, i32* %l.i, align 4, !dbg !1606
  %956 = load i32, i32* %r.i, align 4, !dbg !1606
  %shr1545.i = lshr i32 %956, 2, !dbg !1606
  %957 = load i32, i32* %l.i, align 4, !dbg !1606
  %xor1546.i = xor i32 %shr1545.i, %957, !dbg !1606
  %conv1547.i = zext i32 %xor1546.i to i64, !dbg !1606
  %and1548.i = and i64 %conv1547.i, 858993459, !dbg !1606
  %conv1549.i = trunc i64 %and1548.i to i32, !dbg !1606
  store i32 %conv1549.i, i32* %tt1528.i, align 4, !dbg !1606
  %958 = load i32, i32* %tt1528.i, align 4, !dbg !1606
  %959 = load i32, i32* %l.i, align 4, !dbg !1606
  %xor1550.i = xor i32 %959, %958, !dbg !1606
  store i32 %xor1550.i, i32* %l.i, align 4, !dbg !1606
  %960 = load i32, i32* %tt1528.i, align 4, !dbg !1606
  %shl1551.i = shl i32 %960, 2, !dbg !1606
  %961 = load i32, i32* %r.i, align 4, !dbg !1606
  %xor1552.i = xor i32 %961, %shl1551.i, !dbg !1606
  store i32 %xor1552.i, i32* %r.i, align 4, !dbg !1606
  %962 = load i32, i32* %l.i, align 4, !dbg !1606
  %shr1553.i = lshr i32 %962, 16, !dbg !1606
  %963 = load i32, i32* %r.i, align 4, !dbg !1606
  %xor1554.i = xor i32 %shr1553.i, %963, !dbg !1606
  %conv1555.i = zext i32 %xor1554.i to i64, !dbg !1606
  %and1556.i = and i64 %conv1555.i, 65535, !dbg !1606
  %conv1557.i = trunc i64 %and1556.i to i32, !dbg !1606
  store i32 %conv1557.i, i32* %tt1528.i, align 4, !dbg !1606
  %964 = load i32, i32* %tt1528.i, align 4, !dbg !1606
  %965 = load i32, i32* %r.i, align 4, !dbg !1606
  %xor1558.i = xor i32 %965, %964, !dbg !1606
  store i32 %xor1558.i, i32* %r.i, align 4, !dbg !1606
  %966 = load i32, i32* %tt1528.i, align 4, !dbg !1606
  %shl1559.i = shl i32 %966, 16, !dbg !1606
  %967 = load i32, i32* %l.i, align 4, !dbg !1606
  %xor1560.i = xor i32 %967, %shl1559.i, !dbg !1606
  store i32 %xor1560.i, i32* %l.i, align 4, !dbg !1606
  %968 = load i32, i32* %r.i, align 4, !dbg !1606
  %shr1561.i = lshr i32 %968, 4, !dbg !1606
  %969 = load i32, i32* %l.i, align 4, !dbg !1606
  %xor1562.i = xor i32 %shr1561.i, %969, !dbg !1606
  %conv1563.i = zext i32 %xor1562.i to i64, !dbg !1606
  %and1564.i = and i64 %conv1563.i, 252645135, !dbg !1606
  %conv1565.i = trunc i64 %and1564.i to i32, !dbg !1606
  store i32 %conv1565.i, i32* %tt1528.i, align 4, !dbg !1606
  %970 = load i32, i32* %tt1528.i, align 4, !dbg !1606
  %971 = load i32, i32* %l.i, align 4, !dbg !1606
  %xor1566.i = xor i32 %971, %970, !dbg !1606
  store i32 %xor1566.i, i32* %l.i, align 4, !dbg !1606
  %972 = load i32, i32* %tt1528.i, align 4, !dbg !1606
  %shl1567.i = shl i32 %972, 4, !dbg !1606
  %973 = load i32, i32* %r.i, align 4, !dbg !1606
  %xor1568.i = xor i32 %973, %shl1567.i, !dbg !1606
  store i32 %xor1568.i, i32* %r.i, align 4, !dbg !1606
  %974 = load i32, i32* %l.i, align 4, !dbg !1693
  %975 = load i32*, i32** %data.addr.i, align 8, !dbg !1694
  store i32 %974, i32* %975, align 4, !dbg !1695
  %976 = load i32, i32* %r.i, align 4, !dbg !1696
  %977 = load i32*, i32** %data.addr.i, align 8, !dbg !1697
  %arrayidx1570.i = getelementptr inbounds i32, i32* %977, i64 1, !dbg !1697
  store i32 %976, i32* %arrayidx1570.i, align 4, !dbg !1698
  store i32 0, i32* %u.i, align 4, !dbg !1699
  store i32 0, i32* %t.i, align 4, !dbg !1700
  store i32 0, i32* %r.i, align 4, !dbg !1701
  store i32 0, i32* %l.i, align 4, !dbg !1702
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0, !dbg !1703
  %978 = load i32, i32* %arrayidx28, align 4, !dbg !1703
  store i32 %978, i32* %l, align 4, !dbg !1704
  %979 = load i32, i32* %l, align 4, !dbg !1705
  %and = and i32 %979, 255, !dbg !1705
  %conv29 = trunc i32 %and to i8, !dbg !1705
  %980 = load i8*, i8** %out, align 8, !dbg !1705
  %incdec.ptr30 = getelementptr inbounds i8, i8* %980, i32 1, !dbg !1705
  store i8* %incdec.ptr30, i8** %out, align 8, !dbg !1705
  store i8 %conv29, i8* %980, align 1, !dbg !1705
  %981 = load i32, i32* %l, align 4, !dbg !1705
  %shr = lshr i32 %981, 8, !dbg !1705
  %and31 = and i32 %shr, 255, !dbg !1705
  %conv32 = trunc i32 %and31 to i8, !dbg !1705
  %982 = load i8*, i8** %out, align 8, !dbg !1705
  %incdec.ptr33 = getelementptr inbounds i8, i8* %982, i32 1, !dbg !1705
  store i8* %incdec.ptr33, i8** %out, align 8, !dbg !1705
  store i8 %conv32, i8* %982, align 1, !dbg !1705
  %983 = load i32, i32* %l, align 4, !dbg !1705
  %shr34 = lshr i32 %983, 16, !dbg !1705
  %and35 = and i32 %shr34, 255, !dbg !1705
  %conv36 = trunc i32 %and35 to i8, !dbg !1705
  %984 = load i8*, i8** %out, align 8, !dbg !1705
  %incdec.ptr37 = getelementptr inbounds i8, i8* %984, i32 1, !dbg !1705
  store i8* %incdec.ptr37, i8** %out, align 8, !dbg !1705
  store i8 %conv36, i8* %984, align 1, !dbg !1705
  %985 = load i32, i32* %l, align 4, !dbg !1705
  %shr38 = lshr i32 %985, 24, !dbg !1705
  %and39 = and i32 %shr38, 255, !dbg !1705
  %conv40 = trunc i32 %and39 to i8, !dbg !1705
  %986 = load i8*, i8** %out, align 8, !dbg !1705
  %incdec.ptr41 = getelementptr inbounds i8, i8* %986, i32 1, !dbg !1705
  store i8* %incdec.ptr41, i8** %out, align 8, !dbg !1705
  store i8 %conv40, i8* %986, align 1, !dbg !1705
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 1, !dbg !1706
  %987 = load i32, i32* %arrayidx42, align 4, !dbg !1706
  store i32 %987, i32* %l, align 4, !dbg !1707
  %988 = load i32, i32* %l, align 4, !dbg !1708
  %and43 = and i32 %988, 255, !dbg !1708
  %conv44 = trunc i32 %and43 to i8, !dbg !1708
  %989 = load i8*, i8** %out, align 8, !dbg !1708
  %incdec.ptr45 = getelementptr inbounds i8, i8* %989, i32 1, !dbg !1708
  store i8* %incdec.ptr45, i8** %out, align 8, !dbg !1708
  store i8 %conv44, i8* %989, align 1, !dbg !1708
  %990 = load i32, i32* %l, align 4, !dbg !1708
  %shr46 = lshr i32 %990, 8, !dbg !1708
  %and47 = and i32 %shr46, 255, !dbg !1708
  %conv48 = trunc i32 %and47 to i8, !dbg !1708
  %991 = load i8*, i8** %out, align 8, !dbg !1708
  %incdec.ptr49 = getelementptr inbounds i8, i8* %991, i32 1, !dbg !1708
  store i8* %incdec.ptr49, i8** %out, align 8, !dbg !1708
  store i8 %conv48, i8* %991, align 1, !dbg !1708
  %992 = load i32, i32* %l, align 4, !dbg !1708
  %shr50 = lshr i32 %992, 16, !dbg !1708
  %and51 = and i32 %shr50, 255, !dbg !1708
  %conv52 = trunc i32 %and51 to i8, !dbg !1708
  %993 = load i8*, i8** %out, align 8, !dbg !1708
  %incdec.ptr53 = getelementptr inbounds i8, i8* %993, i32 1, !dbg !1708
  store i8* %incdec.ptr53, i8** %out, align 8, !dbg !1708
  store i8 %conv52, i8* %993, align 1, !dbg !1708
  %994 = load i32, i32* %l, align 4, !dbg !1708
  %shr54 = lshr i32 %994, 24, !dbg !1708
  %and55 = and i32 %shr54, 255, !dbg !1708
  %conv56 = trunc i32 %and55 to i8, !dbg !1708
  %995 = load i8*, i8** %out, align 8, !dbg !1708
  %incdec.ptr57 = getelementptr inbounds i8, i8* %995, i32 1, !dbg !1708
  store i8* %incdec.ptr57, i8** %out, align 8, !dbg !1708
  store i8 %conv56, i8* %995, align 1, !dbg !1708
  %arrayidx58 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 1, !dbg !1709
  store i32 0, i32* %arrayidx58, align 4, !dbg !1710
  %arrayidx59 = getelementptr inbounds [2 x i32], [2 x i32]* %ll, i64 0, i64 0, !dbg !1711
  store i32 0, i32* %arrayidx59, align 4, !dbg !1712
  store i32 0, i32* %l, align 4, !dbg !1713
  ret void, !dbg !1714
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #2 !dbg !1715 {
entry:
  %InstCounter = alloca i32
  store i32 0, i32* %InstCounter
  %data.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr.i.i, metadata !44, metadata !DIExpression()), !dbg !1718
  %ks.addr.i.i = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i.i, metadata !46, metadata !DIExpression()), !dbg !1721
  %enc.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i.i, metadata !48, metadata !DIExpression()), !dbg !1722
  %l.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i.i, metadata !50, metadata !DIExpression()), !dbg !1723
  %r.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i.i, metadata !52, metadata !DIExpression()), !dbg !1724
  %t.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t.i.i, metadata !54, metadata !DIExpression()), !dbg !1725
  %u.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.i.i, metadata !56, metadata !DIExpression()), !dbg !1726
  %s.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %s.i.i, metadata !58, metadata !DIExpression()), !dbg !1727
  %tt.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt.i.i, metadata !64, metadata !DIExpression()), !dbg !1728
  %ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i.i, metadata !67, metadata !DIExpression()), !dbg !1729
  %tmp.i.i = alloca i32, align 4
  %ret40.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret40.i.i, metadata !74, metadata !DIExpression()), !dbg !1730
  %tmp41.i.i = alloca i32, align 4
  %ret51.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret51.i.i, metadata !91, metadata !DIExpression()), !dbg !1731
  %tmp52.i.i = alloca i32, align 4
  %ret96.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret96.i.i, metadata !97, metadata !DIExpression()), !dbg !1732
  %tmp97.i.i = alloca i32, align 4
  %ret142.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret142.i.i, metadata !103, metadata !DIExpression()), !dbg !1733
  %tmp143.i.i = alloca i32, align 4
  %ret188.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret188.i.i, metadata !109, metadata !DIExpression()), !dbg !1734
  %tmp189.i.i = alloca i32, align 4
  %ret234.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret234.i.i, metadata !115, metadata !DIExpression()), !dbg !1735
  %tmp235.i.i = alloca i32, align 4
  %ret280.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret280.i.i, metadata !121, metadata !DIExpression()), !dbg !1736
  %tmp281.i.i = alloca i32, align 4
  %ret326.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret326.i.i, metadata !127, metadata !DIExpression()), !dbg !1737
  %tmp327.i.i = alloca i32, align 4
  %ret372.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret372.i.i, metadata !133, metadata !DIExpression()), !dbg !1738
  %tmp373.i.i = alloca i32, align 4
  %ret418.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret418.i.i, metadata !139, metadata !DIExpression()), !dbg !1739
  %tmp419.i.i = alloca i32, align 4
  %ret464.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret464.i.i, metadata !145, metadata !DIExpression()), !dbg !1740
  %tmp465.i.i = alloca i32, align 4
  %ret510.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret510.i.i, metadata !151, metadata !DIExpression()), !dbg !1741
  %tmp511.i.i = alloca i32, align 4
  %ret556.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret556.i.i, metadata !157, metadata !DIExpression()), !dbg !1742
  %tmp557.i.i = alloca i32, align 4
  %ret602.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret602.i.i, metadata !163, metadata !DIExpression()), !dbg !1743
  %tmp603.i.i = alloca i32, align 4
  %ret648.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret648.i.i, metadata !169, metadata !DIExpression()), !dbg !1744
  %tmp649.i.i = alloca i32, align 4
  %ret694.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret694.i.i, metadata !175, metadata !DIExpression()), !dbg !1745
  %tmp695.i.i = alloca i32, align 4
  %ret740.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret740.i.i, metadata !181, metadata !DIExpression()), !dbg !1746
  %tmp741.i.i = alloca i32, align 4
  %ret786.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret786.i.i, metadata !189, metadata !DIExpression()), !dbg !1747
  %tmp787.i.i = alloca i32, align 4
  %ret832.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret832.i.i, metadata !195, metadata !DIExpression()), !dbg !1748
  %tmp833.i.i = alloca i32, align 4
  %ret878.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret878.i.i, metadata !201, metadata !DIExpression()), !dbg !1749
  %tmp879.i.i = alloca i32, align 4
  %ret924.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret924.i.i, metadata !207, metadata !DIExpression()), !dbg !1750
  %tmp925.i.i = alloca i32, align 4
  %ret970.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret970.i.i, metadata !213, metadata !DIExpression()), !dbg !1751
  %tmp971.i.i = alloca i32, align 4
  %ret1016.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1016.i.i, metadata !219, metadata !DIExpression()), !dbg !1752
  %tmp1017.i.i = alloca i32, align 4
  %ret1062.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1062.i.i, metadata !225, metadata !DIExpression()), !dbg !1753
  %tmp1063.i.i = alloca i32, align 4
  %ret1108.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1108.i.i, metadata !231, metadata !DIExpression()), !dbg !1754
  %tmp1109.i.i = alloca i32, align 4
  %ret1154.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1154.i.i, metadata !237, metadata !DIExpression()), !dbg !1755
  %tmp1155.i.i = alloca i32, align 4
  %ret1200.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1200.i.i, metadata !243, metadata !DIExpression()), !dbg !1756
  %tmp1201.i.i = alloca i32, align 4
  %ret1246.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1246.i.i, metadata !249, metadata !DIExpression()), !dbg !1757
  %tmp1247.i.i = alloca i32, align 4
  %ret1292.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1292.i.i, metadata !255, metadata !DIExpression()), !dbg !1758
  %tmp1293.i.i = alloca i32, align 4
  %ret1338.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1338.i.i, metadata !261, metadata !DIExpression()), !dbg !1759
  %tmp1339.i.i = alloca i32, align 4
  %ret1384.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1384.i.i, metadata !267, metadata !DIExpression()), !dbg !1760
  %tmp1385.i.i = alloca i32, align 4
  %ret1430.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1430.i.i, metadata !273, metadata !DIExpression()), !dbg !1761
  %tmp1431.i.i = alloca i32, align 4
  %ret1476.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1476.i.i, metadata !279, metadata !DIExpression()), !dbg !1762
  %tmp1477.i.i = alloca i32, align 4
  %ret1518.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1518.i.i, metadata !283, metadata !DIExpression()), !dbg !1763
  %tmp1519.i.i = alloca i32, align 4
  %ret1523.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret1523.i.i, metadata !290, metadata !DIExpression()), !dbg !1764
  %tmp1524.i.i = alloca i32, align 4
  %tt1528.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tt1528.i.i, metadata !297, metadata !DIExpression()), !dbg !1765
  %input.addr.i = alloca [8 x i8]*, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %input.addr.i, metadata !1607, metadata !DIExpression()), !dbg !1766
  %output.addr.i = alloca [8 x i8]*, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %output.addr.i, metadata !1609, metadata !DIExpression()), !dbg !1767
  %ks.addr.i = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks.addr.i, metadata !1611, metadata !DIExpression()), !dbg !1768
  %enc.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %enc.addr.i, metadata !1613, metadata !DIExpression()), !dbg !1769
  %l.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %l.i, metadata !1615, metadata !DIExpression()), !dbg !1770
  %ll.i = alloca [2 x i32], align 4
  call void @llvm.dbg.declare(metadata [2 x i32]* %ll.i, metadata !1617, metadata !DIExpression()), !dbg !1771
  %in.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %in.i, metadata !1619, metadata !DIExpression()), !dbg !1772
  %out.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %out.i, metadata !1623, metadata !DIExpression()), !dbg !1773
  %buf = alloca [8 x i8], align 1
  %key = alloca [8 x i8], align 1
  %output = alloca [8 x i8], align 1
  %ks = alloca %struct.DES_ks*, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !1774, metadata !DIExpression()), !dbg !1775
  %0 = bitcast [8 x i8]* %buf to i8*, !dbg !1775
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @__const.main.buf, i32 0, i32 0), i64 8, i1 false), !dbg !1775
  call void @llvm.dbg.declare(metadata [8 x i8]* %key, metadata !1776, metadata !DIExpression()), !dbg !1777
  %1 = bitcast [8 x i8]* %key to i8*, !dbg !1777
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @__const.main.key, i32 0, i32 0), i64 8, i1 false), !dbg !1777
  call void @llvm.dbg.declare(metadata [8 x i8]* %output, metadata !1778, metadata !DIExpression()), !dbg !1779
  call void @llvm.dbg.declare(metadata %struct.DES_ks** %ks, metadata !1780, metadata !DIExpression()), !dbg !1781
  %2 = ptrtoint %struct.DES_ks** %ks to i64, !dbg !1782
  call void @printLoadAddr(i64 %2, i32 159, i32 327, i32 25), !dbg !1782
  %3 = load %struct.DES_ks*, %struct.DES_ks** %ks, align 8, !dbg !1782
  call void @printDDep(i32 156, i32 159), !dbg !1782
  %call = call i32 @DES_key_sched([8 x i8]* %key, %struct.DES_ks* %3), !dbg !1783
  %4 = ptrtoint %struct.DES_ks** %ks to i64, !dbg !1784
  call void @printLoadAddr(i64 %4, i32 162, i32 328, i32 36), !dbg !1784
  %5 = load %struct.DES_ks*, %struct.DES_ks** %ks, align 8, !dbg !1784
  call void @printDDep(i32 161, i32 162), !dbg !1784
  %6 = ptrtoint [8 x i8]** %input.addr.i to i64
  call void @printStoreAddr(i64 %6, i32 164, i32 0, i32 0)
  store [8 x i8]* %buf, [8 x i8]** %input.addr.i, align 8
  call void @printDDep(i32 161, i32 164)
  call void @printDDep(i32 161, i32 164)
  %7 = ptrtoint [8 x i8]** %output.addr.i to i64
  call void @printStoreAddr(i64 %7, i32 167, i32 0, i32 0)
  store [8 x i8]* %output, [8 x i8]** %output.addr.i, align 8
  call void @printDDep(i32 164, i32 167)
  call void @printDDep(i32 161, i32 167)
  %8 = ptrtoint %struct.DES_ks** %ks.addr.i to i64
  call void @printStoreAddr(i64 %8, i32 170, i32 0, i32 0)
  store %struct.DES_ks* %5, %struct.DES_ks** %ks.addr.i, align 8
  call void @printDDep(i32 167, i32 170)
  call void @printDDep(i32 161, i32 170)
  %9 = ptrtoint i32* %enc.addr.i to i64
  call void @printStoreAddr(i64 %9, i32 173, i32 0, i32 0)
  store i32 1, i32* %enc.addr.i, align 4
  call void @printDDep(i32 170, i32 173)
  call void @printDDep(i32 161, i32 173)
  %10 = ptrtoint [8 x i8]** %input.addr.i to i64, !dbg !1785
  call void @printLoadAddr(i64 %10, i32 176, i32 306, i32 34), !dbg !1785
  %11 = load [8 x i8]*, [8 x i8]** %input.addr.i, align 8, !dbg !1785
  call void @printDDep(i32 164, i32 176), !dbg !1785
  call void @printDDep(i32 164, i32 176), !dbg !1785
  %arrayidx.i = getelementptr inbounds [8 x i8], [8 x i8]* %11, i64 0, i64 0, !dbg !1786
  %12 = ptrtoint i8** %in.i to i64, !dbg !1772
  call void @printStoreAddr(i64 %12, i32 180, i32 306, i32 26), !dbg !1772
  store i8* %arrayidx.i, i8** %in.i, align 8, !dbg !1772
  call void @printDDep(i32 173, i32 180), !dbg !1772
  call void @printDDep(i32 161, i32 180), !dbg !1772
  %13 = ptrtoint [8 x i8]** %output.addr.i to i64, !dbg !1787
  call void @printLoadAddr(i64 %13, i32 183, i32 307, i32 29), !dbg !1787
  %14 = load [8 x i8]*, [8 x i8]** %output.addr.i, align 8, !dbg !1787
  call void @printDDep(i32 167, i32 183), !dbg !1787
  call void @printDDep(i32 167, i32 183), !dbg !1787
  %arrayidx1.i = getelementptr inbounds [8 x i8], [8 x i8]* %14, i64 0, i64 0, !dbg !1788
  %15 = ptrtoint i8** %out.i to i64, !dbg !1773
  call void @printStoreAddr(i64 %15, i32 187, i32 307, i32 20), !dbg !1773
  store i8* %arrayidx1.i, i8** %out.i, align 8, !dbg !1773
  call void @printDDep(i32 180, i32 187), !dbg !1773
  call void @printDDep(i32 161, i32 187), !dbg !1773
  %16 = ptrtoint i8** %in.i to i64, !dbg !1789
  call void @printLoadAddr(i64 %16, i32 190, i32 309, i32 5), !dbg !1789
  %17 = load i8*, i8** %in.i, align 8, !dbg !1789
  call void @printDDep(i32 180, i32 190), !dbg !1789
  call void @printDDep(i32 180, i32 190), !dbg !1789
  %incdec.ptr.i = getelementptr inbounds i8, i8* %17, i32 1, !dbg !1789
  %18 = ptrtoint i8** %in.i to i64, !dbg !1789
  call void @printStoreAddr(i64 %18, i32 194, i32 309, i32 5), !dbg !1789
  store i8* %incdec.ptr.i, i8** %in.i, align 8, !dbg !1789
  call void @printDDep(i32 187, i32 194), !dbg !1789
  call void @printDDep(i32 190, i32 194), !dbg !1789
  %19 = ptrtoint i8* %17 to i64, !dbg !1789
  call void @printLoadAddr(i64 %19, i32 197, i32 309, i32 5), !dbg !1789
  %20 = load i8, i8* %17, align 1, !dbg !1789
  call void @printDDep(i32 161, i32 197), !dbg !1789
  call void @printDDep(i32 161, i32 197), !dbg !1789
  %conv.i = zext i8 %20 to i32, !dbg !1789
  %21 = ptrtoint i32* %l.i to i64, !dbg !1789
  call void @printStoreAddr(i64 %21, i32 201, i32 309, i32 5), !dbg !1789
  store i32 %conv.i, i32* %l.i, align 4, !dbg !1789
  call void @printDDep(i32 194, i32 201), !dbg !1789
  call void @printDDep(i32 197, i32 201), !dbg !1789
  %22 = ptrtoint i8** %in.i to i64, !dbg !1789
  call void @printLoadAddr(i64 %22, i32 204, i32 309, i32 5), !dbg !1789
  %23 = load i8*, i8** %in.i, align 8, !dbg !1789
  call void @printDDep(i32 194, i32 204), !dbg !1789
  call void @printDDep(i32 194, i32 204), !dbg !1789
  %incdec.ptr2.i = getelementptr inbounds i8, i8* %23, i32 1, !dbg !1789
  %24 = ptrtoint i8** %in.i to i64, !dbg !1789
  call void @printStoreAddr(i64 %24, i32 208, i32 309, i32 5), !dbg !1789
  store i8* %incdec.ptr2.i, i8** %in.i, align 8, !dbg !1789
  call void @printDDep(i32 201, i32 208), !dbg !1789
  call void @printDDep(i32 204, i32 208), !dbg !1789
  %25 = ptrtoint i8* %23 to i64, !dbg !1789
  call void @printLoadAddr(i64 %25, i32 211, i32 309, i32 5), !dbg !1789
  %26 = load i8, i8* %23, align 1, !dbg !1789
  call void @printDDep(i32 201, i32 211), !dbg !1789
  call void @printDDep(i32 201, i32 211), !dbg !1789
  %conv3.i = zext i8 %26 to i32, !dbg !1789
  %shl.i = shl i32 %conv3.i, 8, !dbg !1789
  %27 = ptrtoint i32* %l.i to i64, !dbg !1789
  call void @printLoadAddr(i64 %27, i32 216, i32 309, i32 5), !dbg !1789
  %28 = load i32, i32* %l.i, align 4, !dbg !1789
  call void @printDDep(i32 201, i32 216), !dbg !1789
  call void @printDDep(i32 211, i32 216), !dbg !1789
  %or.i = or i32 %28, %shl.i, !dbg !1789
  %29 = ptrtoint i32* %l.i to i64, !dbg !1789
  call void @printStoreAddr(i64 %29, i32 220, i32 309, i32 5), !dbg !1789
  store i32 %or.i, i32* %l.i, align 4, !dbg !1789
  call void @printDDep(i32 208, i32 220), !dbg !1789
  call void @printDDep(i32 216, i32 220), !dbg !1789
  %30 = ptrtoint i8** %in.i to i64, !dbg !1789
  call void @printLoadAddr(i64 %30, i32 223, i32 309, i32 5), !dbg !1789
  %31 = load i8*, i8** %in.i, align 8, !dbg !1789
  call void @printDDep(i32 208, i32 223), !dbg !1789
  call void @printDDep(i32 208, i32 223), !dbg !1789
  %incdec.ptr4.i = getelementptr inbounds i8, i8* %31, i32 1, !dbg !1789
  %32 = ptrtoint i8** %in.i to i64, !dbg !1789
  call void @printStoreAddr(i64 %32, i32 227, i32 309, i32 5), !dbg !1789
  store i8* %incdec.ptr4.i, i8** %in.i, align 8, !dbg !1789
  call void @printDDep(i32 220, i32 227), !dbg !1789
  call void @printDDep(i32 223, i32 227), !dbg !1789
  %33 = ptrtoint i8* %31 to i64, !dbg !1789
  call void @printLoadAddr(i64 %33, i32 230, i32 309, i32 5), !dbg !1789
  %34 = load i8, i8* %31, align 1, !dbg !1789
  call void @printDDep(i32 220, i32 230), !dbg !1789
  call void @printDDep(i32 220, i32 230), !dbg !1789
  %conv5.i = zext i8 %34 to i32, !dbg !1789
  %shl6.i = shl i32 %conv5.i, 16, !dbg !1789
  %35 = ptrtoint i32* %l.i to i64, !dbg !1789
  call void @printLoadAddr(i64 %35, i32 235, i32 309, i32 5), !dbg !1789
  %36 = load i32, i32* %l.i, align 4, !dbg !1789
  call void @printDDep(i32 220, i32 235), !dbg !1789
  call void @printDDep(i32 230, i32 235), !dbg !1789
  %or7.i = or i32 %36, %shl6.i, !dbg !1789
  %37 = ptrtoint i32* %l.i to i64, !dbg !1789
  call void @printStoreAddr(i64 %37, i32 239, i32 309, i32 5), !dbg !1789
  store i32 %or7.i, i32* %l.i, align 4, !dbg !1789
  call void @printDDep(i32 227, i32 239), !dbg !1789
  call void @printDDep(i32 235, i32 239), !dbg !1789
  %38 = ptrtoint i8** %in.i to i64, !dbg !1789
  call void @printLoadAddr(i64 %38, i32 242, i32 309, i32 5), !dbg !1789
  %39 = load i8*, i8** %in.i, align 8, !dbg !1789
  call void @printDDep(i32 227, i32 242), !dbg !1789
  call void @printDDep(i32 227, i32 242), !dbg !1789
  %incdec.ptr8.i = getelementptr inbounds i8, i8* %39, i32 1, !dbg !1789
  %40 = ptrtoint i8** %in.i to i64, !dbg !1789
  call void @printStoreAddr(i64 %40, i32 246, i32 309, i32 5), !dbg !1789
  store i8* %incdec.ptr8.i, i8** %in.i, align 8, !dbg !1789
  call void @printDDep(i32 239, i32 246), !dbg !1789
  call void @printDDep(i32 242, i32 246), !dbg !1789
  %41 = ptrtoint i8* %39 to i64, !dbg !1789
  call void @printLoadAddr(i64 %41, i32 249, i32 309, i32 5), !dbg !1789
  %42 = load i8, i8* %39, align 1, !dbg !1789
  call void @printDDep(i32 239, i32 249), !dbg !1789
  call void @printDDep(i32 239, i32 249), !dbg !1789
  %conv9.i = zext i8 %42 to i32, !dbg !1789
  %shl10.i = shl i32 %conv9.i, 24, !dbg !1789
  %43 = ptrtoint i32* %l.i to i64, !dbg !1789
  call void @printLoadAddr(i64 %43, i32 254, i32 309, i32 5), !dbg !1789
  %44 = load i32, i32* %l.i, align 4, !dbg !1789
  call void @printDDep(i32 239, i32 254), !dbg !1789
  call void @printDDep(i32 249, i32 254), !dbg !1789
  %or11.i = or i32 %44, %shl10.i, !dbg !1789
  %45 = ptrtoint i32* %l.i to i64, !dbg !1789
  call void @printStoreAddr(i64 %45, i32 258, i32 309, i32 5), !dbg !1789
  store i32 %or11.i, i32* %l.i, align 4, !dbg !1789
  call void @printDDep(i32 246, i32 258), !dbg !1789
  call void @printDDep(i32 254, i32 258), !dbg !1789
  %46 = ptrtoint i32* %l.i to i64, !dbg !1790
  call void @printLoadAddr(i64 %46, i32 261, i32 310, i32 13), !dbg !1790
  %47 = load i32, i32* %l.i, align 4, !dbg !1790
  call void @printDDep(i32 258, i32 261), !dbg !1790
  call void @printDDep(i32 258, i32 261), !dbg !1790
  %arrayidx12.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0, !dbg !1791
  %48 = ptrtoint i32* %arrayidx12.i to i64, !dbg !1792
  call void @printStoreAddr(i64 %48, i32 265, i32 310, i32 11), !dbg !1792
  store i32 %47, i32* %arrayidx12.i, align 4, !dbg !1792
  call void @printDDep(i32 258, i32 265), !dbg !1792
  call void @printDDep(i32 249, i32 265), !dbg !1792
  %49 = ptrtoint i8** %in.i to i64, !dbg !1793
  call void @printLoadAddr(i64 %49, i32 268, i32 311, i32 5), !dbg !1793
  %50 = load i8*, i8** %in.i, align 8, !dbg !1793
  call void @printDDep(i32 246, i32 268), !dbg !1793
  call void @printDDep(i32 246, i32 268), !dbg !1793
  %incdec.ptr13.i = getelementptr inbounds i8, i8* %50, i32 1, !dbg !1793
  %51 = ptrtoint i8** %in.i to i64, !dbg !1793
  call void @printStoreAddr(i64 %51, i32 272, i32 311, i32 5), !dbg !1793
  store i8* %incdec.ptr13.i, i8** %in.i, align 8, !dbg !1793
  call void @printDDep(i32 265, i32 272), !dbg !1793
  call void @printDDep(i32 268, i32 272), !dbg !1793
  %52 = ptrtoint i8* %50 to i64, !dbg !1793
  call void @printLoadAddr(i64 %52, i32 275, i32 311, i32 5), !dbg !1793
  %53 = load i8, i8* %50, align 1, !dbg !1793
  call void @printDDep(i32 265, i32 275), !dbg !1793
  call void @printDDep(i32 265, i32 275), !dbg !1793
  %conv14.i = zext i8 %53 to i32, !dbg !1793
  %54 = ptrtoint i32* %l.i to i64, !dbg !1793
  call void @printStoreAddr(i64 %54, i32 279, i32 311, i32 5), !dbg !1793
  store i32 %conv14.i, i32* %l.i, align 4, !dbg !1793
  call void @printDDep(i32 272, i32 279), !dbg !1793
  call void @printDDep(i32 275, i32 279), !dbg !1793
  %55 = ptrtoint i8** %in.i to i64, !dbg !1793
  call void @printLoadAddr(i64 %55, i32 282, i32 311, i32 5), !dbg !1793
  %56 = load i8*, i8** %in.i, align 8, !dbg !1793
  call void @printDDep(i32 272, i32 282), !dbg !1793
  call void @printDDep(i32 272, i32 282), !dbg !1793
  %incdec.ptr15.i = getelementptr inbounds i8, i8* %56, i32 1, !dbg !1793
  %57 = ptrtoint i8** %in.i to i64, !dbg !1793
  call void @printStoreAddr(i64 %57, i32 286, i32 311, i32 5), !dbg !1793
  store i8* %incdec.ptr15.i, i8** %in.i, align 8, !dbg !1793
  call void @printDDep(i32 279, i32 286), !dbg !1793
  call void @printDDep(i32 282, i32 286), !dbg !1793
  %58 = ptrtoint i8* %56 to i64, !dbg !1793
  call void @printLoadAddr(i64 %58, i32 289, i32 311, i32 5), !dbg !1793
  %59 = load i8, i8* %56, align 1, !dbg !1793
  call void @printDDep(i32 279, i32 289), !dbg !1793
  call void @printDDep(i32 279, i32 289), !dbg !1793
  %conv16.i = zext i8 %59 to i32, !dbg !1793
  %shl17.i = shl i32 %conv16.i, 8, !dbg !1793
  %60 = ptrtoint i32* %l.i to i64, !dbg !1793
  call void @printLoadAddr(i64 %60, i32 294, i32 311, i32 5), !dbg !1793
  %61 = load i32, i32* %l.i, align 4, !dbg !1793
  call void @printDDep(i32 279, i32 294), !dbg !1793
  call void @printDDep(i32 289, i32 294), !dbg !1793
  %or18.i = or i32 %61, %shl17.i, !dbg !1793
  %62 = ptrtoint i32* %l.i to i64, !dbg !1793
  call void @printStoreAddr(i64 %62, i32 298, i32 311, i32 5), !dbg !1793
  store i32 %or18.i, i32* %l.i, align 4, !dbg !1793
  call void @printDDep(i32 286, i32 298), !dbg !1793
  call void @printDDep(i32 294, i32 298), !dbg !1793
  %63 = ptrtoint i8** %in.i to i64, !dbg !1793
  call void @printLoadAddr(i64 %63, i32 301, i32 311, i32 5), !dbg !1793
  %64 = load i8*, i8** %in.i, align 8, !dbg !1793
  call void @printDDep(i32 286, i32 301), !dbg !1793
  call void @printDDep(i32 286, i32 301), !dbg !1793
  %incdec.ptr19.i = getelementptr inbounds i8, i8* %64, i32 1, !dbg !1793
  %65 = ptrtoint i8** %in.i to i64, !dbg !1793
  call void @printStoreAddr(i64 %65, i32 305, i32 311, i32 5), !dbg !1793
  store i8* %incdec.ptr19.i, i8** %in.i, align 8, !dbg !1793
  call void @printDDep(i32 298, i32 305), !dbg !1793
  call void @printDDep(i32 301, i32 305), !dbg !1793
  %66 = ptrtoint i8* %64 to i64, !dbg !1793
  call void @printLoadAddr(i64 %66, i32 308, i32 311, i32 5), !dbg !1793
  %67 = load i8, i8* %64, align 1, !dbg !1793
  call void @printDDep(i32 298, i32 308), !dbg !1793
  call void @printDDep(i32 298, i32 308), !dbg !1793
  %conv20.i = zext i8 %67 to i32, !dbg !1793
  %shl21.i = shl i32 %conv20.i, 16, !dbg !1793
  %68 = ptrtoint i32* %l.i to i64, !dbg !1793
  call void @printLoadAddr(i64 %68, i32 313, i32 311, i32 5), !dbg !1793
  %69 = load i32, i32* %l.i, align 4, !dbg !1793
  call void @printDDep(i32 298, i32 313), !dbg !1793
  call void @printDDep(i32 308, i32 313), !dbg !1793
  %or22.i = or i32 %69, %shl21.i, !dbg !1793
  %70 = ptrtoint i32* %l.i to i64, !dbg !1793
  call void @printStoreAddr(i64 %70, i32 317, i32 311, i32 5), !dbg !1793
  store i32 %or22.i, i32* %l.i, align 4, !dbg !1793
  call void @printDDep(i32 305, i32 317), !dbg !1793
  call void @printDDep(i32 313, i32 317), !dbg !1793
  %71 = ptrtoint i8** %in.i to i64, !dbg !1793
  call void @printLoadAddr(i64 %71, i32 320, i32 311, i32 5), !dbg !1793
  %72 = load i8*, i8** %in.i, align 8, !dbg !1793
  call void @printDDep(i32 305, i32 320), !dbg !1793
  call void @printDDep(i32 305, i32 320), !dbg !1793
  %incdec.ptr23.i = getelementptr inbounds i8, i8* %72, i32 1, !dbg !1793
  %73 = ptrtoint i8** %in.i to i64, !dbg !1793
  call void @printStoreAddr(i64 %73, i32 324, i32 311, i32 5), !dbg !1793
  store i8* %incdec.ptr23.i, i8** %in.i, align 8, !dbg !1793
  call void @printDDep(i32 317, i32 324), !dbg !1793
  call void @printDDep(i32 320, i32 324), !dbg !1793
  %74 = ptrtoint i8* %72 to i64, !dbg !1793
  call void @printLoadAddr(i64 %74, i32 327, i32 311, i32 5), !dbg !1793
  %75 = load i8, i8* %72, align 1, !dbg !1793
  call void @printDDep(i32 317, i32 327), !dbg !1793
  call void @printDDep(i32 317, i32 327), !dbg !1793
  %conv24.i = zext i8 %75 to i32, !dbg !1793
  %shl25.i = shl i32 %conv24.i, 24, !dbg !1793
  %76 = ptrtoint i32* %l.i to i64, !dbg !1793
  call void @printLoadAddr(i64 %76, i32 332, i32 311, i32 5), !dbg !1793
  %77 = load i32, i32* %l.i, align 4, !dbg !1793
  call void @printDDep(i32 317, i32 332), !dbg !1793
  call void @printDDep(i32 327, i32 332), !dbg !1793
  %or26.i = or i32 %77, %shl25.i, !dbg !1793
  %78 = ptrtoint i32* %l.i to i64, !dbg !1793
  call void @printStoreAddr(i64 %78, i32 336, i32 311, i32 5), !dbg !1793
  store i32 %or26.i, i32* %l.i, align 4, !dbg !1793
  call void @printDDep(i32 324, i32 336), !dbg !1793
  call void @printDDep(i32 332, i32 336), !dbg !1793
  %79 = ptrtoint i32* %l.i to i64, !dbg !1794
  call void @printLoadAddr(i64 %79, i32 339, i32 312, i32 13), !dbg !1794
  %80 = load i32, i32* %l.i, align 4, !dbg !1794
  call void @printDDep(i32 336, i32 339), !dbg !1794
  call void @printDDep(i32 336, i32 339), !dbg !1794
  %arrayidx27.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 1, !dbg !1795
  %81 = ptrtoint i32* %arrayidx27.i to i64, !dbg !1796
  call void @printStoreAddr(i64 %81, i32 343, i32 312, i32 11), !dbg !1796
  store i32 %80, i32* %arrayidx27.i, align 4, !dbg !1796
  call void @printDDep(i32 336, i32 343), !dbg !1796
  call void @printDDep(i32 327, i32 343), !dbg !1796
  %arraydecay.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0, !dbg !1797
  %82 = ptrtoint %struct.DES_ks** %ks.addr.i to i64, !dbg !1798
  call void @printLoadAddr(i64 %82, i32 347, i32 313, i32 22), !dbg !1798
  %83 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i, align 8, !dbg !1798
  call void @printDDep(i32 170, i32 347), !dbg !1798
  call void @printDDep(i32 170, i32 347), !dbg !1798
  %84 = ptrtoint i32* %enc.addr.i to i64, !dbg !1799
  call void @printLoadAddr(i64 %84, i32 350, i32 313, i32 26), !dbg !1799
  %85 = load i32, i32* %enc.addr.i, align 4, !dbg !1799
  call void @printDDep(i32 173, i32 350), !dbg !1799
  call void @printDDep(i32 173, i32 350), !dbg !1799
  %86 = ptrtoint i32** %data.addr.i.i to i64
  call void @printStoreAddr(i64 %86, i32 353, i32 0, i32 0)
  store i32* %arraydecay.i, i32** %data.addr.i.i, align 8
  call void @printDDep(i32 343, i32 353)
  call void @printDDep(i32 161, i32 353)
  %87 = ptrtoint %struct.DES_ks** %ks.addr.i.i to i64
  call void @printStoreAddr(i64 %87, i32 356, i32 0, i32 0)
  store %struct.DES_ks* %83, %struct.DES_ks** %ks.addr.i.i, align 8
  call void @printDDep(i32 353, i32 356)
  call void @printDDep(i32 161, i32 356)
  %88 = ptrtoint i32* %enc.addr.i.i to i64
  call void @printStoreAddr(i64 %88, i32 359, i32 0, i32 0)
  store i32 %85, i32* %enc.addr.i.i, align 4
  call void @printDDep(i32 356, i32 359)
  call void @printDDep(i32 161, i32 359)
  %89 = ptrtoint i32** %data.addr.i.i to i64, !dbg !1800
  call void @printLoadAddr(i64 %89, i32 362, i32 19, i32 9), !dbg !1800
  %90 = load i32*, i32** %data.addr.i.i, align 8, !dbg !1800
  call void @printDDep(i32 353, i32 362), !dbg !1800
  call void @printDDep(i32 353, i32 362), !dbg !1800
  %91 = ptrtoint i32* %90 to i64, !dbg !1800
  call void @printLoadAddr(i64 %91, i32 365, i32 19, i32 9), !dbg !1800
  %92 = load i32, i32* %90, align 4, !dbg !1800
  call void @printDDep(i32 343, i32 365), !dbg !1800
  call void @printDDep(i32 343, i32 365), !dbg !1800
  %93 = ptrtoint i32* %r.i.i to i64, !dbg !1801
  call void @printStoreAddr(i64 %93, i32 368, i32 19, i32 7), !dbg !1801
  store i32 %92, i32* %r.i.i, align 4, !dbg !1801
  call void @printDDep(i32 359, i32 368), !dbg !1801
  call void @printDDep(i32 365, i32 368), !dbg !1801
  %94 = ptrtoint i32** %data.addr.i.i to i64, !dbg !1802
  call void @printLoadAddr(i64 %94, i32 371, i32 20, i32 9), !dbg !1802
  %95 = load i32*, i32** %data.addr.i.i, align 8, !dbg !1802
  call void @printDDep(i32 353, i32 371), !dbg !1802
  call void @printDDep(i32 362, i32 371), !dbg !1802
  %arrayidx1.i.i = getelementptr inbounds i32, i32* %95, i64 1, !dbg !1802
  %96 = ptrtoint i32* %arrayidx1.i.i to i64, !dbg !1802
  call void @printLoadAddr(i64 %96, i32 375, i32 20, i32 9), !dbg !1802
  %97 = load i32, i32* %arrayidx1.i.i, align 4, !dbg !1802
  call void @printDDep(i32 343, i32 375), !dbg !1802
  call void @printDDep(i32 368, i32 375), !dbg !1802
  %98 = ptrtoint i32* %l.i.i to i64, !dbg !1803
  call void @printStoreAddr(i64 %98, i32 378, i32 20, i32 7), !dbg !1803
  store i32 %97, i32* %l.i.i, align 4, !dbg !1803
  call void @printDDep(i32 368, i32 378), !dbg !1803
  call void @printDDep(i32 375, i32 378), !dbg !1803
  %99 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %99, i32 381, i32 22, i32 5), !dbg !1728
  %100 = load i32, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 378, i32 381), !dbg !1728
  call void @printDDep(i32 378, i32 381), !dbg !1728
  %shr.i.i = lshr i32 %100, 4, !dbg !1728
  %101 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %101, i32 385, i32 22, i32 5), !dbg !1728
  %102 = load i32, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 368, i32 385), !dbg !1728
  call void @printDDep(i32 375, i32 385), !dbg !1728
  %xor.i.i = xor i32 %shr.i.i, %102, !dbg !1728
  %conv.i.i = zext i32 %xor.i.i to i64, !dbg !1728
  %and.i.i = and i64 %conv.i.i, 252645135, !dbg !1728
  %conv2.i.i = trunc i64 %and.i.i to i32, !dbg !1728
  %103 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %103, i32 392, i32 22, i32 5), !dbg !1728
  store i32 %conv2.i.i, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 378, i32 392), !dbg !1728
  call void @printDDep(i32 161, i32 392), !dbg !1728
  %104 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %104, i32 395, i32 22, i32 5), !dbg !1728
  %105 = load i32, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 392, i32 395), !dbg !1728
  call void @printDDep(i32 392, i32 395), !dbg !1728
  %106 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %106, i32 398, i32 22, i32 5), !dbg !1728
  %107 = load i32, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 368, i32 398), !dbg !1728
  call void @printDDep(i32 385, i32 398), !dbg !1728
  %xor3.i.i = xor i32 %107, %105, !dbg !1728
  %108 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %108, i32 402, i32 22, i32 5), !dbg !1728
  store i32 %xor3.i.i, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 392, i32 402), !dbg !1728
  call void @printDDep(i32 398, i32 402), !dbg !1728
  %109 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %109, i32 405, i32 22, i32 5), !dbg !1728
  %110 = load i32, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 392, i32 405), !dbg !1728
  call void @printDDep(i32 395, i32 405), !dbg !1728
  %shl.i.i = shl i32 %110, 4, !dbg !1728
  %111 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %111, i32 409, i32 22, i32 5), !dbg !1728
  %112 = load i32, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 378, i32 409), !dbg !1728
  call void @printDDep(i32 381, i32 409), !dbg !1728
  %xor4.i.i = xor i32 %112, %shl.i.i, !dbg !1728
  %113 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %113, i32 413, i32 22, i32 5), !dbg !1728
  store i32 %xor4.i.i, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 402, i32 413), !dbg !1728
  call void @printDDep(i32 409, i32 413), !dbg !1728
  %114 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %114, i32 416, i32 22, i32 5), !dbg !1728
  %115 = load i32, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 402, i32 416), !dbg !1728
  call void @printDDep(i32 402, i32 416), !dbg !1728
  %shr5.i.i = lshr i32 %115, 16, !dbg !1728
  %116 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %116, i32 420, i32 22, i32 5), !dbg !1728
  %117 = load i32, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 413, i32 420), !dbg !1728
  call void @printDDep(i32 413, i32 420), !dbg !1728
  %xor6.i.i = xor i32 %shr5.i.i, %117, !dbg !1728
  %conv7.i.i = zext i32 %xor6.i.i to i64, !dbg !1728
  %and8.i.i = and i64 %conv7.i.i, 65535, !dbg !1728
  %conv9.i.i = trunc i64 %and8.i.i to i32, !dbg !1728
  %118 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %118, i32 427, i32 22, i32 5), !dbg !1728
  store i32 %conv9.i.i, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 413, i32 427), !dbg !1728
  call void @printDDep(i32 405, i32 427), !dbg !1728
  %119 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %119, i32 430, i32 22, i32 5), !dbg !1728
  %120 = load i32, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 427, i32 430), !dbg !1728
  call void @printDDep(i32 427, i32 430), !dbg !1728
  %121 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %121, i32 433, i32 22, i32 5), !dbg !1728
  %122 = load i32, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 413, i32 433), !dbg !1728
  call void @printDDep(i32 420, i32 433), !dbg !1728
  %xor10.i.i = xor i32 %122, %120, !dbg !1728
  %123 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %123, i32 437, i32 22, i32 5), !dbg !1728
  store i32 %xor10.i.i, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 427, i32 437), !dbg !1728
  call void @printDDep(i32 433, i32 437), !dbg !1728
  %124 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %124, i32 440, i32 22, i32 5), !dbg !1728
  %125 = load i32, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 427, i32 440), !dbg !1728
  call void @printDDep(i32 430, i32 440), !dbg !1728
  %shl11.i.i = shl i32 %125, 16, !dbg !1728
  %126 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %126, i32 444, i32 22, i32 5), !dbg !1728
  %127 = load i32, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 402, i32 444), !dbg !1728
  call void @printDDep(i32 416, i32 444), !dbg !1728
  %xor12.i.i = xor i32 %127, %shl11.i.i, !dbg !1728
  %128 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %128, i32 448, i32 22, i32 5), !dbg !1728
  store i32 %xor12.i.i, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 437, i32 448), !dbg !1728
  call void @printDDep(i32 444, i32 448), !dbg !1728
  %129 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %129, i32 451, i32 22, i32 5), !dbg !1728
  %130 = load i32, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 437, i32 451), !dbg !1728
  call void @printDDep(i32 437, i32 451), !dbg !1728
  %shr13.i.i = lshr i32 %130, 2, !dbg !1728
  %131 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %131, i32 455, i32 22, i32 5), !dbg !1728
  %132 = load i32, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 448, i32 455), !dbg !1728
  call void @printDDep(i32 448, i32 455), !dbg !1728
  %xor14.i.i = xor i32 %shr13.i.i, %132, !dbg !1728
  %conv15.i.i = zext i32 %xor14.i.i to i64, !dbg !1728
  %and16.i.i = and i64 %conv15.i.i, 858993459, !dbg !1728
  %conv17.i.i = trunc i64 %and16.i.i to i32, !dbg !1728
  %133 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %133, i32 462, i32 22, i32 5), !dbg !1728
  store i32 %conv17.i.i, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 448, i32 462), !dbg !1728
  call void @printDDep(i32 440, i32 462), !dbg !1728
  %134 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %134, i32 465, i32 22, i32 5), !dbg !1728
  %135 = load i32, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 462, i32 465), !dbg !1728
  call void @printDDep(i32 462, i32 465), !dbg !1728
  %136 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %136, i32 468, i32 22, i32 5), !dbg !1728
  %137 = load i32, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 448, i32 468), !dbg !1728
  call void @printDDep(i32 455, i32 468), !dbg !1728
  %xor18.i.i = xor i32 %137, %135, !dbg !1728
  %138 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %138, i32 472, i32 22, i32 5), !dbg !1728
  store i32 %xor18.i.i, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 462, i32 472), !dbg !1728
  call void @printDDep(i32 468, i32 472), !dbg !1728
  %139 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %139, i32 475, i32 22, i32 5), !dbg !1728
  %140 = load i32, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 462, i32 475), !dbg !1728
  call void @printDDep(i32 465, i32 475), !dbg !1728
  %shl19.i.i = shl i32 %140, 2, !dbg !1728
  %141 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %141, i32 479, i32 22, i32 5), !dbg !1728
  %142 = load i32, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 437, i32 479), !dbg !1728
  call void @printDDep(i32 451, i32 479), !dbg !1728
  %xor20.i.i = xor i32 %142, %shl19.i.i, !dbg !1728
  %143 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %143, i32 483, i32 22, i32 5), !dbg !1728
  store i32 %xor20.i.i, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 472, i32 483), !dbg !1728
  call void @printDDep(i32 479, i32 483), !dbg !1728
  %144 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %144, i32 486, i32 22, i32 5), !dbg !1728
  %145 = load i32, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 472, i32 486), !dbg !1728
  call void @printDDep(i32 472, i32 486), !dbg !1728
  %shr21.i.i = lshr i32 %145, 8, !dbg !1728
  %146 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %146, i32 490, i32 22, i32 5), !dbg !1728
  %147 = load i32, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 483, i32 490), !dbg !1728
  call void @printDDep(i32 483, i32 490), !dbg !1728
  %xor22.i.i = xor i32 %shr21.i.i, %147, !dbg !1728
  %conv23.i.i = zext i32 %xor22.i.i to i64, !dbg !1728
  %and24.i.i = and i64 %conv23.i.i, 16711935, !dbg !1728
  %conv25.i.i = trunc i64 %and24.i.i to i32, !dbg !1728
  %148 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %148, i32 497, i32 22, i32 5), !dbg !1728
  store i32 %conv25.i.i, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 483, i32 497), !dbg !1728
  call void @printDDep(i32 475, i32 497), !dbg !1728
  %149 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %149, i32 500, i32 22, i32 5), !dbg !1728
  %150 = load i32, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 497, i32 500), !dbg !1728
  call void @printDDep(i32 497, i32 500), !dbg !1728
  %151 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %151, i32 503, i32 22, i32 5), !dbg !1728
  %152 = load i32, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 483, i32 503), !dbg !1728
  call void @printDDep(i32 490, i32 503), !dbg !1728
  %xor26.i.i = xor i32 %152, %150, !dbg !1728
  %153 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %153, i32 507, i32 22, i32 5), !dbg !1728
  store i32 %xor26.i.i, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 497, i32 507), !dbg !1728
  call void @printDDep(i32 503, i32 507), !dbg !1728
  %154 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %154, i32 510, i32 22, i32 5), !dbg !1728
  %155 = load i32, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 497, i32 510), !dbg !1728
  call void @printDDep(i32 500, i32 510), !dbg !1728
  %shl27.i.i = shl i32 %155, 8, !dbg !1728
  %156 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %156, i32 514, i32 22, i32 5), !dbg !1728
  %157 = load i32, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 472, i32 514), !dbg !1728
  call void @printDDep(i32 486, i32 514), !dbg !1728
  %xor28.i.i = xor i32 %157, %shl27.i.i, !dbg !1728
  %158 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %158, i32 518, i32 22, i32 5), !dbg !1728
  store i32 %xor28.i.i, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 507, i32 518), !dbg !1728
  call void @printDDep(i32 514, i32 518), !dbg !1728
  %159 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %159, i32 521, i32 22, i32 5), !dbg !1728
  %160 = load i32, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 507, i32 521), !dbg !1728
  call void @printDDep(i32 507, i32 521), !dbg !1728
  %shr29.i.i = lshr i32 %160, 1, !dbg !1728
  %161 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %161, i32 525, i32 22, i32 5), !dbg !1728
  %162 = load i32, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 518, i32 525), !dbg !1728
  call void @printDDep(i32 518, i32 525), !dbg !1728
  %xor30.i.i = xor i32 %shr29.i.i, %162, !dbg !1728
  %conv31.i.i = zext i32 %xor30.i.i to i64, !dbg !1728
  %and32.i.i = and i64 %conv31.i.i, 1431655765, !dbg !1728
  %conv33.i.i = trunc i64 %and32.i.i to i32, !dbg !1728
  %163 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %163, i32 532, i32 22, i32 5), !dbg !1728
  store i32 %conv33.i.i, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 518, i32 532), !dbg !1728
  call void @printDDep(i32 510, i32 532), !dbg !1728
  %164 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %164, i32 535, i32 22, i32 5), !dbg !1728
  %165 = load i32, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 532, i32 535), !dbg !1728
  call void @printDDep(i32 532, i32 535), !dbg !1728
  %166 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %166, i32 538, i32 22, i32 5), !dbg !1728
  %167 = load i32, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 518, i32 538), !dbg !1728
  call void @printDDep(i32 525, i32 538), !dbg !1728
  %xor34.i.i = xor i32 %167, %165, !dbg !1728
  %168 = ptrtoint i32* %r.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %168, i32 542, i32 22, i32 5), !dbg !1728
  store i32 %xor34.i.i, i32* %r.i.i, align 4, !dbg !1728
  call void @printDDep(i32 532, i32 542), !dbg !1728
  call void @printDDep(i32 538, i32 542), !dbg !1728
  %169 = ptrtoint i32* %tt.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %169, i32 545, i32 22, i32 5), !dbg !1728
  %170 = load i32, i32* %tt.i.i, align 4, !dbg !1728
  call void @printDDep(i32 532, i32 545), !dbg !1728
  call void @printDDep(i32 535, i32 545), !dbg !1728
  %shl35.i.i = shl i32 %170, 1, !dbg !1728
  %171 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printLoadAddr(i64 %171, i32 549, i32 22, i32 5), !dbg !1728
  %172 = load i32, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 507, i32 549), !dbg !1728
  call void @printDDep(i32 521, i32 549), !dbg !1728
  %xor36.i.i = xor i32 %172, %shl35.i.i, !dbg !1728
  %173 = ptrtoint i32* %l.i.i to i64, !dbg !1728
  call void @printStoreAddr(i64 %173, i32 553, i32 22, i32 5), !dbg !1728
  store i32 %xor36.i.i, i32* %l.i.i, align 4, !dbg !1728
  call void @printDDep(i32 542, i32 553), !dbg !1728
  call void @printDDep(i32 549, i32 553), !dbg !1728
  %174 = ptrtoint i32* %r.i.i to i64, !dbg !1729
  call void @printLoadAddr(i64 %174, i32 556, i32 31, i32 9), !dbg !1729
  %175 = load i32, i32* %r.i.i, align 4, !dbg !1729
  call void @printDDep(i32 542, i32 556), !dbg !1729
  call void @printDDep(i32 542, i32 556), !dbg !1729
  %176 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %175) #5, !dbg !1729, !srcloc !70
  %177 = ptrtoint i32* %ret.i.i to i64, !dbg !1729
  call void @printStoreAddr(i64 %177, i32 560, i32 31, i32 9), !dbg !1729
  store i32 %176, i32* %ret.i.i, align 4, !dbg !1729
  call void @printDDep(i32 553, i32 560), !dbg !1729
  call void @printDDep(i32 161, i32 560), !dbg !1729
  %178 = ptrtoint i32* %ret.i.i to i64, !dbg !1729
  call void @printLoadAddr(i64 %178, i32 563, i32 31, i32 9), !dbg !1729
  %179 = load i32, i32* %ret.i.i, align 4, !dbg !1729
  call void @printDDep(i32 560, i32 563), !dbg !1729
  call void @printDDep(i32 560, i32 563), !dbg !1729
  %180 = ptrtoint i32* %tmp.i.i to i64, !dbg !1729
  call void @printStoreAddr(i64 %180, i32 566, i32 31, i32 9), !dbg !1729
  store i32 %179, i32* %tmp.i.i, align 4, !dbg !1729
  call void @printDDep(i32 560, i32 566), !dbg !1729
  call void @printDDep(i32 161, i32 566), !dbg !1729
  %181 = ptrtoint i32* %tmp.i.i to i64, !dbg !1729
  call void @printLoadAddr(i64 %181, i32 569, i32 31, i32 9), !dbg !1729
  %182 = load i32, i32* %tmp.i.i, align 4, !dbg !1729
  call void @printDDep(i32 566, i32 569), !dbg !1729
  call void @printDDep(i32 566, i32 569), !dbg !1729
  %conv37.i.i = zext i32 %182 to i64, !dbg !1804
  %and38.i.i = and i64 %conv37.i.i, 4294967295, !dbg !1805
  %conv39.i.i = trunc i64 %and38.i.i to i32, !dbg !1804
  %183 = ptrtoint i32* %r.i.i to i64, !dbg !1806
  call void @printStoreAddr(i64 %183, i32 575, i32 31, i32 7), !dbg !1806
  store i32 %conv39.i.i, i32* %r.i.i, align 4, !dbg !1806
  call void @printDDep(i32 566, i32 575), !dbg !1806
  call void @printDDep(i32 556, i32 575), !dbg !1806
  %184 = ptrtoint i32* %l.i.i to i64, !dbg !1730
  call void @printLoadAddr(i64 %184, i32 578, i32 32, i32 9), !dbg !1730
  %185 = load i32, i32* %l.i.i, align 4, !dbg !1730
  call void @printDDep(i32 553, i32 578), !dbg !1730
  call void @printDDep(i32 553, i32 578), !dbg !1730
  %186 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %185) #5, !dbg !1730, !srcloc !77
  %187 = ptrtoint i32* %ret40.i.i to i64, !dbg !1730
  call void @printStoreAddr(i64 %187, i32 582, i32 32, i32 9), !dbg !1730
  store i32 %186, i32* %ret40.i.i, align 4, !dbg !1730
  call void @printDDep(i32 575, i32 582), !dbg !1730
  call void @printDDep(i32 161, i32 582), !dbg !1730
  %188 = ptrtoint i32* %ret40.i.i to i64, !dbg !1730
  call void @printLoadAddr(i64 %188, i32 585, i32 32, i32 9), !dbg !1730
  %189 = load i32, i32* %ret40.i.i, align 4, !dbg !1730
  call void @printDDep(i32 582, i32 585), !dbg !1730
  call void @printDDep(i32 582, i32 585), !dbg !1730
  %190 = ptrtoint i32* %tmp41.i.i to i64, !dbg !1730
  call void @printStoreAddr(i64 %190, i32 588, i32 32, i32 9), !dbg !1730
  store i32 %189, i32* %tmp41.i.i, align 4, !dbg !1730
  call void @printDDep(i32 582, i32 588), !dbg !1730
  call void @printDDep(i32 161, i32 588), !dbg !1730
  %191 = ptrtoint i32* %tmp41.i.i to i64, !dbg !1730
  call void @printLoadAddr(i64 %191, i32 591, i32 32, i32 9), !dbg !1730
  %192 = load i32, i32* %tmp41.i.i, align 4, !dbg !1730
  call void @printDDep(i32 588, i32 591), !dbg !1730
  call void @printDDep(i32 588, i32 591), !dbg !1730
  %conv42.i.i = zext i32 %192 to i64, !dbg !1807
  %and43.i.i = and i64 %conv42.i.i, 4294967295, !dbg !1808
  %conv44.i.i = trunc i64 %and43.i.i to i32, !dbg !1807
  %193 = ptrtoint i32* %l.i.i to i64, !dbg !1809
  call void @printStoreAddr(i64 %193, i32 597, i32 32, i32 7), !dbg !1809
  store i32 %conv44.i.i, i32* %l.i.i, align 4, !dbg !1809
  call void @printDDep(i32 588, i32 597), !dbg !1809
  call void @printDDep(i32 578, i32 597), !dbg !1809
  %194 = ptrtoint %struct.DES_ks** %ks.addr.i.i to i64, !dbg !1810
  call void @printLoadAddr(i64 %194, i32 600, i32 34, i32 9), !dbg !1810
  %195 = load %struct.DES_ks*, %struct.DES_ks** %ks.addr.i.i, align 8, !dbg !1810
  call void @printDDep(i32 356, i32 600), !dbg !1810
  call void @printDDep(i32 356, i32 600), !dbg !1810
  %ks45.i.i = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %195, i32 0, i32 0, !dbg !1811
  %arraydecay.i.i = getelementptr inbounds [16 x %union.anon], [16 x %union.anon]* %ks45.i.i, i64 0, i64 0, !dbg !1812
  %deslong.i.i = bitcast %union.anon* %arraydecay.i.i to [2 x i32]*, !dbg !1812
  %arraydecay46.i.i = getelementptr inbounds [2 x i32], [2 x i32]* %deslong.i.i, i64 0, i64 0, !dbg !1810
  %196 = ptrtoint i32** %s.i.i to i64, !dbg !1813
  call void @printStoreAddr(i64 %196, i32 607, i32 34, i32 7), !dbg !1813
  store i32* %arraydecay46.i.i, i32** %s.i.i, align 8, !dbg !1813
  call void @printDDep(i32 597, i32 607), !dbg !1813
  call void @printDDep(i32 375, i32 607), !dbg !1813
  %197 = ptrtoint i32* %enc.addr.i.i to i64, !dbg !1814
  call void @printLoadAddr(i64 %197, i32 610, i32 39, i32 9), !dbg !1814
  %198 = load i32, i32* %enc.addr.i.i, align 4, !dbg !1814
  call void @printDDep(i32 359, i32 610), !dbg !1814
  call void @printDDep(i32 359, i32 610), !dbg !1814
  %tobool.i.i = icmp ne i32 %198, 0, !dbg !1814
  %199 = load i32, i32* %InstCounter, !dbg !1815
  %200 = add nsw i32 370, %199, !dbg !1815
  store i32 %200, i32* %InstCounter, !dbg !1815
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !1815

if.then.i.i:                                      ; preds = %entry
  %201 = ptrtoint i32* %r.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %201, i32 618, i32 40, i32 9), !dbg !1816
  %202 = load i32, i32* %r.i.i, align 4, !dbg !1816
  call void @printDDep(i32 575, i32 618), !dbg !1816
  call void @printDDep(i32 575, i32 618), !dbg !1816
  call void @printCDep(i32 610, i32 618), !dbg !1816
  %203 = ptrtoint i32** %s.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %203, i32 622, i32 40, i32 9), !dbg !1816
  %204 = load i32*, i32** %s.i.i, align 8, !dbg !1816
  call void @printDDep(i32 607, i32 622), !dbg !1816
  call void @printDDep(i32 607, i32 622), !dbg !1816
  call void @printCDep(i32 610, i32 622), !dbg !1816
  %205 = ptrtoint i32* %204 to i64, !dbg !1816
  call void @printLoadAddr(i64 %205, i32 626, i32 40, i32 9), !dbg !1816
  %206 = load i32, i32* %204, align 4, !dbg !1816
  call void @printDDep(i32 607, i32 626), !dbg !1816
  call void @printDDep(i32 622, i32 626), !dbg !1816
  call void @printCDep(i32 610, i32 626), !dbg !1816
  %xor48.i.i = xor i32 %202, %206, !dbg !1816
  %207 = ptrtoint i32* %u.i.i to i64, !dbg !1816
  call void @printStoreAddr(i64 %207, i32 631, i32 40, i32 9), !dbg !1816
  store i32 %xor48.i.i, i32* %u.i.i, align 4, !dbg !1816
  call void @printDDep(i32 607, i32 631), !dbg !1816
  call void @printDDep(i32 626, i32 631), !dbg !1816
  call void @printCDep(i32 610, i32 631), !dbg !1816
  %208 = ptrtoint i32* %r.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %208, i32 635, i32 40, i32 9), !dbg !1816
  %209 = load i32, i32* %r.i.i, align 4, !dbg !1816
  call void @printDDep(i32 575, i32 635), !dbg !1816
  call void @printDDep(i32 626, i32 635), !dbg !1816
  call void @printCDep(i32 610, i32 635), !dbg !1816
  %210 = ptrtoint i32** %s.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %210, i32 639, i32 40, i32 9), !dbg !1816
  %211 = load i32*, i32** %s.i.i, align 8, !dbg !1816
  call void @printDDep(i32 607, i32 639), !dbg !1816
  call void @printDDep(i32 626, i32 639), !dbg !1816
  call void @printCDep(i32 610, i32 639), !dbg !1816
  %arrayidx49.i.i = getelementptr inbounds i32, i32* %211, i64 1, !dbg !1816
  %212 = ptrtoint i32* %arrayidx49.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %212, i32 644, i32 40, i32 9), !dbg !1816
  %213 = load i32, i32* %arrayidx49.i.i, align 4, !dbg !1816
  call void @printDDep(i32 607, i32 644), !dbg !1816
  call void @printDDep(i32 639, i32 644), !dbg !1816
  call void @printCDep(i32 610, i32 644), !dbg !1816
  %xor50.i.i = xor i32 %209, %213, !dbg !1816
  %214 = ptrtoint i32* %t.i.i to i64, !dbg !1816
  call void @printStoreAddr(i64 %214, i32 649, i32 40, i32 9), !dbg !1816
  store i32 %xor50.i.i, i32* %t.i.i, align 4, !dbg !1816
  call void @printDDep(i32 631, i32 649), !dbg !1816
  call void @printDDep(i32 644, i32 649), !dbg !1816
  call void @printCDep(i32 610, i32 649), !dbg !1816
  %215 = ptrtoint i32* %t.i.i to i64, !dbg !1731
  call void @printLoadAddr(i64 %215, i32 653, i32 40, i32 9), !dbg !1731
  %216 = load i32, i32* %t.i.i, align 4, !dbg !1731
  call void @printDDep(i32 649, i32 653), !dbg !1731
  call void @printDDep(i32 649, i32 653), !dbg !1731
  call void @printCDep(i32 610, i32 653), !dbg !1731
  %217 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %216) #5, !dbg !1731, !srcloc !94
  %218 = ptrtoint i32* %ret51.i.i to i64, !dbg !1731
  call void @printStoreAddr(i64 %218, i32 658, i32 40, i32 9), !dbg !1731
  store i32 %217, i32* %ret51.i.i, align 4, !dbg !1731
  call void @printDDep(i32 649, i32 658), !dbg !1731
  call void @printDDep(i32 161, i32 658), !dbg !1731
  call void @printCDep(i32 610, i32 658), !dbg !1731
  %219 = ptrtoint i32* %ret51.i.i to i64, !dbg !1731
  call void @printLoadAddr(i64 %219, i32 662, i32 40, i32 9), !dbg !1731
  %220 = load i32, i32* %ret51.i.i, align 4, !dbg !1731
  call void @printDDep(i32 658, i32 662), !dbg !1731
  call void @printDDep(i32 658, i32 662), !dbg !1731
  call void @printCDep(i32 610, i32 662), !dbg !1731
  %221 = ptrtoint i32* %tmp52.i.i to i64, !dbg !1731
  call void @printStoreAddr(i64 %221, i32 666, i32 40, i32 9), !dbg !1731
  store i32 %220, i32* %tmp52.i.i, align 4, !dbg !1731
  call void @printDDep(i32 658, i32 666), !dbg !1731
  call void @printDDep(i32 161, i32 666), !dbg !1731
  call void @printCDep(i32 610, i32 666), !dbg !1731
  %222 = ptrtoint i32* %tmp52.i.i to i64, !dbg !1731
  call void @printLoadAddr(i64 %222, i32 670, i32 40, i32 9), !dbg !1731
  %223 = load i32, i32* %tmp52.i.i, align 4, !dbg !1731
  call void @printDDep(i32 666, i32 670), !dbg !1731
  call void @printDDep(i32 666, i32 670), !dbg !1731
  call void @printCDep(i32 610, i32 670), !dbg !1731
  %224 = ptrtoint i32* %t.i.i to i64, !dbg !1816
  call void @printStoreAddr(i64 %224, i32 674, i32 40, i32 9), !dbg !1816
  store i32 %223, i32* %t.i.i, align 4, !dbg !1816
  call void @printDDep(i32 666, i32 674), !dbg !1816
  call void @printDDep(i32 653, i32 674), !dbg !1816
  call void @printCDep(i32 610, i32 674), !dbg !1816
  %225 = ptrtoint i32* %u.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %225, i32 678, i32 40, i32 9), !dbg !1816
  %226 = load i32, i32* %u.i.i, align 4, !dbg !1816
  call void @printDDep(i32 631, i32 678), !dbg !1816
  call void @printDDep(i32 644, i32 678), !dbg !1816
  call void @printCDep(i32 610, i32 678), !dbg !1816
  %shr53.i.i = lshr i32 %226, 2, !dbg !1816
  %and54.i.i = and i32 %shr53.i.i, 63, !dbg !1816
  %idxprom.i.i = zext i32 %and54.i.i to i64, !dbg !1816
  %arrayidx55.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom.i.i, !dbg !1816
  %227 = ptrtoint i32* %arrayidx55.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %227, i32 686, i32 40, i32 9), !dbg !1816
  %228 = load i32, i32* %arrayidx55.i.i, align 4, !dbg !1816
  call void @printDDep(i32 644, i32 686), !dbg !1816
  call void @printCDep(i32 610, i32 686), !dbg !1816
  %229 = ptrtoint i32* %u.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %229, i32 689, i32 40, i32 9), !dbg !1816
  %230 = load i32, i32* %u.i.i, align 4, !dbg !1816
  call void @printDDep(i32 631, i32 689), !dbg !1816
  call void @printDDep(i32 678, i32 689), !dbg !1816
  call void @printCDep(i32 610, i32 689), !dbg !1816
  %shr56.i.i = lshr i32 %230, 10, !dbg !1816
  %and57.i.i = and i32 %shr56.i.i, 63, !dbg !1816
  %idxprom58.i.i = zext i32 %and57.i.i to i64, !dbg !1816
  %arrayidx59.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom58.i.i, !dbg !1816
  %231 = ptrtoint i32* %arrayidx59.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %231, i32 697, i32 40, i32 9), !dbg !1816
  %232 = load i32, i32* %arrayidx59.i.i, align 4, !dbg !1816
  call void @printDDep(i32 644, i32 697), !dbg !1816
  call void @printCDep(i32 610, i32 697), !dbg !1816
  %xor60.i.i = xor i32 %228, %232, !dbg !1816
  %233 = ptrtoint i32* %u.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %233, i32 701, i32 40, i32 9), !dbg !1816
  %234 = load i32, i32* %u.i.i, align 4, !dbg !1816
  call void @printDDep(i32 631, i32 701), !dbg !1816
  call void @printDDep(i32 689, i32 701), !dbg !1816
  call void @printCDep(i32 610, i32 701), !dbg !1816
  %shr61.i.i = lshr i32 %234, 18, !dbg !1816
  %and62.i.i = and i32 %shr61.i.i, 63, !dbg !1816
  %idxprom63.i.i = zext i32 %and62.i.i to i64, !dbg !1816
  %arrayidx64.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom63.i.i, !dbg !1816
  %235 = ptrtoint i32* %arrayidx64.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %235, i32 709, i32 40, i32 9), !dbg !1816
  %236 = load i32, i32* %arrayidx64.i.i, align 4, !dbg !1816
  call void @printDDep(i32 644, i32 709), !dbg !1816
  call void @printCDep(i32 610, i32 709), !dbg !1816
  %xor65.i.i = xor i32 %xor60.i.i, %236, !dbg !1816
  %237 = ptrtoint i32* %u.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %237, i32 713, i32 40, i32 9), !dbg !1816
  %238 = load i32, i32* %u.i.i, align 4, !dbg !1816
  call void @printDDep(i32 631, i32 713), !dbg !1816
  call void @printDDep(i32 701, i32 713), !dbg !1816
  call void @printCDep(i32 610, i32 713), !dbg !1816
  %shr66.i.i = lshr i32 %238, 26, !dbg !1816
  %idxprom68.i.i = zext i32 %shr66.i.i to i64, !dbg !1816
  %arrayidx69.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom68.i.i, !dbg !1816
  %239 = ptrtoint i32* %arrayidx69.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %239, i32 720, i32 40, i32 9), !dbg !1816
  %240 = load i32, i32* %arrayidx69.i.i, align 4, !dbg !1816
  call void @printDDep(i32 644, i32 720), !dbg !1816
  call void @printCDep(i32 610, i32 720), !dbg !1816
  %xor70.i.i = xor i32 %xor65.i.i, %240, !dbg !1816
  %241 = ptrtoint i32* %t.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %241, i32 724, i32 40, i32 9), !dbg !1816
  %242 = load i32, i32* %t.i.i, align 4, !dbg !1816
  call void @printDDep(i32 674, i32 724), !dbg !1816
  call void @printDDep(i32 674, i32 724), !dbg !1816
  call void @printCDep(i32 610, i32 724), !dbg !1816
  %shr71.i.i = lshr i32 %242, 2, !dbg !1816
  %and72.i.i = and i32 %shr71.i.i, 63, !dbg !1816
  %idxprom73.i.i = zext i32 %and72.i.i to i64, !dbg !1816
  %arrayidx74.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom73.i.i, !dbg !1816
  %243 = ptrtoint i32* %arrayidx74.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %243, i32 732, i32 40, i32 9), !dbg !1816
  %244 = load i32, i32* %arrayidx74.i.i, align 4, !dbg !1816
  call void @printDDep(i32 644, i32 732), !dbg !1816
  call void @printCDep(i32 610, i32 732), !dbg !1816
  %xor75.i.i = xor i32 %xor70.i.i, %244, !dbg !1816
  %245 = ptrtoint i32* %t.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %245, i32 736, i32 40, i32 9), !dbg !1816
  %246 = load i32, i32* %t.i.i, align 4, !dbg !1816
  call void @printDDep(i32 674, i32 736), !dbg !1816
  call void @printDDep(i32 724, i32 736), !dbg !1816
  call void @printCDep(i32 610, i32 736), !dbg !1816
  %shr76.i.i = lshr i32 %246, 10, !dbg !1816
  %and77.i.i = and i32 %shr76.i.i, 63, !dbg !1816
  %idxprom78.i.i = zext i32 %and77.i.i to i64, !dbg !1816
  %arrayidx79.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom78.i.i, !dbg !1816
  %247 = ptrtoint i32* %arrayidx79.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %247, i32 744, i32 40, i32 9), !dbg !1816
  %248 = load i32, i32* %arrayidx79.i.i, align 4, !dbg !1816
  call void @printDDep(i32 644, i32 744), !dbg !1816
  call void @printCDep(i32 610, i32 744), !dbg !1816
  %xor80.i.i = xor i32 %xor75.i.i, %248, !dbg !1816
  %249 = ptrtoint i32* %t.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %249, i32 748, i32 40, i32 9), !dbg !1816
  %250 = load i32, i32* %t.i.i, align 4, !dbg !1816
  call void @printDDep(i32 674, i32 748), !dbg !1816
  call void @printDDep(i32 736, i32 748), !dbg !1816
  call void @printCDep(i32 610, i32 748), !dbg !1816
  %shr81.i.i = lshr i32 %250, 18, !dbg !1816
  %and82.i.i = and i32 %shr81.i.i, 63, !dbg !1816
  %idxprom83.i.i = zext i32 %and82.i.i to i64, !dbg !1816
  %arrayidx84.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom83.i.i, !dbg !1816
  %251 = ptrtoint i32* %arrayidx84.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %251, i32 756, i32 40, i32 9), !dbg !1816
  %252 = load i32, i32* %arrayidx84.i.i, align 4, !dbg !1816
  call void @printDDep(i32 644, i32 756), !dbg !1816
  call void @printCDep(i32 610, i32 756), !dbg !1816
  %xor85.i.i = xor i32 %xor80.i.i, %252, !dbg !1816
  %253 = ptrtoint i32* %t.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %253, i32 760, i32 40, i32 9), !dbg !1816
  %254 = load i32, i32* %t.i.i, align 4, !dbg !1816
  call void @printDDep(i32 674, i32 760), !dbg !1816
  call void @printDDep(i32 748, i32 760), !dbg !1816
  call void @printCDep(i32 610, i32 760), !dbg !1816
  %shr86.i.i = lshr i32 %254, 26, !dbg !1816
  %idxprom88.i.i = zext i32 %shr86.i.i to i64, !dbg !1816
  %arrayidx89.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom88.i.i, !dbg !1816
  %255 = ptrtoint i32* %arrayidx89.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %255, i32 767, i32 40, i32 9), !dbg !1816
  %256 = load i32, i32* %arrayidx89.i.i, align 4, !dbg !1816
  call void @printDDep(i32 644, i32 767), !dbg !1816
  call void @printCDep(i32 610, i32 767), !dbg !1816
  %xor90.i.i = xor i32 %xor85.i.i, %256, !dbg !1816
  %257 = ptrtoint i32* %l.i.i to i64, !dbg !1816
  call void @printLoadAddr(i64 %257, i32 771, i32 40, i32 9), !dbg !1816
  %258 = load i32, i32* %l.i.i, align 4, !dbg !1816
  call void @printDDep(i32 597, i32 771), !dbg !1816
  call void @printDDep(i32 644, i32 771), !dbg !1816
  call void @printCDep(i32 610, i32 771), !dbg !1816
  %xor91.i.i = xor i32 %258, %xor90.i.i, !dbg !1816
  %259 = ptrtoint i32* %l.i.i to i64, !dbg !1816
  call void @printStoreAddr(i64 %259, i32 776, i32 40, i32 9), !dbg !1816
  store i32 %xor91.i.i, i32* %l.i.i, align 4, !dbg !1816
  call void @printDDep(i32 674, i32 776), !dbg !1816
  call void @printDDep(i32 771, i32 776), !dbg !1816
  call void @printCDep(i32 610, i32 776), !dbg !1816
  %260 = ptrtoint i32* %l.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %260, i32 780, i32 41, i32 9), !dbg !1817
  %261 = load i32, i32* %l.i.i, align 4, !dbg !1817
  call void @printDDep(i32 776, i32 780), !dbg !1817
  call void @printDDep(i32 776, i32 780), !dbg !1817
  call void @printCDep(i32 610, i32 780), !dbg !1817
  %262 = ptrtoint i32** %s.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %262, i32 784, i32 41, i32 9), !dbg !1817
  %263 = load i32*, i32** %s.i.i, align 8, !dbg !1817
  call void @printDDep(i32 607, i32 784), !dbg !1817
  call void @printDDep(i32 644, i32 784), !dbg !1817
  call void @printCDep(i32 610, i32 784), !dbg !1817
  %arrayidx92.i.i = getelementptr inbounds i32, i32* %263, i64 2, !dbg !1817
  %264 = ptrtoint i32* %arrayidx92.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %264, i32 789, i32 41, i32 9), !dbg !1817
  %265 = load i32, i32* %arrayidx92.i.i, align 4, !dbg !1817
  call void @printDDep(i32 161, i32 789), !dbg !1817
  call void @printDDep(i32 784, i32 789), !dbg !1817
  call void @printCDep(i32 610, i32 789), !dbg !1817
  %xor93.i.i = xor i32 %261, %265, !dbg !1817
  %266 = ptrtoint i32* %u.i.i to i64, !dbg !1817
  call void @printStoreAddr(i64 %266, i32 794, i32 41, i32 9), !dbg !1817
  store i32 %xor93.i.i, i32* %u.i.i, align 4, !dbg !1817
  call void @printDDep(i32 776, i32 794), !dbg !1817
  call void @printDDep(i32 789, i32 794), !dbg !1817
  call void @printCDep(i32 610, i32 794), !dbg !1817
  %267 = ptrtoint i32* %l.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %267, i32 798, i32 41, i32 9), !dbg !1817
  %268 = load i32, i32* %l.i.i, align 4, !dbg !1817
  call void @printDDep(i32 776, i32 798), !dbg !1817
  call void @printDDep(i32 789, i32 798), !dbg !1817
  call void @printCDep(i32 610, i32 798), !dbg !1817
  %269 = ptrtoint i32** %s.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %269, i32 802, i32 41, i32 9), !dbg !1817
  %270 = load i32*, i32** %s.i.i, align 8, !dbg !1817
  call void @printDDep(i32 607, i32 802), !dbg !1817
  call void @printDDep(i32 789, i32 802), !dbg !1817
  call void @printCDep(i32 610, i32 802), !dbg !1817
  %arrayidx94.i.i = getelementptr inbounds i32, i32* %270, i64 3, !dbg !1817
  %271 = ptrtoint i32* %arrayidx94.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %271, i32 807, i32 41, i32 9), !dbg !1817
  %272 = load i32, i32* %arrayidx94.i.i, align 4, !dbg !1817
  call void @printDDep(i32 161, i32 807), !dbg !1817
  call void @printDDep(i32 802, i32 807), !dbg !1817
  call void @printCDep(i32 610, i32 807), !dbg !1817
  %xor95.i.i = xor i32 %268, %272, !dbg !1817
  %273 = ptrtoint i32* %t.i.i to i64, !dbg !1817
  call void @printStoreAddr(i64 %273, i32 812, i32 41, i32 9), !dbg !1817
  store i32 %xor95.i.i, i32* %t.i.i, align 4, !dbg !1817
  call void @printDDep(i32 794, i32 812), !dbg !1817
  call void @printDDep(i32 807, i32 812), !dbg !1817
  call void @printCDep(i32 610, i32 812), !dbg !1817
  %274 = ptrtoint i32* %t.i.i to i64, !dbg !1732
  call void @printLoadAddr(i64 %274, i32 816, i32 41, i32 9), !dbg !1732
  %275 = load i32, i32* %t.i.i, align 4, !dbg !1732
  call void @printDDep(i32 812, i32 816), !dbg !1732
  call void @printDDep(i32 812, i32 816), !dbg !1732
  call void @printCDep(i32 610, i32 816), !dbg !1732
  %276 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %275) #5, !dbg !1732, !srcloc !100
  %277 = ptrtoint i32* %ret96.i.i to i64, !dbg !1732
  call void @printStoreAddr(i64 %277, i32 821, i32 41, i32 9), !dbg !1732
  store i32 %276, i32* %ret96.i.i, align 4, !dbg !1732
  call void @printDDep(i32 812, i32 821), !dbg !1732
  call void @printDDep(i32 161, i32 821), !dbg !1732
  call void @printCDep(i32 610, i32 821), !dbg !1732
  %278 = ptrtoint i32* %ret96.i.i to i64, !dbg !1732
  call void @printLoadAddr(i64 %278, i32 825, i32 41, i32 9), !dbg !1732
  %279 = load i32, i32* %ret96.i.i, align 4, !dbg !1732
  call void @printDDep(i32 821, i32 825), !dbg !1732
  call void @printDDep(i32 821, i32 825), !dbg !1732
  call void @printCDep(i32 610, i32 825), !dbg !1732
  %280 = ptrtoint i32* %tmp97.i.i to i64, !dbg !1732
  call void @printStoreAddr(i64 %280, i32 829, i32 41, i32 9), !dbg !1732
  store i32 %279, i32* %tmp97.i.i, align 4, !dbg !1732
  call void @printDDep(i32 821, i32 829), !dbg !1732
  call void @printDDep(i32 161, i32 829), !dbg !1732
  call void @printCDep(i32 610, i32 829), !dbg !1732
  %281 = ptrtoint i32* %tmp97.i.i to i64, !dbg !1732
  call void @printLoadAddr(i64 %281, i32 833, i32 41, i32 9), !dbg !1732
  %282 = load i32, i32* %tmp97.i.i, align 4, !dbg !1732
  call void @printDDep(i32 829, i32 833), !dbg !1732
  call void @printDDep(i32 829, i32 833), !dbg !1732
  call void @printCDep(i32 610, i32 833), !dbg !1732
  %283 = ptrtoint i32* %t.i.i to i64, !dbg !1817
  call void @printStoreAddr(i64 %283, i32 837, i32 41, i32 9), !dbg !1817
  store i32 %282, i32* %t.i.i, align 4, !dbg !1817
  call void @printDDep(i32 829, i32 837), !dbg !1817
  call void @printDDep(i32 816, i32 837), !dbg !1817
  call void @printCDep(i32 610, i32 837), !dbg !1817
  %284 = ptrtoint i32* %u.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %284, i32 841, i32 41, i32 9), !dbg !1817
  %285 = load i32, i32* %u.i.i, align 4, !dbg !1817
  call void @printDDep(i32 794, i32 841), !dbg !1817
  call void @printDDep(i32 807, i32 841), !dbg !1817
  call void @printCDep(i32 610, i32 841), !dbg !1817
  %shr98.i.i = lshr i32 %285, 2, !dbg !1817
  %and99.i.i = and i32 %shr98.i.i, 63, !dbg !1817
  %idxprom100.i.i = zext i32 %and99.i.i to i64, !dbg !1817
  %arrayidx101.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom100.i.i, !dbg !1817
  %286 = ptrtoint i32* %arrayidx101.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %286, i32 849, i32 41, i32 9), !dbg !1817
  %287 = load i32, i32* %arrayidx101.i.i, align 4, !dbg !1817
  call void @printDDep(i32 807, i32 849), !dbg !1817
  call void @printCDep(i32 610, i32 849), !dbg !1817
  %288 = ptrtoint i32* %u.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %288, i32 852, i32 41, i32 9), !dbg !1817
  %289 = load i32, i32* %u.i.i, align 4, !dbg !1817
  call void @printDDep(i32 794, i32 852), !dbg !1817
  call void @printDDep(i32 841, i32 852), !dbg !1817
  call void @printCDep(i32 610, i32 852), !dbg !1817
  %shr102.i.i = lshr i32 %289, 10, !dbg !1817
  %and103.i.i = and i32 %shr102.i.i, 63, !dbg !1817
  %idxprom104.i.i = zext i32 %and103.i.i to i64, !dbg !1817
  %arrayidx105.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom104.i.i, !dbg !1817
  %290 = ptrtoint i32* %arrayidx105.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %290, i32 860, i32 41, i32 9), !dbg !1817
  %291 = load i32, i32* %arrayidx105.i.i, align 4, !dbg !1817
  call void @printDDep(i32 807, i32 860), !dbg !1817
  call void @printCDep(i32 610, i32 860), !dbg !1817
  %xor106.i.i = xor i32 %287, %291, !dbg !1817
  %292 = ptrtoint i32* %u.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %292, i32 864, i32 41, i32 9), !dbg !1817
  %293 = load i32, i32* %u.i.i, align 4, !dbg !1817
  call void @printDDep(i32 794, i32 864), !dbg !1817
  call void @printDDep(i32 852, i32 864), !dbg !1817
  call void @printCDep(i32 610, i32 864), !dbg !1817
  %shr107.i.i = lshr i32 %293, 18, !dbg !1817
  %and108.i.i = and i32 %shr107.i.i, 63, !dbg !1817
  %idxprom109.i.i = zext i32 %and108.i.i to i64, !dbg !1817
  %arrayidx110.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom109.i.i, !dbg !1817
  %294 = ptrtoint i32* %arrayidx110.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %294, i32 872, i32 41, i32 9), !dbg !1817
  %295 = load i32, i32* %arrayidx110.i.i, align 4, !dbg !1817
  call void @printDDep(i32 807, i32 872), !dbg !1817
  call void @printCDep(i32 610, i32 872), !dbg !1817
  %xor111.i.i = xor i32 %xor106.i.i, %295, !dbg !1817
  %296 = ptrtoint i32* %u.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %296, i32 876, i32 41, i32 9), !dbg !1817
  %297 = load i32, i32* %u.i.i, align 4, !dbg !1817
  call void @printDDep(i32 794, i32 876), !dbg !1817
  call void @printDDep(i32 864, i32 876), !dbg !1817
  call void @printCDep(i32 610, i32 876), !dbg !1817
  %shr112.i.i = lshr i32 %297, 26, !dbg !1817
  %idxprom114.i.i = zext i32 %shr112.i.i to i64, !dbg !1817
  %arrayidx115.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom114.i.i, !dbg !1817
  %298 = ptrtoint i32* %arrayidx115.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %298, i32 883, i32 41, i32 9), !dbg !1817
  %299 = load i32, i32* %arrayidx115.i.i, align 4, !dbg !1817
  call void @printDDep(i32 807, i32 883), !dbg !1817
  call void @printCDep(i32 610, i32 883), !dbg !1817
  %xor116.i.i = xor i32 %xor111.i.i, %299, !dbg !1817
  %300 = ptrtoint i32* %t.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %300, i32 887, i32 41, i32 9), !dbg !1817
  %301 = load i32, i32* %t.i.i, align 4, !dbg !1817
  call void @printDDep(i32 837, i32 887), !dbg !1817
  call void @printDDep(i32 837, i32 887), !dbg !1817
  call void @printCDep(i32 610, i32 887), !dbg !1817
  %shr117.i.i = lshr i32 %301, 2, !dbg !1817
  %and118.i.i = and i32 %shr117.i.i, 63, !dbg !1817
  %idxprom119.i.i = zext i32 %and118.i.i to i64, !dbg !1817
  %arrayidx120.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom119.i.i, !dbg !1817
  %302 = ptrtoint i32* %arrayidx120.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %302, i32 895, i32 41, i32 9), !dbg !1817
  %303 = load i32, i32* %arrayidx120.i.i, align 4, !dbg !1817
  call void @printDDep(i32 807, i32 895), !dbg !1817
  call void @printCDep(i32 610, i32 895), !dbg !1817
  %xor121.i.i = xor i32 %xor116.i.i, %303, !dbg !1817
  %304 = ptrtoint i32* %t.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %304, i32 899, i32 41, i32 9), !dbg !1817
  %305 = load i32, i32* %t.i.i, align 4, !dbg !1817
  call void @printDDep(i32 837, i32 899), !dbg !1817
  call void @printDDep(i32 887, i32 899), !dbg !1817
  call void @printCDep(i32 610, i32 899), !dbg !1817
  %shr122.i.i = lshr i32 %305, 10, !dbg !1817
  %and123.i.i = and i32 %shr122.i.i, 63, !dbg !1817
  %idxprom124.i.i = zext i32 %and123.i.i to i64, !dbg !1817
  %arrayidx125.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom124.i.i, !dbg !1817
  %306 = ptrtoint i32* %arrayidx125.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %306, i32 907, i32 41, i32 9), !dbg !1817
  %307 = load i32, i32* %arrayidx125.i.i, align 4, !dbg !1817
  call void @printDDep(i32 807, i32 907), !dbg !1817
  call void @printCDep(i32 610, i32 907), !dbg !1817
  %xor126.i.i = xor i32 %xor121.i.i, %307, !dbg !1817
  %308 = ptrtoint i32* %t.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %308, i32 911, i32 41, i32 9), !dbg !1817
  %309 = load i32, i32* %t.i.i, align 4, !dbg !1817
  call void @printDDep(i32 837, i32 911), !dbg !1817
  call void @printDDep(i32 899, i32 911), !dbg !1817
  call void @printCDep(i32 610, i32 911), !dbg !1817
  %shr127.i.i = lshr i32 %309, 18, !dbg !1817
  %and128.i.i = and i32 %shr127.i.i, 63, !dbg !1817
  %idxprom129.i.i = zext i32 %and128.i.i to i64, !dbg !1817
  %arrayidx130.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom129.i.i, !dbg !1817
  %310 = ptrtoint i32* %arrayidx130.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %310, i32 919, i32 41, i32 9), !dbg !1817
  %311 = load i32, i32* %arrayidx130.i.i, align 4, !dbg !1817
  call void @printDDep(i32 807, i32 919), !dbg !1817
  call void @printCDep(i32 610, i32 919), !dbg !1817
  %xor131.i.i = xor i32 %xor126.i.i, %311, !dbg !1817
  %312 = ptrtoint i32* %t.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %312, i32 923, i32 41, i32 9), !dbg !1817
  %313 = load i32, i32* %t.i.i, align 4, !dbg !1817
  call void @printDDep(i32 837, i32 923), !dbg !1817
  call void @printDDep(i32 911, i32 923), !dbg !1817
  call void @printCDep(i32 610, i32 923), !dbg !1817
  %shr132.i.i = lshr i32 %313, 26, !dbg !1817
  %idxprom134.i.i = zext i32 %shr132.i.i to i64, !dbg !1817
  %arrayidx135.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom134.i.i, !dbg !1817
  %314 = ptrtoint i32* %arrayidx135.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %314, i32 930, i32 41, i32 9), !dbg !1817
  %315 = load i32, i32* %arrayidx135.i.i, align 4, !dbg !1817
  call void @printDDep(i32 807, i32 930), !dbg !1817
  call void @printCDep(i32 610, i32 930), !dbg !1817
  %xor136.i.i = xor i32 %xor131.i.i, %315, !dbg !1817
  %316 = ptrtoint i32* %r.i.i to i64, !dbg !1817
  call void @printLoadAddr(i64 %316, i32 934, i32 41, i32 9), !dbg !1817
  %317 = load i32, i32* %r.i.i, align 4, !dbg !1817
  call void @printDDep(i32 575, i32 934), !dbg !1817
  call void @printDDep(i32 807, i32 934), !dbg !1817
  call void @printCDep(i32 610, i32 934), !dbg !1817
  %xor137.i.i = xor i32 %317, %xor136.i.i, !dbg !1817
  %318 = ptrtoint i32* %r.i.i to i64, !dbg !1817
  call void @printStoreAddr(i64 %318, i32 939, i32 41, i32 9), !dbg !1817
  store i32 %xor137.i.i, i32* %r.i.i, align 4, !dbg !1817
  call void @printDDep(i32 837, i32 939), !dbg !1817
  call void @printDDep(i32 934, i32 939), !dbg !1817
  call void @printCDep(i32 610, i32 939), !dbg !1817
  %319 = ptrtoint i32* %r.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %319, i32 943, i32 42, i32 9), !dbg !1818
  %320 = load i32, i32* %r.i.i, align 4, !dbg !1818
  call void @printDDep(i32 939, i32 943), !dbg !1818
  call void @printDDep(i32 939, i32 943), !dbg !1818
  call void @printCDep(i32 610, i32 943), !dbg !1818
  %321 = ptrtoint i32** %s.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %321, i32 947, i32 42, i32 9), !dbg !1818
  %322 = load i32*, i32** %s.i.i, align 8, !dbg !1818
  call void @printDDep(i32 607, i32 947), !dbg !1818
  call void @printDDep(i32 807, i32 947), !dbg !1818
  call void @printCDep(i32 610, i32 947), !dbg !1818
  %arrayidx138.i.i = getelementptr inbounds i32, i32* %322, i64 4, !dbg !1818
  %323 = ptrtoint i32* %arrayidx138.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %323, i32 952, i32 42, i32 9), !dbg !1818
  %324 = load i32, i32* %arrayidx138.i.i, align 4, !dbg !1818
  call void @printDDep(i32 161, i32 952), !dbg !1818
  call void @printDDep(i32 947, i32 952), !dbg !1818
  call void @printCDep(i32 610, i32 952), !dbg !1818
  %xor139.i.i = xor i32 %320, %324, !dbg !1818
  %325 = ptrtoint i32* %u.i.i to i64, !dbg !1818
  call void @printStoreAddr(i64 %325, i32 957, i32 42, i32 9), !dbg !1818
  store i32 %xor139.i.i, i32* %u.i.i, align 4, !dbg !1818
  call void @printDDep(i32 939, i32 957), !dbg !1818
  call void @printDDep(i32 952, i32 957), !dbg !1818
  call void @printCDep(i32 610, i32 957), !dbg !1818
  %326 = ptrtoint i32* %r.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %326, i32 961, i32 42, i32 9), !dbg !1818
  %327 = load i32, i32* %r.i.i, align 4, !dbg !1818
  call void @printDDep(i32 939, i32 961), !dbg !1818
  call void @printDDep(i32 952, i32 961), !dbg !1818
  call void @printCDep(i32 610, i32 961), !dbg !1818
  %328 = ptrtoint i32** %s.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %328, i32 965, i32 42, i32 9), !dbg !1818
  %329 = load i32*, i32** %s.i.i, align 8, !dbg !1818
  call void @printDDep(i32 607, i32 965), !dbg !1818
  call void @printDDep(i32 952, i32 965), !dbg !1818
  call void @printCDep(i32 610, i32 965), !dbg !1818
  %arrayidx140.i.i = getelementptr inbounds i32, i32* %329, i64 5, !dbg !1818
  %330 = ptrtoint i32* %arrayidx140.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %330, i32 970, i32 42, i32 9), !dbg !1818
  %331 = load i32, i32* %arrayidx140.i.i, align 4, !dbg !1818
  call void @printDDep(i32 161, i32 970), !dbg !1818
  call void @printDDep(i32 965, i32 970), !dbg !1818
  call void @printCDep(i32 610, i32 970), !dbg !1818
  %xor141.i.i = xor i32 %327, %331, !dbg !1818
  %332 = ptrtoint i32* %t.i.i to i64, !dbg !1818
  call void @printStoreAddr(i64 %332, i32 975, i32 42, i32 9), !dbg !1818
  store i32 %xor141.i.i, i32* %t.i.i, align 4, !dbg !1818
  call void @printDDep(i32 957, i32 975), !dbg !1818
  call void @printDDep(i32 970, i32 975), !dbg !1818
  call void @printCDep(i32 610, i32 975), !dbg !1818
  %333 = ptrtoint i32* %t.i.i to i64, !dbg !1733
  call void @printLoadAddr(i64 %333, i32 979, i32 42, i32 9), !dbg !1733
  %334 = load i32, i32* %t.i.i, align 4, !dbg !1733
  call void @printDDep(i32 975, i32 979), !dbg !1733
  call void @printDDep(i32 975, i32 979), !dbg !1733
  call void @printCDep(i32 610, i32 979), !dbg !1733
  %335 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %334) #5, !dbg !1733, !srcloc !106
  %336 = ptrtoint i32* %ret142.i.i to i64, !dbg !1733
  call void @printStoreAddr(i64 %336, i32 984, i32 42, i32 9), !dbg !1733
  store i32 %335, i32* %ret142.i.i, align 4, !dbg !1733
  call void @printDDep(i32 975, i32 984), !dbg !1733
  call void @printDDep(i32 161, i32 984), !dbg !1733
  call void @printCDep(i32 610, i32 984), !dbg !1733
  %337 = ptrtoint i32* %ret142.i.i to i64, !dbg !1733
  call void @printLoadAddr(i64 %337, i32 988, i32 42, i32 9), !dbg !1733
  %338 = load i32, i32* %ret142.i.i, align 4, !dbg !1733
  call void @printDDep(i32 984, i32 988), !dbg !1733
  call void @printDDep(i32 984, i32 988), !dbg !1733
  call void @printCDep(i32 610, i32 988), !dbg !1733
  %339 = ptrtoint i32* %tmp143.i.i to i64, !dbg !1733
  call void @printStoreAddr(i64 %339, i32 992, i32 42, i32 9), !dbg !1733
  store i32 %338, i32* %tmp143.i.i, align 4, !dbg !1733
  call void @printDDep(i32 984, i32 992), !dbg !1733
  call void @printDDep(i32 161, i32 992), !dbg !1733
  call void @printCDep(i32 610, i32 992), !dbg !1733
  %340 = ptrtoint i32* %tmp143.i.i to i64, !dbg !1733
  call void @printLoadAddr(i64 %340, i32 996, i32 42, i32 9), !dbg !1733
  %341 = load i32, i32* %tmp143.i.i, align 4, !dbg !1733
  call void @printDDep(i32 992, i32 996), !dbg !1733
  call void @printDDep(i32 992, i32 996), !dbg !1733
  call void @printCDep(i32 610, i32 996), !dbg !1733
  %342 = ptrtoint i32* %t.i.i to i64, !dbg !1818
  call void @printStoreAddr(i64 %342, i32 1000, i32 42, i32 9), !dbg !1818
  store i32 %341, i32* %t.i.i, align 4, !dbg !1818
  call void @printDDep(i32 992, i32 1000), !dbg !1818
  call void @printDDep(i32 979, i32 1000), !dbg !1818
  call void @printCDep(i32 610, i32 1000), !dbg !1818
  %343 = ptrtoint i32* %u.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %343, i32 1004, i32 42, i32 9), !dbg !1818
  %344 = load i32, i32* %u.i.i, align 4, !dbg !1818
  call void @printDDep(i32 957, i32 1004), !dbg !1818
  call void @printDDep(i32 970, i32 1004), !dbg !1818
  call void @printCDep(i32 610, i32 1004), !dbg !1818
  %shr144.i.i = lshr i32 %344, 2, !dbg !1818
  %and145.i.i = and i32 %shr144.i.i, 63, !dbg !1818
  %idxprom146.i.i = zext i32 %and145.i.i to i64, !dbg !1818
  %arrayidx147.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom146.i.i, !dbg !1818
  %345 = ptrtoint i32* %arrayidx147.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %345, i32 1012, i32 42, i32 9), !dbg !1818
  %346 = load i32, i32* %arrayidx147.i.i, align 4, !dbg !1818
  call void @printDDep(i32 970, i32 1012), !dbg !1818
  call void @printCDep(i32 610, i32 1012), !dbg !1818
  %347 = ptrtoint i32* %u.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %347, i32 1015, i32 42, i32 9), !dbg !1818
  %348 = load i32, i32* %u.i.i, align 4, !dbg !1818
  call void @printDDep(i32 957, i32 1015), !dbg !1818
  call void @printDDep(i32 1004, i32 1015), !dbg !1818
  call void @printCDep(i32 610, i32 1015), !dbg !1818
  %shr148.i.i = lshr i32 %348, 10, !dbg !1818
  %and149.i.i = and i32 %shr148.i.i, 63, !dbg !1818
  %idxprom150.i.i = zext i32 %and149.i.i to i64, !dbg !1818
  %arrayidx151.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom150.i.i, !dbg !1818
  %349 = ptrtoint i32* %arrayidx151.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %349, i32 1023, i32 42, i32 9), !dbg !1818
  %350 = load i32, i32* %arrayidx151.i.i, align 4, !dbg !1818
  call void @printDDep(i32 970, i32 1023), !dbg !1818
  call void @printCDep(i32 610, i32 1023), !dbg !1818
  %xor152.i.i = xor i32 %346, %350, !dbg !1818
  %351 = ptrtoint i32* %u.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %351, i32 1027, i32 42, i32 9), !dbg !1818
  %352 = load i32, i32* %u.i.i, align 4, !dbg !1818
  call void @printDDep(i32 957, i32 1027), !dbg !1818
  call void @printDDep(i32 1015, i32 1027), !dbg !1818
  call void @printCDep(i32 610, i32 1027), !dbg !1818
  %shr153.i.i = lshr i32 %352, 18, !dbg !1818
  %and154.i.i = and i32 %shr153.i.i, 63, !dbg !1818
  %idxprom155.i.i = zext i32 %and154.i.i to i64, !dbg !1818
  %arrayidx156.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom155.i.i, !dbg !1818
  %353 = ptrtoint i32* %arrayidx156.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %353, i32 1035, i32 42, i32 9), !dbg !1818
  %354 = load i32, i32* %arrayidx156.i.i, align 4, !dbg !1818
  call void @printDDep(i32 970, i32 1035), !dbg !1818
  call void @printCDep(i32 610, i32 1035), !dbg !1818
  %xor157.i.i = xor i32 %xor152.i.i, %354, !dbg !1818
  %355 = ptrtoint i32* %u.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %355, i32 1039, i32 42, i32 9), !dbg !1818
  %356 = load i32, i32* %u.i.i, align 4, !dbg !1818
  call void @printDDep(i32 957, i32 1039), !dbg !1818
  call void @printDDep(i32 1027, i32 1039), !dbg !1818
  call void @printCDep(i32 610, i32 1039), !dbg !1818
  %shr158.i.i = lshr i32 %356, 26, !dbg !1818
  %idxprom160.i.i = zext i32 %shr158.i.i to i64, !dbg !1818
  %arrayidx161.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom160.i.i, !dbg !1818
  %357 = ptrtoint i32* %arrayidx161.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %357, i32 1046, i32 42, i32 9), !dbg !1818
  %358 = load i32, i32* %arrayidx161.i.i, align 4, !dbg !1818
  call void @printDDep(i32 970, i32 1046), !dbg !1818
  call void @printCDep(i32 610, i32 1046), !dbg !1818
  %xor162.i.i = xor i32 %xor157.i.i, %358, !dbg !1818
  %359 = ptrtoint i32* %t.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %359, i32 1050, i32 42, i32 9), !dbg !1818
  %360 = load i32, i32* %t.i.i, align 4, !dbg !1818
  call void @printDDep(i32 1000, i32 1050), !dbg !1818
  call void @printDDep(i32 1000, i32 1050), !dbg !1818
  call void @printCDep(i32 610, i32 1050), !dbg !1818
  %shr163.i.i = lshr i32 %360, 2, !dbg !1818
  %and164.i.i = and i32 %shr163.i.i, 63, !dbg !1818
  %idxprom165.i.i = zext i32 %and164.i.i to i64, !dbg !1818
  %arrayidx166.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom165.i.i, !dbg !1818
  %361 = ptrtoint i32* %arrayidx166.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %361, i32 1058, i32 42, i32 9), !dbg !1818
  %362 = load i32, i32* %arrayidx166.i.i, align 4, !dbg !1818
  call void @printDDep(i32 970, i32 1058), !dbg !1818
  call void @printCDep(i32 610, i32 1058), !dbg !1818
  %xor167.i.i = xor i32 %xor162.i.i, %362, !dbg !1818
  %363 = ptrtoint i32* %t.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %363, i32 1062, i32 42, i32 9), !dbg !1818
  %364 = load i32, i32* %t.i.i, align 4, !dbg !1818
  call void @printDDep(i32 1000, i32 1062), !dbg !1818
  call void @printDDep(i32 1050, i32 1062), !dbg !1818
  call void @printCDep(i32 610, i32 1062), !dbg !1818
  %shr168.i.i = lshr i32 %364, 10, !dbg !1818
  %and169.i.i = and i32 %shr168.i.i, 63, !dbg !1818
  %idxprom170.i.i = zext i32 %and169.i.i to i64, !dbg !1818
  %arrayidx171.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom170.i.i, !dbg !1818
  %365 = ptrtoint i32* %arrayidx171.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %365, i32 1070, i32 42, i32 9), !dbg !1818
  %366 = load i32, i32* %arrayidx171.i.i, align 4, !dbg !1818
  call void @printDDep(i32 970, i32 1070), !dbg !1818
  call void @printCDep(i32 610, i32 1070), !dbg !1818
  %xor172.i.i = xor i32 %xor167.i.i, %366, !dbg !1818
  %367 = ptrtoint i32* %t.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %367, i32 1074, i32 42, i32 9), !dbg !1818
  %368 = load i32, i32* %t.i.i, align 4, !dbg !1818
  call void @printDDep(i32 1000, i32 1074), !dbg !1818
  call void @printDDep(i32 1062, i32 1074), !dbg !1818
  call void @printCDep(i32 610, i32 1074), !dbg !1818
  %shr173.i.i = lshr i32 %368, 18, !dbg !1818
  %and174.i.i = and i32 %shr173.i.i, 63, !dbg !1818
  %idxprom175.i.i = zext i32 %and174.i.i to i64, !dbg !1818
  %arrayidx176.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom175.i.i, !dbg !1818
  %369 = ptrtoint i32* %arrayidx176.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %369, i32 1082, i32 42, i32 9), !dbg !1818
  %370 = load i32, i32* %arrayidx176.i.i, align 4, !dbg !1818
  call void @printDDep(i32 970, i32 1082), !dbg !1818
  call void @printCDep(i32 610, i32 1082), !dbg !1818
  %xor177.i.i = xor i32 %xor172.i.i, %370, !dbg !1818
  %371 = ptrtoint i32* %t.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %371, i32 1086, i32 42, i32 9), !dbg !1818
  %372 = load i32, i32* %t.i.i, align 4, !dbg !1818
  call void @printDDep(i32 1000, i32 1086), !dbg !1818
  call void @printDDep(i32 1074, i32 1086), !dbg !1818
  call void @printCDep(i32 610, i32 1086), !dbg !1818
  %shr178.i.i = lshr i32 %372, 26, !dbg !1818
  %idxprom180.i.i = zext i32 %shr178.i.i to i64, !dbg !1818
  %arrayidx181.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom180.i.i, !dbg !1818
  %373 = ptrtoint i32* %arrayidx181.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %373, i32 1093, i32 42, i32 9), !dbg !1818
  %374 = load i32, i32* %arrayidx181.i.i, align 4, !dbg !1818
  call void @printDDep(i32 970, i32 1093), !dbg !1818
  call void @printCDep(i32 610, i32 1093), !dbg !1818
  %xor182.i.i = xor i32 %xor177.i.i, %374, !dbg !1818
  %375 = ptrtoint i32* %l.i.i to i64, !dbg !1818
  call void @printLoadAddr(i64 %375, i32 1097, i32 42, i32 9), !dbg !1818
  %376 = load i32, i32* %l.i.i, align 4, !dbg !1818
  call void @printDDep(i32 776, i32 1097), !dbg !1818
  call void @printDDep(i32 970, i32 1097), !dbg !1818
  call void @printCDep(i32 610, i32 1097), !dbg !1818
  %xor183.i.i = xor i32 %376, %xor182.i.i, !dbg !1818
  %377 = ptrtoint i32* %l.i.i to i64, !dbg !1818
  call void @printStoreAddr(i64 %377, i32 1102, i32 42, i32 9), !dbg !1818
  store i32 %xor183.i.i, i32* %l.i.i, align 4, !dbg !1818
  call void @printDDep(i32 1000, i32 1102), !dbg !1818
  call void @printDDep(i32 1097, i32 1102), !dbg !1818
  call void @printCDep(i32 610, i32 1102), !dbg !1818
  %378 = ptrtoint i32* %l.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %378, i32 1106, i32 43, i32 9), !dbg !1819
  %379 = load i32, i32* %l.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1102, i32 1106), !dbg !1819
  call void @printDDep(i32 1102, i32 1106), !dbg !1819
  call void @printCDep(i32 610, i32 1106), !dbg !1819
  %380 = ptrtoint i32** %s.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %380, i32 1110, i32 43, i32 9), !dbg !1819
  %381 = load i32*, i32** %s.i.i, align 8, !dbg !1819
  call void @printDDep(i32 607, i32 1110), !dbg !1819
  call void @printDDep(i32 970, i32 1110), !dbg !1819
  call void @printCDep(i32 610, i32 1110), !dbg !1819
  %arrayidx184.i.i = getelementptr inbounds i32, i32* %381, i64 6, !dbg !1819
  %382 = ptrtoint i32* %arrayidx184.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %382, i32 1115, i32 43, i32 9), !dbg !1819
  %383 = load i32, i32* %arrayidx184.i.i, align 4, !dbg !1819
  call void @printDDep(i32 161, i32 1115), !dbg !1819
  call void @printDDep(i32 1110, i32 1115), !dbg !1819
  call void @printCDep(i32 610, i32 1115), !dbg !1819
  %xor185.i.i = xor i32 %379, %383, !dbg !1819
  %384 = ptrtoint i32* %u.i.i to i64, !dbg !1819
  call void @printStoreAddr(i64 %384, i32 1120, i32 43, i32 9), !dbg !1819
  store i32 %xor185.i.i, i32* %u.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1102, i32 1120), !dbg !1819
  call void @printDDep(i32 1115, i32 1120), !dbg !1819
  call void @printCDep(i32 610, i32 1120), !dbg !1819
  %385 = ptrtoint i32* %l.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %385, i32 1124, i32 43, i32 9), !dbg !1819
  %386 = load i32, i32* %l.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1102, i32 1124), !dbg !1819
  call void @printDDep(i32 1115, i32 1124), !dbg !1819
  call void @printCDep(i32 610, i32 1124), !dbg !1819
  %387 = ptrtoint i32** %s.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %387, i32 1128, i32 43, i32 9), !dbg !1819
  %388 = load i32*, i32** %s.i.i, align 8, !dbg !1819
  call void @printDDep(i32 607, i32 1128), !dbg !1819
  call void @printDDep(i32 1115, i32 1128), !dbg !1819
  call void @printCDep(i32 610, i32 1128), !dbg !1819
  %arrayidx186.i.i = getelementptr inbounds i32, i32* %388, i64 7, !dbg !1819
  %389 = ptrtoint i32* %arrayidx186.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %389, i32 1133, i32 43, i32 9), !dbg !1819
  %390 = load i32, i32* %arrayidx186.i.i, align 4, !dbg !1819
  call void @printDDep(i32 161, i32 1133), !dbg !1819
  call void @printDDep(i32 1128, i32 1133), !dbg !1819
  call void @printCDep(i32 610, i32 1133), !dbg !1819
  %xor187.i.i = xor i32 %386, %390, !dbg !1819
  %391 = ptrtoint i32* %t.i.i to i64, !dbg !1819
  call void @printStoreAddr(i64 %391, i32 1138, i32 43, i32 9), !dbg !1819
  store i32 %xor187.i.i, i32* %t.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1120, i32 1138), !dbg !1819
  call void @printDDep(i32 1133, i32 1138), !dbg !1819
  call void @printCDep(i32 610, i32 1138), !dbg !1819
  %392 = ptrtoint i32* %t.i.i to i64, !dbg !1734
  call void @printLoadAddr(i64 %392, i32 1142, i32 43, i32 9), !dbg !1734
  %393 = load i32, i32* %t.i.i, align 4, !dbg !1734
  call void @printDDep(i32 1138, i32 1142), !dbg !1734
  call void @printDDep(i32 1138, i32 1142), !dbg !1734
  call void @printCDep(i32 610, i32 1142), !dbg !1734
  %394 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %393) #5, !dbg !1734, !srcloc !112
  %395 = ptrtoint i32* %ret188.i.i to i64, !dbg !1734
  call void @printStoreAddr(i64 %395, i32 1147, i32 43, i32 9), !dbg !1734
  store i32 %394, i32* %ret188.i.i, align 4, !dbg !1734
  call void @printDDep(i32 1138, i32 1147), !dbg !1734
  call void @printDDep(i32 161, i32 1147), !dbg !1734
  call void @printCDep(i32 610, i32 1147), !dbg !1734
  %396 = ptrtoint i32* %ret188.i.i to i64, !dbg !1734
  call void @printLoadAddr(i64 %396, i32 1151, i32 43, i32 9), !dbg !1734
  %397 = load i32, i32* %ret188.i.i, align 4, !dbg !1734
  call void @printDDep(i32 1147, i32 1151), !dbg !1734
  call void @printDDep(i32 1147, i32 1151), !dbg !1734
  call void @printCDep(i32 610, i32 1151), !dbg !1734
  %398 = ptrtoint i32* %tmp189.i.i to i64, !dbg !1734
  call void @printStoreAddr(i64 %398, i32 1155, i32 43, i32 9), !dbg !1734
  store i32 %397, i32* %tmp189.i.i, align 4, !dbg !1734
  call void @printDDep(i32 1147, i32 1155), !dbg !1734
  call void @printDDep(i32 161, i32 1155), !dbg !1734
  call void @printCDep(i32 610, i32 1155), !dbg !1734
  %399 = ptrtoint i32* %tmp189.i.i to i64, !dbg !1734
  call void @printLoadAddr(i64 %399, i32 1159, i32 43, i32 9), !dbg !1734
  %400 = load i32, i32* %tmp189.i.i, align 4, !dbg !1734
  call void @printDDep(i32 1155, i32 1159), !dbg !1734
  call void @printDDep(i32 1155, i32 1159), !dbg !1734
  call void @printCDep(i32 610, i32 1159), !dbg !1734
  %401 = ptrtoint i32* %t.i.i to i64, !dbg !1819
  call void @printStoreAddr(i64 %401, i32 1163, i32 43, i32 9), !dbg !1819
  store i32 %400, i32* %t.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1155, i32 1163), !dbg !1819
  call void @printDDep(i32 1142, i32 1163), !dbg !1819
  call void @printCDep(i32 610, i32 1163), !dbg !1819
  %402 = ptrtoint i32* %u.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %402, i32 1167, i32 43, i32 9), !dbg !1819
  %403 = load i32, i32* %u.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1120, i32 1167), !dbg !1819
  call void @printDDep(i32 1133, i32 1167), !dbg !1819
  call void @printCDep(i32 610, i32 1167), !dbg !1819
  %shr190.i.i = lshr i32 %403, 2, !dbg !1819
  %and191.i.i = and i32 %shr190.i.i, 63, !dbg !1819
  %idxprom192.i.i = zext i32 %and191.i.i to i64, !dbg !1819
  %arrayidx193.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom192.i.i, !dbg !1819
  %404 = ptrtoint i32* %arrayidx193.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %404, i32 1175, i32 43, i32 9), !dbg !1819
  %405 = load i32, i32* %arrayidx193.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1133, i32 1175), !dbg !1819
  call void @printCDep(i32 610, i32 1175), !dbg !1819
  %406 = ptrtoint i32* %u.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %406, i32 1178, i32 43, i32 9), !dbg !1819
  %407 = load i32, i32* %u.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1120, i32 1178), !dbg !1819
  call void @printDDep(i32 1167, i32 1178), !dbg !1819
  call void @printCDep(i32 610, i32 1178), !dbg !1819
  %shr194.i.i = lshr i32 %407, 10, !dbg !1819
  %and195.i.i = and i32 %shr194.i.i, 63, !dbg !1819
  %idxprom196.i.i = zext i32 %and195.i.i to i64, !dbg !1819
  %arrayidx197.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom196.i.i, !dbg !1819
  %408 = ptrtoint i32* %arrayidx197.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %408, i32 1186, i32 43, i32 9), !dbg !1819
  %409 = load i32, i32* %arrayidx197.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1133, i32 1186), !dbg !1819
  call void @printCDep(i32 610, i32 1186), !dbg !1819
  %xor198.i.i = xor i32 %405, %409, !dbg !1819
  %410 = ptrtoint i32* %u.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %410, i32 1190, i32 43, i32 9), !dbg !1819
  %411 = load i32, i32* %u.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1120, i32 1190), !dbg !1819
  call void @printDDep(i32 1178, i32 1190), !dbg !1819
  call void @printCDep(i32 610, i32 1190), !dbg !1819
  %shr199.i.i = lshr i32 %411, 18, !dbg !1819
  %and200.i.i = and i32 %shr199.i.i, 63, !dbg !1819
  %idxprom201.i.i = zext i32 %and200.i.i to i64, !dbg !1819
  %arrayidx202.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom201.i.i, !dbg !1819
  %412 = ptrtoint i32* %arrayidx202.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %412, i32 1198, i32 43, i32 9), !dbg !1819
  %413 = load i32, i32* %arrayidx202.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1133, i32 1198), !dbg !1819
  call void @printCDep(i32 610, i32 1198), !dbg !1819
  %xor203.i.i = xor i32 %xor198.i.i, %413, !dbg !1819
  %414 = ptrtoint i32* %u.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %414, i32 1202, i32 43, i32 9), !dbg !1819
  %415 = load i32, i32* %u.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1120, i32 1202), !dbg !1819
  call void @printDDep(i32 1190, i32 1202), !dbg !1819
  call void @printCDep(i32 610, i32 1202), !dbg !1819
  %shr204.i.i = lshr i32 %415, 26, !dbg !1819
  %idxprom206.i.i = zext i32 %shr204.i.i to i64, !dbg !1819
  %arrayidx207.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom206.i.i, !dbg !1819
  %416 = ptrtoint i32* %arrayidx207.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %416, i32 1209, i32 43, i32 9), !dbg !1819
  %417 = load i32, i32* %arrayidx207.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1133, i32 1209), !dbg !1819
  call void @printCDep(i32 610, i32 1209), !dbg !1819
  %xor208.i.i = xor i32 %xor203.i.i, %417, !dbg !1819
  %418 = ptrtoint i32* %t.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %418, i32 1213, i32 43, i32 9), !dbg !1819
  %419 = load i32, i32* %t.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1163, i32 1213), !dbg !1819
  call void @printDDep(i32 1163, i32 1213), !dbg !1819
  call void @printCDep(i32 610, i32 1213), !dbg !1819
  %shr209.i.i = lshr i32 %419, 2, !dbg !1819
  %and210.i.i = and i32 %shr209.i.i, 63, !dbg !1819
  %idxprom211.i.i = zext i32 %and210.i.i to i64, !dbg !1819
  %arrayidx212.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom211.i.i, !dbg !1819
  %420 = ptrtoint i32* %arrayidx212.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %420, i32 1221, i32 43, i32 9), !dbg !1819
  %421 = load i32, i32* %arrayidx212.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1133, i32 1221), !dbg !1819
  call void @printCDep(i32 610, i32 1221), !dbg !1819
  %xor213.i.i = xor i32 %xor208.i.i, %421, !dbg !1819
  %422 = ptrtoint i32* %t.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %422, i32 1225, i32 43, i32 9), !dbg !1819
  %423 = load i32, i32* %t.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1163, i32 1225), !dbg !1819
  call void @printDDep(i32 1213, i32 1225), !dbg !1819
  call void @printCDep(i32 610, i32 1225), !dbg !1819
  %shr214.i.i = lshr i32 %423, 10, !dbg !1819
  %and215.i.i = and i32 %shr214.i.i, 63, !dbg !1819
  %idxprom216.i.i = zext i32 %and215.i.i to i64, !dbg !1819
  %arrayidx217.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom216.i.i, !dbg !1819
  %424 = ptrtoint i32* %arrayidx217.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %424, i32 1233, i32 43, i32 9), !dbg !1819
  %425 = load i32, i32* %arrayidx217.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1133, i32 1233), !dbg !1819
  call void @printCDep(i32 610, i32 1233), !dbg !1819
  %xor218.i.i = xor i32 %xor213.i.i, %425, !dbg !1819
  %426 = ptrtoint i32* %t.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %426, i32 1237, i32 43, i32 9), !dbg !1819
  %427 = load i32, i32* %t.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1163, i32 1237), !dbg !1819
  call void @printDDep(i32 1225, i32 1237), !dbg !1819
  call void @printCDep(i32 610, i32 1237), !dbg !1819
  %shr219.i.i = lshr i32 %427, 18, !dbg !1819
  %and220.i.i = and i32 %shr219.i.i, 63, !dbg !1819
  %idxprom221.i.i = zext i32 %and220.i.i to i64, !dbg !1819
  %arrayidx222.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom221.i.i, !dbg !1819
  %428 = ptrtoint i32* %arrayidx222.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %428, i32 1245, i32 43, i32 9), !dbg !1819
  %429 = load i32, i32* %arrayidx222.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1133, i32 1245), !dbg !1819
  call void @printCDep(i32 610, i32 1245), !dbg !1819
  %xor223.i.i = xor i32 %xor218.i.i, %429, !dbg !1819
  %430 = ptrtoint i32* %t.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %430, i32 1249, i32 43, i32 9), !dbg !1819
  %431 = load i32, i32* %t.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1163, i32 1249), !dbg !1819
  call void @printDDep(i32 1237, i32 1249), !dbg !1819
  call void @printCDep(i32 610, i32 1249), !dbg !1819
  %shr224.i.i = lshr i32 %431, 26, !dbg !1819
  %idxprom226.i.i = zext i32 %shr224.i.i to i64, !dbg !1819
  %arrayidx227.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom226.i.i, !dbg !1819
  %432 = ptrtoint i32* %arrayidx227.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %432, i32 1256, i32 43, i32 9), !dbg !1819
  %433 = load i32, i32* %arrayidx227.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1133, i32 1256), !dbg !1819
  call void @printCDep(i32 610, i32 1256), !dbg !1819
  %xor228.i.i = xor i32 %xor223.i.i, %433, !dbg !1819
  %434 = ptrtoint i32* %r.i.i to i64, !dbg !1819
  call void @printLoadAddr(i64 %434, i32 1260, i32 43, i32 9), !dbg !1819
  %435 = load i32, i32* %r.i.i, align 4, !dbg !1819
  call void @printDDep(i32 939, i32 1260), !dbg !1819
  call void @printDDep(i32 1133, i32 1260), !dbg !1819
  call void @printCDep(i32 610, i32 1260), !dbg !1819
  %xor229.i.i = xor i32 %435, %xor228.i.i, !dbg !1819
  %436 = ptrtoint i32* %r.i.i to i64, !dbg !1819
  call void @printStoreAddr(i64 %436, i32 1265, i32 43, i32 9), !dbg !1819
  store i32 %xor229.i.i, i32* %r.i.i, align 4, !dbg !1819
  call void @printDDep(i32 1163, i32 1265), !dbg !1819
  call void @printDDep(i32 1260, i32 1265), !dbg !1819
  call void @printCDep(i32 610, i32 1265), !dbg !1819
  %437 = ptrtoint i32* %r.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %437, i32 1269, i32 44, i32 9), !dbg !1820
  %438 = load i32, i32* %r.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1265, i32 1269), !dbg !1820
  call void @printDDep(i32 1265, i32 1269), !dbg !1820
  call void @printCDep(i32 610, i32 1269), !dbg !1820
  %439 = ptrtoint i32** %s.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %439, i32 1273, i32 44, i32 9), !dbg !1820
  %440 = load i32*, i32** %s.i.i, align 8, !dbg !1820
  call void @printDDep(i32 607, i32 1273), !dbg !1820
  call void @printDDep(i32 1133, i32 1273), !dbg !1820
  call void @printCDep(i32 610, i32 1273), !dbg !1820
  %arrayidx230.i.i = getelementptr inbounds i32, i32* %440, i64 8, !dbg !1820
  %441 = ptrtoint i32* %arrayidx230.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %441, i32 1278, i32 44, i32 9), !dbg !1820
  %442 = load i32, i32* %arrayidx230.i.i, align 4, !dbg !1820
  call void @printDDep(i32 161, i32 1278), !dbg !1820
  call void @printDDep(i32 1273, i32 1278), !dbg !1820
  call void @printCDep(i32 610, i32 1278), !dbg !1820
  %xor231.i.i = xor i32 %438, %442, !dbg !1820
  %443 = ptrtoint i32* %u.i.i to i64, !dbg !1820
  call void @printStoreAddr(i64 %443, i32 1283, i32 44, i32 9), !dbg !1820
  store i32 %xor231.i.i, i32* %u.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1265, i32 1283), !dbg !1820
  call void @printDDep(i32 1278, i32 1283), !dbg !1820
  call void @printCDep(i32 610, i32 1283), !dbg !1820
  %444 = ptrtoint i32* %r.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %444, i32 1287, i32 44, i32 9), !dbg !1820
  %445 = load i32, i32* %r.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1265, i32 1287), !dbg !1820
  call void @printDDep(i32 1278, i32 1287), !dbg !1820
  call void @printCDep(i32 610, i32 1287), !dbg !1820
  %446 = ptrtoint i32** %s.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %446, i32 1291, i32 44, i32 9), !dbg !1820
  %447 = load i32*, i32** %s.i.i, align 8, !dbg !1820
  call void @printDDep(i32 607, i32 1291), !dbg !1820
  call void @printDDep(i32 1278, i32 1291), !dbg !1820
  call void @printCDep(i32 610, i32 1291), !dbg !1820
  %arrayidx232.i.i = getelementptr inbounds i32, i32* %447, i64 9, !dbg !1820
  %448 = ptrtoint i32* %arrayidx232.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %448, i32 1296, i32 44, i32 9), !dbg !1820
  %449 = load i32, i32* %arrayidx232.i.i, align 4, !dbg !1820
  call void @printDDep(i32 161, i32 1296), !dbg !1820
  call void @printDDep(i32 1291, i32 1296), !dbg !1820
  call void @printCDep(i32 610, i32 1296), !dbg !1820
  %xor233.i.i = xor i32 %445, %449, !dbg !1820
  %450 = ptrtoint i32* %t.i.i to i64, !dbg !1820
  call void @printStoreAddr(i64 %450, i32 1301, i32 44, i32 9), !dbg !1820
  store i32 %xor233.i.i, i32* %t.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1283, i32 1301), !dbg !1820
  call void @printDDep(i32 1296, i32 1301), !dbg !1820
  call void @printCDep(i32 610, i32 1301), !dbg !1820
  %451 = ptrtoint i32* %t.i.i to i64, !dbg !1735
  call void @printLoadAddr(i64 %451, i32 1305, i32 44, i32 9), !dbg !1735
  %452 = load i32, i32* %t.i.i, align 4, !dbg !1735
  call void @printDDep(i32 1301, i32 1305), !dbg !1735
  call void @printDDep(i32 1301, i32 1305), !dbg !1735
  call void @printCDep(i32 610, i32 1305), !dbg !1735
  %453 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %452) #5, !dbg !1735, !srcloc !118
  %454 = ptrtoint i32* %ret234.i.i to i64, !dbg !1735
  call void @printStoreAddr(i64 %454, i32 1310, i32 44, i32 9), !dbg !1735
  store i32 %453, i32* %ret234.i.i, align 4, !dbg !1735
  call void @printDDep(i32 1301, i32 1310), !dbg !1735
  call void @printDDep(i32 161, i32 1310), !dbg !1735
  call void @printCDep(i32 610, i32 1310), !dbg !1735
  %455 = ptrtoint i32* %ret234.i.i to i64, !dbg !1735
  call void @printLoadAddr(i64 %455, i32 1314, i32 44, i32 9), !dbg !1735
  %456 = load i32, i32* %ret234.i.i, align 4, !dbg !1735
  call void @printDDep(i32 1310, i32 1314), !dbg !1735
  call void @printDDep(i32 1310, i32 1314), !dbg !1735
  call void @printCDep(i32 610, i32 1314), !dbg !1735
  %457 = ptrtoint i32* %tmp235.i.i to i64, !dbg !1735
  call void @printStoreAddr(i64 %457, i32 1318, i32 44, i32 9), !dbg !1735
  store i32 %456, i32* %tmp235.i.i, align 4, !dbg !1735
  call void @printDDep(i32 1310, i32 1318), !dbg !1735
  call void @printDDep(i32 161, i32 1318), !dbg !1735
  call void @printCDep(i32 610, i32 1318), !dbg !1735
  %458 = ptrtoint i32* %tmp235.i.i to i64, !dbg !1735
  call void @printLoadAddr(i64 %458, i32 1322, i32 44, i32 9), !dbg !1735
  %459 = load i32, i32* %tmp235.i.i, align 4, !dbg !1735
  call void @printDDep(i32 1318, i32 1322), !dbg !1735
  call void @printDDep(i32 1318, i32 1322), !dbg !1735
  call void @printCDep(i32 610, i32 1322), !dbg !1735
  %460 = ptrtoint i32* %t.i.i to i64, !dbg !1820
  call void @printStoreAddr(i64 %460, i32 1326, i32 44, i32 9), !dbg !1820
  store i32 %459, i32* %t.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1318, i32 1326), !dbg !1820
  call void @printDDep(i32 1305, i32 1326), !dbg !1820
  call void @printCDep(i32 610, i32 1326), !dbg !1820
  %461 = ptrtoint i32* %u.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %461, i32 1330, i32 44, i32 9), !dbg !1820
  %462 = load i32, i32* %u.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1283, i32 1330), !dbg !1820
  call void @printDDep(i32 1296, i32 1330), !dbg !1820
  call void @printCDep(i32 610, i32 1330), !dbg !1820
  %shr236.i.i = lshr i32 %462, 2, !dbg !1820
  %and237.i.i = and i32 %shr236.i.i, 63, !dbg !1820
  %idxprom238.i.i = zext i32 %and237.i.i to i64, !dbg !1820
  %arrayidx239.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom238.i.i, !dbg !1820
  %463 = ptrtoint i32* %arrayidx239.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %463, i32 1338, i32 44, i32 9), !dbg !1820
  %464 = load i32, i32* %arrayidx239.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1296, i32 1338), !dbg !1820
  call void @printCDep(i32 610, i32 1338), !dbg !1820
  %465 = ptrtoint i32* %u.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %465, i32 1341, i32 44, i32 9), !dbg !1820
  %466 = load i32, i32* %u.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1283, i32 1341), !dbg !1820
  call void @printDDep(i32 1330, i32 1341), !dbg !1820
  call void @printCDep(i32 610, i32 1341), !dbg !1820
  %shr240.i.i = lshr i32 %466, 10, !dbg !1820
  %and241.i.i = and i32 %shr240.i.i, 63, !dbg !1820
  %idxprom242.i.i = zext i32 %and241.i.i to i64, !dbg !1820
  %arrayidx243.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom242.i.i, !dbg !1820
  %467 = ptrtoint i32* %arrayidx243.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %467, i32 1349, i32 44, i32 9), !dbg !1820
  %468 = load i32, i32* %arrayidx243.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1296, i32 1349), !dbg !1820
  call void @printCDep(i32 610, i32 1349), !dbg !1820
  %xor244.i.i = xor i32 %464, %468, !dbg !1820
  %469 = ptrtoint i32* %u.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %469, i32 1353, i32 44, i32 9), !dbg !1820
  %470 = load i32, i32* %u.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1283, i32 1353), !dbg !1820
  call void @printDDep(i32 1341, i32 1353), !dbg !1820
  call void @printCDep(i32 610, i32 1353), !dbg !1820
  %shr245.i.i = lshr i32 %470, 18, !dbg !1820
  %and246.i.i = and i32 %shr245.i.i, 63, !dbg !1820
  %idxprom247.i.i = zext i32 %and246.i.i to i64, !dbg !1820
  %arrayidx248.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom247.i.i, !dbg !1820
  %471 = ptrtoint i32* %arrayidx248.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %471, i32 1361, i32 44, i32 9), !dbg !1820
  %472 = load i32, i32* %arrayidx248.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1296, i32 1361), !dbg !1820
  call void @printCDep(i32 610, i32 1361), !dbg !1820
  %xor249.i.i = xor i32 %xor244.i.i, %472, !dbg !1820
  %473 = ptrtoint i32* %u.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %473, i32 1365, i32 44, i32 9), !dbg !1820
  %474 = load i32, i32* %u.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1283, i32 1365), !dbg !1820
  call void @printDDep(i32 1353, i32 1365), !dbg !1820
  call void @printCDep(i32 610, i32 1365), !dbg !1820
  %shr250.i.i = lshr i32 %474, 26, !dbg !1820
  %idxprom252.i.i = zext i32 %shr250.i.i to i64, !dbg !1820
  %arrayidx253.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom252.i.i, !dbg !1820
  %475 = ptrtoint i32* %arrayidx253.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %475, i32 1372, i32 44, i32 9), !dbg !1820
  %476 = load i32, i32* %arrayidx253.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1296, i32 1372), !dbg !1820
  call void @printCDep(i32 610, i32 1372), !dbg !1820
  %xor254.i.i = xor i32 %xor249.i.i, %476, !dbg !1820
  %477 = ptrtoint i32* %t.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %477, i32 1376, i32 44, i32 9), !dbg !1820
  %478 = load i32, i32* %t.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1326, i32 1376), !dbg !1820
  call void @printDDep(i32 1326, i32 1376), !dbg !1820
  call void @printCDep(i32 610, i32 1376), !dbg !1820
  %shr255.i.i = lshr i32 %478, 2, !dbg !1820
  %and256.i.i = and i32 %shr255.i.i, 63, !dbg !1820
  %idxprom257.i.i = zext i32 %and256.i.i to i64, !dbg !1820
  %arrayidx258.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom257.i.i, !dbg !1820
  %479 = ptrtoint i32* %arrayidx258.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %479, i32 1384, i32 44, i32 9), !dbg !1820
  %480 = load i32, i32* %arrayidx258.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1296, i32 1384), !dbg !1820
  call void @printCDep(i32 610, i32 1384), !dbg !1820
  %xor259.i.i = xor i32 %xor254.i.i, %480, !dbg !1820
  %481 = ptrtoint i32* %t.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %481, i32 1388, i32 44, i32 9), !dbg !1820
  %482 = load i32, i32* %t.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1326, i32 1388), !dbg !1820
  call void @printDDep(i32 1376, i32 1388), !dbg !1820
  call void @printCDep(i32 610, i32 1388), !dbg !1820
  %shr260.i.i = lshr i32 %482, 10, !dbg !1820
  %and261.i.i = and i32 %shr260.i.i, 63, !dbg !1820
  %idxprom262.i.i = zext i32 %and261.i.i to i64, !dbg !1820
  %arrayidx263.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom262.i.i, !dbg !1820
  %483 = ptrtoint i32* %arrayidx263.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %483, i32 1396, i32 44, i32 9), !dbg !1820
  %484 = load i32, i32* %arrayidx263.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1296, i32 1396), !dbg !1820
  call void @printCDep(i32 610, i32 1396), !dbg !1820
  %xor264.i.i = xor i32 %xor259.i.i, %484, !dbg !1820
  %485 = ptrtoint i32* %t.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %485, i32 1400, i32 44, i32 9), !dbg !1820
  %486 = load i32, i32* %t.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1326, i32 1400), !dbg !1820
  call void @printDDep(i32 1388, i32 1400), !dbg !1820
  call void @printCDep(i32 610, i32 1400), !dbg !1820
  %shr265.i.i = lshr i32 %486, 18, !dbg !1820
  %and266.i.i = and i32 %shr265.i.i, 63, !dbg !1820
  %idxprom267.i.i = zext i32 %and266.i.i to i64, !dbg !1820
  %arrayidx268.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom267.i.i, !dbg !1820
  %487 = ptrtoint i32* %arrayidx268.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %487, i32 1408, i32 44, i32 9), !dbg !1820
  %488 = load i32, i32* %arrayidx268.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1296, i32 1408), !dbg !1820
  call void @printCDep(i32 610, i32 1408), !dbg !1820
  %xor269.i.i = xor i32 %xor264.i.i, %488, !dbg !1820
  %489 = ptrtoint i32* %t.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %489, i32 1412, i32 44, i32 9), !dbg !1820
  %490 = load i32, i32* %t.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1326, i32 1412), !dbg !1820
  call void @printDDep(i32 1400, i32 1412), !dbg !1820
  call void @printCDep(i32 610, i32 1412), !dbg !1820
  %shr270.i.i = lshr i32 %490, 26, !dbg !1820
  %idxprom272.i.i = zext i32 %shr270.i.i to i64, !dbg !1820
  %arrayidx273.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom272.i.i, !dbg !1820
  %491 = ptrtoint i32* %arrayidx273.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %491, i32 1419, i32 44, i32 9), !dbg !1820
  %492 = load i32, i32* %arrayidx273.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1296, i32 1419), !dbg !1820
  call void @printCDep(i32 610, i32 1419), !dbg !1820
  %xor274.i.i = xor i32 %xor269.i.i, %492, !dbg !1820
  %493 = ptrtoint i32* %l.i.i to i64, !dbg !1820
  call void @printLoadAddr(i64 %493, i32 1423, i32 44, i32 9), !dbg !1820
  %494 = load i32, i32* %l.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1102, i32 1423), !dbg !1820
  call void @printDDep(i32 1296, i32 1423), !dbg !1820
  call void @printCDep(i32 610, i32 1423), !dbg !1820
  %xor275.i.i = xor i32 %494, %xor274.i.i, !dbg !1820
  %495 = ptrtoint i32* %l.i.i to i64, !dbg !1820
  call void @printStoreAddr(i64 %495, i32 1428, i32 44, i32 9), !dbg !1820
  store i32 %xor275.i.i, i32* %l.i.i, align 4, !dbg !1820
  call void @printDDep(i32 1326, i32 1428), !dbg !1820
  call void @printDDep(i32 1423, i32 1428), !dbg !1820
  call void @printCDep(i32 610, i32 1428), !dbg !1820
  %496 = ptrtoint i32* %l.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %496, i32 1432, i32 45, i32 9), !dbg !1821
  %497 = load i32, i32* %l.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1428, i32 1432), !dbg !1821
  call void @printDDep(i32 1428, i32 1432), !dbg !1821
  call void @printCDep(i32 610, i32 1432), !dbg !1821
  %498 = ptrtoint i32** %s.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %498, i32 1436, i32 45, i32 9), !dbg !1821
  %499 = load i32*, i32** %s.i.i, align 8, !dbg !1821
  call void @printDDep(i32 607, i32 1436), !dbg !1821
  call void @printDDep(i32 1296, i32 1436), !dbg !1821
  call void @printCDep(i32 610, i32 1436), !dbg !1821
  %arrayidx276.i.i = getelementptr inbounds i32, i32* %499, i64 10, !dbg !1821
  %500 = ptrtoint i32* %arrayidx276.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %500, i32 1441, i32 45, i32 9), !dbg !1821
  %501 = load i32, i32* %arrayidx276.i.i, align 4, !dbg !1821
  call void @printDDep(i32 161, i32 1441), !dbg !1821
  call void @printDDep(i32 1436, i32 1441), !dbg !1821
  call void @printCDep(i32 610, i32 1441), !dbg !1821
  %xor277.i.i = xor i32 %497, %501, !dbg !1821
  %502 = ptrtoint i32* %u.i.i to i64, !dbg !1821
  call void @printStoreAddr(i64 %502, i32 1446, i32 45, i32 9), !dbg !1821
  store i32 %xor277.i.i, i32* %u.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1428, i32 1446), !dbg !1821
  call void @printDDep(i32 1441, i32 1446), !dbg !1821
  call void @printCDep(i32 610, i32 1446), !dbg !1821
  %503 = ptrtoint i32* %l.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %503, i32 1450, i32 45, i32 9), !dbg !1821
  %504 = load i32, i32* %l.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1428, i32 1450), !dbg !1821
  call void @printDDep(i32 1441, i32 1450), !dbg !1821
  call void @printCDep(i32 610, i32 1450), !dbg !1821
  %505 = ptrtoint i32** %s.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %505, i32 1454, i32 45, i32 9), !dbg !1821
  %506 = load i32*, i32** %s.i.i, align 8, !dbg !1821
  call void @printDDep(i32 607, i32 1454), !dbg !1821
  call void @printDDep(i32 1441, i32 1454), !dbg !1821
  call void @printCDep(i32 610, i32 1454), !dbg !1821
  %arrayidx278.i.i = getelementptr inbounds i32, i32* %506, i64 11, !dbg !1821
  %507 = ptrtoint i32* %arrayidx278.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %507, i32 1459, i32 45, i32 9), !dbg !1821
  %508 = load i32, i32* %arrayidx278.i.i, align 4, !dbg !1821
  call void @printDDep(i32 161, i32 1459), !dbg !1821
  call void @printDDep(i32 1454, i32 1459), !dbg !1821
  call void @printCDep(i32 610, i32 1459), !dbg !1821
  %xor279.i.i = xor i32 %504, %508, !dbg !1821
  %509 = ptrtoint i32* %t.i.i to i64, !dbg !1821
  call void @printStoreAddr(i64 %509, i32 1464, i32 45, i32 9), !dbg !1821
  store i32 %xor279.i.i, i32* %t.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1446, i32 1464), !dbg !1821
  call void @printDDep(i32 1459, i32 1464), !dbg !1821
  call void @printCDep(i32 610, i32 1464), !dbg !1821
  %510 = ptrtoint i32* %t.i.i to i64, !dbg !1736
  call void @printLoadAddr(i64 %510, i32 1468, i32 45, i32 9), !dbg !1736
  %511 = load i32, i32* %t.i.i, align 4, !dbg !1736
  call void @printDDep(i32 1464, i32 1468), !dbg !1736
  call void @printDDep(i32 1464, i32 1468), !dbg !1736
  call void @printCDep(i32 610, i32 1468), !dbg !1736
  %512 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %511) #5, !dbg !1736, !srcloc !124
  %513 = ptrtoint i32* %ret280.i.i to i64, !dbg !1736
  call void @printStoreAddr(i64 %513, i32 1473, i32 45, i32 9), !dbg !1736
  store i32 %512, i32* %ret280.i.i, align 4, !dbg !1736
  call void @printDDep(i32 1464, i32 1473), !dbg !1736
  call void @printDDep(i32 161, i32 1473), !dbg !1736
  call void @printCDep(i32 610, i32 1473), !dbg !1736
  %514 = ptrtoint i32* %ret280.i.i to i64, !dbg !1736
  call void @printLoadAddr(i64 %514, i32 1477, i32 45, i32 9), !dbg !1736
  %515 = load i32, i32* %ret280.i.i, align 4, !dbg !1736
  call void @printDDep(i32 1473, i32 1477), !dbg !1736
  call void @printDDep(i32 1473, i32 1477), !dbg !1736
  call void @printCDep(i32 610, i32 1477), !dbg !1736
  %516 = ptrtoint i32* %tmp281.i.i to i64, !dbg !1736
  call void @printStoreAddr(i64 %516, i32 1481, i32 45, i32 9), !dbg !1736
  store i32 %515, i32* %tmp281.i.i, align 4, !dbg !1736
  call void @printDDep(i32 1473, i32 1481), !dbg !1736
  call void @printDDep(i32 161, i32 1481), !dbg !1736
  call void @printCDep(i32 610, i32 1481), !dbg !1736
  %517 = ptrtoint i32* %tmp281.i.i to i64, !dbg !1736
  call void @printLoadAddr(i64 %517, i32 1485, i32 45, i32 9), !dbg !1736
  %518 = load i32, i32* %tmp281.i.i, align 4, !dbg !1736
  call void @printDDep(i32 1481, i32 1485), !dbg !1736
  call void @printDDep(i32 1481, i32 1485), !dbg !1736
  call void @printCDep(i32 610, i32 1485), !dbg !1736
  %519 = ptrtoint i32* %t.i.i to i64, !dbg !1821
  call void @printStoreAddr(i64 %519, i32 1489, i32 45, i32 9), !dbg !1821
  store i32 %518, i32* %t.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1481, i32 1489), !dbg !1821
  call void @printDDep(i32 1468, i32 1489), !dbg !1821
  call void @printCDep(i32 610, i32 1489), !dbg !1821
  %520 = ptrtoint i32* %u.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %520, i32 1493, i32 45, i32 9), !dbg !1821
  %521 = load i32, i32* %u.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1446, i32 1493), !dbg !1821
  call void @printDDep(i32 1459, i32 1493), !dbg !1821
  call void @printCDep(i32 610, i32 1493), !dbg !1821
  %shr282.i.i = lshr i32 %521, 2, !dbg !1821
  %and283.i.i = and i32 %shr282.i.i, 63, !dbg !1821
  %idxprom284.i.i = zext i32 %and283.i.i to i64, !dbg !1821
  %arrayidx285.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom284.i.i, !dbg !1821
  %522 = ptrtoint i32* %arrayidx285.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %522, i32 1501, i32 45, i32 9), !dbg !1821
  %523 = load i32, i32* %arrayidx285.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1459, i32 1501), !dbg !1821
  call void @printCDep(i32 610, i32 1501), !dbg !1821
  %524 = ptrtoint i32* %u.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %524, i32 1504, i32 45, i32 9), !dbg !1821
  %525 = load i32, i32* %u.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1446, i32 1504), !dbg !1821
  call void @printDDep(i32 1493, i32 1504), !dbg !1821
  call void @printCDep(i32 610, i32 1504), !dbg !1821
  %shr286.i.i = lshr i32 %525, 10, !dbg !1821
  %and287.i.i = and i32 %shr286.i.i, 63, !dbg !1821
  %idxprom288.i.i = zext i32 %and287.i.i to i64, !dbg !1821
  %arrayidx289.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom288.i.i, !dbg !1821
  %526 = ptrtoint i32* %arrayidx289.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %526, i32 1512, i32 45, i32 9), !dbg !1821
  %527 = load i32, i32* %arrayidx289.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1459, i32 1512), !dbg !1821
  call void @printCDep(i32 610, i32 1512), !dbg !1821
  %xor290.i.i = xor i32 %523, %527, !dbg !1821
  %528 = ptrtoint i32* %u.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %528, i32 1516, i32 45, i32 9), !dbg !1821
  %529 = load i32, i32* %u.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1446, i32 1516), !dbg !1821
  call void @printDDep(i32 1504, i32 1516), !dbg !1821
  call void @printCDep(i32 610, i32 1516), !dbg !1821
  %shr291.i.i = lshr i32 %529, 18, !dbg !1821
  %and292.i.i = and i32 %shr291.i.i, 63, !dbg !1821
  %idxprom293.i.i = zext i32 %and292.i.i to i64, !dbg !1821
  %arrayidx294.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom293.i.i, !dbg !1821
  %530 = ptrtoint i32* %arrayidx294.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %530, i32 1524, i32 45, i32 9), !dbg !1821
  %531 = load i32, i32* %arrayidx294.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1459, i32 1524), !dbg !1821
  call void @printCDep(i32 610, i32 1524), !dbg !1821
  %xor295.i.i = xor i32 %xor290.i.i, %531, !dbg !1821
  %532 = ptrtoint i32* %u.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %532, i32 1528, i32 45, i32 9), !dbg !1821
  %533 = load i32, i32* %u.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1446, i32 1528), !dbg !1821
  call void @printDDep(i32 1516, i32 1528), !dbg !1821
  call void @printCDep(i32 610, i32 1528), !dbg !1821
  %shr296.i.i = lshr i32 %533, 26, !dbg !1821
  %idxprom298.i.i = zext i32 %shr296.i.i to i64, !dbg !1821
  %arrayidx299.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom298.i.i, !dbg !1821
  %534 = ptrtoint i32* %arrayidx299.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %534, i32 1535, i32 45, i32 9), !dbg !1821
  %535 = load i32, i32* %arrayidx299.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1459, i32 1535), !dbg !1821
  call void @printCDep(i32 610, i32 1535), !dbg !1821
  %xor300.i.i = xor i32 %xor295.i.i, %535, !dbg !1821
  %536 = ptrtoint i32* %t.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %536, i32 1539, i32 45, i32 9), !dbg !1821
  %537 = load i32, i32* %t.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1489, i32 1539), !dbg !1821
  call void @printDDep(i32 1489, i32 1539), !dbg !1821
  call void @printCDep(i32 610, i32 1539), !dbg !1821
  %shr301.i.i = lshr i32 %537, 2, !dbg !1821
  %and302.i.i = and i32 %shr301.i.i, 63, !dbg !1821
  %idxprom303.i.i = zext i32 %and302.i.i to i64, !dbg !1821
  %arrayidx304.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom303.i.i, !dbg !1821
  %538 = ptrtoint i32* %arrayidx304.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %538, i32 1547, i32 45, i32 9), !dbg !1821
  %539 = load i32, i32* %arrayidx304.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1459, i32 1547), !dbg !1821
  call void @printCDep(i32 610, i32 1547), !dbg !1821
  %xor305.i.i = xor i32 %xor300.i.i, %539, !dbg !1821
  %540 = ptrtoint i32* %t.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %540, i32 1551, i32 45, i32 9), !dbg !1821
  %541 = load i32, i32* %t.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1489, i32 1551), !dbg !1821
  call void @printDDep(i32 1539, i32 1551), !dbg !1821
  call void @printCDep(i32 610, i32 1551), !dbg !1821
  %shr306.i.i = lshr i32 %541, 10, !dbg !1821
  %and307.i.i = and i32 %shr306.i.i, 63, !dbg !1821
  %idxprom308.i.i = zext i32 %and307.i.i to i64, !dbg !1821
  %arrayidx309.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom308.i.i, !dbg !1821
  %542 = ptrtoint i32* %arrayidx309.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %542, i32 1559, i32 45, i32 9), !dbg !1821
  %543 = load i32, i32* %arrayidx309.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1459, i32 1559), !dbg !1821
  call void @printCDep(i32 610, i32 1559), !dbg !1821
  %xor310.i.i = xor i32 %xor305.i.i, %543, !dbg !1821
  %544 = ptrtoint i32* %t.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %544, i32 1563, i32 45, i32 9), !dbg !1821
  %545 = load i32, i32* %t.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1489, i32 1563), !dbg !1821
  call void @printDDep(i32 1551, i32 1563), !dbg !1821
  call void @printCDep(i32 610, i32 1563), !dbg !1821
  %shr311.i.i = lshr i32 %545, 18, !dbg !1821
  %and312.i.i = and i32 %shr311.i.i, 63, !dbg !1821
  %idxprom313.i.i = zext i32 %and312.i.i to i64, !dbg !1821
  %arrayidx314.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom313.i.i, !dbg !1821
  %546 = ptrtoint i32* %arrayidx314.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %546, i32 1571, i32 45, i32 9), !dbg !1821
  %547 = load i32, i32* %arrayidx314.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1459, i32 1571), !dbg !1821
  call void @printCDep(i32 610, i32 1571), !dbg !1821
  %xor315.i.i = xor i32 %xor310.i.i, %547, !dbg !1821
  %548 = ptrtoint i32* %t.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %548, i32 1575, i32 45, i32 9), !dbg !1821
  %549 = load i32, i32* %t.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1489, i32 1575), !dbg !1821
  call void @printDDep(i32 1563, i32 1575), !dbg !1821
  call void @printCDep(i32 610, i32 1575), !dbg !1821
  %shr316.i.i = lshr i32 %549, 26, !dbg !1821
  %idxprom318.i.i = zext i32 %shr316.i.i to i64, !dbg !1821
  %arrayidx319.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom318.i.i, !dbg !1821
  %550 = ptrtoint i32* %arrayidx319.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %550, i32 1582, i32 45, i32 9), !dbg !1821
  %551 = load i32, i32* %arrayidx319.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1459, i32 1582), !dbg !1821
  call void @printCDep(i32 610, i32 1582), !dbg !1821
  %xor320.i.i = xor i32 %xor315.i.i, %551, !dbg !1821
  %552 = ptrtoint i32* %r.i.i to i64, !dbg !1821
  call void @printLoadAddr(i64 %552, i32 1586, i32 45, i32 9), !dbg !1821
  %553 = load i32, i32* %r.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1265, i32 1586), !dbg !1821
  call void @printDDep(i32 1459, i32 1586), !dbg !1821
  call void @printCDep(i32 610, i32 1586), !dbg !1821
  %xor321.i.i = xor i32 %553, %xor320.i.i, !dbg !1821
  %554 = ptrtoint i32* %r.i.i to i64, !dbg !1821
  call void @printStoreAddr(i64 %554, i32 1591, i32 45, i32 9), !dbg !1821
  store i32 %xor321.i.i, i32* %r.i.i, align 4, !dbg !1821
  call void @printDDep(i32 1489, i32 1591), !dbg !1821
  call void @printDDep(i32 1586, i32 1591), !dbg !1821
  call void @printCDep(i32 610, i32 1591), !dbg !1821
  %555 = ptrtoint i32* %r.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %555, i32 1595, i32 46, i32 9), !dbg !1822
  %556 = load i32, i32* %r.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1591, i32 1595), !dbg !1822
  call void @printDDep(i32 1591, i32 1595), !dbg !1822
  call void @printCDep(i32 610, i32 1595), !dbg !1822
  %557 = ptrtoint i32** %s.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %557, i32 1599, i32 46, i32 9), !dbg !1822
  %558 = load i32*, i32** %s.i.i, align 8, !dbg !1822
  call void @printDDep(i32 607, i32 1599), !dbg !1822
  call void @printDDep(i32 1459, i32 1599), !dbg !1822
  call void @printCDep(i32 610, i32 1599), !dbg !1822
  %arrayidx322.i.i = getelementptr inbounds i32, i32* %558, i64 12, !dbg !1822
  %559 = ptrtoint i32* %arrayidx322.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %559, i32 1604, i32 46, i32 9), !dbg !1822
  %560 = load i32, i32* %arrayidx322.i.i, align 4, !dbg !1822
  call void @printDDep(i32 161, i32 1604), !dbg !1822
  call void @printDDep(i32 1599, i32 1604), !dbg !1822
  call void @printCDep(i32 610, i32 1604), !dbg !1822
  %xor323.i.i = xor i32 %556, %560, !dbg !1822
  %561 = ptrtoint i32* %u.i.i to i64, !dbg !1822
  call void @printStoreAddr(i64 %561, i32 1609, i32 46, i32 9), !dbg !1822
  store i32 %xor323.i.i, i32* %u.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1591, i32 1609), !dbg !1822
  call void @printDDep(i32 1604, i32 1609), !dbg !1822
  call void @printCDep(i32 610, i32 1609), !dbg !1822
  %562 = ptrtoint i32* %r.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %562, i32 1613, i32 46, i32 9), !dbg !1822
  %563 = load i32, i32* %r.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1591, i32 1613), !dbg !1822
  call void @printDDep(i32 1604, i32 1613), !dbg !1822
  call void @printCDep(i32 610, i32 1613), !dbg !1822
  %564 = ptrtoint i32** %s.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %564, i32 1617, i32 46, i32 9), !dbg !1822
  %565 = load i32*, i32** %s.i.i, align 8, !dbg !1822
  call void @printDDep(i32 607, i32 1617), !dbg !1822
  call void @printDDep(i32 1604, i32 1617), !dbg !1822
  call void @printCDep(i32 610, i32 1617), !dbg !1822
  %arrayidx324.i.i = getelementptr inbounds i32, i32* %565, i64 13, !dbg !1822
  %566 = ptrtoint i32* %arrayidx324.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %566, i32 1622, i32 46, i32 9), !dbg !1822
  %567 = load i32, i32* %arrayidx324.i.i, align 4, !dbg !1822
  call void @printDDep(i32 161, i32 1622), !dbg !1822
  call void @printDDep(i32 1617, i32 1622), !dbg !1822
  call void @printCDep(i32 610, i32 1622), !dbg !1822
  %xor325.i.i = xor i32 %563, %567, !dbg !1822
  %568 = ptrtoint i32* %t.i.i to i64, !dbg !1822
  call void @printStoreAddr(i64 %568, i32 1627, i32 46, i32 9), !dbg !1822
  store i32 %xor325.i.i, i32* %t.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1609, i32 1627), !dbg !1822
  call void @printDDep(i32 1622, i32 1627), !dbg !1822
  call void @printCDep(i32 610, i32 1627), !dbg !1822
  %569 = ptrtoint i32* %t.i.i to i64, !dbg !1737
  call void @printLoadAddr(i64 %569, i32 1631, i32 46, i32 9), !dbg !1737
  %570 = load i32, i32* %t.i.i, align 4, !dbg !1737
  call void @printDDep(i32 1627, i32 1631), !dbg !1737
  call void @printDDep(i32 1627, i32 1631), !dbg !1737
  call void @printCDep(i32 610, i32 1631), !dbg !1737
  %571 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %570) #5, !dbg !1737, !srcloc !130
  %572 = ptrtoint i32* %ret326.i.i to i64, !dbg !1737
  call void @printStoreAddr(i64 %572, i32 1636, i32 46, i32 9), !dbg !1737
  store i32 %571, i32* %ret326.i.i, align 4, !dbg !1737
  call void @printDDep(i32 1627, i32 1636), !dbg !1737
  call void @printDDep(i32 161, i32 1636), !dbg !1737
  call void @printCDep(i32 610, i32 1636), !dbg !1737
  %573 = ptrtoint i32* %ret326.i.i to i64, !dbg !1737
  call void @printLoadAddr(i64 %573, i32 1640, i32 46, i32 9), !dbg !1737
  %574 = load i32, i32* %ret326.i.i, align 4, !dbg !1737
  call void @printDDep(i32 1636, i32 1640), !dbg !1737
  call void @printDDep(i32 1636, i32 1640), !dbg !1737
  call void @printCDep(i32 610, i32 1640), !dbg !1737
  %575 = ptrtoint i32* %tmp327.i.i to i64, !dbg !1737
  call void @printStoreAddr(i64 %575, i32 1644, i32 46, i32 9), !dbg !1737
  store i32 %574, i32* %tmp327.i.i, align 4, !dbg !1737
  call void @printDDep(i32 1636, i32 1644), !dbg !1737
  call void @printDDep(i32 161, i32 1644), !dbg !1737
  call void @printCDep(i32 610, i32 1644), !dbg !1737
  %576 = ptrtoint i32* %tmp327.i.i to i64, !dbg !1737
  call void @printLoadAddr(i64 %576, i32 1648, i32 46, i32 9), !dbg !1737
  %577 = load i32, i32* %tmp327.i.i, align 4, !dbg !1737
  call void @printDDep(i32 1644, i32 1648), !dbg !1737
  call void @printDDep(i32 1644, i32 1648), !dbg !1737
  call void @printCDep(i32 610, i32 1648), !dbg !1737
  %578 = ptrtoint i32* %t.i.i to i64, !dbg !1822
  call void @printStoreAddr(i64 %578, i32 1652, i32 46, i32 9), !dbg !1822
  store i32 %577, i32* %t.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1644, i32 1652), !dbg !1822
  call void @printDDep(i32 1631, i32 1652), !dbg !1822
  call void @printCDep(i32 610, i32 1652), !dbg !1822
  %579 = ptrtoint i32* %u.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %579, i32 1656, i32 46, i32 9), !dbg !1822
  %580 = load i32, i32* %u.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1609, i32 1656), !dbg !1822
  call void @printDDep(i32 1622, i32 1656), !dbg !1822
  call void @printCDep(i32 610, i32 1656), !dbg !1822
  %shr328.i.i = lshr i32 %580, 2, !dbg !1822
  %and329.i.i = and i32 %shr328.i.i, 63, !dbg !1822
  %idxprom330.i.i = zext i32 %and329.i.i to i64, !dbg !1822
  %arrayidx331.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom330.i.i, !dbg !1822
  %581 = ptrtoint i32* %arrayidx331.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %581, i32 1664, i32 46, i32 9), !dbg !1822
  %582 = load i32, i32* %arrayidx331.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1622, i32 1664), !dbg !1822
  call void @printCDep(i32 610, i32 1664), !dbg !1822
  %583 = ptrtoint i32* %u.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %583, i32 1667, i32 46, i32 9), !dbg !1822
  %584 = load i32, i32* %u.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1609, i32 1667), !dbg !1822
  call void @printDDep(i32 1656, i32 1667), !dbg !1822
  call void @printCDep(i32 610, i32 1667), !dbg !1822
  %shr332.i.i = lshr i32 %584, 10, !dbg !1822
  %and333.i.i = and i32 %shr332.i.i, 63, !dbg !1822
  %idxprom334.i.i = zext i32 %and333.i.i to i64, !dbg !1822
  %arrayidx335.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom334.i.i, !dbg !1822
  %585 = ptrtoint i32* %arrayidx335.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %585, i32 1675, i32 46, i32 9), !dbg !1822
  %586 = load i32, i32* %arrayidx335.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1622, i32 1675), !dbg !1822
  call void @printCDep(i32 610, i32 1675), !dbg !1822
  %xor336.i.i = xor i32 %582, %586, !dbg !1822
  %587 = ptrtoint i32* %u.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %587, i32 1679, i32 46, i32 9), !dbg !1822
  %588 = load i32, i32* %u.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1609, i32 1679), !dbg !1822
  call void @printDDep(i32 1667, i32 1679), !dbg !1822
  call void @printCDep(i32 610, i32 1679), !dbg !1822
  %shr337.i.i = lshr i32 %588, 18, !dbg !1822
  %and338.i.i = and i32 %shr337.i.i, 63, !dbg !1822
  %idxprom339.i.i = zext i32 %and338.i.i to i64, !dbg !1822
  %arrayidx340.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom339.i.i, !dbg !1822
  %589 = ptrtoint i32* %arrayidx340.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %589, i32 1687, i32 46, i32 9), !dbg !1822
  %590 = load i32, i32* %arrayidx340.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1622, i32 1687), !dbg !1822
  call void @printCDep(i32 610, i32 1687), !dbg !1822
  %xor341.i.i = xor i32 %xor336.i.i, %590, !dbg !1822
  %591 = ptrtoint i32* %u.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %591, i32 1691, i32 46, i32 9), !dbg !1822
  %592 = load i32, i32* %u.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1609, i32 1691), !dbg !1822
  call void @printDDep(i32 1679, i32 1691), !dbg !1822
  call void @printCDep(i32 610, i32 1691), !dbg !1822
  %shr342.i.i = lshr i32 %592, 26, !dbg !1822
  %idxprom344.i.i = zext i32 %shr342.i.i to i64, !dbg !1822
  %arrayidx345.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom344.i.i, !dbg !1822
  %593 = ptrtoint i32* %arrayidx345.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %593, i32 1698, i32 46, i32 9), !dbg !1822
  %594 = load i32, i32* %arrayidx345.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1622, i32 1698), !dbg !1822
  call void @printCDep(i32 610, i32 1698), !dbg !1822
  %xor346.i.i = xor i32 %xor341.i.i, %594, !dbg !1822
  %595 = ptrtoint i32* %t.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %595, i32 1702, i32 46, i32 9), !dbg !1822
  %596 = load i32, i32* %t.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1652, i32 1702), !dbg !1822
  call void @printDDep(i32 1652, i32 1702), !dbg !1822
  call void @printCDep(i32 610, i32 1702), !dbg !1822
  %shr347.i.i = lshr i32 %596, 2, !dbg !1822
  %and348.i.i = and i32 %shr347.i.i, 63, !dbg !1822
  %idxprom349.i.i = zext i32 %and348.i.i to i64, !dbg !1822
  %arrayidx350.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom349.i.i, !dbg !1822
  %597 = ptrtoint i32* %arrayidx350.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %597, i32 1710, i32 46, i32 9), !dbg !1822
  %598 = load i32, i32* %arrayidx350.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1622, i32 1710), !dbg !1822
  call void @printCDep(i32 610, i32 1710), !dbg !1822
  %xor351.i.i = xor i32 %xor346.i.i, %598, !dbg !1822
  %599 = ptrtoint i32* %t.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %599, i32 1714, i32 46, i32 9), !dbg !1822
  %600 = load i32, i32* %t.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1652, i32 1714), !dbg !1822
  call void @printDDep(i32 1702, i32 1714), !dbg !1822
  call void @printCDep(i32 610, i32 1714), !dbg !1822
  %shr352.i.i = lshr i32 %600, 10, !dbg !1822
  %and353.i.i = and i32 %shr352.i.i, 63, !dbg !1822
  %idxprom354.i.i = zext i32 %and353.i.i to i64, !dbg !1822
  %arrayidx355.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom354.i.i, !dbg !1822
  %601 = ptrtoint i32* %arrayidx355.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %601, i32 1722, i32 46, i32 9), !dbg !1822
  %602 = load i32, i32* %arrayidx355.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1622, i32 1722), !dbg !1822
  call void @printCDep(i32 610, i32 1722), !dbg !1822
  %xor356.i.i = xor i32 %xor351.i.i, %602, !dbg !1822
  %603 = ptrtoint i32* %t.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %603, i32 1726, i32 46, i32 9), !dbg !1822
  %604 = load i32, i32* %t.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1652, i32 1726), !dbg !1822
  call void @printDDep(i32 1714, i32 1726), !dbg !1822
  call void @printCDep(i32 610, i32 1726), !dbg !1822
  %shr357.i.i = lshr i32 %604, 18, !dbg !1822
  %and358.i.i = and i32 %shr357.i.i, 63, !dbg !1822
  %idxprom359.i.i = zext i32 %and358.i.i to i64, !dbg !1822
  %arrayidx360.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom359.i.i, !dbg !1822
  %605 = ptrtoint i32* %arrayidx360.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %605, i32 1734, i32 46, i32 9), !dbg !1822
  %606 = load i32, i32* %arrayidx360.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1622, i32 1734), !dbg !1822
  call void @printCDep(i32 610, i32 1734), !dbg !1822
  %xor361.i.i = xor i32 %xor356.i.i, %606, !dbg !1822
  %607 = ptrtoint i32* %t.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %607, i32 1738, i32 46, i32 9), !dbg !1822
  %608 = load i32, i32* %t.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1652, i32 1738), !dbg !1822
  call void @printDDep(i32 1726, i32 1738), !dbg !1822
  call void @printCDep(i32 610, i32 1738), !dbg !1822
  %shr362.i.i = lshr i32 %608, 26, !dbg !1822
  %idxprom364.i.i = zext i32 %shr362.i.i to i64, !dbg !1822
  %arrayidx365.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom364.i.i, !dbg !1822
  %609 = ptrtoint i32* %arrayidx365.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %609, i32 1745, i32 46, i32 9), !dbg !1822
  %610 = load i32, i32* %arrayidx365.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1622, i32 1745), !dbg !1822
  call void @printCDep(i32 610, i32 1745), !dbg !1822
  %xor366.i.i = xor i32 %xor361.i.i, %610, !dbg !1822
  %611 = ptrtoint i32* %l.i.i to i64, !dbg !1822
  call void @printLoadAddr(i64 %611, i32 1749, i32 46, i32 9), !dbg !1822
  %612 = load i32, i32* %l.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1428, i32 1749), !dbg !1822
  call void @printDDep(i32 1622, i32 1749), !dbg !1822
  call void @printCDep(i32 610, i32 1749), !dbg !1822
  %xor367.i.i = xor i32 %612, %xor366.i.i, !dbg !1822
  %613 = ptrtoint i32* %l.i.i to i64, !dbg !1822
  call void @printStoreAddr(i64 %613, i32 1754, i32 46, i32 9), !dbg !1822
  store i32 %xor367.i.i, i32* %l.i.i, align 4, !dbg !1822
  call void @printDDep(i32 1652, i32 1754), !dbg !1822
  call void @printDDep(i32 1749, i32 1754), !dbg !1822
  call void @printCDep(i32 610, i32 1754), !dbg !1822
  %614 = ptrtoint i32* %l.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %614, i32 1758, i32 47, i32 9), !dbg !1823
  %615 = load i32, i32* %l.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1754, i32 1758), !dbg !1823
  call void @printDDep(i32 1754, i32 1758), !dbg !1823
  call void @printCDep(i32 610, i32 1758), !dbg !1823
  %616 = ptrtoint i32** %s.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %616, i32 1762, i32 47, i32 9), !dbg !1823
  %617 = load i32*, i32** %s.i.i, align 8, !dbg !1823
  call void @printDDep(i32 607, i32 1762), !dbg !1823
  call void @printDDep(i32 1622, i32 1762), !dbg !1823
  call void @printCDep(i32 610, i32 1762), !dbg !1823
  %arrayidx368.i.i = getelementptr inbounds i32, i32* %617, i64 14, !dbg !1823
  %618 = ptrtoint i32* %arrayidx368.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %618, i32 1767, i32 47, i32 9), !dbg !1823
  %619 = load i32, i32* %arrayidx368.i.i, align 4, !dbg !1823
  call void @printDDep(i32 161, i32 1767), !dbg !1823
  call void @printDDep(i32 1762, i32 1767), !dbg !1823
  call void @printCDep(i32 610, i32 1767), !dbg !1823
  %xor369.i.i = xor i32 %615, %619, !dbg !1823
  %620 = ptrtoint i32* %u.i.i to i64, !dbg !1823
  call void @printStoreAddr(i64 %620, i32 1772, i32 47, i32 9), !dbg !1823
  store i32 %xor369.i.i, i32* %u.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1754, i32 1772), !dbg !1823
  call void @printDDep(i32 1767, i32 1772), !dbg !1823
  call void @printCDep(i32 610, i32 1772), !dbg !1823
  %621 = ptrtoint i32* %l.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %621, i32 1776, i32 47, i32 9), !dbg !1823
  %622 = load i32, i32* %l.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1754, i32 1776), !dbg !1823
  call void @printDDep(i32 1767, i32 1776), !dbg !1823
  call void @printCDep(i32 610, i32 1776), !dbg !1823
  %623 = ptrtoint i32** %s.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %623, i32 1780, i32 47, i32 9), !dbg !1823
  %624 = load i32*, i32** %s.i.i, align 8, !dbg !1823
  call void @printDDep(i32 607, i32 1780), !dbg !1823
  call void @printDDep(i32 1767, i32 1780), !dbg !1823
  call void @printCDep(i32 610, i32 1780), !dbg !1823
  %arrayidx370.i.i = getelementptr inbounds i32, i32* %624, i64 15, !dbg !1823
  %625 = ptrtoint i32* %arrayidx370.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %625, i32 1785, i32 47, i32 9), !dbg !1823
  %626 = load i32, i32* %arrayidx370.i.i, align 4, !dbg !1823
  call void @printDDep(i32 161, i32 1785), !dbg !1823
  call void @printDDep(i32 1780, i32 1785), !dbg !1823
  call void @printCDep(i32 610, i32 1785), !dbg !1823
  %xor371.i.i = xor i32 %622, %626, !dbg !1823
  %627 = ptrtoint i32* %t.i.i to i64, !dbg !1823
  call void @printStoreAddr(i64 %627, i32 1790, i32 47, i32 9), !dbg !1823
  store i32 %xor371.i.i, i32* %t.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1772, i32 1790), !dbg !1823
  call void @printDDep(i32 1785, i32 1790), !dbg !1823
  call void @printCDep(i32 610, i32 1790), !dbg !1823
  %628 = ptrtoint i32* %t.i.i to i64, !dbg !1738
  call void @printLoadAddr(i64 %628, i32 1794, i32 47, i32 9), !dbg !1738
  %629 = load i32, i32* %t.i.i, align 4, !dbg !1738
  call void @printDDep(i32 1790, i32 1794), !dbg !1738
  call void @printDDep(i32 1790, i32 1794), !dbg !1738
  call void @printCDep(i32 610, i32 1794), !dbg !1738
  %630 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %629) #5, !dbg !1738, !srcloc !136
  %631 = ptrtoint i32* %ret372.i.i to i64, !dbg !1738
  call void @printStoreAddr(i64 %631, i32 1799, i32 47, i32 9), !dbg !1738
  store i32 %630, i32* %ret372.i.i, align 4, !dbg !1738
  call void @printDDep(i32 1790, i32 1799), !dbg !1738
  call void @printDDep(i32 161, i32 1799), !dbg !1738
  call void @printCDep(i32 610, i32 1799), !dbg !1738
  %632 = ptrtoint i32* %ret372.i.i to i64, !dbg !1738
  call void @printLoadAddr(i64 %632, i32 1803, i32 47, i32 9), !dbg !1738
  %633 = load i32, i32* %ret372.i.i, align 4, !dbg !1738
  call void @printDDep(i32 1799, i32 1803), !dbg !1738
  call void @printDDep(i32 1799, i32 1803), !dbg !1738
  call void @printCDep(i32 610, i32 1803), !dbg !1738
  %634 = ptrtoint i32* %tmp373.i.i to i64, !dbg !1738
  call void @printStoreAddr(i64 %634, i32 1807, i32 47, i32 9), !dbg !1738
  store i32 %633, i32* %tmp373.i.i, align 4, !dbg !1738
  call void @printDDep(i32 1799, i32 1807), !dbg !1738
  call void @printDDep(i32 161, i32 1807), !dbg !1738
  call void @printCDep(i32 610, i32 1807), !dbg !1738
  %635 = ptrtoint i32* %tmp373.i.i to i64, !dbg !1738
  call void @printLoadAddr(i64 %635, i32 1811, i32 47, i32 9), !dbg !1738
  %636 = load i32, i32* %tmp373.i.i, align 4, !dbg !1738
  call void @printDDep(i32 1807, i32 1811), !dbg !1738
  call void @printDDep(i32 1807, i32 1811), !dbg !1738
  call void @printCDep(i32 610, i32 1811), !dbg !1738
  %637 = ptrtoint i32* %t.i.i to i64, !dbg !1823
  call void @printStoreAddr(i64 %637, i32 1815, i32 47, i32 9), !dbg !1823
  store i32 %636, i32* %t.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1807, i32 1815), !dbg !1823
  call void @printDDep(i32 1794, i32 1815), !dbg !1823
  call void @printCDep(i32 610, i32 1815), !dbg !1823
  %638 = ptrtoint i32* %u.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %638, i32 1819, i32 47, i32 9), !dbg !1823
  %639 = load i32, i32* %u.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1772, i32 1819), !dbg !1823
  call void @printDDep(i32 1785, i32 1819), !dbg !1823
  call void @printCDep(i32 610, i32 1819), !dbg !1823
  %shr374.i.i = lshr i32 %639, 2, !dbg !1823
  %and375.i.i = and i32 %shr374.i.i, 63, !dbg !1823
  %idxprom376.i.i = zext i32 %and375.i.i to i64, !dbg !1823
  %arrayidx377.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom376.i.i, !dbg !1823
  %640 = ptrtoint i32* %arrayidx377.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %640, i32 1827, i32 47, i32 9), !dbg !1823
  %641 = load i32, i32* %arrayidx377.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1785, i32 1827), !dbg !1823
  call void @printCDep(i32 610, i32 1827), !dbg !1823
  %642 = ptrtoint i32* %u.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %642, i32 1830, i32 47, i32 9), !dbg !1823
  %643 = load i32, i32* %u.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1772, i32 1830), !dbg !1823
  call void @printDDep(i32 1819, i32 1830), !dbg !1823
  call void @printCDep(i32 610, i32 1830), !dbg !1823
  %shr378.i.i = lshr i32 %643, 10, !dbg !1823
  %and379.i.i = and i32 %shr378.i.i, 63, !dbg !1823
  %idxprom380.i.i = zext i32 %and379.i.i to i64, !dbg !1823
  %arrayidx381.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom380.i.i, !dbg !1823
  %644 = ptrtoint i32* %arrayidx381.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %644, i32 1838, i32 47, i32 9), !dbg !1823
  %645 = load i32, i32* %arrayidx381.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1785, i32 1838), !dbg !1823
  call void @printCDep(i32 610, i32 1838), !dbg !1823
  %xor382.i.i = xor i32 %641, %645, !dbg !1823
  %646 = ptrtoint i32* %u.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %646, i32 1842, i32 47, i32 9), !dbg !1823
  %647 = load i32, i32* %u.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1772, i32 1842), !dbg !1823
  call void @printDDep(i32 1830, i32 1842), !dbg !1823
  call void @printCDep(i32 610, i32 1842), !dbg !1823
  %shr383.i.i = lshr i32 %647, 18, !dbg !1823
  %and384.i.i = and i32 %shr383.i.i, 63, !dbg !1823
  %idxprom385.i.i = zext i32 %and384.i.i to i64, !dbg !1823
  %arrayidx386.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom385.i.i, !dbg !1823
  %648 = ptrtoint i32* %arrayidx386.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %648, i32 1850, i32 47, i32 9), !dbg !1823
  %649 = load i32, i32* %arrayidx386.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1785, i32 1850), !dbg !1823
  call void @printCDep(i32 610, i32 1850), !dbg !1823
  %xor387.i.i = xor i32 %xor382.i.i, %649, !dbg !1823
  %650 = ptrtoint i32* %u.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %650, i32 1854, i32 47, i32 9), !dbg !1823
  %651 = load i32, i32* %u.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1772, i32 1854), !dbg !1823
  call void @printDDep(i32 1842, i32 1854), !dbg !1823
  call void @printCDep(i32 610, i32 1854), !dbg !1823
  %shr388.i.i = lshr i32 %651, 26, !dbg !1823
  %idxprom390.i.i = zext i32 %shr388.i.i to i64, !dbg !1823
  %arrayidx391.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom390.i.i, !dbg !1823
  %652 = ptrtoint i32* %arrayidx391.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %652, i32 1861, i32 47, i32 9), !dbg !1823
  %653 = load i32, i32* %arrayidx391.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1785, i32 1861), !dbg !1823
  call void @printCDep(i32 610, i32 1861), !dbg !1823
  %xor392.i.i = xor i32 %xor387.i.i, %653, !dbg !1823
  %654 = ptrtoint i32* %t.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %654, i32 1865, i32 47, i32 9), !dbg !1823
  %655 = load i32, i32* %t.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1815, i32 1865), !dbg !1823
  call void @printDDep(i32 1815, i32 1865), !dbg !1823
  call void @printCDep(i32 610, i32 1865), !dbg !1823
  %shr393.i.i = lshr i32 %655, 2, !dbg !1823
  %and394.i.i = and i32 %shr393.i.i, 63, !dbg !1823
  %idxprom395.i.i = zext i32 %and394.i.i to i64, !dbg !1823
  %arrayidx396.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom395.i.i, !dbg !1823
  %656 = ptrtoint i32* %arrayidx396.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %656, i32 1873, i32 47, i32 9), !dbg !1823
  %657 = load i32, i32* %arrayidx396.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1785, i32 1873), !dbg !1823
  call void @printCDep(i32 610, i32 1873), !dbg !1823
  %xor397.i.i = xor i32 %xor392.i.i, %657, !dbg !1823
  %658 = ptrtoint i32* %t.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %658, i32 1877, i32 47, i32 9), !dbg !1823
  %659 = load i32, i32* %t.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1815, i32 1877), !dbg !1823
  call void @printDDep(i32 1865, i32 1877), !dbg !1823
  call void @printCDep(i32 610, i32 1877), !dbg !1823
  %shr398.i.i = lshr i32 %659, 10, !dbg !1823
  %and399.i.i = and i32 %shr398.i.i, 63, !dbg !1823
  %idxprom400.i.i = zext i32 %and399.i.i to i64, !dbg !1823
  %arrayidx401.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom400.i.i, !dbg !1823
  %660 = ptrtoint i32* %arrayidx401.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %660, i32 1885, i32 47, i32 9), !dbg !1823
  %661 = load i32, i32* %arrayidx401.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1785, i32 1885), !dbg !1823
  call void @printCDep(i32 610, i32 1885), !dbg !1823
  %xor402.i.i = xor i32 %xor397.i.i, %661, !dbg !1823
  %662 = ptrtoint i32* %t.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %662, i32 1889, i32 47, i32 9), !dbg !1823
  %663 = load i32, i32* %t.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1815, i32 1889), !dbg !1823
  call void @printDDep(i32 1877, i32 1889), !dbg !1823
  call void @printCDep(i32 610, i32 1889), !dbg !1823
  %shr403.i.i = lshr i32 %663, 18, !dbg !1823
  %and404.i.i = and i32 %shr403.i.i, 63, !dbg !1823
  %idxprom405.i.i = zext i32 %and404.i.i to i64, !dbg !1823
  %arrayidx406.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom405.i.i, !dbg !1823
  %664 = ptrtoint i32* %arrayidx406.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %664, i32 1897, i32 47, i32 9), !dbg !1823
  %665 = load i32, i32* %arrayidx406.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1785, i32 1897), !dbg !1823
  call void @printCDep(i32 610, i32 1897), !dbg !1823
  %xor407.i.i = xor i32 %xor402.i.i, %665, !dbg !1823
  %666 = ptrtoint i32* %t.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %666, i32 1901, i32 47, i32 9), !dbg !1823
  %667 = load i32, i32* %t.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1815, i32 1901), !dbg !1823
  call void @printDDep(i32 1889, i32 1901), !dbg !1823
  call void @printCDep(i32 610, i32 1901), !dbg !1823
  %shr408.i.i = lshr i32 %667, 26, !dbg !1823
  %idxprom410.i.i = zext i32 %shr408.i.i to i64, !dbg !1823
  %arrayidx411.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom410.i.i, !dbg !1823
  %668 = ptrtoint i32* %arrayidx411.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %668, i32 1908, i32 47, i32 9), !dbg !1823
  %669 = load i32, i32* %arrayidx411.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1785, i32 1908), !dbg !1823
  call void @printCDep(i32 610, i32 1908), !dbg !1823
  %xor412.i.i = xor i32 %xor407.i.i, %669, !dbg !1823
  %670 = ptrtoint i32* %r.i.i to i64, !dbg !1823
  call void @printLoadAddr(i64 %670, i32 1912, i32 47, i32 9), !dbg !1823
  %671 = load i32, i32* %r.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1591, i32 1912), !dbg !1823
  call void @printDDep(i32 1785, i32 1912), !dbg !1823
  call void @printCDep(i32 610, i32 1912), !dbg !1823
  %xor413.i.i = xor i32 %671, %xor412.i.i, !dbg !1823
  %672 = ptrtoint i32* %r.i.i to i64, !dbg !1823
  call void @printStoreAddr(i64 %672, i32 1917, i32 47, i32 9), !dbg !1823
  store i32 %xor413.i.i, i32* %r.i.i, align 4, !dbg !1823
  call void @printDDep(i32 1815, i32 1917), !dbg !1823
  call void @printDDep(i32 1912, i32 1917), !dbg !1823
  call void @printCDep(i32 610, i32 1917), !dbg !1823
  %673 = ptrtoint i32* %r.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %673, i32 1921, i32 48, i32 9), !dbg !1824
  %674 = load i32, i32* %r.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1917, i32 1921), !dbg !1824
  call void @printDDep(i32 1917, i32 1921), !dbg !1824
  call void @printCDep(i32 610, i32 1921), !dbg !1824
  %675 = ptrtoint i32** %s.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %675, i32 1925, i32 48, i32 9), !dbg !1824
  %676 = load i32*, i32** %s.i.i, align 8, !dbg !1824
  call void @printDDep(i32 607, i32 1925), !dbg !1824
  call void @printDDep(i32 1785, i32 1925), !dbg !1824
  call void @printCDep(i32 610, i32 1925), !dbg !1824
  %arrayidx414.i.i = getelementptr inbounds i32, i32* %676, i64 16, !dbg !1824
  %677 = ptrtoint i32* %arrayidx414.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %677, i32 1930, i32 48, i32 9), !dbg !1824
  %678 = load i32, i32* %arrayidx414.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1917, i32 1930), !dbg !1824
  call void @printDDep(i32 1925, i32 1930), !dbg !1824
  call void @printCDep(i32 610, i32 1930), !dbg !1824
  %xor415.i.i = xor i32 %674, %678, !dbg !1824
  %679 = ptrtoint i32* %u.i.i to i64, !dbg !1824
  call void @printStoreAddr(i64 %679, i32 1935, i32 48, i32 9), !dbg !1824
  store i32 %xor415.i.i, i32* %u.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1917, i32 1935), !dbg !1824
  call void @printDDep(i32 1930, i32 1935), !dbg !1824
  call void @printCDep(i32 610, i32 1935), !dbg !1824
  %680 = ptrtoint i32* %r.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %680, i32 1939, i32 48, i32 9), !dbg !1824
  %681 = load i32, i32* %r.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1917, i32 1939), !dbg !1824
  call void @printDDep(i32 1930, i32 1939), !dbg !1824
  call void @printCDep(i32 610, i32 1939), !dbg !1824
  %682 = ptrtoint i32** %s.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %682, i32 1943, i32 48, i32 9), !dbg !1824
  %683 = load i32*, i32** %s.i.i, align 8, !dbg !1824
  call void @printDDep(i32 607, i32 1943), !dbg !1824
  call void @printDDep(i32 1930, i32 1943), !dbg !1824
  call void @printCDep(i32 610, i32 1943), !dbg !1824
  %arrayidx416.i.i = getelementptr inbounds i32, i32* %683, i64 17, !dbg !1824
  %684 = ptrtoint i32* %arrayidx416.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %684, i32 1948, i32 48, i32 9), !dbg !1824
  %685 = load i32, i32* %arrayidx416.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1935, i32 1948), !dbg !1824
  call void @printDDep(i32 1943, i32 1948), !dbg !1824
  call void @printCDep(i32 610, i32 1948), !dbg !1824
  %xor417.i.i = xor i32 %681, %685, !dbg !1824
  %686 = ptrtoint i32* %t.i.i to i64, !dbg !1824
  call void @printStoreAddr(i64 %686, i32 1953, i32 48, i32 9), !dbg !1824
  store i32 %xor417.i.i, i32* %t.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1935, i32 1953), !dbg !1824
  call void @printDDep(i32 1948, i32 1953), !dbg !1824
  call void @printCDep(i32 610, i32 1953), !dbg !1824
  %687 = ptrtoint i32* %t.i.i to i64, !dbg !1739
  call void @printLoadAddr(i64 %687, i32 1957, i32 48, i32 9), !dbg !1739
  %688 = load i32, i32* %t.i.i, align 4, !dbg !1739
  call void @printDDep(i32 1953, i32 1957), !dbg !1739
  call void @printDDep(i32 1953, i32 1957), !dbg !1739
  call void @printCDep(i32 610, i32 1957), !dbg !1739
  %689 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %688) #5, !dbg !1739, !srcloc !142
  %690 = ptrtoint i32* %ret418.i.i to i64, !dbg !1739
  call void @printStoreAddr(i64 %690, i32 1962, i32 48, i32 9), !dbg !1739
  store i32 %689, i32* %ret418.i.i, align 4, !dbg !1739
  call void @printDDep(i32 1953, i32 1962), !dbg !1739
  call void @printDDep(i32 161, i32 1962), !dbg !1739
  call void @printCDep(i32 610, i32 1962), !dbg !1739
  %691 = ptrtoint i32* %ret418.i.i to i64, !dbg !1739
  call void @printLoadAddr(i64 %691, i32 1966, i32 48, i32 9), !dbg !1739
  %692 = load i32, i32* %ret418.i.i, align 4, !dbg !1739
  call void @printDDep(i32 1962, i32 1966), !dbg !1739
  call void @printDDep(i32 1962, i32 1966), !dbg !1739
  call void @printCDep(i32 610, i32 1966), !dbg !1739
  %693 = ptrtoint i32* %tmp419.i.i to i64, !dbg !1739
  call void @printStoreAddr(i64 %693, i32 1970, i32 48, i32 9), !dbg !1739
  store i32 %692, i32* %tmp419.i.i, align 4, !dbg !1739
  call void @printDDep(i32 1962, i32 1970), !dbg !1739
  call void @printDDep(i32 161, i32 1970), !dbg !1739
  call void @printCDep(i32 610, i32 1970), !dbg !1739
  %694 = ptrtoint i32* %tmp419.i.i to i64, !dbg !1739
  call void @printLoadAddr(i64 %694, i32 1974, i32 48, i32 9), !dbg !1739
  %695 = load i32, i32* %tmp419.i.i, align 4, !dbg !1739
  call void @printDDep(i32 1970, i32 1974), !dbg !1739
  call void @printDDep(i32 1970, i32 1974), !dbg !1739
  call void @printCDep(i32 610, i32 1974), !dbg !1739
  %696 = ptrtoint i32* %t.i.i to i64, !dbg !1824
  call void @printStoreAddr(i64 %696, i32 1978, i32 48, i32 9), !dbg !1824
  store i32 %695, i32* %t.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1970, i32 1978), !dbg !1824
  call void @printDDep(i32 1957, i32 1978), !dbg !1824
  call void @printCDep(i32 610, i32 1978), !dbg !1824
  %697 = ptrtoint i32* %u.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %697, i32 1982, i32 48, i32 9), !dbg !1824
  %698 = load i32, i32* %u.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1935, i32 1982), !dbg !1824
  call void @printDDep(i32 1948, i32 1982), !dbg !1824
  call void @printCDep(i32 610, i32 1982), !dbg !1824
  %shr420.i.i = lshr i32 %698, 2, !dbg !1824
  %and421.i.i = and i32 %shr420.i.i, 63, !dbg !1824
  %idxprom422.i.i = zext i32 %and421.i.i to i64, !dbg !1824
  %arrayidx423.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom422.i.i, !dbg !1824
  %699 = ptrtoint i32* %arrayidx423.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %699, i32 1990, i32 48, i32 9), !dbg !1824
  %700 = load i32, i32* %arrayidx423.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1948, i32 1990), !dbg !1824
  call void @printCDep(i32 610, i32 1990), !dbg !1824
  %701 = ptrtoint i32* %u.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %701, i32 1993, i32 48, i32 9), !dbg !1824
  %702 = load i32, i32* %u.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1935, i32 1993), !dbg !1824
  call void @printDDep(i32 1982, i32 1993), !dbg !1824
  call void @printCDep(i32 610, i32 1993), !dbg !1824
  %shr424.i.i = lshr i32 %702, 10, !dbg !1824
  %and425.i.i = and i32 %shr424.i.i, 63, !dbg !1824
  %idxprom426.i.i = zext i32 %and425.i.i to i64, !dbg !1824
  %arrayidx427.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom426.i.i, !dbg !1824
  %703 = ptrtoint i32* %arrayidx427.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %703, i32 2001, i32 48, i32 9), !dbg !1824
  %704 = load i32, i32* %arrayidx427.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1948, i32 2001), !dbg !1824
  call void @printCDep(i32 610, i32 2001), !dbg !1824
  %xor428.i.i = xor i32 %700, %704, !dbg !1824
  %705 = ptrtoint i32* %u.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %705, i32 2005, i32 48, i32 9), !dbg !1824
  %706 = load i32, i32* %u.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1935, i32 2005), !dbg !1824
  call void @printDDep(i32 1993, i32 2005), !dbg !1824
  call void @printCDep(i32 610, i32 2005), !dbg !1824
  %shr429.i.i = lshr i32 %706, 18, !dbg !1824
  %and430.i.i = and i32 %shr429.i.i, 63, !dbg !1824
  %idxprom431.i.i = zext i32 %and430.i.i to i64, !dbg !1824
  %arrayidx432.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom431.i.i, !dbg !1824
  %707 = ptrtoint i32* %arrayidx432.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %707, i32 2013, i32 48, i32 9), !dbg !1824
  %708 = load i32, i32* %arrayidx432.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1948, i32 2013), !dbg !1824
  call void @printCDep(i32 610, i32 2013), !dbg !1824
  %xor433.i.i = xor i32 %xor428.i.i, %708, !dbg !1824
  %709 = ptrtoint i32* %u.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %709, i32 2017, i32 48, i32 9), !dbg !1824
  %710 = load i32, i32* %u.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1935, i32 2017), !dbg !1824
  call void @printDDep(i32 2005, i32 2017), !dbg !1824
  call void @printCDep(i32 610, i32 2017), !dbg !1824
  %shr434.i.i = lshr i32 %710, 26, !dbg !1824
  %idxprom436.i.i = zext i32 %shr434.i.i to i64, !dbg !1824
  %arrayidx437.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom436.i.i, !dbg !1824
  %711 = ptrtoint i32* %arrayidx437.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %711, i32 2024, i32 48, i32 9), !dbg !1824
  %712 = load i32, i32* %arrayidx437.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1948, i32 2024), !dbg !1824
  call void @printCDep(i32 610, i32 2024), !dbg !1824
  %xor438.i.i = xor i32 %xor433.i.i, %712, !dbg !1824
  %713 = ptrtoint i32* %t.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %713, i32 2028, i32 48, i32 9), !dbg !1824
  %714 = load i32, i32* %t.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1978, i32 2028), !dbg !1824
  call void @printDDep(i32 1978, i32 2028), !dbg !1824
  call void @printCDep(i32 610, i32 2028), !dbg !1824
  %shr439.i.i = lshr i32 %714, 2, !dbg !1824
  %and440.i.i = and i32 %shr439.i.i, 63, !dbg !1824
  %idxprom441.i.i = zext i32 %and440.i.i to i64, !dbg !1824
  %arrayidx442.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom441.i.i, !dbg !1824
  %715 = ptrtoint i32* %arrayidx442.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %715, i32 2036, i32 48, i32 9), !dbg !1824
  %716 = load i32, i32* %arrayidx442.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1948, i32 2036), !dbg !1824
  call void @printCDep(i32 610, i32 2036), !dbg !1824
  %xor443.i.i = xor i32 %xor438.i.i, %716, !dbg !1824
  %717 = ptrtoint i32* %t.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %717, i32 2040, i32 48, i32 9), !dbg !1824
  %718 = load i32, i32* %t.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1978, i32 2040), !dbg !1824
  call void @printDDep(i32 2028, i32 2040), !dbg !1824
  call void @printCDep(i32 610, i32 2040), !dbg !1824
  %shr444.i.i = lshr i32 %718, 10, !dbg !1824
  %and445.i.i = and i32 %shr444.i.i, 63, !dbg !1824
  %idxprom446.i.i = zext i32 %and445.i.i to i64, !dbg !1824
  %arrayidx447.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom446.i.i, !dbg !1824
  %719 = ptrtoint i32* %arrayidx447.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %719, i32 2048, i32 48, i32 9), !dbg !1824
  %720 = load i32, i32* %arrayidx447.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1948, i32 2048), !dbg !1824
  call void @printCDep(i32 610, i32 2048), !dbg !1824
  %xor448.i.i = xor i32 %xor443.i.i, %720, !dbg !1824
  %721 = ptrtoint i32* %t.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %721, i32 2052, i32 48, i32 9), !dbg !1824
  %722 = load i32, i32* %t.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1978, i32 2052), !dbg !1824
  call void @printDDep(i32 2040, i32 2052), !dbg !1824
  call void @printCDep(i32 610, i32 2052), !dbg !1824
  %shr449.i.i = lshr i32 %722, 18, !dbg !1824
  %and450.i.i = and i32 %shr449.i.i, 63, !dbg !1824
  %idxprom451.i.i = zext i32 %and450.i.i to i64, !dbg !1824
  %arrayidx452.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom451.i.i, !dbg !1824
  %723 = ptrtoint i32* %arrayidx452.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %723, i32 2060, i32 48, i32 9), !dbg !1824
  %724 = load i32, i32* %arrayidx452.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1948, i32 2060), !dbg !1824
  call void @printCDep(i32 610, i32 2060), !dbg !1824
  %xor453.i.i = xor i32 %xor448.i.i, %724, !dbg !1824
  %725 = ptrtoint i32* %t.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %725, i32 2064, i32 48, i32 9), !dbg !1824
  %726 = load i32, i32* %t.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1978, i32 2064), !dbg !1824
  call void @printDDep(i32 2052, i32 2064), !dbg !1824
  call void @printCDep(i32 610, i32 2064), !dbg !1824
  %shr454.i.i = lshr i32 %726, 26, !dbg !1824
  %idxprom456.i.i = zext i32 %shr454.i.i to i64, !dbg !1824
  %arrayidx457.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom456.i.i, !dbg !1824
  %727 = ptrtoint i32* %arrayidx457.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %727, i32 2071, i32 48, i32 9), !dbg !1824
  %728 = load i32, i32* %arrayidx457.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1948, i32 2071), !dbg !1824
  call void @printCDep(i32 610, i32 2071), !dbg !1824
  %xor458.i.i = xor i32 %xor453.i.i, %728, !dbg !1824
  %729 = ptrtoint i32* %l.i.i to i64, !dbg !1824
  call void @printLoadAddr(i64 %729, i32 2075, i32 48, i32 9), !dbg !1824
  %730 = load i32, i32* %l.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1754, i32 2075), !dbg !1824
  call void @printDDep(i32 1948, i32 2075), !dbg !1824
  call void @printCDep(i32 610, i32 2075), !dbg !1824
  %xor459.i.i = xor i32 %730, %xor458.i.i, !dbg !1824
  %731 = ptrtoint i32* %l.i.i to i64, !dbg !1824
  call void @printStoreAddr(i64 %731, i32 2080, i32 48, i32 9), !dbg !1824
  store i32 %xor459.i.i, i32* %l.i.i, align 4, !dbg !1824
  call void @printDDep(i32 1978, i32 2080), !dbg !1824
  call void @printDDep(i32 2075, i32 2080), !dbg !1824
  call void @printCDep(i32 610, i32 2080), !dbg !1824
  %732 = ptrtoint i32* %l.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %732, i32 2084, i32 49, i32 9), !dbg !1825
  %733 = load i32, i32* %l.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2080, i32 2084), !dbg !1825
  call void @printDDep(i32 2080, i32 2084), !dbg !1825
  call void @printCDep(i32 610, i32 2084), !dbg !1825
  %734 = ptrtoint i32** %s.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %734, i32 2088, i32 49, i32 9), !dbg !1825
  %735 = load i32*, i32** %s.i.i, align 8, !dbg !1825
  call void @printDDep(i32 607, i32 2088), !dbg !1825
  call void @printDDep(i32 1948, i32 2088), !dbg !1825
  call void @printCDep(i32 610, i32 2088), !dbg !1825
  %arrayidx460.i.i = getelementptr inbounds i32, i32* %735, i64 18, !dbg !1825
  %736 = ptrtoint i32* %arrayidx460.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %736, i32 2093, i32 49, i32 9), !dbg !1825
  %737 = load i32, i32* %arrayidx460.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2080, i32 2093), !dbg !1825
  call void @printDDep(i32 2088, i32 2093), !dbg !1825
  call void @printCDep(i32 610, i32 2093), !dbg !1825
  %xor461.i.i = xor i32 %733, %737, !dbg !1825
  %738 = ptrtoint i32* %u.i.i to i64, !dbg !1825
  call void @printStoreAddr(i64 %738, i32 2098, i32 49, i32 9), !dbg !1825
  store i32 %xor461.i.i, i32* %u.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2080, i32 2098), !dbg !1825
  call void @printDDep(i32 2093, i32 2098), !dbg !1825
  call void @printCDep(i32 610, i32 2098), !dbg !1825
  %739 = ptrtoint i32* %l.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %739, i32 2102, i32 49, i32 9), !dbg !1825
  %740 = load i32, i32* %l.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2080, i32 2102), !dbg !1825
  call void @printDDep(i32 2093, i32 2102), !dbg !1825
  call void @printCDep(i32 610, i32 2102), !dbg !1825
  %741 = ptrtoint i32** %s.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %741, i32 2106, i32 49, i32 9), !dbg !1825
  %742 = load i32*, i32** %s.i.i, align 8, !dbg !1825
  call void @printDDep(i32 607, i32 2106), !dbg !1825
  call void @printDDep(i32 2093, i32 2106), !dbg !1825
  call void @printCDep(i32 610, i32 2106), !dbg !1825
  %arrayidx462.i.i = getelementptr inbounds i32, i32* %742, i64 19, !dbg !1825
  %743 = ptrtoint i32* %arrayidx462.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %743, i32 2111, i32 49, i32 9), !dbg !1825
  %744 = load i32, i32* %arrayidx462.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2098, i32 2111), !dbg !1825
  call void @printDDep(i32 2106, i32 2111), !dbg !1825
  call void @printCDep(i32 610, i32 2111), !dbg !1825
  %xor463.i.i = xor i32 %740, %744, !dbg !1825
  %745 = ptrtoint i32* %t.i.i to i64, !dbg !1825
  call void @printStoreAddr(i64 %745, i32 2116, i32 49, i32 9), !dbg !1825
  store i32 %xor463.i.i, i32* %t.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2098, i32 2116), !dbg !1825
  call void @printDDep(i32 2111, i32 2116), !dbg !1825
  call void @printCDep(i32 610, i32 2116), !dbg !1825
  %746 = ptrtoint i32* %t.i.i to i64, !dbg !1740
  call void @printLoadAddr(i64 %746, i32 2120, i32 49, i32 9), !dbg !1740
  %747 = load i32, i32* %t.i.i, align 4, !dbg !1740
  call void @printDDep(i32 2116, i32 2120), !dbg !1740
  call void @printDDep(i32 2116, i32 2120), !dbg !1740
  call void @printCDep(i32 610, i32 2120), !dbg !1740
  %748 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %747) #5, !dbg !1740, !srcloc !148
  %749 = ptrtoint i32* %ret464.i.i to i64, !dbg !1740
  call void @printStoreAddr(i64 %749, i32 2125, i32 49, i32 9), !dbg !1740
  store i32 %748, i32* %ret464.i.i, align 4, !dbg !1740
  call void @printDDep(i32 2116, i32 2125), !dbg !1740
  call void @printDDep(i32 161, i32 2125), !dbg !1740
  call void @printCDep(i32 610, i32 2125), !dbg !1740
  %750 = ptrtoint i32* %ret464.i.i to i64, !dbg !1740
  call void @printLoadAddr(i64 %750, i32 2129, i32 49, i32 9), !dbg !1740
  %751 = load i32, i32* %ret464.i.i, align 4, !dbg !1740
  call void @printDDep(i32 2125, i32 2129), !dbg !1740
  call void @printDDep(i32 2125, i32 2129), !dbg !1740
  call void @printCDep(i32 610, i32 2129), !dbg !1740
  %752 = ptrtoint i32* %tmp465.i.i to i64, !dbg !1740
  call void @printStoreAddr(i64 %752, i32 2133, i32 49, i32 9), !dbg !1740
  store i32 %751, i32* %tmp465.i.i, align 4, !dbg !1740
  call void @printDDep(i32 2125, i32 2133), !dbg !1740
  call void @printDDep(i32 161, i32 2133), !dbg !1740
  call void @printCDep(i32 610, i32 2133), !dbg !1740
  %753 = ptrtoint i32* %tmp465.i.i to i64, !dbg !1740
  call void @printLoadAddr(i64 %753, i32 2137, i32 49, i32 9), !dbg !1740
  %754 = load i32, i32* %tmp465.i.i, align 4, !dbg !1740
  call void @printDDep(i32 2133, i32 2137), !dbg !1740
  call void @printDDep(i32 2133, i32 2137), !dbg !1740
  call void @printCDep(i32 610, i32 2137), !dbg !1740
  %755 = ptrtoint i32* %t.i.i to i64, !dbg !1825
  call void @printStoreAddr(i64 %755, i32 2141, i32 49, i32 9), !dbg !1825
  store i32 %754, i32* %t.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2133, i32 2141), !dbg !1825
  call void @printDDep(i32 2120, i32 2141), !dbg !1825
  call void @printCDep(i32 610, i32 2141), !dbg !1825
  %756 = ptrtoint i32* %u.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %756, i32 2145, i32 49, i32 9), !dbg !1825
  %757 = load i32, i32* %u.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2098, i32 2145), !dbg !1825
  call void @printDDep(i32 2111, i32 2145), !dbg !1825
  call void @printCDep(i32 610, i32 2145), !dbg !1825
  %shr466.i.i = lshr i32 %757, 2, !dbg !1825
  %and467.i.i = and i32 %shr466.i.i, 63, !dbg !1825
  %idxprom468.i.i = zext i32 %and467.i.i to i64, !dbg !1825
  %arrayidx469.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom468.i.i, !dbg !1825
  %758 = ptrtoint i32* %arrayidx469.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %758, i32 2153, i32 49, i32 9), !dbg !1825
  %759 = load i32, i32* %arrayidx469.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2111, i32 2153), !dbg !1825
  call void @printCDep(i32 610, i32 2153), !dbg !1825
  %760 = ptrtoint i32* %u.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %760, i32 2156, i32 49, i32 9), !dbg !1825
  %761 = load i32, i32* %u.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2098, i32 2156), !dbg !1825
  call void @printDDep(i32 2145, i32 2156), !dbg !1825
  call void @printCDep(i32 610, i32 2156), !dbg !1825
  %shr470.i.i = lshr i32 %761, 10, !dbg !1825
  %and471.i.i = and i32 %shr470.i.i, 63, !dbg !1825
  %idxprom472.i.i = zext i32 %and471.i.i to i64, !dbg !1825
  %arrayidx473.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom472.i.i, !dbg !1825
  %762 = ptrtoint i32* %arrayidx473.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %762, i32 2164, i32 49, i32 9), !dbg !1825
  %763 = load i32, i32* %arrayidx473.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2111, i32 2164), !dbg !1825
  call void @printCDep(i32 610, i32 2164), !dbg !1825
  %xor474.i.i = xor i32 %759, %763, !dbg !1825
  %764 = ptrtoint i32* %u.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %764, i32 2168, i32 49, i32 9), !dbg !1825
  %765 = load i32, i32* %u.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2098, i32 2168), !dbg !1825
  call void @printDDep(i32 2156, i32 2168), !dbg !1825
  call void @printCDep(i32 610, i32 2168), !dbg !1825
  %shr475.i.i = lshr i32 %765, 18, !dbg !1825
  %and476.i.i = and i32 %shr475.i.i, 63, !dbg !1825
  %idxprom477.i.i = zext i32 %and476.i.i to i64, !dbg !1825
  %arrayidx478.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom477.i.i, !dbg !1825
  %766 = ptrtoint i32* %arrayidx478.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %766, i32 2176, i32 49, i32 9), !dbg !1825
  %767 = load i32, i32* %arrayidx478.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2111, i32 2176), !dbg !1825
  call void @printCDep(i32 610, i32 2176), !dbg !1825
  %xor479.i.i = xor i32 %xor474.i.i, %767, !dbg !1825
  %768 = ptrtoint i32* %u.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %768, i32 2180, i32 49, i32 9), !dbg !1825
  %769 = load i32, i32* %u.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2098, i32 2180), !dbg !1825
  call void @printDDep(i32 2168, i32 2180), !dbg !1825
  call void @printCDep(i32 610, i32 2180), !dbg !1825
  %shr480.i.i = lshr i32 %769, 26, !dbg !1825
  %idxprom482.i.i = zext i32 %shr480.i.i to i64, !dbg !1825
  %arrayidx483.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom482.i.i, !dbg !1825
  %770 = ptrtoint i32* %arrayidx483.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %770, i32 2187, i32 49, i32 9), !dbg !1825
  %771 = load i32, i32* %arrayidx483.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2111, i32 2187), !dbg !1825
  call void @printCDep(i32 610, i32 2187), !dbg !1825
  %xor484.i.i = xor i32 %xor479.i.i, %771, !dbg !1825
  %772 = ptrtoint i32* %t.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %772, i32 2191, i32 49, i32 9), !dbg !1825
  %773 = load i32, i32* %t.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2141, i32 2191), !dbg !1825
  call void @printDDep(i32 2141, i32 2191), !dbg !1825
  call void @printCDep(i32 610, i32 2191), !dbg !1825
  %shr485.i.i = lshr i32 %773, 2, !dbg !1825
  %and486.i.i = and i32 %shr485.i.i, 63, !dbg !1825
  %idxprom487.i.i = zext i32 %and486.i.i to i64, !dbg !1825
  %arrayidx488.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom487.i.i, !dbg !1825
  %774 = ptrtoint i32* %arrayidx488.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %774, i32 2199, i32 49, i32 9), !dbg !1825
  %775 = load i32, i32* %arrayidx488.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2111, i32 2199), !dbg !1825
  call void @printCDep(i32 610, i32 2199), !dbg !1825
  %xor489.i.i = xor i32 %xor484.i.i, %775, !dbg !1825
  %776 = ptrtoint i32* %t.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %776, i32 2203, i32 49, i32 9), !dbg !1825
  %777 = load i32, i32* %t.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2141, i32 2203), !dbg !1825
  call void @printDDep(i32 2191, i32 2203), !dbg !1825
  call void @printCDep(i32 610, i32 2203), !dbg !1825
  %shr490.i.i = lshr i32 %777, 10, !dbg !1825
  %and491.i.i = and i32 %shr490.i.i, 63, !dbg !1825
  %idxprom492.i.i = zext i32 %and491.i.i to i64, !dbg !1825
  %arrayidx493.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom492.i.i, !dbg !1825
  %778 = ptrtoint i32* %arrayidx493.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %778, i32 2211, i32 49, i32 9), !dbg !1825
  %779 = load i32, i32* %arrayidx493.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2111, i32 2211), !dbg !1825
  call void @printCDep(i32 610, i32 2211), !dbg !1825
  %xor494.i.i = xor i32 %xor489.i.i, %779, !dbg !1825
  %780 = ptrtoint i32* %t.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %780, i32 2215, i32 49, i32 9), !dbg !1825
  %781 = load i32, i32* %t.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2141, i32 2215), !dbg !1825
  call void @printDDep(i32 2203, i32 2215), !dbg !1825
  call void @printCDep(i32 610, i32 2215), !dbg !1825
  %shr495.i.i = lshr i32 %781, 18, !dbg !1825
  %and496.i.i = and i32 %shr495.i.i, 63, !dbg !1825
  %idxprom497.i.i = zext i32 %and496.i.i to i64, !dbg !1825
  %arrayidx498.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom497.i.i, !dbg !1825
  %782 = ptrtoint i32* %arrayidx498.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %782, i32 2223, i32 49, i32 9), !dbg !1825
  %783 = load i32, i32* %arrayidx498.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2111, i32 2223), !dbg !1825
  call void @printCDep(i32 610, i32 2223), !dbg !1825
  %xor499.i.i = xor i32 %xor494.i.i, %783, !dbg !1825
  %784 = ptrtoint i32* %t.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %784, i32 2227, i32 49, i32 9), !dbg !1825
  %785 = load i32, i32* %t.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2141, i32 2227), !dbg !1825
  call void @printDDep(i32 2215, i32 2227), !dbg !1825
  call void @printCDep(i32 610, i32 2227), !dbg !1825
  %shr500.i.i = lshr i32 %785, 26, !dbg !1825
  %idxprom502.i.i = zext i32 %shr500.i.i to i64, !dbg !1825
  %arrayidx503.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom502.i.i, !dbg !1825
  %786 = ptrtoint i32* %arrayidx503.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %786, i32 2234, i32 49, i32 9), !dbg !1825
  %787 = load i32, i32* %arrayidx503.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2111, i32 2234), !dbg !1825
  call void @printCDep(i32 610, i32 2234), !dbg !1825
  %xor504.i.i = xor i32 %xor499.i.i, %787, !dbg !1825
  %788 = ptrtoint i32* %r.i.i to i64, !dbg !1825
  call void @printLoadAddr(i64 %788, i32 2238, i32 49, i32 9), !dbg !1825
  %789 = load i32, i32* %r.i.i, align 4, !dbg !1825
  call void @printDDep(i32 1917, i32 2238), !dbg !1825
  call void @printDDep(i32 2111, i32 2238), !dbg !1825
  call void @printCDep(i32 610, i32 2238), !dbg !1825
  %xor505.i.i = xor i32 %789, %xor504.i.i, !dbg !1825
  %790 = ptrtoint i32* %r.i.i to i64, !dbg !1825
  call void @printStoreAddr(i64 %790, i32 2243, i32 49, i32 9), !dbg !1825
  store i32 %xor505.i.i, i32* %r.i.i, align 4, !dbg !1825
  call void @printDDep(i32 2141, i32 2243), !dbg !1825
  call void @printDDep(i32 2238, i32 2243), !dbg !1825
  call void @printCDep(i32 610, i32 2243), !dbg !1825
  %791 = ptrtoint i32* %r.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %791, i32 2247, i32 50, i32 9), !dbg !1826
  %792 = load i32, i32* %r.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2243, i32 2247), !dbg !1826
  call void @printDDep(i32 2243, i32 2247), !dbg !1826
  call void @printCDep(i32 610, i32 2247), !dbg !1826
  %793 = ptrtoint i32** %s.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %793, i32 2251, i32 50, i32 9), !dbg !1826
  %794 = load i32*, i32** %s.i.i, align 8, !dbg !1826
  call void @printDDep(i32 607, i32 2251), !dbg !1826
  call void @printDDep(i32 2111, i32 2251), !dbg !1826
  call void @printCDep(i32 610, i32 2251), !dbg !1826
  %arrayidx506.i.i = getelementptr inbounds i32, i32* %794, i64 20, !dbg !1826
  %795 = ptrtoint i32* %arrayidx506.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %795, i32 2256, i32 50, i32 9), !dbg !1826
  %796 = load i32, i32* %arrayidx506.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2243, i32 2256), !dbg !1826
  call void @printDDep(i32 2251, i32 2256), !dbg !1826
  call void @printCDep(i32 610, i32 2256), !dbg !1826
  %xor507.i.i = xor i32 %792, %796, !dbg !1826
  %797 = ptrtoint i32* %u.i.i to i64, !dbg !1826
  call void @printStoreAddr(i64 %797, i32 2261, i32 50, i32 9), !dbg !1826
  store i32 %xor507.i.i, i32* %u.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2243, i32 2261), !dbg !1826
  call void @printDDep(i32 2256, i32 2261), !dbg !1826
  call void @printCDep(i32 610, i32 2261), !dbg !1826
  %798 = ptrtoint i32* %r.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %798, i32 2265, i32 50, i32 9), !dbg !1826
  %799 = load i32, i32* %r.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2243, i32 2265), !dbg !1826
  call void @printDDep(i32 2256, i32 2265), !dbg !1826
  call void @printCDep(i32 610, i32 2265), !dbg !1826
  %800 = ptrtoint i32** %s.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %800, i32 2269, i32 50, i32 9), !dbg !1826
  %801 = load i32*, i32** %s.i.i, align 8, !dbg !1826
  call void @printDDep(i32 607, i32 2269), !dbg !1826
  call void @printDDep(i32 2256, i32 2269), !dbg !1826
  call void @printCDep(i32 610, i32 2269), !dbg !1826
  %arrayidx508.i.i = getelementptr inbounds i32, i32* %801, i64 21, !dbg !1826
  %802 = ptrtoint i32* %arrayidx508.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %802, i32 2274, i32 50, i32 9), !dbg !1826
  %803 = load i32, i32* %arrayidx508.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2261, i32 2274), !dbg !1826
  call void @printDDep(i32 2269, i32 2274), !dbg !1826
  call void @printCDep(i32 610, i32 2274), !dbg !1826
  %xor509.i.i = xor i32 %799, %803, !dbg !1826
  %804 = ptrtoint i32* %t.i.i to i64, !dbg !1826
  call void @printStoreAddr(i64 %804, i32 2279, i32 50, i32 9), !dbg !1826
  store i32 %xor509.i.i, i32* %t.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2261, i32 2279), !dbg !1826
  call void @printDDep(i32 2274, i32 2279), !dbg !1826
  call void @printCDep(i32 610, i32 2279), !dbg !1826
  %805 = ptrtoint i32* %t.i.i to i64, !dbg !1741
  call void @printLoadAddr(i64 %805, i32 2283, i32 50, i32 9), !dbg !1741
  %806 = load i32, i32* %t.i.i, align 4, !dbg !1741
  call void @printDDep(i32 2279, i32 2283), !dbg !1741
  call void @printDDep(i32 2279, i32 2283), !dbg !1741
  call void @printCDep(i32 610, i32 2283), !dbg !1741
  %807 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %806) #5, !dbg !1741, !srcloc !154
  %808 = ptrtoint i32* %ret510.i.i to i64, !dbg !1741
  call void @printStoreAddr(i64 %808, i32 2288, i32 50, i32 9), !dbg !1741
  store i32 %807, i32* %ret510.i.i, align 4, !dbg !1741
  call void @printDDep(i32 2279, i32 2288), !dbg !1741
  call void @printDDep(i32 161, i32 2288), !dbg !1741
  call void @printCDep(i32 610, i32 2288), !dbg !1741
  %809 = ptrtoint i32* %ret510.i.i to i64, !dbg !1741
  call void @printLoadAddr(i64 %809, i32 2292, i32 50, i32 9), !dbg !1741
  %810 = load i32, i32* %ret510.i.i, align 4, !dbg !1741
  call void @printDDep(i32 2288, i32 2292), !dbg !1741
  call void @printDDep(i32 2288, i32 2292), !dbg !1741
  call void @printCDep(i32 610, i32 2292), !dbg !1741
  %811 = ptrtoint i32* %tmp511.i.i to i64, !dbg !1741
  call void @printStoreAddr(i64 %811, i32 2296, i32 50, i32 9), !dbg !1741
  store i32 %810, i32* %tmp511.i.i, align 4, !dbg !1741
  call void @printDDep(i32 2288, i32 2296), !dbg !1741
  call void @printDDep(i32 161, i32 2296), !dbg !1741
  call void @printCDep(i32 610, i32 2296), !dbg !1741
  %812 = ptrtoint i32* %tmp511.i.i to i64, !dbg !1741
  call void @printLoadAddr(i64 %812, i32 2300, i32 50, i32 9), !dbg !1741
  %813 = load i32, i32* %tmp511.i.i, align 4, !dbg !1741
  call void @printDDep(i32 2296, i32 2300), !dbg !1741
  call void @printDDep(i32 2296, i32 2300), !dbg !1741
  call void @printCDep(i32 610, i32 2300), !dbg !1741
  %814 = ptrtoint i32* %t.i.i to i64, !dbg !1826
  call void @printStoreAddr(i64 %814, i32 2304, i32 50, i32 9), !dbg !1826
  store i32 %813, i32* %t.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2296, i32 2304), !dbg !1826
  call void @printDDep(i32 2283, i32 2304), !dbg !1826
  call void @printCDep(i32 610, i32 2304), !dbg !1826
  %815 = ptrtoint i32* %u.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %815, i32 2308, i32 50, i32 9), !dbg !1826
  %816 = load i32, i32* %u.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2261, i32 2308), !dbg !1826
  call void @printDDep(i32 2274, i32 2308), !dbg !1826
  call void @printCDep(i32 610, i32 2308), !dbg !1826
  %shr512.i.i = lshr i32 %816, 2, !dbg !1826
  %and513.i.i = and i32 %shr512.i.i, 63, !dbg !1826
  %idxprom514.i.i = zext i32 %and513.i.i to i64, !dbg !1826
  %arrayidx515.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom514.i.i, !dbg !1826
  %817 = ptrtoint i32* %arrayidx515.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %817, i32 2316, i32 50, i32 9), !dbg !1826
  %818 = load i32, i32* %arrayidx515.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2274, i32 2316), !dbg !1826
  call void @printCDep(i32 610, i32 2316), !dbg !1826
  %819 = ptrtoint i32* %u.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %819, i32 2319, i32 50, i32 9), !dbg !1826
  %820 = load i32, i32* %u.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2261, i32 2319), !dbg !1826
  call void @printDDep(i32 2308, i32 2319), !dbg !1826
  call void @printCDep(i32 610, i32 2319), !dbg !1826
  %shr516.i.i = lshr i32 %820, 10, !dbg !1826
  %and517.i.i = and i32 %shr516.i.i, 63, !dbg !1826
  %idxprom518.i.i = zext i32 %and517.i.i to i64, !dbg !1826
  %arrayidx519.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom518.i.i, !dbg !1826
  %821 = ptrtoint i32* %arrayidx519.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %821, i32 2327, i32 50, i32 9), !dbg !1826
  %822 = load i32, i32* %arrayidx519.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2274, i32 2327), !dbg !1826
  call void @printCDep(i32 610, i32 2327), !dbg !1826
  %xor520.i.i = xor i32 %818, %822, !dbg !1826
  %823 = ptrtoint i32* %u.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %823, i32 2331, i32 50, i32 9), !dbg !1826
  %824 = load i32, i32* %u.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2261, i32 2331), !dbg !1826
  call void @printDDep(i32 2319, i32 2331), !dbg !1826
  call void @printCDep(i32 610, i32 2331), !dbg !1826
  %shr521.i.i = lshr i32 %824, 18, !dbg !1826
  %and522.i.i = and i32 %shr521.i.i, 63, !dbg !1826
  %idxprom523.i.i = zext i32 %and522.i.i to i64, !dbg !1826
  %arrayidx524.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom523.i.i, !dbg !1826
  %825 = ptrtoint i32* %arrayidx524.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %825, i32 2339, i32 50, i32 9), !dbg !1826
  %826 = load i32, i32* %arrayidx524.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2274, i32 2339), !dbg !1826
  call void @printCDep(i32 610, i32 2339), !dbg !1826
  %xor525.i.i = xor i32 %xor520.i.i, %826, !dbg !1826
  %827 = ptrtoint i32* %u.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %827, i32 2343, i32 50, i32 9), !dbg !1826
  %828 = load i32, i32* %u.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2261, i32 2343), !dbg !1826
  call void @printDDep(i32 2331, i32 2343), !dbg !1826
  call void @printCDep(i32 610, i32 2343), !dbg !1826
  %shr526.i.i = lshr i32 %828, 26, !dbg !1826
  %idxprom528.i.i = zext i32 %shr526.i.i to i64, !dbg !1826
  %arrayidx529.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom528.i.i, !dbg !1826
  %829 = ptrtoint i32* %arrayidx529.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %829, i32 2350, i32 50, i32 9), !dbg !1826
  %830 = load i32, i32* %arrayidx529.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2274, i32 2350), !dbg !1826
  call void @printCDep(i32 610, i32 2350), !dbg !1826
  %xor530.i.i = xor i32 %xor525.i.i, %830, !dbg !1826
  %831 = ptrtoint i32* %t.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %831, i32 2354, i32 50, i32 9), !dbg !1826
  %832 = load i32, i32* %t.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2304, i32 2354), !dbg !1826
  call void @printDDep(i32 2304, i32 2354), !dbg !1826
  call void @printCDep(i32 610, i32 2354), !dbg !1826
  %shr531.i.i = lshr i32 %832, 2, !dbg !1826
  %and532.i.i = and i32 %shr531.i.i, 63, !dbg !1826
  %idxprom533.i.i = zext i32 %and532.i.i to i64, !dbg !1826
  %arrayidx534.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom533.i.i, !dbg !1826
  %833 = ptrtoint i32* %arrayidx534.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %833, i32 2362, i32 50, i32 9), !dbg !1826
  %834 = load i32, i32* %arrayidx534.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2274, i32 2362), !dbg !1826
  call void @printCDep(i32 610, i32 2362), !dbg !1826
  %xor535.i.i = xor i32 %xor530.i.i, %834, !dbg !1826
  %835 = ptrtoint i32* %t.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %835, i32 2366, i32 50, i32 9), !dbg !1826
  %836 = load i32, i32* %t.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2304, i32 2366), !dbg !1826
  call void @printDDep(i32 2354, i32 2366), !dbg !1826
  call void @printCDep(i32 610, i32 2366), !dbg !1826
  %shr536.i.i = lshr i32 %836, 10, !dbg !1826
  %and537.i.i = and i32 %shr536.i.i, 63, !dbg !1826
  %idxprom538.i.i = zext i32 %and537.i.i to i64, !dbg !1826
  %arrayidx539.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom538.i.i, !dbg !1826
  %837 = ptrtoint i32* %arrayidx539.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %837, i32 2374, i32 50, i32 9), !dbg !1826
  %838 = load i32, i32* %arrayidx539.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2274, i32 2374), !dbg !1826
  call void @printCDep(i32 610, i32 2374), !dbg !1826
  %xor540.i.i = xor i32 %xor535.i.i, %838, !dbg !1826
  %839 = ptrtoint i32* %t.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %839, i32 2378, i32 50, i32 9), !dbg !1826
  %840 = load i32, i32* %t.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2304, i32 2378), !dbg !1826
  call void @printDDep(i32 2366, i32 2378), !dbg !1826
  call void @printCDep(i32 610, i32 2378), !dbg !1826
  %shr541.i.i = lshr i32 %840, 18, !dbg !1826
  %and542.i.i = and i32 %shr541.i.i, 63, !dbg !1826
  %idxprom543.i.i = zext i32 %and542.i.i to i64, !dbg !1826
  %arrayidx544.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom543.i.i, !dbg !1826
  %841 = ptrtoint i32* %arrayidx544.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %841, i32 2386, i32 50, i32 9), !dbg !1826
  %842 = load i32, i32* %arrayidx544.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2274, i32 2386), !dbg !1826
  call void @printCDep(i32 610, i32 2386), !dbg !1826
  %xor545.i.i = xor i32 %xor540.i.i, %842, !dbg !1826
  %843 = ptrtoint i32* %t.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %843, i32 2390, i32 50, i32 9), !dbg !1826
  %844 = load i32, i32* %t.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2304, i32 2390), !dbg !1826
  call void @printDDep(i32 2378, i32 2390), !dbg !1826
  call void @printCDep(i32 610, i32 2390), !dbg !1826
  %shr546.i.i = lshr i32 %844, 26, !dbg !1826
  %idxprom548.i.i = zext i32 %shr546.i.i to i64, !dbg !1826
  %arrayidx549.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom548.i.i, !dbg !1826
  %845 = ptrtoint i32* %arrayidx549.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %845, i32 2397, i32 50, i32 9), !dbg !1826
  %846 = load i32, i32* %arrayidx549.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2274, i32 2397), !dbg !1826
  call void @printCDep(i32 610, i32 2397), !dbg !1826
  %xor550.i.i = xor i32 %xor545.i.i, %846, !dbg !1826
  %847 = ptrtoint i32* %l.i.i to i64, !dbg !1826
  call void @printLoadAddr(i64 %847, i32 2401, i32 50, i32 9), !dbg !1826
  %848 = load i32, i32* %l.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2080, i32 2401), !dbg !1826
  call void @printDDep(i32 2274, i32 2401), !dbg !1826
  call void @printCDep(i32 610, i32 2401), !dbg !1826
  %xor551.i.i = xor i32 %848, %xor550.i.i, !dbg !1826
  %849 = ptrtoint i32* %l.i.i to i64, !dbg !1826
  call void @printStoreAddr(i64 %849, i32 2406, i32 50, i32 9), !dbg !1826
  store i32 %xor551.i.i, i32* %l.i.i, align 4, !dbg !1826
  call void @printDDep(i32 2304, i32 2406), !dbg !1826
  call void @printDDep(i32 2401, i32 2406), !dbg !1826
  call void @printCDep(i32 610, i32 2406), !dbg !1826
  %850 = ptrtoint i32* %l.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %850, i32 2410, i32 51, i32 9), !dbg !1827
  %851 = load i32, i32* %l.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2406, i32 2410), !dbg !1827
  call void @printDDep(i32 2406, i32 2410), !dbg !1827
  call void @printCDep(i32 610, i32 2410), !dbg !1827
  %852 = ptrtoint i32** %s.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %852, i32 2414, i32 51, i32 9), !dbg !1827
  %853 = load i32*, i32** %s.i.i, align 8, !dbg !1827
  call void @printDDep(i32 607, i32 2414), !dbg !1827
  call void @printDDep(i32 2274, i32 2414), !dbg !1827
  call void @printCDep(i32 610, i32 2414), !dbg !1827
  %arrayidx552.i.i = getelementptr inbounds i32, i32* %853, i64 22, !dbg !1827
  %854 = ptrtoint i32* %arrayidx552.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %854, i32 2419, i32 51, i32 9), !dbg !1827
  %855 = load i32, i32* %arrayidx552.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2406, i32 2419), !dbg !1827
  call void @printDDep(i32 2414, i32 2419), !dbg !1827
  call void @printCDep(i32 610, i32 2419), !dbg !1827
  %xor553.i.i = xor i32 %851, %855, !dbg !1827
  %856 = ptrtoint i32* %u.i.i to i64, !dbg !1827
  call void @printStoreAddr(i64 %856, i32 2424, i32 51, i32 9), !dbg !1827
  store i32 %xor553.i.i, i32* %u.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2406, i32 2424), !dbg !1827
  call void @printDDep(i32 2419, i32 2424), !dbg !1827
  call void @printCDep(i32 610, i32 2424), !dbg !1827
  %857 = ptrtoint i32* %l.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %857, i32 2428, i32 51, i32 9), !dbg !1827
  %858 = load i32, i32* %l.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2406, i32 2428), !dbg !1827
  call void @printDDep(i32 2419, i32 2428), !dbg !1827
  call void @printCDep(i32 610, i32 2428), !dbg !1827
  %859 = ptrtoint i32** %s.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %859, i32 2432, i32 51, i32 9), !dbg !1827
  %860 = load i32*, i32** %s.i.i, align 8, !dbg !1827
  call void @printDDep(i32 607, i32 2432), !dbg !1827
  call void @printDDep(i32 2419, i32 2432), !dbg !1827
  call void @printCDep(i32 610, i32 2432), !dbg !1827
  %arrayidx554.i.i = getelementptr inbounds i32, i32* %860, i64 23, !dbg !1827
  %861 = ptrtoint i32* %arrayidx554.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %861, i32 2437, i32 51, i32 9), !dbg !1827
  %862 = load i32, i32* %arrayidx554.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2424, i32 2437), !dbg !1827
  call void @printDDep(i32 2432, i32 2437), !dbg !1827
  call void @printCDep(i32 610, i32 2437), !dbg !1827
  %xor555.i.i = xor i32 %858, %862, !dbg !1827
  %863 = ptrtoint i32* %t.i.i to i64, !dbg !1827
  call void @printStoreAddr(i64 %863, i32 2442, i32 51, i32 9), !dbg !1827
  store i32 %xor555.i.i, i32* %t.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2424, i32 2442), !dbg !1827
  call void @printDDep(i32 2437, i32 2442), !dbg !1827
  call void @printCDep(i32 610, i32 2442), !dbg !1827
  %864 = ptrtoint i32* %t.i.i to i64, !dbg !1742
  call void @printLoadAddr(i64 %864, i32 2446, i32 51, i32 9), !dbg !1742
  %865 = load i32, i32* %t.i.i, align 4, !dbg !1742
  call void @printDDep(i32 2442, i32 2446), !dbg !1742
  call void @printDDep(i32 2442, i32 2446), !dbg !1742
  call void @printCDep(i32 610, i32 2446), !dbg !1742
  %866 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %865) #5, !dbg !1742, !srcloc !160
  %867 = ptrtoint i32* %ret556.i.i to i64, !dbg !1742
  call void @printStoreAddr(i64 %867, i32 2451, i32 51, i32 9), !dbg !1742
  store i32 %866, i32* %ret556.i.i, align 4, !dbg !1742
  call void @printDDep(i32 2442, i32 2451), !dbg !1742
  call void @printDDep(i32 161, i32 2451), !dbg !1742
  call void @printCDep(i32 610, i32 2451), !dbg !1742
  %868 = ptrtoint i32* %ret556.i.i to i64, !dbg !1742
  call void @printLoadAddr(i64 %868, i32 2455, i32 51, i32 9), !dbg !1742
  %869 = load i32, i32* %ret556.i.i, align 4, !dbg !1742
  call void @printDDep(i32 2451, i32 2455), !dbg !1742
  call void @printDDep(i32 2451, i32 2455), !dbg !1742
  call void @printCDep(i32 610, i32 2455), !dbg !1742
  %870 = ptrtoint i32* %tmp557.i.i to i64, !dbg !1742
  call void @printStoreAddr(i64 %870, i32 2459, i32 51, i32 9), !dbg !1742
  store i32 %869, i32* %tmp557.i.i, align 4, !dbg !1742
  call void @printDDep(i32 2451, i32 2459), !dbg !1742
  call void @printDDep(i32 161, i32 2459), !dbg !1742
  call void @printCDep(i32 610, i32 2459), !dbg !1742
  %871 = ptrtoint i32* %tmp557.i.i to i64, !dbg !1742
  call void @printLoadAddr(i64 %871, i32 2463, i32 51, i32 9), !dbg !1742
  %872 = load i32, i32* %tmp557.i.i, align 4, !dbg !1742
  call void @printDDep(i32 2459, i32 2463), !dbg !1742
  call void @printDDep(i32 2459, i32 2463), !dbg !1742
  call void @printCDep(i32 610, i32 2463), !dbg !1742
  %873 = ptrtoint i32* %t.i.i to i64, !dbg !1827
  call void @printStoreAddr(i64 %873, i32 2467, i32 51, i32 9), !dbg !1827
  store i32 %872, i32* %t.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2459, i32 2467), !dbg !1827
  call void @printDDep(i32 2446, i32 2467), !dbg !1827
  call void @printCDep(i32 610, i32 2467), !dbg !1827
  %874 = ptrtoint i32* %u.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %874, i32 2471, i32 51, i32 9), !dbg !1827
  %875 = load i32, i32* %u.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2424, i32 2471), !dbg !1827
  call void @printDDep(i32 2437, i32 2471), !dbg !1827
  call void @printCDep(i32 610, i32 2471), !dbg !1827
  %shr558.i.i = lshr i32 %875, 2, !dbg !1827
  %and559.i.i = and i32 %shr558.i.i, 63, !dbg !1827
  %idxprom560.i.i = zext i32 %and559.i.i to i64, !dbg !1827
  %arrayidx561.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom560.i.i, !dbg !1827
  %876 = ptrtoint i32* %arrayidx561.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %876, i32 2479, i32 51, i32 9), !dbg !1827
  %877 = load i32, i32* %arrayidx561.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2437, i32 2479), !dbg !1827
  call void @printCDep(i32 610, i32 2479), !dbg !1827
  %878 = ptrtoint i32* %u.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %878, i32 2482, i32 51, i32 9), !dbg !1827
  %879 = load i32, i32* %u.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2424, i32 2482), !dbg !1827
  call void @printDDep(i32 2471, i32 2482), !dbg !1827
  call void @printCDep(i32 610, i32 2482), !dbg !1827
  %shr562.i.i = lshr i32 %879, 10, !dbg !1827
  %and563.i.i = and i32 %shr562.i.i, 63, !dbg !1827
  %idxprom564.i.i = zext i32 %and563.i.i to i64, !dbg !1827
  %arrayidx565.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom564.i.i, !dbg !1827
  %880 = ptrtoint i32* %arrayidx565.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %880, i32 2490, i32 51, i32 9), !dbg !1827
  %881 = load i32, i32* %arrayidx565.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2437, i32 2490), !dbg !1827
  call void @printCDep(i32 610, i32 2490), !dbg !1827
  %xor566.i.i = xor i32 %877, %881, !dbg !1827
  %882 = ptrtoint i32* %u.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %882, i32 2494, i32 51, i32 9), !dbg !1827
  %883 = load i32, i32* %u.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2424, i32 2494), !dbg !1827
  call void @printDDep(i32 2482, i32 2494), !dbg !1827
  call void @printCDep(i32 610, i32 2494), !dbg !1827
  %shr567.i.i = lshr i32 %883, 18, !dbg !1827
  %and568.i.i = and i32 %shr567.i.i, 63, !dbg !1827
  %idxprom569.i.i = zext i32 %and568.i.i to i64, !dbg !1827
  %arrayidx570.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom569.i.i, !dbg !1827
  %884 = ptrtoint i32* %arrayidx570.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %884, i32 2502, i32 51, i32 9), !dbg !1827
  %885 = load i32, i32* %arrayidx570.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2437, i32 2502), !dbg !1827
  call void @printCDep(i32 610, i32 2502), !dbg !1827
  %xor571.i.i = xor i32 %xor566.i.i, %885, !dbg !1827
  %886 = ptrtoint i32* %u.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %886, i32 2506, i32 51, i32 9), !dbg !1827
  %887 = load i32, i32* %u.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2424, i32 2506), !dbg !1827
  call void @printDDep(i32 2494, i32 2506), !dbg !1827
  call void @printCDep(i32 610, i32 2506), !dbg !1827
  %shr572.i.i = lshr i32 %887, 26, !dbg !1827
  %idxprom574.i.i = zext i32 %shr572.i.i to i64, !dbg !1827
  %arrayidx575.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom574.i.i, !dbg !1827
  %888 = ptrtoint i32* %arrayidx575.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %888, i32 2513, i32 51, i32 9), !dbg !1827
  %889 = load i32, i32* %arrayidx575.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2437, i32 2513), !dbg !1827
  call void @printCDep(i32 610, i32 2513), !dbg !1827
  %xor576.i.i = xor i32 %xor571.i.i, %889, !dbg !1827
  %890 = ptrtoint i32* %t.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %890, i32 2517, i32 51, i32 9), !dbg !1827
  %891 = load i32, i32* %t.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2467, i32 2517), !dbg !1827
  call void @printDDep(i32 2467, i32 2517), !dbg !1827
  call void @printCDep(i32 610, i32 2517), !dbg !1827
  %shr577.i.i = lshr i32 %891, 2, !dbg !1827
  %and578.i.i = and i32 %shr577.i.i, 63, !dbg !1827
  %idxprom579.i.i = zext i32 %and578.i.i to i64, !dbg !1827
  %arrayidx580.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom579.i.i, !dbg !1827
  %892 = ptrtoint i32* %arrayidx580.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %892, i32 2525, i32 51, i32 9), !dbg !1827
  %893 = load i32, i32* %arrayidx580.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2437, i32 2525), !dbg !1827
  call void @printCDep(i32 610, i32 2525), !dbg !1827
  %xor581.i.i = xor i32 %xor576.i.i, %893, !dbg !1827
  %894 = ptrtoint i32* %t.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %894, i32 2529, i32 51, i32 9), !dbg !1827
  %895 = load i32, i32* %t.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2467, i32 2529), !dbg !1827
  call void @printDDep(i32 2517, i32 2529), !dbg !1827
  call void @printCDep(i32 610, i32 2529), !dbg !1827
  %shr582.i.i = lshr i32 %895, 10, !dbg !1827
  %and583.i.i = and i32 %shr582.i.i, 63, !dbg !1827
  %idxprom584.i.i = zext i32 %and583.i.i to i64, !dbg !1827
  %arrayidx585.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom584.i.i, !dbg !1827
  %896 = ptrtoint i32* %arrayidx585.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %896, i32 2537, i32 51, i32 9), !dbg !1827
  %897 = load i32, i32* %arrayidx585.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2437, i32 2537), !dbg !1827
  call void @printCDep(i32 610, i32 2537), !dbg !1827
  %xor586.i.i = xor i32 %xor581.i.i, %897, !dbg !1827
  %898 = ptrtoint i32* %t.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %898, i32 2541, i32 51, i32 9), !dbg !1827
  %899 = load i32, i32* %t.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2467, i32 2541), !dbg !1827
  call void @printDDep(i32 2529, i32 2541), !dbg !1827
  call void @printCDep(i32 610, i32 2541), !dbg !1827
  %shr587.i.i = lshr i32 %899, 18, !dbg !1827
  %and588.i.i = and i32 %shr587.i.i, 63, !dbg !1827
  %idxprom589.i.i = zext i32 %and588.i.i to i64, !dbg !1827
  %arrayidx590.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom589.i.i, !dbg !1827
  %900 = ptrtoint i32* %arrayidx590.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %900, i32 2549, i32 51, i32 9), !dbg !1827
  %901 = load i32, i32* %arrayidx590.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2437, i32 2549), !dbg !1827
  call void @printCDep(i32 610, i32 2549), !dbg !1827
  %xor591.i.i = xor i32 %xor586.i.i, %901, !dbg !1827
  %902 = ptrtoint i32* %t.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %902, i32 2553, i32 51, i32 9), !dbg !1827
  %903 = load i32, i32* %t.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2467, i32 2553), !dbg !1827
  call void @printDDep(i32 2541, i32 2553), !dbg !1827
  call void @printCDep(i32 610, i32 2553), !dbg !1827
  %shr592.i.i = lshr i32 %903, 26, !dbg !1827
  %idxprom594.i.i = zext i32 %shr592.i.i to i64, !dbg !1827
  %arrayidx595.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom594.i.i, !dbg !1827
  %904 = ptrtoint i32* %arrayidx595.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %904, i32 2560, i32 51, i32 9), !dbg !1827
  %905 = load i32, i32* %arrayidx595.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2437, i32 2560), !dbg !1827
  call void @printCDep(i32 610, i32 2560), !dbg !1827
  %xor596.i.i = xor i32 %xor591.i.i, %905, !dbg !1827
  %906 = ptrtoint i32* %r.i.i to i64, !dbg !1827
  call void @printLoadAddr(i64 %906, i32 2564, i32 51, i32 9), !dbg !1827
  %907 = load i32, i32* %r.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2243, i32 2564), !dbg !1827
  call void @printDDep(i32 2437, i32 2564), !dbg !1827
  call void @printCDep(i32 610, i32 2564), !dbg !1827
  %xor597.i.i = xor i32 %907, %xor596.i.i, !dbg !1827
  %908 = ptrtoint i32* %r.i.i to i64, !dbg !1827
  call void @printStoreAddr(i64 %908, i32 2569, i32 51, i32 9), !dbg !1827
  store i32 %xor597.i.i, i32* %r.i.i, align 4, !dbg !1827
  call void @printDDep(i32 2467, i32 2569), !dbg !1827
  call void @printDDep(i32 2564, i32 2569), !dbg !1827
  call void @printCDep(i32 610, i32 2569), !dbg !1827
  %909 = ptrtoint i32* %r.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %909, i32 2573, i32 52, i32 9), !dbg !1828
  %910 = load i32, i32* %r.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2569, i32 2573), !dbg !1828
  call void @printDDep(i32 2569, i32 2573), !dbg !1828
  call void @printCDep(i32 610, i32 2573), !dbg !1828
  %911 = ptrtoint i32** %s.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %911, i32 2577, i32 52, i32 9), !dbg !1828
  %912 = load i32*, i32** %s.i.i, align 8, !dbg !1828
  call void @printDDep(i32 607, i32 2577), !dbg !1828
  call void @printDDep(i32 2437, i32 2577), !dbg !1828
  call void @printCDep(i32 610, i32 2577), !dbg !1828
  %arrayidx598.i.i = getelementptr inbounds i32, i32* %912, i64 24, !dbg !1828
  %913 = ptrtoint i32* %arrayidx598.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %913, i32 2582, i32 52, i32 9), !dbg !1828
  %914 = load i32, i32* %arrayidx598.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2569, i32 2582), !dbg !1828
  call void @printDDep(i32 2577, i32 2582), !dbg !1828
  call void @printCDep(i32 610, i32 2582), !dbg !1828
  %xor599.i.i = xor i32 %910, %914, !dbg !1828
  %915 = ptrtoint i32* %u.i.i to i64, !dbg !1828
  call void @printStoreAddr(i64 %915, i32 2587, i32 52, i32 9), !dbg !1828
  store i32 %xor599.i.i, i32* %u.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2569, i32 2587), !dbg !1828
  call void @printDDep(i32 2582, i32 2587), !dbg !1828
  call void @printCDep(i32 610, i32 2587), !dbg !1828
  %916 = ptrtoint i32* %r.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %916, i32 2591, i32 52, i32 9), !dbg !1828
  %917 = load i32, i32* %r.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2569, i32 2591), !dbg !1828
  call void @printDDep(i32 2582, i32 2591), !dbg !1828
  call void @printCDep(i32 610, i32 2591), !dbg !1828
  %918 = ptrtoint i32** %s.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %918, i32 2595, i32 52, i32 9), !dbg !1828
  %919 = load i32*, i32** %s.i.i, align 8, !dbg !1828
  call void @printDDep(i32 607, i32 2595), !dbg !1828
  call void @printDDep(i32 2582, i32 2595), !dbg !1828
  call void @printCDep(i32 610, i32 2595), !dbg !1828
  %arrayidx600.i.i = getelementptr inbounds i32, i32* %919, i64 25, !dbg !1828
  %920 = ptrtoint i32* %arrayidx600.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %920, i32 2600, i32 52, i32 9), !dbg !1828
  %921 = load i32, i32* %arrayidx600.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2587, i32 2600), !dbg !1828
  call void @printDDep(i32 2595, i32 2600), !dbg !1828
  call void @printCDep(i32 610, i32 2600), !dbg !1828
  %xor601.i.i = xor i32 %917, %921, !dbg !1828
  %922 = ptrtoint i32* %t.i.i to i64, !dbg !1828
  call void @printStoreAddr(i64 %922, i32 2605, i32 52, i32 9), !dbg !1828
  store i32 %xor601.i.i, i32* %t.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2587, i32 2605), !dbg !1828
  call void @printDDep(i32 2600, i32 2605), !dbg !1828
  call void @printCDep(i32 610, i32 2605), !dbg !1828
  %923 = ptrtoint i32* %t.i.i to i64, !dbg !1743
  call void @printLoadAddr(i64 %923, i32 2609, i32 52, i32 9), !dbg !1743
  %924 = load i32, i32* %t.i.i, align 4, !dbg !1743
  call void @printDDep(i32 2605, i32 2609), !dbg !1743
  call void @printDDep(i32 2605, i32 2609), !dbg !1743
  call void @printCDep(i32 610, i32 2609), !dbg !1743
  %925 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %924) #5, !dbg !1743, !srcloc !166
  %926 = ptrtoint i32* %ret602.i.i to i64, !dbg !1743
  call void @printStoreAddr(i64 %926, i32 2614, i32 52, i32 9), !dbg !1743
  store i32 %925, i32* %ret602.i.i, align 4, !dbg !1743
  call void @printDDep(i32 2605, i32 2614), !dbg !1743
  call void @printDDep(i32 161, i32 2614), !dbg !1743
  call void @printCDep(i32 610, i32 2614), !dbg !1743
  %927 = ptrtoint i32* %ret602.i.i to i64, !dbg !1743
  call void @printLoadAddr(i64 %927, i32 2618, i32 52, i32 9), !dbg !1743
  %928 = load i32, i32* %ret602.i.i, align 4, !dbg !1743
  call void @printDDep(i32 2614, i32 2618), !dbg !1743
  call void @printDDep(i32 2614, i32 2618), !dbg !1743
  call void @printCDep(i32 610, i32 2618), !dbg !1743
  %929 = ptrtoint i32* %tmp603.i.i to i64, !dbg !1743
  call void @printStoreAddr(i64 %929, i32 2622, i32 52, i32 9), !dbg !1743
  store i32 %928, i32* %tmp603.i.i, align 4, !dbg !1743
  call void @printDDep(i32 2614, i32 2622), !dbg !1743
  call void @printDDep(i32 161, i32 2622), !dbg !1743
  call void @printCDep(i32 610, i32 2622), !dbg !1743
  %930 = ptrtoint i32* %tmp603.i.i to i64, !dbg !1743
  call void @printLoadAddr(i64 %930, i32 2626, i32 52, i32 9), !dbg !1743
  %931 = load i32, i32* %tmp603.i.i, align 4, !dbg !1743
  call void @printDDep(i32 2622, i32 2626), !dbg !1743
  call void @printDDep(i32 2622, i32 2626), !dbg !1743
  call void @printCDep(i32 610, i32 2626), !dbg !1743
  %932 = ptrtoint i32* %t.i.i to i64, !dbg !1828
  call void @printStoreAddr(i64 %932, i32 2630, i32 52, i32 9), !dbg !1828
  store i32 %931, i32* %t.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2622, i32 2630), !dbg !1828
  call void @printDDep(i32 2609, i32 2630), !dbg !1828
  call void @printCDep(i32 610, i32 2630), !dbg !1828
  %933 = ptrtoint i32* %u.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %933, i32 2634, i32 52, i32 9), !dbg !1828
  %934 = load i32, i32* %u.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2587, i32 2634), !dbg !1828
  call void @printDDep(i32 2600, i32 2634), !dbg !1828
  call void @printCDep(i32 610, i32 2634), !dbg !1828
  %shr604.i.i = lshr i32 %934, 2, !dbg !1828
  %and605.i.i = and i32 %shr604.i.i, 63, !dbg !1828
  %idxprom606.i.i = zext i32 %and605.i.i to i64, !dbg !1828
  %arrayidx607.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom606.i.i, !dbg !1828
  %935 = ptrtoint i32* %arrayidx607.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %935, i32 2642, i32 52, i32 9), !dbg !1828
  %936 = load i32, i32* %arrayidx607.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2600, i32 2642), !dbg !1828
  call void @printCDep(i32 610, i32 2642), !dbg !1828
  %937 = ptrtoint i32* %u.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %937, i32 2645, i32 52, i32 9), !dbg !1828
  %938 = load i32, i32* %u.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2587, i32 2645), !dbg !1828
  call void @printDDep(i32 2634, i32 2645), !dbg !1828
  call void @printCDep(i32 610, i32 2645), !dbg !1828
  %shr608.i.i = lshr i32 %938, 10, !dbg !1828
  %and609.i.i = and i32 %shr608.i.i, 63, !dbg !1828
  %idxprom610.i.i = zext i32 %and609.i.i to i64, !dbg !1828
  %arrayidx611.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom610.i.i, !dbg !1828
  %939 = ptrtoint i32* %arrayidx611.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %939, i32 2653, i32 52, i32 9), !dbg !1828
  %940 = load i32, i32* %arrayidx611.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2600, i32 2653), !dbg !1828
  call void @printCDep(i32 610, i32 2653), !dbg !1828
  %xor612.i.i = xor i32 %936, %940, !dbg !1828
  %941 = ptrtoint i32* %u.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %941, i32 2657, i32 52, i32 9), !dbg !1828
  %942 = load i32, i32* %u.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2587, i32 2657), !dbg !1828
  call void @printDDep(i32 2645, i32 2657), !dbg !1828
  call void @printCDep(i32 610, i32 2657), !dbg !1828
  %shr613.i.i = lshr i32 %942, 18, !dbg !1828
  %and614.i.i = and i32 %shr613.i.i, 63, !dbg !1828
  %idxprom615.i.i = zext i32 %and614.i.i to i64, !dbg !1828
  %arrayidx616.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom615.i.i, !dbg !1828
  %943 = ptrtoint i32* %arrayidx616.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %943, i32 2665, i32 52, i32 9), !dbg !1828
  %944 = load i32, i32* %arrayidx616.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2600, i32 2665), !dbg !1828
  call void @printCDep(i32 610, i32 2665), !dbg !1828
  %xor617.i.i = xor i32 %xor612.i.i, %944, !dbg !1828
  %945 = ptrtoint i32* %u.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %945, i32 2669, i32 52, i32 9), !dbg !1828
  %946 = load i32, i32* %u.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2587, i32 2669), !dbg !1828
  call void @printDDep(i32 2657, i32 2669), !dbg !1828
  call void @printCDep(i32 610, i32 2669), !dbg !1828
  %shr618.i.i = lshr i32 %946, 26, !dbg !1828
  %idxprom620.i.i = zext i32 %shr618.i.i to i64, !dbg !1828
  %arrayidx621.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom620.i.i, !dbg !1828
  %947 = ptrtoint i32* %arrayidx621.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %947, i32 2676, i32 52, i32 9), !dbg !1828
  %948 = load i32, i32* %arrayidx621.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2600, i32 2676), !dbg !1828
  call void @printCDep(i32 610, i32 2676), !dbg !1828
  %xor622.i.i = xor i32 %xor617.i.i, %948, !dbg !1828
  %949 = ptrtoint i32* %t.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %949, i32 2680, i32 52, i32 9), !dbg !1828
  %950 = load i32, i32* %t.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2630, i32 2680), !dbg !1828
  call void @printDDep(i32 2630, i32 2680), !dbg !1828
  call void @printCDep(i32 610, i32 2680), !dbg !1828
  %shr623.i.i = lshr i32 %950, 2, !dbg !1828
  %and624.i.i = and i32 %shr623.i.i, 63, !dbg !1828
  %idxprom625.i.i = zext i32 %and624.i.i to i64, !dbg !1828
  %arrayidx626.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom625.i.i, !dbg !1828
  %951 = ptrtoint i32* %arrayidx626.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %951, i32 2688, i32 52, i32 9), !dbg !1828
  %952 = load i32, i32* %arrayidx626.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2600, i32 2688), !dbg !1828
  call void @printCDep(i32 610, i32 2688), !dbg !1828
  %xor627.i.i = xor i32 %xor622.i.i, %952, !dbg !1828
  %953 = ptrtoint i32* %t.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %953, i32 2692, i32 52, i32 9), !dbg !1828
  %954 = load i32, i32* %t.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2630, i32 2692), !dbg !1828
  call void @printDDep(i32 2680, i32 2692), !dbg !1828
  call void @printCDep(i32 610, i32 2692), !dbg !1828
  %shr628.i.i = lshr i32 %954, 10, !dbg !1828
  %and629.i.i = and i32 %shr628.i.i, 63, !dbg !1828
  %idxprom630.i.i = zext i32 %and629.i.i to i64, !dbg !1828
  %arrayidx631.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom630.i.i, !dbg !1828
  %955 = ptrtoint i32* %arrayidx631.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %955, i32 2700, i32 52, i32 9), !dbg !1828
  %956 = load i32, i32* %arrayidx631.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2600, i32 2700), !dbg !1828
  call void @printCDep(i32 610, i32 2700), !dbg !1828
  %xor632.i.i = xor i32 %xor627.i.i, %956, !dbg !1828
  %957 = ptrtoint i32* %t.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %957, i32 2704, i32 52, i32 9), !dbg !1828
  %958 = load i32, i32* %t.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2630, i32 2704), !dbg !1828
  call void @printDDep(i32 2692, i32 2704), !dbg !1828
  call void @printCDep(i32 610, i32 2704), !dbg !1828
  %shr633.i.i = lshr i32 %958, 18, !dbg !1828
  %and634.i.i = and i32 %shr633.i.i, 63, !dbg !1828
  %idxprom635.i.i = zext i32 %and634.i.i to i64, !dbg !1828
  %arrayidx636.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom635.i.i, !dbg !1828
  %959 = ptrtoint i32* %arrayidx636.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %959, i32 2712, i32 52, i32 9), !dbg !1828
  %960 = load i32, i32* %arrayidx636.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2600, i32 2712), !dbg !1828
  call void @printCDep(i32 610, i32 2712), !dbg !1828
  %xor637.i.i = xor i32 %xor632.i.i, %960, !dbg !1828
  %961 = ptrtoint i32* %t.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %961, i32 2716, i32 52, i32 9), !dbg !1828
  %962 = load i32, i32* %t.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2630, i32 2716), !dbg !1828
  call void @printDDep(i32 2704, i32 2716), !dbg !1828
  call void @printCDep(i32 610, i32 2716), !dbg !1828
  %shr638.i.i = lshr i32 %962, 26, !dbg !1828
  %idxprom640.i.i = zext i32 %shr638.i.i to i64, !dbg !1828
  %arrayidx641.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom640.i.i, !dbg !1828
  %963 = ptrtoint i32* %arrayidx641.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %963, i32 2723, i32 52, i32 9), !dbg !1828
  %964 = load i32, i32* %arrayidx641.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2600, i32 2723), !dbg !1828
  call void @printCDep(i32 610, i32 2723), !dbg !1828
  %xor642.i.i = xor i32 %xor637.i.i, %964, !dbg !1828
  %965 = ptrtoint i32* %l.i.i to i64, !dbg !1828
  call void @printLoadAddr(i64 %965, i32 2727, i32 52, i32 9), !dbg !1828
  %966 = load i32, i32* %l.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2406, i32 2727), !dbg !1828
  call void @printDDep(i32 2600, i32 2727), !dbg !1828
  call void @printCDep(i32 610, i32 2727), !dbg !1828
  %xor643.i.i = xor i32 %966, %xor642.i.i, !dbg !1828
  %967 = ptrtoint i32* %l.i.i to i64, !dbg !1828
  call void @printStoreAddr(i64 %967, i32 2732, i32 52, i32 9), !dbg !1828
  store i32 %xor643.i.i, i32* %l.i.i, align 4, !dbg !1828
  call void @printDDep(i32 2630, i32 2732), !dbg !1828
  call void @printDDep(i32 2727, i32 2732), !dbg !1828
  call void @printCDep(i32 610, i32 2732), !dbg !1828
  %968 = ptrtoint i32* %l.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %968, i32 2736, i32 53, i32 9), !dbg !1829
  %969 = load i32, i32* %l.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2732, i32 2736), !dbg !1829
  call void @printDDep(i32 2732, i32 2736), !dbg !1829
  call void @printCDep(i32 610, i32 2736), !dbg !1829
  %970 = ptrtoint i32** %s.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %970, i32 2740, i32 53, i32 9), !dbg !1829
  %971 = load i32*, i32** %s.i.i, align 8, !dbg !1829
  call void @printDDep(i32 607, i32 2740), !dbg !1829
  call void @printDDep(i32 2600, i32 2740), !dbg !1829
  call void @printCDep(i32 610, i32 2740), !dbg !1829
  %arrayidx644.i.i = getelementptr inbounds i32, i32* %971, i64 26, !dbg !1829
  %972 = ptrtoint i32* %arrayidx644.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %972, i32 2745, i32 53, i32 9), !dbg !1829
  %973 = load i32, i32* %arrayidx644.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2732, i32 2745), !dbg !1829
  call void @printDDep(i32 2740, i32 2745), !dbg !1829
  call void @printCDep(i32 610, i32 2745), !dbg !1829
  %xor645.i.i = xor i32 %969, %973, !dbg !1829
  %974 = ptrtoint i32* %u.i.i to i64, !dbg !1829
  call void @printStoreAddr(i64 %974, i32 2750, i32 53, i32 9), !dbg !1829
  store i32 %xor645.i.i, i32* %u.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2732, i32 2750), !dbg !1829
  call void @printDDep(i32 2745, i32 2750), !dbg !1829
  call void @printCDep(i32 610, i32 2750), !dbg !1829
  %975 = ptrtoint i32* %l.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %975, i32 2754, i32 53, i32 9), !dbg !1829
  %976 = load i32, i32* %l.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2732, i32 2754), !dbg !1829
  call void @printDDep(i32 2745, i32 2754), !dbg !1829
  call void @printCDep(i32 610, i32 2754), !dbg !1829
  %977 = ptrtoint i32** %s.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %977, i32 2758, i32 53, i32 9), !dbg !1829
  %978 = load i32*, i32** %s.i.i, align 8, !dbg !1829
  call void @printDDep(i32 607, i32 2758), !dbg !1829
  call void @printDDep(i32 2745, i32 2758), !dbg !1829
  call void @printCDep(i32 610, i32 2758), !dbg !1829
  %arrayidx646.i.i = getelementptr inbounds i32, i32* %978, i64 27, !dbg !1829
  %979 = ptrtoint i32* %arrayidx646.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %979, i32 2763, i32 53, i32 9), !dbg !1829
  %980 = load i32, i32* %arrayidx646.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2750, i32 2763), !dbg !1829
  call void @printDDep(i32 2758, i32 2763), !dbg !1829
  call void @printCDep(i32 610, i32 2763), !dbg !1829
  %xor647.i.i = xor i32 %976, %980, !dbg !1829
  %981 = ptrtoint i32* %t.i.i to i64, !dbg !1829
  call void @printStoreAddr(i64 %981, i32 2768, i32 53, i32 9), !dbg !1829
  store i32 %xor647.i.i, i32* %t.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2750, i32 2768), !dbg !1829
  call void @printDDep(i32 2763, i32 2768), !dbg !1829
  call void @printCDep(i32 610, i32 2768), !dbg !1829
  %982 = ptrtoint i32* %t.i.i to i64, !dbg !1744
  call void @printLoadAddr(i64 %982, i32 2772, i32 53, i32 9), !dbg !1744
  %983 = load i32, i32* %t.i.i, align 4, !dbg !1744
  call void @printDDep(i32 2768, i32 2772), !dbg !1744
  call void @printDDep(i32 2768, i32 2772), !dbg !1744
  call void @printCDep(i32 610, i32 2772), !dbg !1744
  %984 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %983) #5, !dbg !1744, !srcloc !172
  %985 = ptrtoint i32* %ret648.i.i to i64, !dbg !1744
  call void @printStoreAddr(i64 %985, i32 2777, i32 53, i32 9), !dbg !1744
  store i32 %984, i32* %ret648.i.i, align 4, !dbg !1744
  call void @printDDep(i32 2768, i32 2777), !dbg !1744
  call void @printDDep(i32 161, i32 2777), !dbg !1744
  call void @printCDep(i32 610, i32 2777), !dbg !1744
  %986 = ptrtoint i32* %ret648.i.i to i64, !dbg !1744
  call void @printLoadAddr(i64 %986, i32 2781, i32 53, i32 9), !dbg !1744
  %987 = load i32, i32* %ret648.i.i, align 4, !dbg !1744
  call void @printDDep(i32 2777, i32 2781), !dbg !1744
  call void @printDDep(i32 2777, i32 2781), !dbg !1744
  call void @printCDep(i32 610, i32 2781), !dbg !1744
  %988 = ptrtoint i32* %tmp649.i.i to i64, !dbg !1744
  call void @printStoreAddr(i64 %988, i32 2785, i32 53, i32 9), !dbg !1744
  store i32 %987, i32* %tmp649.i.i, align 4, !dbg !1744
  call void @printDDep(i32 2777, i32 2785), !dbg !1744
  call void @printDDep(i32 161, i32 2785), !dbg !1744
  call void @printCDep(i32 610, i32 2785), !dbg !1744
  %989 = ptrtoint i32* %tmp649.i.i to i64, !dbg !1744
  call void @printLoadAddr(i64 %989, i32 2789, i32 53, i32 9), !dbg !1744
  %990 = load i32, i32* %tmp649.i.i, align 4, !dbg !1744
  call void @printDDep(i32 2785, i32 2789), !dbg !1744
  call void @printDDep(i32 2785, i32 2789), !dbg !1744
  call void @printCDep(i32 610, i32 2789), !dbg !1744
  %991 = ptrtoint i32* %t.i.i to i64, !dbg !1829
  call void @printStoreAddr(i64 %991, i32 2793, i32 53, i32 9), !dbg !1829
  store i32 %990, i32* %t.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2785, i32 2793), !dbg !1829
  call void @printDDep(i32 2772, i32 2793), !dbg !1829
  call void @printCDep(i32 610, i32 2793), !dbg !1829
  %992 = ptrtoint i32* %u.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %992, i32 2797, i32 53, i32 9), !dbg !1829
  %993 = load i32, i32* %u.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2750, i32 2797), !dbg !1829
  call void @printDDep(i32 2763, i32 2797), !dbg !1829
  call void @printCDep(i32 610, i32 2797), !dbg !1829
  %shr650.i.i = lshr i32 %993, 2, !dbg !1829
  %and651.i.i = and i32 %shr650.i.i, 63, !dbg !1829
  %idxprom652.i.i = zext i32 %and651.i.i to i64, !dbg !1829
  %arrayidx653.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom652.i.i, !dbg !1829
  %994 = ptrtoint i32* %arrayidx653.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %994, i32 2805, i32 53, i32 9), !dbg !1829
  %995 = load i32, i32* %arrayidx653.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2763, i32 2805), !dbg !1829
  call void @printCDep(i32 610, i32 2805), !dbg !1829
  %996 = ptrtoint i32* %u.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %996, i32 2808, i32 53, i32 9), !dbg !1829
  %997 = load i32, i32* %u.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2750, i32 2808), !dbg !1829
  call void @printDDep(i32 2797, i32 2808), !dbg !1829
  call void @printCDep(i32 610, i32 2808), !dbg !1829
  %shr654.i.i = lshr i32 %997, 10, !dbg !1829
  %and655.i.i = and i32 %shr654.i.i, 63, !dbg !1829
  %idxprom656.i.i = zext i32 %and655.i.i to i64, !dbg !1829
  %arrayidx657.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom656.i.i, !dbg !1829
  %998 = ptrtoint i32* %arrayidx657.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %998, i32 2816, i32 53, i32 9), !dbg !1829
  %999 = load i32, i32* %arrayidx657.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2763, i32 2816), !dbg !1829
  call void @printCDep(i32 610, i32 2816), !dbg !1829
  %xor658.i.i = xor i32 %995, %999, !dbg !1829
  %1000 = ptrtoint i32* %u.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1000, i32 2820, i32 53, i32 9), !dbg !1829
  %1001 = load i32, i32* %u.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2750, i32 2820), !dbg !1829
  call void @printDDep(i32 2808, i32 2820), !dbg !1829
  call void @printCDep(i32 610, i32 2820), !dbg !1829
  %shr659.i.i = lshr i32 %1001, 18, !dbg !1829
  %and660.i.i = and i32 %shr659.i.i, 63, !dbg !1829
  %idxprom661.i.i = zext i32 %and660.i.i to i64, !dbg !1829
  %arrayidx662.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom661.i.i, !dbg !1829
  %1002 = ptrtoint i32* %arrayidx662.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1002, i32 2828, i32 53, i32 9), !dbg !1829
  %1003 = load i32, i32* %arrayidx662.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2763, i32 2828), !dbg !1829
  call void @printCDep(i32 610, i32 2828), !dbg !1829
  %xor663.i.i = xor i32 %xor658.i.i, %1003, !dbg !1829
  %1004 = ptrtoint i32* %u.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1004, i32 2832, i32 53, i32 9), !dbg !1829
  %1005 = load i32, i32* %u.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2750, i32 2832), !dbg !1829
  call void @printDDep(i32 2820, i32 2832), !dbg !1829
  call void @printCDep(i32 610, i32 2832), !dbg !1829
  %shr664.i.i = lshr i32 %1005, 26, !dbg !1829
  %idxprom666.i.i = zext i32 %shr664.i.i to i64, !dbg !1829
  %arrayidx667.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom666.i.i, !dbg !1829
  %1006 = ptrtoint i32* %arrayidx667.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1006, i32 2839, i32 53, i32 9), !dbg !1829
  %1007 = load i32, i32* %arrayidx667.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2763, i32 2839), !dbg !1829
  call void @printCDep(i32 610, i32 2839), !dbg !1829
  %xor668.i.i = xor i32 %xor663.i.i, %1007, !dbg !1829
  %1008 = ptrtoint i32* %t.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1008, i32 2843, i32 53, i32 9), !dbg !1829
  %1009 = load i32, i32* %t.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2793, i32 2843), !dbg !1829
  call void @printDDep(i32 2793, i32 2843), !dbg !1829
  call void @printCDep(i32 610, i32 2843), !dbg !1829
  %shr669.i.i = lshr i32 %1009, 2, !dbg !1829
  %and670.i.i = and i32 %shr669.i.i, 63, !dbg !1829
  %idxprom671.i.i = zext i32 %and670.i.i to i64, !dbg !1829
  %arrayidx672.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom671.i.i, !dbg !1829
  %1010 = ptrtoint i32* %arrayidx672.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1010, i32 2851, i32 53, i32 9), !dbg !1829
  %1011 = load i32, i32* %arrayidx672.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2763, i32 2851), !dbg !1829
  call void @printCDep(i32 610, i32 2851), !dbg !1829
  %xor673.i.i = xor i32 %xor668.i.i, %1011, !dbg !1829
  %1012 = ptrtoint i32* %t.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1012, i32 2855, i32 53, i32 9), !dbg !1829
  %1013 = load i32, i32* %t.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2793, i32 2855), !dbg !1829
  call void @printDDep(i32 2843, i32 2855), !dbg !1829
  call void @printCDep(i32 610, i32 2855), !dbg !1829
  %shr674.i.i = lshr i32 %1013, 10, !dbg !1829
  %and675.i.i = and i32 %shr674.i.i, 63, !dbg !1829
  %idxprom676.i.i = zext i32 %and675.i.i to i64, !dbg !1829
  %arrayidx677.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom676.i.i, !dbg !1829
  %1014 = ptrtoint i32* %arrayidx677.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1014, i32 2863, i32 53, i32 9), !dbg !1829
  %1015 = load i32, i32* %arrayidx677.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2763, i32 2863), !dbg !1829
  call void @printCDep(i32 610, i32 2863), !dbg !1829
  %xor678.i.i = xor i32 %xor673.i.i, %1015, !dbg !1829
  %1016 = ptrtoint i32* %t.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1016, i32 2867, i32 53, i32 9), !dbg !1829
  %1017 = load i32, i32* %t.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2793, i32 2867), !dbg !1829
  call void @printDDep(i32 2855, i32 2867), !dbg !1829
  call void @printCDep(i32 610, i32 2867), !dbg !1829
  %shr679.i.i = lshr i32 %1017, 18, !dbg !1829
  %and680.i.i = and i32 %shr679.i.i, 63, !dbg !1829
  %idxprom681.i.i = zext i32 %and680.i.i to i64, !dbg !1829
  %arrayidx682.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom681.i.i, !dbg !1829
  %1018 = ptrtoint i32* %arrayidx682.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1018, i32 2875, i32 53, i32 9), !dbg !1829
  %1019 = load i32, i32* %arrayidx682.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2763, i32 2875), !dbg !1829
  call void @printCDep(i32 610, i32 2875), !dbg !1829
  %xor683.i.i = xor i32 %xor678.i.i, %1019, !dbg !1829
  %1020 = ptrtoint i32* %t.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1020, i32 2879, i32 53, i32 9), !dbg !1829
  %1021 = load i32, i32* %t.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2793, i32 2879), !dbg !1829
  call void @printDDep(i32 2867, i32 2879), !dbg !1829
  call void @printCDep(i32 610, i32 2879), !dbg !1829
  %shr684.i.i = lshr i32 %1021, 26, !dbg !1829
  %idxprom686.i.i = zext i32 %shr684.i.i to i64, !dbg !1829
  %arrayidx687.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom686.i.i, !dbg !1829
  %1022 = ptrtoint i32* %arrayidx687.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1022, i32 2886, i32 53, i32 9), !dbg !1829
  %1023 = load i32, i32* %arrayidx687.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2763, i32 2886), !dbg !1829
  call void @printCDep(i32 610, i32 2886), !dbg !1829
  %xor688.i.i = xor i32 %xor683.i.i, %1023, !dbg !1829
  %1024 = ptrtoint i32* %r.i.i to i64, !dbg !1829
  call void @printLoadAddr(i64 %1024, i32 2890, i32 53, i32 9), !dbg !1829
  %1025 = load i32, i32* %r.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2569, i32 2890), !dbg !1829
  call void @printDDep(i32 2763, i32 2890), !dbg !1829
  call void @printCDep(i32 610, i32 2890), !dbg !1829
  %xor689.i.i = xor i32 %1025, %xor688.i.i, !dbg !1829
  %1026 = ptrtoint i32* %r.i.i to i64, !dbg !1829
  call void @printStoreAddr(i64 %1026, i32 2895, i32 53, i32 9), !dbg !1829
  store i32 %xor689.i.i, i32* %r.i.i, align 4, !dbg !1829
  call void @printDDep(i32 2793, i32 2895), !dbg !1829
  call void @printDDep(i32 2890, i32 2895), !dbg !1829
  call void @printCDep(i32 610, i32 2895), !dbg !1829
  %1027 = ptrtoint i32* %r.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1027, i32 2899, i32 54, i32 9), !dbg !1830
  %1028 = load i32, i32* %r.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2895, i32 2899), !dbg !1830
  call void @printDDep(i32 2895, i32 2899), !dbg !1830
  call void @printCDep(i32 610, i32 2899), !dbg !1830
  %1029 = ptrtoint i32** %s.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1029, i32 2903, i32 54, i32 9), !dbg !1830
  %1030 = load i32*, i32** %s.i.i, align 8, !dbg !1830
  call void @printDDep(i32 607, i32 2903), !dbg !1830
  call void @printDDep(i32 2763, i32 2903), !dbg !1830
  call void @printCDep(i32 610, i32 2903), !dbg !1830
  %arrayidx690.i.i = getelementptr inbounds i32, i32* %1030, i64 28, !dbg !1830
  %1031 = ptrtoint i32* %arrayidx690.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1031, i32 2908, i32 54, i32 9), !dbg !1830
  %1032 = load i32, i32* %arrayidx690.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2895, i32 2908), !dbg !1830
  call void @printDDep(i32 2903, i32 2908), !dbg !1830
  call void @printCDep(i32 610, i32 2908), !dbg !1830
  %xor691.i.i = xor i32 %1028, %1032, !dbg !1830
  %1033 = ptrtoint i32* %u.i.i to i64, !dbg !1830
  call void @printStoreAddr(i64 %1033, i32 2913, i32 54, i32 9), !dbg !1830
  store i32 %xor691.i.i, i32* %u.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2895, i32 2913), !dbg !1830
  call void @printDDep(i32 2908, i32 2913), !dbg !1830
  call void @printCDep(i32 610, i32 2913), !dbg !1830
  %1034 = ptrtoint i32* %r.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1034, i32 2917, i32 54, i32 9), !dbg !1830
  %1035 = load i32, i32* %r.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2895, i32 2917), !dbg !1830
  call void @printDDep(i32 2908, i32 2917), !dbg !1830
  call void @printCDep(i32 610, i32 2917), !dbg !1830
  %1036 = ptrtoint i32** %s.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1036, i32 2921, i32 54, i32 9), !dbg !1830
  %1037 = load i32*, i32** %s.i.i, align 8, !dbg !1830
  call void @printDDep(i32 607, i32 2921), !dbg !1830
  call void @printDDep(i32 2908, i32 2921), !dbg !1830
  call void @printCDep(i32 610, i32 2921), !dbg !1830
  %arrayidx692.i.i = getelementptr inbounds i32, i32* %1037, i64 29, !dbg !1830
  %1038 = ptrtoint i32* %arrayidx692.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1038, i32 2926, i32 54, i32 9), !dbg !1830
  %1039 = load i32, i32* %arrayidx692.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2913, i32 2926), !dbg !1830
  call void @printDDep(i32 2921, i32 2926), !dbg !1830
  call void @printCDep(i32 610, i32 2926), !dbg !1830
  %xor693.i.i = xor i32 %1035, %1039, !dbg !1830
  %1040 = ptrtoint i32* %t.i.i to i64, !dbg !1830
  call void @printStoreAddr(i64 %1040, i32 2931, i32 54, i32 9), !dbg !1830
  store i32 %xor693.i.i, i32* %t.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2913, i32 2931), !dbg !1830
  call void @printDDep(i32 2926, i32 2931), !dbg !1830
  call void @printCDep(i32 610, i32 2931), !dbg !1830
  %1041 = ptrtoint i32* %t.i.i to i64, !dbg !1745
  call void @printLoadAddr(i64 %1041, i32 2935, i32 54, i32 9), !dbg !1745
  %1042 = load i32, i32* %t.i.i, align 4, !dbg !1745
  call void @printDDep(i32 2931, i32 2935), !dbg !1745
  call void @printDDep(i32 2931, i32 2935), !dbg !1745
  call void @printCDep(i32 610, i32 2935), !dbg !1745
  %1043 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1042) #5, !dbg !1745, !srcloc !178
  %1044 = ptrtoint i32* %ret694.i.i to i64, !dbg !1745
  call void @printStoreAddr(i64 %1044, i32 2940, i32 54, i32 9), !dbg !1745
  store i32 %1043, i32* %ret694.i.i, align 4, !dbg !1745
  call void @printDDep(i32 2931, i32 2940), !dbg !1745
  call void @printDDep(i32 161, i32 2940), !dbg !1745
  call void @printCDep(i32 610, i32 2940), !dbg !1745
  %1045 = ptrtoint i32* %ret694.i.i to i64, !dbg !1745
  call void @printLoadAddr(i64 %1045, i32 2944, i32 54, i32 9), !dbg !1745
  %1046 = load i32, i32* %ret694.i.i, align 4, !dbg !1745
  call void @printDDep(i32 2940, i32 2944), !dbg !1745
  call void @printDDep(i32 2940, i32 2944), !dbg !1745
  call void @printCDep(i32 610, i32 2944), !dbg !1745
  %1047 = ptrtoint i32* %tmp695.i.i to i64, !dbg !1745
  call void @printStoreAddr(i64 %1047, i32 2948, i32 54, i32 9), !dbg !1745
  store i32 %1046, i32* %tmp695.i.i, align 4, !dbg !1745
  call void @printDDep(i32 2940, i32 2948), !dbg !1745
  call void @printDDep(i32 161, i32 2948), !dbg !1745
  call void @printCDep(i32 610, i32 2948), !dbg !1745
  %1048 = ptrtoint i32* %tmp695.i.i to i64, !dbg !1745
  call void @printLoadAddr(i64 %1048, i32 2952, i32 54, i32 9), !dbg !1745
  %1049 = load i32, i32* %tmp695.i.i, align 4, !dbg !1745
  call void @printDDep(i32 2948, i32 2952), !dbg !1745
  call void @printDDep(i32 2948, i32 2952), !dbg !1745
  call void @printCDep(i32 610, i32 2952), !dbg !1745
  %1050 = ptrtoint i32* %t.i.i to i64, !dbg !1830
  call void @printStoreAddr(i64 %1050, i32 2956, i32 54, i32 9), !dbg !1830
  store i32 %1049, i32* %t.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2948, i32 2956), !dbg !1830
  call void @printDDep(i32 2935, i32 2956), !dbg !1830
  call void @printCDep(i32 610, i32 2956), !dbg !1830
  %1051 = ptrtoint i32* %u.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1051, i32 2960, i32 54, i32 9), !dbg !1830
  %1052 = load i32, i32* %u.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2913, i32 2960), !dbg !1830
  call void @printDDep(i32 2926, i32 2960), !dbg !1830
  call void @printCDep(i32 610, i32 2960), !dbg !1830
  %shr696.i.i = lshr i32 %1052, 2, !dbg !1830
  %and697.i.i = and i32 %shr696.i.i, 63, !dbg !1830
  %idxprom698.i.i = zext i32 %and697.i.i to i64, !dbg !1830
  %arrayidx699.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom698.i.i, !dbg !1830
  %1053 = ptrtoint i32* %arrayidx699.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1053, i32 2968, i32 54, i32 9), !dbg !1830
  %1054 = load i32, i32* %arrayidx699.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2926, i32 2968), !dbg !1830
  call void @printCDep(i32 610, i32 2968), !dbg !1830
  %1055 = ptrtoint i32* %u.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1055, i32 2971, i32 54, i32 9), !dbg !1830
  %1056 = load i32, i32* %u.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2913, i32 2971), !dbg !1830
  call void @printDDep(i32 2960, i32 2971), !dbg !1830
  call void @printCDep(i32 610, i32 2971), !dbg !1830
  %shr700.i.i = lshr i32 %1056, 10, !dbg !1830
  %and701.i.i = and i32 %shr700.i.i, 63, !dbg !1830
  %idxprom702.i.i = zext i32 %and701.i.i to i64, !dbg !1830
  %arrayidx703.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom702.i.i, !dbg !1830
  %1057 = ptrtoint i32* %arrayidx703.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1057, i32 2979, i32 54, i32 9), !dbg !1830
  %1058 = load i32, i32* %arrayidx703.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2926, i32 2979), !dbg !1830
  call void @printCDep(i32 610, i32 2979), !dbg !1830
  %xor704.i.i = xor i32 %1054, %1058, !dbg !1830
  %1059 = ptrtoint i32* %u.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1059, i32 2983, i32 54, i32 9), !dbg !1830
  %1060 = load i32, i32* %u.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2913, i32 2983), !dbg !1830
  call void @printDDep(i32 2971, i32 2983), !dbg !1830
  call void @printCDep(i32 610, i32 2983), !dbg !1830
  %shr705.i.i = lshr i32 %1060, 18, !dbg !1830
  %and706.i.i = and i32 %shr705.i.i, 63, !dbg !1830
  %idxprom707.i.i = zext i32 %and706.i.i to i64, !dbg !1830
  %arrayidx708.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom707.i.i, !dbg !1830
  %1061 = ptrtoint i32* %arrayidx708.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1061, i32 2991, i32 54, i32 9), !dbg !1830
  %1062 = load i32, i32* %arrayidx708.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2926, i32 2991), !dbg !1830
  call void @printCDep(i32 610, i32 2991), !dbg !1830
  %xor709.i.i = xor i32 %xor704.i.i, %1062, !dbg !1830
  %1063 = ptrtoint i32* %u.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1063, i32 2995, i32 54, i32 9), !dbg !1830
  %1064 = load i32, i32* %u.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2913, i32 2995), !dbg !1830
  call void @printDDep(i32 2983, i32 2995), !dbg !1830
  call void @printCDep(i32 610, i32 2995), !dbg !1830
  %shr710.i.i = lshr i32 %1064, 26, !dbg !1830
  %idxprom712.i.i = zext i32 %shr710.i.i to i64, !dbg !1830
  %arrayidx713.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom712.i.i, !dbg !1830
  %1065 = ptrtoint i32* %arrayidx713.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1065, i32 3002, i32 54, i32 9), !dbg !1830
  %1066 = load i32, i32* %arrayidx713.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2926, i32 3002), !dbg !1830
  call void @printCDep(i32 610, i32 3002), !dbg !1830
  %xor714.i.i = xor i32 %xor709.i.i, %1066, !dbg !1830
  %1067 = ptrtoint i32* %t.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1067, i32 3006, i32 54, i32 9), !dbg !1830
  %1068 = load i32, i32* %t.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2956, i32 3006), !dbg !1830
  call void @printDDep(i32 2956, i32 3006), !dbg !1830
  call void @printCDep(i32 610, i32 3006), !dbg !1830
  %shr715.i.i = lshr i32 %1068, 2, !dbg !1830
  %and716.i.i = and i32 %shr715.i.i, 63, !dbg !1830
  %idxprom717.i.i = zext i32 %and716.i.i to i64, !dbg !1830
  %arrayidx718.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom717.i.i, !dbg !1830
  %1069 = ptrtoint i32* %arrayidx718.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1069, i32 3014, i32 54, i32 9), !dbg !1830
  %1070 = load i32, i32* %arrayidx718.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2926, i32 3014), !dbg !1830
  call void @printCDep(i32 610, i32 3014), !dbg !1830
  %xor719.i.i = xor i32 %xor714.i.i, %1070, !dbg !1830
  %1071 = ptrtoint i32* %t.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1071, i32 3018, i32 54, i32 9), !dbg !1830
  %1072 = load i32, i32* %t.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2956, i32 3018), !dbg !1830
  call void @printDDep(i32 3006, i32 3018), !dbg !1830
  call void @printCDep(i32 610, i32 3018), !dbg !1830
  %shr720.i.i = lshr i32 %1072, 10, !dbg !1830
  %and721.i.i = and i32 %shr720.i.i, 63, !dbg !1830
  %idxprom722.i.i = zext i32 %and721.i.i to i64, !dbg !1830
  %arrayidx723.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom722.i.i, !dbg !1830
  %1073 = ptrtoint i32* %arrayidx723.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1073, i32 3026, i32 54, i32 9), !dbg !1830
  %1074 = load i32, i32* %arrayidx723.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2926, i32 3026), !dbg !1830
  call void @printCDep(i32 610, i32 3026), !dbg !1830
  %xor724.i.i = xor i32 %xor719.i.i, %1074, !dbg !1830
  %1075 = ptrtoint i32* %t.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1075, i32 3030, i32 54, i32 9), !dbg !1830
  %1076 = load i32, i32* %t.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2956, i32 3030), !dbg !1830
  call void @printDDep(i32 3018, i32 3030), !dbg !1830
  call void @printCDep(i32 610, i32 3030), !dbg !1830
  %shr725.i.i = lshr i32 %1076, 18, !dbg !1830
  %and726.i.i = and i32 %shr725.i.i, 63, !dbg !1830
  %idxprom727.i.i = zext i32 %and726.i.i to i64, !dbg !1830
  %arrayidx728.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom727.i.i, !dbg !1830
  %1077 = ptrtoint i32* %arrayidx728.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1077, i32 3038, i32 54, i32 9), !dbg !1830
  %1078 = load i32, i32* %arrayidx728.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2926, i32 3038), !dbg !1830
  call void @printCDep(i32 610, i32 3038), !dbg !1830
  %xor729.i.i = xor i32 %xor724.i.i, %1078, !dbg !1830
  %1079 = ptrtoint i32* %t.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1079, i32 3042, i32 54, i32 9), !dbg !1830
  %1080 = load i32, i32* %t.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2956, i32 3042), !dbg !1830
  call void @printDDep(i32 3030, i32 3042), !dbg !1830
  call void @printCDep(i32 610, i32 3042), !dbg !1830
  %shr730.i.i = lshr i32 %1080, 26, !dbg !1830
  %idxprom732.i.i = zext i32 %shr730.i.i to i64, !dbg !1830
  %arrayidx733.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom732.i.i, !dbg !1830
  %1081 = ptrtoint i32* %arrayidx733.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1081, i32 3049, i32 54, i32 9), !dbg !1830
  %1082 = load i32, i32* %arrayidx733.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2926, i32 3049), !dbg !1830
  call void @printCDep(i32 610, i32 3049), !dbg !1830
  %xor734.i.i = xor i32 %xor729.i.i, %1082, !dbg !1830
  %1083 = ptrtoint i32* %l.i.i to i64, !dbg !1830
  call void @printLoadAddr(i64 %1083, i32 3053, i32 54, i32 9), !dbg !1830
  %1084 = load i32, i32* %l.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2732, i32 3053), !dbg !1830
  call void @printDDep(i32 2926, i32 3053), !dbg !1830
  call void @printCDep(i32 610, i32 3053), !dbg !1830
  %xor735.i.i = xor i32 %1084, %xor734.i.i, !dbg !1830
  %1085 = ptrtoint i32* %l.i.i to i64, !dbg !1830
  call void @printStoreAddr(i64 %1085, i32 3058, i32 54, i32 9), !dbg !1830
  store i32 %xor735.i.i, i32* %l.i.i, align 4, !dbg !1830
  call void @printDDep(i32 2956, i32 3058), !dbg !1830
  call void @printDDep(i32 3053, i32 3058), !dbg !1830
  call void @printCDep(i32 610, i32 3058), !dbg !1830
  %1086 = ptrtoint i32* %l.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1086, i32 3062, i32 55, i32 9), !dbg !1831
  %1087 = load i32, i32* %l.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3058, i32 3062), !dbg !1831
  call void @printDDep(i32 3058, i32 3062), !dbg !1831
  call void @printCDep(i32 610, i32 3062), !dbg !1831
  %1088 = ptrtoint i32** %s.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1088, i32 3066, i32 55, i32 9), !dbg !1831
  %1089 = load i32*, i32** %s.i.i, align 8, !dbg !1831
  call void @printDDep(i32 607, i32 3066), !dbg !1831
  call void @printDDep(i32 2926, i32 3066), !dbg !1831
  call void @printCDep(i32 610, i32 3066), !dbg !1831
  %arrayidx736.i.i = getelementptr inbounds i32, i32* %1089, i64 30, !dbg !1831
  %1090 = ptrtoint i32* %arrayidx736.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1090, i32 3071, i32 55, i32 9), !dbg !1831
  %1091 = load i32, i32* %arrayidx736.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3058, i32 3071), !dbg !1831
  call void @printDDep(i32 3066, i32 3071), !dbg !1831
  call void @printCDep(i32 610, i32 3071), !dbg !1831
  %xor737.i.i = xor i32 %1087, %1091, !dbg !1831
  %1092 = ptrtoint i32* %u.i.i to i64, !dbg !1831
  call void @printStoreAddr(i64 %1092, i32 3076, i32 55, i32 9), !dbg !1831
  store i32 %xor737.i.i, i32* %u.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3058, i32 3076), !dbg !1831
  call void @printDDep(i32 3071, i32 3076), !dbg !1831
  call void @printCDep(i32 610, i32 3076), !dbg !1831
  %1093 = ptrtoint i32* %l.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1093, i32 3080, i32 55, i32 9), !dbg !1831
  %1094 = load i32, i32* %l.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3058, i32 3080), !dbg !1831
  call void @printDDep(i32 3071, i32 3080), !dbg !1831
  call void @printCDep(i32 610, i32 3080), !dbg !1831
  %1095 = ptrtoint i32** %s.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1095, i32 3084, i32 55, i32 9), !dbg !1831
  %1096 = load i32*, i32** %s.i.i, align 8, !dbg !1831
  call void @printDDep(i32 607, i32 3084), !dbg !1831
  call void @printDDep(i32 3071, i32 3084), !dbg !1831
  call void @printCDep(i32 610, i32 3084), !dbg !1831
  %arrayidx738.i.i = getelementptr inbounds i32, i32* %1096, i64 31, !dbg !1831
  %1097 = ptrtoint i32* %arrayidx738.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1097, i32 3089, i32 55, i32 9), !dbg !1831
  %1098 = load i32, i32* %arrayidx738.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3076, i32 3089), !dbg !1831
  call void @printDDep(i32 3084, i32 3089), !dbg !1831
  call void @printCDep(i32 610, i32 3089), !dbg !1831
  %xor739.i.i = xor i32 %1094, %1098, !dbg !1831
  %1099 = ptrtoint i32* %t.i.i to i64, !dbg !1831
  call void @printStoreAddr(i64 %1099, i32 3094, i32 55, i32 9), !dbg !1831
  store i32 %xor739.i.i, i32* %t.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3076, i32 3094), !dbg !1831
  call void @printDDep(i32 3089, i32 3094), !dbg !1831
  call void @printCDep(i32 610, i32 3094), !dbg !1831
  %1100 = ptrtoint i32* %t.i.i to i64, !dbg !1746
  call void @printLoadAddr(i64 %1100, i32 3098, i32 55, i32 9), !dbg !1746
  %1101 = load i32, i32* %t.i.i, align 4, !dbg !1746
  call void @printDDep(i32 3094, i32 3098), !dbg !1746
  call void @printDDep(i32 3094, i32 3098), !dbg !1746
  call void @printCDep(i32 610, i32 3098), !dbg !1746
  %1102 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1101) #5, !dbg !1746, !srcloc !184
  %1103 = ptrtoint i32* %ret740.i.i to i64, !dbg !1746
  call void @printStoreAddr(i64 %1103, i32 3103, i32 55, i32 9), !dbg !1746
  store i32 %1102, i32* %ret740.i.i, align 4, !dbg !1746
  call void @printDDep(i32 3094, i32 3103), !dbg !1746
  call void @printDDep(i32 161, i32 3103), !dbg !1746
  call void @printCDep(i32 610, i32 3103), !dbg !1746
  %1104 = ptrtoint i32* %ret740.i.i to i64, !dbg !1746
  call void @printLoadAddr(i64 %1104, i32 3107, i32 55, i32 9), !dbg !1746
  %1105 = load i32, i32* %ret740.i.i, align 4, !dbg !1746
  call void @printDDep(i32 3103, i32 3107), !dbg !1746
  call void @printDDep(i32 3103, i32 3107), !dbg !1746
  call void @printCDep(i32 610, i32 3107), !dbg !1746
  %1106 = ptrtoint i32* %tmp741.i.i to i64, !dbg !1746
  call void @printStoreAddr(i64 %1106, i32 3111, i32 55, i32 9), !dbg !1746
  store i32 %1105, i32* %tmp741.i.i, align 4, !dbg !1746
  call void @printDDep(i32 3103, i32 3111), !dbg !1746
  call void @printDDep(i32 161, i32 3111), !dbg !1746
  call void @printCDep(i32 610, i32 3111), !dbg !1746
  %1107 = ptrtoint i32* %tmp741.i.i to i64, !dbg !1746
  call void @printLoadAddr(i64 %1107, i32 3115, i32 55, i32 9), !dbg !1746
  %1108 = load i32, i32* %tmp741.i.i, align 4, !dbg !1746
  call void @printDDep(i32 3111, i32 3115), !dbg !1746
  call void @printDDep(i32 3111, i32 3115), !dbg !1746
  call void @printCDep(i32 610, i32 3115), !dbg !1746
  %1109 = ptrtoint i32* %t.i.i to i64, !dbg !1831
  call void @printStoreAddr(i64 %1109, i32 3119, i32 55, i32 9), !dbg !1831
  store i32 %1108, i32* %t.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3111, i32 3119), !dbg !1831
  call void @printDDep(i32 3098, i32 3119), !dbg !1831
  call void @printCDep(i32 610, i32 3119), !dbg !1831
  %1110 = ptrtoint i32* %u.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1110, i32 3123, i32 55, i32 9), !dbg !1831
  %1111 = load i32, i32* %u.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3076, i32 3123), !dbg !1831
  call void @printDDep(i32 3089, i32 3123), !dbg !1831
  call void @printCDep(i32 610, i32 3123), !dbg !1831
  %shr742.i.i = lshr i32 %1111, 2, !dbg !1831
  %and743.i.i = and i32 %shr742.i.i, 63, !dbg !1831
  %idxprom744.i.i = zext i32 %and743.i.i to i64, !dbg !1831
  %arrayidx745.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom744.i.i, !dbg !1831
  %1112 = ptrtoint i32* %arrayidx745.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1112, i32 3131, i32 55, i32 9), !dbg !1831
  %1113 = load i32, i32* %arrayidx745.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3089, i32 3131), !dbg !1831
  call void @printCDep(i32 610, i32 3131), !dbg !1831
  %1114 = ptrtoint i32* %u.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1114, i32 3134, i32 55, i32 9), !dbg !1831
  %1115 = load i32, i32* %u.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3076, i32 3134), !dbg !1831
  call void @printDDep(i32 3123, i32 3134), !dbg !1831
  call void @printCDep(i32 610, i32 3134), !dbg !1831
  %shr746.i.i = lshr i32 %1115, 10, !dbg !1831
  %and747.i.i = and i32 %shr746.i.i, 63, !dbg !1831
  %idxprom748.i.i = zext i32 %and747.i.i to i64, !dbg !1831
  %arrayidx749.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom748.i.i, !dbg !1831
  %1116 = ptrtoint i32* %arrayidx749.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1116, i32 3142, i32 55, i32 9), !dbg !1831
  %1117 = load i32, i32* %arrayidx749.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3089, i32 3142), !dbg !1831
  call void @printCDep(i32 610, i32 3142), !dbg !1831
  %xor750.i.i = xor i32 %1113, %1117, !dbg !1831
  %1118 = ptrtoint i32* %u.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1118, i32 3146, i32 55, i32 9), !dbg !1831
  %1119 = load i32, i32* %u.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3076, i32 3146), !dbg !1831
  call void @printDDep(i32 3134, i32 3146), !dbg !1831
  call void @printCDep(i32 610, i32 3146), !dbg !1831
  %shr751.i.i = lshr i32 %1119, 18, !dbg !1831
  %and752.i.i = and i32 %shr751.i.i, 63, !dbg !1831
  %idxprom753.i.i = zext i32 %and752.i.i to i64, !dbg !1831
  %arrayidx754.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom753.i.i, !dbg !1831
  %1120 = ptrtoint i32* %arrayidx754.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1120, i32 3154, i32 55, i32 9), !dbg !1831
  %1121 = load i32, i32* %arrayidx754.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3089, i32 3154), !dbg !1831
  call void @printCDep(i32 610, i32 3154), !dbg !1831
  %xor755.i.i = xor i32 %xor750.i.i, %1121, !dbg !1831
  %1122 = ptrtoint i32* %u.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1122, i32 3158, i32 55, i32 9), !dbg !1831
  %1123 = load i32, i32* %u.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3076, i32 3158), !dbg !1831
  call void @printDDep(i32 3146, i32 3158), !dbg !1831
  call void @printCDep(i32 610, i32 3158), !dbg !1831
  %shr756.i.i = lshr i32 %1123, 26, !dbg !1831
  %idxprom758.i.i = zext i32 %shr756.i.i to i64, !dbg !1831
  %arrayidx759.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom758.i.i, !dbg !1831
  %1124 = ptrtoint i32* %arrayidx759.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1124, i32 3165, i32 55, i32 9), !dbg !1831
  %1125 = load i32, i32* %arrayidx759.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3089, i32 3165), !dbg !1831
  call void @printCDep(i32 610, i32 3165), !dbg !1831
  %xor760.i.i = xor i32 %xor755.i.i, %1125, !dbg !1831
  %1126 = ptrtoint i32* %t.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1126, i32 3169, i32 55, i32 9), !dbg !1831
  %1127 = load i32, i32* %t.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3119, i32 3169), !dbg !1831
  call void @printDDep(i32 3119, i32 3169), !dbg !1831
  call void @printCDep(i32 610, i32 3169), !dbg !1831
  %shr761.i.i = lshr i32 %1127, 2, !dbg !1831
  %and762.i.i = and i32 %shr761.i.i, 63, !dbg !1831
  %idxprom763.i.i = zext i32 %and762.i.i to i64, !dbg !1831
  %arrayidx764.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom763.i.i, !dbg !1831
  %1128 = ptrtoint i32* %arrayidx764.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1128, i32 3177, i32 55, i32 9), !dbg !1831
  %1129 = load i32, i32* %arrayidx764.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3089, i32 3177), !dbg !1831
  call void @printCDep(i32 610, i32 3177), !dbg !1831
  %xor765.i.i = xor i32 %xor760.i.i, %1129, !dbg !1831
  %1130 = ptrtoint i32* %t.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1130, i32 3181, i32 55, i32 9), !dbg !1831
  %1131 = load i32, i32* %t.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3119, i32 3181), !dbg !1831
  call void @printDDep(i32 3169, i32 3181), !dbg !1831
  call void @printCDep(i32 610, i32 3181), !dbg !1831
  %shr766.i.i = lshr i32 %1131, 10, !dbg !1831
  %and767.i.i = and i32 %shr766.i.i, 63, !dbg !1831
  %idxprom768.i.i = zext i32 %and767.i.i to i64, !dbg !1831
  %arrayidx769.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom768.i.i, !dbg !1831
  %1132 = ptrtoint i32* %arrayidx769.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1132, i32 3189, i32 55, i32 9), !dbg !1831
  %1133 = load i32, i32* %arrayidx769.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3089, i32 3189), !dbg !1831
  call void @printCDep(i32 610, i32 3189), !dbg !1831
  %xor770.i.i = xor i32 %xor765.i.i, %1133, !dbg !1831
  %1134 = ptrtoint i32* %t.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1134, i32 3193, i32 55, i32 9), !dbg !1831
  %1135 = load i32, i32* %t.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3119, i32 3193), !dbg !1831
  call void @printDDep(i32 3181, i32 3193), !dbg !1831
  call void @printCDep(i32 610, i32 3193), !dbg !1831
  %shr771.i.i = lshr i32 %1135, 18, !dbg !1831
  %and772.i.i = and i32 %shr771.i.i, 63, !dbg !1831
  %idxprom773.i.i = zext i32 %and772.i.i to i64, !dbg !1831
  %arrayidx774.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom773.i.i, !dbg !1831
  %1136 = ptrtoint i32* %arrayidx774.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1136, i32 3201, i32 55, i32 9), !dbg !1831
  %1137 = load i32, i32* %arrayidx774.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3089, i32 3201), !dbg !1831
  call void @printCDep(i32 610, i32 3201), !dbg !1831
  %xor775.i.i = xor i32 %xor770.i.i, %1137, !dbg !1831
  %1138 = ptrtoint i32* %t.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1138, i32 3205, i32 55, i32 9), !dbg !1831
  %1139 = load i32, i32* %t.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3119, i32 3205), !dbg !1831
  call void @printDDep(i32 3193, i32 3205), !dbg !1831
  call void @printCDep(i32 610, i32 3205), !dbg !1831
  %shr776.i.i = lshr i32 %1139, 26, !dbg !1831
  %idxprom778.i.i = zext i32 %shr776.i.i to i64, !dbg !1831
  %arrayidx779.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom778.i.i, !dbg !1831
  %1140 = ptrtoint i32* %arrayidx779.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1140, i32 3212, i32 55, i32 9), !dbg !1831
  %1141 = load i32, i32* %arrayidx779.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3089, i32 3212), !dbg !1831
  call void @printCDep(i32 610, i32 3212), !dbg !1831
  %xor780.i.i = xor i32 %xor775.i.i, %1141, !dbg !1831
  %1142 = ptrtoint i32* %r.i.i to i64, !dbg !1831
  call void @printLoadAddr(i64 %1142, i32 3216, i32 55, i32 9), !dbg !1831
  %1143 = load i32, i32* %r.i.i, align 4, !dbg !1831
  call void @printDDep(i32 2895, i32 3216), !dbg !1831
  call void @printDDep(i32 3089, i32 3216), !dbg !1831
  call void @printCDep(i32 610, i32 3216), !dbg !1831
  %xor781.i.i = xor i32 %1143, %xor780.i.i, !dbg !1831
  %1144 = ptrtoint i32* %r.i.i to i64, !dbg !1831
  call void @printStoreAddr(i64 %1144, i32 3221, i32 55, i32 9), !dbg !1831
  store i32 %xor781.i.i, i32* %r.i.i, align 4, !dbg !1831
  call void @printDDep(i32 3119, i32 3221), !dbg !1831
  call void @printDDep(i32 3216, i32 3221), !dbg !1831
  call void @printCDep(i32 610, i32 3221), !dbg !1831
  %1145 = load i32, i32* %InstCounter, !dbg !1832
  %1146 = add nsw i32 1200, %1145, !dbg !1832
  store i32 %1146, i32* %InstCounter, !dbg !1832
  br label %DES_ecb_encrypt.exit, !dbg !1832

if.else.i.i:                                      ; preds = %entry
  %1147 = ptrtoint i32* %r.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1147, i32 3229, i32 57, i32 9), !dbg !1833
  %1148 = load i32, i32* %r.i.i, align 4, !dbg !1833
  call void @printDDep(i32 575, i32 3229), !dbg !1833
  call void @printDDep(i32 3221, i32 3229), !dbg !1833
  call void @printCDep(i32 610, i32 3229), !dbg !1833
  %1149 = ptrtoint i32** %s.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1149, i32 3233, i32 57, i32 9), !dbg !1833
  %1150 = load i32*, i32** %s.i.i, align 8, !dbg !1833
  call void @printDDep(i32 607, i32 3233), !dbg !1833
  call void @printDDep(i32 3089, i32 3233), !dbg !1833
  call void @printCDep(i32 610, i32 3233), !dbg !1833
  %arrayidx782.i.i = getelementptr inbounds i32, i32* %1150, i64 30, !dbg !1833
  %1151 = ptrtoint i32* %arrayidx782.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1151, i32 3238, i32 57, i32 9), !dbg !1833
  %1152 = load i32, i32* %arrayidx782.i.i, align 4, !dbg !1833
  call void @printDDep(i32 161, i32 3238), !dbg !1833
  call void @printDDep(i32 3233, i32 3238), !dbg !1833
  call void @printCDep(i32 610, i32 3238), !dbg !1833
  %xor783.i.i = xor i32 %1148, %1152, !dbg !1833
  %1153 = ptrtoint i32* %u.i.i to i64, !dbg !1833
  call void @printStoreAddr(i64 %1153, i32 3243, i32 57, i32 9), !dbg !1833
  store i32 %xor783.i.i, i32* %u.i.i, align 4, !dbg !1833
  call void @printDDep(i32 607, i32 3243), !dbg !1833
  call void @printDDep(i32 3238, i32 3243), !dbg !1833
  call void @printCDep(i32 610, i32 3243), !dbg !1833
  %1154 = ptrtoint i32* %r.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1154, i32 3247, i32 57, i32 9), !dbg !1833
  %1155 = load i32, i32* %r.i.i, align 4, !dbg !1833
  call void @printDDep(i32 575, i32 3247), !dbg !1833
  call void @printDDep(i32 3238, i32 3247), !dbg !1833
  call void @printCDep(i32 610, i32 3247), !dbg !1833
  %1156 = ptrtoint i32** %s.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1156, i32 3251, i32 57, i32 9), !dbg !1833
  %1157 = load i32*, i32** %s.i.i, align 8, !dbg !1833
  call void @printDDep(i32 607, i32 3251), !dbg !1833
  call void @printDDep(i32 3238, i32 3251), !dbg !1833
  call void @printCDep(i32 610, i32 3251), !dbg !1833
  %arrayidx784.i.i = getelementptr inbounds i32, i32* %1157, i64 31, !dbg !1833
  %1158 = ptrtoint i32* %arrayidx784.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1158, i32 3256, i32 57, i32 9), !dbg !1833
  %1159 = load i32, i32* %arrayidx784.i.i, align 4, !dbg !1833
  call void @printDDep(i32 161, i32 3256), !dbg !1833
  call void @printDDep(i32 3251, i32 3256), !dbg !1833
  call void @printCDep(i32 610, i32 3256), !dbg !1833
  %xor785.i.i = xor i32 %1155, %1159, !dbg !1833
  %1160 = ptrtoint i32* %t.i.i to i64, !dbg !1833
  call void @printStoreAddr(i64 %1160, i32 3261, i32 57, i32 9), !dbg !1833
  store i32 %xor785.i.i, i32* %t.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3243, i32 3261), !dbg !1833
  call void @printDDep(i32 3256, i32 3261), !dbg !1833
  call void @printCDep(i32 610, i32 3261), !dbg !1833
  %1161 = ptrtoint i32* %t.i.i to i64, !dbg !1747
  call void @printLoadAddr(i64 %1161, i32 3265, i32 57, i32 9), !dbg !1747
  %1162 = load i32, i32* %t.i.i, align 4, !dbg !1747
  call void @printDDep(i32 3261, i32 3265), !dbg !1747
  call void @printDDep(i32 3261, i32 3265), !dbg !1747
  call void @printCDep(i32 610, i32 3265), !dbg !1747
  %1163 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1162) #5, !dbg !1747, !srcloc !192
  %1164 = ptrtoint i32* %ret786.i.i to i64, !dbg !1747
  call void @printStoreAddr(i64 %1164, i32 3270, i32 57, i32 9), !dbg !1747
  store i32 %1163, i32* %ret786.i.i, align 4, !dbg !1747
  call void @printDDep(i32 3261, i32 3270), !dbg !1747
  call void @printDDep(i32 161, i32 3270), !dbg !1747
  call void @printCDep(i32 610, i32 3270), !dbg !1747
  %1165 = ptrtoint i32* %ret786.i.i to i64, !dbg !1747
  call void @printLoadAddr(i64 %1165, i32 3274, i32 57, i32 9), !dbg !1747
  %1166 = load i32, i32* %ret786.i.i, align 4, !dbg !1747
  call void @printDDep(i32 3270, i32 3274), !dbg !1747
  call void @printDDep(i32 3270, i32 3274), !dbg !1747
  call void @printCDep(i32 610, i32 3274), !dbg !1747
  %1167 = ptrtoint i32* %tmp787.i.i to i64, !dbg !1747
  call void @printStoreAddr(i64 %1167, i32 3278, i32 57, i32 9), !dbg !1747
  store i32 %1166, i32* %tmp787.i.i, align 4, !dbg !1747
  call void @printDDep(i32 3270, i32 3278), !dbg !1747
  call void @printDDep(i32 161, i32 3278), !dbg !1747
  call void @printCDep(i32 610, i32 3278), !dbg !1747
  %1168 = ptrtoint i32* %tmp787.i.i to i64, !dbg !1747
  call void @printLoadAddr(i64 %1168, i32 3282, i32 57, i32 9), !dbg !1747
  %1169 = load i32, i32* %tmp787.i.i, align 4, !dbg !1747
  call void @printDDep(i32 3278, i32 3282), !dbg !1747
  call void @printDDep(i32 3278, i32 3282), !dbg !1747
  call void @printCDep(i32 610, i32 3282), !dbg !1747
  %1170 = ptrtoint i32* %t.i.i to i64, !dbg !1833
  call void @printStoreAddr(i64 %1170, i32 3286, i32 57, i32 9), !dbg !1833
  store i32 %1169, i32* %t.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3278, i32 3286), !dbg !1833
  call void @printDDep(i32 3265, i32 3286), !dbg !1833
  call void @printCDep(i32 610, i32 3286), !dbg !1833
  %1171 = ptrtoint i32* %u.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1171, i32 3290, i32 57, i32 9), !dbg !1833
  %1172 = load i32, i32* %u.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3243, i32 3290), !dbg !1833
  call void @printDDep(i32 3256, i32 3290), !dbg !1833
  call void @printCDep(i32 610, i32 3290), !dbg !1833
  %shr788.i.i = lshr i32 %1172, 2, !dbg !1833
  %and789.i.i = and i32 %shr788.i.i, 63, !dbg !1833
  %idxprom790.i.i = zext i32 %and789.i.i to i64, !dbg !1833
  %arrayidx791.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom790.i.i, !dbg !1833
  %1173 = ptrtoint i32* %arrayidx791.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1173, i32 3298, i32 57, i32 9), !dbg !1833
  %1174 = load i32, i32* %arrayidx791.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3256, i32 3298), !dbg !1833
  call void @printCDep(i32 610, i32 3298), !dbg !1833
  %1175 = ptrtoint i32* %u.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1175, i32 3301, i32 57, i32 9), !dbg !1833
  %1176 = load i32, i32* %u.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3243, i32 3301), !dbg !1833
  call void @printDDep(i32 3290, i32 3301), !dbg !1833
  call void @printCDep(i32 610, i32 3301), !dbg !1833
  %shr792.i.i = lshr i32 %1176, 10, !dbg !1833
  %and793.i.i = and i32 %shr792.i.i, 63, !dbg !1833
  %idxprom794.i.i = zext i32 %and793.i.i to i64, !dbg !1833
  %arrayidx795.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom794.i.i, !dbg !1833
  %1177 = ptrtoint i32* %arrayidx795.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1177, i32 3309, i32 57, i32 9), !dbg !1833
  %1178 = load i32, i32* %arrayidx795.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3256, i32 3309), !dbg !1833
  call void @printCDep(i32 610, i32 3309), !dbg !1833
  %xor796.i.i = xor i32 %1174, %1178, !dbg !1833
  %1179 = ptrtoint i32* %u.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1179, i32 3313, i32 57, i32 9), !dbg !1833
  %1180 = load i32, i32* %u.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3243, i32 3313), !dbg !1833
  call void @printDDep(i32 3301, i32 3313), !dbg !1833
  call void @printCDep(i32 610, i32 3313), !dbg !1833
  %shr797.i.i = lshr i32 %1180, 18, !dbg !1833
  %and798.i.i = and i32 %shr797.i.i, 63, !dbg !1833
  %idxprom799.i.i = zext i32 %and798.i.i to i64, !dbg !1833
  %arrayidx800.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom799.i.i, !dbg !1833
  %1181 = ptrtoint i32* %arrayidx800.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1181, i32 3321, i32 57, i32 9), !dbg !1833
  %1182 = load i32, i32* %arrayidx800.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3256, i32 3321), !dbg !1833
  call void @printCDep(i32 610, i32 3321), !dbg !1833
  %xor801.i.i = xor i32 %xor796.i.i, %1182, !dbg !1833
  %1183 = ptrtoint i32* %u.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1183, i32 3325, i32 57, i32 9), !dbg !1833
  %1184 = load i32, i32* %u.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3243, i32 3325), !dbg !1833
  call void @printDDep(i32 3313, i32 3325), !dbg !1833
  call void @printCDep(i32 610, i32 3325), !dbg !1833
  %shr802.i.i = lshr i32 %1184, 26, !dbg !1833
  %idxprom804.i.i = zext i32 %shr802.i.i to i64, !dbg !1833
  %arrayidx805.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom804.i.i, !dbg !1833
  %1185 = ptrtoint i32* %arrayidx805.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1185, i32 3332, i32 57, i32 9), !dbg !1833
  %1186 = load i32, i32* %arrayidx805.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3256, i32 3332), !dbg !1833
  call void @printCDep(i32 610, i32 3332), !dbg !1833
  %xor806.i.i = xor i32 %xor801.i.i, %1186, !dbg !1833
  %1187 = ptrtoint i32* %t.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1187, i32 3336, i32 57, i32 9), !dbg !1833
  %1188 = load i32, i32* %t.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3286, i32 3336), !dbg !1833
  call void @printDDep(i32 3286, i32 3336), !dbg !1833
  call void @printCDep(i32 610, i32 3336), !dbg !1833
  %shr807.i.i = lshr i32 %1188, 2, !dbg !1833
  %and808.i.i = and i32 %shr807.i.i, 63, !dbg !1833
  %idxprom809.i.i = zext i32 %and808.i.i to i64, !dbg !1833
  %arrayidx810.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom809.i.i, !dbg !1833
  %1189 = ptrtoint i32* %arrayidx810.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1189, i32 3344, i32 57, i32 9), !dbg !1833
  %1190 = load i32, i32* %arrayidx810.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3256, i32 3344), !dbg !1833
  call void @printCDep(i32 610, i32 3344), !dbg !1833
  %xor811.i.i = xor i32 %xor806.i.i, %1190, !dbg !1833
  %1191 = ptrtoint i32* %t.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1191, i32 3348, i32 57, i32 9), !dbg !1833
  %1192 = load i32, i32* %t.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3286, i32 3348), !dbg !1833
  call void @printDDep(i32 3336, i32 3348), !dbg !1833
  call void @printCDep(i32 610, i32 3348), !dbg !1833
  %shr812.i.i = lshr i32 %1192, 10, !dbg !1833
  %and813.i.i = and i32 %shr812.i.i, 63, !dbg !1833
  %idxprom814.i.i = zext i32 %and813.i.i to i64, !dbg !1833
  %arrayidx815.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom814.i.i, !dbg !1833
  %1193 = ptrtoint i32* %arrayidx815.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1193, i32 3356, i32 57, i32 9), !dbg !1833
  %1194 = load i32, i32* %arrayidx815.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3256, i32 3356), !dbg !1833
  call void @printCDep(i32 610, i32 3356), !dbg !1833
  %xor816.i.i = xor i32 %xor811.i.i, %1194, !dbg !1833
  %1195 = ptrtoint i32* %t.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1195, i32 3360, i32 57, i32 9), !dbg !1833
  %1196 = load i32, i32* %t.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3286, i32 3360), !dbg !1833
  call void @printDDep(i32 3348, i32 3360), !dbg !1833
  call void @printCDep(i32 610, i32 3360), !dbg !1833
  %shr817.i.i = lshr i32 %1196, 18, !dbg !1833
  %and818.i.i = and i32 %shr817.i.i, 63, !dbg !1833
  %idxprom819.i.i = zext i32 %and818.i.i to i64, !dbg !1833
  %arrayidx820.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom819.i.i, !dbg !1833
  %1197 = ptrtoint i32* %arrayidx820.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1197, i32 3368, i32 57, i32 9), !dbg !1833
  %1198 = load i32, i32* %arrayidx820.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3256, i32 3368), !dbg !1833
  call void @printCDep(i32 610, i32 3368), !dbg !1833
  %xor821.i.i = xor i32 %xor816.i.i, %1198, !dbg !1833
  %1199 = ptrtoint i32* %t.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1199, i32 3372, i32 57, i32 9), !dbg !1833
  %1200 = load i32, i32* %t.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3286, i32 3372), !dbg !1833
  call void @printDDep(i32 3360, i32 3372), !dbg !1833
  call void @printCDep(i32 610, i32 3372), !dbg !1833
  %shr822.i.i = lshr i32 %1200, 26, !dbg !1833
  %idxprom824.i.i = zext i32 %shr822.i.i to i64, !dbg !1833
  %arrayidx825.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom824.i.i, !dbg !1833
  %1201 = ptrtoint i32* %arrayidx825.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1201, i32 3379, i32 57, i32 9), !dbg !1833
  %1202 = load i32, i32* %arrayidx825.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3256, i32 3379), !dbg !1833
  call void @printCDep(i32 610, i32 3379), !dbg !1833
  %xor826.i.i = xor i32 %xor821.i.i, %1202, !dbg !1833
  %1203 = ptrtoint i32* %l.i.i to i64, !dbg !1833
  call void @printLoadAddr(i64 %1203, i32 3383, i32 57, i32 9), !dbg !1833
  %1204 = load i32, i32* %l.i.i, align 4, !dbg !1833
  call void @printDDep(i32 597, i32 3383), !dbg !1833
  call void @printDDep(i32 3256, i32 3383), !dbg !1833
  call void @printCDep(i32 610, i32 3383), !dbg !1833
  %xor827.i.i = xor i32 %1204, %xor826.i.i, !dbg !1833
  %1205 = ptrtoint i32* %l.i.i to i64, !dbg !1833
  call void @printStoreAddr(i64 %1205, i32 3388, i32 57, i32 9), !dbg !1833
  store i32 %xor827.i.i, i32* %l.i.i, align 4, !dbg !1833
  call void @printDDep(i32 3286, i32 3388), !dbg !1833
  call void @printDDep(i32 3383, i32 3388), !dbg !1833
  call void @printCDep(i32 610, i32 3388), !dbg !1833
  %1206 = ptrtoint i32* %l.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1206, i32 3392, i32 58, i32 9), !dbg !1834
  %1207 = load i32, i32* %l.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3388, i32 3392), !dbg !1834
  call void @printDDep(i32 3388, i32 3392), !dbg !1834
  call void @printCDep(i32 610, i32 3392), !dbg !1834
  %1208 = ptrtoint i32** %s.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1208, i32 3396, i32 58, i32 9), !dbg !1834
  %1209 = load i32*, i32** %s.i.i, align 8, !dbg !1834
  call void @printDDep(i32 607, i32 3396), !dbg !1834
  call void @printDDep(i32 3256, i32 3396), !dbg !1834
  call void @printCDep(i32 610, i32 3396), !dbg !1834
  %arrayidx828.i.i = getelementptr inbounds i32, i32* %1209, i64 28, !dbg !1834
  %1210 = ptrtoint i32* %arrayidx828.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1210, i32 3401, i32 58, i32 9), !dbg !1834
  %1211 = load i32, i32* %arrayidx828.i.i, align 4, !dbg !1834
  call void @printDDep(i32 161, i32 3401), !dbg !1834
  call void @printDDep(i32 3396, i32 3401), !dbg !1834
  call void @printCDep(i32 610, i32 3401), !dbg !1834
  %xor829.i.i = xor i32 %1207, %1211, !dbg !1834
  %1212 = ptrtoint i32* %u.i.i to i64, !dbg !1834
  call void @printStoreAddr(i64 %1212, i32 3406, i32 58, i32 9), !dbg !1834
  store i32 %xor829.i.i, i32* %u.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3388, i32 3406), !dbg !1834
  call void @printDDep(i32 3401, i32 3406), !dbg !1834
  call void @printCDep(i32 610, i32 3406), !dbg !1834
  %1213 = ptrtoint i32* %l.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1213, i32 3410, i32 58, i32 9), !dbg !1834
  %1214 = load i32, i32* %l.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3388, i32 3410), !dbg !1834
  call void @printDDep(i32 3401, i32 3410), !dbg !1834
  call void @printCDep(i32 610, i32 3410), !dbg !1834
  %1215 = ptrtoint i32** %s.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1215, i32 3414, i32 58, i32 9), !dbg !1834
  %1216 = load i32*, i32** %s.i.i, align 8, !dbg !1834
  call void @printDDep(i32 607, i32 3414), !dbg !1834
  call void @printDDep(i32 3401, i32 3414), !dbg !1834
  call void @printCDep(i32 610, i32 3414), !dbg !1834
  %arrayidx830.i.i = getelementptr inbounds i32, i32* %1216, i64 29, !dbg !1834
  %1217 = ptrtoint i32* %arrayidx830.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1217, i32 3419, i32 58, i32 9), !dbg !1834
  %1218 = load i32, i32* %arrayidx830.i.i, align 4, !dbg !1834
  call void @printDDep(i32 161, i32 3419), !dbg !1834
  call void @printDDep(i32 3414, i32 3419), !dbg !1834
  call void @printCDep(i32 610, i32 3419), !dbg !1834
  %xor831.i.i = xor i32 %1214, %1218, !dbg !1834
  %1219 = ptrtoint i32* %t.i.i to i64, !dbg !1834
  call void @printStoreAddr(i64 %1219, i32 3424, i32 58, i32 9), !dbg !1834
  store i32 %xor831.i.i, i32* %t.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3406, i32 3424), !dbg !1834
  call void @printDDep(i32 3419, i32 3424), !dbg !1834
  call void @printCDep(i32 610, i32 3424), !dbg !1834
  %1220 = ptrtoint i32* %t.i.i to i64, !dbg !1748
  call void @printLoadAddr(i64 %1220, i32 3428, i32 58, i32 9), !dbg !1748
  %1221 = load i32, i32* %t.i.i, align 4, !dbg !1748
  call void @printDDep(i32 3424, i32 3428), !dbg !1748
  call void @printDDep(i32 3424, i32 3428), !dbg !1748
  call void @printCDep(i32 610, i32 3428), !dbg !1748
  %1222 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1221) #5, !dbg !1748, !srcloc !198
  %1223 = ptrtoint i32* %ret832.i.i to i64, !dbg !1748
  call void @printStoreAddr(i64 %1223, i32 3433, i32 58, i32 9), !dbg !1748
  store i32 %1222, i32* %ret832.i.i, align 4, !dbg !1748
  call void @printDDep(i32 3424, i32 3433), !dbg !1748
  call void @printDDep(i32 161, i32 3433), !dbg !1748
  call void @printCDep(i32 610, i32 3433), !dbg !1748
  %1224 = ptrtoint i32* %ret832.i.i to i64, !dbg !1748
  call void @printLoadAddr(i64 %1224, i32 3437, i32 58, i32 9), !dbg !1748
  %1225 = load i32, i32* %ret832.i.i, align 4, !dbg !1748
  call void @printDDep(i32 3433, i32 3437), !dbg !1748
  call void @printDDep(i32 3433, i32 3437), !dbg !1748
  call void @printCDep(i32 610, i32 3437), !dbg !1748
  %1226 = ptrtoint i32* %tmp833.i.i to i64, !dbg !1748
  call void @printStoreAddr(i64 %1226, i32 3441, i32 58, i32 9), !dbg !1748
  store i32 %1225, i32* %tmp833.i.i, align 4, !dbg !1748
  call void @printDDep(i32 3433, i32 3441), !dbg !1748
  call void @printDDep(i32 161, i32 3441), !dbg !1748
  call void @printCDep(i32 610, i32 3441), !dbg !1748
  %1227 = ptrtoint i32* %tmp833.i.i to i64, !dbg !1748
  call void @printLoadAddr(i64 %1227, i32 3445, i32 58, i32 9), !dbg !1748
  %1228 = load i32, i32* %tmp833.i.i, align 4, !dbg !1748
  call void @printDDep(i32 3441, i32 3445), !dbg !1748
  call void @printDDep(i32 3441, i32 3445), !dbg !1748
  call void @printCDep(i32 610, i32 3445), !dbg !1748
  %1229 = ptrtoint i32* %t.i.i to i64, !dbg !1834
  call void @printStoreAddr(i64 %1229, i32 3449, i32 58, i32 9), !dbg !1834
  store i32 %1228, i32* %t.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3441, i32 3449), !dbg !1834
  call void @printDDep(i32 3428, i32 3449), !dbg !1834
  call void @printCDep(i32 610, i32 3449), !dbg !1834
  %1230 = ptrtoint i32* %u.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1230, i32 3453, i32 58, i32 9), !dbg !1834
  %1231 = load i32, i32* %u.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3406, i32 3453), !dbg !1834
  call void @printDDep(i32 3419, i32 3453), !dbg !1834
  call void @printCDep(i32 610, i32 3453), !dbg !1834
  %shr834.i.i = lshr i32 %1231, 2, !dbg !1834
  %and835.i.i = and i32 %shr834.i.i, 63, !dbg !1834
  %idxprom836.i.i = zext i32 %and835.i.i to i64, !dbg !1834
  %arrayidx837.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom836.i.i, !dbg !1834
  %1232 = ptrtoint i32* %arrayidx837.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1232, i32 3461, i32 58, i32 9), !dbg !1834
  %1233 = load i32, i32* %arrayidx837.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3419, i32 3461), !dbg !1834
  call void @printCDep(i32 610, i32 3461), !dbg !1834
  %1234 = ptrtoint i32* %u.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1234, i32 3464, i32 58, i32 9), !dbg !1834
  %1235 = load i32, i32* %u.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3406, i32 3464), !dbg !1834
  call void @printDDep(i32 3453, i32 3464), !dbg !1834
  call void @printCDep(i32 610, i32 3464), !dbg !1834
  %shr838.i.i = lshr i32 %1235, 10, !dbg !1834
  %and839.i.i = and i32 %shr838.i.i, 63, !dbg !1834
  %idxprom840.i.i = zext i32 %and839.i.i to i64, !dbg !1834
  %arrayidx841.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom840.i.i, !dbg !1834
  %1236 = ptrtoint i32* %arrayidx841.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1236, i32 3472, i32 58, i32 9), !dbg !1834
  %1237 = load i32, i32* %arrayidx841.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3419, i32 3472), !dbg !1834
  call void @printCDep(i32 610, i32 3472), !dbg !1834
  %xor842.i.i = xor i32 %1233, %1237, !dbg !1834
  %1238 = ptrtoint i32* %u.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1238, i32 3476, i32 58, i32 9), !dbg !1834
  %1239 = load i32, i32* %u.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3406, i32 3476), !dbg !1834
  call void @printDDep(i32 3464, i32 3476), !dbg !1834
  call void @printCDep(i32 610, i32 3476), !dbg !1834
  %shr843.i.i = lshr i32 %1239, 18, !dbg !1834
  %and844.i.i = and i32 %shr843.i.i, 63, !dbg !1834
  %idxprom845.i.i = zext i32 %and844.i.i to i64, !dbg !1834
  %arrayidx846.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom845.i.i, !dbg !1834
  %1240 = ptrtoint i32* %arrayidx846.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1240, i32 3484, i32 58, i32 9), !dbg !1834
  %1241 = load i32, i32* %arrayidx846.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3419, i32 3484), !dbg !1834
  call void @printCDep(i32 610, i32 3484), !dbg !1834
  %xor847.i.i = xor i32 %xor842.i.i, %1241, !dbg !1834
  %1242 = ptrtoint i32* %u.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1242, i32 3488, i32 58, i32 9), !dbg !1834
  %1243 = load i32, i32* %u.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3406, i32 3488), !dbg !1834
  call void @printDDep(i32 3476, i32 3488), !dbg !1834
  call void @printCDep(i32 610, i32 3488), !dbg !1834
  %shr848.i.i = lshr i32 %1243, 26, !dbg !1834
  %idxprom850.i.i = zext i32 %shr848.i.i to i64, !dbg !1834
  %arrayidx851.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom850.i.i, !dbg !1834
  %1244 = ptrtoint i32* %arrayidx851.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1244, i32 3495, i32 58, i32 9), !dbg !1834
  %1245 = load i32, i32* %arrayidx851.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3419, i32 3495), !dbg !1834
  call void @printCDep(i32 610, i32 3495), !dbg !1834
  %xor852.i.i = xor i32 %xor847.i.i, %1245, !dbg !1834
  %1246 = ptrtoint i32* %t.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1246, i32 3499, i32 58, i32 9), !dbg !1834
  %1247 = load i32, i32* %t.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3449, i32 3499), !dbg !1834
  call void @printDDep(i32 3449, i32 3499), !dbg !1834
  call void @printCDep(i32 610, i32 3499), !dbg !1834
  %shr853.i.i = lshr i32 %1247, 2, !dbg !1834
  %and854.i.i = and i32 %shr853.i.i, 63, !dbg !1834
  %idxprom855.i.i = zext i32 %and854.i.i to i64, !dbg !1834
  %arrayidx856.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom855.i.i, !dbg !1834
  %1248 = ptrtoint i32* %arrayidx856.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1248, i32 3507, i32 58, i32 9), !dbg !1834
  %1249 = load i32, i32* %arrayidx856.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3419, i32 3507), !dbg !1834
  call void @printCDep(i32 610, i32 3507), !dbg !1834
  %xor857.i.i = xor i32 %xor852.i.i, %1249, !dbg !1834
  %1250 = ptrtoint i32* %t.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1250, i32 3511, i32 58, i32 9), !dbg !1834
  %1251 = load i32, i32* %t.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3449, i32 3511), !dbg !1834
  call void @printDDep(i32 3499, i32 3511), !dbg !1834
  call void @printCDep(i32 610, i32 3511), !dbg !1834
  %shr858.i.i = lshr i32 %1251, 10, !dbg !1834
  %and859.i.i = and i32 %shr858.i.i, 63, !dbg !1834
  %idxprom860.i.i = zext i32 %and859.i.i to i64, !dbg !1834
  %arrayidx861.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom860.i.i, !dbg !1834
  %1252 = ptrtoint i32* %arrayidx861.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1252, i32 3519, i32 58, i32 9), !dbg !1834
  %1253 = load i32, i32* %arrayidx861.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3419, i32 3519), !dbg !1834
  call void @printCDep(i32 610, i32 3519), !dbg !1834
  %xor862.i.i = xor i32 %xor857.i.i, %1253, !dbg !1834
  %1254 = ptrtoint i32* %t.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1254, i32 3523, i32 58, i32 9), !dbg !1834
  %1255 = load i32, i32* %t.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3449, i32 3523), !dbg !1834
  call void @printDDep(i32 3511, i32 3523), !dbg !1834
  call void @printCDep(i32 610, i32 3523), !dbg !1834
  %shr863.i.i = lshr i32 %1255, 18, !dbg !1834
  %and864.i.i = and i32 %shr863.i.i, 63, !dbg !1834
  %idxprom865.i.i = zext i32 %and864.i.i to i64, !dbg !1834
  %arrayidx866.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom865.i.i, !dbg !1834
  %1256 = ptrtoint i32* %arrayidx866.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1256, i32 3531, i32 58, i32 9), !dbg !1834
  %1257 = load i32, i32* %arrayidx866.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3419, i32 3531), !dbg !1834
  call void @printCDep(i32 610, i32 3531), !dbg !1834
  %xor867.i.i = xor i32 %xor862.i.i, %1257, !dbg !1834
  %1258 = ptrtoint i32* %t.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1258, i32 3535, i32 58, i32 9), !dbg !1834
  %1259 = load i32, i32* %t.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3449, i32 3535), !dbg !1834
  call void @printDDep(i32 3523, i32 3535), !dbg !1834
  call void @printCDep(i32 610, i32 3535), !dbg !1834
  %shr868.i.i = lshr i32 %1259, 26, !dbg !1834
  %idxprom870.i.i = zext i32 %shr868.i.i to i64, !dbg !1834
  %arrayidx871.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom870.i.i, !dbg !1834
  %1260 = ptrtoint i32* %arrayidx871.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1260, i32 3542, i32 58, i32 9), !dbg !1834
  %1261 = load i32, i32* %arrayidx871.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3419, i32 3542), !dbg !1834
  call void @printCDep(i32 610, i32 3542), !dbg !1834
  %xor872.i.i = xor i32 %xor867.i.i, %1261, !dbg !1834
  %1262 = ptrtoint i32* %r.i.i to i64, !dbg !1834
  call void @printLoadAddr(i64 %1262, i32 3546, i32 58, i32 9), !dbg !1834
  %1263 = load i32, i32* %r.i.i, align 4, !dbg !1834
  call void @printDDep(i32 575, i32 3546), !dbg !1834
  call void @printDDep(i32 3419, i32 3546), !dbg !1834
  call void @printCDep(i32 610, i32 3546), !dbg !1834
  %xor873.i.i = xor i32 %1263, %xor872.i.i, !dbg !1834
  %1264 = ptrtoint i32* %r.i.i to i64, !dbg !1834
  call void @printStoreAddr(i64 %1264, i32 3551, i32 58, i32 9), !dbg !1834
  store i32 %xor873.i.i, i32* %r.i.i, align 4, !dbg !1834
  call void @printDDep(i32 3449, i32 3551), !dbg !1834
  call void @printDDep(i32 3546, i32 3551), !dbg !1834
  call void @printCDep(i32 610, i32 3551), !dbg !1834
  %1265 = ptrtoint i32* %r.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1265, i32 3555, i32 59, i32 9), !dbg !1835
  %1266 = load i32, i32* %r.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3551, i32 3555), !dbg !1835
  call void @printDDep(i32 3551, i32 3555), !dbg !1835
  call void @printCDep(i32 610, i32 3555), !dbg !1835
  %1267 = ptrtoint i32** %s.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1267, i32 3559, i32 59, i32 9), !dbg !1835
  %1268 = load i32*, i32** %s.i.i, align 8, !dbg !1835
  call void @printDDep(i32 607, i32 3559), !dbg !1835
  call void @printDDep(i32 3419, i32 3559), !dbg !1835
  call void @printCDep(i32 610, i32 3559), !dbg !1835
  %arrayidx874.i.i = getelementptr inbounds i32, i32* %1268, i64 26, !dbg !1835
  %1269 = ptrtoint i32* %arrayidx874.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1269, i32 3564, i32 59, i32 9), !dbg !1835
  %1270 = load i32, i32* %arrayidx874.i.i, align 4, !dbg !1835
  call void @printDDep(i32 161, i32 3564), !dbg !1835
  call void @printDDep(i32 3559, i32 3564), !dbg !1835
  call void @printCDep(i32 610, i32 3564), !dbg !1835
  %xor875.i.i = xor i32 %1266, %1270, !dbg !1835
  %1271 = ptrtoint i32* %u.i.i to i64, !dbg !1835
  call void @printStoreAddr(i64 %1271, i32 3569, i32 59, i32 9), !dbg !1835
  store i32 %xor875.i.i, i32* %u.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3551, i32 3569), !dbg !1835
  call void @printDDep(i32 3564, i32 3569), !dbg !1835
  call void @printCDep(i32 610, i32 3569), !dbg !1835
  %1272 = ptrtoint i32* %r.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1272, i32 3573, i32 59, i32 9), !dbg !1835
  %1273 = load i32, i32* %r.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3551, i32 3573), !dbg !1835
  call void @printDDep(i32 3564, i32 3573), !dbg !1835
  call void @printCDep(i32 610, i32 3573), !dbg !1835
  %1274 = ptrtoint i32** %s.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1274, i32 3577, i32 59, i32 9), !dbg !1835
  %1275 = load i32*, i32** %s.i.i, align 8, !dbg !1835
  call void @printDDep(i32 607, i32 3577), !dbg !1835
  call void @printDDep(i32 3564, i32 3577), !dbg !1835
  call void @printCDep(i32 610, i32 3577), !dbg !1835
  %arrayidx876.i.i = getelementptr inbounds i32, i32* %1275, i64 27, !dbg !1835
  %1276 = ptrtoint i32* %arrayidx876.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1276, i32 3582, i32 59, i32 9), !dbg !1835
  %1277 = load i32, i32* %arrayidx876.i.i, align 4, !dbg !1835
  call void @printDDep(i32 161, i32 3582), !dbg !1835
  call void @printDDep(i32 3577, i32 3582), !dbg !1835
  call void @printCDep(i32 610, i32 3582), !dbg !1835
  %xor877.i.i = xor i32 %1273, %1277, !dbg !1835
  %1278 = ptrtoint i32* %t.i.i to i64, !dbg !1835
  call void @printStoreAddr(i64 %1278, i32 3587, i32 59, i32 9), !dbg !1835
  store i32 %xor877.i.i, i32* %t.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3569, i32 3587), !dbg !1835
  call void @printDDep(i32 3582, i32 3587), !dbg !1835
  call void @printCDep(i32 610, i32 3587), !dbg !1835
  %1279 = ptrtoint i32* %t.i.i to i64, !dbg !1749
  call void @printLoadAddr(i64 %1279, i32 3591, i32 59, i32 9), !dbg !1749
  %1280 = load i32, i32* %t.i.i, align 4, !dbg !1749
  call void @printDDep(i32 3587, i32 3591), !dbg !1749
  call void @printDDep(i32 3587, i32 3591), !dbg !1749
  call void @printCDep(i32 610, i32 3591), !dbg !1749
  %1281 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1280) #5, !dbg !1749, !srcloc !204
  %1282 = ptrtoint i32* %ret878.i.i to i64, !dbg !1749
  call void @printStoreAddr(i64 %1282, i32 3596, i32 59, i32 9), !dbg !1749
  store i32 %1281, i32* %ret878.i.i, align 4, !dbg !1749
  call void @printDDep(i32 3587, i32 3596), !dbg !1749
  call void @printDDep(i32 161, i32 3596), !dbg !1749
  call void @printCDep(i32 610, i32 3596), !dbg !1749
  %1283 = ptrtoint i32* %ret878.i.i to i64, !dbg !1749
  call void @printLoadAddr(i64 %1283, i32 3600, i32 59, i32 9), !dbg !1749
  %1284 = load i32, i32* %ret878.i.i, align 4, !dbg !1749
  call void @printDDep(i32 3596, i32 3600), !dbg !1749
  call void @printDDep(i32 3596, i32 3600), !dbg !1749
  call void @printCDep(i32 610, i32 3600), !dbg !1749
  %1285 = ptrtoint i32* %tmp879.i.i to i64, !dbg !1749
  call void @printStoreAddr(i64 %1285, i32 3604, i32 59, i32 9), !dbg !1749
  store i32 %1284, i32* %tmp879.i.i, align 4, !dbg !1749
  call void @printDDep(i32 3596, i32 3604), !dbg !1749
  call void @printDDep(i32 161, i32 3604), !dbg !1749
  call void @printCDep(i32 610, i32 3604), !dbg !1749
  %1286 = ptrtoint i32* %tmp879.i.i to i64, !dbg !1749
  call void @printLoadAddr(i64 %1286, i32 3608, i32 59, i32 9), !dbg !1749
  %1287 = load i32, i32* %tmp879.i.i, align 4, !dbg !1749
  call void @printDDep(i32 3604, i32 3608), !dbg !1749
  call void @printDDep(i32 3604, i32 3608), !dbg !1749
  call void @printCDep(i32 610, i32 3608), !dbg !1749
  %1288 = ptrtoint i32* %t.i.i to i64, !dbg !1835
  call void @printStoreAddr(i64 %1288, i32 3612, i32 59, i32 9), !dbg !1835
  store i32 %1287, i32* %t.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3604, i32 3612), !dbg !1835
  call void @printDDep(i32 3591, i32 3612), !dbg !1835
  call void @printCDep(i32 610, i32 3612), !dbg !1835
  %1289 = ptrtoint i32* %u.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1289, i32 3616, i32 59, i32 9), !dbg !1835
  %1290 = load i32, i32* %u.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3569, i32 3616), !dbg !1835
  call void @printDDep(i32 3582, i32 3616), !dbg !1835
  call void @printCDep(i32 610, i32 3616), !dbg !1835
  %shr880.i.i = lshr i32 %1290, 2, !dbg !1835
  %and881.i.i = and i32 %shr880.i.i, 63, !dbg !1835
  %idxprom882.i.i = zext i32 %and881.i.i to i64, !dbg !1835
  %arrayidx883.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom882.i.i, !dbg !1835
  %1291 = ptrtoint i32* %arrayidx883.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1291, i32 3624, i32 59, i32 9), !dbg !1835
  %1292 = load i32, i32* %arrayidx883.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3582, i32 3624), !dbg !1835
  call void @printCDep(i32 610, i32 3624), !dbg !1835
  %1293 = ptrtoint i32* %u.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1293, i32 3627, i32 59, i32 9), !dbg !1835
  %1294 = load i32, i32* %u.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3569, i32 3627), !dbg !1835
  call void @printDDep(i32 3616, i32 3627), !dbg !1835
  call void @printCDep(i32 610, i32 3627), !dbg !1835
  %shr884.i.i = lshr i32 %1294, 10, !dbg !1835
  %and885.i.i = and i32 %shr884.i.i, 63, !dbg !1835
  %idxprom886.i.i = zext i32 %and885.i.i to i64, !dbg !1835
  %arrayidx887.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom886.i.i, !dbg !1835
  %1295 = ptrtoint i32* %arrayidx887.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1295, i32 3635, i32 59, i32 9), !dbg !1835
  %1296 = load i32, i32* %arrayidx887.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3582, i32 3635), !dbg !1835
  call void @printCDep(i32 610, i32 3635), !dbg !1835
  %xor888.i.i = xor i32 %1292, %1296, !dbg !1835
  %1297 = ptrtoint i32* %u.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1297, i32 3639, i32 59, i32 9), !dbg !1835
  %1298 = load i32, i32* %u.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3569, i32 3639), !dbg !1835
  call void @printDDep(i32 3627, i32 3639), !dbg !1835
  call void @printCDep(i32 610, i32 3639), !dbg !1835
  %shr889.i.i = lshr i32 %1298, 18, !dbg !1835
  %and890.i.i = and i32 %shr889.i.i, 63, !dbg !1835
  %idxprom891.i.i = zext i32 %and890.i.i to i64, !dbg !1835
  %arrayidx892.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom891.i.i, !dbg !1835
  %1299 = ptrtoint i32* %arrayidx892.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1299, i32 3647, i32 59, i32 9), !dbg !1835
  %1300 = load i32, i32* %arrayidx892.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3582, i32 3647), !dbg !1835
  call void @printCDep(i32 610, i32 3647), !dbg !1835
  %xor893.i.i = xor i32 %xor888.i.i, %1300, !dbg !1835
  %1301 = ptrtoint i32* %u.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1301, i32 3651, i32 59, i32 9), !dbg !1835
  %1302 = load i32, i32* %u.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3569, i32 3651), !dbg !1835
  call void @printDDep(i32 3639, i32 3651), !dbg !1835
  call void @printCDep(i32 610, i32 3651), !dbg !1835
  %shr894.i.i = lshr i32 %1302, 26, !dbg !1835
  %idxprom896.i.i = zext i32 %shr894.i.i to i64, !dbg !1835
  %arrayidx897.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom896.i.i, !dbg !1835
  %1303 = ptrtoint i32* %arrayidx897.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1303, i32 3658, i32 59, i32 9), !dbg !1835
  %1304 = load i32, i32* %arrayidx897.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3582, i32 3658), !dbg !1835
  call void @printCDep(i32 610, i32 3658), !dbg !1835
  %xor898.i.i = xor i32 %xor893.i.i, %1304, !dbg !1835
  %1305 = ptrtoint i32* %t.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1305, i32 3662, i32 59, i32 9), !dbg !1835
  %1306 = load i32, i32* %t.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3612, i32 3662), !dbg !1835
  call void @printDDep(i32 3612, i32 3662), !dbg !1835
  call void @printCDep(i32 610, i32 3662), !dbg !1835
  %shr899.i.i = lshr i32 %1306, 2, !dbg !1835
  %and900.i.i = and i32 %shr899.i.i, 63, !dbg !1835
  %idxprom901.i.i = zext i32 %and900.i.i to i64, !dbg !1835
  %arrayidx902.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom901.i.i, !dbg !1835
  %1307 = ptrtoint i32* %arrayidx902.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1307, i32 3670, i32 59, i32 9), !dbg !1835
  %1308 = load i32, i32* %arrayidx902.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3582, i32 3670), !dbg !1835
  call void @printCDep(i32 610, i32 3670), !dbg !1835
  %xor903.i.i = xor i32 %xor898.i.i, %1308, !dbg !1835
  %1309 = ptrtoint i32* %t.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1309, i32 3674, i32 59, i32 9), !dbg !1835
  %1310 = load i32, i32* %t.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3612, i32 3674), !dbg !1835
  call void @printDDep(i32 3662, i32 3674), !dbg !1835
  call void @printCDep(i32 610, i32 3674), !dbg !1835
  %shr904.i.i = lshr i32 %1310, 10, !dbg !1835
  %and905.i.i = and i32 %shr904.i.i, 63, !dbg !1835
  %idxprom906.i.i = zext i32 %and905.i.i to i64, !dbg !1835
  %arrayidx907.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom906.i.i, !dbg !1835
  %1311 = ptrtoint i32* %arrayidx907.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1311, i32 3682, i32 59, i32 9), !dbg !1835
  %1312 = load i32, i32* %arrayidx907.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3582, i32 3682), !dbg !1835
  call void @printCDep(i32 610, i32 3682), !dbg !1835
  %xor908.i.i = xor i32 %xor903.i.i, %1312, !dbg !1835
  %1313 = ptrtoint i32* %t.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1313, i32 3686, i32 59, i32 9), !dbg !1835
  %1314 = load i32, i32* %t.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3612, i32 3686), !dbg !1835
  call void @printDDep(i32 3674, i32 3686), !dbg !1835
  call void @printCDep(i32 610, i32 3686), !dbg !1835
  %shr909.i.i = lshr i32 %1314, 18, !dbg !1835
  %and910.i.i = and i32 %shr909.i.i, 63, !dbg !1835
  %idxprom911.i.i = zext i32 %and910.i.i to i64, !dbg !1835
  %arrayidx912.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom911.i.i, !dbg !1835
  %1315 = ptrtoint i32* %arrayidx912.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1315, i32 3694, i32 59, i32 9), !dbg !1835
  %1316 = load i32, i32* %arrayidx912.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3582, i32 3694), !dbg !1835
  call void @printCDep(i32 610, i32 3694), !dbg !1835
  %xor913.i.i = xor i32 %xor908.i.i, %1316, !dbg !1835
  %1317 = ptrtoint i32* %t.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1317, i32 3698, i32 59, i32 9), !dbg !1835
  %1318 = load i32, i32* %t.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3612, i32 3698), !dbg !1835
  call void @printDDep(i32 3686, i32 3698), !dbg !1835
  call void @printCDep(i32 610, i32 3698), !dbg !1835
  %shr914.i.i = lshr i32 %1318, 26, !dbg !1835
  %idxprom916.i.i = zext i32 %shr914.i.i to i64, !dbg !1835
  %arrayidx917.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom916.i.i, !dbg !1835
  %1319 = ptrtoint i32* %arrayidx917.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1319, i32 3705, i32 59, i32 9), !dbg !1835
  %1320 = load i32, i32* %arrayidx917.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3582, i32 3705), !dbg !1835
  call void @printCDep(i32 610, i32 3705), !dbg !1835
  %xor918.i.i = xor i32 %xor913.i.i, %1320, !dbg !1835
  %1321 = ptrtoint i32* %l.i.i to i64, !dbg !1835
  call void @printLoadAddr(i64 %1321, i32 3709, i32 59, i32 9), !dbg !1835
  %1322 = load i32, i32* %l.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3388, i32 3709), !dbg !1835
  call void @printDDep(i32 3582, i32 3709), !dbg !1835
  call void @printCDep(i32 610, i32 3709), !dbg !1835
  %xor919.i.i = xor i32 %1322, %xor918.i.i, !dbg !1835
  %1323 = ptrtoint i32* %l.i.i to i64, !dbg !1835
  call void @printStoreAddr(i64 %1323, i32 3714, i32 59, i32 9), !dbg !1835
  store i32 %xor919.i.i, i32* %l.i.i, align 4, !dbg !1835
  call void @printDDep(i32 3612, i32 3714), !dbg !1835
  call void @printDDep(i32 3709, i32 3714), !dbg !1835
  call void @printCDep(i32 610, i32 3714), !dbg !1835
  %1324 = ptrtoint i32* %l.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1324, i32 3718, i32 60, i32 9), !dbg !1836
  %1325 = load i32, i32* %l.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3714, i32 3718), !dbg !1836
  call void @printDDep(i32 3714, i32 3718), !dbg !1836
  call void @printCDep(i32 610, i32 3718), !dbg !1836
  %1326 = ptrtoint i32** %s.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1326, i32 3722, i32 60, i32 9), !dbg !1836
  %1327 = load i32*, i32** %s.i.i, align 8, !dbg !1836
  call void @printDDep(i32 607, i32 3722), !dbg !1836
  call void @printDDep(i32 3582, i32 3722), !dbg !1836
  call void @printCDep(i32 610, i32 3722), !dbg !1836
  %arrayidx920.i.i = getelementptr inbounds i32, i32* %1327, i64 24, !dbg !1836
  %1328 = ptrtoint i32* %arrayidx920.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1328, i32 3727, i32 60, i32 9), !dbg !1836
  %1329 = load i32, i32* %arrayidx920.i.i, align 4, !dbg !1836
  call void @printDDep(i32 161, i32 3727), !dbg !1836
  call void @printDDep(i32 3722, i32 3727), !dbg !1836
  call void @printCDep(i32 610, i32 3727), !dbg !1836
  %xor921.i.i = xor i32 %1325, %1329, !dbg !1836
  %1330 = ptrtoint i32* %u.i.i to i64, !dbg !1836
  call void @printStoreAddr(i64 %1330, i32 3732, i32 60, i32 9), !dbg !1836
  store i32 %xor921.i.i, i32* %u.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3714, i32 3732), !dbg !1836
  call void @printDDep(i32 3727, i32 3732), !dbg !1836
  call void @printCDep(i32 610, i32 3732), !dbg !1836
  %1331 = ptrtoint i32* %l.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1331, i32 3736, i32 60, i32 9), !dbg !1836
  %1332 = load i32, i32* %l.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3714, i32 3736), !dbg !1836
  call void @printDDep(i32 3727, i32 3736), !dbg !1836
  call void @printCDep(i32 610, i32 3736), !dbg !1836
  %1333 = ptrtoint i32** %s.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1333, i32 3740, i32 60, i32 9), !dbg !1836
  %1334 = load i32*, i32** %s.i.i, align 8, !dbg !1836
  call void @printDDep(i32 607, i32 3740), !dbg !1836
  call void @printDDep(i32 3727, i32 3740), !dbg !1836
  call void @printCDep(i32 610, i32 3740), !dbg !1836
  %arrayidx922.i.i = getelementptr inbounds i32, i32* %1334, i64 25, !dbg !1836
  %1335 = ptrtoint i32* %arrayidx922.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1335, i32 3745, i32 60, i32 9), !dbg !1836
  %1336 = load i32, i32* %arrayidx922.i.i, align 4, !dbg !1836
  call void @printDDep(i32 161, i32 3745), !dbg !1836
  call void @printDDep(i32 3740, i32 3745), !dbg !1836
  call void @printCDep(i32 610, i32 3745), !dbg !1836
  %xor923.i.i = xor i32 %1332, %1336, !dbg !1836
  %1337 = ptrtoint i32* %t.i.i to i64, !dbg !1836
  call void @printStoreAddr(i64 %1337, i32 3750, i32 60, i32 9), !dbg !1836
  store i32 %xor923.i.i, i32* %t.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3732, i32 3750), !dbg !1836
  call void @printDDep(i32 3745, i32 3750), !dbg !1836
  call void @printCDep(i32 610, i32 3750), !dbg !1836
  %1338 = ptrtoint i32* %t.i.i to i64, !dbg !1750
  call void @printLoadAddr(i64 %1338, i32 3754, i32 60, i32 9), !dbg !1750
  %1339 = load i32, i32* %t.i.i, align 4, !dbg !1750
  call void @printDDep(i32 3750, i32 3754), !dbg !1750
  call void @printDDep(i32 3750, i32 3754), !dbg !1750
  call void @printCDep(i32 610, i32 3754), !dbg !1750
  %1340 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1339) #5, !dbg !1750, !srcloc !210
  %1341 = ptrtoint i32* %ret924.i.i to i64, !dbg !1750
  call void @printStoreAddr(i64 %1341, i32 3759, i32 60, i32 9), !dbg !1750
  store i32 %1340, i32* %ret924.i.i, align 4, !dbg !1750
  call void @printDDep(i32 3750, i32 3759), !dbg !1750
  call void @printDDep(i32 161, i32 3759), !dbg !1750
  call void @printCDep(i32 610, i32 3759), !dbg !1750
  %1342 = ptrtoint i32* %ret924.i.i to i64, !dbg !1750
  call void @printLoadAddr(i64 %1342, i32 3763, i32 60, i32 9), !dbg !1750
  %1343 = load i32, i32* %ret924.i.i, align 4, !dbg !1750
  call void @printDDep(i32 3759, i32 3763), !dbg !1750
  call void @printDDep(i32 3759, i32 3763), !dbg !1750
  call void @printCDep(i32 610, i32 3763), !dbg !1750
  %1344 = ptrtoint i32* %tmp925.i.i to i64, !dbg !1750
  call void @printStoreAddr(i64 %1344, i32 3767, i32 60, i32 9), !dbg !1750
  store i32 %1343, i32* %tmp925.i.i, align 4, !dbg !1750
  call void @printDDep(i32 3759, i32 3767), !dbg !1750
  call void @printDDep(i32 161, i32 3767), !dbg !1750
  call void @printCDep(i32 610, i32 3767), !dbg !1750
  %1345 = ptrtoint i32* %tmp925.i.i to i64, !dbg !1750
  call void @printLoadAddr(i64 %1345, i32 3771, i32 60, i32 9), !dbg !1750
  %1346 = load i32, i32* %tmp925.i.i, align 4, !dbg !1750
  call void @printDDep(i32 3767, i32 3771), !dbg !1750
  call void @printDDep(i32 3767, i32 3771), !dbg !1750
  call void @printCDep(i32 610, i32 3771), !dbg !1750
  %1347 = ptrtoint i32* %t.i.i to i64, !dbg !1836
  call void @printStoreAddr(i64 %1347, i32 3775, i32 60, i32 9), !dbg !1836
  store i32 %1346, i32* %t.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3767, i32 3775), !dbg !1836
  call void @printDDep(i32 3754, i32 3775), !dbg !1836
  call void @printCDep(i32 610, i32 3775), !dbg !1836
  %1348 = ptrtoint i32* %u.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1348, i32 3779, i32 60, i32 9), !dbg !1836
  %1349 = load i32, i32* %u.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3732, i32 3779), !dbg !1836
  call void @printDDep(i32 3745, i32 3779), !dbg !1836
  call void @printCDep(i32 610, i32 3779), !dbg !1836
  %shr926.i.i = lshr i32 %1349, 2, !dbg !1836
  %and927.i.i = and i32 %shr926.i.i, 63, !dbg !1836
  %idxprom928.i.i = zext i32 %and927.i.i to i64, !dbg !1836
  %arrayidx929.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom928.i.i, !dbg !1836
  %1350 = ptrtoint i32* %arrayidx929.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1350, i32 3787, i32 60, i32 9), !dbg !1836
  %1351 = load i32, i32* %arrayidx929.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3745, i32 3787), !dbg !1836
  call void @printCDep(i32 610, i32 3787), !dbg !1836
  %1352 = ptrtoint i32* %u.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1352, i32 3790, i32 60, i32 9), !dbg !1836
  %1353 = load i32, i32* %u.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3732, i32 3790), !dbg !1836
  call void @printDDep(i32 3779, i32 3790), !dbg !1836
  call void @printCDep(i32 610, i32 3790), !dbg !1836
  %shr930.i.i = lshr i32 %1353, 10, !dbg !1836
  %and931.i.i = and i32 %shr930.i.i, 63, !dbg !1836
  %idxprom932.i.i = zext i32 %and931.i.i to i64, !dbg !1836
  %arrayidx933.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom932.i.i, !dbg !1836
  %1354 = ptrtoint i32* %arrayidx933.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1354, i32 3798, i32 60, i32 9), !dbg !1836
  %1355 = load i32, i32* %arrayidx933.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3745, i32 3798), !dbg !1836
  call void @printCDep(i32 610, i32 3798), !dbg !1836
  %xor934.i.i = xor i32 %1351, %1355, !dbg !1836
  %1356 = ptrtoint i32* %u.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1356, i32 3802, i32 60, i32 9), !dbg !1836
  %1357 = load i32, i32* %u.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3732, i32 3802), !dbg !1836
  call void @printDDep(i32 3790, i32 3802), !dbg !1836
  call void @printCDep(i32 610, i32 3802), !dbg !1836
  %shr935.i.i = lshr i32 %1357, 18, !dbg !1836
  %and936.i.i = and i32 %shr935.i.i, 63, !dbg !1836
  %idxprom937.i.i = zext i32 %and936.i.i to i64, !dbg !1836
  %arrayidx938.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom937.i.i, !dbg !1836
  %1358 = ptrtoint i32* %arrayidx938.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1358, i32 3810, i32 60, i32 9), !dbg !1836
  %1359 = load i32, i32* %arrayidx938.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3745, i32 3810), !dbg !1836
  call void @printCDep(i32 610, i32 3810), !dbg !1836
  %xor939.i.i = xor i32 %xor934.i.i, %1359, !dbg !1836
  %1360 = ptrtoint i32* %u.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1360, i32 3814, i32 60, i32 9), !dbg !1836
  %1361 = load i32, i32* %u.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3732, i32 3814), !dbg !1836
  call void @printDDep(i32 3802, i32 3814), !dbg !1836
  call void @printCDep(i32 610, i32 3814), !dbg !1836
  %shr940.i.i = lshr i32 %1361, 26, !dbg !1836
  %idxprom942.i.i = zext i32 %shr940.i.i to i64, !dbg !1836
  %arrayidx943.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom942.i.i, !dbg !1836
  %1362 = ptrtoint i32* %arrayidx943.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1362, i32 3821, i32 60, i32 9), !dbg !1836
  %1363 = load i32, i32* %arrayidx943.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3745, i32 3821), !dbg !1836
  call void @printCDep(i32 610, i32 3821), !dbg !1836
  %xor944.i.i = xor i32 %xor939.i.i, %1363, !dbg !1836
  %1364 = ptrtoint i32* %t.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1364, i32 3825, i32 60, i32 9), !dbg !1836
  %1365 = load i32, i32* %t.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3775, i32 3825), !dbg !1836
  call void @printDDep(i32 3775, i32 3825), !dbg !1836
  call void @printCDep(i32 610, i32 3825), !dbg !1836
  %shr945.i.i = lshr i32 %1365, 2, !dbg !1836
  %and946.i.i = and i32 %shr945.i.i, 63, !dbg !1836
  %idxprom947.i.i = zext i32 %and946.i.i to i64, !dbg !1836
  %arrayidx948.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom947.i.i, !dbg !1836
  %1366 = ptrtoint i32* %arrayidx948.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1366, i32 3833, i32 60, i32 9), !dbg !1836
  %1367 = load i32, i32* %arrayidx948.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3745, i32 3833), !dbg !1836
  call void @printCDep(i32 610, i32 3833), !dbg !1836
  %xor949.i.i = xor i32 %xor944.i.i, %1367, !dbg !1836
  %1368 = ptrtoint i32* %t.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1368, i32 3837, i32 60, i32 9), !dbg !1836
  %1369 = load i32, i32* %t.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3775, i32 3837), !dbg !1836
  call void @printDDep(i32 3825, i32 3837), !dbg !1836
  call void @printCDep(i32 610, i32 3837), !dbg !1836
  %shr950.i.i = lshr i32 %1369, 10, !dbg !1836
  %and951.i.i = and i32 %shr950.i.i, 63, !dbg !1836
  %idxprom952.i.i = zext i32 %and951.i.i to i64, !dbg !1836
  %arrayidx953.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom952.i.i, !dbg !1836
  %1370 = ptrtoint i32* %arrayidx953.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1370, i32 3845, i32 60, i32 9), !dbg !1836
  %1371 = load i32, i32* %arrayidx953.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3745, i32 3845), !dbg !1836
  call void @printCDep(i32 610, i32 3845), !dbg !1836
  %xor954.i.i = xor i32 %xor949.i.i, %1371, !dbg !1836
  %1372 = ptrtoint i32* %t.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1372, i32 3849, i32 60, i32 9), !dbg !1836
  %1373 = load i32, i32* %t.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3775, i32 3849), !dbg !1836
  call void @printDDep(i32 3837, i32 3849), !dbg !1836
  call void @printCDep(i32 610, i32 3849), !dbg !1836
  %shr955.i.i = lshr i32 %1373, 18, !dbg !1836
  %and956.i.i = and i32 %shr955.i.i, 63, !dbg !1836
  %idxprom957.i.i = zext i32 %and956.i.i to i64, !dbg !1836
  %arrayidx958.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom957.i.i, !dbg !1836
  %1374 = ptrtoint i32* %arrayidx958.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1374, i32 3857, i32 60, i32 9), !dbg !1836
  %1375 = load i32, i32* %arrayidx958.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3745, i32 3857), !dbg !1836
  call void @printCDep(i32 610, i32 3857), !dbg !1836
  %xor959.i.i = xor i32 %xor954.i.i, %1375, !dbg !1836
  %1376 = ptrtoint i32* %t.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1376, i32 3861, i32 60, i32 9), !dbg !1836
  %1377 = load i32, i32* %t.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3775, i32 3861), !dbg !1836
  call void @printDDep(i32 3849, i32 3861), !dbg !1836
  call void @printCDep(i32 610, i32 3861), !dbg !1836
  %shr960.i.i = lshr i32 %1377, 26, !dbg !1836
  %idxprom962.i.i = zext i32 %shr960.i.i to i64, !dbg !1836
  %arrayidx963.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom962.i.i, !dbg !1836
  %1378 = ptrtoint i32* %arrayidx963.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1378, i32 3868, i32 60, i32 9), !dbg !1836
  %1379 = load i32, i32* %arrayidx963.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3745, i32 3868), !dbg !1836
  call void @printCDep(i32 610, i32 3868), !dbg !1836
  %xor964.i.i = xor i32 %xor959.i.i, %1379, !dbg !1836
  %1380 = ptrtoint i32* %r.i.i to i64, !dbg !1836
  call void @printLoadAddr(i64 %1380, i32 3872, i32 60, i32 9), !dbg !1836
  %1381 = load i32, i32* %r.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3551, i32 3872), !dbg !1836
  call void @printDDep(i32 3745, i32 3872), !dbg !1836
  call void @printCDep(i32 610, i32 3872), !dbg !1836
  %xor965.i.i = xor i32 %1381, %xor964.i.i, !dbg !1836
  %1382 = ptrtoint i32* %r.i.i to i64, !dbg !1836
  call void @printStoreAddr(i64 %1382, i32 3877, i32 60, i32 9), !dbg !1836
  store i32 %xor965.i.i, i32* %r.i.i, align 4, !dbg !1836
  call void @printDDep(i32 3775, i32 3877), !dbg !1836
  call void @printDDep(i32 3872, i32 3877), !dbg !1836
  call void @printCDep(i32 610, i32 3877), !dbg !1836
  %1383 = ptrtoint i32* %r.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1383, i32 3881, i32 61, i32 9), !dbg !1837
  %1384 = load i32, i32* %r.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3877, i32 3881), !dbg !1837
  call void @printDDep(i32 3877, i32 3881), !dbg !1837
  call void @printCDep(i32 610, i32 3881), !dbg !1837
  %1385 = ptrtoint i32** %s.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1385, i32 3885, i32 61, i32 9), !dbg !1837
  %1386 = load i32*, i32** %s.i.i, align 8, !dbg !1837
  call void @printDDep(i32 607, i32 3885), !dbg !1837
  call void @printDDep(i32 3745, i32 3885), !dbg !1837
  call void @printCDep(i32 610, i32 3885), !dbg !1837
  %arrayidx966.i.i = getelementptr inbounds i32, i32* %1386, i64 22, !dbg !1837
  %1387 = ptrtoint i32* %arrayidx966.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1387, i32 3890, i32 61, i32 9), !dbg !1837
  %1388 = load i32, i32* %arrayidx966.i.i, align 4, !dbg !1837
  call void @printDDep(i32 161, i32 3890), !dbg !1837
  call void @printDDep(i32 3885, i32 3890), !dbg !1837
  call void @printCDep(i32 610, i32 3890), !dbg !1837
  %xor967.i.i = xor i32 %1384, %1388, !dbg !1837
  %1389 = ptrtoint i32* %u.i.i to i64, !dbg !1837
  call void @printStoreAddr(i64 %1389, i32 3895, i32 61, i32 9), !dbg !1837
  store i32 %xor967.i.i, i32* %u.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3877, i32 3895), !dbg !1837
  call void @printDDep(i32 3890, i32 3895), !dbg !1837
  call void @printCDep(i32 610, i32 3895), !dbg !1837
  %1390 = ptrtoint i32* %r.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1390, i32 3899, i32 61, i32 9), !dbg !1837
  %1391 = load i32, i32* %r.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3877, i32 3899), !dbg !1837
  call void @printDDep(i32 3890, i32 3899), !dbg !1837
  call void @printCDep(i32 610, i32 3899), !dbg !1837
  %1392 = ptrtoint i32** %s.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1392, i32 3903, i32 61, i32 9), !dbg !1837
  %1393 = load i32*, i32** %s.i.i, align 8, !dbg !1837
  call void @printDDep(i32 607, i32 3903), !dbg !1837
  call void @printDDep(i32 3890, i32 3903), !dbg !1837
  call void @printCDep(i32 610, i32 3903), !dbg !1837
  %arrayidx968.i.i = getelementptr inbounds i32, i32* %1393, i64 23, !dbg !1837
  %1394 = ptrtoint i32* %arrayidx968.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1394, i32 3908, i32 61, i32 9), !dbg !1837
  %1395 = load i32, i32* %arrayidx968.i.i, align 4, !dbg !1837
  call void @printDDep(i32 161, i32 3908), !dbg !1837
  call void @printDDep(i32 3903, i32 3908), !dbg !1837
  call void @printCDep(i32 610, i32 3908), !dbg !1837
  %xor969.i.i = xor i32 %1391, %1395, !dbg !1837
  %1396 = ptrtoint i32* %t.i.i to i64, !dbg !1837
  call void @printStoreAddr(i64 %1396, i32 3913, i32 61, i32 9), !dbg !1837
  store i32 %xor969.i.i, i32* %t.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3895, i32 3913), !dbg !1837
  call void @printDDep(i32 3908, i32 3913), !dbg !1837
  call void @printCDep(i32 610, i32 3913), !dbg !1837
  %1397 = ptrtoint i32* %t.i.i to i64, !dbg !1751
  call void @printLoadAddr(i64 %1397, i32 3917, i32 61, i32 9), !dbg !1751
  %1398 = load i32, i32* %t.i.i, align 4, !dbg !1751
  call void @printDDep(i32 3913, i32 3917), !dbg !1751
  call void @printDDep(i32 3913, i32 3917), !dbg !1751
  call void @printCDep(i32 610, i32 3917), !dbg !1751
  %1399 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1398) #5, !dbg !1751, !srcloc !216
  %1400 = ptrtoint i32* %ret970.i.i to i64, !dbg !1751
  call void @printStoreAddr(i64 %1400, i32 3922, i32 61, i32 9), !dbg !1751
  store i32 %1399, i32* %ret970.i.i, align 4, !dbg !1751
  call void @printDDep(i32 3913, i32 3922), !dbg !1751
  call void @printDDep(i32 161, i32 3922), !dbg !1751
  call void @printCDep(i32 610, i32 3922), !dbg !1751
  %1401 = ptrtoint i32* %ret970.i.i to i64, !dbg !1751
  call void @printLoadAddr(i64 %1401, i32 3926, i32 61, i32 9), !dbg !1751
  %1402 = load i32, i32* %ret970.i.i, align 4, !dbg !1751
  call void @printDDep(i32 3922, i32 3926), !dbg !1751
  call void @printDDep(i32 3922, i32 3926), !dbg !1751
  call void @printCDep(i32 610, i32 3926), !dbg !1751
  %1403 = ptrtoint i32* %tmp971.i.i to i64, !dbg !1751
  call void @printStoreAddr(i64 %1403, i32 3930, i32 61, i32 9), !dbg !1751
  store i32 %1402, i32* %tmp971.i.i, align 4, !dbg !1751
  call void @printDDep(i32 3922, i32 3930), !dbg !1751
  call void @printDDep(i32 161, i32 3930), !dbg !1751
  call void @printCDep(i32 610, i32 3930), !dbg !1751
  %1404 = ptrtoint i32* %tmp971.i.i to i64, !dbg !1751
  call void @printLoadAddr(i64 %1404, i32 3934, i32 61, i32 9), !dbg !1751
  %1405 = load i32, i32* %tmp971.i.i, align 4, !dbg !1751
  call void @printDDep(i32 3930, i32 3934), !dbg !1751
  call void @printDDep(i32 3930, i32 3934), !dbg !1751
  call void @printCDep(i32 610, i32 3934), !dbg !1751
  %1406 = ptrtoint i32* %t.i.i to i64, !dbg !1837
  call void @printStoreAddr(i64 %1406, i32 3938, i32 61, i32 9), !dbg !1837
  store i32 %1405, i32* %t.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3930, i32 3938), !dbg !1837
  call void @printDDep(i32 3917, i32 3938), !dbg !1837
  call void @printCDep(i32 610, i32 3938), !dbg !1837
  %1407 = ptrtoint i32* %u.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1407, i32 3942, i32 61, i32 9), !dbg !1837
  %1408 = load i32, i32* %u.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3895, i32 3942), !dbg !1837
  call void @printDDep(i32 3908, i32 3942), !dbg !1837
  call void @printCDep(i32 610, i32 3942), !dbg !1837
  %shr972.i.i = lshr i32 %1408, 2, !dbg !1837
  %and973.i.i = and i32 %shr972.i.i, 63, !dbg !1837
  %idxprom974.i.i = zext i32 %and973.i.i to i64, !dbg !1837
  %arrayidx975.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom974.i.i, !dbg !1837
  %1409 = ptrtoint i32* %arrayidx975.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1409, i32 3950, i32 61, i32 9), !dbg !1837
  %1410 = load i32, i32* %arrayidx975.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3908, i32 3950), !dbg !1837
  call void @printCDep(i32 610, i32 3950), !dbg !1837
  %1411 = ptrtoint i32* %u.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1411, i32 3953, i32 61, i32 9), !dbg !1837
  %1412 = load i32, i32* %u.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3895, i32 3953), !dbg !1837
  call void @printDDep(i32 3942, i32 3953), !dbg !1837
  call void @printCDep(i32 610, i32 3953), !dbg !1837
  %shr976.i.i = lshr i32 %1412, 10, !dbg !1837
  %and977.i.i = and i32 %shr976.i.i, 63, !dbg !1837
  %idxprom978.i.i = zext i32 %and977.i.i to i64, !dbg !1837
  %arrayidx979.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom978.i.i, !dbg !1837
  %1413 = ptrtoint i32* %arrayidx979.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1413, i32 3961, i32 61, i32 9), !dbg !1837
  %1414 = load i32, i32* %arrayidx979.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3908, i32 3961), !dbg !1837
  call void @printCDep(i32 610, i32 3961), !dbg !1837
  %xor980.i.i = xor i32 %1410, %1414, !dbg !1837
  %1415 = ptrtoint i32* %u.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1415, i32 3965, i32 61, i32 9), !dbg !1837
  %1416 = load i32, i32* %u.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3895, i32 3965), !dbg !1837
  call void @printDDep(i32 3953, i32 3965), !dbg !1837
  call void @printCDep(i32 610, i32 3965), !dbg !1837
  %shr981.i.i = lshr i32 %1416, 18, !dbg !1837
  %and982.i.i = and i32 %shr981.i.i, 63, !dbg !1837
  %idxprom983.i.i = zext i32 %and982.i.i to i64, !dbg !1837
  %arrayidx984.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom983.i.i, !dbg !1837
  %1417 = ptrtoint i32* %arrayidx984.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1417, i32 3973, i32 61, i32 9), !dbg !1837
  %1418 = load i32, i32* %arrayidx984.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3908, i32 3973), !dbg !1837
  call void @printCDep(i32 610, i32 3973), !dbg !1837
  %xor985.i.i = xor i32 %xor980.i.i, %1418, !dbg !1837
  %1419 = ptrtoint i32* %u.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1419, i32 3977, i32 61, i32 9), !dbg !1837
  %1420 = load i32, i32* %u.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3895, i32 3977), !dbg !1837
  call void @printDDep(i32 3965, i32 3977), !dbg !1837
  call void @printCDep(i32 610, i32 3977), !dbg !1837
  %shr986.i.i = lshr i32 %1420, 26, !dbg !1837
  %idxprom988.i.i = zext i32 %shr986.i.i to i64, !dbg !1837
  %arrayidx989.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom988.i.i, !dbg !1837
  %1421 = ptrtoint i32* %arrayidx989.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1421, i32 3984, i32 61, i32 9), !dbg !1837
  %1422 = load i32, i32* %arrayidx989.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3908, i32 3984), !dbg !1837
  call void @printCDep(i32 610, i32 3984), !dbg !1837
  %xor990.i.i = xor i32 %xor985.i.i, %1422, !dbg !1837
  %1423 = ptrtoint i32* %t.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1423, i32 3988, i32 61, i32 9), !dbg !1837
  %1424 = load i32, i32* %t.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3938, i32 3988), !dbg !1837
  call void @printDDep(i32 3938, i32 3988), !dbg !1837
  call void @printCDep(i32 610, i32 3988), !dbg !1837
  %shr991.i.i = lshr i32 %1424, 2, !dbg !1837
  %and992.i.i = and i32 %shr991.i.i, 63, !dbg !1837
  %idxprom993.i.i = zext i32 %and992.i.i to i64, !dbg !1837
  %arrayidx994.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom993.i.i, !dbg !1837
  %1425 = ptrtoint i32* %arrayidx994.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1425, i32 3996, i32 61, i32 9), !dbg !1837
  %1426 = load i32, i32* %arrayidx994.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3908, i32 3996), !dbg !1837
  call void @printCDep(i32 610, i32 3996), !dbg !1837
  %xor995.i.i = xor i32 %xor990.i.i, %1426, !dbg !1837
  %1427 = ptrtoint i32* %t.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1427, i32 4000, i32 61, i32 9), !dbg !1837
  %1428 = load i32, i32* %t.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3938, i32 4000), !dbg !1837
  call void @printDDep(i32 3988, i32 4000), !dbg !1837
  call void @printCDep(i32 610, i32 4000), !dbg !1837
  %shr996.i.i = lshr i32 %1428, 10, !dbg !1837
  %and997.i.i = and i32 %shr996.i.i, 63, !dbg !1837
  %idxprom998.i.i = zext i32 %and997.i.i to i64, !dbg !1837
  %arrayidx999.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom998.i.i, !dbg !1837
  %1429 = ptrtoint i32* %arrayidx999.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1429, i32 4008, i32 61, i32 9), !dbg !1837
  %1430 = load i32, i32* %arrayidx999.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3908, i32 4008), !dbg !1837
  call void @printCDep(i32 610, i32 4008), !dbg !1837
  %xor1000.i.i = xor i32 %xor995.i.i, %1430, !dbg !1837
  %1431 = ptrtoint i32* %t.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1431, i32 4012, i32 61, i32 9), !dbg !1837
  %1432 = load i32, i32* %t.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3938, i32 4012), !dbg !1837
  call void @printDDep(i32 4000, i32 4012), !dbg !1837
  call void @printCDep(i32 610, i32 4012), !dbg !1837
  %shr1001.i.i = lshr i32 %1432, 18, !dbg !1837
  %and1002.i.i = and i32 %shr1001.i.i, 63, !dbg !1837
  %idxprom1003.i.i = zext i32 %and1002.i.i to i64, !dbg !1837
  %arrayidx1004.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1003.i.i, !dbg !1837
  %1433 = ptrtoint i32* %arrayidx1004.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1433, i32 4020, i32 61, i32 9), !dbg !1837
  %1434 = load i32, i32* %arrayidx1004.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3908, i32 4020), !dbg !1837
  call void @printCDep(i32 610, i32 4020), !dbg !1837
  %xor1005.i.i = xor i32 %xor1000.i.i, %1434, !dbg !1837
  %1435 = ptrtoint i32* %t.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1435, i32 4024, i32 61, i32 9), !dbg !1837
  %1436 = load i32, i32* %t.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3938, i32 4024), !dbg !1837
  call void @printDDep(i32 4012, i32 4024), !dbg !1837
  call void @printCDep(i32 610, i32 4024), !dbg !1837
  %shr1006.i.i = lshr i32 %1436, 26, !dbg !1837
  %idxprom1008.i.i = zext i32 %shr1006.i.i to i64, !dbg !1837
  %arrayidx1009.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1008.i.i, !dbg !1837
  %1437 = ptrtoint i32* %arrayidx1009.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1437, i32 4031, i32 61, i32 9), !dbg !1837
  %1438 = load i32, i32* %arrayidx1009.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3908, i32 4031), !dbg !1837
  call void @printCDep(i32 610, i32 4031), !dbg !1837
  %xor1010.i.i = xor i32 %xor1005.i.i, %1438, !dbg !1837
  %1439 = ptrtoint i32* %l.i.i to i64, !dbg !1837
  call void @printLoadAddr(i64 %1439, i32 4035, i32 61, i32 9), !dbg !1837
  %1440 = load i32, i32* %l.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3714, i32 4035), !dbg !1837
  call void @printDDep(i32 3908, i32 4035), !dbg !1837
  call void @printCDep(i32 610, i32 4035), !dbg !1837
  %xor1011.i.i = xor i32 %1440, %xor1010.i.i, !dbg !1837
  %1441 = ptrtoint i32* %l.i.i to i64, !dbg !1837
  call void @printStoreAddr(i64 %1441, i32 4040, i32 61, i32 9), !dbg !1837
  store i32 %xor1011.i.i, i32* %l.i.i, align 4, !dbg !1837
  call void @printDDep(i32 3938, i32 4040), !dbg !1837
  call void @printDDep(i32 4035, i32 4040), !dbg !1837
  call void @printCDep(i32 610, i32 4040), !dbg !1837
  %1442 = ptrtoint i32* %l.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1442, i32 4044, i32 62, i32 9), !dbg !1838
  %1443 = load i32, i32* %l.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4040, i32 4044), !dbg !1838
  call void @printDDep(i32 4040, i32 4044), !dbg !1838
  call void @printCDep(i32 610, i32 4044), !dbg !1838
  %1444 = ptrtoint i32** %s.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1444, i32 4048, i32 62, i32 9), !dbg !1838
  %1445 = load i32*, i32** %s.i.i, align 8, !dbg !1838
  call void @printDDep(i32 607, i32 4048), !dbg !1838
  call void @printDDep(i32 3908, i32 4048), !dbg !1838
  call void @printCDep(i32 610, i32 4048), !dbg !1838
  %arrayidx1012.i.i = getelementptr inbounds i32, i32* %1445, i64 20, !dbg !1838
  %1446 = ptrtoint i32* %arrayidx1012.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1446, i32 4053, i32 62, i32 9), !dbg !1838
  %1447 = load i32, i32* %arrayidx1012.i.i, align 4, !dbg !1838
  call void @printDDep(i32 161, i32 4053), !dbg !1838
  call void @printDDep(i32 4048, i32 4053), !dbg !1838
  call void @printCDep(i32 610, i32 4053), !dbg !1838
  %xor1013.i.i = xor i32 %1443, %1447, !dbg !1838
  %1448 = ptrtoint i32* %u.i.i to i64, !dbg !1838
  call void @printStoreAddr(i64 %1448, i32 4058, i32 62, i32 9), !dbg !1838
  store i32 %xor1013.i.i, i32* %u.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4040, i32 4058), !dbg !1838
  call void @printDDep(i32 4053, i32 4058), !dbg !1838
  call void @printCDep(i32 610, i32 4058), !dbg !1838
  %1449 = ptrtoint i32* %l.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1449, i32 4062, i32 62, i32 9), !dbg !1838
  %1450 = load i32, i32* %l.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4040, i32 4062), !dbg !1838
  call void @printDDep(i32 4053, i32 4062), !dbg !1838
  call void @printCDep(i32 610, i32 4062), !dbg !1838
  %1451 = ptrtoint i32** %s.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1451, i32 4066, i32 62, i32 9), !dbg !1838
  %1452 = load i32*, i32** %s.i.i, align 8, !dbg !1838
  call void @printDDep(i32 607, i32 4066), !dbg !1838
  call void @printDDep(i32 4053, i32 4066), !dbg !1838
  call void @printCDep(i32 610, i32 4066), !dbg !1838
  %arrayidx1014.i.i = getelementptr inbounds i32, i32* %1452, i64 21, !dbg !1838
  %1453 = ptrtoint i32* %arrayidx1014.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1453, i32 4071, i32 62, i32 9), !dbg !1838
  %1454 = load i32, i32* %arrayidx1014.i.i, align 4, !dbg !1838
  call void @printDDep(i32 161, i32 4071), !dbg !1838
  call void @printDDep(i32 4066, i32 4071), !dbg !1838
  call void @printCDep(i32 610, i32 4071), !dbg !1838
  %xor1015.i.i = xor i32 %1450, %1454, !dbg !1838
  %1455 = ptrtoint i32* %t.i.i to i64, !dbg !1838
  call void @printStoreAddr(i64 %1455, i32 4076, i32 62, i32 9), !dbg !1838
  store i32 %xor1015.i.i, i32* %t.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4058, i32 4076), !dbg !1838
  call void @printDDep(i32 4071, i32 4076), !dbg !1838
  call void @printCDep(i32 610, i32 4076), !dbg !1838
  %1456 = ptrtoint i32* %t.i.i to i64, !dbg !1752
  call void @printLoadAddr(i64 %1456, i32 4080, i32 62, i32 9), !dbg !1752
  %1457 = load i32, i32* %t.i.i, align 4, !dbg !1752
  call void @printDDep(i32 4076, i32 4080), !dbg !1752
  call void @printDDep(i32 4076, i32 4080), !dbg !1752
  call void @printCDep(i32 610, i32 4080), !dbg !1752
  %1458 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1457) #5, !dbg !1752, !srcloc !222
  %1459 = ptrtoint i32* %ret1016.i.i to i64, !dbg !1752
  call void @printStoreAddr(i64 %1459, i32 4085, i32 62, i32 9), !dbg !1752
  store i32 %1458, i32* %ret1016.i.i, align 4, !dbg !1752
  call void @printDDep(i32 4076, i32 4085), !dbg !1752
  call void @printDDep(i32 161, i32 4085), !dbg !1752
  call void @printCDep(i32 610, i32 4085), !dbg !1752
  %1460 = ptrtoint i32* %ret1016.i.i to i64, !dbg !1752
  call void @printLoadAddr(i64 %1460, i32 4089, i32 62, i32 9), !dbg !1752
  %1461 = load i32, i32* %ret1016.i.i, align 4, !dbg !1752
  call void @printDDep(i32 4085, i32 4089), !dbg !1752
  call void @printDDep(i32 4085, i32 4089), !dbg !1752
  call void @printCDep(i32 610, i32 4089), !dbg !1752
  %1462 = ptrtoint i32* %tmp1017.i.i to i64, !dbg !1752
  call void @printStoreAddr(i64 %1462, i32 4093, i32 62, i32 9), !dbg !1752
  store i32 %1461, i32* %tmp1017.i.i, align 4, !dbg !1752
  call void @printDDep(i32 4085, i32 4093), !dbg !1752
  call void @printDDep(i32 161, i32 4093), !dbg !1752
  call void @printCDep(i32 610, i32 4093), !dbg !1752
  %1463 = ptrtoint i32* %tmp1017.i.i to i64, !dbg !1752
  call void @printLoadAddr(i64 %1463, i32 4097, i32 62, i32 9), !dbg !1752
  %1464 = load i32, i32* %tmp1017.i.i, align 4, !dbg !1752
  call void @printDDep(i32 4093, i32 4097), !dbg !1752
  call void @printDDep(i32 4093, i32 4097), !dbg !1752
  call void @printCDep(i32 610, i32 4097), !dbg !1752
  %1465 = ptrtoint i32* %t.i.i to i64, !dbg !1838
  call void @printStoreAddr(i64 %1465, i32 4101, i32 62, i32 9), !dbg !1838
  store i32 %1464, i32* %t.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4093, i32 4101), !dbg !1838
  call void @printDDep(i32 4080, i32 4101), !dbg !1838
  call void @printCDep(i32 610, i32 4101), !dbg !1838
  %1466 = ptrtoint i32* %u.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1466, i32 4105, i32 62, i32 9), !dbg !1838
  %1467 = load i32, i32* %u.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4058, i32 4105), !dbg !1838
  call void @printDDep(i32 4071, i32 4105), !dbg !1838
  call void @printCDep(i32 610, i32 4105), !dbg !1838
  %shr1018.i.i = lshr i32 %1467, 2, !dbg !1838
  %and1019.i.i = and i32 %shr1018.i.i, 63, !dbg !1838
  %idxprom1020.i.i = zext i32 %and1019.i.i to i64, !dbg !1838
  %arrayidx1021.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1020.i.i, !dbg !1838
  %1468 = ptrtoint i32* %arrayidx1021.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1468, i32 4113, i32 62, i32 9), !dbg !1838
  %1469 = load i32, i32* %arrayidx1021.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4071, i32 4113), !dbg !1838
  call void @printCDep(i32 610, i32 4113), !dbg !1838
  %1470 = ptrtoint i32* %u.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1470, i32 4116, i32 62, i32 9), !dbg !1838
  %1471 = load i32, i32* %u.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4058, i32 4116), !dbg !1838
  call void @printDDep(i32 4105, i32 4116), !dbg !1838
  call void @printCDep(i32 610, i32 4116), !dbg !1838
  %shr1022.i.i = lshr i32 %1471, 10, !dbg !1838
  %and1023.i.i = and i32 %shr1022.i.i, 63, !dbg !1838
  %idxprom1024.i.i = zext i32 %and1023.i.i to i64, !dbg !1838
  %arrayidx1025.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1024.i.i, !dbg !1838
  %1472 = ptrtoint i32* %arrayidx1025.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1472, i32 4124, i32 62, i32 9), !dbg !1838
  %1473 = load i32, i32* %arrayidx1025.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4071, i32 4124), !dbg !1838
  call void @printCDep(i32 610, i32 4124), !dbg !1838
  %xor1026.i.i = xor i32 %1469, %1473, !dbg !1838
  %1474 = ptrtoint i32* %u.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1474, i32 4128, i32 62, i32 9), !dbg !1838
  %1475 = load i32, i32* %u.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4058, i32 4128), !dbg !1838
  call void @printDDep(i32 4116, i32 4128), !dbg !1838
  call void @printCDep(i32 610, i32 4128), !dbg !1838
  %shr1027.i.i = lshr i32 %1475, 18, !dbg !1838
  %and1028.i.i = and i32 %shr1027.i.i, 63, !dbg !1838
  %idxprom1029.i.i = zext i32 %and1028.i.i to i64, !dbg !1838
  %arrayidx1030.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1029.i.i, !dbg !1838
  %1476 = ptrtoint i32* %arrayidx1030.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1476, i32 4136, i32 62, i32 9), !dbg !1838
  %1477 = load i32, i32* %arrayidx1030.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4071, i32 4136), !dbg !1838
  call void @printCDep(i32 610, i32 4136), !dbg !1838
  %xor1031.i.i = xor i32 %xor1026.i.i, %1477, !dbg !1838
  %1478 = ptrtoint i32* %u.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1478, i32 4140, i32 62, i32 9), !dbg !1838
  %1479 = load i32, i32* %u.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4058, i32 4140), !dbg !1838
  call void @printDDep(i32 4128, i32 4140), !dbg !1838
  call void @printCDep(i32 610, i32 4140), !dbg !1838
  %shr1032.i.i = lshr i32 %1479, 26, !dbg !1838
  %idxprom1034.i.i = zext i32 %shr1032.i.i to i64, !dbg !1838
  %arrayidx1035.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1034.i.i, !dbg !1838
  %1480 = ptrtoint i32* %arrayidx1035.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1480, i32 4147, i32 62, i32 9), !dbg !1838
  %1481 = load i32, i32* %arrayidx1035.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4071, i32 4147), !dbg !1838
  call void @printCDep(i32 610, i32 4147), !dbg !1838
  %xor1036.i.i = xor i32 %xor1031.i.i, %1481, !dbg !1838
  %1482 = ptrtoint i32* %t.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1482, i32 4151, i32 62, i32 9), !dbg !1838
  %1483 = load i32, i32* %t.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4101, i32 4151), !dbg !1838
  call void @printDDep(i32 4101, i32 4151), !dbg !1838
  call void @printCDep(i32 610, i32 4151), !dbg !1838
  %shr1037.i.i = lshr i32 %1483, 2, !dbg !1838
  %and1038.i.i = and i32 %shr1037.i.i, 63, !dbg !1838
  %idxprom1039.i.i = zext i32 %and1038.i.i to i64, !dbg !1838
  %arrayidx1040.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1039.i.i, !dbg !1838
  %1484 = ptrtoint i32* %arrayidx1040.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1484, i32 4159, i32 62, i32 9), !dbg !1838
  %1485 = load i32, i32* %arrayidx1040.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4071, i32 4159), !dbg !1838
  call void @printCDep(i32 610, i32 4159), !dbg !1838
  %xor1041.i.i = xor i32 %xor1036.i.i, %1485, !dbg !1838
  %1486 = ptrtoint i32* %t.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1486, i32 4163, i32 62, i32 9), !dbg !1838
  %1487 = load i32, i32* %t.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4101, i32 4163), !dbg !1838
  call void @printDDep(i32 4151, i32 4163), !dbg !1838
  call void @printCDep(i32 610, i32 4163), !dbg !1838
  %shr1042.i.i = lshr i32 %1487, 10, !dbg !1838
  %and1043.i.i = and i32 %shr1042.i.i, 63, !dbg !1838
  %idxprom1044.i.i = zext i32 %and1043.i.i to i64, !dbg !1838
  %arrayidx1045.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1044.i.i, !dbg !1838
  %1488 = ptrtoint i32* %arrayidx1045.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1488, i32 4171, i32 62, i32 9), !dbg !1838
  %1489 = load i32, i32* %arrayidx1045.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4071, i32 4171), !dbg !1838
  call void @printCDep(i32 610, i32 4171), !dbg !1838
  %xor1046.i.i = xor i32 %xor1041.i.i, %1489, !dbg !1838
  %1490 = ptrtoint i32* %t.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1490, i32 4175, i32 62, i32 9), !dbg !1838
  %1491 = load i32, i32* %t.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4101, i32 4175), !dbg !1838
  call void @printDDep(i32 4163, i32 4175), !dbg !1838
  call void @printCDep(i32 610, i32 4175), !dbg !1838
  %shr1047.i.i = lshr i32 %1491, 18, !dbg !1838
  %and1048.i.i = and i32 %shr1047.i.i, 63, !dbg !1838
  %idxprom1049.i.i = zext i32 %and1048.i.i to i64, !dbg !1838
  %arrayidx1050.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1049.i.i, !dbg !1838
  %1492 = ptrtoint i32* %arrayidx1050.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1492, i32 4183, i32 62, i32 9), !dbg !1838
  %1493 = load i32, i32* %arrayidx1050.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4071, i32 4183), !dbg !1838
  call void @printCDep(i32 610, i32 4183), !dbg !1838
  %xor1051.i.i = xor i32 %xor1046.i.i, %1493, !dbg !1838
  %1494 = ptrtoint i32* %t.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1494, i32 4187, i32 62, i32 9), !dbg !1838
  %1495 = load i32, i32* %t.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4101, i32 4187), !dbg !1838
  call void @printDDep(i32 4175, i32 4187), !dbg !1838
  call void @printCDep(i32 610, i32 4187), !dbg !1838
  %shr1052.i.i = lshr i32 %1495, 26, !dbg !1838
  %idxprom1054.i.i = zext i32 %shr1052.i.i to i64, !dbg !1838
  %arrayidx1055.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1054.i.i, !dbg !1838
  %1496 = ptrtoint i32* %arrayidx1055.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1496, i32 4194, i32 62, i32 9), !dbg !1838
  %1497 = load i32, i32* %arrayidx1055.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4071, i32 4194), !dbg !1838
  call void @printCDep(i32 610, i32 4194), !dbg !1838
  %xor1056.i.i = xor i32 %xor1051.i.i, %1497, !dbg !1838
  %1498 = ptrtoint i32* %r.i.i to i64, !dbg !1838
  call void @printLoadAddr(i64 %1498, i32 4198, i32 62, i32 9), !dbg !1838
  %1499 = load i32, i32* %r.i.i, align 4, !dbg !1838
  call void @printDDep(i32 3877, i32 4198), !dbg !1838
  call void @printDDep(i32 4071, i32 4198), !dbg !1838
  call void @printCDep(i32 610, i32 4198), !dbg !1838
  %xor1057.i.i = xor i32 %1499, %xor1056.i.i, !dbg !1838
  %1500 = ptrtoint i32* %r.i.i to i64, !dbg !1838
  call void @printStoreAddr(i64 %1500, i32 4203, i32 62, i32 9), !dbg !1838
  store i32 %xor1057.i.i, i32* %r.i.i, align 4, !dbg !1838
  call void @printDDep(i32 4101, i32 4203), !dbg !1838
  call void @printDDep(i32 4198, i32 4203), !dbg !1838
  call void @printCDep(i32 610, i32 4203), !dbg !1838
  %1501 = ptrtoint i32* %r.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1501, i32 4207, i32 63, i32 9), !dbg !1839
  %1502 = load i32, i32* %r.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4203, i32 4207), !dbg !1839
  call void @printDDep(i32 4203, i32 4207), !dbg !1839
  call void @printCDep(i32 610, i32 4207), !dbg !1839
  %1503 = ptrtoint i32** %s.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1503, i32 4211, i32 63, i32 9), !dbg !1839
  %1504 = load i32*, i32** %s.i.i, align 8, !dbg !1839
  call void @printDDep(i32 607, i32 4211), !dbg !1839
  call void @printDDep(i32 4071, i32 4211), !dbg !1839
  call void @printCDep(i32 610, i32 4211), !dbg !1839
  %arrayidx1058.i.i = getelementptr inbounds i32, i32* %1504, i64 18, !dbg !1839
  %1505 = ptrtoint i32* %arrayidx1058.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1505, i32 4216, i32 63, i32 9), !dbg !1839
  %1506 = load i32, i32* %arrayidx1058.i.i, align 4, !dbg !1839
  call void @printDDep(i32 161, i32 4216), !dbg !1839
  call void @printDDep(i32 4211, i32 4216), !dbg !1839
  call void @printCDep(i32 610, i32 4216), !dbg !1839
  %xor1059.i.i = xor i32 %1502, %1506, !dbg !1839
  %1507 = ptrtoint i32* %u.i.i to i64, !dbg !1839
  call void @printStoreAddr(i64 %1507, i32 4221, i32 63, i32 9), !dbg !1839
  store i32 %xor1059.i.i, i32* %u.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4203, i32 4221), !dbg !1839
  call void @printDDep(i32 4216, i32 4221), !dbg !1839
  call void @printCDep(i32 610, i32 4221), !dbg !1839
  %1508 = ptrtoint i32* %r.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1508, i32 4225, i32 63, i32 9), !dbg !1839
  %1509 = load i32, i32* %r.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4203, i32 4225), !dbg !1839
  call void @printDDep(i32 4216, i32 4225), !dbg !1839
  call void @printCDep(i32 610, i32 4225), !dbg !1839
  %1510 = ptrtoint i32** %s.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1510, i32 4229, i32 63, i32 9), !dbg !1839
  %1511 = load i32*, i32** %s.i.i, align 8, !dbg !1839
  call void @printDDep(i32 607, i32 4229), !dbg !1839
  call void @printDDep(i32 4216, i32 4229), !dbg !1839
  call void @printCDep(i32 610, i32 4229), !dbg !1839
  %arrayidx1060.i.i = getelementptr inbounds i32, i32* %1511, i64 19, !dbg !1839
  %1512 = ptrtoint i32* %arrayidx1060.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1512, i32 4234, i32 63, i32 9), !dbg !1839
  %1513 = load i32, i32* %arrayidx1060.i.i, align 4, !dbg !1839
  call void @printDDep(i32 161, i32 4234), !dbg !1839
  call void @printDDep(i32 4229, i32 4234), !dbg !1839
  call void @printCDep(i32 610, i32 4234), !dbg !1839
  %xor1061.i.i = xor i32 %1509, %1513, !dbg !1839
  %1514 = ptrtoint i32* %t.i.i to i64, !dbg !1839
  call void @printStoreAddr(i64 %1514, i32 4239, i32 63, i32 9), !dbg !1839
  store i32 %xor1061.i.i, i32* %t.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4221, i32 4239), !dbg !1839
  call void @printDDep(i32 4234, i32 4239), !dbg !1839
  call void @printCDep(i32 610, i32 4239), !dbg !1839
  %1515 = ptrtoint i32* %t.i.i to i64, !dbg !1753
  call void @printLoadAddr(i64 %1515, i32 4243, i32 63, i32 9), !dbg !1753
  %1516 = load i32, i32* %t.i.i, align 4, !dbg !1753
  call void @printDDep(i32 4239, i32 4243), !dbg !1753
  call void @printDDep(i32 4239, i32 4243), !dbg !1753
  call void @printCDep(i32 610, i32 4243), !dbg !1753
  %1517 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1516) #5, !dbg !1753, !srcloc !228
  %1518 = ptrtoint i32* %ret1062.i.i to i64, !dbg !1753
  call void @printStoreAddr(i64 %1518, i32 4248, i32 63, i32 9), !dbg !1753
  store i32 %1517, i32* %ret1062.i.i, align 4, !dbg !1753
  call void @printDDep(i32 4239, i32 4248), !dbg !1753
  call void @printDDep(i32 161, i32 4248), !dbg !1753
  call void @printCDep(i32 610, i32 4248), !dbg !1753
  %1519 = ptrtoint i32* %ret1062.i.i to i64, !dbg !1753
  call void @printLoadAddr(i64 %1519, i32 4252, i32 63, i32 9), !dbg !1753
  %1520 = load i32, i32* %ret1062.i.i, align 4, !dbg !1753
  call void @printDDep(i32 4248, i32 4252), !dbg !1753
  call void @printDDep(i32 4248, i32 4252), !dbg !1753
  call void @printCDep(i32 610, i32 4252), !dbg !1753
  %1521 = ptrtoint i32* %tmp1063.i.i to i64, !dbg !1753
  call void @printStoreAddr(i64 %1521, i32 4256, i32 63, i32 9), !dbg !1753
  store i32 %1520, i32* %tmp1063.i.i, align 4, !dbg !1753
  call void @printDDep(i32 4248, i32 4256), !dbg !1753
  call void @printDDep(i32 161, i32 4256), !dbg !1753
  call void @printCDep(i32 610, i32 4256), !dbg !1753
  %1522 = ptrtoint i32* %tmp1063.i.i to i64, !dbg !1753
  call void @printLoadAddr(i64 %1522, i32 4260, i32 63, i32 9), !dbg !1753
  %1523 = load i32, i32* %tmp1063.i.i, align 4, !dbg !1753
  call void @printDDep(i32 4256, i32 4260), !dbg !1753
  call void @printDDep(i32 4256, i32 4260), !dbg !1753
  call void @printCDep(i32 610, i32 4260), !dbg !1753
  %1524 = ptrtoint i32* %t.i.i to i64, !dbg !1839
  call void @printStoreAddr(i64 %1524, i32 4264, i32 63, i32 9), !dbg !1839
  store i32 %1523, i32* %t.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4256, i32 4264), !dbg !1839
  call void @printDDep(i32 4243, i32 4264), !dbg !1839
  call void @printCDep(i32 610, i32 4264), !dbg !1839
  %1525 = ptrtoint i32* %u.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1525, i32 4268, i32 63, i32 9), !dbg !1839
  %1526 = load i32, i32* %u.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4221, i32 4268), !dbg !1839
  call void @printDDep(i32 4234, i32 4268), !dbg !1839
  call void @printCDep(i32 610, i32 4268), !dbg !1839
  %shr1064.i.i = lshr i32 %1526, 2, !dbg !1839
  %and1065.i.i = and i32 %shr1064.i.i, 63, !dbg !1839
  %idxprom1066.i.i = zext i32 %and1065.i.i to i64, !dbg !1839
  %arrayidx1067.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1066.i.i, !dbg !1839
  %1527 = ptrtoint i32* %arrayidx1067.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1527, i32 4276, i32 63, i32 9), !dbg !1839
  %1528 = load i32, i32* %arrayidx1067.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4234, i32 4276), !dbg !1839
  call void @printCDep(i32 610, i32 4276), !dbg !1839
  %1529 = ptrtoint i32* %u.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1529, i32 4279, i32 63, i32 9), !dbg !1839
  %1530 = load i32, i32* %u.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4221, i32 4279), !dbg !1839
  call void @printDDep(i32 4268, i32 4279), !dbg !1839
  call void @printCDep(i32 610, i32 4279), !dbg !1839
  %shr1068.i.i = lshr i32 %1530, 10, !dbg !1839
  %and1069.i.i = and i32 %shr1068.i.i, 63, !dbg !1839
  %idxprom1070.i.i = zext i32 %and1069.i.i to i64, !dbg !1839
  %arrayidx1071.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1070.i.i, !dbg !1839
  %1531 = ptrtoint i32* %arrayidx1071.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1531, i32 4287, i32 63, i32 9), !dbg !1839
  %1532 = load i32, i32* %arrayidx1071.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4234, i32 4287), !dbg !1839
  call void @printCDep(i32 610, i32 4287), !dbg !1839
  %xor1072.i.i = xor i32 %1528, %1532, !dbg !1839
  %1533 = ptrtoint i32* %u.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1533, i32 4291, i32 63, i32 9), !dbg !1839
  %1534 = load i32, i32* %u.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4221, i32 4291), !dbg !1839
  call void @printDDep(i32 4279, i32 4291), !dbg !1839
  call void @printCDep(i32 610, i32 4291), !dbg !1839
  %shr1073.i.i = lshr i32 %1534, 18, !dbg !1839
  %and1074.i.i = and i32 %shr1073.i.i, 63, !dbg !1839
  %idxprom1075.i.i = zext i32 %and1074.i.i to i64, !dbg !1839
  %arrayidx1076.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1075.i.i, !dbg !1839
  %1535 = ptrtoint i32* %arrayidx1076.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1535, i32 4299, i32 63, i32 9), !dbg !1839
  %1536 = load i32, i32* %arrayidx1076.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4234, i32 4299), !dbg !1839
  call void @printCDep(i32 610, i32 4299), !dbg !1839
  %xor1077.i.i = xor i32 %xor1072.i.i, %1536, !dbg !1839
  %1537 = ptrtoint i32* %u.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1537, i32 4303, i32 63, i32 9), !dbg !1839
  %1538 = load i32, i32* %u.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4221, i32 4303), !dbg !1839
  call void @printDDep(i32 4291, i32 4303), !dbg !1839
  call void @printCDep(i32 610, i32 4303), !dbg !1839
  %shr1078.i.i = lshr i32 %1538, 26, !dbg !1839
  %idxprom1080.i.i = zext i32 %shr1078.i.i to i64, !dbg !1839
  %arrayidx1081.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1080.i.i, !dbg !1839
  %1539 = ptrtoint i32* %arrayidx1081.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1539, i32 4310, i32 63, i32 9), !dbg !1839
  %1540 = load i32, i32* %arrayidx1081.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4234, i32 4310), !dbg !1839
  call void @printCDep(i32 610, i32 4310), !dbg !1839
  %xor1082.i.i = xor i32 %xor1077.i.i, %1540, !dbg !1839
  %1541 = ptrtoint i32* %t.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1541, i32 4314, i32 63, i32 9), !dbg !1839
  %1542 = load i32, i32* %t.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4264, i32 4314), !dbg !1839
  call void @printDDep(i32 4264, i32 4314), !dbg !1839
  call void @printCDep(i32 610, i32 4314), !dbg !1839
  %shr1083.i.i = lshr i32 %1542, 2, !dbg !1839
  %and1084.i.i = and i32 %shr1083.i.i, 63, !dbg !1839
  %idxprom1085.i.i = zext i32 %and1084.i.i to i64, !dbg !1839
  %arrayidx1086.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1085.i.i, !dbg !1839
  %1543 = ptrtoint i32* %arrayidx1086.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1543, i32 4322, i32 63, i32 9), !dbg !1839
  %1544 = load i32, i32* %arrayidx1086.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4234, i32 4322), !dbg !1839
  call void @printCDep(i32 610, i32 4322), !dbg !1839
  %xor1087.i.i = xor i32 %xor1082.i.i, %1544, !dbg !1839
  %1545 = ptrtoint i32* %t.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1545, i32 4326, i32 63, i32 9), !dbg !1839
  %1546 = load i32, i32* %t.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4264, i32 4326), !dbg !1839
  call void @printDDep(i32 4314, i32 4326), !dbg !1839
  call void @printCDep(i32 610, i32 4326), !dbg !1839
  %shr1088.i.i = lshr i32 %1546, 10, !dbg !1839
  %and1089.i.i = and i32 %shr1088.i.i, 63, !dbg !1839
  %idxprom1090.i.i = zext i32 %and1089.i.i to i64, !dbg !1839
  %arrayidx1091.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1090.i.i, !dbg !1839
  %1547 = ptrtoint i32* %arrayidx1091.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1547, i32 4334, i32 63, i32 9), !dbg !1839
  %1548 = load i32, i32* %arrayidx1091.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4234, i32 4334), !dbg !1839
  call void @printCDep(i32 610, i32 4334), !dbg !1839
  %xor1092.i.i = xor i32 %xor1087.i.i, %1548, !dbg !1839
  %1549 = ptrtoint i32* %t.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1549, i32 4338, i32 63, i32 9), !dbg !1839
  %1550 = load i32, i32* %t.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4264, i32 4338), !dbg !1839
  call void @printDDep(i32 4326, i32 4338), !dbg !1839
  call void @printCDep(i32 610, i32 4338), !dbg !1839
  %shr1093.i.i = lshr i32 %1550, 18, !dbg !1839
  %and1094.i.i = and i32 %shr1093.i.i, 63, !dbg !1839
  %idxprom1095.i.i = zext i32 %and1094.i.i to i64, !dbg !1839
  %arrayidx1096.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1095.i.i, !dbg !1839
  %1551 = ptrtoint i32* %arrayidx1096.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1551, i32 4346, i32 63, i32 9), !dbg !1839
  %1552 = load i32, i32* %arrayidx1096.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4234, i32 4346), !dbg !1839
  call void @printCDep(i32 610, i32 4346), !dbg !1839
  %xor1097.i.i = xor i32 %xor1092.i.i, %1552, !dbg !1839
  %1553 = ptrtoint i32* %t.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1553, i32 4350, i32 63, i32 9), !dbg !1839
  %1554 = load i32, i32* %t.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4264, i32 4350), !dbg !1839
  call void @printDDep(i32 4338, i32 4350), !dbg !1839
  call void @printCDep(i32 610, i32 4350), !dbg !1839
  %shr1098.i.i = lshr i32 %1554, 26, !dbg !1839
  %idxprom1100.i.i = zext i32 %shr1098.i.i to i64, !dbg !1839
  %arrayidx1101.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1100.i.i, !dbg !1839
  %1555 = ptrtoint i32* %arrayidx1101.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1555, i32 4357, i32 63, i32 9), !dbg !1839
  %1556 = load i32, i32* %arrayidx1101.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4234, i32 4357), !dbg !1839
  call void @printCDep(i32 610, i32 4357), !dbg !1839
  %xor1102.i.i = xor i32 %xor1097.i.i, %1556, !dbg !1839
  %1557 = ptrtoint i32* %l.i.i to i64, !dbg !1839
  call void @printLoadAddr(i64 %1557, i32 4361, i32 63, i32 9), !dbg !1839
  %1558 = load i32, i32* %l.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4040, i32 4361), !dbg !1839
  call void @printDDep(i32 4234, i32 4361), !dbg !1839
  call void @printCDep(i32 610, i32 4361), !dbg !1839
  %xor1103.i.i = xor i32 %1558, %xor1102.i.i, !dbg !1839
  %1559 = ptrtoint i32* %l.i.i to i64, !dbg !1839
  call void @printStoreAddr(i64 %1559, i32 4366, i32 63, i32 9), !dbg !1839
  store i32 %xor1103.i.i, i32* %l.i.i, align 4, !dbg !1839
  call void @printDDep(i32 4264, i32 4366), !dbg !1839
  call void @printDDep(i32 4361, i32 4366), !dbg !1839
  call void @printCDep(i32 610, i32 4366), !dbg !1839
  %1560 = ptrtoint i32* %l.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1560, i32 4370, i32 64, i32 9), !dbg !1840
  %1561 = load i32, i32* %l.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4366, i32 4370), !dbg !1840
  call void @printDDep(i32 4366, i32 4370), !dbg !1840
  call void @printCDep(i32 610, i32 4370), !dbg !1840
  %1562 = ptrtoint i32** %s.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1562, i32 4374, i32 64, i32 9), !dbg !1840
  %1563 = load i32*, i32** %s.i.i, align 8, !dbg !1840
  call void @printDDep(i32 607, i32 4374), !dbg !1840
  call void @printDDep(i32 4234, i32 4374), !dbg !1840
  call void @printCDep(i32 610, i32 4374), !dbg !1840
  %arrayidx1104.i.i = getelementptr inbounds i32, i32* %1563, i64 16, !dbg !1840
  %1564 = ptrtoint i32* %arrayidx1104.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1564, i32 4379, i32 64, i32 9), !dbg !1840
  %1565 = load i32, i32* %arrayidx1104.i.i, align 4, !dbg !1840
  call void @printDDep(i32 161, i32 4379), !dbg !1840
  call void @printDDep(i32 4374, i32 4379), !dbg !1840
  call void @printCDep(i32 610, i32 4379), !dbg !1840
  %xor1105.i.i = xor i32 %1561, %1565, !dbg !1840
  %1566 = ptrtoint i32* %u.i.i to i64, !dbg !1840
  call void @printStoreAddr(i64 %1566, i32 4384, i32 64, i32 9), !dbg !1840
  store i32 %xor1105.i.i, i32* %u.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4366, i32 4384), !dbg !1840
  call void @printDDep(i32 4379, i32 4384), !dbg !1840
  call void @printCDep(i32 610, i32 4384), !dbg !1840
  %1567 = ptrtoint i32* %l.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1567, i32 4388, i32 64, i32 9), !dbg !1840
  %1568 = load i32, i32* %l.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4366, i32 4388), !dbg !1840
  call void @printDDep(i32 4379, i32 4388), !dbg !1840
  call void @printCDep(i32 610, i32 4388), !dbg !1840
  %1569 = ptrtoint i32** %s.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1569, i32 4392, i32 64, i32 9), !dbg !1840
  %1570 = load i32*, i32** %s.i.i, align 8, !dbg !1840
  call void @printDDep(i32 607, i32 4392), !dbg !1840
  call void @printDDep(i32 4379, i32 4392), !dbg !1840
  call void @printCDep(i32 610, i32 4392), !dbg !1840
  %arrayidx1106.i.i = getelementptr inbounds i32, i32* %1570, i64 17, !dbg !1840
  %1571 = ptrtoint i32* %arrayidx1106.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1571, i32 4397, i32 64, i32 9), !dbg !1840
  %1572 = load i32, i32* %arrayidx1106.i.i, align 4, !dbg !1840
  call void @printDDep(i32 161, i32 4397), !dbg !1840
  call void @printDDep(i32 4392, i32 4397), !dbg !1840
  call void @printCDep(i32 610, i32 4397), !dbg !1840
  %xor1107.i.i = xor i32 %1568, %1572, !dbg !1840
  %1573 = ptrtoint i32* %t.i.i to i64, !dbg !1840
  call void @printStoreAddr(i64 %1573, i32 4402, i32 64, i32 9), !dbg !1840
  store i32 %xor1107.i.i, i32* %t.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4384, i32 4402), !dbg !1840
  call void @printDDep(i32 4397, i32 4402), !dbg !1840
  call void @printCDep(i32 610, i32 4402), !dbg !1840
  %1574 = ptrtoint i32* %t.i.i to i64, !dbg !1754
  call void @printLoadAddr(i64 %1574, i32 4406, i32 64, i32 9), !dbg !1754
  %1575 = load i32, i32* %t.i.i, align 4, !dbg !1754
  call void @printDDep(i32 4402, i32 4406), !dbg !1754
  call void @printDDep(i32 4402, i32 4406), !dbg !1754
  call void @printCDep(i32 610, i32 4406), !dbg !1754
  %1576 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1575) #5, !dbg !1754, !srcloc !234
  %1577 = ptrtoint i32* %ret1108.i.i to i64, !dbg !1754
  call void @printStoreAddr(i64 %1577, i32 4411, i32 64, i32 9), !dbg !1754
  store i32 %1576, i32* %ret1108.i.i, align 4, !dbg !1754
  call void @printDDep(i32 4402, i32 4411), !dbg !1754
  call void @printDDep(i32 161, i32 4411), !dbg !1754
  call void @printCDep(i32 610, i32 4411), !dbg !1754
  %1578 = ptrtoint i32* %ret1108.i.i to i64, !dbg !1754
  call void @printLoadAddr(i64 %1578, i32 4415, i32 64, i32 9), !dbg !1754
  %1579 = load i32, i32* %ret1108.i.i, align 4, !dbg !1754
  call void @printDDep(i32 4411, i32 4415), !dbg !1754
  call void @printDDep(i32 4411, i32 4415), !dbg !1754
  call void @printCDep(i32 610, i32 4415), !dbg !1754
  %1580 = ptrtoint i32* %tmp1109.i.i to i64, !dbg !1754
  call void @printStoreAddr(i64 %1580, i32 4419, i32 64, i32 9), !dbg !1754
  store i32 %1579, i32* %tmp1109.i.i, align 4, !dbg !1754
  call void @printDDep(i32 4411, i32 4419), !dbg !1754
  call void @printDDep(i32 161, i32 4419), !dbg !1754
  call void @printCDep(i32 610, i32 4419), !dbg !1754
  %1581 = ptrtoint i32* %tmp1109.i.i to i64, !dbg !1754
  call void @printLoadAddr(i64 %1581, i32 4423, i32 64, i32 9), !dbg !1754
  %1582 = load i32, i32* %tmp1109.i.i, align 4, !dbg !1754
  call void @printDDep(i32 4419, i32 4423), !dbg !1754
  call void @printDDep(i32 4419, i32 4423), !dbg !1754
  call void @printCDep(i32 610, i32 4423), !dbg !1754
  %1583 = ptrtoint i32* %t.i.i to i64, !dbg !1840
  call void @printStoreAddr(i64 %1583, i32 4427, i32 64, i32 9), !dbg !1840
  store i32 %1582, i32* %t.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4419, i32 4427), !dbg !1840
  call void @printDDep(i32 4406, i32 4427), !dbg !1840
  call void @printCDep(i32 610, i32 4427), !dbg !1840
  %1584 = ptrtoint i32* %u.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1584, i32 4431, i32 64, i32 9), !dbg !1840
  %1585 = load i32, i32* %u.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4384, i32 4431), !dbg !1840
  call void @printDDep(i32 4397, i32 4431), !dbg !1840
  call void @printCDep(i32 610, i32 4431), !dbg !1840
  %shr1110.i.i = lshr i32 %1585, 2, !dbg !1840
  %and1111.i.i = and i32 %shr1110.i.i, 63, !dbg !1840
  %idxprom1112.i.i = zext i32 %and1111.i.i to i64, !dbg !1840
  %arrayidx1113.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1112.i.i, !dbg !1840
  %1586 = ptrtoint i32* %arrayidx1113.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1586, i32 4439, i32 64, i32 9), !dbg !1840
  %1587 = load i32, i32* %arrayidx1113.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4397, i32 4439), !dbg !1840
  call void @printCDep(i32 610, i32 4439), !dbg !1840
  %1588 = ptrtoint i32* %u.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1588, i32 4442, i32 64, i32 9), !dbg !1840
  %1589 = load i32, i32* %u.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4384, i32 4442), !dbg !1840
  call void @printDDep(i32 4431, i32 4442), !dbg !1840
  call void @printCDep(i32 610, i32 4442), !dbg !1840
  %shr1114.i.i = lshr i32 %1589, 10, !dbg !1840
  %and1115.i.i = and i32 %shr1114.i.i, 63, !dbg !1840
  %idxprom1116.i.i = zext i32 %and1115.i.i to i64, !dbg !1840
  %arrayidx1117.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1116.i.i, !dbg !1840
  %1590 = ptrtoint i32* %arrayidx1117.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1590, i32 4450, i32 64, i32 9), !dbg !1840
  %1591 = load i32, i32* %arrayidx1117.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4397, i32 4450), !dbg !1840
  call void @printCDep(i32 610, i32 4450), !dbg !1840
  %xor1118.i.i = xor i32 %1587, %1591, !dbg !1840
  %1592 = ptrtoint i32* %u.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1592, i32 4454, i32 64, i32 9), !dbg !1840
  %1593 = load i32, i32* %u.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4384, i32 4454), !dbg !1840
  call void @printDDep(i32 4442, i32 4454), !dbg !1840
  call void @printCDep(i32 610, i32 4454), !dbg !1840
  %shr1119.i.i = lshr i32 %1593, 18, !dbg !1840
  %and1120.i.i = and i32 %shr1119.i.i, 63, !dbg !1840
  %idxprom1121.i.i = zext i32 %and1120.i.i to i64, !dbg !1840
  %arrayidx1122.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1121.i.i, !dbg !1840
  %1594 = ptrtoint i32* %arrayidx1122.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1594, i32 4462, i32 64, i32 9), !dbg !1840
  %1595 = load i32, i32* %arrayidx1122.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4397, i32 4462), !dbg !1840
  call void @printCDep(i32 610, i32 4462), !dbg !1840
  %xor1123.i.i = xor i32 %xor1118.i.i, %1595, !dbg !1840
  %1596 = ptrtoint i32* %u.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1596, i32 4466, i32 64, i32 9), !dbg !1840
  %1597 = load i32, i32* %u.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4384, i32 4466), !dbg !1840
  call void @printDDep(i32 4454, i32 4466), !dbg !1840
  call void @printCDep(i32 610, i32 4466), !dbg !1840
  %shr1124.i.i = lshr i32 %1597, 26, !dbg !1840
  %idxprom1126.i.i = zext i32 %shr1124.i.i to i64, !dbg !1840
  %arrayidx1127.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1126.i.i, !dbg !1840
  %1598 = ptrtoint i32* %arrayidx1127.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1598, i32 4473, i32 64, i32 9), !dbg !1840
  %1599 = load i32, i32* %arrayidx1127.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4397, i32 4473), !dbg !1840
  call void @printCDep(i32 610, i32 4473), !dbg !1840
  %xor1128.i.i = xor i32 %xor1123.i.i, %1599, !dbg !1840
  %1600 = ptrtoint i32* %t.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1600, i32 4477, i32 64, i32 9), !dbg !1840
  %1601 = load i32, i32* %t.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4427, i32 4477), !dbg !1840
  call void @printDDep(i32 4427, i32 4477), !dbg !1840
  call void @printCDep(i32 610, i32 4477), !dbg !1840
  %shr1129.i.i = lshr i32 %1601, 2, !dbg !1840
  %and1130.i.i = and i32 %shr1129.i.i, 63, !dbg !1840
  %idxprom1131.i.i = zext i32 %and1130.i.i to i64, !dbg !1840
  %arrayidx1132.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1131.i.i, !dbg !1840
  %1602 = ptrtoint i32* %arrayidx1132.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1602, i32 4485, i32 64, i32 9), !dbg !1840
  %1603 = load i32, i32* %arrayidx1132.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4397, i32 4485), !dbg !1840
  call void @printCDep(i32 610, i32 4485), !dbg !1840
  %xor1133.i.i = xor i32 %xor1128.i.i, %1603, !dbg !1840
  %1604 = ptrtoint i32* %t.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1604, i32 4489, i32 64, i32 9), !dbg !1840
  %1605 = load i32, i32* %t.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4427, i32 4489), !dbg !1840
  call void @printDDep(i32 4477, i32 4489), !dbg !1840
  call void @printCDep(i32 610, i32 4489), !dbg !1840
  %shr1134.i.i = lshr i32 %1605, 10, !dbg !1840
  %and1135.i.i = and i32 %shr1134.i.i, 63, !dbg !1840
  %idxprom1136.i.i = zext i32 %and1135.i.i to i64, !dbg !1840
  %arrayidx1137.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1136.i.i, !dbg !1840
  %1606 = ptrtoint i32* %arrayidx1137.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1606, i32 4497, i32 64, i32 9), !dbg !1840
  %1607 = load i32, i32* %arrayidx1137.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4397, i32 4497), !dbg !1840
  call void @printCDep(i32 610, i32 4497), !dbg !1840
  %xor1138.i.i = xor i32 %xor1133.i.i, %1607, !dbg !1840
  %1608 = ptrtoint i32* %t.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1608, i32 4501, i32 64, i32 9), !dbg !1840
  %1609 = load i32, i32* %t.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4427, i32 4501), !dbg !1840
  call void @printDDep(i32 4489, i32 4501), !dbg !1840
  call void @printCDep(i32 610, i32 4501), !dbg !1840
  %shr1139.i.i = lshr i32 %1609, 18, !dbg !1840
  %and1140.i.i = and i32 %shr1139.i.i, 63, !dbg !1840
  %idxprom1141.i.i = zext i32 %and1140.i.i to i64, !dbg !1840
  %arrayidx1142.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1141.i.i, !dbg !1840
  %1610 = ptrtoint i32* %arrayidx1142.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1610, i32 4509, i32 64, i32 9), !dbg !1840
  %1611 = load i32, i32* %arrayidx1142.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4397, i32 4509), !dbg !1840
  call void @printCDep(i32 610, i32 4509), !dbg !1840
  %xor1143.i.i = xor i32 %xor1138.i.i, %1611, !dbg !1840
  %1612 = ptrtoint i32* %t.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1612, i32 4513, i32 64, i32 9), !dbg !1840
  %1613 = load i32, i32* %t.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4427, i32 4513), !dbg !1840
  call void @printDDep(i32 4501, i32 4513), !dbg !1840
  call void @printCDep(i32 610, i32 4513), !dbg !1840
  %shr1144.i.i = lshr i32 %1613, 26, !dbg !1840
  %idxprom1146.i.i = zext i32 %shr1144.i.i to i64, !dbg !1840
  %arrayidx1147.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1146.i.i, !dbg !1840
  %1614 = ptrtoint i32* %arrayidx1147.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1614, i32 4520, i32 64, i32 9), !dbg !1840
  %1615 = load i32, i32* %arrayidx1147.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4397, i32 4520), !dbg !1840
  call void @printCDep(i32 610, i32 4520), !dbg !1840
  %xor1148.i.i = xor i32 %xor1143.i.i, %1615, !dbg !1840
  %1616 = ptrtoint i32* %r.i.i to i64, !dbg !1840
  call void @printLoadAddr(i64 %1616, i32 4524, i32 64, i32 9), !dbg !1840
  %1617 = load i32, i32* %r.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4203, i32 4524), !dbg !1840
  call void @printDDep(i32 4397, i32 4524), !dbg !1840
  call void @printCDep(i32 610, i32 4524), !dbg !1840
  %xor1149.i.i = xor i32 %1617, %xor1148.i.i, !dbg !1840
  %1618 = ptrtoint i32* %r.i.i to i64, !dbg !1840
  call void @printStoreAddr(i64 %1618, i32 4529, i32 64, i32 9), !dbg !1840
  store i32 %xor1149.i.i, i32* %r.i.i, align 4, !dbg !1840
  call void @printDDep(i32 4427, i32 4529), !dbg !1840
  call void @printDDep(i32 4524, i32 4529), !dbg !1840
  call void @printCDep(i32 610, i32 4529), !dbg !1840
  %1619 = ptrtoint i32* %r.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1619, i32 4533, i32 65, i32 9), !dbg !1841
  %1620 = load i32, i32* %r.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4529, i32 4533), !dbg !1841
  call void @printDDep(i32 4529, i32 4533), !dbg !1841
  call void @printCDep(i32 610, i32 4533), !dbg !1841
  %1621 = ptrtoint i32** %s.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1621, i32 4537, i32 65, i32 9), !dbg !1841
  %1622 = load i32*, i32** %s.i.i, align 8, !dbg !1841
  call void @printDDep(i32 607, i32 4537), !dbg !1841
  call void @printDDep(i32 4397, i32 4537), !dbg !1841
  call void @printCDep(i32 610, i32 4537), !dbg !1841
  %arrayidx1150.i.i = getelementptr inbounds i32, i32* %1622, i64 14, !dbg !1841
  %1623 = ptrtoint i32* %arrayidx1150.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1623, i32 4542, i32 65, i32 9), !dbg !1841
  %1624 = load i32, i32* %arrayidx1150.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4529, i32 4542), !dbg !1841
  call void @printDDep(i32 4537, i32 4542), !dbg !1841
  call void @printCDep(i32 610, i32 4542), !dbg !1841
  %xor1151.i.i = xor i32 %1620, %1624, !dbg !1841
  %1625 = ptrtoint i32* %u.i.i to i64, !dbg !1841
  call void @printStoreAddr(i64 %1625, i32 4547, i32 65, i32 9), !dbg !1841
  store i32 %xor1151.i.i, i32* %u.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4529, i32 4547), !dbg !1841
  call void @printDDep(i32 4542, i32 4547), !dbg !1841
  call void @printCDep(i32 610, i32 4547), !dbg !1841
  %1626 = ptrtoint i32* %r.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1626, i32 4551, i32 65, i32 9), !dbg !1841
  %1627 = load i32, i32* %r.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4529, i32 4551), !dbg !1841
  call void @printDDep(i32 4542, i32 4551), !dbg !1841
  call void @printCDep(i32 610, i32 4551), !dbg !1841
  %1628 = ptrtoint i32** %s.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1628, i32 4555, i32 65, i32 9), !dbg !1841
  %1629 = load i32*, i32** %s.i.i, align 8, !dbg !1841
  call void @printDDep(i32 607, i32 4555), !dbg !1841
  call void @printDDep(i32 4542, i32 4555), !dbg !1841
  call void @printCDep(i32 610, i32 4555), !dbg !1841
  %arrayidx1152.i.i = getelementptr inbounds i32, i32* %1629, i64 15, !dbg !1841
  %1630 = ptrtoint i32* %arrayidx1152.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1630, i32 4560, i32 65, i32 9), !dbg !1841
  %1631 = load i32, i32* %arrayidx1152.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4547, i32 4560), !dbg !1841
  call void @printDDep(i32 4555, i32 4560), !dbg !1841
  call void @printCDep(i32 610, i32 4560), !dbg !1841
  %xor1153.i.i = xor i32 %1627, %1631, !dbg !1841
  %1632 = ptrtoint i32* %t.i.i to i64, !dbg !1841
  call void @printStoreAddr(i64 %1632, i32 4565, i32 65, i32 9), !dbg !1841
  store i32 %xor1153.i.i, i32* %t.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4547, i32 4565), !dbg !1841
  call void @printDDep(i32 4560, i32 4565), !dbg !1841
  call void @printCDep(i32 610, i32 4565), !dbg !1841
  %1633 = ptrtoint i32* %t.i.i to i64, !dbg !1755
  call void @printLoadAddr(i64 %1633, i32 4569, i32 65, i32 9), !dbg !1755
  %1634 = load i32, i32* %t.i.i, align 4, !dbg !1755
  call void @printDDep(i32 4565, i32 4569), !dbg !1755
  call void @printDDep(i32 4565, i32 4569), !dbg !1755
  call void @printCDep(i32 610, i32 4569), !dbg !1755
  %1635 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1634) #5, !dbg !1755, !srcloc !240
  %1636 = ptrtoint i32* %ret1154.i.i to i64, !dbg !1755
  call void @printStoreAddr(i64 %1636, i32 4574, i32 65, i32 9), !dbg !1755
  store i32 %1635, i32* %ret1154.i.i, align 4, !dbg !1755
  call void @printDDep(i32 4565, i32 4574), !dbg !1755
  call void @printDDep(i32 161, i32 4574), !dbg !1755
  call void @printCDep(i32 610, i32 4574), !dbg !1755
  %1637 = ptrtoint i32* %ret1154.i.i to i64, !dbg !1755
  call void @printLoadAddr(i64 %1637, i32 4578, i32 65, i32 9), !dbg !1755
  %1638 = load i32, i32* %ret1154.i.i, align 4, !dbg !1755
  call void @printDDep(i32 4574, i32 4578), !dbg !1755
  call void @printDDep(i32 4574, i32 4578), !dbg !1755
  call void @printCDep(i32 610, i32 4578), !dbg !1755
  %1639 = ptrtoint i32* %tmp1155.i.i to i64, !dbg !1755
  call void @printStoreAddr(i64 %1639, i32 4582, i32 65, i32 9), !dbg !1755
  store i32 %1638, i32* %tmp1155.i.i, align 4, !dbg !1755
  call void @printDDep(i32 4574, i32 4582), !dbg !1755
  call void @printDDep(i32 161, i32 4582), !dbg !1755
  call void @printCDep(i32 610, i32 4582), !dbg !1755
  %1640 = ptrtoint i32* %tmp1155.i.i to i64, !dbg !1755
  call void @printLoadAddr(i64 %1640, i32 4586, i32 65, i32 9), !dbg !1755
  %1641 = load i32, i32* %tmp1155.i.i, align 4, !dbg !1755
  call void @printDDep(i32 4582, i32 4586), !dbg !1755
  call void @printDDep(i32 4582, i32 4586), !dbg !1755
  call void @printCDep(i32 610, i32 4586), !dbg !1755
  %1642 = ptrtoint i32* %t.i.i to i64, !dbg !1841
  call void @printStoreAddr(i64 %1642, i32 4590, i32 65, i32 9), !dbg !1841
  store i32 %1641, i32* %t.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4582, i32 4590), !dbg !1841
  call void @printDDep(i32 4569, i32 4590), !dbg !1841
  call void @printCDep(i32 610, i32 4590), !dbg !1841
  %1643 = ptrtoint i32* %u.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1643, i32 4594, i32 65, i32 9), !dbg !1841
  %1644 = load i32, i32* %u.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4547, i32 4594), !dbg !1841
  call void @printDDep(i32 4560, i32 4594), !dbg !1841
  call void @printCDep(i32 610, i32 4594), !dbg !1841
  %shr1156.i.i = lshr i32 %1644, 2, !dbg !1841
  %and1157.i.i = and i32 %shr1156.i.i, 63, !dbg !1841
  %idxprom1158.i.i = zext i32 %and1157.i.i to i64, !dbg !1841
  %arrayidx1159.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1158.i.i, !dbg !1841
  %1645 = ptrtoint i32* %arrayidx1159.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1645, i32 4602, i32 65, i32 9), !dbg !1841
  %1646 = load i32, i32* %arrayidx1159.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4560, i32 4602), !dbg !1841
  call void @printCDep(i32 610, i32 4602), !dbg !1841
  %1647 = ptrtoint i32* %u.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1647, i32 4605, i32 65, i32 9), !dbg !1841
  %1648 = load i32, i32* %u.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4547, i32 4605), !dbg !1841
  call void @printDDep(i32 4594, i32 4605), !dbg !1841
  call void @printCDep(i32 610, i32 4605), !dbg !1841
  %shr1160.i.i = lshr i32 %1648, 10, !dbg !1841
  %and1161.i.i = and i32 %shr1160.i.i, 63, !dbg !1841
  %idxprom1162.i.i = zext i32 %and1161.i.i to i64, !dbg !1841
  %arrayidx1163.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1162.i.i, !dbg !1841
  %1649 = ptrtoint i32* %arrayidx1163.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1649, i32 4613, i32 65, i32 9), !dbg !1841
  %1650 = load i32, i32* %arrayidx1163.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4560, i32 4613), !dbg !1841
  call void @printCDep(i32 610, i32 4613), !dbg !1841
  %xor1164.i.i = xor i32 %1646, %1650, !dbg !1841
  %1651 = ptrtoint i32* %u.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1651, i32 4617, i32 65, i32 9), !dbg !1841
  %1652 = load i32, i32* %u.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4547, i32 4617), !dbg !1841
  call void @printDDep(i32 4605, i32 4617), !dbg !1841
  call void @printCDep(i32 610, i32 4617), !dbg !1841
  %shr1165.i.i = lshr i32 %1652, 18, !dbg !1841
  %and1166.i.i = and i32 %shr1165.i.i, 63, !dbg !1841
  %idxprom1167.i.i = zext i32 %and1166.i.i to i64, !dbg !1841
  %arrayidx1168.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1167.i.i, !dbg !1841
  %1653 = ptrtoint i32* %arrayidx1168.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1653, i32 4625, i32 65, i32 9), !dbg !1841
  %1654 = load i32, i32* %arrayidx1168.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4560, i32 4625), !dbg !1841
  call void @printCDep(i32 610, i32 4625), !dbg !1841
  %xor1169.i.i = xor i32 %xor1164.i.i, %1654, !dbg !1841
  %1655 = ptrtoint i32* %u.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1655, i32 4629, i32 65, i32 9), !dbg !1841
  %1656 = load i32, i32* %u.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4547, i32 4629), !dbg !1841
  call void @printDDep(i32 4617, i32 4629), !dbg !1841
  call void @printCDep(i32 610, i32 4629), !dbg !1841
  %shr1170.i.i = lshr i32 %1656, 26, !dbg !1841
  %idxprom1172.i.i = zext i32 %shr1170.i.i to i64, !dbg !1841
  %arrayidx1173.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1172.i.i, !dbg !1841
  %1657 = ptrtoint i32* %arrayidx1173.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1657, i32 4636, i32 65, i32 9), !dbg !1841
  %1658 = load i32, i32* %arrayidx1173.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4560, i32 4636), !dbg !1841
  call void @printCDep(i32 610, i32 4636), !dbg !1841
  %xor1174.i.i = xor i32 %xor1169.i.i, %1658, !dbg !1841
  %1659 = ptrtoint i32* %t.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1659, i32 4640, i32 65, i32 9), !dbg !1841
  %1660 = load i32, i32* %t.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4590, i32 4640), !dbg !1841
  call void @printDDep(i32 4590, i32 4640), !dbg !1841
  call void @printCDep(i32 610, i32 4640), !dbg !1841
  %shr1175.i.i = lshr i32 %1660, 2, !dbg !1841
  %and1176.i.i = and i32 %shr1175.i.i, 63, !dbg !1841
  %idxprom1177.i.i = zext i32 %and1176.i.i to i64, !dbg !1841
  %arrayidx1178.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1177.i.i, !dbg !1841
  %1661 = ptrtoint i32* %arrayidx1178.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1661, i32 4648, i32 65, i32 9), !dbg !1841
  %1662 = load i32, i32* %arrayidx1178.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4560, i32 4648), !dbg !1841
  call void @printCDep(i32 610, i32 4648), !dbg !1841
  %xor1179.i.i = xor i32 %xor1174.i.i, %1662, !dbg !1841
  %1663 = ptrtoint i32* %t.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1663, i32 4652, i32 65, i32 9), !dbg !1841
  %1664 = load i32, i32* %t.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4590, i32 4652), !dbg !1841
  call void @printDDep(i32 4640, i32 4652), !dbg !1841
  call void @printCDep(i32 610, i32 4652), !dbg !1841
  %shr1180.i.i = lshr i32 %1664, 10, !dbg !1841
  %and1181.i.i = and i32 %shr1180.i.i, 63, !dbg !1841
  %idxprom1182.i.i = zext i32 %and1181.i.i to i64, !dbg !1841
  %arrayidx1183.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1182.i.i, !dbg !1841
  %1665 = ptrtoint i32* %arrayidx1183.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1665, i32 4660, i32 65, i32 9), !dbg !1841
  %1666 = load i32, i32* %arrayidx1183.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4560, i32 4660), !dbg !1841
  call void @printCDep(i32 610, i32 4660), !dbg !1841
  %xor1184.i.i = xor i32 %xor1179.i.i, %1666, !dbg !1841
  %1667 = ptrtoint i32* %t.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1667, i32 4664, i32 65, i32 9), !dbg !1841
  %1668 = load i32, i32* %t.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4590, i32 4664), !dbg !1841
  call void @printDDep(i32 4652, i32 4664), !dbg !1841
  call void @printCDep(i32 610, i32 4664), !dbg !1841
  %shr1185.i.i = lshr i32 %1668, 18, !dbg !1841
  %and1186.i.i = and i32 %shr1185.i.i, 63, !dbg !1841
  %idxprom1187.i.i = zext i32 %and1186.i.i to i64, !dbg !1841
  %arrayidx1188.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1187.i.i, !dbg !1841
  %1669 = ptrtoint i32* %arrayidx1188.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1669, i32 4672, i32 65, i32 9), !dbg !1841
  %1670 = load i32, i32* %arrayidx1188.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4560, i32 4672), !dbg !1841
  call void @printCDep(i32 610, i32 4672), !dbg !1841
  %xor1189.i.i = xor i32 %xor1184.i.i, %1670, !dbg !1841
  %1671 = ptrtoint i32* %t.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1671, i32 4676, i32 65, i32 9), !dbg !1841
  %1672 = load i32, i32* %t.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4590, i32 4676), !dbg !1841
  call void @printDDep(i32 4664, i32 4676), !dbg !1841
  call void @printCDep(i32 610, i32 4676), !dbg !1841
  %shr1190.i.i = lshr i32 %1672, 26, !dbg !1841
  %idxprom1192.i.i = zext i32 %shr1190.i.i to i64, !dbg !1841
  %arrayidx1193.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1192.i.i, !dbg !1841
  %1673 = ptrtoint i32* %arrayidx1193.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1673, i32 4683, i32 65, i32 9), !dbg !1841
  %1674 = load i32, i32* %arrayidx1193.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4560, i32 4683), !dbg !1841
  call void @printCDep(i32 610, i32 4683), !dbg !1841
  %xor1194.i.i = xor i32 %xor1189.i.i, %1674, !dbg !1841
  %1675 = ptrtoint i32* %l.i.i to i64, !dbg !1841
  call void @printLoadAddr(i64 %1675, i32 4687, i32 65, i32 9), !dbg !1841
  %1676 = load i32, i32* %l.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4366, i32 4687), !dbg !1841
  call void @printDDep(i32 4560, i32 4687), !dbg !1841
  call void @printCDep(i32 610, i32 4687), !dbg !1841
  %xor1195.i.i = xor i32 %1676, %xor1194.i.i, !dbg !1841
  %1677 = ptrtoint i32* %l.i.i to i64, !dbg !1841
  call void @printStoreAddr(i64 %1677, i32 4692, i32 65, i32 9), !dbg !1841
  store i32 %xor1195.i.i, i32* %l.i.i, align 4, !dbg !1841
  call void @printDDep(i32 4590, i32 4692), !dbg !1841
  call void @printDDep(i32 4687, i32 4692), !dbg !1841
  call void @printCDep(i32 610, i32 4692), !dbg !1841
  %1678 = ptrtoint i32* %l.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1678, i32 4696, i32 66, i32 9), !dbg !1842
  %1679 = load i32, i32* %l.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4692, i32 4696), !dbg !1842
  call void @printDDep(i32 4692, i32 4696), !dbg !1842
  call void @printCDep(i32 610, i32 4696), !dbg !1842
  %1680 = ptrtoint i32** %s.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1680, i32 4700, i32 66, i32 9), !dbg !1842
  %1681 = load i32*, i32** %s.i.i, align 8, !dbg !1842
  call void @printDDep(i32 607, i32 4700), !dbg !1842
  call void @printDDep(i32 4560, i32 4700), !dbg !1842
  call void @printCDep(i32 610, i32 4700), !dbg !1842
  %arrayidx1196.i.i = getelementptr inbounds i32, i32* %1681, i64 12, !dbg !1842
  %1682 = ptrtoint i32* %arrayidx1196.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1682, i32 4705, i32 66, i32 9), !dbg !1842
  %1683 = load i32, i32* %arrayidx1196.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4692, i32 4705), !dbg !1842
  call void @printDDep(i32 4700, i32 4705), !dbg !1842
  call void @printCDep(i32 610, i32 4705), !dbg !1842
  %xor1197.i.i = xor i32 %1679, %1683, !dbg !1842
  %1684 = ptrtoint i32* %u.i.i to i64, !dbg !1842
  call void @printStoreAddr(i64 %1684, i32 4710, i32 66, i32 9), !dbg !1842
  store i32 %xor1197.i.i, i32* %u.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4692, i32 4710), !dbg !1842
  call void @printDDep(i32 4705, i32 4710), !dbg !1842
  call void @printCDep(i32 610, i32 4710), !dbg !1842
  %1685 = ptrtoint i32* %l.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1685, i32 4714, i32 66, i32 9), !dbg !1842
  %1686 = load i32, i32* %l.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4692, i32 4714), !dbg !1842
  call void @printDDep(i32 4705, i32 4714), !dbg !1842
  call void @printCDep(i32 610, i32 4714), !dbg !1842
  %1687 = ptrtoint i32** %s.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1687, i32 4718, i32 66, i32 9), !dbg !1842
  %1688 = load i32*, i32** %s.i.i, align 8, !dbg !1842
  call void @printDDep(i32 607, i32 4718), !dbg !1842
  call void @printDDep(i32 4705, i32 4718), !dbg !1842
  call void @printCDep(i32 610, i32 4718), !dbg !1842
  %arrayidx1198.i.i = getelementptr inbounds i32, i32* %1688, i64 13, !dbg !1842
  %1689 = ptrtoint i32* %arrayidx1198.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1689, i32 4723, i32 66, i32 9), !dbg !1842
  %1690 = load i32, i32* %arrayidx1198.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4710, i32 4723), !dbg !1842
  call void @printDDep(i32 4718, i32 4723), !dbg !1842
  call void @printCDep(i32 610, i32 4723), !dbg !1842
  %xor1199.i.i = xor i32 %1686, %1690, !dbg !1842
  %1691 = ptrtoint i32* %t.i.i to i64, !dbg !1842
  call void @printStoreAddr(i64 %1691, i32 4728, i32 66, i32 9), !dbg !1842
  store i32 %xor1199.i.i, i32* %t.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4710, i32 4728), !dbg !1842
  call void @printDDep(i32 4723, i32 4728), !dbg !1842
  call void @printCDep(i32 610, i32 4728), !dbg !1842
  %1692 = ptrtoint i32* %t.i.i to i64, !dbg !1756
  call void @printLoadAddr(i64 %1692, i32 4732, i32 66, i32 9), !dbg !1756
  %1693 = load i32, i32* %t.i.i, align 4, !dbg !1756
  call void @printDDep(i32 4728, i32 4732), !dbg !1756
  call void @printDDep(i32 4728, i32 4732), !dbg !1756
  call void @printCDep(i32 610, i32 4732), !dbg !1756
  %1694 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1693) #5, !dbg !1756, !srcloc !246
  %1695 = ptrtoint i32* %ret1200.i.i to i64, !dbg !1756
  call void @printStoreAddr(i64 %1695, i32 4737, i32 66, i32 9), !dbg !1756
  store i32 %1694, i32* %ret1200.i.i, align 4, !dbg !1756
  call void @printDDep(i32 4728, i32 4737), !dbg !1756
  call void @printDDep(i32 161, i32 4737), !dbg !1756
  call void @printCDep(i32 610, i32 4737), !dbg !1756
  %1696 = ptrtoint i32* %ret1200.i.i to i64, !dbg !1756
  call void @printLoadAddr(i64 %1696, i32 4741, i32 66, i32 9), !dbg !1756
  %1697 = load i32, i32* %ret1200.i.i, align 4, !dbg !1756
  call void @printDDep(i32 4737, i32 4741), !dbg !1756
  call void @printDDep(i32 4737, i32 4741), !dbg !1756
  call void @printCDep(i32 610, i32 4741), !dbg !1756
  %1698 = ptrtoint i32* %tmp1201.i.i to i64, !dbg !1756
  call void @printStoreAddr(i64 %1698, i32 4745, i32 66, i32 9), !dbg !1756
  store i32 %1697, i32* %tmp1201.i.i, align 4, !dbg !1756
  call void @printDDep(i32 4737, i32 4745), !dbg !1756
  call void @printDDep(i32 161, i32 4745), !dbg !1756
  call void @printCDep(i32 610, i32 4745), !dbg !1756
  %1699 = ptrtoint i32* %tmp1201.i.i to i64, !dbg !1756
  call void @printLoadAddr(i64 %1699, i32 4749, i32 66, i32 9), !dbg !1756
  %1700 = load i32, i32* %tmp1201.i.i, align 4, !dbg !1756
  call void @printDDep(i32 4745, i32 4749), !dbg !1756
  call void @printDDep(i32 4745, i32 4749), !dbg !1756
  call void @printCDep(i32 610, i32 4749), !dbg !1756
  %1701 = ptrtoint i32* %t.i.i to i64, !dbg !1842
  call void @printStoreAddr(i64 %1701, i32 4753, i32 66, i32 9), !dbg !1842
  store i32 %1700, i32* %t.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4745, i32 4753), !dbg !1842
  call void @printDDep(i32 4732, i32 4753), !dbg !1842
  call void @printCDep(i32 610, i32 4753), !dbg !1842
  %1702 = ptrtoint i32* %u.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1702, i32 4757, i32 66, i32 9), !dbg !1842
  %1703 = load i32, i32* %u.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4710, i32 4757), !dbg !1842
  call void @printDDep(i32 4723, i32 4757), !dbg !1842
  call void @printCDep(i32 610, i32 4757), !dbg !1842
  %shr1202.i.i = lshr i32 %1703, 2, !dbg !1842
  %and1203.i.i = and i32 %shr1202.i.i, 63, !dbg !1842
  %idxprom1204.i.i = zext i32 %and1203.i.i to i64, !dbg !1842
  %arrayidx1205.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1204.i.i, !dbg !1842
  %1704 = ptrtoint i32* %arrayidx1205.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1704, i32 4765, i32 66, i32 9), !dbg !1842
  %1705 = load i32, i32* %arrayidx1205.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4723, i32 4765), !dbg !1842
  call void @printCDep(i32 610, i32 4765), !dbg !1842
  %1706 = ptrtoint i32* %u.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1706, i32 4768, i32 66, i32 9), !dbg !1842
  %1707 = load i32, i32* %u.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4710, i32 4768), !dbg !1842
  call void @printDDep(i32 4757, i32 4768), !dbg !1842
  call void @printCDep(i32 610, i32 4768), !dbg !1842
  %shr1206.i.i = lshr i32 %1707, 10, !dbg !1842
  %and1207.i.i = and i32 %shr1206.i.i, 63, !dbg !1842
  %idxprom1208.i.i = zext i32 %and1207.i.i to i64, !dbg !1842
  %arrayidx1209.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1208.i.i, !dbg !1842
  %1708 = ptrtoint i32* %arrayidx1209.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1708, i32 4776, i32 66, i32 9), !dbg !1842
  %1709 = load i32, i32* %arrayidx1209.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4723, i32 4776), !dbg !1842
  call void @printCDep(i32 610, i32 4776), !dbg !1842
  %xor1210.i.i = xor i32 %1705, %1709, !dbg !1842
  %1710 = ptrtoint i32* %u.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1710, i32 4780, i32 66, i32 9), !dbg !1842
  %1711 = load i32, i32* %u.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4710, i32 4780), !dbg !1842
  call void @printDDep(i32 4768, i32 4780), !dbg !1842
  call void @printCDep(i32 610, i32 4780), !dbg !1842
  %shr1211.i.i = lshr i32 %1711, 18, !dbg !1842
  %and1212.i.i = and i32 %shr1211.i.i, 63, !dbg !1842
  %idxprom1213.i.i = zext i32 %and1212.i.i to i64, !dbg !1842
  %arrayidx1214.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1213.i.i, !dbg !1842
  %1712 = ptrtoint i32* %arrayidx1214.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1712, i32 4788, i32 66, i32 9), !dbg !1842
  %1713 = load i32, i32* %arrayidx1214.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4723, i32 4788), !dbg !1842
  call void @printCDep(i32 610, i32 4788), !dbg !1842
  %xor1215.i.i = xor i32 %xor1210.i.i, %1713, !dbg !1842
  %1714 = ptrtoint i32* %u.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1714, i32 4792, i32 66, i32 9), !dbg !1842
  %1715 = load i32, i32* %u.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4710, i32 4792), !dbg !1842
  call void @printDDep(i32 4780, i32 4792), !dbg !1842
  call void @printCDep(i32 610, i32 4792), !dbg !1842
  %shr1216.i.i = lshr i32 %1715, 26, !dbg !1842
  %idxprom1218.i.i = zext i32 %shr1216.i.i to i64, !dbg !1842
  %arrayidx1219.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1218.i.i, !dbg !1842
  %1716 = ptrtoint i32* %arrayidx1219.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1716, i32 4799, i32 66, i32 9), !dbg !1842
  %1717 = load i32, i32* %arrayidx1219.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4723, i32 4799), !dbg !1842
  call void @printCDep(i32 610, i32 4799), !dbg !1842
  %xor1220.i.i = xor i32 %xor1215.i.i, %1717, !dbg !1842
  %1718 = ptrtoint i32* %t.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1718, i32 4803, i32 66, i32 9), !dbg !1842
  %1719 = load i32, i32* %t.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4753, i32 4803), !dbg !1842
  call void @printDDep(i32 4753, i32 4803), !dbg !1842
  call void @printCDep(i32 610, i32 4803), !dbg !1842
  %shr1221.i.i = lshr i32 %1719, 2, !dbg !1842
  %and1222.i.i = and i32 %shr1221.i.i, 63, !dbg !1842
  %idxprom1223.i.i = zext i32 %and1222.i.i to i64, !dbg !1842
  %arrayidx1224.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1223.i.i, !dbg !1842
  %1720 = ptrtoint i32* %arrayidx1224.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1720, i32 4811, i32 66, i32 9), !dbg !1842
  %1721 = load i32, i32* %arrayidx1224.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4723, i32 4811), !dbg !1842
  call void @printCDep(i32 610, i32 4811), !dbg !1842
  %xor1225.i.i = xor i32 %xor1220.i.i, %1721, !dbg !1842
  %1722 = ptrtoint i32* %t.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1722, i32 4815, i32 66, i32 9), !dbg !1842
  %1723 = load i32, i32* %t.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4753, i32 4815), !dbg !1842
  call void @printDDep(i32 4803, i32 4815), !dbg !1842
  call void @printCDep(i32 610, i32 4815), !dbg !1842
  %shr1226.i.i = lshr i32 %1723, 10, !dbg !1842
  %and1227.i.i = and i32 %shr1226.i.i, 63, !dbg !1842
  %idxprom1228.i.i = zext i32 %and1227.i.i to i64, !dbg !1842
  %arrayidx1229.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1228.i.i, !dbg !1842
  %1724 = ptrtoint i32* %arrayidx1229.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1724, i32 4823, i32 66, i32 9), !dbg !1842
  %1725 = load i32, i32* %arrayidx1229.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4723, i32 4823), !dbg !1842
  call void @printCDep(i32 610, i32 4823), !dbg !1842
  %xor1230.i.i = xor i32 %xor1225.i.i, %1725, !dbg !1842
  %1726 = ptrtoint i32* %t.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1726, i32 4827, i32 66, i32 9), !dbg !1842
  %1727 = load i32, i32* %t.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4753, i32 4827), !dbg !1842
  call void @printDDep(i32 4815, i32 4827), !dbg !1842
  call void @printCDep(i32 610, i32 4827), !dbg !1842
  %shr1231.i.i = lshr i32 %1727, 18, !dbg !1842
  %and1232.i.i = and i32 %shr1231.i.i, 63, !dbg !1842
  %idxprom1233.i.i = zext i32 %and1232.i.i to i64, !dbg !1842
  %arrayidx1234.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1233.i.i, !dbg !1842
  %1728 = ptrtoint i32* %arrayidx1234.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1728, i32 4835, i32 66, i32 9), !dbg !1842
  %1729 = load i32, i32* %arrayidx1234.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4723, i32 4835), !dbg !1842
  call void @printCDep(i32 610, i32 4835), !dbg !1842
  %xor1235.i.i = xor i32 %xor1230.i.i, %1729, !dbg !1842
  %1730 = ptrtoint i32* %t.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1730, i32 4839, i32 66, i32 9), !dbg !1842
  %1731 = load i32, i32* %t.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4753, i32 4839), !dbg !1842
  call void @printDDep(i32 4827, i32 4839), !dbg !1842
  call void @printCDep(i32 610, i32 4839), !dbg !1842
  %shr1236.i.i = lshr i32 %1731, 26, !dbg !1842
  %idxprom1238.i.i = zext i32 %shr1236.i.i to i64, !dbg !1842
  %arrayidx1239.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1238.i.i, !dbg !1842
  %1732 = ptrtoint i32* %arrayidx1239.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1732, i32 4846, i32 66, i32 9), !dbg !1842
  %1733 = load i32, i32* %arrayidx1239.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4723, i32 4846), !dbg !1842
  call void @printCDep(i32 610, i32 4846), !dbg !1842
  %xor1240.i.i = xor i32 %xor1235.i.i, %1733, !dbg !1842
  %1734 = ptrtoint i32* %r.i.i to i64, !dbg !1842
  call void @printLoadAddr(i64 %1734, i32 4850, i32 66, i32 9), !dbg !1842
  %1735 = load i32, i32* %r.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4529, i32 4850), !dbg !1842
  call void @printDDep(i32 4723, i32 4850), !dbg !1842
  call void @printCDep(i32 610, i32 4850), !dbg !1842
  %xor1241.i.i = xor i32 %1735, %xor1240.i.i, !dbg !1842
  %1736 = ptrtoint i32* %r.i.i to i64, !dbg !1842
  call void @printStoreAddr(i64 %1736, i32 4855, i32 66, i32 9), !dbg !1842
  store i32 %xor1241.i.i, i32* %r.i.i, align 4, !dbg !1842
  call void @printDDep(i32 4753, i32 4855), !dbg !1842
  call void @printDDep(i32 4850, i32 4855), !dbg !1842
  call void @printCDep(i32 610, i32 4855), !dbg !1842
  %1737 = ptrtoint i32* %r.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1737, i32 4859, i32 67, i32 9), !dbg !1843
  %1738 = load i32, i32* %r.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4855, i32 4859), !dbg !1843
  call void @printDDep(i32 4855, i32 4859), !dbg !1843
  call void @printCDep(i32 610, i32 4859), !dbg !1843
  %1739 = ptrtoint i32** %s.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1739, i32 4863, i32 67, i32 9), !dbg !1843
  %1740 = load i32*, i32** %s.i.i, align 8, !dbg !1843
  call void @printDDep(i32 607, i32 4863), !dbg !1843
  call void @printDDep(i32 4723, i32 4863), !dbg !1843
  call void @printCDep(i32 610, i32 4863), !dbg !1843
  %arrayidx1242.i.i = getelementptr inbounds i32, i32* %1740, i64 10, !dbg !1843
  %1741 = ptrtoint i32* %arrayidx1242.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1741, i32 4868, i32 67, i32 9), !dbg !1843
  %1742 = load i32, i32* %arrayidx1242.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4855, i32 4868), !dbg !1843
  call void @printDDep(i32 4863, i32 4868), !dbg !1843
  call void @printCDep(i32 610, i32 4868), !dbg !1843
  %xor1243.i.i = xor i32 %1738, %1742, !dbg !1843
  %1743 = ptrtoint i32* %u.i.i to i64, !dbg !1843
  call void @printStoreAddr(i64 %1743, i32 4873, i32 67, i32 9), !dbg !1843
  store i32 %xor1243.i.i, i32* %u.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4855, i32 4873), !dbg !1843
  call void @printDDep(i32 4868, i32 4873), !dbg !1843
  call void @printCDep(i32 610, i32 4873), !dbg !1843
  %1744 = ptrtoint i32* %r.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1744, i32 4877, i32 67, i32 9), !dbg !1843
  %1745 = load i32, i32* %r.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4855, i32 4877), !dbg !1843
  call void @printDDep(i32 4868, i32 4877), !dbg !1843
  call void @printCDep(i32 610, i32 4877), !dbg !1843
  %1746 = ptrtoint i32** %s.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1746, i32 4881, i32 67, i32 9), !dbg !1843
  %1747 = load i32*, i32** %s.i.i, align 8, !dbg !1843
  call void @printDDep(i32 607, i32 4881), !dbg !1843
  call void @printDDep(i32 4868, i32 4881), !dbg !1843
  call void @printCDep(i32 610, i32 4881), !dbg !1843
  %arrayidx1244.i.i = getelementptr inbounds i32, i32* %1747, i64 11, !dbg !1843
  %1748 = ptrtoint i32* %arrayidx1244.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1748, i32 4886, i32 67, i32 9), !dbg !1843
  %1749 = load i32, i32* %arrayidx1244.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4873, i32 4886), !dbg !1843
  call void @printDDep(i32 4881, i32 4886), !dbg !1843
  call void @printCDep(i32 610, i32 4886), !dbg !1843
  %xor1245.i.i = xor i32 %1745, %1749, !dbg !1843
  %1750 = ptrtoint i32* %t.i.i to i64, !dbg !1843
  call void @printStoreAddr(i64 %1750, i32 4891, i32 67, i32 9), !dbg !1843
  store i32 %xor1245.i.i, i32* %t.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4873, i32 4891), !dbg !1843
  call void @printDDep(i32 4886, i32 4891), !dbg !1843
  call void @printCDep(i32 610, i32 4891), !dbg !1843
  %1751 = ptrtoint i32* %t.i.i to i64, !dbg !1757
  call void @printLoadAddr(i64 %1751, i32 4895, i32 67, i32 9), !dbg !1757
  %1752 = load i32, i32* %t.i.i, align 4, !dbg !1757
  call void @printDDep(i32 4891, i32 4895), !dbg !1757
  call void @printDDep(i32 4891, i32 4895), !dbg !1757
  call void @printCDep(i32 610, i32 4895), !dbg !1757
  %1753 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1752) #5, !dbg !1757, !srcloc !252
  %1754 = ptrtoint i32* %ret1246.i.i to i64, !dbg !1757
  call void @printStoreAddr(i64 %1754, i32 4900, i32 67, i32 9), !dbg !1757
  store i32 %1753, i32* %ret1246.i.i, align 4, !dbg !1757
  call void @printDDep(i32 4891, i32 4900), !dbg !1757
  call void @printDDep(i32 161, i32 4900), !dbg !1757
  call void @printCDep(i32 610, i32 4900), !dbg !1757
  %1755 = ptrtoint i32* %ret1246.i.i to i64, !dbg !1757
  call void @printLoadAddr(i64 %1755, i32 4904, i32 67, i32 9), !dbg !1757
  %1756 = load i32, i32* %ret1246.i.i, align 4, !dbg !1757
  call void @printDDep(i32 4900, i32 4904), !dbg !1757
  call void @printDDep(i32 4900, i32 4904), !dbg !1757
  call void @printCDep(i32 610, i32 4904), !dbg !1757
  %1757 = ptrtoint i32* %tmp1247.i.i to i64, !dbg !1757
  call void @printStoreAddr(i64 %1757, i32 4908, i32 67, i32 9), !dbg !1757
  store i32 %1756, i32* %tmp1247.i.i, align 4, !dbg !1757
  call void @printDDep(i32 4900, i32 4908), !dbg !1757
  call void @printDDep(i32 161, i32 4908), !dbg !1757
  call void @printCDep(i32 610, i32 4908), !dbg !1757
  %1758 = ptrtoint i32* %tmp1247.i.i to i64, !dbg !1757
  call void @printLoadAddr(i64 %1758, i32 4912, i32 67, i32 9), !dbg !1757
  %1759 = load i32, i32* %tmp1247.i.i, align 4, !dbg !1757
  call void @printDDep(i32 4908, i32 4912), !dbg !1757
  call void @printDDep(i32 4908, i32 4912), !dbg !1757
  call void @printCDep(i32 610, i32 4912), !dbg !1757
  %1760 = ptrtoint i32* %t.i.i to i64, !dbg !1843
  call void @printStoreAddr(i64 %1760, i32 4916, i32 67, i32 9), !dbg !1843
  store i32 %1759, i32* %t.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4908, i32 4916), !dbg !1843
  call void @printDDep(i32 4895, i32 4916), !dbg !1843
  call void @printCDep(i32 610, i32 4916), !dbg !1843
  %1761 = ptrtoint i32* %u.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1761, i32 4920, i32 67, i32 9), !dbg !1843
  %1762 = load i32, i32* %u.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4873, i32 4920), !dbg !1843
  call void @printDDep(i32 4886, i32 4920), !dbg !1843
  call void @printCDep(i32 610, i32 4920), !dbg !1843
  %shr1248.i.i = lshr i32 %1762, 2, !dbg !1843
  %and1249.i.i = and i32 %shr1248.i.i, 63, !dbg !1843
  %idxprom1250.i.i = zext i32 %and1249.i.i to i64, !dbg !1843
  %arrayidx1251.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1250.i.i, !dbg !1843
  %1763 = ptrtoint i32* %arrayidx1251.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1763, i32 4928, i32 67, i32 9), !dbg !1843
  %1764 = load i32, i32* %arrayidx1251.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4886, i32 4928), !dbg !1843
  call void @printCDep(i32 610, i32 4928), !dbg !1843
  %1765 = ptrtoint i32* %u.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1765, i32 4931, i32 67, i32 9), !dbg !1843
  %1766 = load i32, i32* %u.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4873, i32 4931), !dbg !1843
  call void @printDDep(i32 4920, i32 4931), !dbg !1843
  call void @printCDep(i32 610, i32 4931), !dbg !1843
  %shr1252.i.i = lshr i32 %1766, 10, !dbg !1843
  %and1253.i.i = and i32 %shr1252.i.i, 63, !dbg !1843
  %idxprom1254.i.i = zext i32 %and1253.i.i to i64, !dbg !1843
  %arrayidx1255.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1254.i.i, !dbg !1843
  %1767 = ptrtoint i32* %arrayidx1255.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1767, i32 4939, i32 67, i32 9), !dbg !1843
  %1768 = load i32, i32* %arrayidx1255.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4886, i32 4939), !dbg !1843
  call void @printCDep(i32 610, i32 4939), !dbg !1843
  %xor1256.i.i = xor i32 %1764, %1768, !dbg !1843
  %1769 = ptrtoint i32* %u.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1769, i32 4943, i32 67, i32 9), !dbg !1843
  %1770 = load i32, i32* %u.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4873, i32 4943), !dbg !1843
  call void @printDDep(i32 4931, i32 4943), !dbg !1843
  call void @printCDep(i32 610, i32 4943), !dbg !1843
  %shr1257.i.i = lshr i32 %1770, 18, !dbg !1843
  %and1258.i.i = and i32 %shr1257.i.i, 63, !dbg !1843
  %idxprom1259.i.i = zext i32 %and1258.i.i to i64, !dbg !1843
  %arrayidx1260.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1259.i.i, !dbg !1843
  %1771 = ptrtoint i32* %arrayidx1260.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1771, i32 4951, i32 67, i32 9), !dbg !1843
  %1772 = load i32, i32* %arrayidx1260.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4886, i32 4951), !dbg !1843
  call void @printCDep(i32 610, i32 4951), !dbg !1843
  %xor1261.i.i = xor i32 %xor1256.i.i, %1772, !dbg !1843
  %1773 = ptrtoint i32* %u.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1773, i32 4955, i32 67, i32 9), !dbg !1843
  %1774 = load i32, i32* %u.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4873, i32 4955), !dbg !1843
  call void @printDDep(i32 4943, i32 4955), !dbg !1843
  call void @printCDep(i32 610, i32 4955), !dbg !1843
  %shr1262.i.i = lshr i32 %1774, 26, !dbg !1843
  %idxprom1264.i.i = zext i32 %shr1262.i.i to i64, !dbg !1843
  %arrayidx1265.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1264.i.i, !dbg !1843
  %1775 = ptrtoint i32* %arrayidx1265.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1775, i32 4962, i32 67, i32 9), !dbg !1843
  %1776 = load i32, i32* %arrayidx1265.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4886, i32 4962), !dbg !1843
  call void @printCDep(i32 610, i32 4962), !dbg !1843
  %xor1266.i.i = xor i32 %xor1261.i.i, %1776, !dbg !1843
  %1777 = ptrtoint i32* %t.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1777, i32 4966, i32 67, i32 9), !dbg !1843
  %1778 = load i32, i32* %t.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4916, i32 4966), !dbg !1843
  call void @printDDep(i32 4916, i32 4966), !dbg !1843
  call void @printCDep(i32 610, i32 4966), !dbg !1843
  %shr1267.i.i = lshr i32 %1778, 2, !dbg !1843
  %and1268.i.i = and i32 %shr1267.i.i, 63, !dbg !1843
  %idxprom1269.i.i = zext i32 %and1268.i.i to i64, !dbg !1843
  %arrayidx1270.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1269.i.i, !dbg !1843
  %1779 = ptrtoint i32* %arrayidx1270.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1779, i32 4974, i32 67, i32 9), !dbg !1843
  %1780 = load i32, i32* %arrayidx1270.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4886, i32 4974), !dbg !1843
  call void @printCDep(i32 610, i32 4974), !dbg !1843
  %xor1271.i.i = xor i32 %xor1266.i.i, %1780, !dbg !1843
  %1781 = ptrtoint i32* %t.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1781, i32 4978, i32 67, i32 9), !dbg !1843
  %1782 = load i32, i32* %t.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4916, i32 4978), !dbg !1843
  call void @printDDep(i32 4966, i32 4978), !dbg !1843
  call void @printCDep(i32 610, i32 4978), !dbg !1843
  %shr1272.i.i = lshr i32 %1782, 10, !dbg !1843
  %and1273.i.i = and i32 %shr1272.i.i, 63, !dbg !1843
  %idxprom1274.i.i = zext i32 %and1273.i.i to i64, !dbg !1843
  %arrayidx1275.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1274.i.i, !dbg !1843
  %1783 = ptrtoint i32* %arrayidx1275.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1783, i32 4986, i32 67, i32 9), !dbg !1843
  %1784 = load i32, i32* %arrayidx1275.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4886, i32 4986), !dbg !1843
  call void @printCDep(i32 610, i32 4986), !dbg !1843
  %xor1276.i.i = xor i32 %xor1271.i.i, %1784, !dbg !1843
  %1785 = ptrtoint i32* %t.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1785, i32 4990, i32 67, i32 9), !dbg !1843
  %1786 = load i32, i32* %t.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4916, i32 4990), !dbg !1843
  call void @printDDep(i32 4978, i32 4990), !dbg !1843
  call void @printCDep(i32 610, i32 4990), !dbg !1843
  %shr1277.i.i = lshr i32 %1786, 18, !dbg !1843
  %and1278.i.i = and i32 %shr1277.i.i, 63, !dbg !1843
  %idxprom1279.i.i = zext i32 %and1278.i.i to i64, !dbg !1843
  %arrayidx1280.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1279.i.i, !dbg !1843
  %1787 = ptrtoint i32* %arrayidx1280.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1787, i32 4998, i32 67, i32 9), !dbg !1843
  %1788 = load i32, i32* %arrayidx1280.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4886, i32 4998), !dbg !1843
  call void @printCDep(i32 610, i32 4998), !dbg !1843
  %xor1281.i.i = xor i32 %xor1276.i.i, %1788, !dbg !1843
  %1789 = ptrtoint i32* %t.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1789, i32 5002, i32 67, i32 9), !dbg !1843
  %1790 = load i32, i32* %t.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4916, i32 5002), !dbg !1843
  call void @printDDep(i32 4990, i32 5002), !dbg !1843
  call void @printCDep(i32 610, i32 5002), !dbg !1843
  %shr1282.i.i = lshr i32 %1790, 26, !dbg !1843
  %idxprom1284.i.i = zext i32 %shr1282.i.i to i64, !dbg !1843
  %arrayidx1285.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1284.i.i, !dbg !1843
  %1791 = ptrtoint i32* %arrayidx1285.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1791, i32 5009, i32 67, i32 9), !dbg !1843
  %1792 = load i32, i32* %arrayidx1285.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4886, i32 5009), !dbg !1843
  call void @printCDep(i32 610, i32 5009), !dbg !1843
  %xor1286.i.i = xor i32 %xor1281.i.i, %1792, !dbg !1843
  %1793 = ptrtoint i32* %l.i.i to i64, !dbg !1843
  call void @printLoadAddr(i64 %1793, i32 5013, i32 67, i32 9), !dbg !1843
  %1794 = load i32, i32* %l.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4692, i32 5013), !dbg !1843
  call void @printDDep(i32 4886, i32 5013), !dbg !1843
  call void @printCDep(i32 610, i32 5013), !dbg !1843
  %xor1287.i.i = xor i32 %1794, %xor1286.i.i, !dbg !1843
  %1795 = ptrtoint i32* %l.i.i to i64, !dbg !1843
  call void @printStoreAddr(i64 %1795, i32 5018, i32 67, i32 9), !dbg !1843
  store i32 %xor1287.i.i, i32* %l.i.i, align 4, !dbg !1843
  call void @printDDep(i32 4916, i32 5018), !dbg !1843
  call void @printDDep(i32 5013, i32 5018), !dbg !1843
  call void @printCDep(i32 610, i32 5018), !dbg !1843
  %1796 = ptrtoint i32* %l.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1796, i32 5022, i32 68, i32 9), !dbg !1844
  %1797 = load i32, i32* %l.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5018, i32 5022), !dbg !1844
  call void @printDDep(i32 5018, i32 5022), !dbg !1844
  call void @printCDep(i32 610, i32 5022), !dbg !1844
  %1798 = ptrtoint i32** %s.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1798, i32 5026, i32 68, i32 9), !dbg !1844
  %1799 = load i32*, i32** %s.i.i, align 8, !dbg !1844
  call void @printDDep(i32 607, i32 5026), !dbg !1844
  call void @printDDep(i32 4886, i32 5026), !dbg !1844
  call void @printCDep(i32 610, i32 5026), !dbg !1844
  %arrayidx1288.i.i = getelementptr inbounds i32, i32* %1799, i64 8, !dbg !1844
  %1800 = ptrtoint i32* %arrayidx1288.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1800, i32 5031, i32 68, i32 9), !dbg !1844
  %1801 = load i32, i32* %arrayidx1288.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5018, i32 5031), !dbg !1844
  call void @printDDep(i32 5026, i32 5031), !dbg !1844
  call void @printCDep(i32 610, i32 5031), !dbg !1844
  %xor1289.i.i = xor i32 %1797, %1801, !dbg !1844
  %1802 = ptrtoint i32* %u.i.i to i64, !dbg !1844
  call void @printStoreAddr(i64 %1802, i32 5036, i32 68, i32 9), !dbg !1844
  store i32 %xor1289.i.i, i32* %u.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5018, i32 5036), !dbg !1844
  call void @printDDep(i32 5031, i32 5036), !dbg !1844
  call void @printCDep(i32 610, i32 5036), !dbg !1844
  %1803 = ptrtoint i32* %l.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1803, i32 5040, i32 68, i32 9), !dbg !1844
  %1804 = load i32, i32* %l.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5018, i32 5040), !dbg !1844
  call void @printDDep(i32 5031, i32 5040), !dbg !1844
  call void @printCDep(i32 610, i32 5040), !dbg !1844
  %1805 = ptrtoint i32** %s.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1805, i32 5044, i32 68, i32 9), !dbg !1844
  %1806 = load i32*, i32** %s.i.i, align 8, !dbg !1844
  call void @printDDep(i32 607, i32 5044), !dbg !1844
  call void @printDDep(i32 5031, i32 5044), !dbg !1844
  call void @printCDep(i32 610, i32 5044), !dbg !1844
  %arrayidx1290.i.i = getelementptr inbounds i32, i32* %1806, i64 9, !dbg !1844
  %1807 = ptrtoint i32* %arrayidx1290.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1807, i32 5049, i32 68, i32 9), !dbg !1844
  %1808 = load i32, i32* %arrayidx1290.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5036, i32 5049), !dbg !1844
  call void @printDDep(i32 5044, i32 5049), !dbg !1844
  call void @printCDep(i32 610, i32 5049), !dbg !1844
  %xor1291.i.i = xor i32 %1804, %1808, !dbg !1844
  %1809 = ptrtoint i32* %t.i.i to i64, !dbg !1844
  call void @printStoreAddr(i64 %1809, i32 5054, i32 68, i32 9), !dbg !1844
  store i32 %xor1291.i.i, i32* %t.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5036, i32 5054), !dbg !1844
  call void @printDDep(i32 5049, i32 5054), !dbg !1844
  call void @printCDep(i32 610, i32 5054), !dbg !1844
  %1810 = ptrtoint i32* %t.i.i to i64, !dbg !1758
  call void @printLoadAddr(i64 %1810, i32 5058, i32 68, i32 9), !dbg !1758
  %1811 = load i32, i32* %t.i.i, align 4, !dbg !1758
  call void @printDDep(i32 5054, i32 5058), !dbg !1758
  call void @printDDep(i32 5054, i32 5058), !dbg !1758
  call void @printCDep(i32 610, i32 5058), !dbg !1758
  %1812 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1811) #5, !dbg !1758, !srcloc !258
  %1813 = ptrtoint i32* %ret1292.i.i to i64, !dbg !1758
  call void @printStoreAddr(i64 %1813, i32 5063, i32 68, i32 9), !dbg !1758
  store i32 %1812, i32* %ret1292.i.i, align 4, !dbg !1758
  call void @printDDep(i32 5054, i32 5063), !dbg !1758
  call void @printDDep(i32 161, i32 5063), !dbg !1758
  call void @printCDep(i32 610, i32 5063), !dbg !1758
  %1814 = ptrtoint i32* %ret1292.i.i to i64, !dbg !1758
  call void @printLoadAddr(i64 %1814, i32 5067, i32 68, i32 9), !dbg !1758
  %1815 = load i32, i32* %ret1292.i.i, align 4, !dbg !1758
  call void @printDDep(i32 5063, i32 5067), !dbg !1758
  call void @printDDep(i32 5063, i32 5067), !dbg !1758
  call void @printCDep(i32 610, i32 5067), !dbg !1758
  %1816 = ptrtoint i32* %tmp1293.i.i to i64, !dbg !1758
  call void @printStoreAddr(i64 %1816, i32 5071, i32 68, i32 9), !dbg !1758
  store i32 %1815, i32* %tmp1293.i.i, align 4, !dbg !1758
  call void @printDDep(i32 5063, i32 5071), !dbg !1758
  call void @printDDep(i32 161, i32 5071), !dbg !1758
  call void @printCDep(i32 610, i32 5071), !dbg !1758
  %1817 = ptrtoint i32* %tmp1293.i.i to i64, !dbg !1758
  call void @printLoadAddr(i64 %1817, i32 5075, i32 68, i32 9), !dbg !1758
  %1818 = load i32, i32* %tmp1293.i.i, align 4, !dbg !1758
  call void @printDDep(i32 5071, i32 5075), !dbg !1758
  call void @printDDep(i32 5071, i32 5075), !dbg !1758
  call void @printCDep(i32 610, i32 5075), !dbg !1758
  %1819 = ptrtoint i32* %t.i.i to i64, !dbg !1844
  call void @printStoreAddr(i64 %1819, i32 5079, i32 68, i32 9), !dbg !1844
  store i32 %1818, i32* %t.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5071, i32 5079), !dbg !1844
  call void @printDDep(i32 5058, i32 5079), !dbg !1844
  call void @printCDep(i32 610, i32 5079), !dbg !1844
  %1820 = ptrtoint i32* %u.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1820, i32 5083, i32 68, i32 9), !dbg !1844
  %1821 = load i32, i32* %u.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5036, i32 5083), !dbg !1844
  call void @printDDep(i32 5049, i32 5083), !dbg !1844
  call void @printCDep(i32 610, i32 5083), !dbg !1844
  %shr1294.i.i = lshr i32 %1821, 2, !dbg !1844
  %and1295.i.i = and i32 %shr1294.i.i, 63, !dbg !1844
  %idxprom1296.i.i = zext i32 %and1295.i.i to i64, !dbg !1844
  %arrayidx1297.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1296.i.i, !dbg !1844
  %1822 = ptrtoint i32* %arrayidx1297.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1822, i32 5091, i32 68, i32 9), !dbg !1844
  %1823 = load i32, i32* %arrayidx1297.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5049, i32 5091), !dbg !1844
  call void @printCDep(i32 610, i32 5091), !dbg !1844
  %1824 = ptrtoint i32* %u.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1824, i32 5094, i32 68, i32 9), !dbg !1844
  %1825 = load i32, i32* %u.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5036, i32 5094), !dbg !1844
  call void @printDDep(i32 5083, i32 5094), !dbg !1844
  call void @printCDep(i32 610, i32 5094), !dbg !1844
  %shr1298.i.i = lshr i32 %1825, 10, !dbg !1844
  %and1299.i.i = and i32 %shr1298.i.i, 63, !dbg !1844
  %idxprom1300.i.i = zext i32 %and1299.i.i to i64, !dbg !1844
  %arrayidx1301.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1300.i.i, !dbg !1844
  %1826 = ptrtoint i32* %arrayidx1301.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1826, i32 5102, i32 68, i32 9), !dbg !1844
  %1827 = load i32, i32* %arrayidx1301.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5049, i32 5102), !dbg !1844
  call void @printCDep(i32 610, i32 5102), !dbg !1844
  %xor1302.i.i = xor i32 %1823, %1827, !dbg !1844
  %1828 = ptrtoint i32* %u.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1828, i32 5106, i32 68, i32 9), !dbg !1844
  %1829 = load i32, i32* %u.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5036, i32 5106), !dbg !1844
  call void @printDDep(i32 5094, i32 5106), !dbg !1844
  call void @printCDep(i32 610, i32 5106), !dbg !1844
  %shr1303.i.i = lshr i32 %1829, 18, !dbg !1844
  %and1304.i.i = and i32 %shr1303.i.i, 63, !dbg !1844
  %idxprom1305.i.i = zext i32 %and1304.i.i to i64, !dbg !1844
  %arrayidx1306.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1305.i.i, !dbg !1844
  %1830 = ptrtoint i32* %arrayidx1306.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1830, i32 5114, i32 68, i32 9), !dbg !1844
  %1831 = load i32, i32* %arrayidx1306.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5049, i32 5114), !dbg !1844
  call void @printCDep(i32 610, i32 5114), !dbg !1844
  %xor1307.i.i = xor i32 %xor1302.i.i, %1831, !dbg !1844
  %1832 = ptrtoint i32* %u.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1832, i32 5118, i32 68, i32 9), !dbg !1844
  %1833 = load i32, i32* %u.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5036, i32 5118), !dbg !1844
  call void @printDDep(i32 5106, i32 5118), !dbg !1844
  call void @printCDep(i32 610, i32 5118), !dbg !1844
  %shr1308.i.i = lshr i32 %1833, 26, !dbg !1844
  %idxprom1310.i.i = zext i32 %shr1308.i.i to i64, !dbg !1844
  %arrayidx1311.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1310.i.i, !dbg !1844
  %1834 = ptrtoint i32* %arrayidx1311.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1834, i32 5125, i32 68, i32 9), !dbg !1844
  %1835 = load i32, i32* %arrayidx1311.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5049, i32 5125), !dbg !1844
  call void @printCDep(i32 610, i32 5125), !dbg !1844
  %xor1312.i.i = xor i32 %xor1307.i.i, %1835, !dbg !1844
  %1836 = ptrtoint i32* %t.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1836, i32 5129, i32 68, i32 9), !dbg !1844
  %1837 = load i32, i32* %t.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5079, i32 5129), !dbg !1844
  call void @printDDep(i32 5079, i32 5129), !dbg !1844
  call void @printCDep(i32 610, i32 5129), !dbg !1844
  %shr1313.i.i = lshr i32 %1837, 2, !dbg !1844
  %and1314.i.i = and i32 %shr1313.i.i, 63, !dbg !1844
  %idxprom1315.i.i = zext i32 %and1314.i.i to i64, !dbg !1844
  %arrayidx1316.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1315.i.i, !dbg !1844
  %1838 = ptrtoint i32* %arrayidx1316.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1838, i32 5137, i32 68, i32 9), !dbg !1844
  %1839 = load i32, i32* %arrayidx1316.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5049, i32 5137), !dbg !1844
  call void @printCDep(i32 610, i32 5137), !dbg !1844
  %xor1317.i.i = xor i32 %xor1312.i.i, %1839, !dbg !1844
  %1840 = ptrtoint i32* %t.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1840, i32 5141, i32 68, i32 9), !dbg !1844
  %1841 = load i32, i32* %t.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5079, i32 5141), !dbg !1844
  call void @printDDep(i32 5129, i32 5141), !dbg !1844
  call void @printCDep(i32 610, i32 5141), !dbg !1844
  %shr1318.i.i = lshr i32 %1841, 10, !dbg !1844
  %and1319.i.i = and i32 %shr1318.i.i, 63, !dbg !1844
  %idxprom1320.i.i = zext i32 %and1319.i.i to i64, !dbg !1844
  %arrayidx1321.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1320.i.i, !dbg !1844
  %1842 = ptrtoint i32* %arrayidx1321.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1842, i32 5149, i32 68, i32 9), !dbg !1844
  %1843 = load i32, i32* %arrayidx1321.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5049, i32 5149), !dbg !1844
  call void @printCDep(i32 610, i32 5149), !dbg !1844
  %xor1322.i.i = xor i32 %xor1317.i.i, %1843, !dbg !1844
  %1844 = ptrtoint i32* %t.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1844, i32 5153, i32 68, i32 9), !dbg !1844
  %1845 = load i32, i32* %t.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5079, i32 5153), !dbg !1844
  call void @printDDep(i32 5141, i32 5153), !dbg !1844
  call void @printCDep(i32 610, i32 5153), !dbg !1844
  %shr1323.i.i = lshr i32 %1845, 18, !dbg !1844
  %and1324.i.i = and i32 %shr1323.i.i, 63, !dbg !1844
  %idxprom1325.i.i = zext i32 %and1324.i.i to i64, !dbg !1844
  %arrayidx1326.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1325.i.i, !dbg !1844
  %1846 = ptrtoint i32* %arrayidx1326.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1846, i32 5161, i32 68, i32 9), !dbg !1844
  %1847 = load i32, i32* %arrayidx1326.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5049, i32 5161), !dbg !1844
  call void @printCDep(i32 610, i32 5161), !dbg !1844
  %xor1327.i.i = xor i32 %xor1322.i.i, %1847, !dbg !1844
  %1848 = ptrtoint i32* %t.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1848, i32 5165, i32 68, i32 9), !dbg !1844
  %1849 = load i32, i32* %t.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5079, i32 5165), !dbg !1844
  call void @printDDep(i32 5153, i32 5165), !dbg !1844
  call void @printCDep(i32 610, i32 5165), !dbg !1844
  %shr1328.i.i = lshr i32 %1849, 26, !dbg !1844
  %idxprom1330.i.i = zext i32 %shr1328.i.i to i64, !dbg !1844
  %arrayidx1331.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1330.i.i, !dbg !1844
  %1850 = ptrtoint i32* %arrayidx1331.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1850, i32 5172, i32 68, i32 9), !dbg !1844
  %1851 = load i32, i32* %arrayidx1331.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5049, i32 5172), !dbg !1844
  call void @printCDep(i32 610, i32 5172), !dbg !1844
  %xor1332.i.i = xor i32 %xor1327.i.i, %1851, !dbg !1844
  %1852 = ptrtoint i32* %r.i.i to i64, !dbg !1844
  call void @printLoadAddr(i64 %1852, i32 5176, i32 68, i32 9), !dbg !1844
  %1853 = load i32, i32* %r.i.i, align 4, !dbg !1844
  call void @printDDep(i32 4855, i32 5176), !dbg !1844
  call void @printDDep(i32 5049, i32 5176), !dbg !1844
  call void @printCDep(i32 610, i32 5176), !dbg !1844
  %xor1333.i.i = xor i32 %1853, %xor1332.i.i, !dbg !1844
  %1854 = ptrtoint i32* %r.i.i to i64, !dbg !1844
  call void @printStoreAddr(i64 %1854, i32 5181, i32 68, i32 9), !dbg !1844
  store i32 %xor1333.i.i, i32* %r.i.i, align 4, !dbg !1844
  call void @printDDep(i32 5079, i32 5181), !dbg !1844
  call void @printDDep(i32 5176, i32 5181), !dbg !1844
  call void @printCDep(i32 610, i32 5181), !dbg !1844
  %1855 = ptrtoint i32* %r.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1855, i32 5185, i32 69, i32 9), !dbg !1845
  %1856 = load i32, i32* %r.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5181, i32 5185), !dbg !1845
  call void @printDDep(i32 5181, i32 5185), !dbg !1845
  call void @printCDep(i32 610, i32 5185), !dbg !1845
  %1857 = ptrtoint i32** %s.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1857, i32 5189, i32 69, i32 9), !dbg !1845
  %1858 = load i32*, i32** %s.i.i, align 8, !dbg !1845
  call void @printDDep(i32 607, i32 5189), !dbg !1845
  call void @printDDep(i32 5049, i32 5189), !dbg !1845
  call void @printCDep(i32 610, i32 5189), !dbg !1845
  %arrayidx1334.i.i = getelementptr inbounds i32, i32* %1858, i64 6, !dbg !1845
  %1859 = ptrtoint i32* %arrayidx1334.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1859, i32 5194, i32 69, i32 9), !dbg !1845
  %1860 = load i32, i32* %arrayidx1334.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5181, i32 5194), !dbg !1845
  call void @printDDep(i32 5189, i32 5194), !dbg !1845
  call void @printCDep(i32 610, i32 5194), !dbg !1845
  %xor1335.i.i = xor i32 %1856, %1860, !dbg !1845
  %1861 = ptrtoint i32* %u.i.i to i64, !dbg !1845
  call void @printStoreAddr(i64 %1861, i32 5199, i32 69, i32 9), !dbg !1845
  store i32 %xor1335.i.i, i32* %u.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5181, i32 5199), !dbg !1845
  call void @printDDep(i32 5194, i32 5199), !dbg !1845
  call void @printCDep(i32 610, i32 5199), !dbg !1845
  %1862 = ptrtoint i32* %r.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1862, i32 5203, i32 69, i32 9), !dbg !1845
  %1863 = load i32, i32* %r.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5181, i32 5203), !dbg !1845
  call void @printDDep(i32 5194, i32 5203), !dbg !1845
  call void @printCDep(i32 610, i32 5203), !dbg !1845
  %1864 = ptrtoint i32** %s.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1864, i32 5207, i32 69, i32 9), !dbg !1845
  %1865 = load i32*, i32** %s.i.i, align 8, !dbg !1845
  call void @printDDep(i32 607, i32 5207), !dbg !1845
  call void @printDDep(i32 5194, i32 5207), !dbg !1845
  call void @printCDep(i32 610, i32 5207), !dbg !1845
  %arrayidx1336.i.i = getelementptr inbounds i32, i32* %1865, i64 7, !dbg !1845
  %1866 = ptrtoint i32* %arrayidx1336.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1866, i32 5212, i32 69, i32 9), !dbg !1845
  %1867 = load i32, i32* %arrayidx1336.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5199, i32 5212), !dbg !1845
  call void @printDDep(i32 5207, i32 5212), !dbg !1845
  call void @printCDep(i32 610, i32 5212), !dbg !1845
  %xor1337.i.i = xor i32 %1863, %1867, !dbg !1845
  %1868 = ptrtoint i32* %t.i.i to i64, !dbg !1845
  call void @printStoreAddr(i64 %1868, i32 5217, i32 69, i32 9), !dbg !1845
  store i32 %xor1337.i.i, i32* %t.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5199, i32 5217), !dbg !1845
  call void @printDDep(i32 5212, i32 5217), !dbg !1845
  call void @printCDep(i32 610, i32 5217), !dbg !1845
  %1869 = ptrtoint i32* %t.i.i to i64, !dbg !1759
  call void @printLoadAddr(i64 %1869, i32 5221, i32 69, i32 9), !dbg !1759
  %1870 = load i32, i32* %t.i.i, align 4, !dbg !1759
  call void @printDDep(i32 5217, i32 5221), !dbg !1759
  call void @printDDep(i32 5217, i32 5221), !dbg !1759
  call void @printCDep(i32 610, i32 5221), !dbg !1759
  %1871 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1870) #5, !dbg !1759, !srcloc !264
  %1872 = ptrtoint i32* %ret1338.i.i to i64, !dbg !1759
  call void @printStoreAddr(i64 %1872, i32 5226, i32 69, i32 9), !dbg !1759
  store i32 %1871, i32* %ret1338.i.i, align 4, !dbg !1759
  call void @printDDep(i32 5217, i32 5226), !dbg !1759
  call void @printDDep(i32 161, i32 5226), !dbg !1759
  call void @printCDep(i32 610, i32 5226), !dbg !1759
  %1873 = ptrtoint i32* %ret1338.i.i to i64, !dbg !1759
  call void @printLoadAddr(i64 %1873, i32 5230, i32 69, i32 9), !dbg !1759
  %1874 = load i32, i32* %ret1338.i.i, align 4, !dbg !1759
  call void @printDDep(i32 5226, i32 5230), !dbg !1759
  call void @printDDep(i32 5226, i32 5230), !dbg !1759
  call void @printCDep(i32 610, i32 5230), !dbg !1759
  %1875 = ptrtoint i32* %tmp1339.i.i to i64, !dbg !1759
  call void @printStoreAddr(i64 %1875, i32 5234, i32 69, i32 9), !dbg !1759
  store i32 %1874, i32* %tmp1339.i.i, align 4, !dbg !1759
  call void @printDDep(i32 5226, i32 5234), !dbg !1759
  call void @printDDep(i32 161, i32 5234), !dbg !1759
  call void @printCDep(i32 610, i32 5234), !dbg !1759
  %1876 = ptrtoint i32* %tmp1339.i.i to i64, !dbg !1759
  call void @printLoadAddr(i64 %1876, i32 5238, i32 69, i32 9), !dbg !1759
  %1877 = load i32, i32* %tmp1339.i.i, align 4, !dbg !1759
  call void @printDDep(i32 5234, i32 5238), !dbg !1759
  call void @printDDep(i32 5234, i32 5238), !dbg !1759
  call void @printCDep(i32 610, i32 5238), !dbg !1759
  %1878 = ptrtoint i32* %t.i.i to i64, !dbg !1845
  call void @printStoreAddr(i64 %1878, i32 5242, i32 69, i32 9), !dbg !1845
  store i32 %1877, i32* %t.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5234, i32 5242), !dbg !1845
  call void @printDDep(i32 5221, i32 5242), !dbg !1845
  call void @printCDep(i32 610, i32 5242), !dbg !1845
  %1879 = ptrtoint i32* %u.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1879, i32 5246, i32 69, i32 9), !dbg !1845
  %1880 = load i32, i32* %u.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5199, i32 5246), !dbg !1845
  call void @printDDep(i32 5212, i32 5246), !dbg !1845
  call void @printCDep(i32 610, i32 5246), !dbg !1845
  %shr1340.i.i = lshr i32 %1880, 2, !dbg !1845
  %and1341.i.i = and i32 %shr1340.i.i, 63, !dbg !1845
  %idxprom1342.i.i = zext i32 %and1341.i.i to i64, !dbg !1845
  %arrayidx1343.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1342.i.i, !dbg !1845
  %1881 = ptrtoint i32* %arrayidx1343.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1881, i32 5254, i32 69, i32 9), !dbg !1845
  %1882 = load i32, i32* %arrayidx1343.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5212, i32 5254), !dbg !1845
  call void @printCDep(i32 610, i32 5254), !dbg !1845
  %1883 = ptrtoint i32* %u.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1883, i32 5257, i32 69, i32 9), !dbg !1845
  %1884 = load i32, i32* %u.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5199, i32 5257), !dbg !1845
  call void @printDDep(i32 5246, i32 5257), !dbg !1845
  call void @printCDep(i32 610, i32 5257), !dbg !1845
  %shr1344.i.i = lshr i32 %1884, 10, !dbg !1845
  %and1345.i.i = and i32 %shr1344.i.i, 63, !dbg !1845
  %idxprom1346.i.i = zext i32 %and1345.i.i to i64, !dbg !1845
  %arrayidx1347.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1346.i.i, !dbg !1845
  %1885 = ptrtoint i32* %arrayidx1347.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1885, i32 5265, i32 69, i32 9), !dbg !1845
  %1886 = load i32, i32* %arrayidx1347.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5212, i32 5265), !dbg !1845
  call void @printCDep(i32 610, i32 5265), !dbg !1845
  %xor1348.i.i = xor i32 %1882, %1886, !dbg !1845
  %1887 = ptrtoint i32* %u.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1887, i32 5269, i32 69, i32 9), !dbg !1845
  %1888 = load i32, i32* %u.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5199, i32 5269), !dbg !1845
  call void @printDDep(i32 5257, i32 5269), !dbg !1845
  call void @printCDep(i32 610, i32 5269), !dbg !1845
  %shr1349.i.i = lshr i32 %1888, 18, !dbg !1845
  %and1350.i.i = and i32 %shr1349.i.i, 63, !dbg !1845
  %idxprom1351.i.i = zext i32 %and1350.i.i to i64, !dbg !1845
  %arrayidx1352.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1351.i.i, !dbg !1845
  %1889 = ptrtoint i32* %arrayidx1352.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1889, i32 5277, i32 69, i32 9), !dbg !1845
  %1890 = load i32, i32* %arrayidx1352.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5212, i32 5277), !dbg !1845
  call void @printCDep(i32 610, i32 5277), !dbg !1845
  %xor1353.i.i = xor i32 %xor1348.i.i, %1890, !dbg !1845
  %1891 = ptrtoint i32* %u.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1891, i32 5281, i32 69, i32 9), !dbg !1845
  %1892 = load i32, i32* %u.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5199, i32 5281), !dbg !1845
  call void @printDDep(i32 5269, i32 5281), !dbg !1845
  call void @printCDep(i32 610, i32 5281), !dbg !1845
  %shr1354.i.i = lshr i32 %1892, 26, !dbg !1845
  %idxprom1356.i.i = zext i32 %shr1354.i.i to i64, !dbg !1845
  %arrayidx1357.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1356.i.i, !dbg !1845
  %1893 = ptrtoint i32* %arrayidx1357.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1893, i32 5288, i32 69, i32 9), !dbg !1845
  %1894 = load i32, i32* %arrayidx1357.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5212, i32 5288), !dbg !1845
  call void @printCDep(i32 610, i32 5288), !dbg !1845
  %xor1358.i.i = xor i32 %xor1353.i.i, %1894, !dbg !1845
  %1895 = ptrtoint i32* %t.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1895, i32 5292, i32 69, i32 9), !dbg !1845
  %1896 = load i32, i32* %t.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5242, i32 5292), !dbg !1845
  call void @printDDep(i32 5242, i32 5292), !dbg !1845
  call void @printCDep(i32 610, i32 5292), !dbg !1845
  %shr1359.i.i = lshr i32 %1896, 2, !dbg !1845
  %and1360.i.i = and i32 %shr1359.i.i, 63, !dbg !1845
  %idxprom1361.i.i = zext i32 %and1360.i.i to i64, !dbg !1845
  %arrayidx1362.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1361.i.i, !dbg !1845
  %1897 = ptrtoint i32* %arrayidx1362.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1897, i32 5300, i32 69, i32 9), !dbg !1845
  %1898 = load i32, i32* %arrayidx1362.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5212, i32 5300), !dbg !1845
  call void @printCDep(i32 610, i32 5300), !dbg !1845
  %xor1363.i.i = xor i32 %xor1358.i.i, %1898, !dbg !1845
  %1899 = ptrtoint i32* %t.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1899, i32 5304, i32 69, i32 9), !dbg !1845
  %1900 = load i32, i32* %t.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5242, i32 5304), !dbg !1845
  call void @printDDep(i32 5292, i32 5304), !dbg !1845
  call void @printCDep(i32 610, i32 5304), !dbg !1845
  %shr1364.i.i = lshr i32 %1900, 10, !dbg !1845
  %and1365.i.i = and i32 %shr1364.i.i, 63, !dbg !1845
  %idxprom1366.i.i = zext i32 %and1365.i.i to i64, !dbg !1845
  %arrayidx1367.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1366.i.i, !dbg !1845
  %1901 = ptrtoint i32* %arrayidx1367.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1901, i32 5312, i32 69, i32 9), !dbg !1845
  %1902 = load i32, i32* %arrayidx1367.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5212, i32 5312), !dbg !1845
  call void @printCDep(i32 610, i32 5312), !dbg !1845
  %xor1368.i.i = xor i32 %xor1363.i.i, %1902, !dbg !1845
  %1903 = ptrtoint i32* %t.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1903, i32 5316, i32 69, i32 9), !dbg !1845
  %1904 = load i32, i32* %t.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5242, i32 5316), !dbg !1845
  call void @printDDep(i32 5304, i32 5316), !dbg !1845
  call void @printCDep(i32 610, i32 5316), !dbg !1845
  %shr1369.i.i = lshr i32 %1904, 18, !dbg !1845
  %and1370.i.i = and i32 %shr1369.i.i, 63, !dbg !1845
  %idxprom1371.i.i = zext i32 %and1370.i.i to i64, !dbg !1845
  %arrayidx1372.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1371.i.i, !dbg !1845
  %1905 = ptrtoint i32* %arrayidx1372.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1905, i32 5324, i32 69, i32 9), !dbg !1845
  %1906 = load i32, i32* %arrayidx1372.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5212, i32 5324), !dbg !1845
  call void @printCDep(i32 610, i32 5324), !dbg !1845
  %xor1373.i.i = xor i32 %xor1368.i.i, %1906, !dbg !1845
  %1907 = ptrtoint i32* %t.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1907, i32 5328, i32 69, i32 9), !dbg !1845
  %1908 = load i32, i32* %t.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5242, i32 5328), !dbg !1845
  call void @printDDep(i32 5316, i32 5328), !dbg !1845
  call void @printCDep(i32 610, i32 5328), !dbg !1845
  %shr1374.i.i = lshr i32 %1908, 26, !dbg !1845
  %idxprom1376.i.i = zext i32 %shr1374.i.i to i64, !dbg !1845
  %arrayidx1377.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1376.i.i, !dbg !1845
  %1909 = ptrtoint i32* %arrayidx1377.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1909, i32 5335, i32 69, i32 9), !dbg !1845
  %1910 = load i32, i32* %arrayidx1377.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5212, i32 5335), !dbg !1845
  call void @printCDep(i32 610, i32 5335), !dbg !1845
  %xor1378.i.i = xor i32 %xor1373.i.i, %1910, !dbg !1845
  %1911 = ptrtoint i32* %l.i.i to i64, !dbg !1845
  call void @printLoadAddr(i64 %1911, i32 5339, i32 69, i32 9), !dbg !1845
  %1912 = load i32, i32* %l.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5018, i32 5339), !dbg !1845
  call void @printDDep(i32 5212, i32 5339), !dbg !1845
  call void @printCDep(i32 610, i32 5339), !dbg !1845
  %xor1379.i.i = xor i32 %1912, %xor1378.i.i, !dbg !1845
  %1913 = ptrtoint i32* %l.i.i to i64, !dbg !1845
  call void @printStoreAddr(i64 %1913, i32 5344, i32 69, i32 9), !dbg !1845
  store i32 %xor1379.i.i, i32* %l.i.i, align 4, !dbg !1845
  call void @printDDep(i32 5242, i32 5344), !dbg !1845
  call void @printDDep(i32 5339, i32 5344), !dbg !1845
  call void @printCDep(i32 610, i32 5344), !dbg !1845
  %1914 = ptrtoint i32* %l.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1914, i32 5348, i32 70, i32 9), !dbg !1846
  %1915 = load i32, i32* %l.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5344, i32 5348), !dbg !1846
  call void @printDDep(i32 5344, i32 5348), !dbg !1846
  call void @printCDep(i32 610, i32 5348), !dbg !1846
  %1916 = ptrtoint i32** %s.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1916, i32 5352, i32 70, i32 9), !dbg !1846
  %1917 = load i32*, i32** %s.i.i, align 8, !dbg !1846
  call void @printDDep(i32 607, i32 5352), !dbg !1846
  call void @printDDep(i32 5212, i32 5352), !dbg !1846
  call void @printCDep(i32 610, i32 5352), !dbg !1846
  %arrayidx1380.i.i = getelementptr inbounds i32, i32* %1917, i64 4, !dbg !1846
  %1918 = ptrtoint i32* %arrayidx1380.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1918, i32 5357, i32 70, i32 9), !dbg !1846
  %1919 = load i32, i32* %arrayidx1380.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5344, i32 5357), !dbg !1846
  call void @printDDep(i32 5352, i32 5357), !dbg !1846
  call void @printCDep(i32 610, i32 5357), !dbg !1846
  %xor1381.i.i = xor i32 %1915, %1919, !dbg !1846
  %1920 = ptrtoint i32* %u.i.i to i64, !dbg !1846
  call void @printStoreAddr(i64 %1920, i32 5362, i32 70, i32 9), !dbg !1846
  store i32 %xor1381.i.i, i32* %u.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5344, i32 5362), !dbg !1846
  call void @printDDep(i32 5357, i32 5362), !dbg !1846
  call void @printCDep(i32 610, i32 5362), !dbg !1846
  %1921 = ptrtoint i32* %l.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1921, i32 5366, i32 70, i32 9), !dbg !1846
  %1922 = load i32, i32* %l.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5344, i32 5366), !dbg !1846
  call void @printDDep(i32 5357, i32 5366), !dbg !1846
  call void @printCDep(i32 610, i32 5366), !dbg !1846
  %1923 = ptrtoint i32** %s.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1923, i32 5370, i32 70, i32 9), !dbg !1846
  %1924 = load i32*, i32** %s.i.i, align 8, !dbg !1846
  call void @printDDep(i32 607, i32 5370), !dbg !1846
  call void @printDDep(i32 5357, i32 5370), !dbg !1846
  call void @printCDep(i32 610, i32 5370), !dbg !1846
  %arrayidx1382.i.i = getelementptr inbounds i32, i32* %1924, i64 5, !dbg !1846
  %1925 = ptrtoint i32* %arrayidx1382.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1925, i32 5375, i32 70, i32 9), !dbg !1846
  %1926 = load i32, i32* %arrayidx1382.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5362, i32 5375), !dbg !1846
  call void @printDDep(i32 5370, i32 5375), !dbg !1846
  call void @printCDep(i32 610, i32 5375), !dbg !1846
  %xor1383.i.i = xor i32 %1922, %1926, !dbg !1846
  %1927 = ptrtoint i32* %t.i.i to i64, !dbg !1846
  call void @printStoreAddr(i64 %1927, i32 5380, i32 70, i32 9), !dbg !1846
  store i32 %xor1383.i.i, i32* %t.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5362, i32 5380), !dbg !1846
  call void @printDDep(i32 5375, i32 5380), !dbg !1846
  call void @printCDep(i32 610, i32 5380), !dbg !1846
  %1928 = ptrtoint i32* %t.i.i to i64, !dbg !1760
  call void @printLoadAddr(i64 %1928, i32 5384, i32 70, i32 9), !dbg !1760
  %1929 = load i32, i32* %t.i.i, align 4, !dbg !1760
  call void @printDDep(i32 5380, i32 5384), !dbg !1760
  call void @printDDep(i32 5380, i32 5384), !dbg !1760
  call void @printCDep(i32 610, i32 5384), !dbg !1760
  %1930 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1929) #5, !dbg !1760, !srcloc !270
  %1931 = ptrtoint i32* %ret1384.i.i to i64, !dbg !1760
  call void @printStoreAddr(i64 %1931, i32 5389, i32 70, i32 9), !dbg !1760
  store i32 %1930, i32* %ret1384.i.i, align 4, !dbg !1760
  call void @printDDep(i32 5380, i32 5389), !dbg !1760
  call void @printDDep(i32 161, i32 5389), !dbg !1760
  call void @printCDep(i32 610, i32 5389), !dbg !1760
  %1932 = ptrtoint i32* %ret1384.i.i to i64, !dbg !1760
  call void @printLoadAddr(i64 %1932, i32 5393, i32 70, i32 9), !dbg !1760
  %1933 = load i32, i32* %ret1384.i.i, align 4, !dbg !1760
  call void @printDDep(i32 5389, i32 5393), !dbg !1760
  call void @printDDep(i32 5389, i32 5393), !dbg !1760
  call void @printCDep(i32 610, i32 5393), !dbg !1760
  %1934 = ptrtoint i32* %tmp1385.i.i to i64, !dbg !1760
  call void @printStoreAddr(i64 %1934, i32 5397, i32 70, i32 9), !dbg !1760
  store i32 %1933, i32* %tmp1385.i.i, align 4, !dbg !1760
  call void @printDDep(i32 5389, i32 5397), !dbg !1760
  call void @printDDep(i32 161, i32 5397), !dbg !1760
  call void @printCDep(i32 610, i32 5397), !dbg !1760
  %1935 = ptrtoint i32* %tmp1385.i.i to i64, !dbg !1760
  call void @printLoadAddr(i64 %1935, i32 5401, i32 70, i32 9), !dbg !1760
  %1936 = load i32, i32* %tmp1385.i.i, align 4, !dbg !1760
  call void @printDDep(i32 5397, i32 5401), !dbg !1760
  call void @printDDep(i32 5397, i32 5401), !dbg !1760
  call void @printCDep(i32 610, i32 5401), !dbg !1760
  %1937 = ptrtoint i32* %t.i.i to i64, !dbg !1846
  call void @printStoreAddr(i64 %1937, i32 5405, i32 70, i32 9), !dbg !1846
  store i32 %1936, i32* %t.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5397, i32 5405), !dbg !1846
  call void @printDDep(i32 5384, i32 5405), !dbg !1846
  call void @printCDep(i32 610, i32 5405), !dbg !1846
  %1938 = ptrtoint i32* %u.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1938, i32 5409, i32 70, i32 9), !dbg !1846
  %1939 = load i32, i32* %u.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5362, i32 5409), !dbg !1846
  call void @printDDep(i32 5375, i32 5409), !dbg !1846
  call void @printCDep(i32 610, i32 5409), !dbg !1846
  %shr1386.i.i = lshr i32 %1939, 2, !dbg !1846
  %and1387.i.i = and i32 %shr1386.i.i, 63, !dbg !1846
  %idxprom1388.i.i = zext i32 %and1387.i.i to i64, !dbg !1846
  %arrayidx1389.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1388.i.i, !dbg !1846
  %1940 = ptrtoint i32* %arrayidx1389.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1940, i32 5417, i32 70, i32 9), !dbg !1846
  %1941 = load i32, i32* %arrayidx1389.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5375, i32 5417), !dbg !1846
  call void @printCDep(i32 610, i32 5417), !dbg !1846
  %1942 = ptrtoint i32* %u.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1942, i32 5420, i32 70, i32 9), !dbg !1846
  %1943 = load i32, i32* %u.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5362, i32 5420), !dbg !1846
  call void @printDDep(i32 5409, i32 5420), !dbg !1846
  call void @printCDep(i32 610, i32 5420), !dbg !1846
  %shr1390.i.i = lshr i32 %1943, 10, !dbg !1846
  %and1391.i.i = and i32 %shr1390.i.i, 63, !dbg !1846
  %idxprom1392.i.i = zext i32 %and1391.i.i to i64, !dbg !1846
  %arrayidx1393.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1392.i.i, !dbg !1846
  %1944 = ptrtoint i32* %arrayidx1393.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1944, i32 5428, i32 70, i32 9), !dbg !1846
  %1945 = load i32, i32* %arrayidx1393.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5375, i32 5428), !dbg !1846
  call void @printCDep(i32 610, i32 5428), !dbg !1846
  %xor1394.i.i = xor i32 %1941, %1945, !dbg !1846
  %1946 = ptrtoint i32* %u.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1946, i32 5432, i32 70, i32 9), !dbg !1846
  %1947 = load i32, i32* %u.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5362, i32 5432), !dbg !1846
  call void @printDDep(i32 5420, i32 5432), !dbg !1846
  call void @printCDep(i32 610, i32 5432), !dbg !1846
  %shr1395.i.i = lshr i32 %1947, 18, !dbg !1846
  %and1396.i.i = and i32 %shr1395.i.i, 63, !dbg !1846
  %idxprom1397.i.i = zext i32 %and1396.i.i to i64, !dbg !1846
  %arrayidx1398.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1397.i.i, !dbg !1846
  %1948 = ptrtoint i32* %arrayidx1398.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1948, i32 5440, i32 70, i32 9), !dbg !1846
  %1949 = load i32, i32* %arrayidx1398.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5375, i32 5440), !dbg !1846
  call void @printCDep(i32 610, i32 5440), !dbg !1846
  %xor1399.i.i = xor i32 %xor1394.i.i, %1949, !dbg !1846
  %1950 = ptrtoint i32* %u.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1950, i32 5444, i32 70, i32 9), !dbg !1846
  %1951 = load i32, i32* %u.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5362, i32 5444), !dbg !1846
  call void @printDDep(i32 5432, i32 5444), !dbg !1846
  call void @printCDep(i32 610, i32 5444), !dbg !1846
  %shr1400.i.i = lshr i32 %1951, 26, !dbg !1846
  %idxprom1402.i.i = zext i32 %shr1400.i.i to i64, !dbg !1846
  %arrayidx1403.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1402.i.i, !dbg !1846
  %1952 = ptrtoint i32* %arrayidx1403.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1952, i32 5451, i32 70, i32 9), !dbg !1846
  %1953 = load i32, i32* %arrayidx1403.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5375, i32 5451), !dbg !1846
  call void @printCDep(i32 610, i32 5451), !dbg !1846
  %xor1404.i.i = xor i32 %xor1399.i.i, %1953, !dbg !1846
  %1954 = ptrtoint i32* %t.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1954, i32 5455, i32 70, i32 9), !dbg !1846
  %1955 = load i32, i32* %t.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5405, i32 5455), !dbg !1846
  call void @printDDep(i32 5405, i32 5455), !dbg !1846
  call void @printCDep(i32 610, i32 5455), !dbg !1846
  %shr1405.i.i = lshr i32 %1955, 2, !dbg !1846
  %and1406.i.i = and i32 %shr1405.i.i, 63, !dbg !1846
  %idxprom1407.i.i = zext i32 %and1406.i.i to i64, !dbg !1846
  %arrayidx1408.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1407.i.i, !dbg !1846
  %1956 = ptrtoint i32* %arrayidx1408.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1956, i32 5463, i32 70, i32 9), !dbg !1846
  %1957 = load i32, i32* %arrayidx1408.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5375, i32 5463), !dbg !1846
  call void @printCDep(i32 610, i32 5463), !dbg !1846
  %xor1409.i.i = xor i32 %xor1404.i.i, %1957, !dbg !1846
  %1958 = ptrtoint i32* %t.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1958, i32 5467, i32 70, i32 9), !dbg !1846
  %1959 = load i32, i32* %t.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5405, i32 5467), !dbg !1846
  call void @printDDep(i32 5455, i32 5467), !dbg !1846
  call void @printCDep(i32 610, i32 5467), !dbg !1846
  %shr1410.i.i = lshr i32 %1959, 10, !dbg !1846
  %and1411.i.i = and i32 %shr1410.i.i, 63, !dbg !1846
  %idxprom1412.i.i = zext i32 %and1411.i.i to i64, !dbg !1846
  %arrayidx1413.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1412.i.i, !dbg !1846
  %1960 = ptrtoint i32* %arrayidx1413.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1960, i32 5475, i32 70, i32 9), !dbg !1846
  %1961 = load i32, i32* %arrayidx1413.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5375, i32 5475), !dbg !1846
  call void @printCDep(i32 610, i32 5475), !dbg !1846
  %xor1414.i.i = xor i32 %xor1409.i.i, %1961, !dbg !1846
  %1962 = ptrtoint i32* %t.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1962, i32 5479, i32 70, i32 9), !dbg !1846
  %1963 = load i32, i32* %t.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5405, i32 5479), !dbg !1846
  call void @printDDep(i32 5467, i32 5479), !dbg !1846
  call void @printCDep(i32 610, i32 5479), !dbg !1846
  %shr1415.i.i = lshr i32 %1963, 18, !dbg !1846
  %and1416.i.i = and i32 %shr1415.i.i, 63, !dbg !1846
  %idxprom1417.i.i = zext i32 %and1416.i.i to i64, !dbg !1846
  %arrayidx1418.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1417.i.i, !dbg !1846
  %1964 = ptrtoint i32* %arrayidx1418.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1964, i32 5487, i32 70, i32 9), !dbg !1846
  %1965 = load i32, i32* %arrayidx1418.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5375, i32 5487), !dbg !1846
  call void @printCDep(i32 610, i32 5487), !dbg !1846
  %xor1419.i.i = xor i32 %xor1414.i.i, %1965, !dbg !1846
  %1966 = ptrtoint i32* %t.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1966, i32 5491, i32 70, i32 9), !dbg !1846
  %1967 = load i32, i32* %t.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5405, i32 5491), !dbg !1846
  call void @printDDep(i32 5479, i32 5491), !dbg !1846
  call void @printCDep(i32 610, i32 5491), !dbg !1846
  %shr1420.i.i = lshr i32 %1967, 26, !dbg !1846
  %idxprom1422.i.i = zext i32 %shr1420.i.i to i64, !dbg !1846
  %arrayidx1423.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1422.i.i, !dbg !1846
  %1968 = ptrtoint i32* %arrayidx1423.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1968, i32 5498, i32 70, i32 9), !dbg !1846
  %1969 = load i32, i32* %arrayidx1423.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5375, i32 5498), !dbg !1846
  call void @printCDep(i32 610, i32 5498), !dbg !1846
  %xor1424.i.i = xor i32 %xor1419.i.i, %1969, !dbg !1846
  %1970 = ptrtoint i32* %r.i.i to i64, !dbg !1846
  call void @printLoadAddr(i64 %1970, i32 5502, i32 70, i32 9), !dbg !1846
  %1971 = load i32, i32* %r.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5181, i32 5502), !dbg !1846
  call void @printDDep(i32 5375, i32 5502), !dbg !1846
  call void @printCDep(i32 610, i32 5502), !dbg !1846
  %xor1425.i.i = xor i32 %1971, %xor1424.i.i, !dbg !1846
  %1972 = ptrtoint i32* %r.i.i to i64, !dbg !1846
  call void @printStoreAddr(i64 %1972, i32 5507, i32 70, i32 9), !dbg !1846
  store i32 %xor1425.i.i, i32* %r.i.i, align 4, !dbg !1846
  call void @printDDep(i32 5405, i32 5507), !dbg !1846
  call void @printDDep(i32 5502, i32 5507), !dbg !1846
  call void @printCDep(i32 610, i32 5507), !dbg !1846
  %1973 = ptrtoint i32* %r.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %1973, i32 5511, i32 71, i32 9), !dbg !1847
  %1974 = load i32, i32* %r.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5507, i32 5511), !dbg !1847
  call void @printDDep(i32 5507, i32 5511), !dbg !1847
  call void @printCDep(i32 610, i32 5511), !dbg !1847
  %1975 = ptrtoint i32** %s.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %1975, i32 5515, i32 71, i32 9), !dbg !1847
  %1976 = load i32*, i32** %s.i.i, align 8, !dbg !1847
  call void @printDDep(i32 607, i32 5515), !dbg !1847
  call void @printDDep(i32 5375, i32 5515), !dbg !1847
  call void @printCDep(i32 610, i32 5515), !dbg !1847
  %arrayidx1426.i.i = getelementptr inbounds i32, i32* %1976, i64 2, !dbg !1847
  %1977 = ptrtoint i32* %arrayidx1426.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %1977, i32 5520, i32 71, i32 9), !dbg !1847
  %1978 = load i32, i32* %arrayidx1426.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5507, i32 5520), !dbg !1847
  call void @printDDep(i32 5515, i32 5520), !dbg !1847
  call void @printCDep(i32 610, i32 5520), !dbg !1847
  %xor1427.i.i = xor i32 %1974, %1978, !dbg !1847
  %1979 = ptrtoint i32* %u.i.i to i64, !dbg !1847
  call void @printStoreAddr(i64 %1979, i32 5525, i32 71, i32 9), !dbg !1847
  store i32 %xor1427.i.i, i32* %u.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5507, i32 5525), !dbg !1847
  call void @printDDep(i32 5520, i32 5525), !dbg !1847
  call void @printCDep(i32 610, i32 5525), !dbg !1847
  %1980 = ptrtoint i32* %r.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %1980, i32 5529, i32 71, i32 9), !dbg !1847
  %1981 = load i32, i32* %r.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5507, i32 5529), !dbg !1847
  call void @printDDep(i32 5520, i32 5529), !dbg !1847
  call void @printCDep(i32 610, i32 5529), !dbg !1847
  %1982 = ptrtoint i32** %s.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %1982, i32 5533, i32 71, i32 9), !dbg !1847
  %1983 = load i32*, i32** %s.i.i, align 8, !dbg !1847
  call void @printDDep(i32 607, i32 5533), !dbg !1847
  call void @printDDep(i32 5520, i32 5533), !dbg !1847
  call void @printCDep(i32 610, i32 5533), !dbg !1847
  %arrayidx1428.i.i = getelementptr inbounds i32, i32* %1983, i64 3, !dbg !1847
  %1984 = ptrtoint i32* %arrayidx1428.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %1984, i32 5538, i32 71, i32 9), !dbg !1847
  %1985 = load i32, i32* %arrayidx1428.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5525, i32 5538), !dbg !1847
  call void @printDDep(i32 5533, i32 5538), !dbg !1847
  call void @printCDep(i32 610, i32 5538), !dbg !1847
  %xor1429.i.i = xor i32 %1981, %1985, !dbg !1847
  %1986 = ptrtoint i32* %t.i.i to i64, !dbg !1847
  call void @printStoreAddr(i64 %1986, i32 5543, i32 71, i32 9), !dbg !1847
  store i32 %xor1429.i.i, i32* %t.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5525, i32 5543), !dbg !1847
  call void @printDDep(i32 5538, i32 5543), !dbg !1847
  call void @printCDep(i32 610, i32 5543), !dbg !1847
  %1987 = ptrtoint i32* %t.i.i to i64, !dbg !1761
  call void @printLoadAddr(i64 %1987, i32 5547, i32 71, i32 9), !dbg !1761
  %1988 = load i32, i32* %t.i.i, align 4, !dbg !1761
  call void @printDDep(i32 5543, i32 5547), !dbg !1761
  call void @printDDep(i32 5543, i32 5547), !dbg !1761
  call void @printCDep(i32 610, i32 5547), !dbg !1761
  %1989 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %1988) #5, !dbg !1761, !srcloc !276
  %1990 = ptrtoint i32* %ret1430.i.i to i64, !dbg !1761
  call void @printStoreAddr(i64 %1990, i32 5552, i32 71, i32 9), !dbg !1761
  store i32 %1989, i32* %ret1430.i.i, align 4, !dbg !1761
  call void @printDDep(i32 5543, i32 5552), !dbg !1761
  call void @printDDep(i32 161, i32 5552), !dbg !1761
  call void @printCDep(i32 610, i32 5552), !dbg !1761
  %1991 = ptrtoint i32* %ret1430.i.i to i64, !dbg !1761
  call void @printLoadAddr(i64 %1991, i32 5556, i32 71, i32 9), !dbg !1761
  %1992 = load i32, i32* %ret1430.i.i, align 4, !dbg !1761
  call void @printDDep(i32 5552, i32 5556), !dbg !1761
  call void @printDDep(i32 5552, i32 5556), !dbg !1761
  call void @printCDep(i32 610, i32 5556), !dbg !1761
  %1993 = ptrtoint i32* %tmp1431.i.i to i64, !dbg !1761
  call void @printStoreAddr(i64 %1993, i32 5560, i32 71, i32 9), !dbg !1761
  store i32 %1992, i32* %tmp1431.i.i, align 4, !dbg !1761
  call void @printDDep(i32 5552, i32 5560), !dbg !1761
  call void @printDDep(i32 161, i32 5560), !dbg !1761
  call void @printCDep(i32 610, i32 5560), !dbg !1761
  %1994 = ptrtoint i32* %tmp1431.i.i to i64, !dbg !1761
  call void @printLoadAddr(i64 %1994, i32 5564, i32 71, i32 9), !dbg !1761
  %1995 = load i32, i32* %tmp1431.i.i, align 4, !dbg !1761
  call void @printDDep(i32 5560, i32 5564), !dbg !1761
  call void @printDDep(i32 5560, i32 5564), !dbg !1761
  call void @printCDep(i32 610, i32 5564), !dbg !1761
  %1996 = ptrtoint i32* %t.i.i to i64, !dbg !1847
  call void @printStoreAddr(i64 %1996, i32 5568, i32 71, i32 9), !dbg !1847
  store i32 %1995, i32* %t.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5560, i32 5568), !dbg !1847
  call void @printDDep(i32 5547, i32 5568), !dbg !1847
  call void @printCDep(i32 610, i32 5568), !dbg !1847
  %1997 = ptrtoint i32* %u.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %1997, i32 5572, i32 71, i32 9), !dbg !1847
  %1998 = load i32, i32* %u.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5525, i32 5572), !dbg !1847
  call void @printDDep(i32 5538, i32 5572), !dbg !1847
  call void @printCDep(i32 610, i32 5572), !dbg !1847
  %shr1432.i.i = lshr i32 %1998, 2, !dbg !1847
  %and1433.i.i = and i32 %shr1432.i.i, 63, !dbg !1847
  %idxprom1434.i.i = zext i32 %and1433.i.i to i64, !dbg !1847
  %arrayidx1435.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1434.i.i, !dbg !1847
  %1999 = ptrtoint i32* %arrayidx1435.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %1999, i32 5580, i32 71, i32 9), !dbg !1847
  %2000 = load i32, i32* %arrayidx1435.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5538, i32 5580), !dbg !1847
  call void @printCDep(i32 610, i32 5580), !dbg !1847
  %2001 = ptrtoint i32* %u.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2001, i32 5583, i32 71, i32 9), !dbg !1847
  %2002 = load i32, i32* %u.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5525, i32 5583), !dbg !1847
  call void @printDDep(i32 5572, i32 5583), !dbg !1847
  call void @printCDep(i32 610, i32 5583), !dbg !1847
  %shr1436.i.i = lshr i32 %2002, 10, !dbg !1847
  %and1437.i.i = and i32 %shr1436.i.i, 63, !dbg !1847
  %idxprom1438.i.i = zext i32 %and1437.i.i to i64, !dbg !1847
  %arrayidx1439.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1438.i.i, !dbg !1847
  %2003 = ptrtoint i32* %arrayidx1439.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2003, i32 5591, i32 71, i32 9), !dbg !1847
  %2004 = load i32, i32* %arrayidx1439.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5538, i32 5591), !dbg !1847
  call void @printCDep(i32 610, i32 5591), !dbg !1847
  %xor1440.i.i = xor i32 %2000, %2004, !dbg !1847
  %2005 = ptrtoint i32* %u.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2005, i32 5595, i32 71, i32 9), !dbg !1847
  %2006 = load i32, i32* %u.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5525, i32 5595), !dbg !1847
  call void @printDDep(i32 5583, i32 5595), !dbg !1847
  call void @printCDep(i32 610, i32 5595), !dbg !1847
  %shr1441.i.i = lshr i32 %2006, 18, !dbg !1847
  %and1442.i.i = and i32 %shr1441.i.i, 63, !dbg !1847
  %idxprom1443.i.i = zext i32 %and1442.i.i to i64, !dbg !1847
  %arrayidx1444.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1443.i.i, !dbg !1847
  %2007 = ptrtoint i32* %arrayidx1444.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2007, i32 5603, i32 71, i32 9), !dbg !1847
  %2008 = load i32, i32* %arrayidx1444.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5538, i32 5603), !dbg !1847
  call void @printCDep(i32 610, i32 5603), !dbg !1847
  %xor1445.i.i = xor i32 %xor1440.i.i, %2008, !dbg !1847
  %2009 = ptrtoint i32* %u.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2009, i32 5607, i32 71, i32 9), !dbg !1847
  %2010 = load i32, i32* %u.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5525, i32 5607), !dbg !1847
  call void @printDDep(i32 5595, i32 5607), !dbg !1847
  call void @printCDep(i32 610, i32 5607), !dbg !1847
  %shr1446.i.i = lshr i32 %2010, 26, !dbg !1847
  %idxprom1448.i.i = zext i32 %shr1446.i.i to i64, !dbg !1847
  %arrayidx1449.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1448.i.i, !dbg !1847
  %2011 = ptrtoint i32* %arrayidx1449.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2011, i32 5614, i32 71, i32 9), !dbg !1847
  %2012 = load i32, i32* %arrayidx1449.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5538, i32 5614), !dbg !1847
  call void @printCDep(i32 610, i32 5614), !dbg !1847
  %xor1450.i.i = xor i32 %xor1445.i.i, %2012, !dbg !1847
  %2013 = ptrtoint i32* %t.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2013, i32 5618, i32 71, i32 9), !dbg !1847
  %2014 = load i32, i32* %t.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5568, i32 5618), !dbg !1847
  call void @printDDep(i32 5568, i32 5618), !dbg !1847
  call void @printCDep(i32 610, i32 5618), !dbg !1847
  %shr1451.i.i = lshr i32 %2014, 2, !dbg !1847
  %and1452.i.i = and i32 %shr1451.i.i, 63, !dbg !1847
  %idxprom1453.i.i = zext i32 %and1452.i.i to i64, !dbg !1847
  %arrayidx1454.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1453.i.i, !dbg !1847
  %2015 = ptrtoint i32* %arrayidx1454.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2015, i32 5626, i32 71, i32 9), !dbg !1847
  %2016 = load i32, i32* %arrayidx1454.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5538, i32 5626), !dbg !1847
  call void @printCDep(i32 610, i32 5626), !dbg !1847
  %xor1455.i.i = xor i32 %xor1450.i.i, %2016, !dbg !1847
  %2017 = ptrtoint i32* %t.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2017, i32 5630, i32 71, i32 9), !dbg !1847
  %2018 = load i32, i32* %t.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5568, i32 5630), !dbg !1847
  call void @printDDep(i32 5618, i32 5630), !dbg !1847
  call void @printCDep(i32 610, i32 5630), !dbg !1847
  %shr1456.i.i = lshr i32 %2018, 10, !dbg !1847
  %and1457.i.i = and i32 %shr1456.i.i, 63, !dbg !1847
  %idxprom1458.i.i = zext i32 %and1457.i.i to i64, !dbg !1847
  %arrayidx1459.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1458.i.i, !dbg !1847
  %2019 = ptrtoint i32* %arrayidx1459.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2019, i32 5638, i32 71, i32 9), !dbg !1847
  %2020 = load i32, i32* %arrayidx1459.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5538, i32 5638), !dbg !1847
  call void @printCDep(i32 610, i32 5638), !dbg !1847
  %xor1460.i.i = xor i32 %xor1455.i.i, %2020, !dbg !1847
  %2021 = ptrtoint i32* %t.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2021, i32 5642, i32 71, i32 9), !dbg !1847
  %2022 = load i32, i32* %t.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5568, i32 5642), !dbg !1847
  call void @printDDep(i32 5630, i32 5642), !dbg !1847
  call void @printCDep(i32 610, i32 5642), !dbg !1847
  %shr1461.i.i = lshr i32 %2022, 18, !dbg !1847
  %and1462.i.i = and i32 %shr1461.i.i, 63, !dbg !1847
  %idxprom1463.i.i = zext i32 %and1462.i.i to i64, !dbg !1847
  %arrayidx1464.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1463.i.i, !dbg !1847
  %2023 = ptrtoint i32* %arrayidx1464.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2023, i32 5650, i32 71, i32 9), !dbg !1847
  %2024 = load i32, i32* %arrayidx1464.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5538, i32 5650), !dbg !1847
  call void @printCDep(i32 610, i32 5650), !dbg !1847
  %xor1465.i.i = xor i32 %xor1460.i.i, %2024, !dbg !1847
  %2025 = ptrtoint i32* %t.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2025, i32 5654, i32 71, i32 9), !dbg !1847
  %2026 = load i32, i32* %t.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5568, i32 5654), !dbg !1847
  call void @printDDep(i32 5642, i32 5654), !dbg !1847
  call void @printCDep(i32 610, i32 5654), !dbg !1847
  %shr1466.i.i = lshr i32 %2026, 26, !dbg !1847
  %idxprom1468.i.i = zext i32 %shr1466.i.i to i64, !dbg !1847
  %arrayidx1469.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1468.i.i, !dbg !1847
  %2027 = ptrtoint i32* %arrayidx1469.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2027, i32 5661, i32 71, i32 9), !dbg !1847
  %2028 = load i32, i32* %arrayidx1469.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5538, i32 5661), !dbg !1847
  call void @printCDep(i32 610, i32 5661), !dbg !1847
  %xor1470.i.i = xor i32 %xor1465.i.i, %2028, !dbg !1847
  %2029 = ptrtoint i32* %l.i.i to i64, !dbg !1847
  call void @printLoadAddr(i64 %2029, i32 5665, i32 71, i32 9), !dbg !1847
  %2030 = load i32, i32* %l.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5344, i32 5665), !dbg !1847
  call void @printDDep(i32 5538, i32 5665), !dbg !1847
  call void @printCDep(i32 610, i32 5665), !dbg !1847
  %xor1471.i.i = xor i32 %2030, %xor1470.i.i, !dbg !1847
  %2031 = ptrtoint i32* %l.i.i to i64, !dbg !1847
  call void @printStoreAddr(i64 %2031, i32 5670, i32 71, i32 9), !dbg !1847
  store i32 %xor1471.i.i, i32* %l.i.i, align 4, !dbg !1847
  call void @printDDep(i32 5568, i32 5670), !dbg !1847
  call void @printDDep(i32 5665, i32 5670), !dbg !1847
  call void @printCDep(i32 610, i32 5670), !dbg !1847
  %2032 = ptrtoint i32* %l.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2032, i32 5674, i32 72, i32 9), !dbg !1848
  %2033 = load i32, i32* %l.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5670, i32 5674), !dbg !1848
  call void @printDDep(i32 5670, i32 5674), !dbg !1848
  call void @printCDep(i32 610, i32 5674), !dbg !1848
  %2034 = ptrtoint i32** %s.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2034, i32 5678, i32 72, i32 9), !dbg !1848
  %2035 = load i32*, i32** %s.i.i, align 8, !dbg !1848
  call void @printDDep(i32 607, i32 5678), !dbg !1848
  call void @printDDep(i32 5538, i32 5678), !dbg !1848
  call void @printCDep(i32 610, i32 5678), !dbg !1848
  %2036 = ptrtoint i32* %2035 to i64, !dbg !1848
  call void @printLoadAddr(i64 %2036, i32 5682, i32 72, i32 9), !dbg !1848
  %2037 = load i32, i32* %2035, align 4, !dbg !1848
  call void @printDDep(i32 5670, i32 5682), !dbg !1848
  call void @printDDep(i32 5678, i32 5682), !dbg !1848
  call void @printCDep(i32 610, i32 5682), !dbg !1848
  %xor1473.i.i = xor i32 %2033, %2037, !dbg !1848
  %2038 = ptrtoint i32* %u.i.i to i64, !dbg !1848
  call void @printStoreAddr(i64 %2038, i32 5687, i32 72, i32 9), !dbg !1848
  store i32 %xor1473.i.i, i32* %u.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5670, i32 5687), !dbg !1848
  call void @printDDep(i32 5682, i32 5687), !dbg !1848
  call void @printCDep(i32 610, i32 5687), !dbg !1848
  %2039 = ptrtoint i32* %l.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2039, i32 5691, i32 72, i32 9), !dbg !1848
  %2040 = load i32, i32* %l.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5670, i32 5691), !dbg !1848
  call void @printDDep(i32 5682, i32 5691), !dbg !1848
  call void @printCDep(i32 610, i32 5691), !dbg !1848
  %2041 = ptrtoint i32** %s.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2041, i32 5695, i32 72, i32 9), !dbg !1848
  %2042 = load i32*, i32** %s.i.i, align 8, !dbg !1848
  call void @printDDep(i32 607, i32 5695), !dbg !1848
  call void @printDDep(i32 5682, i32 5695), !dbg !1848
  call void @printCDep(i32 610, i32 5695), !dbg !1848
  %arrayidx1474.i.i = getelementptr inbounds i32, i32* %2042, i64 1, !dbg !1848
  %2043 = ptrtoint i32* %arrayidx1474.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2043, i32 5700, i32 72, i32 9), !dbg !1848
  %2044 = load i32, i32* %arrayidx1474.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5687, i32 5700), !dbg !1848
  call void @printDDep(i32 5695, i32 5700), !dbg !1848
  call void @printCDep(i32 610, i32 5700), !dbg !1848
  %xor1475.i.i = xor i32 %2040, %2044, !dbg !1848
  %2045 = ptrtoint i32* %t.i.i to i64, !dbg !1848
  call void @printStoreAddr(i64 %2045, i32 5705, i32 72, i32 9), !dbg !1848
  store i32 %xor1475.i.i, i32* %t.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5687, i32 5705), !dbg !1848
  call void @printDDep(i32 5700, i32 5705), !dbg !1848
  call void @printCDep(i32 610, i32 5705), !dbg !1848
  %2046 = ptrtoint i32* %t.i.i to i64, !dbg !1762
  call void @printLoadAddr(i64 %2046, i32 5709, i32 72, i32 9), !dbg !1762
  %2047 = load i32, i32* %t.i.i, align 4, !dbg !1762
  call void @printDDep(i32 5705, i32 5709), !dbg !1762
  call void @printDDep(i32 5705, i32 5709), !dbg !1762
  call void @printCDep(i32 610, i32 5709), !dbg !1762
  %2048 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %2047) #5, !dbg !1762, !srcloc !282
  %2049 = ptrtoint i32* %ret1476.i.i to i64, !dbg !1762
  call void @printStoreAddr(i64 %2049, i32 5714, i32 72, i32 9), !dbg !1762
  store i32 %2048, i32* %ret1476.i.i, align 4, !dbg !1762
  call void @printDDep(i32 5705, i32 5714), !dbg !1762
  call void @printDDep(i32 161, i32 5714), !dbg !1762
  call void @printCDep(i32 610, i32 5714), !dbg !1762
  %2050 = ptrtoint i32* %ret1476.i.i to i64, !dbg !1762
  call void @printLoadAddr(i64 %2050, i32 5718, i32 72, i32 9), !dbg !1762
  %2051 = load i32, i32* %ret1476.i.i, align 4, !dbg !1762
  call void @printDDep(i32 5714, i32 5718), !dbg !1762
  call void @printDDep(i32 5714, i32 5718), !dbg !1762
  call void @printCDep(i32 610, i32 5718), !dbg !1762
  %2052 = ptrtoint i32* %tmp1477.i.i to i64, !dbg !1762
  call void @printStoreAddr(i64 %2052, i32 5722, i32 72, i32 9), !dbg !1762
  store i32 %2051, i32* %tmp1477.i.i, align 4, !dbg !1762
  call void @printDDep(i32 5714, i32 5722), !dbg !1762
  call void @printDDep(i32 161, i32 5722), !dbg !1762
  call void @printCDep(i32 610, i32 5722), !dbg !1762
  %2053 = ptrtoint i32* %tmp1477.i.i to i64, !dbg !1762
  call void @printLoadAddr(i64 %2053, i32 5726, i32 72, i32 9), !dbg !1762
  %2054 = load i32, i32* %tmp1477.i.i, align 4, !dbg !1762
  call void @printDDep(i32 5722, i32 5726), !dbg !1762
  call void @printDDep(i32 5722, i32 5726), !dbg !1762
  call void @printCDep(i32 610, i32 5726), !dbg !1762
  %2055 = ptrtoint i32* %t.i.i to i64, !dbg !1848
  call void @printStoreAddr(i64 %2055, i32 5730, i32 72, i32 9), !dbg !1848
  store i32 %2054, i32* %t.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5722, i32 5730), !dbg !1848
  call void @printDDep(i32 5709, i32 5730), !dbg !1848
  call void @printCDep(i32 610, i32 5730), !dbg !1848
  %2056 = ptrtoint i32* %u.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2056, i32 5734, i32 72, i32 9), !dbg !1848
  %2057 = load i32, i32* %u.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5687, i32 5734), !dbg !1848
  call void @printDDep(i32 5700, i32 5734), !dbg !1848
  call void @printCDep(i32 610, i32 5734), !dbg !1848
  %shr1478.i.i = lshr i32 %2057, 2, !dbg !1848
  %and1479.i.i = and i32 %shr1478.i.i, 63, !dbg !1848
  %idxprom1480.i.i = zext i32 %and1479.i.i to i64, !dbg !1848
  %arrayidx1481.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0), i64 0, i64 %idxprom1480.i.i, !dbg !1848
  %2058 = ptrtoint i32* %arrayidx1481.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2058, i32 5742, i32 72, i32 9), !dbg !1848
  %2059 = load i32, i32* %arrayidx1481.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5700, i32 5742), !dbg !1848
  call void @printCDep(i32 610, i32 5742), !dbg !1848
  %2060 = ptrtoint i32* %u.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2060, i32 5745, i32 72, i32 9), !dbg !1848
  %2061 = load i32, i32* %u.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5687, i32 5745), !dbg !1848
  call void @printDDep(i32 5734, i32 5745), !dbg !1848
  call void @printCDep(i32 610, i32 5745), !dbg !1848
  %shr1482.i.i = lshr i32 %2061, 10, !dbg !1848
  %and1483.i.i = and i32 %shr1482.i.i, 63, !dbg !1848
  %idxprom1484.i.i = zext i32 %and1483.i.i to i64, !dbg !1848
  %arrayidx1485.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2), i64 0, i64 %idxprom1484.i.i, !dbg !1848
  %2062 = ptrtoint i32* %arrayidx1485.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2062, i32 5753, i32 72, i32 9), !dbg !1848
  %2063 = load i32, i32* %arrayidx1485.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5700, i32 5753), !dbg !1848
  call void @printCDep(i32 610, i32 5753), !dbg !1848
  %xor1486.i.i = xor i32 %2059, %2063, !dbg !1848
  %2064 = ptrtoint i32* %u.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2064, i32 5757, i32 72, i32 9), !dbg !1848
  %2065 = load i32, i32* %u.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5687, i32 5757), !dbg !1848
  call void @printDDep(i32 5745, i32 5757), !dbg !1848
  call void @printCDep(i32 610, i32 5757), !dbg !1848
  %shr1487.i.i = lshr i32 %2065, 18, !dbg !1848
  %and1488.i.i = and i32 %shr1487.i.i, 63, !dbg !1848
  %idxprom1489.i.i = zext i32 %and1488.i.i to i64, !dbg !1848
  %arrayidx1490.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4), i64 0, i64 %idxprom1489.i.i, !dbg !1848
  %2066 = ptrtoint i32* %arrayidx1490.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2066, i32 5765, i32 72, i32 9), !dbg !1848
  %2067 = load i32, i32* %arrayidx1490.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5700, i32 5765), !dbg !1848
  call void @printCDep(i32 610, i32 5765), !dbg !1848
  %xor1491.i.i = xor i32 %xor1486.i.i, %2067, !dbg !1848
  %2068 = ptrtoint i32* %u.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2068, i32 5769, i32 72, i32 9), !dbg !1848
  %2069 = load i32, i32* %u.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5687, i32 5769), !dbg !1848
  call void @printDDep(i32 5757, i32 5769), !dbg !1848
  call void @printCDep(i32 610, i32 5769), !dbg !1848
  %shr1492.i.i = lshr i32 %2069, 26, !dbg !1848
  %idxprom1494.i.i = zext i32 %shr1492.i.i to i64, !dbg !1848
  %arrayidx1495.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6), i64 0, i64 %idxprom1494.i.i, !dbg !1848
  %2070 = ptrtoint i32* %arrayidx1495.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2070, i32 5776, i32 72, i32 9), !dbg !1848
  %2071 = load i32, i32* %arrayidx1495.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5700, i32 5776), !dbg !1848
  call void @printCDep(i32 610, i32 5776), !dbg !1848
  %xor1496.i.i = xor i32 %xor1491.i.i, %2071, !dbg !1848
  %2072 = ptrtoint i32* %t.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2072, i32 5780, i32 72, i32 9), !dbg !1848
  %2073 = load i32, i32* %t.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5730, i32 5780), !dbg !1848
  call void @printDDep(i32 5730, i32 5780), !dbg !1848
  call void @printCDep(i32 610, i32 5780), !dbg !1848
  %shr1497.i.i = lshr i32 %2073, 2, !dbg !1848
  %and1498.i.i = and i32 %shr1497.i.i, 63, !dbg !1848
  %idxprom1499.i.i = zext i32 %and1498.i.i to i64, !dbg !1848
  %arrayidx1500.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1), i64 0, i64 %idxprom1499.i.i, !dbg !1848
  %2074 = ptrtoint i32* %arrayidx1500.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2074, i32 5788, i32 72, i32 9), !dbg !1848
  %2075 = load i32, i32* %arrayidx1500.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5700, i32 5788), !dbg !1848
  call void @printCDep(i32 610, i32 5788), !dbg !1848
  %xor1501.i.i = xor i32 %xor1496.i.i, %2075, !dbg !1848
  %2076 = ptrtoint i32* %t.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2076, i32 5792, i32 72, i32 9), !dbg !1848
  %2077 = load i32, i32* %t.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5730, i32 5792), !dbg !1848
  call void @printDDep(i32 5780, i32 5792), !dbg !1848
  call void @printCDep(i32 610, i32 5792), !dbg !1848
  %shr1502.i.i = lshr i32 %2077, 10, !dbg !1848
  %and1503.i.i = and i32 %shr1502.i.i, 63, !dbg !1848
  %idxprom1504.i.i = zext i32 %and1503.i.i to i64, !dbg !1848
  %arrayidx1505.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3), i64 0, i64 %idxprom1504.i.i, !dbg !1848
  %2078 = ptrtoint i32* %arrayidx1505.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2078, i32 5800, i32 72, i32 9), !dbg !1848
  %2079 = load i32, i32* %arrayidx1505.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5700, i32 5800), !dbg !1848
  call void @printCDep(i32 610, i32 5800), !dbg !1848
  %xor1506.i.i = xor i32 %xor1501.i.i, %2079, !dbg !1848
  %2080 = ptrtoint i32* %t.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2080, i32 5804, i32 72, i32 9), !dbg !1848
  %2081 = load i32, i32* %t.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5730, i32 5804), !dbg !1848
  call void @printDDep(i32 5792, i32 5804), !dbg !1848
  call void @printCDep(i32 610, i32 5804), !dbg !1848
  %shr1507.i.i = lshr i32 %2081, 18, !dbg !1848
  %and1508.i.i = and i32 %shr1507.i.i, 63, !dbg !1848
  %idxprom1509.i.i = zext i32 %and1508.i.i to i64, !dbg !1848
  %arrayidx1510.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5), i64 0, i64 %idxprom1509.i.i, !dbg !1848
  %2082 = ptrtoint i32* %arrayidx1510.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2082, i32 5812, i32 72, i32 9), !dbg !1848
  %2083 = load i32, i32* %arrayidx1510.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5700, i32 5812), !dbg !1848
  call void @printCDep(i32 610, i32 5812), !dbg !1848
  %xor1511.i.i = xor i32 %xor1506.i.i, %2083, !dbg !1848
  %2084 = ptrtoint i32* %t.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2084, i32 5816, i32 72, i32 9), !dbg !1848
  %2085 = load i32, i32* %t.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5730, i32 5816), !dbg !1848
  call void @printDDep(i32 5804, i32 5816), !dbg !1848
  call void @printCDep(i32 610, i32 5816), !dbg !1848
  %shr1512.i.i = lshr i32 %2085, 26, !dbg !1848
  %idxprom1514.i.i = zext i32 %shr1512.i.i to i64, !dbg !1848
  %arrayidx1515.i.i = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds ([8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7), i64 0, i64 %idxprom1514.i.i, !dbg !1848
  %2086 = ptrtoint i32* %arrayidx1515.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2086, i32 5823, i32 72, i32 9), !dbg !1848
  %2087 = load i32, i32* %arrayidx1515.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5700, i32 5823), !dbg !1848
  call void @printCDep(i32 610, i32 5823), !dbg !1848
  %xor1516.i.i = xor i32 %xor1511.i.i, %2087, !dbg !1848
  %2088 = ptrtoint i32* %r.i.i to i64, !dbg !1848
  call void @printLoadAddr(i64 %2088, i32 5827, i32 72, i32 9), !dbg !1848
  %2089 = load i32, i32* %r.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5507, i32 5827), !dbg !1848
  call void @printDDep(i32 5700, i32 5827), !dbg !1848
  call void @printCDep(i32 610, i32 5827), !dbg !1848
  %xor1517.i.i = xor i32 %2089, %xor1516.i.i, !dbg !1848
  %2090 = ptrtoint i32* %r.i.i to i64, !dbg !1848
  call void @printStoreAddr(i64 %2090, i32 5832, i32 72, i32 9), !dbg !1848
  store i32 %xor1517.i.i, i32* %r.i.i, align 4, !dbg !1848
  call void @printDDep(i32 5730, i32 5832), !dbg !1848
  call void @printDDep(i32 5827, i32 5832), !dbg !1848
  call void @printCDep(i32 610, i32 5832), !dbg !1848
  %2091 = load i32, i32* %InstCounter
  %2092 = add nsw i32 1200, %2091
  store i32 %2092, i32* %InstCounter
  br label %DES_ecb_encrypt.exit

DES_ecb_encrypt.exit:                             ; preds = %if.then.i.i, %if.else.i.i
  %2093 = ptrtoint i32* %l.i.i to i64, !dbg !1763
  call void @printLoadAddr(i64 %2093, i32 5840, i32 76, i32 9), !dbg !1763
  %2094 = load i32, i32* %l.i.i, align 4, !dbg !1763
  call void @printDDep(i32 3221, i32 5840), !dbg !1763
  call void @printDDep(i32 5832, i32 5840), !dbg !1763
  call void @printDDep(i32 5700, i32 5840), !dbg !1763
  %2095 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %2094) #5, !dbg !1763, !srcloc !286
  %2096 = ptrtoint i32* %ret1518.i.i to i64, !dbg !1763
  call void @printStoreAddr(i64 %2096, i32 5845, i32 76, i32 9), !dbg !1763
  store i32 %2095, i32* %ret1518.i.i, align 4, !dbg !1763
  call void @printDDep(i32 3221, i32 5845), !dbg !1763
  call void @printDDep(i32 5832, i32 5845), !dbg !1763
  call void @printDDep(i32 161, i32 5845), !dbg !1763
  %2097 = ptrtoint i32* %ret1518.i.i to i64, !dbg !1763
  call void @printLoadAddr(i64 %2097, i32 5849, i32 76, i32 9), !dbg !1763
  %2098 = load i32, i32* %ret1518.i.i, align 4, !dbg !1763
  call void @printDDep(i32 5845, i32 5849), !dbg !1763
  call void @printDDep(i32 5845, i32 5849), !dbg !1763
  %2099 = ptrtoint i32* %tmp1519.i.i to i64, !dbg !1763
  call void @printStoreAddr(i64 %2099, i32 5852, i32 76, i32 9), !dbg !1763
  store i32 %2098, i32* %tmp1519.i.i, align 4, !dbg !1763
  call void @printDDep(i32 5845, i32 5852), !dbg !1763
  call void @printDDep(i32 161, i32 5852), !dbg !1763
  %2100 = ptrtoint i32* %tmp1519.i.i to i64, !dbg !1763
  call void @printLoadAddr(i64 %2100, i32 5855, i32 76, i32 9), !dbg !1763
  %2101 = load i32, i32* %tmp1519.i.i, align 4, !dbg !1763
  call void @printDDep(i32 5852, i32 5855), !dbg !1763
  call void @printDDep(i32 5852, i32 5855), !dbg !1763
  %conv1520.i.i = zext i32 %2101 to i64, !dbg !1849
  %and1521.i.i = and i64 %conv1520.i.i, 4294967295, !dbg !1850
  %conv1522.i.i = trunc i64 %and1521.i.i to i32, !dbg !1849
  %2102 = ptrtoint i32* %l.i.i to i64, !dbg !1851
  call void @printStoreAddr(i64 %2102, i32 5861, i32 76, i32 7), !dbg !1851
  store i32 %conv1522.i.i, i32* %l.i.i, align 4, !dbg !1851
  call void @printDDep(i32 5852, i32 5861), !dbg !1851
  call void @printDDep(i32 5840, i32 5861), !dbg !1851
  %2103 = ptrtoint i32* %r.i.i to i64, !dbg !1764
  call void @printLoadAddr(i64 %2103, i32 5864, i32 77, i32 9), !dbg !1764
  %2104 = load i32, i32* %r.i.i, align 4, !dbg !1764
  call void @printDDep(i32 3221, i32 5864), !dbg !1764
  call void @printDDep(i32 5832, i32 5864), !dbg !1764
  call void @printDDep(i32 5832, i32 5864), !dbg !1764
  %2105 = call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %2104) #5, !dbg !1764, !srcloc !293
  %2106 = ptrtoint i32* %ret1523.i.i to i64, !dbg !1764
  call void @printStoreAddr(i64 %2106, i32 5869, i32 77, i32 9), !dbg !1764
  store i32 %2105, i32* %ret1523.i.i, align 4, !dbg !1764
  call void @printDDep(i32 5861, i32 5869), !dbg !1764
  call void @printDDep(i32 161, i32 5869), !dbg !1764
  %2107 = ptrtoint i32* %ret1523.i.i to i64, !dbg !1764
  call void @printLoadAddr(i64 %2107, i32 5872, i32 77, i32 9), !dbg !1764
  %2108 = load i32, i32* %ret1523.i.i, align 4, !dbg !1764
  call void @printDDep(i32 5869, i32 5872), !dbg !1764
  call void @printDDep(i32 5869, i32 5872), !dbg !1764
  %2109 = ptrtoint i32* %tmp1524.i.i to i64, !dbg !1764
  call void @printStoreAddr(i64 %2109, i32 5875, i32 77, i32 9), !dbg !1764
  store i32 %2108, i32* %tmp1524.i.i, align 4, !dbg !1764
  call void @printDDep(i32 5869, i32 5875), !dbg !1764
  call void @printDDep(i32 161, i32 5875), !dbg !1764
  %2110 = ptrtoint i32* %tmp1524.i.i to i64, !dbg !1764
  call void @printLoadAddr(i64 %2110, i32 5878, i32 77, i32 9), !dbg !1764
  %2111 = load i32, i32* %tmp1524.i.i, align 4, !dbg !1764
  call void @printDDep(i32 5875, i32 5878), !dbg !1764
  call void @printDDep(i32 5875, i32 5878), !dbg !1764
  %conv1525.i.i = zext i32 %2111 to i64, !dbg !1852
  %and1526.i.i = and i64 %conv1525.i.i, 4294967295, !dbg !1853
  %conv1527.i.i = trunc i64 %and1526.i.i to i32, !dbg !1852
  %2112 = ptrtoint i32* %r.i.i to i64, !dbg !1854
  call void @printStoreAddr(i64 %2112, i32 5884, i32 77, i32 7), !dbg !1854
  store i32 %conv1527.i.i, i32* %r.i.i, align 4, !dbg !1854
  call void @printDDep(i32 5875, i32 5884), !dbg !1854
  call void @printDDep(i32 5864, i32 5884), !dbg !1854
  %2113 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2113, i32 5887, i32 79, i32 5), !dbg !1765
  %2114 = load i32, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5884, i32 5887), !dbg !1765
  call void @printDDep(i32 5884, i32 5887), !dbg !1765
  %shr1529.i.i = lshr i32 %2114, 1, !dbg !1765
  %2115 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2115, i32 5891, i32 79, i32 5), !dbg !1765
  %2116 = load i32, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5861, i32 5891), !dbg !1765
  call void @printDDep(i32 5861, i32 5891), !dbg !1765
  %xor1530.i.i = xor i32 %shr1529.i.i, %2116, !dbg !1765
  %conv1531.i.i = zext i32 %xor1530.i.i to i64, !dbg !1765
  %and1532.i.i = and i64 %conv1531.i.i, 1431655765, !dbg !1765
  %conv1533.i.i = trunc i64 %and1532.i.i to i32, !dbg !1765
  %2117 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2117, i32 5898, i32 79, i32 5), !dbg !1765
  store i32 %conv1533.i.i, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5884, i32 5898), !dbg !1765
  call void @printDDep(i32 161, i32 5898), !dbg !1765
  %2118 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2118, i32 5901, i32 79, i32 5), !dbg !1765
  %2119 = load i32, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5898, i32 5901), !dbg !1765
  call void @printDDep(i32 5898, i32 5901), !dbg !1765
  %2120 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2120, i32 5904, i32 79, i32 5), !dbg !1765
  %2121 = load i32, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5861, i32 5904), !dbg !1765
  call void @printDDep(i32 5891, i32 5904), !dbg !1765
  %xor1534.i.i = xor i32 %2121, %2119, !dbg !1765
  %2122 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2122, i32 5908, i32 79, i32 5), !dbg !1765
  store i32 %xor1534.i.i, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5898, i32 5908), !dbg !1765
  call void @printDDep(i32 5904, i32 5908), !dbg !1765
  %2123 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2123, i32 5911, i32 79, i32 5), !dbg !1765
  %2124 = load i32, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5898, i32 5911), !dbg !1765
  call void @printDDep(i32 5901, i32 5911), !dbg !1765
  %shl1535.i.i = shl i32 %2124, 1, !dbg !1765
  %2125 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2125, i32 5915, i32 79, i32 5), !dbg !1765
  %2126 = load i32, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5884, i32 5915), !dbg !1765
  call void @printDDep(i32 5887, i32 5915), !dbg !1765
  %xor1536.i.i = xor i32 %2126, %shl1535.i.i, !dbg !1765
  %2127 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2127, i32 5919, i32 79, i32 5), !dbg !1765
  store i32 %xor1536.i.i, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5908, i32 5919), !dbg !1765
  call void @printDDep(i32 5915, i32 5919), !dbg !1765
  %2128 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2128, i32 5922, i32 79, i32 5), !dbg !1765
  %2129 = load i32, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5908, i32 5922), !dbg !1765
  call void @printDDep(i32 5908, i32 5922), !dbg !1765
  %shr1537.i.i = lshr i32 %2129, 8, !dbg !1765
  %2130 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2130, i32 5926, i32 79, i32 5), !dbg !1765
  %2131 = load i32, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5919, i32 5926), !dbg !1765
  call void @printDDep(i32 5919, i32 5926), !dbg !1765
  %xor1538.i.i = xor i32 %shr1537.i.i, %2131, !dbg !1765
  %conv1539.i.i = zext i32 %xor1538.i.i to i64, !dbg !1765
  %and1540.i.i = and i64 %conv1539.i.i, 16711935, !dbg !1765
  %conv1541.i.i = trunc i64 %and1540.i.i to i32, !dbg !1765
  %2132 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2132, i32 5933, i32 79, i32 5), !dbg !1765
  store i32 %conv1541.i.i, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5919, i32 5933), !dbg !1765
  call void @printDDep(i32 5911, i32 5933), !dbg !1765
  %2133 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2133, i32 5936, i32 79, i32 5), !dbg !1765
  %2134 = load i32, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5933, i32 5936), !dbg !1765
  call void @printDDep(i32 5933, i32 5936), !dbg !1765
  %2135 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2135, i32 5939, i32 79, i32 5), !dbg !1765
  %2136 = load i32, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5919, i32 5939), !dbg !1765
  call void @printDDep(i32 5926, i32 5939), !dbg !1765
  %xor1542.i.i = xor i32 %2136, %2134, !dbg !1765
  %2137 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2137, i32 5943, i32 79, i32 5), !dbg !1765
  store i32 %xor1542.i.i, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5933, i32 5943), !dbg !1765
  call void @printDDep(i32 5939, i32 5943), !dbg !1765
  %2138 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2138, i32 5946, i32 79, i32 5), !dbg !1765
  %2139 = load i32, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5933, i32 5946), !dbg !1765
  call void @printDDep(i32 5936, i32 5946), !dbg !1765
  %shl1543.i.i = shl i32 %2139, 8, !dbg !1765
  %2140 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2140, i32 5950, i32 79, i32 5), !dbg !1765
  %2141 = load i32, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5908, i32 5950), !dbg !1765
  call void @printDDep(i32 5922, i32 5950), !dbg !1765
  %xor1544.i.i = xor i32 %2141, %shl1543.i.i, !dbg !1765
  %2142 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2142, i32 5954, i32 79, i32 5), !dbg !1765
  store i32 %xor1544.i.i, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5943, i32 5954), !dbg !1765
  call void @printDDep(i32 5950, i32 5954), !dbg !1765
  %2143 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2143, i32 5957, i32 79, i32 5), !dbg !1765
  %2144 = load i32, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5943, i32 5957), !dbg !1765
  call void @printDDep(i32 5943, i32 5957), !dbg !1765
  %shr1545.i.i = lshr i32 %2144, 2, !dbg !1765
  %2145 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2145, i32 5961, i32 79, i32 5), !dbg !1765
  %2146 = load i32, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5954, i32 5961), !dbg !1765
  call void @printDDep(i32 5954, i32 5961), !dbg !1765
  %xor1546.i.i = xor i32 %shr1545.i.i, %2146, !dbg !1765
  %conv1547.i.i = zext i32 %xor1546.i.i to i64, !dbg !1765
  %and1548.i.i = and i64 %conv1547.i.i, 858993459, !dbg !1765
  %conv1549.i.i = trunc i64 %and1548.i.i to i32, !dbg !1765
  %2147 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2147, i32 5968, i32 79, i32 5), !dbg !1765
  store i32 %conv1549.i.i, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5954, i32 5968), !dbg !1765
  call void @printDDep(i32 5946, i32 5968), !dbg !1765
  %2148 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2148, i32 5971, i32 79, i32 5), !dbg !1765
  %2149 = load i32, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5968, i32 5971), !dbg !1765
  call void @printDDep(i32 5968, i32 5971), !dbg !1765
  %2150 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2150, i32 5974, i32 79, i32 5), !dbg !1765
  %2151 = load i32, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5954, i32 5974), !dbg !1765
  call void @printDDep(i32 5961, i32 5974), !dbg !1765
  %xor1550.i.i = xor i32 %2151, %2149, !dbg !1765
  %2152 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2152, i32 5978, i32 79, i32 5), !dbg !1765
  store i32 %xor1550.i.i, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5968, i32 5978), !dbg !1765
  call void @printDDep(i32 5974, i32 5978), !dbg !1765
  %2153 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2153, i32 5981, i32 79, i32 5), !dbg !1765
  %2154 = load i32, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5968, i32 5981), !dbg !1765
  call void @printDDep(i32 5971, i32 5981), !dbg !1765
  %shl1551.i.i = shl i32 %2154, 2, !dbg !1765
  %2155 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2155, i32 5985, i32 79, i32 5), !dbg !1765
  %2156 = load i32, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5943, i32 5985), !dbg !1765
  call void @printDDep(i32 5957, i32 5985), !dbg !1765
  %xor1552.i.i = xor i32 %2156, %shl1551.i.i, !dbg !1765
  %2157 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2157, i32 5989, i32 79, i32 5), !dbg !1765
  store i32 %xor1552.i.i, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5978, i32 5989), !dbg !1765
  call void @printDDep(i32 5985, i32 5989), !dbg !1765
  %2158 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2158, i32 5992, i32 79, i32 5), !dbg !1765
  %2159 = load i32, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5978, i32 5992), !dbg !1765
  call void @printDDep(i32 5978, i32 5992), !dbg !1765
  %shr1553.i.i = lshr i32 %2159, 16, !dbg !1765
  %2160 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2160, i32 5996, i32 79, i32 5), !dbg !1765
  %2161 = load i32, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5989, i32 5996), !dbg !1765
  call void @printDDep(i32 5989, i32 5996), !dbg !1765
  %xor1554.i.i = xor i32 %shr1553.i.i, %2161, !dbg !1765
  %conv1555.i.i = zext i32 %xor1554.i.i to i64, !dbg !1765
  %and1556.i.i = and i64 %conv1555.i.i, 65535, !dbg !1765
  %conv1557.i.i = trunc i64 %and1556.i.i to i32, !dbg !1765
  %2162 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2162, i32 6003, i32 79, i32 5), !dbg !1765
  store i32 %conv1557.i.i, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5989, i32 6003), !dbg !1765
  call void @printDDep(i32 5981, i32 6003), !dbg !1765
  %2163 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2163, i32 6006, i32 79, i32 5), !dbg !1765
  %2164 = load i32, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6003, i32 6006), !dbg !1765
  call void @printDDep(i32 6003, i32 6006), !dbg !1765
  %2165 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2165, i32 6009, i32 79, i32 5), !dbg !1765
  %2166 = load i32, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5989, i32 6009), !dbg !1765
  call void @printDDep(i32 5996, i32 6009), !dbg !1765
  %xor1558.i.i = xor i32 %2166, %2164, !dbg !1765
  %2167 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2167, i32 6013, i32 79, i32 5), !dbg !1765
  store i32 %xor1558.i.i, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6003, i32 6013), !dbg !1765
  call void @printDDep(i32 6009, i32 6013), !dbg !1765
  %2168 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2168, i32 6016, i32 79, i32 5), !dbg !1765
  %2169 = load i32, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6003, i32 6016), !dbg !1765
  call void @printDDep(i32 6006, i32 6016), !dbg !1765
  %shl1559.i.i = shl i32 %2169, 16, !dbg !1765
  %2170 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2170, i32 6020, i32 79, i32 5), !dbg !1765
  %2171 = load i32, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 5978, i32 6020), !dbg !1765
  call void @printDDep(i32 5992, i32 6020), !dbg !1765
  %xor1560.i.i = xor i32 %2171, %shl1559.i.i, !dbg !1765
  %2172 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2172, i32 6024, i32 79, i32 5), !dbg !1765
  store i32 %xor1560.i.i, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6013, i32 6024), !dbg !1765
  call void @printDDep(i32 6020, i32 6024), !dbg !1765
  %2173 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2173, i32 6027, i32 79, i32 5), !dbg !1765
  %2174 = load i32, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6013, i32 6027), !dbg !1765
  call void @printDDep(i32 6013, i32 6027), !dbg !1765
  %shr1561.i.i = lshr i32 %2174, 4, !dbg !1765
  %2175 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2175, i32 6031, i32 79, i32 5), !dbg !1765
  %2176 = load i32, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6024, i32 6031), !dbg !1765
  call void @printDDep(i32 6024, i32 6031), !dbg !1765
  %xor1562.i.i = xor i32 %shr1561.i.i, %2176, !dbg !1765
  %conv1563.i.i = zext i32 %xor1562.i.i to i64, !dbg !1765
  %and1564.i.i = and i64 %conv1563.i.i, 252645135, !dbg !1765
  %conv1565.i.i = trunc i64 %and1564.i.i to i32, !dbg !1765
  %2177 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2177, i32 6038, i32 79, i32 5), !dbg !1765
  store i32 %conv1565.i.i, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6024, i32 6038), !dbg !1765
  call void @printDDep(i32 6016, i32 6038), !dbg !1765
  %2178 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2178, i32 6041, i32 79, i32 5), !dbg !1765
  %2179 = load i32, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6038, i32 6041), !dbg !1765
  call void @printDDep(i32 6038, i32 6041), !dbg !1765
  %2180 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2180, i32 6044, i32 79, i32 5), !dbg !1765
  %2181 = load i32, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6024, i32 6044), !dbg !1765
  call void @printDDep(i32 6031, i32 6044), !dbg !1765
  %xor1566.i.i = xor i32 %2181, %2179, !dbg !1765
  %2182 = ptrtoint i32* %l.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2182, i32 6048, i32 79, i32 5), !dbg !1765
  store i32 %xor1566.i.i, i32* %l.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6038, i32 6048), !dbg !1765
  call void @printDDep(i32 6044, i32 6048), !dbg !1765
  %2183 = ptrtoint i32* %tt1528.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2183, i32 6051, i32 79, i32 5), !dbg !1765
  %2184 = load i32, i32* %tt1528.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6038, i32 6051), !dbg !1765
  call void @printDDep(i32 6041, i32 6051), !dbg !1765
  %shl1567.i.i = shl i32 %2184, 4, !dbg !1765
  %2185 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printLoadAddr(i64 %2185, i32 6055, i32 79, i32 5), !dbg !1765
  %2186 = load i32, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6013, i32 6055), !dbg !1765
  call void @printDDep(i32 6027, i32 6055), !dbg !1765
  %xor1568.i.i = xor i32 %2186, %shl1567.i.i, !dbg !1765
  %2187 = ptrtoint i32* %r.i.i to i64, !dbg !1765
  call void @printStoreAddr(i64 %2187, i32 6059, i32 79, i32 5), !dbg !1765
  store i32 %xor1568.i.i, i32* %r.i.i, align 4, !dbg !1765
  call void @printDDep(i32 6048, i32 6059), !dbg !1765
  call void @printDDep(i32 6055, i32 6059), !dbg !1765
  %2188 = ptrtoint i32* %l.i.i to i64, !dbg !1855
  call void @printLoadAddr(i64 %2188, i32 6062, i32 80, i32 15), !dbg !1855
  %2189 = load i32, i32* %l.i.i, align 4, !dbg !1855
  call void @printDDep(i32 6048, i32 6062), !dbg !1855
  call void @printDDep(i32 6048, i32 6062), !dbg !1855
  %2190 = ptrtoint i32** %data.addr.i.i to i64, !dbg !1856
  call void @printLoadAddr(i64 %2190, i32 6065, i32 80, i32 5), !dbg !1856
  %2191 = load i32*, i32** %data.addr.i.i, align 8, !dbg !1856
  call void @printDDep(i32 3221, i32 6065), !dbg !1856
  call void @printDDep(i32 5832, i32 6065), !dbg !1856
  call void @printDDep(i32 371, i32 6065), !dbg !1856
  %2192 = ptrtoint i32* %2191 to i64, !dbg !1857
  call void @printStoreAddr(i64 %2192, i32 6069, i32 80, i32 13), !dbg !1857
  store i32 %2189, i32* %2191, align 4, !dbg !1857
  call void @printDDep(i32 6059, i32 6069), !dbg !1857
  call void @printDDep(i32 6062, i32 6069), !dbg !1857
  %2193 = ptrtoint i32* %r.i.i to i64, !dbg !1858
  call void @printLoadAddr(i64 %2193, i32 6072, i32 81, i32 15), !dbg !1858
  %2194 = load i32, i32* %r.i.i, align 4, !dbg !1858
  call void @printDDep(i32 6069, i32 6072), !dbg !1858
  call void @printDDep(i32 6069, i32 6072), !dbg !1858
  %2195 = ptrtoint i32** %data.addr.i.i to i64, !dbg !1859
  call void @printLoadAddr(i64 %2195, i32 6075, i32 81, i32 5), !dbg !1859
  %2196 = load i32*, i32** %data.addr.i.i, align 8, !dbg !1859
  call void @printDDep(i32 3221, i32 6075), !dbg !1859
  call void @printDDep(i32 5832, i32 6075), !dbg !1859
  call void @printDDep(i32 6065, i32 6075), !dbg !1859
  %arrayidx1570.i.i = getelementptr inbounds i32, i32* %2196, i64 1, !dbg !1859
  %2197 = ptrtoint i32* %arrayidx1570.i.i to i64, !dbg !1860
  call void @printStoreAddr(i64 %2197, i32 6080, i32 81, i32 13), !dbg !1860
  store i32 %2194, i32* %arrayidx1570.i.i, align 4, !dbg !1860
  call void @printDDep(i32 6069, i32 6080), !dbg !1860
  call void @printDDep(i32 6072, i32 6080), !dbg !1860
  %2198 = ptrtoint i32* %u.i.i to i64, !dbg !1861
  call void @printStoreAddr(i64 %2198, i32 6083, i32 82, i32 19), !dbg !1861
  store i32 0, i32* %u.i.i, align 4, !dbg !1861
  call void @printDDep(i32 6080, i32 6083), !dbg !1861
  call void @printDDep(i32 6080, i32 6083), !dbg !1861
  %2199 = ptrtoint i32* %t.i.i to i64, !dbg !1862
  call void @printStoreAddr(i64 %2199, i32 6086, i32 82, i32 15), !dbg !1862
  store i32 0, i32* %t.i.i, align 4, !dbg !1862
  call void @printDDep(i32 6083, i32 6086), !dbg !1862
  call void @printDDep(i32 6080, i32 6086), !dbg !1862
  %2200 = ptrtoint i32* %r.i.i to i64, !dbg !1863
  call void @printStoreAddr(i64 %2200, i32 6089, i32 82, i32 11), !dbg !1863
  store i32 0, i32* %r.i.i, align 4, !dbg !1863
  call void @printDDep(i32 6086, i32 6089), !dbg !1863
  call void @printDDep(i32 6080, i32 6089), !dbg !1863
  %2201 = ptrtoint i32* %l.i.i to i64, !dbg !1864
  call void @printStoreAddr(i64 %2201, i32 6092, i32 82, i32 7), !dbg !1864
  store i32 0, i32* %l.i.i, align 4, !dbg !1864
  call void @printDDep(i32 6089, i32 6092), !dbg !1864
  call void @printDDep(i32 6080, i32 6092), !dbg !1864
  %arrayidx28.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0, !dbg !1865
  %2202 = ptrtoint i32* %arrayidx28.i to i64, !dbg !1865
  call void @printLoadAddr(i64 %2202, i32 6096, i32 314, i32 9), !dbg !1865
  %2203 = load i32, i32* %arrayidx28.i, align 4, !dbg !1865
  call void @printDDep(i32 6069, i32 6096), !dbg !1865
  call void @printDDep(i32 6080, i32 6096), !dbg !1865
  %2204 = ptrtoint i32* %l.i to i64, !dbg !1866
  call void @printStoreAddr(i64 %2204, i32 6099, i32 314, i32 7), !dbg !1866
  store i32 %2203, i32* %l.i, align 4, !dbg !1866
  call void @printDDep(i32 6092, i32 6099), !dbg !1866
  call void @printDDep(i32 6080, i32 6099), !dbg !1866
  %2205 = ptrtoint i32* %l.i to i64, !dbg !1867
  call void @printLoadAddr(i64 %2205, i32 6102, i32 315, i32 5), !dbg !1867
  %2206 = load i32, i32* %l.i, align 4, !dbg !1867
  call void @printDDep(i32 6099, i32 6102), !dbg !1867
  call void @printDDep(i32 6099, i32 6102), !dbg !1867
  %and.i = and i32 %2206, 255, !dbg !1867
  %conv29.i = trunc i32 %and.i to i8, !dbg !1867
  %2207 = ptrtoint i8** %out.i to i64, !dbg !1867
  call void @printLoadAddr(i64 %2207, i32 6107, i32 315, i32 5), !dbg !1867
  %2208 = load i8*, i8** %out.i, align 8, !dbg !1867
  call void @printDDep(i32 3221, i32 6107), !dbg !1867
  call void @printDDep(i32 5832, i32 6107), !dbg !1867
  call void @printDDep(i32 187, i32 6107), !dbg !1867
  %incdec.ptr30.i = getelementptr inbounds i8, i8* %2208, i32 1, !dbg !1867
  %2209 = ptrtoint i8** %out.i to i64, !dbg !1867
  call void @printStoreAddr(i64 %2209, i32 6112, i32 315, i32 5), !dbg !1867
  store i8* %incdec.ptr30.i, i8** %out.i, align 8, !dbg !1867
  call void @printDDep(i32 6099, i32 6112), !dbg !1867
  call void @printDDep(i32 6107, i32 6112), !dbg !1867
  %2210 = ptrtoint i8* %2208 to i64, !dbg !1867
  call void @printStoreAddr(i64 %2210, i32 6115, i32 315, i32 5), !dbg !1867
  store i8 %conv29.i, i8* %2208, align 1, !dbg !1867
  call void @printDDep(i32 6112, i32 6115), !dbg !1867
  call void @printDDep(i32 6102, i32 6115), !dbg !1867
  %2211 = ptrtoint i32* %l.i to i64, !dbg !1867
  call void @printLoadAddr(i64 %2211, i32 6118, i32 315, i32 5), !dbg !1867
  %2212 = load i32, i32* %l.i, align 4, !dbg !1867
  call void @printDDep(i32 6115, i32 6118), !dbg !1867
  call void @printDDep(i32 6115, i32 6118), !dbg !1867
  %shr.i = lshr i32 %2212, 8, !dbg !1867
  %and31.i = and i32 %shr.i, 255, !dbg !1867
  %conv32.i = trunc i32 %and31.i to i8, !dbg !1867
  %2213 = ptrtoint i8** %out.i to i64, !dbg !1867
  call void @printLoadAddr(i64 %2213, i32 6124, i32 315, i32 5), !dbg !1867
  %2214 = load i8*, i8** %out.i, align 8, !dbg !1867
  call void @printDDep(i32 6112, i32 6124), !dbg !1867
  call void @printDDep(i32 6112, i32 6124), !dbg !1867
  %incdec.ptr33.i = getelementptr inbounds i8, i8* %2214, i32 1, !dbg !1867
  %2215 = ptrtoint i8** %out.i to i64, !dbg !1867
  call void @printStoreAddr(i64 %2215, i32 6128, i32 315, i32 5), !dbg !1867
  store i8* %incdec.ptr33.i, i8** %out.i, align 8, !dbg !1867
  call void @printDDep(i32 6115, i32 6128), !dbg !1867
  call void @printDDep(i32 6124, i32 6128), !dbg !1867
  %2216 = ptrtoint i8* %2214 to i64, !dbg !1867
  call void @printStoreAddr(i64 %2216, i32 6131, i32 315, i32 5), !dbg !1867
  store i8 %conv32.i, i8* %2214, align 1, !dbg !1867
  call void @printDDep(i32 6128, i32 6131), !dbg !1867
  call void @printDDep(i32 6118, i32 6131), !dbg !1867
  %2217 = ptrtoint i32* %l.i to i64, !dbg !1867
  call void @printLoadAddr(i64 %2217, i32 6134, i32 315, i32 5), !dbg !1867
  %2218 = load i32, i32* %l.i, align 4, !dbg !1867
  call void @printDDep(i32 6131, i32 6134), !dbg !1867
  call void @printDDep(i32 6131, i32 6134), !dbg !1867
  %shr34.i = lshr i32 %2218, 16, !dbg !1867
  %and35.i = and i32 %shr34.i, 255, !dbg !1867
  %conv36.i = trunc i32 %and35.i to i8, !dbg !1867
  %2219 = ptrtoint i8** %out.i to i64, !dbg !1867
  call void @printLoadAddr(i64 %2219, i32 6140, i32 315, i32 5), !dbg !1867
  %2220 = load i8*, i8** %out.i, align 8, !dbg !1867
  call void @printDDep(i32 6128, i32 6140), !dbg !1867
  call void @printDDep(i32 6128, i32 6140), !dbg !1867
  %incdec.ptr37.i = getelementptr inbounds i8, i8* %2220, i32 1, !dbg !1867
  %2221 = ptrtoint i8** %out.i to i64, !dbg !1867
  call void @printStoreAddr(i64 %2221, i32 6144, i32 315, i32 5), !dbg !1867
  store i8* %incdec.ptr37.i, i8** %out.i, align 8, !dbg !1867
  call void @printDDep(i32 6131, i32 6144), !dbg !1867
  call void @printDDep(i32 6140, i32 6144), !dbg !1867
  %2222 = ptrtoint i8* %2220 to i64, !dbg !1867
  call void @printStoreAddr(i64 %2222, i32 6147, i32 315, i32 5), !dbg !1867
  store i8 %conv36.i, i8* %2220, align 1, !dbg !1867
  call void @printDDep(i32 6144, i32 6147), !dbg !1867
  call void @printDDep(i32 6134, i32 6147), !dbg !1867
  %2223 = ptrtoint i32* %l.i to i64, !dbg !1867
  call void @printLoadAddr(i64 %2223, i32 6150, i32 315, i32 5), !dbg !1867
  %2224 = load i32, i32* %l.i, align 4, !dbg !1867
  call void @printDDep(i32 6147, i32 6150), !dbg !1867
  call void @printDDep(i32 6147, i32 6150), !dbg !1867
  %shr38.i = lshr i32 %2224, 24, !dbg !1867
  %conv40.i = trunc i32 %shr38.i to i8, !dbg !1867
  %2225 = ptrtoint i8** %out.i to i64, !dbg !1867
  call void @printLoadAddr(i64 %2225, i32 6155, i32 315, i32 5), !dbg !1867
  %2226 = load i8*, i8** %out.i, align 8, !dbg !1867
  call void @printDDep(i32 6144, i32 6155), !dbg !1867
  call void @printDDep(i32 6144, i32 6155), !dbg !1867
  %incdec.ptr41.i = getelementptr inbounds i8, i8* %2226, i32 1, !dbg !1867
  %2227 = ptrtoint i8** %out.i to i64, !dbg !1867
  call void @printStoreAddr(i64 %2227, i32 6159, i32 315, i32 5), !dbg !1867
  store i8* %incdec.ptr41.i, i8** %out.i, align 8, !dbg !1867
  call void @printDDep(i32 6147, i32 6159), !dbg !1867
  call void @printDDep(i32 6155, i32 6159), !dbg !1867
  %2228 = ptrtoint i8* %2226 to i64, !dbg !1867
  call void @printStoreAddr(i64 %2228, i32 6162, i32 315, i32 5), !dbg !1867
  store i8 %conv40.i, i8* %2226, align 1, !dbg !1867
  call void @printDDep(i32 6159, i32 6162), !dbg !1867
  call void @printDDep(i32 6150, i32 6162), !dbg !1867
  %arrayidx42.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 1, !dbg !1868
  %2229 = ptrtoint i32* %arrayidx42.i to i64, !dbg !1868
  call void @printLoadAddr(i64 %2229, i32 6166, i32 316, i32 9), !dbg !1868
  %2230 = load i32, i32* %arrayidx42.i, align 4, !dbg !1868
  call void @printDDep(i32 6162, i32 6166), !dbg !1868
  call void @printDDep(i32 6162, i32 6166), !dbg !1868
  %2231 = ptrtoint i32* %l.i to i64, !dbg !1869
  call void @printStoreAddr(i64 %2231, i32 6169, i32 316, i32 7), !dbg !1869
  store i32 %2230, i32* %l.i, align 4, !dbg !1869
  call void @printDDep(i32 6162, i32 6169), !dbg !1869
  call void @printDDep(i32 6162, i32 6169), !dbg !1869
  %2232 = ptrtoint i32* %l.i to i64, !dbg !1870
  call void @printLoadAddr(i64 %2232, i32 6172, i32 317, i32 5), !dbg !1870
  %2233 = load i32, i32* %l.i, align 4, !dbg !1870
  call void @printDDep(i32 6169, i32 6172), !dbg !1870
  call void @printDDep(i32 6169, i32 6172), !dbg !1870
  %and43.i = and i32 %2233, 255, !dbg !1870
  %conv44.i = trunc i32 %and43.i to i8, !dbg !1870
  %2234 = ptrtoint i8** %out.i to i64, !dbg !1870
  call void @printLoadAddr(i64 %2234, i32 6177, i32 317, i32 5), !dbg !1870
  %2235 = load i8*, i8** %out.i, align 8, !dbg !1870
  call void @printDDep(i32 6159, i32 6177), !dbg !1870
  call void @printDDep(i32 6159, i32 6177), !dbg !1870
  %incdec.ptr45.i = getelementptr inbounds i8, i8* %2235, i32 1, !dbg !1870
  %2236 = ptrtoint i8** %out.i to i64, !dbg !1870
  call void @printStoreAddr(i64 %2236, i32 6181, i32 317, i32 5), !dbg !1870
  store i8* %incdec.ptr45.i, i8** %out.i, align 8, !dbg !1870
  call void @printDDep(i32 6169, i32 6181), !dbg !1870
  call void @printDDep(i32 6177, i32 6181), !dbg !1870
  %2237 = ptrtoint i8* %2235 to i64, !dbg !1870
  call void @printStoreAddr(i64 %2237, i32 6184, i32 317, i32 5), !dbg !1870
  store i8 %conv44.i, i8* %2235, align 1, !dbg !1870
  call void @printDDep(i32 6181, i32 6184), !dbg !1870
  call void @printDDep(i32 6172, i32 6184), !dbg !1870
  %2238 = ptrtoint i32* %l.i to i64, !dbg !1870
  call void @printLoadAddr(i64 %2238, i32 6187, i32 317, i32 5), !dbg !1870
  %2239 = load i32, i32* %l.i, align 4, !dbg !1870
  call void @printDDep(i32 6184, i32 6187), !dbg !1870
  call void @printDDep(i32 6184, i32 6187), !dbg !1870
  %shr46.i = lshr i32 %2239, 8, !dbg !1870
  %and47.i = and i32 %shr46.i, 255, !dbg !1870
  %conv48.i = trunc i32 %and47.i to i8, !dbg !1870
  %2240 = ptrtoint i8** %out.i to i64, !dbg !1870
  call void @printLoadAddr(i64 %2240, i32 6193, i32 317, i32 5), !dbg !1870
  %2241 = load i8*, i8** %out.i, align 8, !dbg !1870
  call void @printDDep(i32 6181, i32 6193), !dbg !1870
  call void @printDDep(i32 6181, i32 6193), !dbg !1870
  %incdec.ptr49.i = getelementptr inbounds i8, i8* %2241, i32 1, !dbg !1870
  %2242 = ptrtoint i8** %out.i to i64, !dbg !1870
  call void @printStoreAddr(i64 %2242, i32 6197, i32 317, i32 5), !dbg !1870
  store i8* %incdec.ptr49.i, i8** %out.i, align 8, !dbg !1870
  call void @printDDep(i32 6184, i32 6197), !dbg !1870
  call void @printDDep(i32 6193, i32 6197), !dbg !1870
  %2243 = ptrtoint i8* %2241 to i64, !dbg !1870
  call void @printStoreAddr(i64 %2243, i32 6200, i32 317, i32 5), !dbg !1870
  store i8 %conv48.i, i8* %2241, align 1, !dbg !1870
  call void @printDDep(i32 6197, i32 6200), !dbg !1870
  call void @printDDep(i32 6187, i32 6200), !dbg !1870
  %2244 = ptrtoint i32* %l.i to i64, !dbg !1870
  call void @printLoadAddr(i64 %2244, i32 6203, i32 317, i32 5), !dbg !1870
  %2245 = load i32, i32* %l.i, align 4, !dbg !1870
  call void @printDDep(i32 6200, i32 6203), !dbg !1870
  call void @printDDep(i32 6200, i32 6203), !dbg !1870
  %shr50.i = lshr i32 %2245, 16, !dbg !1870
  %and51.i = and i32 %shr50.i, 255, !dbg !1870
  %conv52.i = trunc i32 %and51.i to i8, !dbg !1870
  %2246 = ptrtoint i8** %out.i to i64, !dbg !1870
  call void @printLoadAddr(i64 %2246, i32 6209, i32 317, i32 5), !dbg !1870
  %2247 = load i8*, i8** %out.i, align 8, !dbg !1870
  call void @printDDep(i32 6197, i32 6209), !dbg !1870
  call void @printDDep(i32 6197, i32 6209), !dbg !1870
  %incdec.ptr53.i = getelementptr inbounds i8, i8* %2247, i32 1, !dbg !1870
  %2248 = ptrtoint i8** %out.i to i64, !dbg !1870
  call void @printStoreAddr(i64 %2248, i32 6213, i32 317, i32 5), !dbg !1870
  store i8* %incdec.ptr53.i, i8** %out.i, align 8, !dbg !1870
  call void @printDDep(i32 6200, i32 6213), !dbg !1870
  call void @printDDep(i32 6209, i32 6213), !dbg !1870
  %2249 = ptrtoint i8* %2247 to i64, !dbg !1870
  call void @printStoreAddr(i64 %2249, i32 6216, i32 317, i32 5), !dbg !1870
  store i8 %conv52.i, i8* %2247, align 1, !dbg !1870
  call void @printDDep(i32 6213, i32 6216), !dbg !1870
  call void @printDDep(i32 6203, i32 6216), !dbg !1870
  %2250 = ptrtoint i32* %l.i to i64, !dbg !1870
  call void @printLoadAddr(i64 %2250, i32 6219, i32 317, i32 5), !dbg !1870
  %2251 = load i32, i32* %l.i, align 4, !dbg !1870
  call void @printDDep(i32 6216, i32 6219), !dbg !1870
  call void @printDDep(i32 6216, i32 6219), !dbg !1870
  %shr54.i = lshr i32 %2251, 24, !dbg !1870
  %conv56.i = trunc i32 %shr54.i to i8, !dbg !1870
  %2252 = ptrtoint i8** %out.i to i64, !dbg !1870
  call void @printLoadAddr(i64 %2252, i32 6224, i32 317, i32 5), !dbg !1870
  %2253 = load i8*, i8** %out.i, align 8, !dbg !1870
  call void @printDDep(i32 6213, i32 6224), !dbg !1870
  call void @printDDep(i32 6213, i32 6224), !dbg !1870
  %incdec.ptr57.i = getelementptr inbounds i8, i8* %2253, i32 1, !dbg !1870
  %2254 = ptrtoint i8** %out.i to i64, !dbg !1870
  call void @printStoreAddr(i64 %2254, i32 6228, i32 317, i32 5), !dbg !1870
  store i8* %incdec.ptr57.i, i8** %out.i, align 8, !dbg !1870
  call void @printDDep(i32 6216, i32 6228), !dbg !1870
  call void @printDDep(i32 6224, i32 6228), !dbg !1870
  %2255 = ptrtoint i8* %2253 to i64, !dbg !1870
  call void @printStoreAddr(i64 %2255, i32 6231, i32 317, i32 5), !dbg !1870
  store i8 %conv56.i, i8* %2253, align 1, !dbg !1870
  call void @printDDep(i32 6228, i32 6231), !dbg !1870
  call void @printDDep(i32 6219, i32 6231), !dbg !1870
  %arrayidx58.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 1, !dbg !1871
  %2256 = ptrtoint i32* %arrayidx58.i to i64, !dbg !1872
  call void @printStoreAddr(i64 %2256, i32 6235, i32 318, i32 23), !dbg !1872
  store i32 0, i32* %arrayidx58.i, align 4, !dbg !1872
  call void @printDDep(i32 6231, i32 6235), !dbg !1872
  call void @printDDep(i32 6231, i32 6235), !dbg !1872
  %arrayidx59.i = getelementptr inbounds [2 x i32], [2 x i32]* %ll.i, i64 0, i64 0, !dbg !1873
  %2257 = ptrtoint i32* %arrayidx59.i to i64, !dbg !1874
  call void @printStoreAddr(i64 %2257, i32 6239, i32 318, i32 15), !dbg !1874
  store i32 0, i32* %arrayidx59.i, align 4, !dbg !1874
  call void @printDDep(i32 6235, i32 6239), !dbg !1874
  call void @printDDep(i32 6231, i32 6239), !dbg !1874
  %2258 = ptrtoint i32* %l.i to i64, !dbg !1875
  call void @printStoreAddr(i64 %2258, i32 6242, i32 318, i32 7), !dbg !1875
  store i32 0, i32* %l.i, align 4, !dbg !1875
  call void @printDDep(i32 6239, i32 6242), !dbg !1875
  call void @printDDep(i32 6231, i32 6242), !dbg !1875
  %2259 = load i32, i32* %InstCounter, !dbg !1876
  %2260 = add nsw i32 188, %2259, !dbg !1876
  store i32 %2260, i32* %InstCounter, !dbg !1876
  %2261 = load volatile i32, i32* %InstCounter, !dbg !1876
  call void @printCounter(i32 %2261), !dbg !1876
  ret i32 0, !dbg !1876
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i32 @DES_key_sched([8 x i8]*, %struct.DES_ks*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @printDDep(i32 %ID1, i32 %ID2) #2 {
entry:
  %ID1.addr = alloca i32, align 4
  %ID2.addr = alloca i32, align 4
  store i32 %ID1, i32* %ID1.addr, align 4
  store i32 %ID2, i32* %ID2.addr, align 4
  %0 = load i32, i32* %ID1.addr, align 4
  %1 = load i32, i32* %ID2.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 %0, i32 %1)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @printCDep(i32 %ID1, i32 %ID2) #2 {
entry:
  %ID1.addr = alloca i32, align 4
  %ID2.addr = alloca i32, align 4
  store i32 %ID1, i32* %ID1.addr, align 4
  store i32 %ID2, i32* %ID2.addr, align 4
  %0 = load i32, i32* %ID1.addr, align 4
  %1 = load i32, i32* %ID2.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 %0, i32 %1)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @printStoreAddr(i64 %addr, i32 %ID, i32 %LineLoc, i32 %ColLoc) #2 {
entry:
  %addr.addr = alloca i64, align 8
  %ID.addr = alloca i32, align 4
  %LineLoc.addr = alloca i32, align 4
  %ColLoc.addr = alloca i32, align 4
  store i64 %addr, i64* %addr.addr, align 8
  store i32 %ID, i32* %ID.addr, align 4
  store i32 %LineLoc, i32* %LineLoc.addr, align 4
  store i32 %ColLoc, i32* %ColLoc.addr, align 4
  %0 = load i64, i64* %addr.addr, align 8
  %1 = load i32, i32* %ID.addr, align 4
  %2 = load i32, i32* %LineLoc.addr, align 4
  %3 = load i32, i32* %ColLoc.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i64 %0, i32 %1, i32 %2, i32 %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @printLoadAddr(i64 %addr, i32 %ID, i32 %LineLoc, i32 %ColLoc) #2 {
entry:
  %addr.addr = alloca i64, align 8
  %ID.addr = alloca i32, align 4
  %LineLoc.addr = alloca i32, align 4
  %ColLoc.addr = alloca i32, align 4
  store i64 %addr, i64* %addr.addr, align 8
  store i32 %ID, i32* %ID.addr, align 4
  store i32 %LineLoc, i32* %LineLoc.addr, align 4
  store i32 %ColLoc, i32* %ColLoc.addr, align 4
  %0 = load i64, i64* %addr.addr, align 8
  %1 = load i32, i32* %ID.addr, align 4
  %2 = load i32, i32* %LineLoc.addr, align 4
  %3 = load i32, i32* %ColLoc.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i64 %0, i32 %1, i32 %2, i32 %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @printCounter(i32 %counter) #2 {
entry:
  %counter.addr = alloca i32, align 4
  store i32 %counter, i32* %counter.addr, align 4
  %0 = load i32, i32* %counter.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i32 %0)
  ret void
}

attributes #0 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.ident = !{!18, !18}
!llvm.module.flags = !{!19, !20, !21}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "DES_SPtrans", scope: !2, file: !12, line: 10, type: !13, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !11, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "Cipher/des_enc.c", directory: "/home/phil/Documents/github/cache-symbolic/crypto_test")
!4 = !{}
!5 = !{!6, !7, !10}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "DES_LONG", file: !8, line: 21, baseType: !9)
!8 = !DIFile(filename: "/usr/local/include/openssl/des.h", directory: "")
!9 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!10 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!11 = !{!0}
!12 = !DIFile(filename: "Cipher/spr.h", directory: "/home/phil/Documents/github/cache-symbolic/crypto_test")
!13 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 16384, elements: !15)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!15 = !{!16, !17}
!16 = !DISubrange(count: 8)
!17 = !DISubrange(count: 64)
!18 = !{!"clang version 10.0.0 "}
!19 = !{i32 7, !"Dwarf Version", i32 4}
!20 = !{i32 2, !"Debug Info Version", i32 3}
!21 = !{i32 1, !"wchar_size", i32 4}
!22 = distinct !DISubprogram(name: "DES_encrypt1", scope: !3, file: !3, line: 14, type: !23, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!23 = !DISubroutineType(types: !24)
!24 = !{null, !6, !25, !43}
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "DES_key_schedule", file: !8, line: 43, baseType: !27)
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DES_ks", file: !8, line: 35, size: 1024, elements: !28)
!28 = !{!29}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "ks", scope: !27, file: !8, line: 42, baseType: !30, size: 1024)
!30 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 1024, elements: !41)
!31 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !27, file: !8, line: 36, size: 64, elements: !32)
!32 = !{!33, !37}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "cblock", scope: !31, file: !8, line: 37, baseType: !34, size: 64)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "DES_cblock", file: !8, line: 28, baseType: !35)
!35 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 64, elements: !36)
!36 = !{!16}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "deslong", scope: !31, file: !8, line: 41, baseType: !38, size: 64)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !39)
!39 = !{!40}
!40 = !DISubrange(count: 2)
!41 = !{!42}
!42 = !DISubrange(count: 16)
!43 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!44 = !DILocalVariable(name: "data", arg: 1, scope: !22, file: !3, line: 14, type: !6)
!45 = !DILocation(line: 14, column: 29, scope: !22)
!46 = !DILocalVariable(name: "ks", arg: 2, scope: !22, file: !3, line: 14, type: !25)
!47 = !DILocation(line: 14, column: 53, scope: !22)
!48 = !DILocalVariable(name: "enc", arg: 3, scope: !22, file: !3, line: 14, type: !43)
!49 = !DILocation(line: 14, column: 61, scope: !22)
!50 = !DILocalVariable(name: "l", scope: !22, file: !3, line: 16, type: !7)
!51 = !DILocation(line: 16, column: 23, scope: !22)
!52 = !DILocalVariable(name: "r", scope: !22, file: !3, line: 16, type: !7)
!53 = !DILocation(line: 16, column: 26, scope: !22)
!54 = !DILocalVariable(name: "t", scope: !22, file: !3, line: 16, type: !7)
!55 = !DILocation(line: 16, column: 29, scope: !22)
!56 = !DILocalVariable(name: "u", scope: !22, file: !3, line: 16, type: !7)
!57 = !DILocation(line: 16, column: 32, scope: !22)
!58 = !DILocalVariable(name: "s", scope: !22, file: !3, line: 17, type: !6)
!59 = !DILocation(line: 17, column: 24, scope: !22)
!60 = !DILocation(line: 19, column: 9, scope: !22)
!61 = !DILocation(line: 19, column: 7, scope: !22)
!62 = !DILocation(line: 20, column: 9, scope: !22)
!63 = !DILocation(line: 20, column: 7, scope: !22)
!64 = !DILocalVariable(name: "tt", scope: !65, file: !3, line: 22, type: !7)
!65 = distinct !DILexicalBlock(scope: !22, file: !3, line: 22, column: 5)
!66 = !DILocation(line: 22, column: 5, scope: !65)
!67 = !DILocalVariable(name: "ret", scope: !68, file: !3, line: 31, type: !9)
!68 = distinct !DILexicalBlock(scope: !22, file: !3, line: 31, column: 9)
!69 = !DILocation(line: 31, column: 9, scope: !68)
!70 = !{i32 -2146870789}
!71 = !DILocation(line: 31, column: 9, scope: !22)
!72 = !DILocation(line: 31, column: 23, scope: !22)
!73 = !DILocation(line: 31, column: 7, scope: !22)
!74 = !DILocalVariable(name: "ret", scope: !75, file: !3, line: 32, type: !9)
!75 = distinct !DILexicalBlock(scope: !22, file: !3, line: 32, column: 9)
!76 = !DILocation(line: 32, column: 9, scope: !75)
!77 = !{i32 -2146870433}
!78 = !DILocation(line: 32, column: 9, scope: !22)
!79 = !DILocation(line: 32, column: 23, scope: !22)
!80 = !DILocation(line: 32, column: 7, scope: !22)
!81 = !DILocation(line: 34, column: 9, scope: !22)
!82 = !DILocation(line: 34, column: 13, scope: !22)
!83 = !DILocation(line: 34, column: 17, scope: !22)
!84 = !DILocation(line: 34, column: 7, scope: !22)
!85 = !DILocation(line: 39, column: 9, scope: !86)
!86 = distinct !DILexicalBlock(scope: !22, file: !3, line: 39, column: 9)
!87 = !DILocation(line: 39, column: 9, scope: !22)
!88 = !DILocation(line: 40, column: 9, scope: !89)
!89 = distinct !DILexicalBlock(scope: !90, file: !3, line: 40, column: 9)
!90 = distinct !DILexicalBlock(scope: !86, file: !3, line: 39, column: 14)
!91 = !DILocalVariable(name: "ret", scope: !92, file: !3, line: 40, type: !9)
!92 = distinct !DILexicalBlock(scope: !89, file: !3, line: 40, column: 9)
!93 = !DILocation(line: 40, column: 9, scope: !92)
!94 = !{i32 -2146869543}
!95 = !DILocation(line: 41, column: 9, scope: !96)
!96 = distinct !DILexicalBlock(scope: !90, file: !3, line: 41, column: 9)
!97 = !DILocalVariable(name: "ret", scope: !98, file: !3, line: 41, type: !9)
!98 = distinct !DILexicalBlock(scope: !96, file: !3, line: 41, column: 9)
!99 = !DILocation(line: 41, column: 9, scope: !98)
!100 = !{i32 -2146868654}
!101 = !DILocation(line: 42, column: 9, scope: !102)
!102 = distinct !DILexicalBlock(scope: !90, file: !3, line: 42, column: 9)
!103 = !DILocalVariable(name: "ret", scope: !104, file: !3, line: 42, type: !9)
!104 = distinct !DILexicalBlock(scope: !102, file: !3, line: 42, column: 9)
!105 = !DILocation(line: 42, column: 9, scope: !104)
!106 = !{i32 -2146867765}
!107 = !DILocation(line: 43, column: 9, scope: !108)
!108 = distinct !DILexicalBlock(scope: !90, file: !3, line: 43, column: 9)
!109 = !DILocalVariable(name: "ret", scope: !110, file: !3, line: 43, type: !9)
!110 = distinct !DILexicalBlock(scope: !108, file: !3, line: 43, column: 9)
!111 = !DILocation(line: 43, column: 9, scope: !110)
!112 = !{i32 -2146866876}
!113 = !DILocation(line: 44, column: 9, scope: !114)
!114 = distinct !DILexicalBlock(scope: !90, file: !3, line: 44, column: 9)
!115 = !DILocalVariable(name: "ret", scope: !116, file: !3, line: 44, type: !9)
!116 = distinct !DILexicalBlock(scope: !114, file: !3, line: 44, column: 9)
!117 = !DILocation(line: 44, column: 9, scope: !116)
!118 = !{i32 -2146865987}
!119 = !DILocation(line: 45, column: 9, scope: !120)
!120 = distinct !DILexicalBlock(scope: !90, file: !3, line: 45, column: 9)
!121 = !DILocalVariable(name: "ret", scope: !122, file: !3, line: 45, type: !9)
!122 = distinct !DILexicalBlock(scope: !120, file: !3, line: 45, column: 9)
!123 = !DILocation(line: 45, column: 9, scope: !122)
!124 = !{i32 -2146865094}
!125 = !DILocation(line: 46, column: 9, scope: !126)
!126 = distinct !DILexicalBlock(scope: !90, file: !3, line: 46, column: 9)
!127 = !DILocalVariable(name: "ret", scope: !128, file: !3, line: 46, type: !9)
!128 = distinct !DILexicalBlock(scope: !126, file: !3, line: 46, column: 9)
!129 = !DILocation(line: 46, column: 9, scope: !128)
!130 = !{i32 -2146864201}
!131 = !DILocation(line: 47, column: 9, scope: !132)
!132 = distinct !DILexicalBlock(scope: !90, file: !3, line: 47, column: 9)
!133 = !DILocalVariable(name: "ret", scope: !134, file: !3, line: 47, type: !9)
!134 = distinct !DILexicalBlock(scope: !132, file: !3, line: 47, column: 9)
!135 = !DILocation(line: 47, column: 9, scope: !134)
!136 = !{i32 -2146863308}
!137 = !DILocation(line: 48, column: 9, scope: !138)
!138 = distinct !DILexicalBlock(scope: !90, file: !3, line: 48, column: 9)
!139 = !DILocalVariable(name: "ret", scope: !140, file: !3, line: 48, type: !9)
!140 = distinct !DILexicalBlock(scope: !138, file: !3, line: 48, column: 9)
!141 = !DILocation(line: 48, column: 9, scope: !140)
!142 = !{i32 -2146862415}
!143 = !DILocation(line: 49, column: 9, scope: !144)
!144 = distinct !DILexicalBlock(scope: !90, file: !3, line: 49, column: 9)
!145 = !DILocalVariable(name: "ret", scope: !146, file: !3, line: 49, type: !9)
!146 = distinct !DILexicalBlock(scope: !144, file: !3, line: 49, column: 9)
!147 = !DILocation(line: 49, column: 9, scope: !146)
!148 = !{i32 -2146861522}
!149 = !DILocation(line: 50, column: 9, scope: !150)
!150 = distinct !DILexicalBlock(scope: !90, file: !3, line: 50, column: 9)
!151 = !DILocalVariable(name: "ret", scope: !152, file: !3, line: 50, type: !9)
!152 = distinct !DILexicalBlock(scope: !150, file: !3, line: 50, column: 9)
!153 = !DILocation(line: 50, column: 9, scope: !152)
!154 = !{i32 -2146860629}
!155 = !DILocation(line: 51, column: 9, scope: !156)
!156 = distinct !DILexicalBlock(scope: !90, file: !3, line: 51, column: 9)
!157 = !DILocalVariable(name: "ret", scope: !158, file: !3, line: 51, type: !9)
!158 = distinct !DILexicalBlock(scope: !156, file: !3, line: 51, column: 9)
!159 = !DILocation(line: 51, column: 9, scope: !158)
!160 = !{i32 -2146859736}
!161 = !DILocation(line: 52, column: 9, scope: !162)
!162 = distinct !DILexicalBlock(scope: !90, file: !3, line: 52, column: 9)
!163 = !DILocalVariable(name: "ret", scope: !164, file: !3, line: 52, type: !9)
!164 = distinct !DILexicalBlock(scope: !162, file: !3, line: 52, column: 9)
!165 = !DILocation(line: 52, column: 9, scope: !164)
!166 = !{i32 -2146858843}
!167 = !DILocation(line: 53, column: 9, scope: !168)
!168 = distinct !DILexicalBlock(scope: !90, file: !3, line: 53, column: 9)
!169 = !DILocalVariable(name: "ret", scope: !170, file: !3, line: 53, type: !9)
!170 = distinct !DILexicalBlock(scope: !168, file: !3, line: 53, column: 9)
!171 = !DILocation(line: 53, column: 9, scope: !170)
!172 = !{i32 -2146857950}
!173 = !DILocation(line: 54, column: 9, scope: !174)
!174 = distinct !DILexicalBlock(scope: !90, file: !3, line: 54, column: 9)
!175 = !DILocalVariable(name: "ret", scope: !176, file: !3, line: 54, type: !9)
!176 = distinct !DILexicalBlock(scope: !174, file: !3, line: 54, column: 9)
!177 = !DILocation(line: 54, column: 9, scope: !176)
!178 = !{i32 -2146857057}
!179 = !DILocation(line: 55, column: 9, scope: !180)
!180 = distinct !DILexicalBlock(scope: !90, file: !3, line: 55, column: 9)
!181 = !DILocalVariable(name: "ret", scope: !182, file: !3, line: 55, type: !9)
!182 = distinct !DILexicalBlock(scope: !180, file: !3, line: 55, column: 9)
!183 = !DILocation(line: 55, column: 9, scope: !182)
!184 = !{i32 -2146856164}
!185 = !DILocation(line: 56, column: 5, scope: !90)
!186 = !DILocation(line: 57, column: 9, scope: !187)
!187 = distinct !DILexicalBlock(scope: !188, file: !3, line: 57, column: 9)
!188 = distinct !DILexicalBlock(scope: !86, file: !3, line: 56, column: 12)
!189 = !DILocalVariable(name: "ret", scope: !190, file: !3, line: 57, type: !9)
!190 = distinct !DILexicalBlock(scope: !187, file: !3, line: 57, column: 9)
!191 = !DILocation(line: 57, column: 9, scope: !190)
!192 = !{i32 -2146855271}
!193 = !DILocation(line: 58, column: 9, scope: !194)
!194 = distinct !DILexicalBlock(scope: !188, file: !3, line: 58, column: 9)
!195 = !DILocalVariable(name: "ret", scope: !196, file: !3, line: 58, type: !9)
!196 = distinct !DILexicalBlock(scope: !194, file: !3, line: 58, column: 9)
!197 = !DILocation(line: 58, column: 9, scope: !196)
!198 = !{i32 -2146854378}
!199 = !DILocation(line: 59, column: 9, scope: !200)
!200 = distinct !DILexicalBlock(scope: !188, file: !3, line: 59, column: 9)
!201 = !DILocalVariable(name: "ret", scope: !202, file: !3, line: 59, type: !9)
!202 = distinct !DILexicalBlock(scope: !200, file: !3, line: 59, column: 9)
!203 = !DILocation(line: 59, column: 9, scope: !202)
!204 = !{i32 -2146853485}
!205 = !DILocation(line: 60, column: 9, scope: !206)
!206 = distinct !DILexicalBlock(scope: !188, file: !3, line: 60, column: 9)
!207 = !DILocalVariable(name: "ret", scope: !208, file: !3, line: 60, type: !9)
!208 = distinct !DILexicalBlock(scope: !206, file: !3, line: 60, column: 9)
!209 = !DILocation(line: 60, column: 9, scope: !208)
!210 = !{i32 -2146852592}
!211 = !DILocation(line: 61, column: 9, scope: !212)
!212 = distinct !DILexicalBlock(scope: !188, file: !3, line: 61, column: 9)
!213 = !DILocalVariable(name: "ret", scope: !214, file: !3, line: 61, type: !9)
!214 = distinct !DILexicalBlock(scope: !212, file: !3, line: 61, column: 9)
!215 = !DILocation(line: 61, column: 9, scope: !214)
!216 = !{i32 -2146851699}
!217 = !DILocation(line: 62, column: 9, scope: !218)
!218 = distinct !DILexicalBlock(scope: !188, file: !3, line: 62, column: 9)
!219 = !DILocalVariable(name: "ret", scope: !220, file: !3, line: 62, type: !9)
!220 = distinct !DILexicalBlock(scope: !218, file: !3, line: 62, column: 9)
!221 = !DILocation(line: 62, column: 9, scope: !220)
!222 = !{i32 -2146850806}
!223 = !DILocation(line: 63, column: 9, scope: !224)
!224 = distinct !DILexicalBlock(scope: !188, file: !3, line: 63, column: 9)
!225 = !DILocalVariable(name: "ret", scope: !226, file: !3, line: 63, type: !9)
!226 = distinct !DILexicalBlock(scope: !224, file: !3, line: 63, column: 9)
!227 = !DILocation(line: 63, column: 9, scope: !226)
!228 = !{i32 -2146849913}
!229 = !DILocation(line: 64, column: 9, scope: !230)
!230 = distinct !DILexicalBlock(scope: !188, file: !3, line: 64, column: 9)
!231 = !DILocalVariable(name: "ret", scope: !232, file: !3, line: 64, type: !9)
!232 = distinct !DILexicalBlock(scope: !230, file: !3, line: 64, column: 9)
!233 = !DILocation(line: 64, column: 9, scope: !232)
!234 = !{i32 -2146849020}
!235 = !DILocation(line: 65, column: 9, scope: !236)
!236 = distinct !DILexicalBlock(scope: !188, file: !3, line: 65, column: 9)
!237 = !DILocalVariable(name: "ret", scope: !238, file: !3, line: 65, type: !9)
!238 = distinct !DILexicalBlock(scope: !236, file: !3, line: 65, column: 9)
!239 = !DILocation(line: 65, column: 9, scope: !238)
!240 = !{i32 -2146848127}
!241 = !DILocation(line: 66, column: 9, scope: !242)
!242 = distinct !DILexicalBlock(scope: !188, file: !3, line: 66, column: 9)
!243 = !DILocalVariable(name: "ret", scope: !244, file: !3, line: 66, type: !9)
!244 = distinct !DILexicalBlock(scope: !242, file: !3, line: 66, column: 9)
!245 = !DILocation(line: 66, column: 9, scope: !244)
!246 = !{i32 -2146847234}
!247 = !DILocation(line: 67, column: 9, scope: !248)
!248 = distinct !DILexicalBlock(scope: !188, file: !3, line: 67, column: 9)
!249 = !DILocalVariable(name: "ret", scope: !250, file: !3, line: 67, type: !9)
!250 = distinct !DILexicalBlock(scope: !248, file: !3, line: 67, column: 9)
!251 = !DILocation(line: 67, column: 9, scope: !250)
!252 = !{i32 -2146846341}
!253 = !DILocation(line: 68, column: 9, scope: !254)
!254 = distinct !DILexicalBlock(scope: !188, file: !3, line: 68, column: 9)
!255 = !DILocalVariable(name: "ret", scope: !256, file: !3, line: 68, type: !9)
!256 = distinct !DILexicalBlock(scope: !254, file: !3, line: 68, column: 9)
!257 = !DILocation(line: 68, column: 9, scope: !256)
!258 = !{i32 -2146845452}
!259 = !DILocation(line: 69, column: 9, scope: !260)
!260 = distinct !DILexicalBlock(scope: !188, file: !3, line: 69, column: 9)
!261 = !DILocalVariable(name: "ret", scope: !262, file: !3, line: 69, type: !9)
!262 = distinct !DILexicalBlock(scope: !260, file: !3, line: 69, column: 9)
!263 = !DILocation(line: 69, column: 9, scope: !262)
!264 = !{i32 -2146844563}
!265 = !DILocation(line: 70, column: 9, scope: !266)
!266 = distinct !DILexicalBlock(scope: !188, file: !3, line: 70, column: 9)
!267 = !DILocalVariable(name: "ret", scope: !268, file: !3, line: 70, type: !9)
!268 = distinct !DILexicalBlock(scope: !266, file: !3, line: 70, column: 9)
!269 = !DILocation(line: 70, column: 9, scope: !268)
!270 = !{i32 -2146843674}
!271 = !DILocation(line: 71, column: 9, scope: !272)
!272 = distinct !DILexicalBlock(scope: !188, file: !3, line: 71, column: 9)
!273 = !DILocalVariable(name: "ret", scope: !274, file: !3, line: 71, type: !9)
!274 = distinct !DILexicalBlock(scope: !272, file: !3, line: 71, column: 9)
!275 = !DILocation(line: 71, column: 9, scope: !274)
!276 = !{i32 -2146842785}
!277 = !DILocation(line: 72, column: 9, scope: !278)
!278 = distinct !DILexicalBlock(scope: !188, file: !3, line: 72, column: 9)
!279 = !DILocalVariable(name: "ret", scope: !280, file: !3, line: 72, type: !9)
!280 = distinct !DILexicalBlock(scope: !278, file: !3, line: 72, column: 9)
!281 = !DILocation(line: 72, column: 9, scope: !280)
!282 = !{i32 -2146841896}
!283 = !DILocalVariable(name: "ret", scope: !284, file: !3, line: 76, type: !9)
!284 = distinct !DILexicalBlock(scope: !22, file: !3, line: 76, column: 9)
!285 = !DILocation(line: 76, column: 9, scope: !284)
!286 = !{i32 -2146841541}
!287 = !DILocation(line: 76, column: 9, scope: !22)
!288 = !DILocation(line: 76, column: 22, scope: !22)
!289 = !DILocation(line: 76, column: 7, scope: !22)
!290 = !DILocalVariable(name: "ret", scope: !291, file: !3, line: 77, type: !9)
!291 = distinct !DILexicalBlock(scope: !22, file: !3, line: 77, column: 9)
!292 = !DILocation(line: 77, column: 9, scope: !291)
!293 = !{i32 -2146841186}
!294 = !DILocation(line: 77, column: 9, scope: !22)
!295 = !DILocation(line: 77, column: 22, scope: !22)
!296 = !DILocation(line: 77, column: 7, scope: !22)
!297 = !DILocalVariable(name: "tt", scope: !298, file: !3, line: 79, type: !7)
!298 = distinct !DILexicalBlock(scope: !22, file: !3, line: 79, column: 5)
!299 = !DILocation(line: 79, column: 5, scope: !298)
!300 = !DILocation(line: 80, column: 15, scope: !22)
!301 = !DILocation(line: 80, column: 5, scope: !22)
!302 = !DILocation(line: 80, column: 13, scope: !22)
!303 = !DILocation(line: 81, column: 15, scope: !22)
!304 = !DILocation(line: 81, column: 5, scope: !22)
!305 = !DILocation(line: 81, column: 13, scope: !22)
!306 = !DILocation(line: 82, column: 19, scope: !22)
!307 = !DILocation(line: 82, column: 15, scope: !22)
!308 = !DILocation(line: 82, column: 11, scope: !22)
!309 = !DILocation(line: 82, column: 7, scope: !22)
!310 = !DILocation(line: 83, column: 1, scope: !22)
!311 = distinct !DISubprogram(name: "DES_encrypt2", scope: !3, file: !3, line: 85, type: !23, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!312 = !DILocalVariable(name: "data", arg: 1, scope: !311, file: !3, line: 85, type: !6)
!313 = !DILocation(line: 85, column: 29, scope: !311)
!314 = !DILocalVariable(name: "ks", arg: 2, scope: !311, file: !3, line: 85, type: !25)
!315 = !DILocation(line: 85, column: 53, scope: !311)
!316 = !DILocalVariable(name: "enc", arg: 3, scope: !311, file: !3, line: 85, type: !43)
!317 = !DILocation(line: 85, column: 61, scope: !311)
!318 = !DILocalVariable(name: "l", scope: !311, file: !3, line: 87, type: !7)
!319 = !DILocation(line: 87, column: 23, scope: !311)
!320 = !DILocalVariable(name: "r", scope: !311, file: !3, line: 87, type: !7)
!321 = !DILocation(line: 87, column: 26, scope: !311)
!322 = !DILocalVariable(name: "t", scope: !311, file: !3, line: 87, type: !7)
!323 = !DILocation(line: 87, column: 29, scope: !311)
!324 = !DILocalVariable(name: "u", scope: !311, file: !3, line: 87, type: !7)
!325 = !DILocation(line: 87, column: 32, scope: !311)
!326 = !DILocalVariable(name: "s", scope: !311, file: !3, line: 88, type: !6)
!327 = !DILocation(line: 88, column: 24, scope: !311)
!328 = !DILocation(line: 90, column: 9, scope: !311)
!329 = !DILocation(line: 90, column: 7, scope: !311)
!330 = !DILocation(line: 91, column: 9, scope: !311)
!331 = !DILocation(line: 91, column: 7, scope: !311)
!332 = !DILocalVariable(name: "ret", scope: !333, file: !3, line: 100, type: !9)
!333 = distinct !DILexicalBlock(scope: !311, file: !3, line: 100, column: 9)
!334 = !DILocation(line: 100, column: 9, scope: !333)
!335 = !{i32 -2146840018}
!336 = !DILocation(line: 100, column: 9, scope: !311)
!337 = !DILocation(line: 100, column: 23, scope: !311)
!338 = !DILocation(line: 100, column: 7, scope: !311)
!339 = !DILocalVariable(name: "ret", scope: !340, file: !3, line: 101, type: !9)
!340 = distinct !DILexicalBlock(scope: !311, file: !3, line: 101, column: 9)
!341 = !DILocation(line: 101, column: 9, scope: !340)
!342 = !{i32 -2146839662}
!343 = !DILocation(line: 101, column: 9, scope: !311)
!344 = !DILocation(line: 101, column: 23, scope: !311)
!345 = !DILocation(line: 101, column: 7, scope: !311)
!346 = !DILocation(line: 103, column: 9, scope: !311)
!347 = !DILocation(line: 103, column: 13, scope: !311)
!348 = !DILocation(line: 103, column: 17, scope: !311)
!349 = !DILocation(line: 103, column: 7, scope: !311)
!350 = !DILocation(line: 108, column: 9, scope: !351)
!351 = distinct !DILexicalBlock(scope: !311, file: !3, line: 108, column: 9)
!352 = !DILocation(line: 108, column: 9, scope: !311)
!353 = !DILocation(line: 109, column: 9, scope: !354)
!354 = distinct !DILexicalBlock(scope: !355, file: !3, line: 109, column: 9)
!355 = distinct !DILexicalBlock(scope: !351, file: !3, line: 108, column: 14)
!356 = !DILocalVariable(name: "ret", scope: !357, file: !3, line: 109, type: !9)
!357 = distinct !DILexicalBlock(scope: !354, file: !3, line: 109, column: 9)
!358 = !DILocation(line: 109, column: 9, scope: !357)
!359 = !{i32 -2146838772}
!360 = !DILocation(line: 110, column: 9, scope: !361)
!361 = distinct !DILexicalBlock(scope: !355, file: !3, line: 110, column: 9)
!362 = !DILocalVariable(name: "ret", scope: !363, file: !3, line: 110, type: !9)
!363 = distinct !DILexicalBlock(scope: !361, file: !3, line: 110, column: 9)
!364 = !DILocation(line: 110, column: 9, scope: !363)
!365 = !{i32 -2146837883}
!366 = !DILocation(line: 111, column: 9, scope: !367)
!367 = distinct !DILexicalBlock(scope: !355, file: !3, line: 111, column: 9)
!368 = !DILocalVariable(name: "ret", scope: !369, file: !3, line: 111, type: !9)
!369 = distinct !DILexicalBlock(scope: !367, file: !3, line: 111, column: 9)
!370 = !DILocation(line: 111, column: 9, scope: !369)
!371 = !{i32 -2146836994}
!372 = !DILocation(line: 112, column: 9, scope: !373)
!373 = distinct !DILexicalBlock(scope: !355, file: !3, line: 112, column: 9)
!374 = !DILocalVariable(name: "ret", scope: !375, file: !3, line: 112, type: !9)
!375 = distinct !DILexicalBlock(scope: !373, file: !3, line: 112, column: 9)
!376 = !DILocation(line: 112, column: 9, scope: !375)
!377 = !{i32 -2146836105}
!378 = !DILocation(line: 113, column: 9, scope: !379)
!379 = distinct !DILexicalBlock(scope: !355, file: !3, line: 113, column: 9)
!380 = !DILocalVariable(name: "ret", scope: !381, file: !3, line: 113, type: !9)
!381 = distinct !DILexicalBlock(scope: !379, file: !3, line: 113, column: 9)
!382 = !DILocation(line: 113, column: 9, scope: !381)
!383 = !{i32 -2146835216}
!384 = !DILocation(line: 114, column: 9, scope: !385)
!385 = distinct !DILexicalBlock(scope: !355, file: !3, line: 114, column: 9)
!386 = !DILocalVariable(name: "ret", scope: !387, file: !3, line: 114, type: !9)
!387 = distinct !DILexicalBlock(scope: !385, file: !3, line: 114, column: 9)
!388 = !DILocation(line: 114, column: 9, scope: !387)
!389 = !{i32 -2146834323}
!390 = !DILocation(line: 115, column: 9, scope: !391)
!391 = distinct !DILexicalBlock(scope: !355, file: !3, line: 115, column: 9)
!392 = !DILocalVariable(name: "ret", scope: !393, file: !3, line: 115, type: !9)
!393 = distinct !DILexicalBlock(scope: !391, file: !3, line: 115, column: 9)
!394 = !DILocation(line: 115, column: 9, scope: !393)
!395 = !{i32 -2146833430}
!396 = !DILocation(line: 116, column: 9, scope: !397)
!397 = distinct !DILexicalBlock(scope: !355, file: !3, line: 116, column: 9)
!398 = !DILocalVariable(name: "ret", scope: !399, file: !3, line: 116, type: !9)
!399 = distinct !DILexicalBlock(scope: !397, file: !3, line: 116, column: 9)
!400 = !DILocation(line: 116, column: 9, scope: !399)
!401 = !{i32 -2146832537}
!402 = !DILocation(line: 117, column: 9, scope: !403)
!403 = distinct !DILexicalBlock(scope: !355, file: !3, line: 117, column: 9)
!404 = !DILocalVariable(name: "ret", scope: !405, file: !3, line: 117, type: !9)
!405 = distinct !DILexicalBlock(scope: !403, file: !3, line: 117, column: 9)
!406 = !DILocation(line: 117, column: 9, scope: !405)
!407 = !{i32 -2146831644}
!408 = !DILocation(line: 118, column: 9, scope: !409)
!409 = distinct !DILexicalBlock(scope: !355, file: !3, line: 118, column: 9)
!410 = !DILocalVariable(name: "ret", scope: !411, file: !3, line: 118, type: !9)
!411 = distinct !DILexicalBlock(scope: !409, file: !3, line: 118, column: 9)
!412 = !DILocation(line: 118, column: 9, scope: !411)
!413 = !{i32 -2146830751}
!414 = !DILocation(line: 119, column: 9, scope: !415)
!415 = distinct !DILexicalBlock(scope: !355, file: !3, line: 119, column: 9)
!416 = !DILocalVariable(name: "ret", scope: !417, file: !3, line: 119, type: !9)
!417 = distinct !DILexicalBlock(scope: !415, file: !3, line: 119, column: 9)
!418 = !DILocation(line: 119, column: 9, scope: !417)
!419 = !{i32 -2146829858}
!420 = !DILocation(line: 120, column: 9, scope: !421)
!421 = distinct !DILexicalBlock(scope: !355, file: !3, line: 120, column: 9)
!422 = !DILocalVariable(name: "ret", scope: !423, file: !3, line: 120, type: !9)
!423 = distinct !DILexicalBlock(scope: !421, file: !3, line: 120, column: 9)
!424 = !DILocation(line: 120, column: 9, scope: !423)
!425 = !{i32 -2146828965}
!426 = !DILocation(line: 121, column: 9, scope: !427)
!427 = distinct !DILexicalBlock(scope: !355, file: !3, line: 121, column: 9)
!428 = !DILocalVariable(name: "ret", scope: !429, file: !3, line: 121, type: !9)
!429 = distinct !DILexicalBlock(scope: !427, file: !3, line: 121, column: 9)
!430 = !DILocation(line: 121, column: 9, scope: !429)
!431 = !{i32 -2146828072}
!432 = !DILocation(line: 122, column: 9, scope: !433)
!433 = distinct !DILexicalBlock(scope: !355, file: !3, line: 122, column: 9)
!434 = !DILocalVariable(name: "ret", scope: !435, file: !3, line: 122, type: !9)
!435 = distinct !DILexicalBlock(scope: !433, file: !3, line: 122, column: 9)
!436 = !DILocation(line: 122, column: 9, scope: !435)
!437 = !{i32 -2146827179}
!438 = !DILocation(line: 123, column: 9, scope: !439)
!439 = distinct !DILexicalBlock(scope: !355, file: !3, line: 123, column: 9)
!440 = !DILocalVariable(name: "ret", scope: !441, file: !3, line: 123, type: !9)
!441 = distinct !DILexicalBlock(scope: !439, file: !3, line: 123, column: 9)
!442 = !DILocation(line: 123, column: 9, scope: !441)
!443 = !{i32 -2146826286}
!444 = !DILocation(line: 124, column: 9, scope: !445)
!445 = distinct !DILexicalBlock(scope: !355, file: !3, line: 124, column: 9)
!446 = !DILocalVariable(name: "ret", scope: !447, file: !3, line: 124, type: !9)
!447 = distinct !DILexicalBlock(scope: !445, file: !3, line: 124, column: 9)
!448 = !DILocation(line: 124, column: 9, scope: !447)
!449 = !{i32 -2146825393}
!450 = !DILocation(line: 125, column: 5, scope: !355)
!451 = !DILocation(line: 126, column: 9, scope: !452)
!452 = distinct !DILexicalBlock(scope: !453, file: !3, line: 126, column: 9)
!453 = distinct !DILexicalBlock(scope: !351, file: !3, line: 125, column: 12)
!454 = !DILocalVariable(name: "ret", scope: !455, file: !3, line: 126, type: !9)
!455 = distinct !DILexicalBlock(scope: !452, file: !3, line: 126, column: 9)
!456 = !DILocation(line: 126, column: 9, scope: !455)
!457 = !{i32 -2146824500}
!458 = !DILocation(line: 127, column: 9, scope: !459)
!459 = distinct !DILexicalBlock(scope: !453, file: !3, line: 127, column: 9)
!460 = !DILocalVariable(name: "ret", scope: !461, file: !3, line: 127, type: !9)
!461 = distinct !DILexicalBlock(scope: !459, file: !3, line: 127, column: 9)
!462 = !DILocation(line: 127, column: 9, scope: !461)
!463 = !{i32 -2146823607}
!464 = !DILocation(line: 128, column: 9, scope: !465)
!465 = distinct !DILexicalBlock(scope: !453, file: !3, line: 128, column: 9)
!466 = !DILocalVariable(name: "ret", scope: !467, file: !3, line: 128, type: !9)
!467 = distinct !DILexicalBlock(scope: !465, file: !3, line: 128, column: 9)
!468 = !DILocation(line: 128, column: 9, scope: !467)
!469 = !{i32 -2146822714}
!470 = !DILocation(line: 129, column: 9, scope: !471)
!471 = distinct !DILexicalBlock(scope: !453, file: !3, line: 129, column: 9)
!472 = !DILocalVariable(name: "ret", scope: !473, file: !3, line: 129, type: !9)
!473 = distinct !DILexicalBlock(scope: !471, file: !3, line: 129, column: 9)
!474 = !DILocation(line: 129, column: 9, scope: !473)
!475 = !{i32 -2146821821}
!476 = !DILocation(line: 130, column: 9, scope: !477)
!477 = distinct !DILexicalBlock(scope: !453, file: !3, line: 130, column: 9)
!478 = !DILocalVariable(name: "ret", scope: !479, file: !3, line: 130, type: !9)
!479 = distinct !DILexicalBlock(scope: !477, file: !3, line: 130, column: 9)
!480 = !DILocation(line: 130, column: 9, scope: !479)
!481 = !{i32 -2146820928}
!482 = !DILocation(line: 131, column: 9, scope: !483)
!483 = distinct !DILexicalBlock(scope: !453, file: !3, line: 131, column: 9)
!484 = !DILocalVariable(name: "ret", scope: !485, file: !3, line: 131, type: !9)
!485 = distinct !DILexicalBlock(scope: !483, file: !3, line: 131, column: 9)
!486 = !DILocation(line: 131, column: 9, scope: !485)
!487 = !{i32 -2146820035}
!488 = !DILocation(line: 132, column: 9, scope: !489)
!489 = distinct !DILexicalBlock(scope: !453, file: !3, line: 132, column: 9)
!490 = !DILocalVariable(name: "ret", scope: !491, file: !3, line: 132, type: !9)
!491 = distinct !DILexicalBlock(scope: !489, file: !3, line: 132, column: 9)
!492 = !DILocation(line: 132, column: 9, scope: !491)
!493 = !{i32 -2146819142}
!494 = !DILocation(line: 133, column: 9, scope: !495)
!495 = distinct !DILexicalBlock(scope: !453, file: !3, line: 133, column: 9)
!496 = !DILocalVariable(name: "ret", scope: !497, file: !3, line: 133, type: !9)
!497 = distinct !DILexicalBlock(scope: !495, file: !3, line: 133, column: 9)
!498 = !DILocation(line: 133, column: 9, scope: !497)
!499 = !{i32 -2146818249}
!500 = !DILocation(line: 134, column: 9, scope: !501)
!501 = distinct !DILexicalBlock(scope: !453, file: !3, line: 134, column: 9)
!502 = !DILocalVariable(name: "ret", scope: !503, file: !3, line: 134, type: !9)
!503 = distinct !DILexicalBlock(scope: !501, file: !3, line: 134, column: 9)
!504 = !DILocation(line: 134, column: 9, scope: !503)
!505 = !{i32 -2146817356}
!506 = !DILocation(line: 135, column: 9, scope: !507)
!507 = distinct !DILexicalBlock(scope: !453, file: !3, line: 135, column: 9)
!508 = !DILocalVariable(name: "ret", scope: !509, file: !3, line: 135, type: !9)
!509 = distinct !DILexicalBlock(scope: !507, file: !3, line: 135, column: 9)
!510 = !DILocation(line: 135, column: 9, scope: !509)
!511 = !{i32 -2146816463}
!512 = !DILocation(line: 136, column: 9, scope: !513)
!513 = distinct !DILexicalBlock(scope: !453, file: !3, line: 136, column: 9)
!514 = !DILocalVariable(name: "ret", scope: !515, file: !3, line: 136, type: !9)
!515 = distinct !DILexicalBlock(scope: !513, file: !3, line: 136, column: 9)
!516 = !DILocation(line: 136, column: 9, scope: !515)
!517 = !{i32 -2146815570}
!518 = !DILocation(line: 137, column: 9, scope: !519)
!519 = distinct !DILexicalBlock(scope: !453, file: !3, line: 137, column: 9)
!520 = !DILocalVariable(name: "ret", scope: !521, file: !3, line: 137, type: !9)
!521 = distinct !DILexicalBlock(scope: !519, file: !3, line: 137, column: 9)
!522 = !DILocation(line: 137, column: 9, scope: !521)
!523 = !{i32 -2146814681}
!524 = !DILocation(line: 138, column: 9, scope: !525)
!525 = distinct !DILexicalBlock(scope: !453, file: !3, line: 138, column: 9)
!526 = !DILocalVariable(name: "ret", scope: !527, file: !3, line: 138, type: !9)
!527 = distinct !DILexicalBlock(scope: !525, file: !3, line: 138, column: 9)
!528 = !DILocation(line: 138, column: 9, scope: !527)
!529 = !{i32 -2146813792}
!530 = !DILocation(line: 139, column: 9, scope: !531)
!531 = distinct !DILexicalBlock(scope: !453, file: !3, line: 139, column: 9)
!532 = !DILocalVariable(name: "ret", scope: !533, file: !3, line: 139, type: !9)
!533 = distinct !DILexicalBlock(scope: !531, file: !3, line: 139, column: 9)
!534 = !DILocation(line: 139, column: 9, scope: !533)
!535 = !{i32 -2146812903}
!536 = !DILocation(line: 140, column: 9, scope: !537)
!537 = distinct !DILexicalBlock(scope: !453, file: !3, line: 140, column: 9)
!538 = !DILocalVariable(name: "ret", scope: !539, file: !3, line: 140, type: !9)
!539 = distinct !DILexicalBlock(scope: !537, file: !3, line: 140, column: 9)
!540 = !DILocation(line: 140, column: 9, scope: !539)
!541 = !{i32 -2146812014}
!542 = !DILocation(line: 141, column: 9, scope: !543)
!543 = distinct !DILexicalBlock(scope: !453, file: !3, line: 141, column: 9)
!544 = !DILocalVariable(name: "ret", scope: !545, file: !3, line: 141, type: !9)
!545 = distinct !DILexicalBlock(scope: !543, file: !3, line: 141, column: 9)
!546 = !DILocation(line: 141, column: 9, scope: !545)
!547 = !{i32 -2146811125}
!548 = !DILocalVariable(name: "ret", scope: !549, file: !3, line: 144, type: !9)
!549 = distinct !DILexicalBlock(scope: !311, file: !3, line: 144, column: 15)
!550 = !DILocation(line: 144, column: 15, scope: !549)
!551 = !{i32 -2146810770}
!552 = !DILocation(line: 144, column: 15, scope: !311)
!553 = !DILocation(line: 144, column: 28, scope: !311)
!554 = !DILocation(line: 144, column: 5, scope: !311)
!555 = !DILocation(line: 144, column: 13, scope: !311)
!556 = !DILocalVariable(name: "ret", scope: !557, file: !3, line: 145, type: !9)
!557 = distinct !DILexicalBlock(scope: !311, file: !3, line: 145, column: 15)
!558 = !DILocation(line: 145, column: 15, scope: !557)
!559 = !{i32 -2146810415}
!560 = !DILocation(line: 145, column: 15, scope: !311)
!561 = !DILocation(line: 145, column: 28, scope: !311)
!562 = !DILocation(line: 145, column: 5, scope: !311)
!563 = !DILocation(line: 145, column: 13, scope: !311)
!564 = !DILocation(line: 146, column: 19, scope: !311)
!565 = !DILocation(line: 146, column: 15, scope: !311)
!566 = !DILocation(line: 146, column: 11, scope: !311)
!567 = !DILocation(line: 146, column: 7, scope: !311)
!568 = !DILocation(line: 147, column: 1, scope: !311)
!569 = distinct !DISubprogram(name: "DES_encrypt3", scope: !3, file: !3, line: 149, type: !570, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!570 = !DISubroutineType(types: !571)
!571 = !{null, !6, !25, !25, !25}
!572 = !DILocalVariable(name: "data", arg: 1, scope: !569, file: !3, line: 149, type: !6)
!573 = !DILocation(line: 149, column: 29, scope: !569)
!574 = !DILocalVariable(name: "ks1", arg: 2, scope: !569, file: !3, line: 149, type: !25)
!575 = !DILocation(line: 149, column: 53, scope: !569)
!576 = !DILocalVariable(name: "ks2", arg: 3, scope: !569, file: !3, line: 150, type: !25)
!577 = !DILocation(line: 150, column: 37, scope: !569)
!578 = !DILocalVariable(name: "ks3", arg: 4, scope: !569, file: !3, line: 150, type: !25)
!579 = !DILocation(line: 150, column: 60, scope: !569)
!580 = !DILocalVariable(name: "l", scope: !569, file: !3, line: 152, type: !7)
!581 = !DILocation(line: 152, column: 23, scope: !569)
!582 = !DILocalVariable(name: "r", scope: !569, file: !3, line: 152, type: !7)
!583 = !DILocation(line: 152, column: 26, scope: !569)
!584 = !DILocation(line: 154, column: 9, scope: !569)
!585 = !DILocation(line: 154, column: 7, scope: !569)
!586 = !DILocation(line: 155, column: 9, scope: !569)
!587 = !DILocation(line: 155, column: 7, scope: !569)
!588 = !DILocalVariable(name: "tt", scope: !589, file: !3, line: 156, type: !7)
!589 = distinct !DILexicalBlock(scope: !569, file: !3, line: 156, column: 5)
!590 = !DILocation(line: 156, column: 5, scope: !589)
!591 = !DILocation(line: 157, column: 15, scope: !569)
!592 = !DILocation(line: 157, column: 5, scope: !569)
!593 = !DILocation(line: 157, column: 13, scope: !569)
!594 = !DILocation(line: 158, column: 15, scope: !569)
!595 = !DILocation(line: 158, column: 5, scope: !569)
!596 = !DILocation(line: 158, column: 13, scope: !569)
!597 = !DILocation(line: 159, column: 30, scope: !569)
!598 = !DILocation(line: 159, column: 36, scope: !569)
!599 = !DILocation(line: 159, column: 5, scope: !569)
!600 = !DILocation(line: 160, column: 30, scope: !569)
!601 = !DILocation(line: 160, column: 36, scope: !569)
!602 = !DILocation(line: 160, column: 5, scope: !569)
!603 = !DILocation(line: 161, column: 30, scope: !569)
!604 = !DILocation(line: 161, column: 36, scope: !569)
!605 = !DILocation(line: 161, column: 5, scope: !569)
!606 = !DILocation(line: 162, column: 9, scope: !569)
!607 = !DILocation(line: 162, column: 7, scope: !569)
!608 = !DILocation(line: 163, column: 9, scope: !569)
!609 = !DILocation(line: 163, column: 7, scope: !569)
!610 = !DILocalVariable(name: "tt", scope: !611, file: !3, line: 164, type: !7)
!611 = distinct !DILexicalBlock(scope: !569, file: !3, line: 164, column: 5)
!612 = !DILocation(line: 164, column: 5, scope: !611)
!613 = !DILocation(line: 165, column: 15, scope: !569)
!614 = !DILocation(line: 165, column: 5, scope: !569)
!615 = !DILocation(line: 165, column: 13, scope: !569)
!616 = !DILocation(line: 166, column: 15, scope: !569)
!617 = !DILocation(line: 166, column: 5, scope: !569)
!618 = !DILocation(line: 166, column: 13, scope: !569)
!619 = !DILocation(line: 167, column: 1, scope: !569)
!620 = distinct !DISubprogram(name: "DES_decrypt3", scope: !3, file: !3, line: 169, type: !570, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!621 = !DILocalVariable(name: "data", arg: 1, scope: !620, file: !3, line: 169, type: !6)
!622 = !DILocation(line: 169, column: 29, scope: !620)
!623 = !DILocalVariable(name: "ks1", arg: 2, scope: !620, file: !3, line: 169, type: !25)
!624 = !DILocation(line: 169, column: 53, scope: !620)
!625 = !DILocalVariable(name: "ks2", arg: 3, scope: !620, file: !3, line: 170, type: !25)
!626 = !DILocation(line: 170, column: 37, scope: !620)
!627 = !DILocalVariable(name: "ks3", arg: 4, scope: !620, file: !3, line: 170, type: !25)
!628 = !DILocation(line: 170, column: 60, scope: !620)
!629 = !DILocalVariable(name: "l", scope: !620, file: !3, line: 172, type: !7)
!630 = !DILocation(line: 172, column: 23, scope: !620)
!631 = !DILocalVariable(name: "r", scope: !620, file: !3, line: 172, type: !7)
!632 = !DILocation(line: 172, column: 26, scope: !620)
!633 = !DILocation(line: 174, column: 9, scope: !620)
!634 = !DILocation(line: 174, column: 7, scope: !620)
!635 = !DILocation(line: 175, column: 9, scope: !620)
!636 = !DILocation(line: 175, column: 7, scope: !620)
!637 = !DILocalVariable(name: "tt", scope: !638, file: !3, line: 176, type: !7)
!638 = distinct !DILexicalBlock(scope: !620, file: !3, line: 176, column: 5)
!639 = !DILocation(line: 176, column: 5, scope: !638)
!640 = !DILocation(line: 177, column: 15, scope: !620)
!641 = !DILocation(line: 177, column: 5, scope: !620)
!642 = !DILocation(line: 177, column: 13, scope: !620)
!643 = !DILocation(line: 178, column: 15, scope: !620)
!644 = !DILocation(line: 178, column: 5, scope: !620)
!645 = !DILocation(line: 178, column: 13, scope: !620)
!646 = !DILocation(line: 179, column: 30, scope: !620)
!647 = !DILocation(line: 179, column: 36, scope: !620)
!648 = !DILocation(line: 179, column: 5, scope: !620)
!649 = !DILocation(line: 180, column: 30, scope: !620)
!650 = !DILocation(line: 180, column: 36, scope: !620)
!651 = !DILocation(line: 180, column: 5, scope: !620)
!652 = !DILocation(line: 181, column: 30, scope: !620)
!653 = !DILocation(line: 181, column: 36, scope: !620)
!654 = !DILocation(line: 181, column: 5, scope: !620)
!655 = !DILocation(line: 182, column: 9, scope: !620)
!656 = !DILocation(line: 182, column: 7, scope: !620)
!657 = !DILocation(line: 183, column: 9, scope: !620)
!658 = !DILocation(line: 183, column: 7, scope: !620)
!659 = !DILocalVariable(name: "tt", scope: !660, file: !3, line: 184, type: !7)
!660 = distinct !DILexicalBlock(scope: !620, file: !3, line: 184, column: 5)
!661 = !DILocation(line: 184, column: 5, scope: !660)
!662 = !DILocation(line: 185, column: 15, scope: !620)
!663 = !DILocation(line: 185, column: 5, scope: !620)
!664 = !DILocation(line: 185, column: 13, scope: !620)
!665 = !DILocation(line: 186, column: 15, scope: !620)
!666 = !DILocation(line: 186, column: 5, scope: !620)
!667 = !DILocation(line: 186, column: 13, scope: !620)
!668 = !DILocation(line: 187, column: 1, scope: !620)
!669 = distinct !DISubprogram(name: "DES_ncbc_encrypt", scope: !670, file: !670, line: 22, type: !671, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!670 = !DIFile(filename: "Cipher/ncbc_enc.c", directory: "/home/phil/Documents/github/cache-symbolic/crypto_test")
!671 = !DISubroutineType(types: !672)
!672 = !{null, !673, !675, !676, !25, !677, !43}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!676 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!678 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !679)
!679 = distinct !DILocation(line: 89, column: 13, scope: !680)
!680 = distinct !DILexicalBlock(scope: !681, file: !670, line: 84, column: 22)
!681 = distinct !DILexicalBlock(scope: !682, file: !670, line: 84, column: 13)
!682 = distinct !DILexicalBlock(scope: !683, file: !670, line: 68, column: 12)
!683 = distinct !DILexicalBlock(scope: !669, file: !670, line: 35, column: 9)
!684 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !679)
!685 = !DILocation(line: 14, column: 61, scope: !22, inlinedAt: !679)
!686 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !679)
!687 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !679)
!688 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !679)
!689 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !679)
!690 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !679)
!691 = !DILocation(line: 22, column: 5, scope: !65, inlinedAt: !679)
!692 = !DILocation(line: 31, column: 9, scope: !68, inlinedAt: !679)
!693 = !DILocation(line: 32, column: 9, scope: !75, inlinedAt: !679)
!694 = !DILocation(line: 40, column: 9, scope: !92, inlinedAt: !679)
!695 = !DILocation(line: 41, column: 9, scope: !98, inlinedAt: !679)
!696 = !DILocation(line: 42, column: 9, scope: !104, inlinedAt: !679)
!697 = !DILocation(line: 43, column: 9, scope: !110, inlinedAt: !679)
!698 = !DILocation(line: 44, column: 9, scope: !116, inlinedAt: !679)
!699 = !DILocation(line: 45, column: 9, scope: !122, inlinedAt: !679)
!700 = !DILocation(line: 46, column: 9, scope: !128, inlinedAt: !679)
!701 = !DILocation(line: 47, column: 9, scope: !134, inlinedAt: !679)
!702 = !DILocation(line: 48, column: 9, scope: !140, inlinedAt: !679)
!703 = !DILocation(line: 49, column: 9, scope: !146, inlinedAt: !679)
!704 = !DILocation(line: 50, column: 9, scope: !152, inlinedAt: !679)
!705 = !DILocation(line: 51, column: 9, scope: !158, inlinedAt: !679)
!706 = !DILocation(line: 52, column: 9, scope: !164, inlinedAt: !679)
!707 = !DILocation(line: 53, column: 9, scope: !170, inlinedAt: !679)
!708 = !DILocation(line: 54, column: 9, scope: !176, inlinedAt: !679)
!709 = !DILocation(line: 55, column: 9, scope: !182, inlinedAt: !679)
!710 = !DILocation(line: 57, column: 9, scope: !190, inlinedAt: !679)
!711 = !DILocation(line: 58, column: 9, scope: !196, inlinedAt: !679)
!712 = !DILocation(line: 59, column: 9, scope: !202, inlinedAt: !679)
!713 = !DILocation(line: 60, column: 9, scope: !208, inlinedAt: !679)
!714 = !DILocation(line: 61, column: 9, scope: !214, inlinedAt: !679)
!715 = !DILocation(line: 62, column: 9, scope: !220, inlinedAt: !679)
!716 = !DILocation(line: 63, column: 9, scope: !226, inlinedAt: !679)
!717 = !DILocation(line: 64, column: 9, scope: !232, inlinedAt: !679)
!718 = !DILocation(line: 65, column: 9, scope: !238, inlinedAt: !679)
!719 = !DILocation(line: 66, column: 9, scope: !244, inlinedAt: !679)
!720 = !DILocation(line: 67, column: 9, scope: !250, inlinedAt: !679)
!721 = !DILocation(line: 68, column: 9, scope: !256, inlinedAt: !679)
!722 = !DILocation(line: 69, column: 9, scope: !262, inlinedAt: !679)
!723 = !DILocation(line: 70, column: 9, scope: !268, inlinedAt: !679)
!724 = !DILocation(line: 71, column: 9, scope: !274, inlinedAt: !679)
!725 = !DILocation(line: 72, column: 9, scope: !280, inlinedAt: !679)
!726 = !DILocation(line: 76, column: 9, scope: !284, inlinedAt: !679)
!727 = !DILocation(line: 77, column: 9, scope: !291, inlinedAt: !679)
!728 = !DILocation(line: 79, column: 5, scope: !298, inlinedAt: !679)
!729 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !730)
!730 = distinct !DILocation(line: 76, column: 13, scope: !731)
!731 = distinct !DILexicalBlock(scope: !732, file: !670, line: 71, column: 38)
!732 = distinct !DILexicalBlock(scope: !733, file: !670, line: 71, column: 9)
!733 = distinct !DILexicalBlock(scope: !682, file: !670, line: 71, column: 9)
!734 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !730)
!735 = !DILocation(line: 14, column: 61, scope: !22, inlinedAt: !730)
!736 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !730)
!737 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !730)
!738 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !730)
!739 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !730)
!740 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !730)
!741 = !DILocation(line: 22, column: 5, scope: !65, inlinedAt: !730)
!742 = !DILocation(line: 31, column: 9, scope: !68, inlinedAt: !730)
!743 = !DILocation(line: 32, column: 9, scope: !75, inlinedAt: !730)
!744 = !DILocation(line: 40, column: 9, scope: !92, inlinedAt: !730)
!745 = !DILocation(line: 41, column: 9, scope: !98, inlinedAt: !730)
!746 = !DILocation(line: 42, column: 9, scope: !104, inlinedAt: !730)
!747 = !DILocation(line: 43, column: 9, scope: !110, inlinedAt: !730)
!748 = !DILocation(line: 44, column: 9, scope: !116, inlinedAt: !730)
!749 = !DILocation(line: 45, column: 9, scope: !122, inlinedAt: !730)
!750 = !DILocation(line: 46, column: 9, scope: !128, inlinedAt: !730)
!751 = !DILocation(line: 47, column: 9, scope: !134, inlinedAt: !730)
!752 = !DILocation(line: 48, column: 9, scope: !140, inlinedAt: !730)
!753 = !DILocation(line: 49, column: 9, scope: !146, inlinedAt: !730)
!754 = !DILocation(line: 50, column: 9, scope: !152, inlinedAt: !730)
!755 = !DILocation(line: 51, column: 9, scope: !158, inlinedAt: !730)
!756 = !DILocation(line: 52, column: 9, scope: !164, inlinedAt: !730)
!757 = !DILocation(line: 53, column: 9, scope: !170, inlinedAt: !730)
!758 = !DILocation(line: 54, column: 9, scope: !176, inlinedAt: !730)
!759 = !DILocation(line: 55, column: 9, scope: !182, inlinedAt: !730)
!760 = !DILocation(line: 57, column: 9, scope: !190, inlinedAt: !730)
!761 = !DILocation(line: 58, column: 9, scope: !196, inlinedAt: !730)
!762 = !DILocation(line: 59, column: 9, scope: !202, inlinedAt: !730)
!763 = !DILocation(line: 60, column: 9, scope: !208, inlinedAt: !730)
!764 = !DILocation(line: 61, column: 9, scope: !214, inlinedAt: !730)
!765 = !DILocation(line: 62, column: 9, scope: !220, inlinedAt: !730)
!766 = !DILocation(line: 63, column: 9, scope: !226, inlinedAt: !730)
!767 = !DILocation(line: 64, column: 9, scope: !232, inlinedAt: !730)
!768 = !DILocation(line: 65, column: 9, scope: !238, inlinedAt: !730)
!769 = !DILocation(line: 66, column: 9, scope: !244, inlinedAt: !730)
!770 = !DILocation(line: 67, column: 9, scope: !250, inlinedAt: !730)
!771 = !DILocation(line: 68, column: 9, scope: !256, inlinedAt: !730)
!772 = !DILocation(line: 69, column: 9, scope: !262, inlinedAt: !730)
!773 = !DILocation(line: 70, column: 9, scope: !268, inlinedAt: !730)
!774 = !DILocation(line: 71, column: 9, scope: !274, inlinedAt: !730)
!775 = !DILocation(line: 72, column: 9, scope: !280, inlinedAt: !730)
!776 = !DILocation(line: 76, column: 9, scope: !284, inlinedAt: !730)
!777 = !DILocation(line: 77, column: 9, scope: !291, inlinedAt: !730)
!778 = !DILocation(line: 79, column: 5, scope: !298, inlinedAt: !730)
!779 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !780)
!780 = distinct !DILocation(line: 57, column: 13, scope: !781)
!781 = distinct !DILexicalBlock(scope: !782, file: !670, line: 51, column: 22)
!782 = distinct !DILexicalBlock(scope: !783, file: !670, line: 51, column: 13)
!783 = distinct !DILexicalBlock(scope: !683, file: !670, line: 35, column: 14)
!784 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !780)
!785 = !DILocation(line: 14, column: 61, scope: !22, inlinedAt: !780)
!786 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !780)
!787 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !780)
!788 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !780)
!789 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !780)
!790 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !780)
!791 = !DILocation(line: 22, column: 5, scope: !65, inlinedAt: !780)
!792 = !DILocation(line: 31, column: 9, scope: !68, inlinedAt: !780)
!793 = !DILocation(line: 32, column: 9, scope: !75, inlinedAt: !780)
!794 = !DILocation(line: 40, column: 9, scope: !92, inlinedAt: !780)
!795 = !DILocation(line: 41, column: 9, scope: !98, inlinedAt: !780)
!796 = !DILocation(line: 42, column: 9, scope: !104, inlinedAt: !780)
!797 = !DILocation(line: 43, column: 9, scope: !110, inlinedAt: !780)
!798 = !DILocation(line: 44, column: 9, scope: !116, inlinedAt: !780)
!799 = !DILocation(line: 45, column: 9, scope: !122, inlinedAt: !780)
!800 = !DILocation(line: 46, column: 9, scope: !128, inlinedAt: !780)
!801 = !DILocation(line: 47, column: 9, scope: !134, inlinedAt: !780)
!802 = !DILocation(line: 48, column: 9, scope: !140, inlinedAt: !780)
!803 = !DILocation(line: 49, column: 9, scope: !146, inlinedAt: !780)
!804 = !DILocation(line: 50, column: 9, scope: !152, inlinedAt: !780)
!805 = !DILocation(line: 51, column: 9, scope: !158, inlinedAt: !780)
!806 = !DILocation(line: 52, column: 9, scope: !164, inlinedAt: !780)
!807 = !DILocation(line: 53, column: 9, scope: !170, inlinedAt: !780)
!808 = !DILocation(line: 54, column: 9, scope: !176, inlinedAt: !780)
!809 = !DILocation(line: 55, column: 9, scope: !182, inlinedAt: !780)
!810 = !DILocation(line: 57, column: 9, scope: !190, inlinedAt: !780)
!811 = !DILocation(line: 58, column: 9, scope: !196, inlinedAt: !780)
!812 = !DILocation(line: 59, column: 9, scope: !202, inlinedAt: !780)
!813 = !DILocation(line: 60, column: 9, scope: !208, inlinedAt: !780)
!814 = !DILocation(line: 61, column: 9, scope: !214, inlinedAt: !780)
!815 = !DILocation(line: 62, column: 9, scope: !220, inlinedAt: !780)
!816 = !DILocation(line: 63, column: 9, scope: !226, inlinedAt: !780)
!817 = !DILocation(line: 64, column: 9, scope: !232, inlinedAt: !780)
!818 = !DILocation(line: 65, column: 9, scope: !238, inlinedAt: !780)
!819 = !DILocation(line: 66, column: 9, scope: !244, inlinedAt: !780)
!820 = !DILocation(line: 67, column: 9, scope: !250, inlinedAt: !780)
!821 = !DILocation(line: 68, column: 9, scope: !256, inlinedAt: !780)
!822 = !DILocation(line: 69, column: 9, scope: !262, inlinedAt: !780)
!823 = !DILocation(line: 70, column: 9, scope: !268, inlinedAt: !780)
!824 = !DILocation(line: 71, column: 9, scope: !274, inlinedAt: !780)
!825 = !DILocation(line: 72, column: 9, scope: !280, inlinedAt: !780)
!826 = !DILocation(line: 76, column: 9, scope: !284, inlinedAt: !780)
!827 = !DILocation(line: 77, column: 9, scope: !291, inlinedAt: !780)
!828 = !DILocation(line: 79, column: 5, scope: !298, inlinedAt: !780)
!829 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !830)
!830 = distinct !DILocation(line: 45, column: 13, scope: !831)
!831 = distinct !DILexicalBlock(scope: !832, file: !670, line: 38, column: 38)
!832 = distinct !DILexicalBlock(scope: !833, file: !670, line: 38, column: 9)
!833 = distinct !DILexicalBlock(scope: !783, file: !670, line: 38, column: 9)
!834 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !830)
!835 = !DILocation(line: 14, column: 61, scope: !22, inlinedAt: !830)
!836 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !830)
!837 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !830)
!838 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !830)
!839 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !830)
!840 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !830)
!841 = !DILocation(line: 22, column: 5, scope: !65, inlinedAt: !830)
!842 = !DILocation(line: 31, column: 9, scope: !68, inlinedAt: !830)
!843 = !DILocation(line: 32, column: 9, scope: !75, inlinedAt: !830)
!844 = !DILocation(line: 40, column: 9, scope: !92, inlinedAt: !830)
!845 = !DILocation(line: 41, column: 9, scope: !98, inlinedAt: !830)
!846 = !DILocation(line: 42, column: 9, scope: !104, inlinedAt: !830)
!847 = !DILocation(line: 43, column: 9, scope: !110, inlinedAt: !830)
!848 = !DILocation(line: 44, column: 9, scope: !116, inlinedAt: !830)
!849 = !DILocation(line: 45, column: 9, scope: !122, inlinedAt: !830)
!850 = !DILocation(line: 46, column: 9, scope: !128, inlinedAt: !830)
!851 = !DILocation(line: 47, column: 9, scope: !134, inlinedAt: !830)
!852 = !DILocation(line: 48, column: 9, scope: !140, inlinedAt: !830)
!853 = !DILocation(line: 49, column: 9, scope: !146, inlinedAt: !830)
!854 = !DILocation(line: 50, column: 9, scope: !152, inlinedAt: !830)
!855 = !DILocation(line: 51, column: 9, scope: !158, inlinedAt: !830)
!856 = !DILocation(line: 52, column: 9, scope: !164, inlinedAt: !830)
!857 = !DILocation(line: 53, column: 9, scope: !170, inlinedAt: !830)
!858 = !DILocation(line: 54, column: 9, scope: !176, inlinedAt: !830)
!859 = !DILocation(line: 55, column: 9, scope: !182, inlinedAt: !830)
!860 = !DILocation(line: 57, column: 9, scope: !190, inlinedAt: !830)
!861 = !DILocation(line: 58, column: 9, scope: !196, inlinedAt: !830)
!862 = !DILocation(line: 59, column: 9, scope: !202, inlinedAt: !830)
!863 = !DILocation(line: 60, column: 9, scope: !208, inlinedAt: !830)
!864 = !DILocation(line: 61, column: 9, scope: !214, inlinedAt: !830)
!865 = !DILocation(line: 62, column: 9, scope: !220, inlinedAt: !830)
!866 = !DILocation(line: 63, column: 9, scope: !226, inlinedAt: !830)
!867 = !DILocation(line: 64, column: 9, scope: !232, inlinedAt: !830)
!868 = !DILocation(line: 65, column: 9, scope: !238, inlinedAt: !830)
!869 = !DILocation(line: 66, column: 9, scope: !244, inlinedAt: !830)
!870 = !DILocation(line: 67, column: 9, scope: !250, inlinedAt: !830)
!871 = !DILocation(line: 68, column: 9, scope: !256, inlinedAt: !830)
!872 = !DILocation(line: 69, column: 9, scope: !262, inlinedAt: !830)
!873 = !DILocation(line: 70, column: 9, scope: !268, inlinedAt: !830)
!874 = !DILocation(line: 71, column: 9, scope: !274, inlinedAt: !830)
!875 = !DILocation(line: 72, column: 9, scope: !280, inlinedAt: !830)
!876 = !DILocation(line: 76, column: 9, scope: !284, inlinedAt: !830)
!877 = !DILocation(line: 77, column: 9, scope: !291, inlinedAt: !830)
!878 = !DILocation(line: 79, column: 5, scope: !298, inlinedAt: !830)
!879 = !DILocalVariable(name: "in", arg: 1, scope: !669, file: !670, line: 22, type: !673)
!880 = !DILocation(line: 22, column: 44, scope: !669)
!881 = !DILocalVariable(name: "out", arg: 2, scope: !669, file: !670, line: 22, type: !675)
!882 = !DILocation(line: 22, column: 63, scope: !669)
!883 = !DILocalVariable(name: "length", arg: 3, scope: !669, file: !670, line: 23, type: !676)
!884 = !DILocation(line: 23, column: 28, scope: !669)
!885 = !DILocalVariable(name: "_schedule", arg: 4, scope: !669, file: !670, line: 23, type: !25)
!886 = !DILocation(line: 23, column: 54, scope: !669)
!887 = !DILocalVariable(name: "ivec", arg: 5, scope: !669, file: !670, line: 24, type: !677)
!888 = !DILocation(line: 24, column: 35, scope: !669)
!889 = !DILocalVariable(name: "enc", arg: 6, scope: !669, file: !670, line: 24, type: !43)
!890 = !DILocation(line: 24, column: 45, scope: !669)
!891 = !DILocalVariable(name: "tin0", scope: !669, file: !670, line: 27, type: !7)
!892 = !DILocation(line: 27, column: 23, scope: !669)
!893 = !DILocalVariable(name: "tin1", scope: !669, file: !670, line: 27, type: !7)
!894 = !DILocation(line: 27, column: 29, scope: !669)
!895 = !DILocalVariable(name: "tout0", scope: !669, file: !670, line: 28, type: !7)
!896 = !DILocation(line: 28, column: 23, scope: !669)
!897 = !DILocalVariable(name: "tout1", scope: !669, file: !670, line: 28, type: !7)
!898 = !DILocation(line: 28, column: 30, scope: !669)
!899 = !DILocalVariable(name: "xor0", scope: !669, file: !670, line: 28, type: !7)
!900 = !DILocation(line: 28, column: 37, scope: !669)
!901 = !DILocalVariable(name: "xor1", scope: !669, file: !670, line: 28, type: !7)
!902 = !DILocation(line: 28, column: 43, scope: !669)
!903 = !DILocalVariable(name: "l", scope: !669, file: !670, line: 29, type: !676)
!904 = !DILocation(line: 29, column: 19, scope: !669)
!905 = !DILocation(line: 29, column: 23, scope: !669)
!906 = !DILocalVariable(name: "tin", scope: !669, file: !670, line: 30, type: !38)
!907 = !DILocation(line: 30, column: 14, scope: !669)
!908 = !DILocalVariable(name: "iv", scope: !669, file: !670, line: 31, type: !675)
!909 = !DILocation(line: 31, column: 20, scope: !669)
!910 = !DILocation(line: 33, column: 13, scope: !669)
!911 = !DILocation(line: 33, column: 11, scope: !669)
!912 = !DILocation(line: 33, column: 8, scope: !669)
!913 = !DILocation(line: 35, column: 9, scope: !683)
!914 = !DILocation(line: 35, column: 9, scope: !669)
!915 = !DILocation(line: 36, column: 9, scope: !783)
!916 = !DILocation(line: 37, column: 9, scope: !783)
!917 = !DILocation(line: 38, column: 16, scope: !833)
!918 = !DILocation(line: 38, column: 14, scope: !833)
!919 = !DILocation(line: 38, column: 22, scope: !832)
!920 = !DILocation(line: 38, column: 24, scope: !832)
!921 = !DILocation(line: 38, column: 9, scope: !833)
!922 = !DILocation(line: 39, column: 13, scope: !831)
!923 = !DILocation(line: 40, column: 13, scope: !831)
!924 = !DILocation(line: 41, column: 21, scope: !831)
!925 = !DILocation(line: 41, column: 18, scope: !831)
!926 = !DILocation(line: 42, column: 22, scope: !831)
!927 = !DILocation(line: 42, column: 13, scope: !831)
!928 = !DILocation(line: 42, column: 20, scope: !831)
!929 = !DILocation(line: 43, column: 21, scope: !831)
!930 = !DILocation(line: 43, column: 18, scope: !831)
!931 = !DILocation(line: 44, column: 22, scope: !831)
!932 = !DILocation(line: 44, column: 13, scope: !831)
!933 = !DILocation(line: 44, column: 20, scope: !831)
!934 = !DILocation(line: 45, column: 38, scope: !831)
!935 = !DILocation(line: 45, column: 43, scope: !831)
!936 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !830)
!937 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !830)
!938 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !830)
!939 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !830)
!940 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !830)
!941 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !830)
!942 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !830)
!943 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !830)
!944 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !830)
!945 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !830)
!946 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !830)
!947 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !830)
!948 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !830)
!949 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !830)
!950 = !DILocation(line: 39, column: 9, scope: !86, inlinedAt: !830)
!951 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !830)
!952 = !DILocation(line: 40, column: 9, scope: !89, inlinedAt: !830)
!953 = !DILocation(line: 41, column: 9, scope: !96, inlinedAt: !830)
!954 = !DILocation(line: 42, column: 9, scope: !102, inlinedAt: !830)
!955 = !DILocation(line: 43, column: 9, scope: !108, inlinedAt: !830)
!956 = !DILocation(line: 44, column: 9, scope: !114, inlinedAt: !830)
!957 = !DILocation(line: 45, column: 9, scope: !120, inlinedAt: !830)
!958 = !DILocation(line: 46, column: 9, scope: !126, inlinedAt: !830)
!959 = !DILocation(line: 47, column: 9, scope: !132, inlinedAt: !830)
!960 = !DILocation(line: 48, column: 9, scope: !138, inlinedAt: !830)
!961 = !DILocation(line: 49, column: 9, scope: !144, inlinedAt: !830)
!962 = !DILocation(line: 50, column: 9, scope: !150, inlinedAt: !830)
!963 = !DILocation(line: 51, column: 9, scope: !156, inlinedAt: !830)
!964 = !DILocation(line: 52, column: 9, scope: !162, inlinedAt: !830)
!965 = !DILocation(line: 53, column: 9, scope: !168, inlinedAt: !830)
!966 = !DILocation(line: 54, column: 9, scope: !174, inlinedAt: !830)
!967 = !DILocation(line: 55, column: 9, scope: !180, inlinedAt: !830)
!968 = !DILocation(line: 56, column: 5, scope: !90, inlinedAt: !830)
!969 = !DILocation(line: 57, column: 9, scope: !187, inlinedAt: !830)
!970 = !DILocation(line: 58, column: 9, scope: !194, inlinedAt: !830)
!971 = !DILocation(line: 59, column: 9, scope: !200, inlinedAt: !830)
!972 = !DILocation(line: 60, column: 9, scope: !206, inlinedAt: !830)
!973 = !DILocation(line: 61, column: 9, scope: !212, inlinedAt: !830)
!974 = !DILocation(line: 62, column: 9, scope: !218, inlinedAt: !830)
!975 = !DILocation(line: 63, column: 9, scope: !224, inlinedAt: !830)
!976 = !DILocation(line: 64, column: 9, scope: !230, inlinedAt: !830)
!977 = !DILocation(line: 65, column: 9, scope: !236, inlinedAt: !830)
!978 = !DILocation(line: 66, column: 9, scope: !242, inlinedAt: !830)
!979 = !DILocation(line: 67, column: 9, scope: !248, inlinedAt: !830)
!980 = !DILocation(line: 68, column: 9, scope: !254, inlinedAt: !830)
!981 = !DILocation(line: 69, column: 9, scope: !260, inlinedAt: !830)
!982 = !DILocation(line: 70, column: 9, scope: !266, inlinedAt: !830)
!983 = !DILocation(line: 71, column: 9, scope: !272, inlinedAt: !830)
!984 = !DILocation(line: 72, column: 9, scope: !278, inlinedAt: !830)
!985 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !830)
!986 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !830)
!987 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !830)
!988 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !830)
!989 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !830)
!990 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !830)
!991 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !830)
!992 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !830)
!993 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !830)
!994 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !830)
!995 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !830)
!996 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !830)
!997 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !830)
!998 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !830)
!999 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !830)
!1000 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !830)
!1001 = !DILocation(line: 46, column: 21, scope: !831)
!1002 = !DILocation(line: 46, column: 19, scope: !831)
!1003 = !DILocation(line: 47, column: 13, scope: !831)
!1004 = !DILocation(line: 48, column: 21, scope: !831)
!1005 = !DILocation(line: 48, column: 19, scope: !831)
!1006 = !DILocation(line: 49, column: 13, scope: !831)
!1007 = !DILocation(line: 50, column: 9, scope: !831)
!1008 = !DILocation(line: 38, column: 32, scope: !832)
!1009 = !DILocation(line: 38, column: 9, scope: !832)
!1010 = distinct !{!1010, !921, !1011}
!1011 = !DILocation(line: 50, column: 9, scope: !833)
!1012 = !DILocation(line: 51, column: 13, scope: !782)
!1013 = !DILocation(line: 51, column: 15, scope: !782)
!1014 = !DILocation(line: 51, column: 13, scope: !783)
!1015 = !DILocation(line: 52, column: 13, scope: !1016)
!1016 = distinct !DILexicalBlock(scope: !781, file: !670, line: 52, column: 13)
!1017 = !DILocation(line: 52, column: 13, scope: !1018)
!1018 = distinct !DILexicalBlock(scope: !1016, file: !670, line: 52, column: 13)
!1019 = !DILocation(line: 53, column: 21, scope: !781)
!1020 = !DILocation(line: 53, column: 18, scope: !781)
!1021 = !DILocation(line: 54, column: 22, scope: !781)
!1022 = !DILocation(line: 54, column: 13, scope: !781)
!1023 = !DILocation(line: 54, column: 20, scope: !781)
!1024 = !DILocation(line: 55, column: 21, scope: !781)
!1025 = !DILocation(line: 55, column: 18, scope: !781)
!1026 = !DILocation(line: 56, column: 22, scope: !781)
!1027 = !DILocation(line: 56, column: 13, scope: !781)
!1028 = !DILocation(line: 56, column: 20, scope: !781)
!1029 = !DILocation(line: 57, column: 38, scope: !781)
!1030 = !DILocation(line: 57, column: 43, scope: !781)
!1031 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !780)
!1032 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !780)
!1033 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !780)
!1034 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !780)
!1035 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !780)
!1036 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !780)
!1037 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !780)
!1038 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !780)
!1039 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !780)
!1040 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !780)
!1041 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !780)
!1042 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !780)
!1043 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !780)
!1044 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !780)
!1045 = !DILocation(line: 39, column: 9, scope: !86, inlinedAt: !780)
!1046 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !780)
!1047 = !DILocation(line: 40, column: 9, scope: !89, inlinedAt: !780)
!1048 = !DILocation(line: 41, column: 9, scope: !96, inlinedAt: !780)
!1049 = !DILocation(line: 42, column: 9, scope: !102, inlinedAt: !780)
!1050 = !DILocation(line: 43, column: 9, scope: !108, inlinedAt: !780)
!1051 = !DILocation(line: 44, column: 9, scope: !114, inlinedAt: !780)
!1052 = !DILocation(line: 45, column: 9, scope: !120, inlinedAt: !780)
!1053 = !DILocation(line: 46, column: 9, scope: !126, inlinedAt: !780)
!1054 = !DILocation(line: 47, column: 9, scope: !132, inlinedAt: !780)
!1055 = !DILocation(line: 48, column: 9, scope: !138, inlinedAt: !780)
!1056 = !DILocation(line: 49, column: 9, scope: !144, inlinedAt: !780)
!1057 = !DILocation(line: 50, column: 9, scope: !150, inlinedAt: !780)
!1058 = !DILocation(line: 51, column: 9, scope: !156, inlinedAt: !780)
!1059 = !DILocation(line: 52, column: 9, scope: !162, inlinedAt: !780)
!1060 = !DILocation(line: 53, column: 9, scope: !168, inlinedAt: !780)
!1061 = !DILocation(line: 54, column: 9, scope: !174, inlinedAt: !780)
!1062 = !DILocation(line: 55, column: 9, scope: !180, inlinedAt: !780)
!1063 = !DILocation(line: 56, column: 5, scope: !90, inlinedAt: !780)
!1064 = !DILocation(line: 57, column: 9, scope: !187, inlinedAt: !780)
!1065 = !DILocation(line: 58, column: 9, scope: !194, inlinedAt: !780)
!1066 = !DILocation(line: 59, column: 9, scope: !200, inlinedAt: !780)
!1067 = !DILocation(line: 60, column: 9, scope: !206, inlinedAt: !780)
!1068 = !DILocation(line: 61, column: 9, scope: !212, inlinedAt: !780)
!1069 = !DILocation(line: 62, column: 9, scope: !218, inlinedAt: !780)
!1070 = !DILocation(line: 63, column: 9, scope: !224, inlinedAt: !780)
!1071 = !DILocation(line: 64, column: 9, scope: !230, inlinedAt: !780)
!1072 = !DILocation(line: 65, column: 9, scope: !236, inlinedAt: !780)
!1073 = !DILocation(line: 66, column: 9, scope: !242, inlinedAt: !780)
!1074 = !DILocation(line: 67, column: 9, scope: !248, inlinedAt: !780)
!1075 = !DILocation(line: 68, column: 9, scope: !254, inlinedAt: !780)
!1076 = !DILocation(line: 69, column: 9, scope: !260, inlinedAt: !780)
!1077 = !DILocation(line: 70, column: 9, scope: !266, inlinedAt: !780)
!1078 = !DILocation(line: 71, column: 9, scope: !272, inlinedAt: !780)
!1079 = !DILocation(line: 72, column: 9, scope: !278, inlinedAt: !780)
!1080 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !780)
!1081 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !780)
!1082 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !780)
!1083 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !780)
!1084 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !780)
!1085 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !780)
!1086 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !780)
!1087 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !780)
!1088 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !780)
!1089 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !780)
!1090 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !780)
!1091 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !780)
!1092 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !780)
!1093 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !780)
!1094 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !780)
!1095 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !780)
!1096 = !DILocation(line: 58, column: 21, scope: !781)
!1097 = !DILocation(line: 58, column: 19, scope: !781)
!1098 = !DILocation(line: 59, column: 13, scope: !781)
!1099 = !DILocation(line: 60, column: 21, scope: !781)
!1100 = !DILocation(line: 60, column: 19, scope: !781)
!1101 = !DILocation(line: 61, column: 13, scope: !781)
!1102 = !DILocation(line: 62, column: 9, scope: !781)
!1103 = !DILocation(line: 64, column: 17, scope: !783)
!1104 = !DILocation(line: 64, column: 15, scope: !783)
!1105 = !DILocation(line: 64, column: 12, scope: !783)
!1106 = !DILocation(line: 65, column: 9, scope: !783)
!1107 = !DILocation(line: 66, column: 9, scope: !783)
!1108 = !DILocation(line: 68, column: 5, scope: !783)
!1109 = !DILocation(line: 69, column: 9, scope: !682)
!1110 = !DILocation(line: 70, column: 9, scope: !682)
!1111 = !DILocation(line: 71, column: 16, scope: !733)
!1112 = !DILocation(line: 71, column: 14, scope: !733)
!1113 = !DILocation(line: 71, column: 22, scope: !732)
!1114 = !DILocation(line: 71, column: 24, scope: !732)
!1115 = !DILocation(line: 71, column: 9, scope: !733)
!1116 = !DILocation(line: 72, column: 13, scope: !731)
!1117 = !DILocation(line: 73, column: 22, scope: !731)
!1118 = !DILocation(line: 73, column: 13, scope: !731)
!1119 = !DILocation(line: 73, column: 20, scope: !731)
!1120 = !DILocation(line: 74, column: 13, scope: !731)
!1121 = !DILocation(line: 75, column: 22, scope: !731)
!1122 = !DILocation(line: 75, column: 13, scope: !731)
!1123 = !DILocation(line: 75, column: 20, scope: !731)
!1124 = !DILocation(line: 76, column: 38, scope: !731)
!1125 = !DILocation(line: 76, column: 43, scope: !731)
!1126 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !730)
!1127 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !730)
!1128 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !730)
!1129 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !730)
!1130 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !730)
!1131 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !730)
!1132 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !730)
!1133 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !730)
!1134 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !730)
!1135 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !730)
!1136 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !730)
!1137 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !730)
!1138 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !730)
!1139 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !730)
!1140 = !DILocation(line: 39, column: 9, scope: !86, inlinedAt: !730)
!1141 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !730)
!1142 = !DILocation(line: 40, column: 9, scope: !89, inlinedAt: !730)
!1143 = !DILocation(line: 41, column: 9, scope: !96, inlinedAt: !730)
!1144 = !DILocation(line: 42, column: 9, scope: !102, inlinedAt: !730)
!1145 = !DILocation(line: 43, column: 9, scope: !108, inlinedAt: !730)
!1146 = !DILocation(line: 44, column: 9, scope: !114, inlinedAt: !730)
!1147 = !DILocation(line: 45, column: 9, scope: !120, inlinedAt: !730)
!1148 = !DILocation(line: 46, column: 9, scope: !126, inlinedAt: !730)
!1149 = !DILocation(line: 47, column: 9, scope: !132, inlinedAt: !730)
!1150 = !DILocation(line: 48, column: 9, scope: !138, inlinedAt: !730)
!1151 = !DILocation(line: 49, column: 9, scope: !144, inlinedAt: !730)
!1152 = !DILocation(line: 50, column: 9, scope: !150, inlinedAt: !730)
!1153 = !DILocation(line: 51, column: 9, scope: !156, inlinedAt: !730)
!1154 = !DILocation(line: 52, column: 9, scope: !162, inlinedAt: !730)
!1155 = !DILocation(line: 53, column: 9, scope: !168, inlinedAt: !730)
!1156 = !DILocation(line: 54, column: 9, scope: !174, inlinedAt: !730)
!1157 = !DILocation(line: 55, column: 9, scope: !180, inlinedAt: !730)
!1158 = !DILocation(line: 56, column: 5, scope: !90, inlinedAt: !730)
!1159 = !DILocation(line: 57, column: 9, scope: !187, inlinedAt: !730)
!1160 = !DILocation(line: 58, column: 9, scope: !194, inlinedAt: !730)
!1161 = !DILocation(line: 59, column: 9, scope: !200, inlinedAt: !730)
!1162 = !DILocation(line: 60, column: 9, scope: !206, inlinedAt: !730)
!1163 = !DILocation(line: 61, column: 9, scope: !212, inlinedAt: !730)
!1164 = !DILocation(line: 62, column: 9, scope: !218, inlinedAt: !730)
!1165 = !DILocation(line: 63, column: 9, scope: !224, inlinedAt: !730)
!1166 = !DILocation(line: 64, column: 9, scope: !230, inlinedAt: !730)
!1167 = !DILocation(line: 65, column: 9, scope: !236, inlinedAt: !730)
!1168 = !DILocation(line: 66, column: 9, scope: !242, inlinedAt: !730)
!1169 = !DILocation(line: 67, column: 9, scope: !248, inlinedAt: !730)
!1170 = !DILocation(line: 68, column: 9, scope: !254, inlinedAt: !730)
!1171 = !DILocation(line: 69, column: 9, scope: !260, inlinedAt: !730)
!1172 = !DILocation(line: 70, column: 9, scope: !266, inlinedAt: !730)
!1173 = !DILocation(line: 71, column: 9, scope: !272, inlinedAt: !730)
!1174 = !DILocation(line: 72, column: 9, scope: !278, inlinedAt: !730)
!1175 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !730)
!1176 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !730)
!1177 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !730)
!1178 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !730)
!1179 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !730)
!1180 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !730)
!1181 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !730)
!1182 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !730)
!1183 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !730)
!1184 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !730)
!1185 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !730)
!1186 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !730)
!1187 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !730)
!1188 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !730)
!1189 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !730)
!1190 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !730)
!1191 = !DILocation(line: 77, column: 21, scope: !731)
!1192 = !DILocation(line: 77, column: 30, scope: !731)
!1193 = !DILocation(line: 77, column: 28, scope: !731)
!1194 = !DILocation(line: 77, column: 19, scope: !731)
!1195 = !DILocation(line: 78, column: 21, scope: !731)
!1196 = !DILocation(line: 78, column: 30, scope: !731)
!1197 = !DILocation(line: 78, column: 28, scope: !731)
!1198 = !DILocation(line: 78, column: 19, scope: !731)
!1199 = !DILocation(line: 79, column: 13, scope: !731)
!1200 = !DILocation(line: 80, column: 13, scope: !731)
!1201 = !DILocation(line: 81, column: 20, scope: !731)
!1202 = !DILocation(line: 81, column: 18, scope: !731)
!1203 = !DILocation(line: 82, column: 20, scope: !731)
!1204 = !DILocation(line: 82, column: 18, scope: !731)
!1205 = !DILocation(line: 83, column: 9, scope: !731)
!1206 = !DILocation(line: 71, column: 32, scope: !732)
!1207 = !DILocation(line: 71, column: 9, scope: !732)
!1208 = distinct !{!1208, !1115, !1209}
!1209 = !DILocation(line: 83, column: 9, scope: !733)
!1210 = !DILocation(line: 84, column: 13, scope: !681)
!1211 = !DILocation(line: 84, column: 15, scope: !681)
!1212 = !DILocation(line: 84, column: 13, scope: !682)
!1213 = !DILocation(line: 85, column: 13, scope: !680)
!1214 = !DILocation(line: 86, column: 22, scope: !680)
!1215 = !DILocation(line: 86, column: 13, scope: !680)
!1216 = !DILocation(line: 86, column: 20, scope: !680)
!1217 = !DILocation(line: 87, column: 13, scope: !680)
!1218 = !DILocation(line: 88, column: 22, scope: !680)
!1219 = !DILocation(line: 88, column: 13, scope: !680)
!1220 = !DILocation(line: 88, column: 20, scope: !680)
!1221 = !DILocation(line: 89, column: 38, scope: !680)
!1222 = !DILocation(line: 89, column: 43, scope: !680)
!1223 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !679)
!1224 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !679)
!1225 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !679)
!1226 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !679)
!1227 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !679)
!1228 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !679)
!1229 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !679)
!1230 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !679)
!1231 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !679)
!1232 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !679)
!1233 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !679)
!1234 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !679)
!1235 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !679)
!1236 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !679)
!1237 = !DILocation(line: 39, column: 9, scope: !86, inlinedAt: !679)
!1238 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !679)
!1239 = !DILocation(line: 40, column: 9, scope: !89, inlinedAt: !679)
!1240 = !DILocation(line: 41, column: 9, scope: !96, inlinedAt: !679)
!1241 = !DILocation(line: 42, column: 9, scope: !102, inlinedAt: !679)
!1242 = !DILocation(line: 43, column: 9, scope: !108, inlinedAt: !679)
!1243 = !DILocation(line: 44, column: 9, scope: !114, inlinedAt: !679)
!1244 = !DILocation(line: 45, column: 9, scope: !120, inlinedAt: !679)
!1245 = !DILocation(line: 46, column: 9, scope: !126, inlinedAt: !679)
!1246 = !DILocation(line: 47, column: 9, scope: !132, inlinedAt: !679)
!1247 = !DILocation(line: 48, column: 9, scope: !138, inlinedAt: !679)
!1248 = !DILocation(line: 49, column: 9, scope: !144, inlinedAt: !679)
!1249 = !DILocation(line: 50, column: 9, scope: !150, inlinedAt: !679)
!1250 = !DILocation(line: 51, column: 9, scope: !156, inlinedAt: !679)
!1251 = !DILocation(line: 52, column: 9, scope: !162, inlinedAt: !679)
!1252 = !DILocation(line: 53, column: 9, scope: !168, inlinedAt: !679)
!1253 = !DILocation(line: 54, column: 9, scope: !174, inlinedAt: !679)
!1254 = !DILocation(line: 55, column: 9, scope: !180, inlinedAt: !679)
!1255 = !DILocation(line: 56, column: 5, scope: !90, inlinedAt: !679)
!1256 = !DILocation(line: 57, column: 9, scope: !187, inlinedAt: !679)
!1257 = !DILocation(line: 58, column: 9, scope: !194, inlinedAt: !679)
!1258 = !DILocation(line: 59, column: 9, scope: !200, inlinedAt: !679)
!1259 = !DILocation(line: 60, column: 9, scope: !206, inlinedAt: !679)
!1260 = !DILocation(line: 61, column: 9, scope: !212, inlinedAt: !679)
!1261 = !DILocation(line: 62, column: 9, scope: !218, inlinedAt: !679)
!1262 = !DILocation(line: 63, column: 9, scope: !224, inlinedAt: !679)
!1263 = !DILocation(line: 64, column: 9, scope: !230, inlinedAt: !679)
!1264 = !DILocation(line: 65, column: 9, scope: !236, inlinedAt: !679)
!1265 = !DILocation(line: 66, column: 9, scope: !242, inlinedAt: !679)
!1266 = !DILocation(line: 67, column: 9, scope: !248, inlinedAt: !679)
!1267 = !DILocation(line: 68, column: 9, scope: !254, inlinedAt: !679)
!1268 = !DILocation(line: 69, column: 9, scope: !260, inlinedAt: !679)
!1269 = !DILocation(line: 70, column: 9, scope: !266, inlinedAt: !679)
!1270 = !DILocation(line: 71, column: 9, scope: !272, inlinedAt: !679)
!1271 = !DILocation(line: 72, column: 9, scope: !278, inlinedAt: !679)
!1272 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !679)
!1273 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !679)
!1274 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !679)
!1275 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !679)
!1276 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !679)
!1277 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !679)
!1278 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !679)
!1279 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !679)
!1280 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !679)
!1281 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !679)
!1282 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !679)
!1283 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !679)
!1284 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !679)
!1285 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !679)
!1286 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !679)
!1287 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !679)
!1288 = !DILocation(line: 90, column: 21, scope: !680)
!1289 = !DILocation(line: 90, column: 30, scope: !680)
!1290 = !DILocation(line: 90, column: 28, scope: !680)
!1291 = !DILocation(line: 90, column: 19, scope: !680)
!1292 = !DILocation(line: 91, column: 21, scope: !680)
!1293 = !DILocation(line: 91, column: 30, scope: !680)
!1294 = !DILocation(line: 91, column: 28, scope: !680)
!1295 = !DILocation(line: 91, column: 19, scope: !680)
!1296 = !DILocation(line: 92, column: 13, scope: !1297)
!1297 = distinct !DILexicalBlock(scope: !680, file: !670, line: 92, column: 13)
!1298 = !DILocation(line: 92, column: 13, scope: !1299)
!1299 = distinct !DILexicalBlock(scope: !1297, file: !670, line: 92, column: 13)
!1300 = !DILocation(line: 94, column: 20, scope: !680)
!1301 = !DILocation(line: 94, column: 18, scope: !680)
!1302 = !DILocation(line: 95, column: 20, scope: !680)
!1303 = !DILocation(line: 95, column: 18, scope: !680)
!1304 = !DILocation(line: 97, column: 9, scope: !680)
!1305 = !DILocation(line: 99, column: 17, scope: !682)
!1306 = !DILocation(line: 99, column: 15, scope: !682)
!1307 = !DILocation(line: 99, column: 12, scope: !682)
!1308 = !DILocation(line: 100, column: 9, scope: !682)
!1309 = !DILocation(line: 101, column: 9, scope: !682)
!1310 = !DILocation(line: 104, column: 47, scope: !669)
!1311 = !DILocation(line: 104, column: 40, scope: !669)
!1312 = !DILocation(line: 104, column: 33, scope: !669)
!1313 = !DILocation(line: 104, column: 25, scope: !669)
!1314 = !DILocation(line: 104, column: 17, scope: !669)
!1315 = !DILocation(line: 104, column: 10, scope: !669)
!1316 = !DILocation(line: 105, column: 14, scope: !669)
!1317 = !DILocation(line: 105, column: 21, scope: !669)
!1318 = !DILocation(line: 105, column: 5, scope: !669)
!1319 = !DILocation(line: 105, column: 12, scope: !669)
!1320 = !DILocation(line: 106, column: 1, scope: !669)
!1321 = distinct !DISubprogram(name: "DES_ede3_cbc_encrypt", scope: !3, file: !3, line: 194, type: !1322, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{null, !673, !675, !676, !25, !25, !25, !677, !43}
!1324 = !DILocalVariable(name: "input", arg: 1, scope: !1321, file: !3, line: 194, type: !673)
!1325 = !DILocation(line: 194, column: 48, scope: !1321)
!1326 = !DILocalVariable(name: "output", arg: 2, scope: !1321, file: !3, line: 194, type: !675)
!1327 = !DILocation(line: 194, column: 70, scope: !1321)
!1328 = !DILocalVariable(name: "length", arg: 3, scope: !1321, file: !3, line: 195, type: !676)
!1329 = !DILocation(line: 195, column: 32, scope: !1321)
!1330 = !DILocalVariable(name: "ks1", arg: 4, scope: !1321, file: !3, line: 195, type: !25)
!1331 = !DILocation(line: 195, column: 58, scope: !1321)
!1332 = !DILocalVariable(name: "ks2", arg: 5, scope: !1321, file: !3, line: 196, type: !25)
!1333 = !DILocation(line: 196, column: 45, scope: !1321)
!1334 = !DILocalVariable(name: "ks3", arg: 6, scope: !1321, file: !3, line: 196, type: !25)
!1335 = !DILocation(line: 196, column: 68, scope: !1321)
!1336 = !DILocalVariable(name: "ivec", arg: 7, scope: !1321, file: !3, line: 197, type: !677)
!1337 = !DILocation(line: 197, column: 39, scope: !1321)
!1338 = !DILocalVariable(name: "enc", arg: 8, scope: !1321, file: !3, line: 197, type: !43)
!1339 = !DILocation(line: 197, column: 49, scope: !1321)
!1340 = !DILocalVariable(name: "tin0", scope: !1321, file: !3, line: 199, type: !7)
!1341 = !DILocation(line: 199, column: 23, scope: !1321)
!1342 = !DILocalVariable(name: "tin1", scope: !1321, file: !3, line: 199, type: !7)
!1343 = !DILocation(line: 199, column: 29, scope: !1321)
!1344 = !DILocalVariable(name: "tout0", scope: !1321, file: !3, line: 200, type: !7)
!1345 = !DILocation(line: 200, column: 23, scope: !1321)
!1346 = !DILocalVariable(name: "tout1", scope: !1321, file: !3, line: 200, type: !7)
!1347 = !DILocation(line: 200, column: 30, scope: !1321)
!1348 = !DILocalVariable(name: "xor0", scope: !1321, file: !3, line: 200, type: !7)
!1349 = !DILocation(line: 200, column: 37, scope: !1321)
!1350 = !DILocalVariable(name: "xor1", scope: !1321, file: !3, line: 200, type: !7)
!1351 = !DILocation(line: 200, column: 43, scope: !1321)
!1352 = !DILocalVariable(name: "in", scope: !1321, file: !3, line: 201, type: !673)
!1353 = !DILocation(line: 201, column: 35, scope: !1321)
!1354 = !DILocalVariable(name: "out", scope: !1321, file: !3, line: 202, type: !675)
!1355 = !DILocation(line: 202, column: 20, scope: !1321)
!1356 = !DILocalVariable(name: "l", scope: !1321, file: !3, line: 203, type: !676)
!1357 = !DILocation(line: 203, column: 19, scope: !1321)
!1358 = !DILocation(line: 203, column: 23, scope: !1321)
!1359 = !DILocalVariable(name: "tin", scope: !1321, file: !3, line: 204, type: !38)
!1360 = !DILocation(line: 204, column: 14, scope: !1321)
!1361 = !DILocalVariable(name: "iv", scope: !1321, file: !3, line: 205, type: !675)
!1362 = !DILocation(line: 205, column: 20, scope: !1321)
!1363 = !DILocation(line: 207, column: 10, scope: !1321)
!1364 = !DILocation(line: 207, column: 8, scope: !1321)
!1365 = !DILocation(line: 208, column: 11, scope: !1321)
!1366 = !DILocation(line: 208, column: 9, scope: !1321)
!1367 = !DILocation(line: 209, column: 13, scope: !1321)
!1368 = !DILocation(line: 209, column: 11, scope: !1321)
!1369 = !DILocation(line: 209, column: 8, scope: !1321)
!1370 = !DILocation(line: 211, column: 9, scope: !1371)
!1371 = distinct !DILexicalBlock(scope: !1321, file: !3, line: 211, column: 9)
!1372 = !DILocation(line: 211, column: 9, scope: !1321)
!1373 = !DILocation(line: 212, column: 9, scope: !1374)
!1374 = distinct !DILexicalBlock(scope: !1371, file: !3, line: 211, column: 14)
!1375 = !DILocation(line: 213, column: 9, scope: !1374)
!1376 = !DILocation(line: 214, column: 16, scope: !1377)
!1377 = distinct !DILexicalBlock(scope: !1374, file: !3, line: 214, column: 9)
!1378 = !DILocation(line: 214, column: 14, scope: !1377)
!1379 = !DILocation(line: 214, column: 22, scope: !1380)
!1380 = distinct !DILexicalBlock(scope: !1377, file: !3, line: 214, column: 9)
!1381 = !DILocation(line: 214, column: 24, scope: !1380)
!1382 = !DILocation(line: 214, column: 9, scope: !1377)
!1383 = !DILocation(line: 215, column: 13, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1380, file: !3, line: 214, column: 38)
!1385 = !DILocation(line: 216, column: 13, scope: !1384)
!1386 = !DILocation(line: 217, column: 21, scope: !1384)
!1387 = !DILocation(line: 217, column: 18, scope: !1384)
!1388 = !DILocation(line: 218, column: 21, scope: !1384)
!1389 = !DILocation(line: 218, column: 18, scope: !1384)
!1390 = !DILocation(line: 220, column: 22, scope: !1384)
!1391 = !DILocation(line: 220, column: 13, scope: !1384)
!1392 = !DILocation(line: 220, column: 20, scope: !1384)
!1393 = !DILocation(line: 221, column: 22, scope: !1384)
!1394 = !DILocation(line: 221, column: 13, scope: !1384)
!1395 = !DILocation(line: 221, column: 20, scope: !1384)
!1396 = !DILocation(line: 222, column: 38, scope: !1384)
!1397 = !DILocation(line: 222, column: 43, scope: !1384)
!1398 = !DILocation(line: 222, column: 48, scope: !1384)
!1399 = !DILocation(line: 222, column: 53, scope: !1384)
!1400 = !DILocation(line: 222, column: 13, scope: !1384)
!1401 = !DILocation(line: 223, column: 21, scope: !1384)
!1402 = !DILocation(line: 223, column: 19, scope: !1384)
!1403 = !DILocation(line: 224, column: 21, scope: !1384)
!1404 = !DILocation(line: 224, column: 19, scope: !1384)
!1405 = !DILocation(line: 226, column: 13, scope: !1384)
!1406 = !DILocation(line: 227, column: 13, scope: !1384)
!1407 = !DILocation(line: 228, column: 9, scope: !1384)
!1408 = !DILocation(line: 214, column: 32, scope: !1380)
!1409 = !DILocation(line: 214, column: 9, scope: !1380)
!1410 = distinct !{!1410, !1382, !1411}
!1411 = !DILocation(line: 228, column: 9, scope: !1377)
!1412 = !DILocation(line: 229, column: 13, scope: !1413)
!1413 = distinct !DILexicalBlock(scope: !1374, file: !3, line: 229, column: 13)
!1414 = !DILocation(line: 229, column: 15, scope: !1413)
!1415 = !DILocation(line: 229, column: 13, scope: !1374)
!1416 = !DILocation(line: 230, column: 13, scope: !1417)
!1417 = distinct !DILexicalBlock(scope: !1418, file: !3, line: 230, column: 13)
!1418 = distinct !DILexicalBlock(scope: !1413, file: !3, line: 229, column: 22)
!1419 = !DILocation(line: 230, column: 13, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1417, file: !3, line: 230, column: 13)
!1421 = !DILocation(line: 231, column: 21, scope: !1418)
!1422 = !DILocation(line: 231, column: 18, scope: !1418)
!1423 = !DILocation(line: 232, column: 21, scope: !1418)
!1424 = !DILocation(line: 232, column: 18, scope: !1418)
!1425 = !DILocation(line: 234, column: 22, scope: !1418)
!1426 = !DILocation(line: 234, column: 13, scope: !1418)
!1427 = !DILocation(line: 234, column: 20, scope: !1418)
!1428 = !DILocation(line: 235, column: 22, scope: !1418)
!1429 = !DILocation(line: 235, column: 13, scope: !1418)
!1430 = !DILocation(line: 235, column: 20, scope: !1418)
!1431 = !DILocation(line: 236, column: 38, scope: !1418)
!1432 = !DILocation(line: 236, column: 43, scope: !1418)
!1433 = !DILocation(line: 236, column: 48, scope: !1418)
!1434 = !DILocation(line: 236, column: 53, scope: !1418)
!1435 = !DILocation(line: 236, column: 13, scope: !1418)
!1436 = !DILocation(line: 237, column: 21, scope: !1418)
!1437 = !DILocation(line: 237, column: 19, scope: !1418)
!1438 = !DILocation(line: 238, column: 21, scope: !1418)
!1439 = !DILocation(line: 238, column: 19, scope: !1418)
!1440 = !DILocation(line: 240, column: 13, scope: !1418)
!1441 = !DILocation(line: 241, column: 13, scope: !1418)
!1442 = !DILocation(line: 242, column: 9, scope: !1418)
!1443 = !DILocation(line: 243, column: 17, scope: !1374)
!1444 = !DILocation(line: 243, column: 15, scope: !1374)
!1445 = !DILocation(line: 243, column: 12, scope: !1374)
!1446 = !DILocation(line: 244, column: 9, scope: !1374)
!1447 = !DILocation(line: 245, column: 9, scope: !1374)
!1448 = !DILocation(line: 246, column: 5, scope: !1374)
!1449 = !DILocalVariable(name: "t0", scope: !1450, file: !3, line: 247, type: !7)
!1450 = distinct !DILexicalBlock(scope: !1371, file: !3, line: 246, column: 12)
!1451 = !DILocation(line: 247, column: 27, scope: !1450)
!1452 = !DILocalVariable(name: "t1", scope: !1450, file: !3, line: 247, type: !7)
!1453 = !DILocation(line: 247, column: 31, scope: !1450)
!1454 = !DILocation(line: 249, column: 9, scope: !1450)
!1455 = !DILocation(line: 250, column: 9, scope: !1450)
!1456 = !DILocation(line: 251, column: 16, scope: !1457)
!1457 = distinct !DILexicalBlock(scope: !1450, file: !3, line: 251, column: 9)
!1458 = !DILocation(line: 251, column: 14, scope: !1457)
!1459 = !DILocation(line: 251, column: 22, scope: !1460)
!1460 = distinct !DILexicalBlock(scope: !1457, file: !3, line: 251, column: 9)
!1461 = !DILocation(line: 251, column: 24, scope: !1460)
!1462 = !DILocation(line: 251, column: 9, scope: !1457)
!1463 = !DILocation(line: 252, column: 13, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1460, file: !3, line: 251, column: 38)
!1465 = !DILocation(line: 253, column: 13, scope: !1464)
!1466 = !DILocation(line: 255, column: 18, scope: !1464)
!1467 = !DILocation(line: 255, column: 16, scope: !1464)
!1468 = !DILocation(line: 256, column: 18, scope: !1464)
!1469 = !DILocation(line: 256, column: 16, scope: !1464)
!1470 = !DILocation(line: 258, column: 22, scope: !1464)
!1471 = !DILocation(line: 258, column: 13, scope: !1464)
!1472 = !DILocation(line: 258, column: 20, scope: !1464)
!1473 = !DILocation(line: 259, column: 22, scope: !1464)
!1474 = !DILocation(line: 259, column: 13, scope: !1464)
!1475 = !DILocation(line: 259, column: 20, scope: !1464)
!1476 = !DILocation(line: 260, column: 38, scope: !1464)
!1477 = !DILocation(line: 260, column: 43, scope: !1464)
!1478 = !DILocation(line: 260, column: 48, scope: !1464)
!1479 = !DILocation(line: 260, column: 53, scope: !1464)
!1480 = !DILocation(line: 260, column: 13, scope: !1464)
!1481 = !DILocation(line: 261, column: 21, scope: !1464)
!1482 = !DILocation(line: 261, column: 19, scope: !1464)
!1483 = !DILocation(line: 262, column: 21, scope: !1464)
!1484 = !DILocation(line: 262, column: 19, scope: !1464)
!1485 = !DILocation(line: 264, column: 22, scope: !1464)
!1486 = !DILocation(line: 264, column: 19, scope: !1464)
!1487 = !DILocation(line: 265, column: 22, scope: !1464)
!1488 = !DILocation(line: 265, column: 19, scope: !1464)
!1489 = !DILocation(line: 266, column: 13, scope: !1464)
!1490 = !DILocation(line: 267, column: 13, scope: !1464)
!1491 = !DILocation(line: 268, column: 20, scope: !1464)
!1492 = !DILocation(line: 268, column: 18, scope: !1464)
!1493 = !DILocation(line: 269, column: 20, scope: !1464)
!1494 = !DILocation(line: 269, column: 18, scope: !1464)
!1495 = !DILocation(line: 270, column: 9, scope: !1464)
!1496 = !DILocation(line: 251, column: 32, scope: !1460)
!1497 = !DILocation(line: 251, column: 9, scope: !1460)
!1498 = distinct !{!1498, !1462, !1499}
!1499 = !DILocation(line: 270, column: 9, scope: !1457)
!1500 = !DILocation(line: 271, column: 13, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1450, file: !3, line: 271, column: 13)
!1502 = !DILocation(line: 271, column: 15, scope: !1501)
!1503 = !DILocation(line: 271, column: 13, scope: !1450)
!1504 = !DILocation(line: 272, column: 13, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1501, file: !3, line: 271, column: 22)
!1506 = !DILocation(line: 273, column: 13, scope: !1505)
!1507 = !DILocation(line: 275, column: 18, scope: !1505)
!1508 = !DILocation(line: 275, column: 16, scope: !1505)
!1509 = !DILocation(line: 276, column: 18, scope: !1505)
!1510 = !DILocation(line: 276, column: 16, scope: !1505)
!1511 = !DILocation(line: 278, column: 22, scope: !1505)
!1512 = !DILocation(line: 278, column: 13, scope: !1505)
!1513 = !DILocation(line: 278, column: 20, scope: !1505)
!1514 = !DILocation(line: 279, column: 22, scope: !1505)
!1515 = !DILocation(line: 279, column: 13, scope: !1505)
!1516 = !DILocation(line: 279, column: 20, scope: !1505)
!1517 = !DILocation(line: 280, column: 38, scope: !1505)
!1518 = !DILocation(line: 280, column: 43, scope: !1505)
!1519 = !DILocation(line: 280, column: 48, scope: !1505)
!1520 = !DILocation(line: 280, column: 53, scope: !1505)
!1521 = !DILocation(line: 280, column: 13, scope: !1505)
!1522 = !DILocation(line: 281, column: 21, scope: !1505)
!1523 = !DILocation(line: 281, column: 19, scope: !1505)
!1524 = !DILocation(line: 282, column: 21, scope: !1505)
!1525 = !DILocation(line: 282, column: 19, scope: !1505)
!1526 = !DILocation(line: 284, column: 22, scope: !1505)
!1527 = !DILocation(line: 284, column: 19, scope: !1505)
!1528 = !DILocation(line: 285, column: 22, scope: !1505)
!1529 = !DILocation(line: 285, column: 19, scope: !1505)
!1530 = !DILocation(line: 286, column: 13, scope: !1531)
!1531 = distinct !DILexicalBlock(scope: !1505, file: !3, line: 286, column: 13)
!1532 = !DILocation(line: 286, column: 13, scope: !1533)
!1533 = distinct !DILexicalBlock(scope: !1531, file: !3, line: 286, column: 13)
!1534 = !DILocation(line: 287, column: 20, scope: !1505)
!1535 = !DILocation(line: 287, column: 18, scope: !1505)
!1536 = !DILocation(line: 288, column: 20, scope: !1505)
!1537 = !DILocation(line: 288, column: 18, scope: !1505)
!1538 = !DILocation(line: 289, column: 9, scope: !1505)
!1539 = !DILocation(line: 291, column: 17, scope: !1450)
!1540 = !DILocation(line: 291, column: 15, scope: !1450)
!1541 = !DILocation(line: 291, column: 12, scope: !1450)
!1542 = !DILocation(line: 292, column: 9, scope: !1450)
!1543 = !DILocation(line: 293, column: 9, scope: !1450)
!1544 = !DILocation(line: 295, column: 47, scope: !1321)
!1545 = !DILocation(line: 295, column: 40, scope: !1321)
!1546 = !DILocation(line: 295, column: 33, scope: !1321)
!1547 = !DILocation(line: 295, column: 25, scope: !1321)
!1548 = !DILocation(line: 295, column: 17, scope: !1321)
!1549 = !DILocation(line: 295, column: 10, scope: !1321)
!1550 = !DILocation(line: 296, column: 14, scope: !1321)
!1551 = !DILocation(line: 296, column: 21, scope: !1321)
!1552 = !DILocation(line: 296, column: 5, scope: !1321)
!1553 = !DILocation(line: 296, column: 12, scope: !1321)
!1554 = !DILocation(line: 297, column: 1, scope: !1321)
!1555 = distinct !DISubprogram(name: "DES_ecb_encrypt", scope: !3, file: !3, line: 301, type: !1556, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !1558, !677, !25, !43}
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_DES_cblock", file: !8, line: 29, baseType: !35)
!1560 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !1561)
!1561 = distinct !DILocation(line: 313, column: 5, scope: !1555)
!1562 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !1561)
!1563 = !DILocation(line: 14, column: 61, scope: !22, inlinedAt: !1561)
!1564 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !1561)
!1565 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !1561)
!1566 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !1561)
!1567 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !1561)
!1568 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !1561)
!1569 = !DILocation(line: 22, column: 5, scope: !65, inlinedAt: !1561)
!1570 = !DILocation(line: 31, column: 9, scope: !68, inlinedAt: !1561)
!1571 = !DILocation(line: 32, column: 9, scope: !75, inlinedAt: !1561)
!1572 = !DILocation(line: 40, column: 9, scope: !92, inlinedAt: !1561)
!1573 = !DILocation(line: 41, column: 9, scope: !98, inlinedAt: !1561)
!1574 = !DILocation(line: 42, column: 9, scope: !104, inlinedAt: !1561)
!1575 = !DILocation(line: 43, column: 9, scope: !110, inlinedAt: !1561)
!1576 = !DILocation(line: 44, column: 9, scope: !116, inlinedAt: !1561)
!1577 = !DILocation(line: 45, column: 9, scope: !122, inlinedAt: !1561)
!1578 = !DILocation(line: 46, column: 9, scope: !128, inlinedAt: !1561)
!1579 = !DILocation(line: 47, column: 9, scope: !134, inlinedAt: !1561)
!1580 = !DILocation(line: 48, column: 9, scope: !140, inlinedAt: !1561)
!1581 = !DILocation(line: 49, column: 9, scope: !146, inlinedAt: !1561)
!1582 = !DILocation(line: 50, column: 9, scope: !152, inlinedAt: !1561)
!1583 = !DILocation(line: 51, column: 9, scope: !158, inlinedAt: !1561)
!1584 = !DILocation(line: 52, column: 9, scope: !164, inlinedAt: !1561)
!1585 = !DILocation(line: 53, column: 9, scope: !170, inlinedAt: !1561)
!1586 = !DILocation(line: 54, column: 9, scope: !176, inlinedAt: !1561)
!1587 = !DILocation(line: 55, column: 9, scope: !182, inlinedAt: !1561)
!1588 = !DILocation(line: 57, column: 9, scope: !190, inlinedAt: !1561)
!1589 = !DILocation(line: 58, column: 9, scope: !196, inlinedAt: !1561)
!1590 = !DILocation(line: 59, column: 9, scope: !202, inlinedAt: !1561)
!1591 = !DILocation(line: 60, column: 9, scope: !208, inlinedAt: !1561)
!1592 = !DILocation(line: 61, column: 9, scope: !214, inlinedAt: !1561)
!1593 = !DILocation(line: 62, column: 9, scope: !220, inlinedAt: !1561)
!1594 = !DILocation(line: 63, column: 9, scope: !226, inlinedAt: !1561)
!1595 = !DILocation(line: 64, column: 9, scope: !232, inlinedAt: !1561)
!1596 = !DILocation(line: 65, column: 9, scope: !238, inlinedAt: !1561)
!1597 = !DILocation(line: 66, column: 9, scope: !244, inlinedAt: !1561)
!1598 = !DILocation(line: 67, column: 9, scope: !250, inlinedAt: !1561)
!1599 = !DILocation(line: 68, column: 9, scope: !256, inlinedAt: !1561)
!1600 = !DILocation(line: 69, column: 9, scope: !262, inlinedAt: !1561)
!1601 = !DILocation(line: 70, column: 9, scope: !268, inlinedAt: !1561)
!1602 = !DILocation(line: 71, column: 9, scope: !274, inlinedAt: !1561)
!1603 = !DILocation(line: 72, column: 9, scope: !280, inlinedAt: !1561)
!1604 = !DILocation(line: 76, column: 9, scope: !284, inlinedAt: !1561)
!1605 = !DILocation(line: 77, column: 9, scope: !291, inlinedAt: !1561)
!1606 = !DILocation(line: 79, column: 5, scope: !298, inlinedAt: !1561)
!1607 = !DILocalVariable(name: "input", arg: 1, scope: !1555, file: !3, line: 301, type: !1558)
!1608 = !DILocation(line: 301, column: 40, scope: !1555)
!1609 = !DILocalVariable(name: "output", arg: 2, scope: !1555, file: !3, line: 301, type: !677)
!1610 = !DILocation(line: 301, column: 59, scope: !1555)
!1611 = !DILocalVariable(name: "ks", arg: 3, scope: !1555, file: !3, line: 302, type: !25)
!1612 = !DILocation(line: 302, column: 40, scope: !1555)
!1613 = !DILocalVariable(name: "enc", arg: 4, scope: !1555, file: !3, line: 302, type: !43)
!1614 = !DILocation(line: 302, column: 48, scope: !1555)
!1615 = !DILocalVariable(name: "l", scope: !1555, file: !3, line: 304, type: !7)
!1616 = !DILocation(line: 304, column: 23, scope: !1555)
!1617 = !DILocalVariable(name: "ll", scope: !1555, file: !3, line: 305, type: !38)
!1618 = !DILocation(line: 305, column: 14, scope: !1555)
!1619 = !DILocalVariable(name: "in", scope: !1555, file: !3, line: 306, type: !673)
!1620 = !DILocation(line: 306, column: 26, scope: !1555)
!1621 = !DILocation(line: 306, column: 34, scope: !1555)
!1622 = !DILocation(line: 306, column: 32, scope: !1555)
!1623 = !DILocalVariable(name: "out", scope: !1555, file: !3, line: 307, type: !675)
!1624 = !DILocation(line: 307, column: 20, scope: !1555)
!1625 = !DILocation(line: 307, column: 29, scope: !1555)
!1626 = !DILocation(line: 307, column: 27, scope: !1555)
!1627 = !DILocation(line: 309, column: 5, scope: !1555)
!1628 = !DILocation(line: 310, column: 13, scope: !1555)
!1629 = !DILocation(line: 310, column: 5, scope: !1555)
!1630 = !DILocation(line: 310, column: 11, scope: !1555)
!1631 = !DILocation(line: 311, column: 5, scope: !1555)
!1632 = !DILocation(line: 312, column: 13, scope: !1555)
!1633 = !DILocation(line: 312, column: 5, scope: !1555)
!1634 = !DILocation(line: 312, column: 11, scope: !1555)
!1635 = !DILocation(line: 313, column: 18, scope: !1555)
!1636 = !DILocation(line: 313, column: 22, scope: !1555)
!1637 = !DILocation(line: 313, column: 26, scope: !1555)
!1638 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !1561)
!1639 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !1561)
!1640 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !1561)
!1641 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !1561)
!1642 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !1561)
!1643 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !1561)
!1644 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !1561)
!1645 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !1561)
!1646 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !1561)
!1647 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !1561)
!1648 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !1561)
!1649 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !1561)
!1650 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !1561)
!1651 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !1561)
!1652 = !DILocation(line: 39, column: 9, scope: !86, inlinedAt: !1561)
!1653 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !1561)
!1654 = !DILocation(line: 40, column: 9, scope: !89, inlinedAt: !1561)
!1655 = !DILocation(line: 41, column: 9, scope: !96, inlinedAt: !1561)
!1656 = !DILocation(line: 42, column: 9, scope: !102, inlinedAt: !1561)
!1657 = !DILocation(line: 43, column: 9, scope: !108, inlinedAt: !1561)
!1658 = !DILocation(line: 44, column: 9, scope: !114, inlinedAt: !1561)
!1659 = !DILocation(line: 45, column: 9, scope: !120, inlinedAt: !1561)
!1660 = !DILocation(line: 46, column: 9, scope: !126, inlinedAt: !1561)
!1661 = !DILocation(line: 47, column: 9, scope: !132, inlinedAt: !1561)
!1662 = !DILocation(line: 48, column: 9, scope: !138, inlinedAt: !1561)
!1663 = !DILocation(line: 49, column: 9, scope: !144, inlinedAt: !1561)
!1664 = !DILocation(line: 50, column: 9, scope: !150, inlinedAt: !1561)
!1665 = !DILocation(line: 51, column: 9, scope: !156, inlinedAt: !1561)
!1666 = !DILocation(line: 52, column: 9, scope: !162, inlinedAt: !1561)
!1667 = !DILocation(line: 53, column: 9, scope: !168, inlinedAt: !1561)
!1668 = !DILocation(line: 54, column: 9, scope: !174, inlinedAt: !1561)
!1669 = !DILocation(line: 55, column: 9, scope: !180, inlinedAt: !1561)
!1670 = !DILocation(line: 56, column: 5, scope: !90, inlinedAt: !1561)
!1671 = !DILocation(line: 57, column: 9, scope: !187, inlinedAt: !1561)
!1672 = !DILocation(line: 58, column: 9, scope: !194, inlinedAt: !1561)
!1673 = !DILocation(line: 59, column: 9, scope: !200, inlinedAt: !1561)
!1674 = !DILocation(line: 60, column: 9, scope: !206, inlinedAt: !1561)
!1675 = !DILocation(line: 61, column: 9, scope: !212, inlinedAt: !1561)
!1676 = !DILocation(line: 62, column: 9, scope: !218, inlinedAt: !1561)
!1677 = !DILocation(line: 63, column: 9, scope: !224, inlinedAt: !1561)
!1678 = !DILocation(line: 64, column: 9, scope: !230, inlinedAt: !1561)
!1679 = !DILocation(line: 65, column: 9, scope: !236, inlinedAt: !1561)
!1680 = !DILocation(line: 66, column: 9, scope: !242, inlinedAt: !1561)
!1681 = !DILocation(line: 67, column: 9, scope: !248, inlinedAt: !1561)
!1682 = !DILocation(line: 68, column: 9, scope: !254, inlinedAt: !1561)
!1683 = !DILocation(line: 69, column: 9, scope: !260, inlinedAt: !1561)
!1684 = !DILocation(line: 70, column: 9, scope: !266, inlinedAt: !1561)
!1685 = !DILocation(line: 71, column: 9, scope: !272, inlinedAt: !1561)
!1686 = !DILocation(line: 72, column: 9, scope: !278, inlinedAt: !1561)
!1687 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !1561)
!1688 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !1561)
!1689 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !1561)
!1690 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !1561)
!1691 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !1561)
!1692 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !1561)
!1693 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !1561)
!1694 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !1561)
!1695 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !1561)
!1696 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !1561)
!1697 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !1561)
!1698 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !1561)
!1699 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !1561)
!1700 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !1561)
!1701 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !1561)
!1702 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !1561)
!1703 = !DILocation(line: 314, column: 9, scope: !1555)
!1704 = !DILocation(line: 314, column: 7, scope: !1555)
!1705 = !DILocation(line: 315, column: 5, scope: !1555)
!1706 = !DILocation(line: 316, column: 9, scope: !1555)
!1707 = !DILocation(line: 316, column: 7, scope: !1555)
!1708 = !DILocation(line: 317, column: 5, scope: !1555)
!1709 = !DILocation(line: 318, column: 17, scope: !1555)
!1710 = !DILocation(line: 318, column: 23, scope: !1555)
!1711 = !DILocation(line: 318, column: 9, scope: !1555)
!1712 = !DILocation(line: 318, column: 15, scope: !1555)
!1713 = !DILocation(line: 318, column: 7, scope: !1555)
!1714 = !DILocation(line: 319, column: 1, scope: !1555)
!1715 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 321, type: !1716, scopeLine: 322, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!43}
!1718 = !DILocation(line: 14, column: 29, scope: !22, inlinedAt: !1719)
!1719 = distinct !DILocation(line: 313, column: 5, scope: !1555, inlinedAt: !1720)
!1720 = distinct !DILocation(line: 328, column: 5, scope: !1715)
!1721 = !DILocation(line: 14, column: 53, scope: !22, inlinedAt: !1719)
!1722 = !DILocation(line: 14, column: 61, scope: !22, inlinedAt: !1719)
!1723 = !DILocation(line: 16, column: 23, scope: !22, inlinedAt: !1719)
!1724 = !DILocation(line: 16, column: 26, scope: !22, inlinedAt: !1719)
!1725 = !DILocation(line: 16, column: 29, scope: !22, inlinedAt: !1719)
!1726 = !DILocation(line: 16, column: 32, scope: !22, inlinedAt: !1719)
!1727 = !DILocation(line: 17, column: 24, scope: !22, inlinedAt: !1719)
!1728 = !DILocation(line: 22, column: 5, scope: !65, inlinedAt: !1719)
!1729 = !DILocation(line: 31, column: 9, scope: !68, inlinedAt: !1719)
!1730 = !DILocation(line: 32, column: 9, scope: !75, inlinedAt: !1719)
!1731 = !DILocation(line: 40, column: 9, scope: !92, inlinedAt: !1719)
!1732 = !DILocation(line: 41, column: 9, scope: !98, inlinedAt: !1719)
!1733 = !DILocation(line: 42, column: 9, scope: !104, inlinedAt: !1719)
!1734 = !DILocation(line: 43, column: 9, scope: !110, inlinedAt: !1719)
!1735 = !DILocation(line: 44, column: 9, scope: !116, inlinedAt: !1719)
!1736 = !DILocation(line: 45, column: 9, scope: !122, inlinedAt: !1719)
!1737 = !DILocation(line: 46, column: 9, scope: !128, inlinedAt: !1719)
!1738 = !DILocation(line: 47, column: 9, scope: !134, inlinedAt: !1719)
!1739 = !DILocation(line: 48, column: 9, scope: !140, inlinedAt: !1719)
!1740 = !DILocation(line: 49, column: 9, scope: !146, inlinedAt: !1719)
!1741 = !DILocation(line: 50, column: 9, scope: !152, inlinedAt: !1719)
!1742 = !DILocation(line: 51, column: 9, scope: !158, inlinedAt: !1719)
!1743 = !DILocation(line: 52, column: 9, scope: !164, inlinedAt: !1719)
!1744 = !DILocation(line: 53, column: 9, scope: !170, inlinedAt: !1719)
!1745 = !DILocation(line: 54, column: 9, scope: !176, inlinedAt: !1719)
!1746 = !DILocation(line: 55, column: 9, scope: !182, inlinedAt: !1719)
!1747 = !DILocation(line: 57, column: 9, scope: !190, inlinedAt: !1719)
!1748 = !DILocation(line: 58, column: 9, scope: !196, inlinedAt: !1719)
!1749 = !DILocation(line: 59, column: 9, scope: !202, inlinedAt: !1719)
!1750 = !DILocation(line: 60, column: 9, scope: !208, inlinedAt: !1719)
!1751 = !DILocation(line: 61, column: 9, scope: !214, inlinedAt: !1719)
!1752 = !DILocation(line: 62, column: 9, scope: !220, inlinedAt: !1719)
!1753 = !DILocation(line: 63, column: 9, scope: !226, inlinedAt: !1719)
!1754 = !DILocation(line: 64, column: 9, scope: !232, inlinedAt: !1719)
!1755 = !DILocation(line: 65, column: 9, scope: !238, inlinedAt: !1719)
!1756 = !DILocation(line: 66, column: 9, scope: !244, inlinedAt: !1719)
!1757 = !DILocation(line: 67, column: 9, scope: !250, inlinedAt: !1719)
!1758 = !DILocation(line: 68, column: 9, scope: !256, inlinedAt: !1719)
!1759 = !DILocation(line: 69, column: 9, scope: !262, inlinedAt: !1719)
!1760 = !DILocation(line: 70, column: 9, scope: !268, inlinedAt: !1719)
!1761 = !DILocation(line: 71, column: 9, scope: !274, inlinedAt: !1719)
!1762 = !DILocation(line: 72, column: 9, scope: !280, inlinedAt: !1719)
!1763 = !DILocation(line: 76, column: 9, scope: !284, inlinedAt: !1719)
!1764 = !DILocation(line: 77, column: 9, scope: !291, inlinedAt: !1719)
!1765 = !DILocation(line: 79, column: 5, scope: !298, inlinedAt: !1719)
!1766 = !DILocation(line: 301, column: 40, scope: !1555, inlinedAt: !1720)
!1767 = !DILocation(line: 301, column: 59, scope: !1555, inlinedAt: !1720)
!1768 = !DILocation(line: 302, column: 40, scope: !1555, inlinedAt: !1720)
!1769 = !DILocation(line: 302, column: 48, scope: !1555, inlinedAt: !1720)
!1770 = !DILocation(line: 304, column: 23, scope: !1555, inlinedAt: !1720)
!1771 = !DILocation(line: 305, column: 14, scope: !1555, inlinedAt: !1720)
!1772 = !DILocation(line: 306, column: 26, scope: !1555, inlinedAt: !1720)
!1773 = !DILocation(line: 307, column: 20, scope: !1555, inlinedAt: !1720)
!1774 = !DILocalVariable(name: "buf", scope: !1715, file: !3, line: 323, type: !1559)
!1775 = !DILocation(line: 323, column: 22, scope: !1715)
!1776 = !DILocalVariable(name: "key", scope: !1715, file: !3, line: 324, type: !1559)
!1777 = !DILocation(line: 324, column: 22, scope: !1715)
!1778 = !DILocalVariable(name: "output", scope: !1715, file: !3, line: 325, type: !34)
!1779 = !DILocation(line: 325, column: 16, scope: !1715)
!1780 = !DILocalVariable(name: "ks", scope: !1715, file: !3, line: 326, type: !25)
!1781 = !DILocation(line: 326, column: 23, scope: !1715)
!1782 = !DILocation(line: 327, column: 25, scope: !1715)
!1783 = !DILocation(line: 327, column: 5, scope: !1715)
!1784 = !DILocation(line: 328, column: 36, scope: !1715)
!1785 = !DILocation(line: 306, column: 34, scope: !1555, inlinedAt: !1720)
!1786 = !DILocation(line: 306, column: 32, scope: !1555, inlinedAt: !1720)
!1787 = !DILocation(line: 307, column: 29, scope: !1555, inlinedAt: !1720)
!1788 = !DILocation(line: 307, column: 27, scope: !1555, inlinedAt: !1720)
!1789 = !DILocation(line: 309, column: 5, scope: !1555, inlinedAt: !1720)
!1790 = !DILocation(line: 310, column: 13, scope: !1555, inlinedAt: !1720)
!1791 = !DILocation(line: 310, column: 5, scope: !1555, inlinedAt: !1720)
!1792 = !DILocation(line: 310, column: 11, scope: !1555, inlinedAt: !1720)
!1793 = !DILocation(line: 311, column: 5, scope: !1555, inlinedAt: !1720)
!1794 = !DILocation(line: 312, column: 13, scope: !1555, inlinedAt: !1720)
!1795 = !DILocation(line: 312, column: 5, scope: !1555, inlinedAt: !1720)
!1796 = !DILocation(line: 312, column: 11, scope: !1555, inlinedAt: !1720)
!1797 = !DILocation(line: 313, column: 18, scope: !1555, inlinedAt: !1720)
!1798 = !DILocation(line: 313, column: 22, scope: !1555, inlinedAt: !1720)
!1799 = !DILocation(line: 313, column: 26, scope: !1555, inlinedAt: !1720)
!1800 = !DILocation(line: 19, column: 9, scope: !22, inlinedAt: !1719)
!1801 = !DILocation(line: 19, column: 7, scope: !22, inlinedAt: !1719)
!1802 = !DILocation(line: 20, column: 9, scope: !22, inlinedAt: !1719)
!1803 = !DILocation(line: 20, column: 7, scope: !22, inlinedAt: !1719)
!1804 = !DILocation(line: 31, column: 9, scope: !22, inlinedAt: !1719)
!1805 = !DILocation(line: 31, column: 23, scope: !22, inlinedAt: !1719)
!1806 = !DILocation(line: 31, column: 7, scope: !22, inlinedAt: !1719)
!1807 = !DILocation(line: 32, column: 9, scope: !22, inlinedAt: !1719)
!1808 = !DILocation(line: 32, column: 23, scope: !22, inlinedAt: !1719)
!1809 = !DILocation(line: 32, column: 7, scope: !22, inlinedAt: !1719)
!1810 = !DILocation(line: 34, column: 9, scope: !22, inlinedAt: !1719)
!1811 = !DILocation(line: 34, column: 13, scope: !22, inlinedAt: !1719)
!1812 = !DILocation(line: 34, column: 17, scope: !22, inlinedAt: !1719)
!1813 = !DILocation(line: 34, column: 7, scope: !22, inlinedAt: !1719)
!1814 = !DILocation(line: 39, column: 9, scope: !86, inlinedAt: !1719)
!1815 = !DILocation(line: 39, column: 9, scope: !22, inlinedAt: !1719)
!1816 = !DILocation(line: 40, column: 9, scope: !89, inlinedAt: !1719)
!1817 = !DILocation(line: 41, column: 9, scope: !96, inlinedAt: !1719)
!1818 = !DILocation(line: 42, column: 9, scope: !102, inlinedAt: !1719)
!1819 = !DILocation(line: 43, column: 9, scope: !108, inlinedAt: !1719)
!1820 = !DILocation(line: 44, column: 9, scope: !114, inlinedAt: !1719)
!1821 = !DILocation(line: 45, column: 9, scope: !120, inlinedAt: !1719)
!1822 = !DILocation(line: 46, column: 9, scope: !126, inlinedAt: !1719)
!1823 = !DILocation(line: 47, column: 9, scope: !132, inlinedAt: !1719)
!1824 = !DILocation(line: 48, column: 9, scope: !138, inlinedAt: !1719)
!1825 = !DILocation(line: 49, column: 9, scope: !144, inlinedAt: !1719)
!1826 = !DILocation(line: 50, column: 9, scope: !150, inlinedAt: !1719)
!1827 = !DILocation(line: 51, column: 9, scope: !156, inlinedAt: !1719)
!1828 = !DILocation(line: 52, column: 9, scope: !162, inlinedAt: !1719)
!1829 = !DILocation(line: 53, column: 9, scope: !168, inlinedAt: !1719)
!1830 = !DILocation(line: 54, column: 9, scope: !174, inlinedAt: !1719)
!1831 = !DILocation(line: 55, column: 9, scope: !180, inlinedAt: !1719)
!1832 = !DILocation(line: 56, column: 5, scope: !90, inlinedAt: !1719)
!1833 = !DILocation(line: 57, column: 9, scope: !187, inlinedAt: !1719)
!1834 = !DILocation(line: 58, column: 9, scope: !194, inlinedAt: !1719)
!1835 = !DILocation(line: 59, column: 9, scope: !200, inlinedAt: !1719)
!1836 = !DILocation(line: 60, column: 9, scope: !206, inlinedAt: !1719)
!1837 = !DILocation(line: 61, column: 9, scope: !212, inlinedAt: !1719)
!1838 = !DILocation(line: 62, column: 9, scope: !218, inlinedAt: !1719)
!1839 = !DILocation(line: 63, column: 9, scope: !224, inlinedAt: !1719)
!1840 = !DILocation(line: 64, column: 9, scope: !230, inlinedAt: !1719)
!1841 = !DILocation(line: 65, column: 9, scope: !236, inlinedAt: !1719)
!1842 = !DILocation(line: 66, column: 9, scope: !242, inlinedAt: !1719)
!1843 = !DILocation(line: 67, column: 9, scope: !248, inlinedAt: !1719)
!1844 = !DILocation(line: 68, column: 9, scope: !254, inlinedAt: !1719)
!1845 = !DILocation(line: 69, column: 9, scope: !260, inlinedAt: !1719)
!1846 = !DILocation(line: 70, column: 9, scope: !266, inlinedAt: !1719)
!1847 = !DILocation(line: 71, column: 9, scope: !272, inlinedAt: !1719)
!1848 = !DILocation(line: 72, column: 9, scope: !278, inlinedAt: !1719)
!1849 = !DILocation(line: 76, column: 9, scope: !22, inlinedAt: !1719)
!1850 = !DILocation(line: 76, column: 22, scope: !22, inlinedAt: !1719)
!1851 = !DILocation(line: 76, column: 7, scope: !22, inlinedAt: !1719)
!1852 = !DILocation(line: 77, column: 9, scope: !22, inlinedAt: !1719)
!1853 = !DILocation(line: 77, column: 22, scope: !22, inlinedAt: !1719)
!1854 = !DILocation(line: 77, column: 7, scope: !22, inlinedAt: !1719)
!1855 = !DILocation(line: 80, column: 15, scope: !22, inlinedAt: !1719)
!1856 = !DILocation(line: 80, column: 5, scope: !22, inlinedAt: !1719)
!1857 = !DILocation(line: 80, column: 13, scope: !22, inlinedAt: !1719)
!1858 = !DILocation(line: 81, column: 15, scope: !22, inlinedAt: !1719)
!1859 = !DILocation(line: 81, column: 5, scope: !22, inlinedAt: !1719)
!1860 = !DILocation(line: 81, column: 13, scope: !22, inlinedAt: !1719)
!1861 = !DILocation(line: 82, column: 19, scope: !22, inlinedAt: !1719)
!1862 = !DILocation(line: 82, column: 15, scope: !22, inlinedAt: !1719)
!1863 = !DILocation(line: 82, column: 11, scope: !22, inlinedAt: !1719)
!1864 = !DILocation(line: 82, column: 7, scope: !22, inlinedAt: !1719)
!1865 = !DILocation(line: 314, column: 9, scope: !1555, inlinedAt: !1720)
!1866 = !DILocation(line: 314, column: 7, scope: !1555, inlinedAt: !1720)
!1867 = !DILocation(line: 315, column: 5, scope: !1555, inlinedAt: !1720)
!1868 = !DILocation(line: 316, column: 9, scope: !1555, inlinedAt: !1720)
!1869 = !DILocation(line: 316, column: 7, scope: !1555, inlinedAt: !1720)
!1870 = !DILocation(line: 317, column: 5, scope: !1555, inlinedAt: !1720)
!1871 = !DILocation(line: 318, column: 17, scope: !1555, inlinedAt: !1720)
!1872 = !DILocation(line: 318, column: 23, scope: !1555, inlinedAt: !1720)
!1873 = !DILocation(line: 318, column: 9, scope: !1555, inlinedAt: !1720)
!1874 = !DILocation(line: 318, column: 15, scope: !1555, inlinedAt: !1720)
!1875 = !DILocation(line: 318, column: 7, scope: !1555, inlinedAt: !1720)
!1876 = !DILocation(line: 329, column: 1, scope: !1715)
