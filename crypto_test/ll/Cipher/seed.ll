; ModuleID = 'bc/Cipher/seed.bc'
source_filename = "Cipher/seed.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.seed_key_st = type { [32 x i32] }

@SS = internal constant [4 x [256 x i32]] [[256 x i32] [i32 696885672, i32 92635524, i32 382128852, i32 331600848, i32 340021332, i32 487395612, i32 747413676, i32 621093156, i32 491606364, i32 54739776, i32 403181592, i32 504238620, i32 289493328, i32 1020063996, i32 181060296, i32 591618912, i32 671621160, i32 71581764, i32 536879136, i32 495817116, i32 549511392, i32 583197408, i32 147374280, i32 386339604, i32 629514660, i32 261063564, i32 50529024, i32 994800504, i32 999011256, i32 318968592, i32 314757840, i32 785310444, i32 809529456, i32 210534540, i32 1057960764, i32 680042664, i32 839004720, i32 500027868, i32 919007988, i32 876900468, i32 751624428, i32 361075092, i32 185271048, i32 390550356, i32 474763356, i32 457921368, i32 1032696252, i32 16843008, i32 604250148, i32 470552604, i32 860058480, i32 411603096, i32 268439568, i32 214745292, i32 851636976, i32 432656856, i32 738992172, i32 667411428, i32 843215472, i32 58950528, i32 462132120, i32 297914832, i32 109478532, i32 164217288, i32 541089888, i32 272650320, i32 595829664, i32 734782440, i32 218956044, i32 914797236, i32 512660124, i32 256852812, i32 931640244, i32 441078360, i32 113689284, i32 944271480, i32 646357668, i32 302125584, i32 797942700, i32 365285844, i32 557932896, i32 63161280, i32 881111220, i32 21053760, i32 306336336, i32 1028485500, i32 227377548, i32 134742024, i32 521081628, i32 428446104, i32 0, i32 420024600, i32 67371012, i32 323179344, i32 935850996, i32 566354400, i32 1036907004, i32 910586484, i32 789521196, i32 654779172, i32 813740208, i32 193692552, i32 235799052, i32 730571688, i32 578986656, i32 776888940, i32 327390096, i32 223166796, i32 692674920, i32 1011642492, i32 151585032, i32 168428040, i32 1066382268, i32 802153452, i32 868479984, i32 96846276, i32 126321540, i32 335810580, i32 1053750012, i32 608460900, i32 516870876, i32 772678188, i32 189481800, i32 436867608, i32 101057028, i32 553722144, i32 726360936, i32 642146916, i32 33686016, i32 902164980, i32 310547088, i32 176849544, i32 202113036, i32 864269232, i32 1045328508, i32 281071824, i32 977957496, i32 122110788, i32 377918100, i32 633725412, i32 637936164, i32 8421504, i32 764256684, i32 533713884, i32 562143648, i32 805318704, i32 923218740, i32 781099692, i32 906375732, i32 352653588, i32 570565152, i32 940060728, i32 885321972, i32 663200676, i32 88424772, i32 206323788, i32 25264512, i32 701096424, i32 75792516, i32 394761108, i32 889532724, i32 197903304, i32 248431308, i32 1007431740, i32 826372464, i32 285282576, i32 130532292, i32 160006536, i32 893743476, i32 1003222008, i32 449499864, i32 952692984, i32 344232084, i32 424235352, i32 42107520, i32 80003268, i32 1070593020, i32 155795784, i32 956903736, i32 658989924, i32 12632256, i32 265274316, i32 398971860, i32 948482232, i32 252642060, i32 244220556, i32 37896768, i32 587408160, i32 293704080, i32 743202924, i32 466342872, i32 612671652, i32 872689716, i32 834793968, i32 138952776, i32 46318272, i32 793731948, i32 1024274748, i32 755835180, i32 4210752, i32 1049539260, i32 1041117756, i32 1015853244, i32 29475264, i32 713728680, i32 982168248, i32 240009804, i32 356864340, i32 990589752, i32 483184860, i32 675831912, i32 1062171516, i32 478974108, i32 415813848, i32 172638792, i32 373707348, i32 927429492, i32 545300640, i32 768467436, i32 105267780, i32 897954228, i32 722150184, i32 625303908, i32 986379000, i32 600040416, i32 965325240, i32 830583216, i32 529503132, i32 508449372, i32 969535992, i32 650568420, i32 847426224, i32 822161712, i32 717939432, i32 760045932, i32 525292380, i32 616882404, i32 817950960, i32 231588300, i32 143163528, i32 369496596, i32 973746744, i32 407392344, i32 348442836, i32 574775904, i32 688464168, i32 117900036, i32 855847728, i32 684253416, i32 453710616, i32 84214020, i32 961114488, i32 276861072, i32 709517928, i32 705307176, i32 445289112], [256 x i32] [i32 943196208, i32 -399980320, i32 741149985, i32 -1540979038, i32 -871379005, i32 -601960750, i32 -1338801229, i32 -1204254544, i32 -1406169181, i32 1612726368, i32 1410680145, i32 -1006123069, i32 1141130304, i32 1815039843, i32 1747667811, i32 1478183763, i32 -1073495101, i32 1612857954, i32 808649523, i32 -1271560783, i32 673777953, i32 -1608482656, i32 -534592798, i32 -1540913245, i32 -804011053, i32 -1877900911, i32 269549841, i32 67503618, i32 471600144, i32 -1136882512, i32 875955762, i32 1208699715, i32 -332410909, i32 -2012706688, i32 1814842464, i32 -1473738592, i32 337053459, i32 -1006320448, i32 336987666, i32 -197868304, i32 -1073560894, i32 1141196097, i32 -534658591, i32 -736704814, i32 1010765619, i32 1010634033, i32 -1945203070, i32 -1743222640, i32 673712160, i32 1276005954, i32 -197736718, i32 1010699826, i32 -1541044831, i32 -130430479, i32 202181889, i32 -601894957, i32 -669464368, i32 673909539, i32 1680229986, i32 2017086066, i32 606537507, i32 741281571, i32 -265174543, i32 1882342002, i32 1073889858, i32 -736836400, i32 1073824065, i32 -1073692480, i32 1882407795, i32 1680295779, i32 -1406366560, i32 -2012509309, i32 -197670925, i32 -1406300767, i32 -2147450752, i32 471797523, i32 -938816830, i32 741084192, i32 -1473607006, i32 875824176, i32 -804076846, i32 134941443, i32 -332476702, i32 -399914527, i32 1545424209, i32 -1810594672, i32 404228112, i32 -130496272, i32 1410811731, i32 -1406234974, i32 134744064, i32 -1006254655, i32 269681427, i32 -871510591, i32 -2079947134, i32 -1204188751, i32 -62926861, i32 2084392305, i32 -1073626687, i32 808517937, i32 -197802511, i32 -2012575102, i32 1747602018, i32 -1338932815, i32 -804142639, i32 538968096, i32 -736639021, i32 131586, i32 539099682, i32 67372032, i32 1747470432, i32 1882276209, i32 67569411, i32 -669266989, i32 -1675784815, i32 -1743156847, i32 1612792161, i32 -1136750926, i32 -467220766, i32 1478052177, i32 -602026543, i32 1343308113, i32 -1877966704, i32 -602092336, i32 -1743091054, i32 -1608285277, i32 -1473541213, i32 -804208432, i32 -2147384959, i32 202313475, i32 1141327683, i32 404359698, i32 -534527005, i32 -332608288, i32 -1945268863, i32 -1136685133, i32 -1810463086, i32 2017151859, i32 1545358416, i32 -1608351070, i32 -1608416863, i32 1612923747, i32 539165475, i32 1275940161, i32 -938948416, i32 -1675719022, i32 -1675850608, i32 943327794, i32 202116096, i32 741215778, i32 -1204122958, i32 1814974050, i32 -1675653229, i32 1478117970, i32 -265108750, i32 -1877835118, i32 -265042957, i32 1208568129, i32 2016954480, i32 -871576384, i32 336921873, i32 -130298893, i32 1882210416, i32 1949648241, i32 2084523891, i32 875889969, i32 269484048, i32 197379, i32 1680098400, i32 1814908257, i32 -1006188862, i32 1949582448, i32 -736770607, i32 -1271626576, i32 -399848734, i32 134809857, i32 1949714034, i32 404293905, i32 -62992654, i32 1073758272, i32 269615634, i32 -534724384, i32 -1136816719, i32 67437825, i32 -130364686, i32 65793, i32 -265240336, i32 673843746, i32 1545490002, i32 -1473672799, i32 1410745938, i32 1073955651, i32 -2080012927, i32 336856080, i32 -2012640895, i32 -1743025261, i32 -1338998608, i32 -467286559, i32 1208502336, i32 2017020273, i32 -1810397293, i32 -63124240, i32 471731730, i32 -2147319166, i32 539033889, i32 -1945334656, i32 404425491, i32 1545555795, i32 1949779827, i32 1410614352, i32 -1338867022, i32 471665937, i32 606405921, i32 1276071747, i32 0, i32 1141261890, i32 -332542495, i32 1477986384, i32 1343373906, i32 -399782941, i32 2084458098, i32 -669332782, i32 -938882623, i32 -63058447, i32 808452144, i32 -1810528879, i32 1680164193, i32 1010568240, i32 -1271494990, i32 -467352352, i32 -1204057165, i32 2084326512, i32 202247682, i32 1343242320, i32 943262001, i32 606471714, i32 808583730, i32 -2080078720, i32 1747536225, i32 -1877769325, i32 876021555, i32 -467154973, i32 606340128, i32 -1541110624, i32 -938751037, i32 1343439699, i32 134875650, i32 -2079881341, i32 -669398575, i32 1275874368, i32 -2147253373, i32 -1945137277, i32 -871444798, i32 943393587, i32 1208633922, i32 -1271429197], [256 x i32] [i32 -1582814839, i32 -2122054267, i32 -757852474, i32 -741338173, i32 1347687492, i32 287055117, i32 -1599329140, i32 556016901, i32 1364991309, i32 1128268611, i32 270014472, i32 303832590, i32 1364201793, i32 -251904820, i32 -1027077430, i32 1667244867, i32 539502600, i32 1078199364, i32 538976256, i32 -1852039795, i32 -522182464, i32 -488627518, i32 -1060632376, i32 320083719, i32 -1583078011, i32 -2087972977, i32 50332419, i32 1937259339, i32 -1279771765, i32 319820547, i32 -758115646, i32 -487838002, i32 1886400576, i32 -2138305396, i32 859586319, i32 -1599592312, i32 842019330, i32 -774103603, i32 -218876218, i32 1886663748, i32 -521392948, i32 -1852566139, i32 50858763, i32 1398019911, i32 1348213836, i32 1398283083, i32 -1313063539, i32 16777473, i32 539239428, i32 270277644, i32 1936732995, i32 -1869080440, i32 269488128, i32 -1060369204, i32 -219139390, i32 -774366775, i32 539765772, i32 -471586873, i32 1919955522, i32 -2088762493, i32 -1818748021, i32 -774893119, i32 -2105276794, i32 -1043854903, i32 1616912448, i32 1347424320, i32 -1549786237, i32 -471323701, i32 17566989, i32 -1296812410, i32 -1835262322, i32 1129058127, i32 -1280034937, i32 1381505610, i32 -1027340602, i32 1886926920, i32 -1566300538, i32 303043074, i32 -1548996721, i32 -774629947, i32 1633689921, i32 -1010826301, i32 -1330367356, i32 1094713665, i32 1380979266, i32 1903967565, i32 -2121527923, i32 526344, i32 320610063, i32 -1852302967, i32 0, i32 286791945, i32 263172, i32 1397756739, i32 -202098745, i32 -505404991, i32 -235127347, i32 1920218694, i32 590098191, i32 589571847, i32 -1330630528, i32 -2088236149, i32 34344462, i32 -1549259893, i32 -1566563710, i32 1651256910, i32 -1819274365, i32 1095503181, i32 1634216265, i32 1887190092, i32 17303817, i32 34081290, i32 -1279508593, i32 -471060529, i32 -202361917, i32 -1044118075, i32 -2088499321, i32 269751300, i32 -218349874, i32 1617175620, i32 -757326130, i32 573320718, i32 1128794955, i32 303569418, i32 33818118, i32 555753729, i32 1667771211, i32 1650730566, i32 33554946, i32 -235653691, i32 -1836051838, i32 -2105013622, i32 789516, i32 -1280298109, i32 1920745038, i32 -791670592, i32 1920481866, i32 1128531783, i32 -1835788666, i32 -505141819, i32 572794374, i32 -2139094912, i32 -1582551667, i32 -740548657, i32 -1583341183, i32 808464384, i32 859059975, i32 -1565774194, i32 842282502, i32 286528773, i32 572531202, i32 808990728, i32 -252431164, i32 -1549523065, i32 1094976837, i32 1078725708, i32 -2122317439, i32 -504878647, i32 -2138831740, i32 -1819011193, i32 825505029, i32 -1010299957, i32 -1026814258, i32 809253900, i32 1903178049, i32 286265601, i32 -1010563129, i32 -2121791095, i32 1903441221, i32 -201835573, i32 -757589302, i32 -252167992, i32 -1869343612, i32 1364728137, i32 -2105539966, i32 -1060895548, i32 -201572401, i32 1095240009, i32 825768201, i32 1667508039, i32 -1061158720, i32 -1010036785, i32 -741075001, i32 -1330104184, i32 51121935, i32 -2104750450, i32 1111491138, i32 589308675, i32 -1852829311, i32 1617701964, i32 -740811829, i32 -1599855484, i32 808727556, i32 -235916863, i32 1078462536, i32 -1027603774, i32 1668034383, i32 826031373, i32 556543245, i32 1077936192, i32 -1296286066, i32 842808846, i32 -1329841012, i32 -1044381247, i32 -1566037366, i32 -1296549238, i32 1112280654, i32 1364464965, i32 859323147, i32 -790881076, i32 1617438792, i32 1937522511, i32 -1868817268, i32 -791144248, i32 1112017482, i32 1381242438, i32 1936996167, i32 -1600118656, i32 -504615475, i32 1111754310, i32 -1313589883, i32 589835019, i32 1633953093, i32 -218613046, i32 -471850045, i32 -1313326711, i32 -1313853055, i32 -1818484849, i32 1381768782, i32 -235390519, i32 -488364346, i32 -1297075582, i32 825241857, i32 -488101174, i32 1634479437, i32 1398546255, i32 -521919292, i32 -252694336, i32 -1043591731, i32 -2138568568, i32 303306246, i32 842545674, i32 1347950664, i32 -791407420, i32 1650467394, i32 556280073, i32 50595591, i32 858796803, i32 -521656120, i32 320346891, i32 17040645, i32 1903704393, i32 -1869606784, i32 1650993738, i32 573057546, i32 -1835525494], [256 x i32] [i32 137377848, i32 -924784600, i32 220277805, i32 -2036161498, i32 -809251825, i32 -825041890, i32 -2085375949, i32 -2001684424, i32 -1885098961, i32 1080057888, i32 1162957845, i32 -943471609, i32 1145062404, i32 1331915823, i32 1264805931, i32 1263753243, i32 -1010581501, i32 1113743394, i32 53686323, i32 -2051951563, i32 153167913, i32 -2136956896, i32 -1025318878, i32 -2019318745, i32 -1009528813, i32 -2121166831, i32 17895441, i32 100795398, i32 202382364, i32 -1934574532, i32 103953462, i32 1262700555, i32 -807146449, i32 -2004842488, i32 1281387564, i32 -2002737112, i32 118690839, i32 -993999868, i32 101848086, i32 -990841804, i32 -1027424254, i32 1161905157, i32 -1042161631, i32 -959261674, i32 255015999, i32 221330493, i32 -1904047090, i32 -2003789800, i32 136325160, i32 1312967694, i32 -957156298, i32 238173246, i32 -2053004251, i32 -906889159, i32 218172429, i32 -808199137, i32 -925837288, i32 186853419, i32 1180853286, i32 1249015866, i32 119743527, i32 253963311, i32 -1041108943, i32 1114796082, i32 1111638018, i32 -992947180, i32 1094795265, i32 -1061109760, i32 1131638835, i32 1197696039, i32 -1935627220, i32 -1954314229, i32 -940313545, i32 -1918784467, i32 -2139062272, i32 252910623, i32 -893204470, i32 203435052, i32 -1969051606, i32 70267956, i32 -1026371566, i32 184748043, i32 -823989202, i32 -907941847, i32 1297177629, i32 -2070899692, i32 135272472, i32 -923731912, i32 1196643351, i32 -1901941714, i32 134219784, i32 -977157115, i32 51580947, i32 -842937331, i32 -2038266874, i32 -1984841671, i32 -806093761, i32 1299283005, i32 -1044267007, i32 20000817, i32 -973999051, i32 -1971156982, i32 1247963178, i32 -2119061455, i32 -1043214319, i32 2105376, i32 -942418921, i32 33685506, i32 35790882, i32 67109892, i32 1214277672, i32 1097953329, i32 117638151, i32 -875309029, i32 -1919837155, i32 -1986947047, i32 1096900641, i32 -1900889026, i32 -958208986, i32 1230067737, i32 -841884643, i32 1095847953, i32 -2138009584, i32 -858727396, i32 -1970104294, i32 -2086428637, i32 -1952208853, i32 -1060057072, i32 -2122219519, i32 251857935, i32 1195590663, i32 168957978, i32 -1008476125, i32 -857674708, i32 -1920889843, i32 -1884046273, i32 -2037214186, i32 1265858619, i32 1280334876, i32 -2103271390, i32 -2120114143, i32 1130586147, i32 52633635, i32 1296124941, i32 -926889976, i32 -1902994402, i32 -1936679908, i32 171063354, i32 201329676, i32 237120558, i32 -1967998918, i32 1315073070, i32 -1886151649, i32 1246910490, i32 -1024266190, i32 -2104324078, i32 -1007423437, i32 1229015049, i32 1215330360, i32 -859780084, i32 85005333, i32 -873203653, i32 1081110576, i32 1165063221, i32 1332968511, i32 87110709, i32 1052688, i32 50528259, i32 1147167780, i32 1298230317, i32 -960314362, i32 1148220468, i32 -976104427, i32 -2068794316, i32 -891099094, i32 151062537, i32 1181905974, i32 152115225, i32 -822936514, i32 1077952512, i32 34738194, i32 -1059004384, i32 -1917731779, i32 83952645, i32 -890046406, i32 16842753, i32 -1057951696, i32 170010666, i32 1314020382, i32 -1985894359, i32 1179800598, i32 1128480771, i32 -2055109627, i32 68162580, i32 -1987999735, i32 -1953261541, i32 -2135904208, i32 -975051739, i32 1212172296, i32 1232173113, i32 -2020371433, i32 -856622020, i32 236067870, i32 -2105376766, i32 18948129, i32 -1937732596, i32 185800731, i32 1330863135, i32 1198748727, i32 1146115092, i32 -2102218702, i32 219225117, i32 86058021, i32 1329810447, i32 0, i32 1178747910, i32 -840831955, i32 1213224984, i32 1112690706, i32 -874256341, i32 1316125758, i32 -892151782, i32 -910047223, i32 -839779267, i32 3158064, i32 -2054056939, i32 1164010533, i32 204487740, i32 -2035108810, i32 -991894492, i32 -1951156165, i32 1282440252, i32 235015182, i32 1079005200, i32 154220601, i32 102900774, i32 36843570, i32 -2071952380, i32 1231120425, i32 -2087481325, i32 120796215, i32 -941366233, i32 69215268, i32 -2069847004, i32 -876361717, i32 1129533459, i32 167905290, i32 -2021424121, i32 -908994535, i32 1279282188, i32 -2088534013, i32 -1887204337, i32 -826094578, i32 187906107, i32 1245857802, i32 -2018266057]], align 16, !dbg !0
@.str = private unnamed_addr constant [5 x i8] c"mark\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [14 x i8] c"Cipher/seed.c\00", section "llvm.metadata"
@key = internal constant [32 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 16, !dbg !11
@__const.main.charset = private unnamed_addr constant [94 x i8] c"!#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\00", align 16

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @SEED_set_key(i8* %rawkey, %struct.seed_key_st* %ks) #0 !dbg !26 {
entry:
  %rawkey.addr = alloca i8*, align 8
  %ks.addr = alloca %struct.seed_key_st*, align 8
  %x1 = alloca i32, align 4
  %x2 = alloca i32, align 4
  %x3 = alloca i32, align 4
  %x4 = alloca i32, align 4
  %t0 = alloca i32, align 4
  %t1 = alloca i32, align 4
  store i8* %rawkey, i8** %rawkey.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rawkey.addr, metadata !37, metadata !DIExpression()), !dbg !38
  store %struct.seed_key_st* %ks, %struct.seed_key_st** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seed_key_st** %ks.addr, metadata !39, metadata !DIExpression()), !dbg !40
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !41, metadata !DIExpression()), !dbg !42
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !43, metadata !DIExpression()), !dbg !44
  call void @llvm.dbg.declare(metadata i32* %x3, metadata !45, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.declare(metadata i32* %x4, metadata !47, metadata !DIExpression()), !dbg !48
  call void @llvm.dbg.declare(metadata i32* %t0, metadata !49, metadata !DIExpression()), !dbg !50
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !51, metadata !DIExpression()), !dbg !52
  %0 = load i8*, i8** %rawkey.addr, align 8, !dbg !53
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !53
  %1 = load i8, i8* %arrayidx, align 1, !dbg !53
  %conv = zext i8 %1 to i32, !dbg !53
  %shl = shl i32 %conv, 24, !dbg !53
  %2 = load i8*, i8** %rawkey.addr, align 8, !dbg !53
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !53
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !53
  %conv2 = zext i8 %3 to i32, !dbg !53
  %shl3 = shl i32 %conv2, 16, !dbg !53
  %or = or i32 %shl, %shl3, !dbg !53
  %4 = load i8*, i8** %rawkey.addr, align 8, !dbg !53
  %arrayidx4 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !53
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !53
  %conv5 = zext i8 %5 to i32, !dbg !53
  %shl6 = shl i32 %conv5, 8, !dbg !53
  %or7 = or i32 %or, %shl6, !dbg !53
  %6 = load i8*, i8** %rawkey.addr, align 8, !dbg !53
  %arrayidx8 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !53
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !53
  %conv9 = zext i8 %7 to i32, !dbg !53
  %or10 = or i32 %or7, %conv9, !dbg !53
  store i32 %or10, i32* %x1, align 4, !dbg !53
  %8 = load i8*, i8** %rawkey.addr, align 8, !dbg !54
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 4, !dbg !54
  %arrayidx11 = getelementptr inbounds i8, i8* %add.ptr, i64 0, !dbg !54
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !54
  %conv12 = zext i8 %9 to i32, !dbg !54
  %shl13 = shl i32 %conv12, 24, !dbg !54
  %10 = load i8*, i8** %rawkey.addr, align 8, !dbg !54
  %add.ptr14 = getelementptr inbounds i8, i8* %10, i64 4, !dbg !54
  %arrayidx15 = getelementptr inbounds i8, i8* %add.ptr14, i64 1, !dbg !54
  %11 = load i8, i8* %arrayidx15, align 1, !dbg !54
  %conv16 = zext i8 %11 to i32, !dbg !54
  %shl17 = shl i32 %conv16, 16, !dbg !54
  %or18 = or i32 %shl13, %shl17, !dbg !54
  %12 = load i8*, i8** %rawkey.addr, align 8, !dbg !54
  %add.ptr19 = getelementptr inbounds i8, i8* %12, i64 4, !dbg !54
  %arrayidx20 = getelementptr inbounds i8, i8* %add.ptr19, i64 2, !dbg !54
  %13 = load i8, i8* %arrayidx20, align 1, !dbg !54
  %conv21 = zext i8 %13 to i32, !dbg !54
  %shl22 = shl i32 %conv21, 8, !dbg !54
  %or23 = or i32 %or18, %shl22, !dbg !54
  %14 = load i8*, i8** %rawkey.addr, align 8, !dbg !54
  %add.ptr24 = getelementptr inbounds i8, i8* %14, i64 4, !dbg !54
  %arrayidx25 = getelementptr inbounds i8, i8* %add.ptr24, i64 3, !dbg !54
  %15 = load i8, i8* %arrayidx25, align 1, !dbg !54
  %conv26 = zext i8 %15 to i32, !dbg !54
  %or27 = or i32 %or23, %conv26, !dbg !54
  store i32 %or27, i32* %x2, align 4, !dbg !54
  %16 = load i8*, i8** %rawkey.addr, align 8, !dbg !55
  %add.ptr28 = getelementptr inbounds i8, i8* %16, i64 8, !dbg !55
  %arrayidx29 = getelementptr inbounds i8, i8* %add.ptr28, i64 0, !dbg !55
  %17 = load i8, i8* %arrayidx29, align 1, !dbg !55
  %conv30 = zext i8 %17 to i32, !dbg !55
  %shl31 = shl i32 %conv30, 24, !dbg !55
  %18 = load i8*, i8** %rawkey.addr, align 8, !dbg !55
  %add.ptr32 = getelementptr inbounds i8, i8* %18, i64 8, !dbg !55
  %arrayidx33 = getelementptr inbounds i8, i8* %add.ptr32, i64 1, !dbg !55
  %19 = load i8, i8* %arrayidx33, align 1, !dbg !55
  %conv34 = zext i8 %19 to i32, !dbg !55
  %shl35 = shl i32 %conv34, 16, !dbg !55
  %or36 = or i32 %shl31, %shl35, !dbg !55
  %20 = load i8*, i8** %rawkey.addr, align 8, !dbg !55
  %add.ptr37 = getelementptr inbounds i8, i8* %20, i64 8, !dbg !55
  %arrayidx38 = getelementptr inbounds i8, i8* %add.ptr37, i64 2, !dbg !55
  %21 = load i8, i8* %arrayidx38, align 1, !dbg !55
  %conv39 = zext i8 %21 to i32, !dbg !55
  %shl40 = shl i32 %conv39, 8, !dbg !55
  %or41 = or i32 %or36, %shl40, !dbg !55
  %22 = load i8*, i8** %rawkey.addr, align 8, !dbg !55
  %add.ptr42 = getelementptr inbounds i8, i8* %22, i64 8, !dbg !55
  %arrayidx43 = getelementptr inbounds i8, i8* %add.ptr42, i64 3, !dbg !55
  %23 = load i8, i8* %arrayidx43, align 1, !dbg !55
  %conv44 = zext i8 %23 to i32, !dbg !55
  %or45 = or i32 %or41, %conv44, !dbg !55
  store i32 %or45, i32* %x3, align 4, !dbg !55
  %24 = load i8*, i8** %rawkey.addr, align 8, !dbg !56
  %add.ptr46 = getelementptr inbounds i8, i8* %24, i64 12, !dbg !56
  %arrayidx47 = getelementptr inbounds i8, i8* %add.ptr46, i64 0, !dbg !56
  %25 = load i8, i8* %arrayidx47, align 1, !dbg !56
  %conv48 = zext i8 %25 to i32, !dbg !56
  %shl49 = shl i32 %conv48, 24, !dbg !56
  %26 = load i8*, i8** %rawkey.addr, align 8, !dbg !56
  %add.ptr50 = getelementptr inbounds i8, i8* %26, i64 12, !dbg !56
  %arrayidx51 = getelementptr inbounds i8, i8* %add.ptr50, i64 1, !dbg !56
  %27 = load i8, i8* %arrayidx51, align 1, !dbg !56
  %conv52 = zext i8 %27 to i32, !dbg !56
  %shl53 = shl i32 %conv52, 16, !dbg !56
  %or54 = or i32 %shl49, %shl53, !dbg !56
  %28 = load i8*, i8** %rawkey.addr, align 8, !dbg !56
  %add.ptr55 = getelementptr inbounds i8, i8* %28, i64 12, !dbg !56
  %arrayidx56 = getelementptr inbounds i8, i8* %add.ptr55, i64 2, !dbg !56
  %29 = load i8, i8* %arrayidx56, align 1, !dbg !56
  %conv57 = zext i8 %29 to i32, !dbg !56
  %shl58 = shl i32 %conv57, 8, !dbg !56
  %or59 = or i32 %or54, %shl58, !dbg !56
  %30 = load i8*, i8** %rawkey.addr, align 8, !dbg !56
  %add.ptr60 = getelementptr inbounds i8, i8* %30, i64 12, !dbg !56
  %arrayidx61 = getelementptr inbounds i8, i8* %add.ptr60, i64 3, !dbg !56
  %31 = load i8, i8* %arrayidx61, align 1, !dbg !56
  %conv62 = zext i8 %31 to i32, !dbg !56
  %or63 = or i32 %or59, %conv62, !dbg !56
  store i32 %or63, i32* %x4, align 4, !dbg !56
  %32 = load i32, i32* %x1, align 4, !dbg !57
  %33 = load i32, i32* %x3, align 4, !dbg !58
  %add = add i32 %32, %33, !dbg !59
  %sub = sub i32 %add, -1640531527, !dbg !60
  store i32 %sub, i32* %t0, align 4, !dbg !61
  %34 = load i32, i32* %x2, align 4, !dbg !62
  %35 = load i32, i32* %x4, align 4, !dbg !63
  %sub64 = sub i32 %34, %35, !dbg !64
  %add65 = add i32 %sub64, -1640531527, !dbg !65
  store i32 %add65, i32* %t1, align 4, !dbg !66
  %36 = load i32, i32* %t0, align 4, !dbg !67
  %conv66 = trunc i32 %36 to i8, !dbg !67
  %conv67 = zext i8 %conv66 to i32, !dbg !67
  %and = and i32 %conv67, 255, !dbg !67
  %idxprom = sext i32 %and to i64, !dbg !67
  %arrayidx68 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom, !dbg !67
  %37 = load i32, i32* %arrayidx68, align 4, !dbg !67
  %38 = load i32, i32* %t0, align 4, !dbg !67
  %shr = lshr i32 %38, 8, !dbg !67
  %conv69 = trunc i32 %shr to i8, !dbg !67
  %conv70 = zext i8 %conv69 to i32, !dbg !67
  %and71 = and i32 %conv70, 255, !dbg !67
  %idxprom72 = sext i32 %and71 to i64, !dbg !67
  %arrayidx73 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom72, !dbg !67
  %39 = load i32, i32* %arrayidx73, align 4, !dbg !67
  %xor = xor i32 %37, %39, !dbg !67
  %40 = load i32, i32* %t0, align 4, !dbg !67
  %shr74 = lshr i32 %40, 16, !dbg !67
  %conv75 = trunc i32 %shr74 to i8, !dbg !67
  %conv76 = zext i8 %conv75 to i32, !dbg !67
  %and77 = and i32 %conv76, 255, !dbg !67
  %idxprom78 = sext i32 %and77 to i64, !dbg !67
  %arrayidx79 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom78, !dbg !67
  %41 = load i32, i32* %arrayidx79, align 4, !dbg !67
  %xor80 = xor i32 %xor, %41, !dbg !67
  %42 = load i32, i32* %t0, align 4, !dbg !67
  %shr81 = lshr i32 %42, 24, !dbg !67
  %conv82 = trunc i32 %shr81 to i8, !dbg !67
  %conv83 = zext i8 %conv82 to i32, !dbg !67
  %and84 = and i32 %conv83, 255, !dbg !67
  %idxprom85 = sext i32 %and84 to i64, !dbg !67
  %arrayidx86 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom85, !dbg !67
  %43 = load i32, i32* %arrayidx86, align 4, !dbg !67
  %xor87 = xor i32 %xor80, %43, !dbg !67
  %44 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !67
  %data = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %44, i32 0, i32 0, !dbg !67
  %arrayidx88 = getelementptr inbounds [32 x i32], [32 x i32]* %data, i64 0, i64 0, !dbg !67
  %arrayidx89 = getelementptr inbounds i32, i32* %arrayidx88, i64 0, !dbg !67
  store i32 %xor87, i32* %arrayidx89, align 4, !dbg !67
  %45 = load i32, i32* %t1, align 4, !dbg !67
  %conv90 = trunc i32 %45 to i8, !dbg !67
  %conv91 = zext i8 %conv90 to i32, !dbg !67
  %and92 = and i32 %conv91, 255, !dbg !67
  %idxprom93 = sext i32 %and92 to i64, !dbg !67
  %arrayidx94 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom93, !dbg !67
  %46 = load i32, i32* %arrayidx94, align 4, !dbg !67
  %47 = load i32, i32* %t1, align 4, !dbg !67
  %shr95 = lshr i32 %47, 8, !dbg !67
  %conv96 = trunc i32 %shr95 to i8, !dbg !67
  %conv97 = zext i8 %conv96 to i32, !dbg !67
  %and98 = and i32 %conv97, 255, !dbg !67
  %idxprom99 = sext i32 %and98 to i64, !dbg !67
  %arrayidx100 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom99, !dbg !67
  %48 = load i32, i32* %arrayidx100, align 4, !dbg !67
  %xor101 = xor i32 %46, %48, !dbg !67
  %49 = load i32, i32* %t1, align 4, !dbg !67
  %shr102 = lshr i32 %49, 16, !dbg !67
  %conv103 = trunc i32 %shr102 to i8, !dbg !67
  %conv104 = zext i8 %conv103 to i32, !dbg !67
  %and105 = and i32 %conv104, 255, !dbg !67
  %idxprom106 = sext i32 %and105 to i64, !dbg !67
  %arrayidx107 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom106, !dbg !67
  %50 = load i32, i32* %arrayidx107, align 4, !dbg !67
  %xor108 = xor i32 %xor101, %50, !dbg !67
  %51 = load i32, i32* %t1, align 4, !dbg !67
  %shr109 = lshr i32 %51, 24, !dbg !67
  %conv110 = trunc i32 %shr109 to i8, !dbg !67
  %conv111 = zext i8 %conv110 to i32, !dbg !67
  %and112 = and i32 %conv111, 255, !dbg !67
  %idxprom113 = sext i32 %and112 to i64, !dbg !67
  %arrayidx114 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom113, !dbg !67
  %52 = load i32, i32* %arrayidx114, align 4, !dbg !67
  %xor115 = xor i32 %xor108, %52, !dbg !67
  %53 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !67
  %data116 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %53, i32 0, i32 0, !dbg !67
  %arrayidx117 = getelementptr inbounds [32 x i32], [32 x i32]* %data116, i64 0, i64 0, !dbg !67
  %arrayidx118 = getelementptr inbounds i32, i32* %arrayidx117, i64 1, !dbg !67
  store i32 %xor115, i32* %arrayidx118, align 4, !dbg !67
  %54 = load i32, i32* %x1, align 4, !dbg !68
  store i32 %54, i32* %t0, align 4, !dbg !68
  %55 = load i32, i32* %x1, align 4, !dbg !68
  %shr119 = lshr i32 %55, 8, !dbg !68
  %56 = load i32, i32* %x2, align 4, !dbg !68
  %shl120 = shl i32 %56, 24, !dbg !68
  %xor121 = xor i32 %shr119, %shl120, !dbg !68
  store i32 %xor121, i32* %x1, align 4, !dbg !68
  %57 = load i32, i32* %x2, align 4, !dbg !68
  %shr122 = lshr i32 %57, 8, !dbg !68
  %58 = load i32, i32* %t0, align 4, !dbg !68
  %shl123 = shl i32 %58, 24, !dbg !68
  %xor124 = xor i32 %shr122, %shl123, !dbg !68
  store i32 %xor124, i32* %x2, align 4, !dbg !68
  %59 = load i32, i32* %x1, align 4, !dbg !68
  %60 = load i32, i32* %x3, align 4, !dbg !68
  %add125 = add i32 %59, %60, !dbg !68
  %sub126 = sub i32 %add125, 1013904243, !dbg !68
  store i32 %sub126, i32* %t0, align 4, !dbg !68
  %61 = load i32, i32* %x2, align 4, !dbg !68
  %add127 = add i32 %61, 1013904243, !dbg !68
  %62 = load i32, i32* %x4, align 4, !dbg !68
  %sub128 = sub i32 %add127, %62, !dbg !68
  store i32 %sub128, i32* %t1, align 4, !dbg !68
  %63 = load i32, i32* %t0, align 4, !dbg !69
  %conv129 = trunc i32 %63 to i8, !dbg !69
  %conv130 = zext i8 %conv129 to i32, !dbg !69
  %and131 = and i32 %conv130, 255, !dbg !69
  %idxprom132 = sext i32 %and131 to i64, !dbg !69
  %arrayidx133 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom132, !dbg !69
  %64 = load i32, i32* %arrayidx133, align 4, !dbg !69
  %65 = load i32, i32* %t0, align 4, !dbg !69
  %shr134 = lshr i32 %65, 8, !dbg !69
  %conv135 = trunc i32 %shr134 to i8, !dbg !69
  %conv136 = zext i8 %conv135 to i32, !dbg !69
  %and137 = and i32 %conv136, 255, !dbg !69
  %idxprom138 = sext i32 %and137 to i64, !dbg !69
  %arrayidx139 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom138, !dbg !69
  %66 = load i32, i32* %arrayidx139, align 4, !dbg !69
  %xor140 = xor i32 %64, %66, !dbg !69
  %67 = load i32, i32* %t0, align 4, !dbg !69
  %shr141 = lshr i32 %67, 16, !dbg !69
  %conv142 = trunc i32 %shr141 to i8, !dbg !69
  %conv143 = zext i8 %conv142 to i32, !dbg !69
  %and144 = and i32 %conv143, 255, !dbg !69
  %idxprom145 = sext i32 %and144 to i64, !dbg !69
  %arrayidx146 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom145, !dbg !69
  %68 = load i32, i32* %arrayidx146, align 4, !dbg !69
  %xor147 = xor i32 %xor140, %68, !dbg !69
  %69 = load i32, i32* %t0, align 4, !dbg !69
  %shr148 = lshr i32 %69, 24, !dbg !69
  %conv149 = trunc i32 %shr148 to i8, !dbg !69
  %conv150 = zext i8 %conv149 to i32, !dbg !69
  %and151 = and i32 %conv150, 255, !dbg !69
  %idxprom152 = sext i32 %and151 to i64, !dbg !69
  %arrayidx153 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom152, !dbg !69
  %70 = load i32, i32* %arrayidx153, align 4, !dbg !69
  %xor154 = xor i32 %xor147, %70, !dbg !69
  %71 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !69
  %data155 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %71, i32 0, i32 0, !dbg !69
  %arrayidx156 = getelementptr inbounds [32 x i32], [32 x i32]* %data155, i64 0, i64 2, !dbg !69
  %arrayidx157 = getelementptr inbounds i32, i32* %arrayidx156, i64 0, !dbg !69
  store i32 %xor154, i32* %arrayidx157, align 4, !dbg !69
  %72 = load i32, i32* %t1, align 4, !dbg !69
  %conv158 = trunc i32 %72 to i8, !dbg !69
  %conv159 = zext i8 %conv158 to i32, !dbg !69
  %and160 = and i32 %conv159, 255, !dbg !69
  %idxprom161 = sext i32 %and160 to i64, !dbg !69
  %arrayidx162 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom161, !dbg !69
  %73 = load i32, i32* %arrayidx162, align 4, !dbg !69
  %74 = load i32, i32* %t1, align 4, !dbg !69
  %shr163 = lshr i32 %74, 8, !dbg !69
  %conv164 = trunc i32 %shr163 to i8, !dbg !69
  %conv165 = zext i8 %conv164 to i32, !dbg !69
  %and166 = and i32 %conv165, 255, !dbg !69
  %idxprom167 = sext i32 %and166 to i64, !dbg !69
  %arrayidx168 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom167, !dbg !69
  %75 = load i32, i32* %arrayidx168, align 4, !dbg !69
  %xor169 = xor i32 %73, %75, !dbg !69
  %76 = load i32, i32* %t1, align 4, !dbg !69
  %shr170 = lshr i32 %76, 16, !dbg !69
  %conv171 = trunc i32 %shr170 to i8, !dbg !69
  %conv172 = zext i8 %conv171 to i32, !dbg !69
  %and173 = and i32 %conv172, 255, !dbg !69
  %idxprom174 = sext i32 %and173 to i64, !dbg !69
  %arrayidx175 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom174, !dbg !69
  %77 = load i32, i32* %arrayidx175, align 4, !dbg !69
  %xor176 = xor i32 %xor169, %77, !dbg !69
  %78 = load i32, i32* %t1, align 4, !dbg !69
  %shr177 = lshr i32 %78, 24, !dbg !69
  %conv178 = trunc i32 %shr177 to i8, !dbg !69
  %conv179 = zext i8 %conv178 to i32, !dbg !69
  %and180 = and i32 %conv179, 255, !dbg !69
  %idxprom181 = sext i32 %and180 to i64, !dbg !69
  %arrayidx182 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom181, !dbg !69
  %79 = load i32, i32* %arrayidx182, align 4, !dbg !69
  %xor183 = xor i32 %xor176, %79, !dbg !69
  %80 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !69
  %data184 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %80, i32 0, i32 0, !dbg !69
  %arrayidx185 = getelementptr inbounds [32 x i32], [32 x i32]* %data184, i64 0, i64 2, !dbg !69
  %arrayidx186 = getelementptr inbounds i32, i32* %arrayidx185, i64 1, !dbg !69
  store i32 %xor183, i32* %arrayidx186, align 4, !dbg !69
  %81 = load i32, i32* %x3, align 4, !dbg !70
  store i32 %81, i32* %t0, align 4, !dbg !70
  %82 = load i32, i32* %x3, align 4, !dbg !70
  %shl187 = shl i32 %82, 8, !dbg !70
  %83 = load i32, i32* %x4, align 4, !dbg !70
  %shr188 = lshr i32 %83, 24, !dbg !70
  %xor189 = xor i32 %shl187, %shr188, !dbg !70
  store i32 %xor189, i32* %x3, align 4, !dbg !70
  %84 = load i32, i32* %x4, align 4, !dbg !70
  %shl190 = shl i32 %84, 8, !dbg !70
  %85 = load i32, i32* %t0, align 4, !dbg !70
  %shr191 = lshr i32 %85, 24, !dbg !70
  %xor192 = xor i32 %shl190, %shr191, !dbg !70
  store i32 %xor192, i32* %x4, align 4, !dbg !70
  %86 = load i32, i32* %x1, align 4, !dbg !70
  %87 = load i32, i32* %x3, align 4, !dbg !70
  %add193 = add i32 %86, %87, !dbg !70
  %sub194 = sub i32 %add193, 2027808486, !dbg !70
  store i32 %sub194, i32* %t0, align 4, !dbg !70
  %88 = load i32, i32* %x2, align 4, !dbg !70
  %add195 = add i32 %88, 2027808486, !dbg !70
  %89 = load i32, i32* %x4, align 4, !dbg !70
  %sub196 = sub i32 %add195, %89, !dbg !70
  store i32 %sub196, i32* %t1, align 4, !dbg !70
  %90 = load i32, i32* %t0, align 4, !dbg !71
  %conv197 = trunc i32 %90 to i8, !dbg !71
  %conv198 = zext i8 %conv197 to i32, !dbg !71
  %and199 = and i32 %conv198, 255, !dbg !71
  %idxprom200 = sext i32 %and199 to i64, !dbg !71
  %arrayidx201 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom200, !dbg !71
  %91 = load i32, i32* %arrayidx201, align 4, !dbg !71
  %92 = load i32, i32* %t0, align 4, !dbg !71
  %shr202 = lshr i32 %92, 8, !dbg !71
  %conv203 = trunc i32 %shr202 to i8, !dbg !71
  %conv204 = zext i8 %conv203 to i32, !dbg !71
  %and205 = and i32 %conv204, 255, !dbg !71
  %idxprom206 = sext i32 %and205 to i64, !dbg !71
  %arrayidx207 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom206, !dbg !71
  %93 = load i32, i32* %arrayidx207, align 4, !dbg !71
  %xor208 = xor i32 %91, %93, !dbg !71
  %94 = load i32, i32* %t0, align 4, !dbg !71
  %shr209 = lshr i32 %94, 16, !dbg !71
  %conv210 = trunc i32 %shr209 to i8, !dbg !71
  %conv211 = zext i8 %conv210 to i32, !dbg !71
  %and212 = and i32 %conv211, 255, !dbg !71
  %idxprom213 = sext i32 %and212 to i64, !dbg !71
  %arrayidx214 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom213, !dbg !71
  %95 = load i32, i32* %arrayidx214, align 4, !dbg !71
  %xor215 = xor i32 %xor208, %95, !dbg !71
  %96 = load i32, i32* %t0, align 4, !dbg !71
  %shr216 = lshr i32 %96, 24, !dbg !71
  %conv217 = trunc i32 %shr216 to i8, !dbg !71
  %conv218 = zext i8 %conv217 to i32, !dbg !71
  %and219 = and i32 %conv218, 255, !dbg !71
  %idxprom220 = sext i32 %and219 to i64, !dbg !71
  %arrayidx221 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom220, !dbg !71
  %97 = load i32, i32* %arrayidx221, align 4, !dbg !71
  %xor222 = xor i32 %xor215, %97, !dbg !71
  %98 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !71
  %data223 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %98, i32 0, i32 0, !dbg !71
  %arrayidx224 = getelementptr inbounds [32 x i32], [32 x i32]* %data223, i64 0, i64 4, !dbg !71
  %arrayidx225 = getelementptr inbounds i32, i32* %arrayidx224, i64 0, !dbg !71
  store i32 %xor222, i32* %arrayidx225, align 4, !dbg !71
  %99 = load i32, i32* %t1, align 4, !dbg !71
  %conv226 = trunc i32 %99 to i8, !dbg !71
  %conv227 = zext i8 %conv226 to i32, !dbg !71
  %and228 = and i32 %conv227, 255, !dbg !71
  %idxprom229 = sext i32 %and228 to i64, !dbg !71
  %arrayidx230 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom229, !dbg !71
  %100 = load i32, i32* %arrayidx230, align 4, !dbg !71
  %101 = load i32, i32* %t1, align 4, !dbg !71
  %shr231 = lshr i32 %101, 8, !dbg !71
  %conv232 = trunc i32 %shr231 to i8, !dbg !71
  %conv233 = zext i8 %conv232 to i32, !dbg !71
  %and234 = and i32 %conv233, 255, !dbg !71
  %idxprom235 = sext i32 %and234 to i64, !dbg !71
  %arrayidx236 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom235, !dbg !71
  %102 = load i32, i32* %arrayidx236, align 4, !dbg !71
  %xor237 = xor i32 %100, %102, !dbg !71
  %103 = load i32, i32* %t1, align 4, !dbg !71
  %shr238 = lshr i32 %103, 16, !dbg !71
  %conv239 = trunc i32 %shr238 to i8, !dbg !71
  %conv240 = zext i8 %conv239 to i32, !dbg !71
  %and241 = and i32 %conv240, 255, !dbg !71
  %idxprom242 = sext i32 %and241 to i64, !dbg !71
  %arrayidx243 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom242, !dbg !71
  %104 = load i32, i32* %arrayidx243, align 4, !dbg !71
  %xor244 = xor i32 %xor237, %104, !dbg !71
  %105 = load i32, i32* %t1, align 4, !dbg !71
  %shr245 = lshr i32 %105, 24, !dbg !71
  %conv246 = trunc i32 %shr245 to i8, !dbg !71
  %conv247 = zext i8 %conv246 to i32, !dbg !71
  %and248 = and i32 %conv247, 255, !dbg !71
  %idxprom249 = sext i32 %and248 to i64, !dbg !71
  %arrayidx250 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom249, !dbg !71
  %106 = load i32, i32* %arrayidx250, align 4, !dbg !71
  %xor251 = xor i32 %xor244, %106, !dbg !71
  %107 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !71
  %data252 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %107, i32 0, i32 0, !dbg !71
  %arrayidx253 = getelementptr inbounds [32 x i32], [32 x i32]* %data252, i64 0, i64 4, !dbg !71
  %arrayidx254 = getelementptr inbounds i32, i32* %arrayidx253, i64 1, !dbg !71
  store i32 %xor251, i32* %arrayidx254, align 4, !dbg !71
  %108 = load i32, i32* %x1, align 4, !dbg !72
  store i32 %108, i32* %t0, align 4, !dbg !72
  %109 = load i32, i32* %x1, align 4, !dbg !72
  %shr255 = lshr i32 %109, 8, !dbg !72
  %110 = load i32, i32* %x2, align 4, !dbg !72
  %shl256 = shl i32 %110, 24, !dbg !72
  %xor257 = xor i32 %shr255, %shl256, !dbg !72
  store i32 %xor257, i32* %x1, align 4, !dbg !72
  %111 = load i32, i32* %x2, align 4, !dbg !72
  %shr258 = lshr i32 %111, 8, !dbg !72
  %112 = load i32, i32* %t0, align 4, !dbg !72
  %shl259 = shl i32 %112, 24, !dbg !72
  %xor260 = xor i32 %shr258, %shl259, !dbg !72
  store i32 %xor260, i32* %x2, align 4, !dbg !72
  %113 = load i32, i32* %x1, align 4, !dbg !72
  %114 = load i32, i32* %x3, align 4, !dbg !72
  %add261 = add i32 %113, %114, !dbg !72
  %sub262 = sub i32 %add261, -239350324, !dbg !72
  store i32 %sub262, i32* %t0, align 4, !dbg !72
  %115 = load i32, i32* %x2, align 4, !dbg !72
  %add263 = add i32 %115, -239350324, !dbg !72
  %116 = load i32, i32* %x4, align 4, !dbg !72
  %sub264 = sub i32 %add263, %116, !dbg !72
  store i32 %sub264, i32* %t1, align 4, !dbg !72
  %117 = load i32, i32* %t0, align 4, !dbg !73
  %conv265 = trunc i32 %117 to i8, !dbg !73
  %conv266 = zext i8 %conv265 to i32, !dbg !73
  %and267 = and i32 %conv266, 255, !dbg !73
  %idxprom268 = sext i32 %and267 to i64, !dbg !73
  %arrayidx269 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom268, !dbg !73
  %118 = load i32, i32* %arrayidx269, align 4, !dbg !73
  %119 = load i32, i32* %t0, align 4, !dbg !73
  %shr270 = lshr i32 %119, 8, !dbg !73
  %conv271 = trunc i32 %shr270 to i8, !dbg !73
  %conv272 = zext i8 %conv271 to i32, !dbg !73
  %and273 = and i32 %conv272, 255, !dbg !73
  %idxprom274 = sext i32 %and273 to i64, !dbg !73
  %arrayidx275 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom274, !dbg !73
  %120 = load i32, i32* %arrayidx275, align 4, !dbg !73
  %xor276 = xor i32 %118, %120, !dbg !73
  %121 = load i32, i32* %t0, align 4, !dbg !73
  %shr277 = lshr i32 %121, 16, !dbg !73
  %conv278 = trunc i32 %shr277 to i8, !dbg !73
  %conv279 = zext i8 %conv278 to i32, !dbg !73
  %and280 = and i32 %conv279, 255, !dbg !73
  %idxprom281 = sext i32 %and280 to i64, !dbg !73
  %arrayidx282 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom281, !dbg !73
  %122 = load i32, i32* %arrayidx282, align 4, !dbg !73
  %xor283 = xor i32 %xor276, %122, !dbg !73
  %123 = load i32, i32* %t0, align 4, !dbg !73
  %shr284 = lshr i32 %123, 24, !dbg !73
  %conv285 = trunc i32 %shr284 to i8, !dbg !73
  %conv286 = zext i8 %conv285 to i32, !dbg !73
  %and287 = and i32 %conv286, 255, !dbg !73
  %idxprom288 = sext i32 %and287 to i64, !dbg !73
  %arrayidx289 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom288, !dbg !73
  %124 = load i32, i32* %arrayidx289, align 4, !dbg !73
  %xor290 = xor i32 %xor283, %124, !dbg !73
  %125 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !73
  %data291 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %125, i32 0, i32 0, !dbg !73
  %arrayidx292 = getelementptr inbounds [32 x i32], [32 x i32]* %data291, i64 0, i64 6, !dbg !73
  %arrayidx293 = getelementptr inbounds i32, i32* %arrayidx292, i64 0, !dbg !73
  store i32 %xor290, i32* %arrayidx293, align 4, !dbg !73
  %126 = load i32, i32* %t1, align 4, !dbg !73
  %conv294 = trunc i32 %126 to i8, !dbg !73
  %conv295 = zext i8 %conv294 to i32, !dbg !73
  %and296 = and i32 %conv295, 255, !dbg !73
  %idxprom297 = sext i32 %and296 to i64, !dbg !73
  %arrayidx298 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom297, !dbg !73
  %127 = load i32, i32* %arrayidx298, align 4, !dbg !73
  %128 = load i32, i32* %t1, align 4, !dbg !73
  %shr299 = lshr i32 %128, 8, !dbg !73
  %conv300 = trunc i32 %shr299 to i8, !dbg !73
  %conv301 = zext i8 %conv300 to i32, !dbg !73
  %and302 = and i32 %conv301, 255, !dbg !73
  %idxprom303 = sext i32 %and302 to i64, !dbg !73
  %arrayidx304 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom303, !dbg !73
  %129 = load i32, i32* %arrayidx304, align 4, !dbg !73
  %xor305 = xor i32 %127, %129, !dbg !73
  %130 = load i32, i32* %t1, align 4, !dbg !73
  %shr306 = lshr i32 %130, 16, !dbg !73
  %conv307 = trunc i32 %shr306 to i8, !dbg !73
  %conv308 = zext i8 %conv307 to i32, !dbg !73
  %and309 = and i32 %conv308, 255, !dbg !73
  %idxprom310 = sext i32 %and309 to i64, !dbg !73
  %arrayidx311 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom310, !dbg !73
  %131 = load i32, i32* %arrayidx311, align 4, !dbg !73
  %xor312 = xor i32 %xor305, %131, !dbg !73
  %132 = load i32, i32* %t1, align 4, !dbg !73
  %shr313 = lshr i32 %132, 24, !dbg !73
  %conv314 = trunc i32 %shr313 to i8, !dbg !73
  %conv315 = zext i8 %conv314 to i32, !dbg !73
  %and316 = and i32 %conv315, 255, !dbg !73
  %idxprom317 = sext i32 %and316 to i64, !dbg !73
  %arrayidx318 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom317, !dbg !73
  %133 = load i32, i32* %arrayidx318, align 4, !dbg !73
  %xor319 = xor i32 %xor312, %133, !dbg !73
  %134 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !73
  %data320 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %134, i32 0, i32 0, !dbg !73
  %arrayidx321 = getelementptr inbounds [32 x i32], [32 x i32]* %data320, i64 0, i64 6, !dbg !73
  %arrayidx322 = getelementptr inbounds i32, i32* %arrayidx321, i64 1, !dbg !73
  store i32 %xor319, i32* %arrayidx322, align 4, !dbg !73
  %135 = load i32, i32* %x3, align 4, !dbg !74
  store i32 %135, i32* %t0, align 4, !dbg !74
  %136 = load i32, i32* %x3, align 4, !dbg !74
  %shl323 = shl i32 %136, 8, !dbg !74
  %137 = load i32, i32* %x4, align 4, !dbg !74
  %shr324 = lshr i32 %137, 24, !dbg !74
  %xor325 = xor i32 %shl323, %shr324, !dbg !74
  store i32 %xor325, i32* %x3, align 4, !dbg !74
  %138 = load i32, i32* %x4, align 4, !dbg !74
  %shl326 = shl i32 %138, 8, !dbg !74
  %139 = load i32, i32* %t0, align 4, !dbg !74
  %shr327 = lshr i32 %139, 24, !dbg !74
  %xor328 = xor i32 %shl326, %shr327, !dbg !74
  store i32 %xor328, i32* %x4, align 4, !dbg !74
  %140 = load i32, i32* %x1, align 4, !dbg !74
  %141 = load i32, i32* %x3, align 4, !dbg !74
  %add329 = add i32 %140, %141, !dbg !74
  %sub330 = sub i32 %add329, -478700647, !dbg !74
  store i32 %sub330, i32* %t0, align 4, !dbg !74
  %142 = load i32, i32* %x2, align 4, !dbg !74
  %add331 = add i32 %142, -478700647, !dbg !74
  %143 = load i32, i32* %x4, align 4, !dbg !74
  %sub332 = sub i32 %add331, %143, !dbg !74
  store i32 %sub332, i32* %t1, align 4, !dbg !74
  %144 = load i32, i32* %t0, align 4, !dbg !75
  %conv333 = trunc i32 %144 to i8, !dbg !75
  %conv334 = zext i8 %conv333 to i32, !dbg !75
  %and335 = and i32 %conv334, 255, !dbg !75
  %idxprom336 = sext i32 %and335 to i64, !dbg !75
  %arrayidx337 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom336, !dbg !75
  %145 = load i32, i32* %arrayidx337, align 4, !dbg !75
  %146 = load i32, i32* %t0, align 4, !dbg !75
  %shr338 = lshr i32 %146, 8, !dbg !75
  %conv339 = trunc i32 %shr338 to i8, !dbg !75
  %conv340 = zext i8 %conv339 to i32, !dbg !75
  %and341 = and i32 %conv340, 255, !dbg !75
  %idxprom342 = sext i32 %and341 to i64, !dbg !75
  %arrayidx343 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom342, !dbg !75
  %147 = load i32, i32* %arrayidx343, align 4, !dbg !75
  %xor344 = xor i32 %145, %147, !dbg !75
  %148 = load i32, i32* %t0, align 4, !dbg !75
  %shr345 = lshr i32 %148, 16, !dbg !75
  %conv346 = trunc i32 %shr345 to i8, !dbg !75
  %conv347 = zext i8 %conv346 to i32, !dbg !75
  %and348 = and i32 %conv347, 255, !dbg !75
  %idxprom349 = sext i32 %and348 to i64, !dbg !75
  %arrayidx350 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom349, !dbg !75
  %149 = load i32, i32* %arrayidx350, align 4, !dbg !75
  %xor351 = xor i32 %xor344, %149, !dbg !75
  %150 = load i32, i32* %t0, align 4, !dbg !75
  %shr352 = lshr i32 %150, 24, !dbg !75
  %conv353 = trunc i32 %shr352 to i8, !dbg !75
  %conv354 = zext i8 %conv353 to i32, !dbg !75
  %and355 = and i32 %conv354, 255, !dbg !75
  %idxprom356 = sext i32 %and355 to i64, !dbg !75
  %arrayidx357 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom356, !dbg !75
  %151 = load i32, i32* %arrayidx357, align 4, !dbg !75
  %xor358 = xor i32 %xor351, %151, !dbg !75
  %152 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !75
  %data359 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %152, i32 0, i32 0, !dbg !75
  %arrayidx360 = getelementptr inbounds [32 x i32], [32 x i32]* %data359, i64 0, i64 8, !dbg !75
  %arrayidx361 = getelementptr inbounds i32, i32* %arrayidx360, i64 0, !dbg !75
  store i32 %xor358, i32* %arrayidx361, align 4, !dbg !75
  %153 = load i32, i32* %t1, align 4, !dbg !75
  %conv362 = trunc i32 %153 to i8, !dbg !75
  %conv363 = zext i8 %conv362 to i32, !dbg !75
  %and364 = and i32 %conv363, 255, !dbg !75
  %idxprom365 = sext i32 %and364 to i64, !dbg !75
  %arrayidx366 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom365, !dbg !75
  %154 = load i32, i32* %arrayidx366, align 4, !dbg !75
  %155 = load i32, i32* %t1, align 4, !dbg !75
  %shr367 = lshr i32 %155, 8, !dbg !75
  %conv368 = trunc i32 %shr367 to i8, !dbg !75
  %conv369 = zext i8 %conv368 to i32, !dbg !75
  %and370 = and i32 %conv369, 255, !dbg !75
  %idxprom371 = sext i32 %and370 to i64, !dbg !75
  %arrayidx372 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom371, !dbg !75
  %156 = load i32, i32* %arrayidx372, align 4, !dbg !75
  %xor373 = xor i32 %154, %156, !dbg !75
  %157 = load i32, i32* %t1, align 4, !dbg !75
  %shr374 = lshr i32 %157, 16, !dbg !75
  %conv375 = trunc i32 %shr374 to i8, !dbg !75
  %conv376 = zext i8 %conv375 to i32, !dbg !75
  %and377 = and i32 %conv376, 255, !dbg !75
  %idxprom378 = sext i32 %and377 to i64, !dbg !75
  %arrayidx379 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom378, !dbg !75
  %158 = load i32, i32* %arrayidx379, align 4, !dbg !75
  %xor380 = xor i32 %xor373, %158, !dbg !75
  %159 = load i32, i32* %t1, align 4, !dbg !75
  %shr381 = lshr i32 %159, 24, !dbg !75
  %conv382 = trunc i32 %shr381 to i8, !dbg !75
  %conv383 = zext i8 %conv382 to i32, !dbg !75
  %and384 = and i32 %conv383, 255, !dbg !75
  %idxprom385 = sext i32 %and384 to i64, !dbg !75
  %arrayidx386 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom385, !dbg !75
  %160 = load i32, i32* %arrayidx386, align 4, !dbg !75
  %xor387 = xor i32 %xor380, %160, !dbg !75
  %161 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !75
  %data388 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %161, i32 0, i32 0, !dbg !75
  %arrayidx389 = getelementptr inbounds [32 x i32], [32 x i32]* %data388, i64 0, i64 8, !dbg !75
  %arrayidx390 = getelementptr inbounds i32, i32* %arrayidx389, i64 1, !dbg !75
  store i32 %xor387, i32* %arrayidx390, align 4, !dbg !75
  %162 = load i32, i32* %x1, align 4, !dbg !76
  store i32 %162, i32* %t0, align 4, !dbg !76
  %163 = load i32, i32* %x1, align 4, !dbg !76
  %shr391 = lshr i32 %163, 8, !dbg !76
  %164 = load i32, i32* %x2, align 4, !dbg !76
  %shl392 = shl i32 %164, 24, !dbg !76
  %xor393 = xor i32 %shr391, %shl392, !dbg !76
  store i32 %xor393, i32* %x1, align 4, !dbg !76
  %165 = load i32, i32* %x2, align 4, !dbg !76
  %shr394 = lshr i32 %165, 8, !dbg !76
  %166 = load i32, i32* %t0, align 4, !dbg !76
  %shl395 = shl i32 %166, 24, !dbg !76
  %xor396 = xor i32 %shr394, %shl395, !dbg !76
  store i32 %xor396, i32* %x2, align 4, !dbg !76
  %167 = load i32, i32* %x1, align 4, !dbg !76
  %168 = load i32, i32* %x3, align 4, !dbg !76
  %add397 = add i32 %167, %168, !dbg !76
  %sub398 = sub i32 %add397, -957401293, !dbg !76
  store i32 %sub398, i32* %t0, align 4, !dbg !76
  %169 = load i32, i32* %x2, align 4, !dbg !76
  %add399 = add i32 %169, -957401293, !dbg !76
  %170 = load i32, i32* %x4, align 4, !dbg !76
  %sub400 = sub i32 %add399, %170, !dbg !76
  store i32 %sub400, i32* %t1, align 4, !dbg !76
  %171 = load i32, i32* %t0, align 4, !dbg !77
  %conv401 = trunc i32 %171 to i8, !dbg !77
  %conv402 = zext i8 %conv401 to i32, !dbg !77
  %and403 = and i32 %conv402, 255, !dbg !77
  %idxprom404 = sext i32 %and403 to i64, !dbg !77
  %arrayidx405 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom404, !dbg !77
  %172 = load i32, i32* %arrayidx405, align 4, !dbg !77
  %173 = load i32, i32* %t0, align 4, !dbg !77
  %shr406 = lshr i32 %173, 8, !dbg !77
  %conv407 = trunc i32 %shr406 to i8, !dbg !77
  %conv408 = zext i8 %conv407 to i32, !dbg !77
  %and409 = and i32 %conv408, 255, !dbg !77
  %idxprom410 = sext i32 %and409 to i64, !dbg !77
  %arrayidx411 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom410, !dbg !77
  %174 = load i32, i32* %arrayidx411, align 4, !dbg !77
  %xor412 = xor i32 %172, %174, !dbg !77
  %175 = load i32, i32* %t0, align 4, !dbg !77
  %shr413 = lshr i32 %175, 16, !dbg !77
  %conv414 = trunc i32 %shr413 to i8, !dbg !77
  %conv415 = zext i8 %conv414 to i32, !dbg !77
  %and416 = and i32 %conv415, 255, !dbg !77
  %idxprom417 = sext i32 %and416 to i64, !dbg !77
  %arrayidx418 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom417, !dbg !77
  %176 = load i32, i32* %arrayidx418, align 4, !dbg !77
  %xor419 = xor i32 %xor412, %176, !dbg !77
  %177 = load i32, i32* %t0, align 4, !dbg !77
  %shr420 = lshr i32 %177, 24, !dbg !77
  %conv421 = trunc i32 %shr420 to i8, !dbg !77
  %conv422 = zext i8 %conv421 to i32, !dbg !77
  %and423 = and i32 %conv422, 255, !dbg !77
  %idxprom424 = sext i32 %and423 to i64, !dbg !77
  %arrayidx425 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom424, !dbg !77
  %178 = load i32, i32* %arrayidx425, align 4, !dbg !77
  %xor426 = xor i32 %xor419, %178, !dbg !77
  %179 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !77
  %data427 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %179, i32 0, i32 0, !dbg !77
  %arrayidx428 = getelementptr inbounds [32 x i32], [32 x i32]* %data427, i64 0, i64 10, !dbg !77
  %arrayidx429 = getelementptr inbounds i32, i32* %arrayidx428, i64 0, !dbg !77
  store i32 %xor426, i32* %arrayidx429, align 4, !dbg !77
  %180 = load i32, i32* %t1, align 4, !dbg !77
  %conv430 = trunc i32 %180 to i8, !dbg !77
  %conv431 = zext i8 %conv430 to i32, !dbg !77
  %and432 = and i32 %conv431, 255, !dbg !77
  %idxprom433 = sext i32 %and432 to i64, !dbg !77
  %arrayidx434 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom433, !dbg !77
  %181 = load i32, i32* %arrayidx434, align 4, !dbg !77
  %182 = load i32, i32* %t1, align 4, !dbg !77
  %shr435 = lshr i32 %182, 8, !dbg !77
  %conv436 = trunc i32 %shr435 to i8, !dbg !77
  %conv437 = zext i8 %conv436 to i32, !dbg !77
  %and438 = and i32 %conv437, 255, !dbg !77
  %idxprom439 = sext i32 %and438 to i64, !dbg !77
  %arrayidx440 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom439, !dbg !77
  %183 = load i32, i32* %arrayidx440, align 4, !dbg !77
  %xor441 = xor i32 %181, %183, !dbg !77
  %184 = load i32, i32* %t1, align 4, !dbg !77
  %shr442 = lshr i32 %184, 16, !dbg !77
  %conv443 = trunc i32 %shr442 to i8, !dbg !77
  %conv444 = zext i8 %conv443 to i32, !dbg !77
  %and445 = and i32 %conv444, 255, !dbg !77
  %idxprom446 = sext i32 %and445 to i64, !dbg !77
  %arrayidx447 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom446, !dbg !77
  %185 = load i32, i32* %arrayidx447, align 4, !dbg !77
  %xor448 = xor i32 %xor441, %185, !dbg !77
  %186 = load i32, i32* %t1, align 4, !dbg !77
  %shr449 = lshr i32 %186, 24, !dbg !77
  %conv450 = trunc i32 %shr449 to i8, !dbg !77
  %conv451 = zext i8 %conv450 to i32, !dbg !77
  %and452 = and i32 %conv451, 255, !dbg !77
  %idxprom453 = sext i32 %and452 to i64, !dbg !77
  %arrayidx454 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom453, !dbg !77
  %187 = load i32, i32* %arrayidx454, align 4, !dbg !77
  %xor455 = xor i32 %xor448, %187, !dbg !77
  %188 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !77
  %data456 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %188, i32 0, i32 0, !dbg !77
  %arrayidx457 = getelementptr inbounds [32 x i32], [32 x i32]* %data456, i64 0, i64 10, !dbg !77
  %arrayidx458 = getelementptr inbounds i32, i32* %arrayidx457, i64 1, !dbg !77
  store i32 %xor455, i32* %arrayidx458, align 4, !dbg !77
  %189 = load i32, i32* %x3, align 4, !dbg !78
  store i32 %189, i32* %t0, align 4, !dbg !78
  %190 = load i32, i32* %x3, align 4, !dbg !78
  %shl459 = shl i32 %190, 8, !dbg !78
  %191 = load i32, i32* %x4, align 4, !dbg !78
  %shr460 = lshr i32 %191, 24, !dbg !78
  %xor461 = xor i32 %shl459, %shr460, !dbg !78
  store i32 %xor461, i32* %x3, align 4, !dbg !78
  %192 = load i32, i32* %x4, align 4, !dbg !78
  %shl462 = shl i32 %192, 8, !dbg !78
  %193 = load i32, i32* %t0, align 4, !dbg !78
  %shr463 = lshr i32 %193, 24, !dbg !78
  %xor464 = xor i32 %shl462, %shr463, !dbg !78
  store i32 %xor464, i32* %x4, align 4, !dbg !78
  %194 = load i32, i32* %x1, align 4, !dbg !78
  %195 = load i32, i32* %x3, align 4, !dbg !78
  %add465 = add i32 %194, %195, !dbg !78
  %sub466 = sub i32 %add465, -1914802585, !dbg !78
  store i32 %sub466, i32* %t0, align 4, !dbg !78
  %196 = load i32, i32* %x2, align 4, !dbg !78
  %add467 = add i32 %196, -1914802585, !dbg !78
  %197 = load i32, i32* %x4, align 4, !dbg !78
  %sub468 = sub i32 %add467, %197, !dbg !78
  store i32 %sub468, i32* %t1, align 4, !dbg !78
  %198 = load i32, i32* %t0, align 4, !dbg !79
  %conv469 = trunc i32 %198 to i8, !dbg !79
  %conv470 = zext i8 %conv469 to i32, !dbg !79
  %and471 = and i32 %conv470, 255, !dbg !79
  %idxprom472 = sext i32 %and471 to i64, !dbg !79
  %arrayidx473 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom472, !dbg !79
  %199 = load i32, i32* %arrayidx473, align 4, !dbg !79
  %200 = load i32, i32* %t0, align 4, !dbg !79
  %shr474 = lshr i32 %200, 8, !dbg !79
  %conv475 = trunc i32 %shr474 to i8, !dbg !79
  %conv476 = zext i8 %conv475 to i32, !dbg !79
  %and477 = and i32 %conv476, 255, !dbg !79
  %idxprom478 = sext i32 %and477 to i64, !dbg !79
  %arrayidx479 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom478, !dbg !79
  %201 = load i32, i32* %arrayidx479, align 4, !dbg !79
  %xor480 = xor i32 %199, %201, !dbg !79
  %202 = load i32, i32* %t0, align 4, !dbg !79
  %shr481 = lshr i32 %202, 16, !dbg !79
  %conv482 = trunc i32 %shr481 to i8, !dbg !79
  %conv483 = zext i8 %conv482 to i32, !dbg !79
  %and484 = and i32 %conv483, 255, !dbg !79
  %idxprom485 = sext i32 %and484 to i64, !dbg !79
  %arrayidx486 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom485, !dbg !79
  %203 = load i32, i32* %arrayidx486, align 4, !dbg !79
  %xor487 = xor i32 %xor480, %203, !dbg !79
  %204 = load i32, i32* %t0, align 4, !dbg !79
  %shr488 = lshr i32 %204, 24, !dbg !79
  %conv489 = trunc i32 %shr488 to i8, !dbg !79
  %conv490 = zext i8 %conv489 to i32, !dbg !79
  %and491 = and i32 %conv490, 255, !dbg !79
  %idxprom492 = sext i32 %and491 to i64, !dbg !79
  %arrayidx493 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom492, !dbg !79
  %205 = load i32, i32* %arrayidx493, align 4, !dbg !79
  %xor494 = xor i32 %xor487, %205, !dbg !79
  %206 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !79
  %data495 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %206, i32 0, i32 0, !dbg !79
  %arrayidx496 = getelementptr inbounds [32 x i32], [32 x i32]* %data495, i64 0, i64 12, !dbg !79
  %arrayidx497 = getelementptr inbounds i32, i32* %arrayidx496, i64 0, !dbg !79
  store i32 %xor494, i32* %arrayidx497, align 4, !dbg !79
  %207 = load i32, i32* %t1, align 4, !dbg !79
  %conv498 = trunc i32 %207 to i8, !dbg !79
  %conv499 = zext i8 %conv498 to i32, !dbg !79
  %and500 = and i32 %conv499, 255, !dbg !79
  %idxprom501 = sext i32 %and500 to i64, !dbg !79
  %arrayidx502 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom501, !dbg !79
  %208 = load i32, i32* %arrayidx502, align 4, !dbg !79
  %209 = load i32, i32* %t1, align 4, !dbg !79
  %shr503 = lshr i32 %209, 8, !dbg !79
  %conv504 = trunc i32 %shr503 to i8, !dbg !79
  %conv505 = zext i8 %conv504 to i32, !dbg !79
  %and506 = and i32 %conv505, 255, !dbg !79
  %idxprom507 = sext i32 %and506 to i64, !dbg !79
  %arrayidx508 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom507, !dbg !79
  %210 = load i32, i32* %arrayidx508, align 4, !dbg !79
  %xor509 = xor i32 %208, %210, !dbg !79
  %211 = load i32, i32* %t1, align 4, !dbg !79
  %shr510 = lshr i32 %211, 16, !dbg !79
  %conv511 = trunc i32 %shr510 to i8, !dbg !79
  %conv512 = zext i8 %conv511 to i32, !dbg !79
  %and513 = and i32 %conv512, 255, !dbg !79
  %idxprom514 = sext i32 %and513 to i64, !dbg !79
  %arrayidx515 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom514, !dbg !79
  %212 = load i32, i32* %arrayidx515, align 4, !dbg !79
  %xor516 = xor i32 %xor509, %212, !dbg !79
  %213 = load i32, i32* %t1, align 4, !dbg !79
  %shr517 = lshr i32 %213, 24, !dbg !79
  %conv518 = trunc i32 %shr517 to i8, !dbg !79
  %conv519 = zext i8 %conv518 to i32, !dbg !79
  %and520 = and i32 %conv519, 255, !dbg !79
  %idxprom521 = sext i32 %and520 to i64, !dbg !79
  %arrayidx522 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom521, !dbg !79
  %214 = load i32, i32* %arrayidx522, align 4, !dbg !79
  %xor523 = xor i32 %xor516, %214, !dbg !79
  %215 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !79
  %data524 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %215, i32 0, i32 0, !dbg !79
  %arrayidx525 = getelementptr inbounds [32 x i32], [32 x i32]* %data524, i64 0, i64 12, !dbg !79
  %arrayidx526 = getelementptr inbounds i32, i32* %arrayidx525, i64 1, !dbg !79
  store i32 %xor523, i32* %arrayidx526, align 4, !dbg !79
  %216 = load i32, i32* %x1, align 4, !dbg !80
  store i32 %216, i32* %t0, align 4, !dbg !80
  %217 = load i32, i32* %x1, align 4, !dbg !80
  %shr527 = lshr i32 %217, 8, !dbg !80
  %218 = load i32, i32* %x2, align 4, !dbg !80
  %shl528 = shl i32 %218, 24, !dbg !80
  %xor529 = xor i32 %shr527, %shl528, !dbg !80
  store i32 %xor529, i32* %x1, align 4, !dbg !80
  %219 = load i32, i32* %x2, align 4, !dbg !80
  %shr530 = lshr i32 %219, 8, !dbg !80
  %220 = load i32, i32* %t0, align 4, !dbg !80
  %shl531 = shl i32 %220, 24, !dbg !80
  %xor532 = xor i32 %shr530, %shl531, !dbg !80
  store i32 %xor532, i32* %x2, align 4, !dbg !80
  %221 = load i32, i32* %x1, align 4, !dbg !80
  %222 = load i32, i32* %x3, align 4, !dbg !80
  %add533 = add i32 %221, %222, !dbg !80
  %sub534 = sub i32 %add533, 465362127, !dbg !80
  store i32 %sub534, i32* %t0, align 4, !dbg !80
  %223 = load i32, i32* %x2, align 4, !dbg !80
  %add535 = add i32 %223, 465362127, !dbg !80
  %224 = load i32, i32* %x4, align 4, !dbg !80
  %sub536 = sub i32 %add535, %224, !dbg !80
  store i32 %sub536, i32* %t1, align 4, !dbg !80
  %225 = load i32, i32* %t0, align 4, !dbg !81
  %conv537 = trunc i32 %225 to i8, !dbg !81
  %conv538 = zext i8 %conv537 to i32, !dbg !81
  %and539 = and i32 %conv538, 255, !dbg !81
  %idxprom540 = sext i32 %and539 to i64, !dbg !81
  %arrayidx541 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom540, !dbg !81
  %226 = load i32, i32* %arrayidx541, align 4, !dbg !81
  %227 = load i32, i32* %t0, align 4, !dbg !81
  %shr542 = lshr i32 %227, 8, !dbg !81
  %conv543 = trunc i32 %shr542 to i8, !dbg !81
  %conv544 = zext i8 %conv543 to i32, !dbg !81
  %and545 = and i32 %conv544, 255, !dbg !81
  %idxprom546 = sext i32 %and545 to i64, !dbg !81
  %arrayidx547 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom546, !dbg !81
  %228 = load i32, i32* %arrayidx547, align 4, !dbg !81
  %xor548 = xor i32 %226, %228, !dbg !81
  %229 = load i32, i32* %t0, align 4, !dbg !81
  %shr549 = lshr i32 %229, 16, !dbg !81
  %conv550 = trunc i32 %shr549 to i8, !dbg !81
  %conv551 = zext i8 %conv550 to i32, !dbg !81
  %and552 = and i32 %conv551, 255, !dbg !81
  %idxprom553 = sext i32 %and552 to i64, !dbg !81
  %arrayidx554 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom553, !dbg !81
  %230 = load i32, i32* %arrayidx554, align 4, !dbg !81
  %xor555 = xor i32 %xor548, %230, !dbg !81
  %231 = load i32, i32* %t0, align 4, !dbg !81
  %shr556 = lshr i32 %231, 24, !dbg !81
  %conv557 = trunc i32 %shr556 to i8, !dbg !81
  %conv558 = zext i8 %conv557 to i32, !dbg !81
  %and559 = and i32 %conv558, 255, !dbg !81
  %idxprom560 = sext i32 %and559 to i64, !dbg !81
  %arrayidx561 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom560, !dbg !81
  %232 = load i32, i32* %arrayidx561, align 4, !dbg !81
  %xor562 = xor i32 %xor555, %232, !dbg !81
  %233 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !81
  %data563 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %233, i32 0, i32 0, !dbg !81
  %arrayidx564 = getelementptr inbounds [32 x i32], [32 x i32]* %data563, i64 0, i64 14, !dbg !81
  %arrayidx565 = getelementptr inbounds i32, i32* %arrayidx564, i64 0, !dbg !81
  store i32 %xor562, i32* %arrayidx565, align 4, !dbg !81
  %234 = load i32, i32* %t1, align 4, !dbg !81
  %conv566 = trunc i32 %234 to i8, !dbg !81
  %conv567 = zext i8 %conv566 to i32, !dbg !81
  %and568 = and i32 %conv567, 255, !dbg !81
  %idxprom569 = sext i32 %and568 to i64, !dbg !81
  %arrayidx570 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom569, !dbg !81
  %235 = load i32, i32* %arrayidx570, align 4, !dbg !81
  %236 = load i32, i32* %t1, align 4, !dbg !81
  %shr571 = lshr i32 %236, 8, !dbg !81
  %conv572 = trunc i32 %shr571 to i8, !dbg !81
  %conv573 = zext i8 %conv572 to i32, !dbg !81
  %and574 = and i32 %conv573, 255, !dbg !81
  %idxprom575 = sext i32 %and574 to i64, !dbg !81
  %arrayidx576 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom575, !dbg !81
  %237 = load i32, i32* %arrayidx576, align 4, !dbg !81
  %xor577 = xor i32 %235, %237, !dbg !81
  %238 = load i32, i32* %t1, align 4, !dbg !81
  %shr578 = lshr i32 %238, 16, !dbg !81
  %conv579 = trunc i32 %shr578 to i8, !dbg !81
  %conv580 = zext i8 %conv579 to i32, !dbg !81
  %and581 = and i32 %conv580, 255, !dbg !81
  %idxprom582 = sext i32 %and581 to i64, !dbg !81
  %arrayidx583 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom582, !dbg !81
  %239 = load i32, i32* %arrayidx583, align 4, !dbg !81
  %xor584 = xor i32 %xor577, %239, !dbg !81
  %240 = load i32, i32* %t1, align 4, !dbg !81
  %shr585 = lshr i32 %240, 24, !dbg !81
  %conv586 = trunc i32 %shr585 to i8, !dbg !81
  %conv587 = zext i8 %conv586 to i32, !dbg !81
  %and588 = and i32 %conv587, 255, !dbg !81
  %idxprom589 = sext i32 %and588 to i64, !dbg !81
  %arrayidx590 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom589, !dbg !81
  %241 = load i32, i32* %arrayidx590, align 4, !dbg !81
  %xor591 = xor i32 %xor584, %241, !dbg !81
  %242 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !81
  %data592 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %242, i32 0, i32 0, !dbg !81
  %arrayidx593 = getelementptr inbounds [32 x i32], [32 x i32]* %data592, i64 0, i64 14, !dbg !81
  %arrayidx594 = getelementptr inbounds i32, i32* %arrayidx593, i64 1, !dbg !81
  store i32 %xor591, i32* %arrayidx594, align 4, !dbg !81
  %243 = load i32, i32* %x3, align 4, !dbg !82
  store i32 %243, i32* %t0, align 4, !dbg !82
  %244 = load i32, i32* %x3, align 4, !dbg !82
  %shl595 = shl i32 %244, 8, !dbg !82
  %245 = load i32, i32* %x4, align 4, !dbg !82
  %shr596 = lshr i32 %245, 24, !dbg !82
  %xor597 = xor i32 %shl595, %shr596, !dbg !82
  store i32 %xor597, i32* %x3, align 4, !dbg !82
  %246 = load i32, i32* %x4, align 4, !dbg !82
  %shl598 = shl i32 %246, 8, !dbg !82
  %247 = load i32, i32* %t0, align 4, !dbg !82
  %shr599 = lshr i32 %247, 24, !dbg !82
  %xor600 = xor i32 %shl598, %shr599, !dbg !82
  store i32 %xor600, i32* %x4, align 4, !dbg !82
  %248 = load i32, i32* %x1, align 4, !dbg !82
  %249 = load i32, i32* %x3, align 4, !dbg !82
  %add601 = add i32 %248, %249, !dbg !82
  %sub602 = sub i32 %add601, 930724254, !dbg !82
  store i32 %sub602, i32* %t0, align 4, !dbg !82
  %250 = load i32, i32* %x2, align 4, !dbg !82
  %add603 = add i32 %250, 930724254, !dbg !82
  %251 = load i32, i32* %x4, align 4, !dbg !82
  %sub604 = sub i32 %add603, %251, !dbg !82
  store i32 %sub604, i32* %t1, align 4, !dbg !82
  %252 = load i32, i32* %t0, align 4, !dbg !83
  %conv605 = trunc i32 %252 to i8, !dbg !83
  %conv606 = zext i8 %conv605 to i32, !dbg !83
  %and607 = and i32 %conv606, 255, !dbg !83
  %idxprom608 = sext i32 %and607 to i64, !dbg !83
  %arrayidx609 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom608, !dbg !83
  %253 = load i32, i32* %arrayidx609, align 4, !dbg !83
  %254 = load i32, i32* %t0, align 4, !dbg !83
  %shr610 = lshr i32 %254, 8, !dbg !83
  %conv611 = trunc i32 %shr610 to i8, !dbg !83
  %conv612 = zext i8 %conv611 to i32, !dbg !83
  %and613 = and i32 %conv612, 255, !dbg !83
  %idxprom614 = sext i32 %and613 to i64, !dbg !83
  %arrayidx615 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom614, !dbg !83
  %255 = load i32, i32* %arrayidx615, align 4, !dbg !83
  %xor616 = xor i32 %253, %255, !dbg !83
  %256 = load i32, i32* %t0, align 4, !dbg !83
  %shr617 = lshr i32 %256, 16, !dbg !83
  %conv618 = trunc i32 %shr617 to i8, !dbg !83
  %conv619 = zext i8 %conv618 to i32, !dbg !83
  %and620 = and i32 %conv619, 255, !dbg !83
  %idxprom621 = sext i32 %and620 to i64, !dbg !83
  %arrayidx622 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom621, !dbg !83
  %257 = load i32, i32* %arrayidx622, align 4, !dbg !83
  %xor623 = xor i32 %xor616, %257, !dbg !83
  %258 = load i32, i32* %t0, align 4, !dbg !83
  %shr624 = lshr i32 %258, 24, !dbg !83
  %conv625 = trunc i32 %shr624 to i8, !dbg !83
  %conv626 = zext i8 %conv625 to i32, !dbg !83
  %and627 = and i32 %conv626, 255, !dbg !83
  %idxprom628 = sext i32 %and627 to i64, !dbg !83
  %arrayidx629 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom628, !dbg !83
  %259 = load i32, i32* %arrayidx629, align 4, !dbg !83
  %xor630 = xor i32 %xor623, %259, !dbg !83
  %260 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !83
  %data631 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %260, i32 0, i32 0, !dbg !83
  %arrayidx632 = getelementptr inbounds [32 x i32], [32 x i32]* %data631, i64 0, i64 16, !dbg !83
  %arrayidx633 = getelementptr inbounds i32, i32* %arrayidx632, i64 0, !dbg !83
  store i32 %xor630, i32* %arrayidx633, align 4, !dbg !83
  %261 = load i32, i32* %t1, align 4, !dbg !83
  %conv634 = trunc i32 %261 to i8, !dbg !83
  %conv635 = zext i8 %conv634 to i32, !dbg !83
  %and636 = and i32 %conv635, 255, !dbg !83
  %idxprom637 = sext i32 %and636 to i64, !dbg !83
  %arrayidx638 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom637, !dbg !83
  %262 = load i32, i32* %arrayidx638, align 4, !dbg !83
  %263 = load i32, i32* %t1, align 4, !dbg !83
  %shr639 = lshr i32 %263, 8, !dbg !83
  %conv640 = trunc i32 %shr639 to i8, !dbg !83
  %conv641 = zext i8 %conv640 to i32, !dbg !83
  %and642 = and i32 %conv641, 255, !dbg !83
  %idxprom643 = sext i32 %and642 to i64, !dbg !83
  %arrayidx644 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom643, !dbg !83
  %264 = load i32, i32* %arrayidx644, align 4, !dbg !83
  %xor645 = xor i32 %262, %264, !dbg !83
  %265 = load i32, i32* %t1, align 4, !dbg !83
  %shr646 = lshr i32 %265, 16, !dbg !83
  %conv647 = trunc i32 %shr646 to i8, !dbg !83
  %conv648 = zext i8 %conv647 to i32, !dbg !83
  %and649 = and i32 %conv648, 255, !dbg !83
  %idxprom650 = sext i32 %and649 to i64, !dbg !83
  %arrayidx651 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom650, !dbg !83
  %266 = load i32, i32* %arrayidx651, align 4, !dbg !83
  %xor652 = xor i32 %xor645, %266, !dbg !83
  %267 = load i32, i32* %t1, align 4, !dbg !83
  %shr653 = lshr i32 %267, 24, !dbg !83
  %conv654 = trunc i32 %shr653 to i8, !dbg !83
  %conv655 = zext i8 %conv654 to i32, !dbg !83
  %and656 = and i32 %conv655, 255, !dbg !83
  %idxprom657 = sext i32 %and656 to i64, !dbg !83
  %arrayidx658 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom657, !dbg !83
  %268 = load i32, i32* %arrayidx658, align 4, !dbg !83
  %xor659 = xor i32 %xor652, %268, !dbg !83
  %269 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !83
  %data660 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %269, i32 0, i32 0, !dbg !83
  %arrayidx661 = getelementptr inbounds [32 x i32], [32 x i32]* %data660, i64 0, i64 16, !dbg !83
  %arrayidx662 = getelementptr inbounds i32, i32* %arrayidx661, i64 1, !dbg !83
  store i32 %xor659, i32* %arrayidx662, align 4, !dbg !83
  %270 = load i32, i32* %x1, align 4, !dbg !84
  store i32 %270, i32* %t0, align 4, !dbg !84
  %271 = load i32, i32* %x1, align 4, !dbg !84
  %shr663 = lshr i32 %271, 8, !dbg !84
  %272 = load i32, i32* %x2, align 4, !dbg !84
  %shl664 = shl i32 %272, 24, !dbg !84
  %xor665 = xor i32 %shr663, %shl664, !dbg !84
  store i32 %xor665, i32* %x1, align 4, !dbg !84
  %273 = load i32, i32* %x2, align 4, !dbg !84
  %shr666 = lshr i32 %273, 8, !dbg !84
  %274 = load i32, i32* %t0, align 4, !dbg !84
  %shl667 = shl i32 %274, 24, !dbg !84
  %xor668 = xor i32 %shr666, %shl667, !dbg !84
  store i32 %xor668, i32* %x2, align 4, !dbg !84
  %275 = load i32, i32* %x1, align 4, !dbg !84
  %276 = load i32, i32* %x3, align 4, !dbg !84
  %add669 = add i32 %275, %276, !dbg !84
  %sub670 = sub i32 %add669, 1861448508, !dbg !84
  store i32 %sub670, i32* %t0, align 4, !dbg !84
  %277 = load i32, i32* %x2, align 4, !dbg !84
  %add671 = add i32 %277, 1861448508, !dbg !84
  %278 = load i32, i32* %x4, align 4, !dbg !84
  %sub672 = sub i32 %add671, %278, !dbg !84
  store i32 %sub672, i32* %t1, align 4, !dbg !84
  %279 = load i32, i32* %t0, align 4, !dbg !85
  %conv673 = trunc i32 %279 to i8, !dbg !85
  %conv674 = zext i8 %conv673 to i32, !dbg !85
  %and675 = and i32 %conv674, 255, !dbg !85
  %idxprom676 = sext i32 %and675 to i64, !dbg !85
  %arrayidx677 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom676, !dbg !85
  %280 = load i32, i32* %arrayidx677, align 4, !dbg !85
  %281 = load i32, i32* %t0, align 4, !dbg !85
  %shr678 = lshr i32 %281, 8, !dbg !85
  %conv679 = trunc i32 %shr678 to i8, !dbg !85
  %conv680 = zext i8 %conv679 to i32, !dbg !85
  %and681 = and i32 %conv680, 255, !dbg !85
  %idxprom682 = sext i32 %and681 to i64, !dbg !85
  %arrayidx683 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom682, !dbg !85
  %282 = load i32, i32* %arrayidx683, align 4, !dbg !85
  %xor684 = xor i32 %280, %282, !dbg !85
  %283 = load i32, i32* %t0, align 4, !dbg !85
  %shr685 = lshr i32 %283, 16, !dbg !85
  %conv686 = trunc i32 %shr685 to i8, !dbg !85
  %conv687 = zext i8 %conv686 to i32, !dbg !85
  %and688 = and i32 %conv687, 255, !dbg !85
  %idxprom689 = sext i32 %and688 to i64, !dbg !85
  %arrayidx690 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom689, !dbg !85
  %284 = load i32, i32* %arrayidx690, align 4, !dbg !85
  %xor691 = xor i32 %xor684, %284, !dbg !85
  %285 = load i32, i32* %t0, align 4, !dbg !85
  %shr692 = lshr i32 %285, 24, !dbg !85
  %conv693 = trunc i32 %shr692 to i8, !dbg !85
  %conv694 = zext i8 %conv693 to i32, !dbg !85
  %and695 = and i32 %conv694, 255, !dbg !85
  %idxprom696 = sext i32 %and695 to i64, !dbg !85
  %arrayidx697 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom696, !dbg !85
  %286 = load i32, i32* %arrayidx697, align 4, !dbg !85
  %xor698 = xor i32 %xor691, %286, !dbg !85
  %287 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !85
  %data699 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %287, i32 0, i32 0, !dbg !85
  %arrayidx700 = getelementptr inbounds [32 x i32], [32 x i32]* %data699, i64 0, i64 18, !dbg !85
  %arrayidx701 = getelementptr inbounds i32, i32* %arrayidx700, i64 0, !dbg !85
  store i32 %xor698, i32* %arrayidx701, align 4, !dbg !85
  %288 = load i32, i32* %t1, align 4, !dbg !85
  %conv702 = trunc i32 %288 to i8, !dbg !85
  %conv703 = zext i8 %conv702 to i32, !dbg !85
  %and704 = and i32 %conv703, 255, !dbg !85
  %idxprom705 = sext i32 %and704 to i64, !dbg !85
  %arrayidx706 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom705, !dbg !85
  %289 = load i32, i32* %arrayidx706, align 4, !dbg !85
  %290 = load i32, i32* %t1, align 4, !dbg !85
  %shr707 = lshr i32 %290, 8, !dbg !85
  %conv708 = trunc i32 %shr707 to i8, !dbg !85
  %conv709 = zext i8 %conv708 to i32, !dbg !85
  %and710 = and i32 %conv709, 255, !dbg !85
  %idxprom711 = sext i32 %and710 to i64, !dbg !85
  %arrayidx712 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom711, !dbg !85
  %291 = load i32, i32* %arrayidx712, align 4, !dbg !85
  %xor713 = xor i32 %289, %291, !dbg !85
  %292 = load i32, i32* %t1, align 4, !dbg !85
  %shr714 = lshr i32 %292, 16, !dbg !85
  %conv715 = trunc i32 %shr714 to i8, !dbg !85
  %conv716 = zext i8 %conv715 to i32, !dbg !85
  %and717 = and i32 %conv716, 255, !dbg !85
  %idxprom718 = sext i32 %and717 to i64, !dbg !85
  %arrayidx719 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom718, !dbg !85
  %293 = load i32, i32* %arrayidx719, align 4, !dbg !85
  %xor720 = xor i32 %xor713, %293, !dbg !85
  %294 = load i32, i32* %t1, align 4, !dbg !85
  %shr721 = lshr i32 %294, 24, !dbg !85
  %conv722 = trunc i32 %shr721 to i8, !dbg !85
  %conv723 = zext i8 %conv722 to i32, !dbg !85
  %and724 = and i32 %conv723, 255, !dbg !85
  %idxprom725 = sext i32 %and724 to i64, !dbg !85
  %arrayidx726 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom725, !dbg !85
  %295 = load i32, i32* %arrayidx726, align 4, !dbg !85
  %xor727 = xor i32 %xor720, %295, !dbg !85
  %296 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !85
  %data728 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %296, i32 0, i32 0, !dbg !85
  %arrayidx729 = getelementptr inbounds [32 x i32], [32 x i32]* %data728, i64 0, i64 18, !dbg !85
  %arrayidx730 = getelementptr inbounds i32, i32* %arrayidx729, i64 1, !dbg !85
  store i32 %xor727, i32* %arrayidx730, align 4, !dbg !85
  %297 = load i32, i32* %x3, align 4, !dbg !86
  store i32 %297, i32* %t0, align 4, !dbg !86
  %298 = load i32, i32* %x3, align 4, !dbg !86
  %shl731 = shl i32 %298, 8, !dbg !86
  %299 = load i32, i32* %x4, align 4, !dbg !86
  %shr732 = lshr i32 %299, 24, !dbg !86
  %xor733 = xor i32 %shl731, %shr732, !dbg !86
  store i32 %xor733, i32* %x3, align 4, !dbg !86
  %300 = load i32, i32* %x4, align 4, !dbg !86
  %shl734 = shl i32 %300, 8, !dbg !86
  %301 = load i32, i32* %t0, align 4, !dbg !86
  %shr735 = lshr i32 %301, 24, !dbg !86
  %xor736 = xor i32 %shl734, %shr735, !dbg !86
  store i32 %xor736, i32* %x4, align 4, !dbg !86
  %302 = load i32, i32* %x1, align 4, !dbg !86
  %303 = load i32, i32* %x3, align 4, !dbg !86
  %add737 = add i32 %302, %303, !dbg !86
  %sub738 = sub i32 %add737, -572070280, !dbg !86
  store i32 %sub738, i32* %t0, align 4, !dbg !86
  %304 = load i32, i32* %x2, align 4, !dbg !86
  %add739 = add i32 %304, -572070280, !dbg !86
  %305 = load i32, i32* %x4, align 4, !dbg !86
  %sub740 = sub i32 %add739, %305, !dbg !86
  store i32 %sub740, i32* %t1, align 4, !dbg !86
  %306 = load i32, i32* %t0, align 4, !dbg !87
  %conv741 = trunc i32 %306 to i8, !dbg !87
  %conv742 = zext i8 %conv741 to i32, !dbg !87
  %and743 = and i32 %conv742, 255, !dbg !87
  %idxprom744 = sext i32 %and743 to i64, !dbg !87
  %arrayidx745 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom744, !dbg !87
  %307 = load i32, i32* %arrayidx745, align 4, !dbg !87
  %308 = load i32, i32* %t0, align 4, !dbg !87
  %shr746 = lshr i32 %308, 8, !dbg !87
  %conv747 = trunc i32 %shr746 to i8, !dbg !87
  %conv748 = zext i8 %conv747 to i32, !dbg !87
  %and749 = and i32 %conv748, 255, !dbg !87
  %idxprom750 = sext i32 %and749 to i64, !dbg !87
  %arrayidx751 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom750, !dbg !87
  %309 = load i32, i32* %arrayidx751, align 4, !dbg !87
  %xor752 = xor i32 %307, %309, !dbg !87
  %310 = load i32, i32* %t0, align 4, !dbg !87
  %shr753 = lshr i32 %310, 16, !dbg !87
  %conv754 = trunc i32 %shr753 to i8, !dbg !87
  %conv755 = zext i8 %conv754 to i32, !dbg !87
  %and756 = and i32 %conv755, 255, !dbg !87
  %idxprom757 = sext i32 %and756 to i64, !dbg !87
  %arrayidx758 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom757, !dbg !87
  %311 = load i32, i32* %arrayidx758, align 4, !dbg !87
  %xor759 = xor i32 %xor752, %311, !dbg !87
  %312 = load i32, i32* %t0, align 4, !dbg !87
  %shr760 = lshr i32 %312, 24, !dbg !87
  %conv761 = trunc i32 %shr760 to i8, !dbg !87
  %conv762 = zext i8 %conv761 to i32, !dbg !87
  %and763 = and i32 %conv762, 255, !dbg !87
  %idxprom764 = sext i32 %and763 to i64, !dbg !87
  %arrayidx765 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom764, !dbg !87
  %313 = load i32, i32* %arrayidx765, align 4, !dbg !87
  %xor766 = xor i32 %xor759, %313, !dbg !87
  %314 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !87
  %data767 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %314, i32 0, i32 0, !dbg !87
  %arrayidx768 = getelementptr inbounds [32 x i32], [32 x i32]* %data767, i64 0, i64 20, !dbg !87
  %arrayidx769 = getelementptr inbounds i32, i32* %arrayidx768, i64 0, !dbg !87
  store i32 %xor766, i32* %arrayidx769, align 4, !dbg !87
  %315 = load i32, i32* %t1, align 4, !dbg !87
  %conv770 = trunc i32 %315 to i8, !dbg !87
  %conv771 = zext i8 %conv770 to i32, !dbg !87
  %and772 = and i32 %conv771, 255, !dbg !87
  %idxprom773 = sext i32 %and772 to i64, !dbg !87
  %arrayidx774 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom773, !dbg !87
  %316 = load i32, i32* %arrayidx774, align 4, !dbg !87
  %317 = load i32, i32* %t1, align 4, !dbg !87
  %shr775 = lshr i32 %317, 8, !dbg !87
  %conv776 = trunc i32 %shr775 to i8, !dbg !87
  %conv777 = zext i8 %conv776 to i32, !dbg !87
  %and778 = and i32 %conv777, 255, !dbg !87
  %idxprom779 = sext i32 %and778 to i64, !dbg !87
  %arrayidx780 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom779, !dbg !87
  %318 = load i32, i32* %arrayidx780, align 4, !dbg !87
  %xor781 = xor i32 %316, %318, !dbg !87
  %319 = load i32, i32* %t1, align 4, !dbg !87
  %shr782 = lshr i32 %319, 16, !dbg !87
  %conv783 = trunc i32 %shr782 to i8, !dbg !87
  %conv784 = zext i8 %conv783 to i32, !dbg !87
  %and785 = and i32 %conv784, 255, !dbg !87
  %idxprom786 = sext i32 %and785 to i64, !dbg !87
  %arrayidx787 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom786, !dbg !87
  %320 = load i32, i32* %arrayidx787, align 4, !dbg !87
  %xor788 = xor i32 %xor781, %320, !dbg !87
  %321 = load i32, i32* %t1, align 4, !dbg !87
  %shr789 = lshr i32 %321, 24, !dbg !87
  %conv790 = trunc i32 %shr789 to i8, !dbg !87
  %conv791 = zext i8 %conv790 to i32, !dbg !87
  %and792 = and i32 %conv791, 255, !dbg !87
  %idxprom793 = sext i32 %and792 to i64, !dbg !87
  %arrayidx794 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom793, !dbg !87
  %322 = load i32, i32* %arrayidx794, align 4, !dbg !87
  %xor795 = xor i32 %xor788, %322, !dbg !87
  %323 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !87
  %data796 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %323, i32 0, i32 0, !dbg !87
  %arrayidx797 = getelementptr inbounds [32 x i32], [32 x i32]* %data796, i64 0, i64 20, !dbg !87
  %arrayidx798 = getelementptr inbounds i32, i32* %arrayidx797, i64 1, !dbg !87
  store i32 %xor795, i32* %arrayidx798, align 4, !dbg !87
  %324 = load i32, i32* %x1, align 4, !dbg !88
  store i32 %324, i32* %t0, align 4, !dbg !88
  %325 = load i32, i32* %x1, align 4, !dbg !88
  %shr799 = lshr i32 %325, 8, !dbg !88
  %326 = load i32, i32* %x2, align 4, !dbg !88
  %shl800 = shl i32 %326, 24, !dbg !88
  %xor801 = xor i32 %shr799, %shl800, !dbg !88
  store i32 %xor801, i32* %x1, align 4, !dbg !88
  %327 = load i32, i32* %x2, align 4, !dbg !88
  %shr802 = lshr i32 %327, 8, !dbg !88
  %328 = load i32, i32* %t0, align 4, !dbg !88
  %shl803 = shl i32 %328, 24, !dbg !88
  %xor804 = xor i32 %shr802, %shl803, !dbg !88
  store i32 %xor804, i32* %x2, align 4, !dbg !88
  %329 = load i32, i32* %x1, align 4, !dbg !88
  %330 = load i32, i32* %x3, align 4, !dbg !88
  %add805 = add i32 %329, %330, !dbg !88
  %sub806 = sub i32 %add805, -1144140559, !dbg !88
  store i32 %sub806, i32* %t0, align 4, !dbg !88
  %331 = load i32, i32* %x2, align 4, !dbg !88
  %add807 = add i32 %331, -1144140559, !dbg !88
  %332 = load i32, i32* %x4, align 4, !dbg !88
  %sub808 = sub i32 %add807, %332, !dbg !88
  store i32 %sub808, i32* %t1, align 4, !dbg !88
  %333 = load i32, i32* %t0, align 4, !dbg !89
  %conv809 = trunc i32 %333 to i8, !dbg !89
  %conv810 = zext i8 %conv809 to i32, !dbg !89
  %and811 = and i32 %conv810, 255, !dbg !89
  %idxprom812 = sext i32 %and811 to i64, !dbg !89
  %arrayidx813 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom812, !dbg !89
  %334 = load i32, i32* %arrayidx813, align 4, !dbg !89
  %335 = load i32, i32* %t0, align 4, !dbg !89
  %shr814 = lshr i32 %335, 8, !dbg !89
  %conv815 = trunc i32 %shr814 to i8, !dbg !89
  %conv816 = zext i8 %conv815 to i32, !dbg !89
  %and817 = and i32 %conv816, 255, !dbg !89
  %idxprom818 = sext i32 %and817 to i64, !dbg !89
  %arrayidx819 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom818, !dbg !89
  %336 = load i32, i32* %arrayidx819, align 4, !dbg !89
  %xor820 = xor i32 %334, %336, !dbg !89
  %337 = load i32, i32* %t0, align 4, !dbg !89
  %shr821 = lshr i32 %337, 16, !dbg !89
  %conv822 = trunc i32 %shr821 to i8, !dbg !89
  %conv823 = zext i8 %conv822 to i32, !dbg !89
  %and824 = and i32 %conv823, 255, !dbg !89
  %idxprom825 = sext i32 %and824 to i64, !dbg !89
  %arrayidx826 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom825, !dbg !89
  %338 = load i32, i32* %arrayidx826, align 4, !dbg !89
  %xor827 = xor i32 %xor820, %338, !dbg !89
  %339 = load i32, i32* %t0, align 4, !dbg !89
  %shr828 = lshr i32 %339, 24, !dbg !89
  %conv829 = trunc i32 %shr828 to i8, !dbg !89
  %conv830 = zext i8 %conv829 to i32, !dbg !89
  %and831 = and i32 %conv830, 255, !dbg !89
  %idxprom832 = sext i32 %and831 to i64, !dbg !89
  %arrayidx833 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom832, !dbg !89
  %340 = load i32, i32* %arrayidx833, align 4, !dbg !89
  %xor834 = xor i32 %xor827, %340, !dbg !89
  %341 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !89
  %data835 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %341, i32 0, i32 0, !dbg !89
  %arrayidx836 = getelementptr inbounds [32 x i32], [32 x i32]* %data835, i64 0, i64 22, !dbg !89
  %arrayidx837 = getelementptr inbounds i32, i32* %arrayidx836, i64 0, !dbg !89
  store i32 %xor834, i32* %arrayidx837, align 4, !dbg !89
  %342 = load i32, i32* %t1, align 4, !dbg !89
  %conv838 = trunc i32 %342 to i8, !dbg !89
  %conv839 = zext i8 %conv838 to i32, !dbg !89
  %and840 = and i32 %conv839, 255, !dbg !89
  %idxprom841 = sext i32 %and840 to i64, !dbg !89
  %arrayidx842 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom841, !dbg !89
  %343 = load i32, i32* %arrayidx842, align 4, !dbg !89
  %344 = load i32, i32* %t1, align 4, !dbg !89
  %shr843 = lshr i32 %344, 8, !dbg !89
  %conv844 = trunc i32 %shr843 to i8, !dbg !89
  %conv845 = zext i8 %conv844 to i32, !dbg !89
  %and846 = and i32 %conv845, 255, !dbg !89
  %idxprom847 = sext i32 %and846 to i64, !dbg !89
  %arrayidx848 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom847, !dbg !89
  %345 = load i32, i32* %arrayidx848, align 4, !dbg !89
  %xor849 = xor i32 %343, %345, !dbg !89
  %346 = load i32, i32* %t1, align 4, !dbg !89
  %shr850 = lshr i32 %346, 16, !dbg !89
  %conv851 = trunc i32 %shr850 to i8, !dbg !89
  %conv852 = zext i8 %conv851 to i32, !dbg !89
  %and853 = and i32 %conv852, 255, !dbg !89
  %idxprom854 = sext i32 %and853 to i64, !dbg !89
  %arrayidx855 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom854, !dbg !89
  %347 = load i32, i32* %arrayidx855, align 4, !dbg !89
  %xor856 = xor i32 %xor849, %347, !dbg !89
  %348 = load i32, i32* %t1, align 4, !dbg !89
  %shr857 = lshr i32 %348, 24, !dbg !89
  %conv858 = trunc i32 %shr857 to i8, !dbg !89
  %conv859 = zext i8 %conv858 to i32, !dbg !89
  %and860 = and i32 %conv859, 255, !dbg !89
  %idxprom861 = sext i32 %and860 to i64, !dbg !89
  %arrayidx862 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom861, !dbg !89
  %349 = load i32, i32* %arrayidx862, align 4, !dbg !89
  %xor863 = xor i32 %xor856, %349, !dbg !89
  %350 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !89
  %data864 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %350, i32 0, i32 0, !dbg !89
  %arrayidx865 = getelementptr inbounds [32 x i32], [32 x i32]* %data864, i64 0, i64 22, !dbg !89
  %arrayidx866 = getelementptr inbounds i32, i32* %arrayidx865, i64 1, !dbg !89
  store i32 %xor863, i32* %arrayidx866, align 4, !dbg !89
  %351 = load i32, i32* %x3, align 4, !dbg !90
  store i32 %351, i32* %t0, align 4, !dbg !90
  %352 = load i32, i32* %x3, align 4, !dbg !90
  %shl867 = shl i32 %352, 8, !dbg !90
  %353 = load i32, i32* %x4, align 4, !dbg !90
  %shr868 = lshr i32 %353, 24, !dbg !90
  %xor869 = xor i32 %shl867, %shr868, !dbg !90
  store i32 %xor869, i32* %x3, align 4, !dbg !90
  %354 = load i32, i32* %x4, align 4, !dbg !90
  %shl870 = shl i32 %354, 8, !dbg !90
  %355 = load i32, i32* %t0, align 4, !dbg !90
  %shr871 = lshr i32 %355, 24, !dbg !90
  %xor872 = xor i32 %shl870, %shr871, !dbg !90
  store i32 %xor872, i32* %x4, align 4, !dbg !90
  %356 = load i32, i32* %x1, align 4, !dbg !90
  %357 = load i32, i32* %x3, align 4, !dbg !90
  %add873 = add i32 %356, %357, !dbg !90
  %sub874 = sub i32 %add873, 2006686179, !dbg !90
  store i32 %sub874, i32* %t0, align 4, !dbg !90
  %358 = load i32, i32* %x2, align 4, !dbg !90
  %add875 = add i32 %358, 2006686179, !dbg !90
  %359 = load i32, i32* %x4, align 4, !dbg !90
  %sub876 = sub i32 %add875, %359, !dbg !90
  store i32 %sub876, i32* %t1, align 4, !dbg !90
  %360 = load i32, i32* %t0, align 4, !dbg !91
  %conv877 = trunc i32 %360 to i8, !dbg !91
  %conv878 = zext i8 %conv877 to i32, !dbg !91
  %and879 = and i32 %conv878, 255, !dbg !91
  %idxprom880 = sext i32 %and879 to i64, !dbg !91
  %arrayidx881 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom880, !dbg !91
  %361 = load i32, i32* %arrayidx881, align 4, !dbg !91
  %362 = load i32, i32* %t0, align 4, !dbg !91
  %shr882 = lshr i32 %362, 8, !dbg !91
  %conv883 = trunc i32 %shr882 to i8, !dbg !91
  %conv884 = zext i8 %conv883 to i32, !dbg !91
  %and885 = and i32 %conv884, 255, !dbg !91
  %idxprom886 = sext i32 %and885 to i64, !dbg !91
  %arrayidx887 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom886, !dbg !91
  %363 = load i32, i32* %arrayidx887, align 4, !dbg !91
  %xor888 = xor i32 %361, %363, !dbg !91
  %364 = load i32, i32* %t0, align 4, !dbg !91
  %shr889 = lshr i32 %364, 16, !dbg !91
  %conv890 = trunc i32 %shr889 to i8, !dbg !91
  %conv891 = zext i8 %conv890 to i32, !dbg !91
  %and892 = and i32 %conv891, 255, !dbg !91
  %idxprom893 = sext i32 %and892 to i64, !dbg !91
  %arrayidx894 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom893, !dbg !91
  %365 = load i32, i32* %arrayidx894, align 4, !dbg !91
  %xor895 = xor i32 %xor888, %365, !dbg !91
  %366 = load i32, i32* %t0, align 4, !dbg !91
  %shr896 = lshr i32 %366, 24, !dbg !91
  %conv897 = trunc i32 %shr896 to i8, !dbg !91
  %conv898 = zext i8 %conv897 to i32, !dbg !91
  %and899 = and i32 %conv898, 255, !dbg !91
  %idxprom900 = sext i32 %and899 to i64, !dbg !91
  %arrayidx901 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom900, !dbg !91
  %367 = load i32, i32* %arrayidx901, align 4, !dbg !91
  %xor902 = xor i32 %xor895, %367, !dbg !91
  %368 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !91
  %data903 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %368, i32 0, i32 0, !dbg !91
  %arrayidx904 = getelementptr inbounds [32 x i32], [32 x i32]* %data903, i64 0, i64 24, !dbg !91
  %arrayidx905 = getelementptr inbounds i32, i32* %arrayidx904, i64 0, !dbg !91
  store i32 %xor902, i32* %arrayidx905, align 4, !dbg !91
  %369 = load i32, i32* %t1, align 4, !dbg !91
  %conv906 = trunc i32 %369 to i8, !dbg !91
  %conv907 = zext i8 %conv906 to i32, !dbg !91
  %and908 = and i32 %conv907, 255, !dbg !91
  %idxprom909 = sext i32 %and908 to i64, !dbg !91
  %arrayidx910 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom909, !dbg !91
  %370 = load i32, i32* %arrayidx910, align 4, !dbg !91
  %371 = load i32, i32* %t1, align 4, !dbg !91
  %shr911 = lshr i32 %371, 8, !dbg !91
  %conv912 = trunc i32 %shr911 to i8, !dbg !91
  %conv913 = zext i8 %conv912 to i32, !dbg !91
  %and914 = and i32 %conv913, 255, !dbg !91
  %idxprom915 = sext i32 %and914 to i64, !dbg !91
  %arrayidx916 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom915, !dbg !91
  %372 = load i32, i32* %arrayidx916, align 4, !dbg !91
  %xor917 = xor i32 %370, %372, !dbg !91
  %373 = load i32, i32* %t1, align 4, !dbg !91
  %shr918 = lshr i32 %373, 16, !dbg !91
  %conv919 = trunc i32 %shr918 to i8, !dbg !91
  %conv920 = zext i8 %conv919 to i32, !dbg !91
  %and921 = and i32 %conv920, 255, !dbg !91
  %idxprom922 = sext i32 %and921 to i64, !dbg !91
  %arrayidx923 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom922, !dbg !91
  %374 = load i32, i32* %arrayidx923, align 4, !dbg !91
  %xor924 = xor i32 %xor917, %374, !dbg !91
  %375 = load i32, i32* %t1, align 4, !dbg !91
  %shr925 = lshr i32 %375, 24, !dbg !91
  %conv926 = trunc i32 %shr925 to i8, !dbg !91
  %conv927 = zext i8 %conv926 to i32, !dbg !91
  %and928 = and i32 %conv927, 255, !dbg !91
  %idxprom929 = sext i32 %and928 to i64, !dbg !91
  %arrayidx930 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom929, !dbg !91
  %376 = load i32, i32* %arrayidx930, align 4, !dbg !91
  %xor931 = xor i32 %xor924, %376, !dbg !91
  %377 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !91
  %data932 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %377, i32 0, i32 0, !dbg !91
  %arrayidx933 = getelementptr inbounds [32 x i32], [32 x i32]* %data932, i64 0, i64 24, !dbg !91
  %arrayidx934 = getelementptr inbounds i32, i32* %arrayidx933, i64 1, !dbg !91
  store i32 %xor931, i32* %arrayidx934, align 4, !dbg !91
  %378 = load i32, i32* %x1, align 4, !dbg !92
  store i32 %378, i32* %t0, align 4, !dbg !92
  %379 = load i32, i32* %x1, align 4, !dbg !92
  %shr935 = lshr i32 %379, 8, !dbg !92
  %380 = load i32, i32* %x2, align 4, !dbg !92
  %shl936 = shl i32 %380, 24, !dbg !92
  %xor937 = xor i32 %shr935, %shl936, !dbg !92
  store i32 %xor937, i32* %x1, align 4, !dbg !92
  %381 = load i32, i32* %x2, align 4, !dbg !92
  %shr938 = lshr i32 %381, 8, !dbg !92
  %382 = load i32, i32* %t0, align 4, !dbg !92
  %shl939 = shl i32 %382, 24, !dbg !92
  %xor940 = xor i32 %shr938, %shl939, !dbg !92
  store i32 %xor940, i32* %x2, align 4, !dbg !92
  %383 = load i32, i32* %x1, align 4, !dbg !92
  %384 = load i32, i32* %x3, align 4, !dbg !92
  %add941 = add i32 %383, %384, !dbg !92
  %sub942 = sub i32 %add941, -281594938, !dbg !92
  store i32 %sub942, i32* %t0, align 4, !dbg !92
  %385 = load i32, i32* %x2, align 4, !dbg !92
  %add943 = add i32 %385, -281594938, !dbg !92
  %386 = load i32, i32* %x4, align 4, !dbg !92
  %sub944 = sub i32 %add943, %386, !dbg !92
  store i32 %sub944, i32* %t1, align 4, !dbg !92
  %387 = load i32, i32* %t0, align 4, !dbg !93
  %conv945 = trunc i32 %387 to i8, !dbg !93
  %conv946 = zext i8 %conv945 to i32, !dbg !93
  %and947 = and i32 %conv946, 255, !dbg !93
  %idxprom948 = sext i32 %and947 to i64, !dbg !93
  %arrayidx949 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom948, !dbg !93
  %388 = load i32, i32* %arrayidx949, align 4, !dbg !93
  %389 = load i32, i32* %t0, align 4, !dbg !93
  %shr950 = lshr i32 %389, 8, !dbg !93
  %conv951 = trunc i32 %shr950 to i8, !dbg !93
  %conv952 = zext i8 %conv951 to i32, !dbg !93
  %and953 = and i32 %conv952, 255, !dbg !93
  %idxprom954 = sext i32 %and953 to i64, !dbg !93
  %arrayidx955 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom954, !dbg !93
  %390 = load i32, i32* %arrayidx955, align 4, !dbg !93
  %xor956 = xor i32 %388, %390, !dbg !93
  %391 = load i32, i32* %t0, align 4, !dbg !93
  %shr957 = lshr i32 %391, 16, !dbg !93
  %conv958 = trunc i32 %shr957 to i8, !dbg !93
  %conv959 = zext i8 %conv958 to i32, !dbg !93
  %and960 = and i32 %conv959, 255, !dbg !93
  %idxprom961 = sext i32 %and960 to i64, !dbg !93
  %arrayidx962 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom961, !dbg !93
  %392 = load i32, i32* %arrayidx962, align 4, !dbg !93
  %xor963 = xor i32 %xor956, %392, !dbg !93
  %393 = load i32, i32* %t0, align 4, !dbg !93
  %shr964 = lshr i32 %393, 24, !dbg !93
  %conv965 = trunc i32 %shr964 to i8, !dbg !93
  %conv966 = zext i8 %conv965 to i32, !dbg !93
  %and967 = and i32 %conv966, 255, !dbg !93
  %idxprom968 = sext i32 %and967 to i64, !dbg !93
  %arrayidx969 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom968, !dbg !93
  %394 = load i32, i32* %arrayidx969, align 4, !dbg !93
  %xor970 = xor i32 %xor963, %394, !dbg !93
  %395 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !93
  %data971 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %395, i32 0, i32 0, !dbg !93
  %arrayidx972 = getelementptr inbounds [32 x i32], [32 x i32]* %data971, i64 0, i64 26, !dbg !93
  %arrayidx973 = getelementptr inbounds i32, i32* %arrayidx972, i64 0, !dbg !93
  store i32 %xor970, i32* %arrayidx973, align 4, !dbg !93
  %396 = load i32, i32* %t1, align 4, !dbg !93
  %conv974 = trunc i32 %396 to i8, !dbg !93
  %conv975 = zext i8 %conv974 to i32, !dbg !93
  %and976 = and i32 %conv975, 255, !dbg !93
  %idxprom977 = sext i32 %and976 to i64, !dbg !93
  %arrayidx978 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom977, !dbg !93
  %397 = load i32, i32* %arrayidx978, align 4, !dbg !93
  %398 = load i32, i32* %t1, align 4, !dbg !93
  %shr979 = lshr i32 %398, 8, !dbg !93
  %conv980 = trunc i32 %shr979 to i8, !dbg !93
  %conv981 = zext i8 %conv980 to i32, !dbg !93
  %and982 = and i32 %conv981, 255, !dbg !93
  %idxprom983 = sext i32 %and982 to i64, !dbg !93
  %arrayidx984 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom983, !dbg !93
  %399 = load i32, i32* %arrayidx984, align 4, !dbg !93
  %xor985 = xor i32 %397, %399, !dbg !93
  %400 = load i32, i32* %t1, align 4, !dbg !93
  %shr986 = lshr i32 %400, 16, !dbg !93
  %conv987 = trunc i32 %shr986 to i8, !dbg !93
  %conv988 = zext i8 %conv987 to i32, !dbg !93
  %and989 = and i32 %conv988, 255, !dbg !93
  %idxprom990 = sext i32 %and989 to i64, !dbg !93
  %arrayidx991 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom990, !dbg !93
  %401 = load i32, i32* %arrayidx991, align 4, !dbg !93
  %xor992 = xor i32 %xor985, %401, !dbg !93
  %402 = load i32, i32* %t1, align 4, !dbg !93
  %shr993 = lshr i32 %402, 24, !dbg !93
  %conv994 = trunc i32 %shr993 to i8, !dbg !93
  %conv995 = zext i8 %conv994 to i32, !dbg !93
  %and996 = and i32 %conv995, 255, !dbg !93
  %idxprom997 = sext i32 %and996 to i64, !dbg !93
  %arrayidx998 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom997, !dbg !93
  %403 = load i32, i32* %arrayidx998, align 4, !dbg !93
  %xor999 = xor i32 %xor992, %403, !dbg !93
  %404 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !93
  %data1000 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %404, i32 0, i32 0, !dbg !93
  %arrayidx1001 = getelementptr inbounds [32 x i32], [32 x i32]* %data1000, i64 0, i64 26, !dbg !93
  %arrayidx1002 = getelementptr inbounds i32, i32* %arrayidx1001, i64 1, !dbg !93
  store i32 %xor999, i32* %arrayidx1002, align 4, !dbg !93
  %405 = load i32, i32* %x3, align 4, !dbg !94
  store i32 %405, i32* %t0, align 4, !dbg !94
  %406 = load i32, i32* %x3, align 4, !dbg !94
  %shl1003 = shl i32 %406, 8, !dbg !94
  %407 = load i32, i32* %x4, align 4, !dbg !94
  %shr1004 = lshr i32 %407, 24, !dbg !94
  %xor1005 = xor i32 %shl1003, %shr1004, !dbg !94
  store i32 %xor1005, i32* %x3, align 4, !dbg !94
  %408 = load i32, i32* %x4, align 4, !dbg !94
  %shl1006 = shl i32 %408, 8, !dbg !94
  %409 = load i32, i32* %t0, align 4, !dbg !94
  %shr1007 = lshr i32 %409, 24, !dbg !94
  %xor1008 = xor i32 %shl1006, %shr1007, !dbg !94
  store i32 %xor1008, i32* %x4, align 4, !dbg !94
  %410 = load i32, i32* %x1, align 4, !dbg !94
  %411 = load i32, i32* %x3, align 4, !dbg !94
  %add1009 = add i32 %410, %411, !dbg !94
  %sub1010 = sub i32 %add1009, -563189875, !dbg !94
  store i32 %sub1010, i32* %t0, align 4, !dbg !94
  %412 = load i32, i32* %x2, align 4, !dbg !94
  %add1011 = add i32 %412, -563189875, !dbg !94
  %413 = load i32, i32* %x4, align 4, !dbg !94
  %sub1012 = sub i32 %add1011, %413, !dbg !94
  store i32 %sub1012, i32* %t1, align 4, !dbg !94
  %414 = load i32, i32* %t0, align 4, !dbg !95
  %conv1013 = trunc i32 %414 to i8, !dbg !95
  %conv1014 = zext i8 %conv1013 to i32, !dbg !95
  %and1015 = and i32 %conv1014, 255, !dbg !95
  %idxprom1016 = sext i32 %and1015 to i64, !dbg !95
  %arrayidx1017 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1016, !dbg !95
  %415 = load i32, i32* %arrayidx1017, align 4, !dbg !95
  %416 = load i32, i32* %t0, align 4, !dbg !95
  %shr1018 = lshr i32 %416, 8, !dbg !95
  %conv1019 = trunc i32 %shr1018 to i8, !dbg !95
  %conv1020 = zext i8 %conv1019 to i32, !dbg !95
  %and1021 = and i32 %conv1020, 255, !dbg !95
  %idxprom1022 = sext i32 %and1021 to i64, !dbg !95
  %arrayidx1023 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1022, !dbg !95
  %417 = load i32, i32* %arrayidx1023, align 4, !dbg !95
  %xor1024 = xor i32 %415, %417, !dbg !95
  %418 = load i32, i32* %t0, align 4, !dbg !95
  %shr1025 = lshr i32 %418, 16, !dbg !95
  %conv1026 = trunc i32 %shr1025 to i8, !dbg !95
  %conv1027 = zext i8 %conv1026 to i32, !dbg !95
  %and1028 = and i32 %conv1027, 255, !dbg !95
  %idxprom1029 = sext i32 %and1028 to i64, !dbg !95
  %arrayidx1030 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1029, !dbg !95
  %419 = load i32, i32* %arrayidx1030, align 4, !dbg !95
  %xor1031 = xor i32 %xor1024, %419, !dbg !95
  %420 = load i32, i32* %t0, align 4, !dbg !95
  %shr1032 = lshr i32 %420, 24, !dbg !95
  %conv1033 = trunc i32 %shr1032 to i8, !dbg !95
  %conv1034 = zext i8 %conv1033 to i32, !dbg !95
  %and1035 = and i32 %conv1034, 255, !dbg !95
  %idxprom1036 = sext i32 %and1035 to i64, !dbg !95
  %arrayidx1037 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1036, !dbg !95
  %421 = load i32, i32* %arrayidx1037, align 4, !dbg !95
  %xor1038 = xor i32 %xor1031, %421, !dbg !95
  %422 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !95
  %data1039 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %422, i32 0, i32 0, !dbg !95
  %arrayidx1040 = getelementptr inbounds [32 x i32], [32 x i32]* %data1039, i64 0, i64 28, !dbg !95
  %arrayidx1041 = getelementptr inbounds i32, i32* %arrayidx1040, i64 0, !dbg !95
  store i32 %xor1038, i32* %arrayidx1041, align 4, !dbg !95
  %423 = load i32, i32* %t1, align 4, !dbg !95
  %conv1042 = trunc i32 %423 to i8, !dbg !95
  %conv1043 = zext i8 %conv1042 to i32, !dbg !95
  %and1044 = and i32 %conv1043, 255, !dbg !95
  %idxprom1045 = sext i32 %and1044 to i64, !dbg !95
  %arrayidx1046 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1045, !dbg !95
  %424 = load i32, i32* %arrayidx1046, align 4, !dbg !95
  %425 = load i32, i32* %t1, align 4, !dbg !95
  %shr1047 = lshr i32 %425, 8, !dbg !95
  %conv1048 = trunc i32 %shr1047 to i8, !dbg !95
  %conv1049 = zext i8 %conv1048 to i32, !dbg !95
  %and1050 = and i32 %conv1049, 255, !dbg !95
  %idxprom1051 = sext i32 %and1050 to i64, !dbg !95
  %arrayidx1052 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1051, !dbg !95
  %426 = load i32, i32* %arrayidx1052, align 4, !dbg !95
  %xor1053 = xor i32 %424, %426, !dbg !95
  %427 = load i32, i32* %t1, align 4, !dbg !95
  %shr1054 = lshr i32 %427, 16, !dbg !95
  %conv1055 = trunc i32 %shr1054 to i8, !dbg !95
  %conv1056 = zext i8 %conv1055 to i32, !dbg !95
  %and1057 = and i32 %conv1056, 255, !dbg !95
  %idxprom1058 = sext i32 %and1057 to i64, !dbg !95
  %arrayidx1059 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1058, !dbg !95
  %428 = load i32, i32* %arrayidx1059, align 4, !dbg !95
  %xor1060 = xor i32 %xor1053, %428, !dbg !95
  %429 = load i32, i32* %t1, align 4, !dbg !95
  %shr1061 = lshr i32 %429, 24, !dbg !95
  %conv1062 = trunc i32 %shr1061 to i8, !dbg !95
  %conv1063 = zext i8 %conv1062 to i32, !dbg !95
  %and1064 = and i32 %conv1063, 255, !dbg !95
  %idxprom1065 = sext i32 %and1064 to i64, !dbg !95
  %arrayidx1066 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1065, !dbg !95
  %430 = load i32, i32* %arrayidx1066, align 4, !dbg !95
  %xor1067 = xor i32 %xor1060, %430, !dbg !95
  %431 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !95
  %data1068 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %431, i32 0, i32 0, !dbg !95
  %arrayidx1069 = getelementptr inbounds [32 x i32], [32 x i32]* %data1068, i64 0, i64 28, !dbg !95
  %arrayidx1070 = getelementptr inbounds i32, i32* %arrayidx1069, i64 1, !dbg !95
  store i32 %xor1067, i32* %arrayidx1070, align 4, !dbg !95
  %432 = load i32, i32* %x1, align 4, !dbg !96
  store i32 %432, i32* %t0, align 4, !dbg !96
  %433 = load i32, i32* %x1, align 4, !dbg !96
  %shr1071 = lshr i32 %433, 8, !dbg !96
  %434 = load i32, i32* %x2, align 4, !dbg !96
  %shl1072 = shl i32 %434, 24, !dbg !96
  %xor1073 = xor i32 %shr1071, %shl1072, !dbg !96
  store i32 %xor1073, i32* %x1, align 4, !dbg !96
  %435 = load i32, i32* %x2, align 4, !dbg !96
  %shr1074 = lshr i32 %435, 8, !dbg !96
  %436 = load i32, i32* %t0, align 4, !dbg !96
  %shl1075 = shl i32 %436, 24, !dbg !96
  %xor1076 = xor i32 %shr1074, %shl1075, !dbg !96
  store i32 %xor1076, i32* %x2, align 4, !dbg !96
  %437 = load i32, i32* %x1, align 4, !dbg !96
  %438 = load i32, i32* %x3, align 4, !dbg !96
  %add1077 = add i32 %437, %438, !dbg !96
  %sub1078 = sub i32 %add1077, -1126379749, !dbg !96
  store i32 %sub1078, i32* %t0, align 4, !dbg !96
  %439 = load i32, i32* %x2, align 4, !dbg !96
  %add1079 = add i32 %439, -1126379749, !dbg !96
  %440 = load i32, i32* %x4, align 4, !dbg !96
  %sub1080 = sub i32 %add1079, %440, !dbg !96
  store i32 %sub1080, i32* %t1, align 4, !dbg !96
  %441 = load i32, i32* %t0, align 4, !dbg !97
  %conv1081 = trunc i32 %441 to i8, !dbg !97
  %conv1082 = zext i8 %conv1081 to i32, !dbg !97
  %and1083 = and i32 %conv1082, 255, !dbg !97
  %idxprom1084 = sext i32 %and1083 to i64, !dbg !97
  %arrayidx1085 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1084, !dbg !97
  %442 = load i32, i32* %arrayidx1085, align 4, !dbg !97
  %443 = load i32, i32* %t0, align 4, !dbg !97
  %shr1086 = lshr i32 %443, 8, !dbg !97
  %conv1087 = trunc i32 %shr1086 to i8, !dbg !97
  %conv1088 = zext i8 %conv1087 to i32, !dbg !97
  %and1089 = and i32 %conv1088, 255, !dbg !97
  %idxprom1090 = sext i32 %and1089 to i64, !dbg !97
  %arrayidx1091 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1090, !dbg !97
  %444 = load i32, i32* %arrayidx1091, align 4, !dbg !97
  %xor1092 = xor i32 %442, %444, !dbg !97
  %445 = load i32, i32* %t0, align 4, !dbg !97
  %shr1093 = lshr i32 %445, 16, !dbg !97
  %conv1094 = trunc i32 %shr1093 to i8, !dbg !97
  %conv1095 = zext i8 %conv1094 to i32, !dbg !97
  %and1096 = and i32 %conv1095, 255, !dbg !97
  %idxprom1097 = sext i32 %and1096 to i64, !dbg !97
  %arrayidx1098 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1097, !dbg !97
  %446 = load i32, i32* %arrayidx1098, align 4, !dbg !97
  %xor1099 = xor i32 %xor1092, %446, !dbg !97
  %447 = load i32, i32* %t0, align 4, !dbg !97
  %shr1100 = lshr i32 %447, 24, !dbg !97
  %conv1101 = trunc i32 %shr1100 to i8, !dbg !97
  %conv1102 = zext i8 %conv1101 to i32, !dbg !97
  %and1103 = and i32 %conv1102, 255, !dbg !97
  %idxprom1104 = sext i32 %and1103 to i64, !dbg !97
  %arrayidx1105 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1104, !dbg !97
  %448 = load i32, i32* %arrayidx1105, align 4, !dbg !97
  %xor1106 = xor i32 %xor1099, %448, !dbg !97
  %449 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !97
  %data1107 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %449, i32 0, i32 0, !dbg !97
  %arrayidx1108 = getelementptr inbounds [32 x i32], [32 x i32]* %data1107, i64 0, i64 30, !dbg !97
  %arrayidx1109 = getelementptr inbounds i32, i32* %arrayidx1108, i64 0, !dbg !97
  store i32 %xor1106, i32* %arrayidx1109, align 4, !dbg !97
  %450 = load i32, i32* %t1, align 4, !dbg !97
  %conv1110 = trunc i32 %450 to i8, !dbg !97
  %conv1111 = zext i8 %conv1110 to i32, !dbg !97
  %and1112 = and i32 %conv1111, 255, !dbg !97
  %idxprom1113 = sext i32 %and1112 to i64, !dbg !97
  %arrayidx1114 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1113, !dbg !97
  %451 = load i32, i32* %arrayidx1114, align 4, !dbg !97
  %452 = load i32, i32* %t1, align 4, !dbg !97
  %shr1115 = lshr i32 %452, 8, !dbg !97
  %conv1116 = trunc i32 %shr1115 to i8, !dbg !97
  %conv1117 = zext i8 %conv1116 to i32, !dbg !97
  %and1118 = and i32 %conv1117, 255, !dbg !97
  %idxprom1119 = sext i32 %and1118 to i64, !dbg !97
  %arrayidx1120 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1119, !dbg !97
  %453 = load i32, i32* %arrayidx1120, align 4, !dbg !97
  %xor1121 = xor i32 %451, %453, !dbg !97
  %454 = load i32, i32* %t1, align 4, !dbg !97
  %shr1122 = lshr i32 %454, 16, !dbg !97
  %conv1123 = trunc i32 %shr1122 to i8, !dbg !97
  %conv1124 = zext i8 %conv1123 to i32, !dbg !97
  %and1125 = and i32 %conv1124, 255, !dbg !97
  %idxprom1126 = sext i32 %and1125 to i64, !dbg !97
  %arrayidx1127 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1126, !dbg !97
  %455 = load i32, i32* %arrayidx1127, align 4, !dbg !97
  %xor1128 = xor i32 %xor1121, %455, !dbg !97
  %456 = load i32, i32* %t1, align 4, !dbg !97
  %shr1129 = lshr i32 %456, 24, !dbg !97
  %conv1130 = trunc i32 %shr1129 to i8, !dbg !97
  %conv1131 = zext i8 %conv1130 to i32, !dbg !97
  %and1132 = and i32 %conv1131, 255, !dbg !97
  %idxprom1133 = sext i32 %and1132 to i64, !dbg !97
  %arrayidx1134 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1133, !dbg !97
  %457 = load i32, i32* %arrayidx1134, align 4, !dbg !97
  %xor1135 = xor i32 %xor1128, %457, !dbg !97
  %458 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !97
  %data1136 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %458, i32 0, i32 0, !dbg !97
  %arrayidx1137 = getelementptr inbounds [32 x i32], [32 x i32]* %data1136, i64 0, i64 30, !dbg !97
  %arrayidx1138 = getelementptr inbounds i32, i32* %arrayidx1137, i64 1, !dbg !97
  store i32 %xor1135, i32* %arrayidx1138, align 4, !dbg !97
  ret void, !dbg !98
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @SEED_encrypt(i8* %s, i8* %d, %struct.seed_key_st* %ks) #0 !dbg !99 {
entry:
  %s.addr = alloca i8*, align 8
  %d.addr = alloca i8*, align 8
  %ks.addr = alloca %struct.seed_key_st*, align 8
  %x1 = alloca i32, align 4
  %x2 = alloca i32, align 4
  %x3 = alloca i32, align 4
  %x4 = alloca i32, align 4
  %t0 = alloca i32, align 4
  %t1 = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !105, metadata !DIExpression()), !dbg !106
  store i8* %d, i8** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr, metadata !107, metadata !DIExpression()), !dbg !108
  store %struct.seed_key_st* %ks, %struct.seed_key_st** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seed_key_st** %ks.addr, metadata !109, metadata !DIExpression()), !dbg !110
  %ks.addr1 = bitcast %struct.seed_key_st** %ks.addr to i8*
  call void @llvm.var.annotation(i8* %ks.addr1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 501)
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !111, metadata !DIExpression()), !dbg !112
  %x12 = bitcast i32* %x1 to i8*, !dbg !113
  call void @llvm.var.annotation(i8* %x12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 503), !dbg !113
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !114, metadata !DIExpression()), !dbg !115
  %x23 = bitcast i32* %x2 to i8*, !dbg !113
  call void @llvm.var.annotation(i8* %x23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 503), !dbg !113
  call void @llvm.dbg.declare(metadata i32* %x3, metadata !116, metadata !DIExpression()), !dbg !117
  %x34 = bitcast i32* %x3 to i8*, !dbg !113
  call void @llvm.var.annotation(i8* %x34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 503), !dbg !113
  call void @llvm.dbg.declare(metadata i32* %x4, metadata !118, metadata !DIExpression()), !dbg !119
  %x45 = bitcast i32* %x4 to i8*, !dbg !113
  call void @llvm.var.annotation(i8* %x45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 503), !dbg !113
  call void @llvm.dbg.declare(metadata i32* %t0, metadata !120, metadata !DIExpression()), !dbg !121
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !122, metadata !DIExpression()), !dbg !123
  %0 = load i8*, i8** %s.addr, align 8, !dbg !124
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !124
  %1 = load i8, i8* %arrayidx, align 1, !dbg !124
  %conv = zext i8 %1 to i32, !dbg !124
  %shl = shl i32 %conv, 24, !dbg !124
  %2 = load i8*, i8** %s.addr, align 8, !dbg !124
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !124
  %3 = load i8, i8* %arrayidx6, align 1, !dbg !124
  %conv7 = zext i8 %3 to i32, !dbg !124
  %shl8 = shl i32 %conv7, 16, !dbg !124
  %or = or i32 %shl, %shl8, !dbg !124
  %4 = load i8*, i8** %s.addr, align 8, !dbg !124
  %arrayidx9 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !124
  %5 = load i8, i8* %arrayidx9, align 1, !dbg !124
  %conv10 = zext i8 %5 to i32, !dbg !124
  %shl11 = shl i32 %conv10, 8, !dbg !124
  %or12 = or i32 %or, %shl11, !dbg !124
  %6 = load i8*, i8** %s.addr, align 8, !dbg !124
  %arrayidx13 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !124
  %7 = load i8, i8* %arrayidx13, align 1, !dbg !124
  %conv14 = zext i8 %7 to i32, !dbg !124
  %or15 = or i32 %or12, %conv14, !dbg !124
  store i32 %or15, i32* %x1, align 4, !dbg !124
  %8 = load i8*, i8** %s.addr, align 8, !dbg !125
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 4, !dbg !125
  %arrayidx16 = getelementptr inbounds i8, i8* %add.ptr, i64 0, !dbg !125
  %9 = load i8, i8* %arrayidx16, align 1, !dbg !125
  %conv17 = zext i8 %9 to i32, !dbg !125
  %shl18 = shl i32 %conv17, 24, !dbg !125
  %10 = load i8*, i8** %s.addr, align 8, !dbg !125
  %add.ptr19 = getelementptr inbounds i8, i8* %10, i64 4, !dbg !125
  %arrayidx20 = getelementptr inbounds i8, i8* %add.ptr19, i64 1, !dbg !125
  %11 = load i8, i8* %arrayidx20, align 1, !dbg !125
  %conv21 = zext i8 %11 to i32, !dbg !125
  %shl22 = shl i32 %conv21, 16, !dbg !125
  %or23 = or i32 %shl18, %shl22, !dbg !125
  %12 = load i8*, i8** %s.addr, align 8, !dbg !125
  %add.ptr24 = getelementptr inbounds i8, i8* %12, i64 4, !dbg !125
  %arrayidx25 = getelementptr inbounds i8, i8* %add.ptr24, i64 2, !dbg !125
  %13 = load i8, i8* %arrayidx25, align 1, !dbg !125
  %conv26 = zext i8 %13 to i32, !dbg !125
  %shl27 = shl i32 %conv26, 8, !dbg !125
  %or28 = or i32 %or23, %shl27, !dbg !125
  %14 = load i8*, i8** %s.addr, align 8, !dbg !125
  %add.ptr29 = getelementptr inbounds i8, i8* %14, i64 4, !dbg !125
  %arrayidx30 = getelementptr inbounds i8, i8* %add.ptr29, i64 3, !dbg !125
  %15 = load i8, i8* %arrayidx30, align 1, !dbg !125
  %conv31 = zext i8 %15 to i32, !dbg !125
  %or32 = or i32 %or28, %conv31, !dbg !125
  store i32 %or32, i32* %x2, align 4, !dbg !125
  %16 = load i8*, i8** %s.addr, align 8, !dbg !126
  %add.ptr33 = getelementptr inbounds i8, i8* %16, i64 8, !dbg !126
  %arrayidx34 = getelementptr inbounds i8, i8* %add.ptr33, i64 0, !dbg !126
  %17 = load i8, i8* %arrayidx34, align 1, !dbg !126
  %conv35 = zext i8 %17 to i32, !dbg !126
  %shl36 = shl i32 %conv35, 24, !dbg !126
  %18 = load i8*, i8** %s.addr, align 8, !dbg !126
  %add.ptr37 = getelementptr inbounds i8, i8* %18, i64 8, !dbg !126
  %arrayidx38 = getelementptr inbounds i8, i8* %add.ptr37, i64 1, !dbg !126
  %19 = load i8, i8* %arrayidx38, align 1, !dbg !126
  %conv39 = zext i8 %19 to i32, !dbg !126
  %shl40 = shl i32 %conv39, 16, !dbg !126
  %or41 = or i32 %shl36, %shl40, !dbg !126
  %20 = load i8*, i8** %s.addr, align 8, !dbg !126
  %add.ptr42 = getelementptr inbounds i8, i8* %20, i64 8, !dbg !126
  %arrayidx43 = getelementptr inbounds i8, i8* %add.ptr42, i64 2, !dbg !126
  %21 = load i8, i8* %arrayidx43, align 1, !dbg !126
  %conv44 = zext i8 %21 to i32, !dbg !126
  %shl45 = shl i32 %conv44, 8, !dbg !126
  %or46 = or i32 %or41, %shl45, !dbg !126
  %22 = load i8*, i8** %s.addr, align 8, !dbg !126
  %add.ptr47 = getelementptr inbounds i8, i8* %22, i64 8, !dbg !126
  %arrayidx48 = getelementptr inbounds i8, i8* %add.ptr47, i64 3, !dbg !126
  %23 = load i8, i8* %arrayidx48, align 1, !dbg !126
  %conv49 = zext i8 %23 to i32, !dbg !126
  %or50 = or i32 %or46, %conv49, !dbg !126
  store i32 %or50, i32* %x3, align 4, !dbg !126
  %24 = load i8*, i8** %s.addr, align 8, !dbg !127
  %add.ptr51 = getelementptr inbounds i8, i8* %24, i64 12, !dbg !127
  %arrayidx52 = getelementptr inbounds i8, i8* %add.ptr51, i64 0, !dbg !127
  %25 = load i8, i8* %arrayidx52, align 1, !dbg !127
  %conv53 = zext i8 %25 to i32, !dbg !127
  %shl54 = shl i32 %conv53, 24, !dbg !127
  %26 = load i8*, i8** %s.addr, align 8, !dbg !127
  %add.ptr55 = getelementptr inbounds i8, i8* %26, i64 12, !dbg !127
  %arrayidx56 = getelementptr inbounds i8, i8* %add.ptr55, i64 1, !dbg !127
  %27 = load i8, i8* %arrayidx56, align 1, !dbg !127
  %conv57 = zext i8 %27 to i32, !dbg !127
  %shl58 = shl i32 %conv57, 16, !dbg !127
  %or59 = or i32 %shl54, %shl58, !dbg !127
  %28 = load i8*, i8** %s.addr, align 8, !dbg !127
  %add.ptr60 = getelementptr inbounds i8, i8* %28, i64 12, !dbg !127
  %arrayidx61 = getelementptr inbounds i8, i8* %add.ptr60, i64 2, !dbg !127
  %29 = load i8, i8* %arrayidx61, align 1, !dbg !127
  %conv62 = zext i8 %29 to i32, !dbg !127
  %shl63 = shl i32 %conv62, 8, !dbg !127
  %or64 = or i32 %or59, %shl63, !dbg !127
  %30 = load i8*, i8** %s.addr, align 8, !dbg !127
  %add.ptr65 = getelementptr inbounds i8, i8* %30, i64 12, !dbg !127
  %arrayidx66 = getelementptr inbounds i8, i8* %add.ptr65, i64 3, !dbg !127
  %31 = load i8, i8* %arrayidx66, align 1, !dbg !127
  %conv67 = zext i8 %31 to i32, !dbg !127
  %or68 = or i32 %or64, %conv67, !dbg !127
  store i32 %or68, i32* %x4, align 4, !dbg !127
  %32 = load i32, i32* %x3, align 4, !dbg !128
  %33 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !128
  %data = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %33, i32 0, i32 0, !dbg !128
  %arrayidx69 = getelementptr inbounds [32 x i32], [32 x i32]* %data, i64 0, i64 0, !dbg !128
  %34 = load i32, i32* %arrayidx69, align 4, !dbg !128
  %xor = xor i32 %32, %34, !dbg !128
  store i32 %xor, i32* %t0, align 4, !dbg !128
  %35 = load i32, i32* %x4, align 4, !dbg !128
  %36 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !128
  %data70 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %36, i32 0, i32 0, !dbg !128
  %arrayidx71 = getelementptr inbounds [32 x i32], [32 x i32]* %data70, i64 0, i64 1, !dbg !128
  %37 = load i32, i32* %arrayidx71, align 4, !dbg !128
  %xor72 = xor i32 %35, %37, !dbg !128
  store i32 %xor72, i32* %t1, align 4, !dbg !128
  %38 = load i32, i32* %t0, align 4, !dbg !128
  %39 = load i32, i32* %t1, align 4, !dbg !128
  %xor73 = xor i32 %39, %38, !dbg !128
  store i32 %xor73, i32* %t1, align 4, !dbg !128
  %40 = load i32, i32* %t1, align 4, !dbg !128
  %conv74 = trunc i32 %40 to i8, !dbg !128
  %conv75 = zext i8 %conv74 to i32, !dbg !128
  %and = and i32 %conv75, 255, !dbg !128
  %idxprom = sext i32 %and to i64, !dbg !128
  %arrayidx76 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom, !dbg !128
  %41 = load i32, i32* %arrayidx76, align 4, !dbg !128
  %42 = load i32, i32* %t1, align 4, !dbg !128
  %shr = lshr i32 %42, 8, !dbg !128
  %conv77 = trunc i32 %shr to i8, !dbg !128
  %conv78 = zext i8 %conv77 to i32, !dbg !128
  %and79 = and i32 %conv78, 255, !dbg !128
  %idxprom80 = sext i32 %and79 to i64, !dbg !128
  %arrayidx81 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom80, !dbg !128
  %43 = load i32, i32* %arrayidx81, align 4, !dbg !128
  %xor82 = xor i32 %41, %43, !dbg !128
  %44 = load i32, i32* %t1, align 4, !dbg !128
  %shr83 = lshr i32 %44, 16, !dbg !128
  %conv84 = trunc i32 %shr83 to i8, !dbg !128
  %conv85 = zext i8 %conv84 to i32, !dbg !128
  %and86 = and i32 %conv85, 255, !dbg !128
  %idxprom87 = sext i32 %and86 to i64, !dbg !128
  %arrayidx88 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom87, !dbg !128
  %45 = load i32, i32* %arrayidx88, align 4, !dbg !128
  %xor89 = xor i32 %xor82, %45, !dbg !128
  %46 = load i32, i32* %t1, align 4, !dbg !128
  %shr90 = lshr i32 %46, 24, !dbg !128
  %conv91 = trunc i32 %shr90 to i8, !dbg !128
  %conv92 = zext i8 %conv91 to i32, !dbg !128
  %and93 = and i32 %conv92, 255, !dbg !128
  %idxprom94 = sext i32 %and93 to i64, !dbg !128
  %arrayidx95 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom94, !dbg !128
  %47 = load i32, i32* %arrayidx95, align 4, !dbg !128
  %xor96 = xor i32 %xor89, %47, !dbg !128
  store i32 %xor96, i32* %t1, align 4, !dbg !128
  %48 = load i32, i32* %t0, align 4, !dbg !128
  %49 = load i32, i32* %t1, align 4, !dbg !128
  %add = add i32 %48, %49, !dbg !128
  store i32 %add, i32* %t0, align 4, !dbg !128
  %50 = load i32, i32* %t0, align 4, !dbg !128
  %conv97 = trunc i32 %50 to i8, !dbg !128
  %conv98 = zext i8 %conv97 to i32, !dbg !128
  %and99 = and i32 %conv98, 255, !dbg !128
  %idxprom100 = sext i32 %and99 to i64, !dbg !128
  %arrayidx101 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom100, !dbg !128
  %51 = load i32, i32* %arrayidx101, align 4, !dbg !128
  %52 = load i32, i32* %t0, align 4, !dbg !128
  %shr102 = lshr i32 %52, 8, !dbg !128
  %conv103 = trunc i32 %shr102 to i8, !dbg !128
  %conv104 = zext i8 %conv103 to i32, !dbg !128
  %and105 = and i32 %conv104, 255, !dbg !128
  %idxprom106 = sext i32 %and105 to i64, !dbg !128
  %arrayidx107 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom106, !dbg !128
  %53 = load i32, i32* %arrayidx107, align 4, !dbg !128
  %xor108 = xor i32 %51, %53, !dbg !128
  %54 = load i32, i32* %t0, align 4, !dbg !128
  %shr109 = lshr i32 %54, 16, !dbg !128
  %conv110 = trunc i32 %shr109 to i8, !dbg !128
  %conv111 = zext i8 %conv110 to i32, !dbg !128
  %and112 = and i32 %conv111, 255, !dbg !128
  %idxprom113 = sext i32 %and112 to i64, !dbg !128
  %arrayidx114 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom113, !dbg !128
  %55 = load i32, i32* %arrayidx114, align 4, !dbg !128
  %xor115 = xor i32 %xor108, %55, !dbg !128
  %56 = load i32, i32* %t0, align 4, !dbg !128
  %shr116 = lshr i32 %56, 24, !dbg !128
  %conv117 = trunc i32 %shr116 to i8, !dbg !128
  %conv118 = zext i8 %conv117 to i32, !dbg !128
  %and119 = and i32 %conv118, 255, !dbg !128
  %idxprom120 = sext i32 %and119 to i64, !dbg !128
  %arrayidx121 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom120, !dbg !128
  %57 = load i32, i32* %arrayidx121, align 4, !dbg !128
  %xor122 = xor i32 %xor115, %57, !dbg !128
  store i32 %xor122, i32* %t0, align 4, !dbg !128
  %58 = load i32, i32* %t1, align 4, !dbg !128
  %59 = load i32, i32* %t0, align 4, !dbg !128
  %add123 = add i32 %58, %59, !dbg !128
  store i32 %add123, i32* %t1, align 4, !dbg !128
  %60 = load i32, i32* %t1, align 4, !dbg !128
  %conv124 = trunc i32 %60 to i8, !dbg !128
  %conv125 = zext i8 %conv124 to i32, !dbg !128
  %and126 = and i32 %conv125, 255, !dbg !128
  %idxprom127 = sext i32 %and126 to i64, !dbg !128
  %arrayidx128 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom127, !dbg !128
  %61 = load i32, i32* %arrayidx128, align 4, !dbg !128
  %62 = load i32, i32* %t1, align 4, !dbg !128
  %shr129 = lshr i32 %62, 8, !dbg !128
  %conv130 = trunc i32 %shr129 to i8, !dbg !128
  %conv131 = zext i8 %conv130 to i32, !dbg !128
  %and132 = and i32 %conv131, 255, !dbg !128
  %idxprom133 = sext i32 %and132 to i64, !dbg !128
  %arrayidx134 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom133, !dbg !128
  %63 = load i32, i32* %arrayidx134, align 4, !dbg !128
  %xor135 = xor i32 %61, %63, !dbg !128
  %64 = load i32, i32* %t1, align 4, !dbg !128
  %shr136 = lshr i32 %64, 16, !dbg !128
  %conv137 = trunc i32 %shr136 to i8, !dbg !128
  %conv138 = zext i8 %conv137 to i32, !dbg !128
  %and139 = and i32 %conv138, 255, !dbg !128
  %idxprom140 = sext i32 %and139 to i64, !dbg !128
  %arrayidx141 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom140, !dbg !128
  %65 = load i32, i32* %arrayidx141, align 4, !dbg !128
  %xor142 = xor i32 %xor135, %65, !dbg !128
  %66 = load i32, i32* %t1, align 4, !dbg !128
  %shr143 = lshr i32 %66, 24, !dbg !128
  %conv144 = trunc i32 %shr143 to i8, !dbg !128
  %conv145 = zext i8 %conv144 to i32, !dbg !128
  %and146 = and i32 %conv145, 255, !dbg !128
  %idxprom147 = sext i32 %and146 to i64, !dbg !128
  %arrayidx148 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom147, !dbg !128
  %67 = load i32, i32* %arrayidx148, align 4, !dbg !128
  %xor149 = xor i32 %xor142, %67, !dbg !128
  store i32 %xor149, i32* %t1, align 4, !dbg !128
  %68 = load i32, i32* %t0, align 4, !dbg !128
  %69 = load i32, i32* %t1, align 4, !dbg !128
  %add150 = add i32 %68, %69, !dbg !128
  store i32 %add150, i32* %t0, align 4, !dbg !128
  %70 = load i32, i32* %t0, align 4, !dbg !128
  %71 = load i32, i32* %x1, align 4, !dbg !128
  %xor151 = xor i32 %71, %70, !dbg !128
  store i32 %xor151, i32* %x1, align 4, !dbg !128
  %72 = load i32, i32* %t1, align 4, !dbg !128
  %73 = load i32, i32* %x2, align 4, !dbg !128
  %xor152 = xor i32 %73, %72, !dbg !128
  store i32 %xor152, i32* %x2, align 4, !dbg !128
  %74 = load i32, i32* %x1, align 4, !dbg !129
  %75 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !129
  %data153 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %75, i32 0, i32 0, !dbg !129
  %arrayidx154 = getelementptr inbounds [32 x i32], [32 x i32]* %data153, i64 0, i64 2, !dbg !129
  %76 = load i32, i32* %arrayidx154, align 4, !dbg !129
  %xor155 = xor i32 %74, %76, !dbg !129
  store i32 %xor155, i32* %t0, align 4, !dbg !129
  %77 = load i32, i32* %x2, align 4, !dbg !129
  %78 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !129
  %data156 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %78, i32 0, i32 0, !dbg !129
  %arrayidx157 = getelementptr inbounds [32 x i32], [32 x i32]* %data156, i64 0, i64 3, !dbg !129
  %79 = load i32, i32* %arrayidx157, align 4, !dbg !129
  %xor158 = xor i32 %77, %79, !dbg !129
  store i32 %xor158, i32* %t1, align 4, !dbg !129
  %80 = load i32, i32* %t0, align 4, !dbg !129
  %81 = load i32, i32* %t1, align 4, !dbg !129
  %xor159 = xor i32 %81, %80, !dbg !129
  store i32 %xor159, i32* %t1, align 4, !dbg !129
  %82 = load i32, i32* %t1, align 4, !dbg !129
  %conv160 = trunc i32 %82 to i8, !dbg !129
  %conv161 = zext i8 %conv160 to i32, !dbg !129
  %and162 = and i32 %conv161, 255, !dbg !129
  %idxprom163 = sext i32 %and162 to i64, !dbg !129
  %arrayidx164 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom163, !dbg !129
  %83 = load i32, i32* %arrayidx164, align 4, !dbg !129
  %84 = load i32, i32* %t1, align 4, !dbg !129
  %shr165 = lshr i32 %84, 8, !dbg !129
  %conv166 = trunc i32 %shr165 to i8, !dbg !129
  %conv167 = zext i8 %conv166 to i32, !dbg !129
  %and168 = and i32 %conv167, 255, !dbg !129
  %idxprom169 = sext i32 %and168 to i64, !dbg !129
  %arrayidx170 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom169, !dbg !129
  %85 = load i32, i32* %arrayidx170, align 4, !dbg !129
  %xor171 = xor i32 %83, %85, !dbg !129
  %86 = load i32, i32* %t1, align 4, !dbg !129
  %shr172 = lshr i32 %86, 16, !dbg !129
  %conv173 = trunc i32 %shr172 to i8, !dbg !129
  %conv174 = zext i8 %conv173 to i32, !dbg !129
  %and175 = and i32 %conv174, 255, !dbg !129
  %idxprom176 = sext i32 %and175 to i64, !dbg !129
  %arrayidx177 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom176, !dbg !129
  %87 = load i32, i32* %arrayidx177, align 4, !dbg !129
  %xor178 = xor i32 %xor171, %87, !dbg !129
  %88 = load i32, i32* %t1, align 4, !dbg !129
  %shr179 = lshr i32 %88, 24, !dbg !129
  %conv180 = trunc i32 %shr179 to i8, !dbg !129
  %conv181 = zext i8 %conv180 to i32, !dbg !129
  %and182 = and i32 %conv181, 255, !dbg !129
  %idxprom183 = sext i32 %and182 to i64, !dbg !129
  %arrayidx184 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom183, !dbg !129
  %89 = load i32, i32* %arrayidx184, align 4, !dbg !129
  %xor185 = xor i32 %xor178, %89, !dbg !129
  store i32 %xor185, i32* %t1, align 4, !dbg !129
  %90 = load i32, i32* %t0, align 4, !dbg !129
  %91 = load i32, i32* %t1, align 4, !dbg !129
  %add186 = add i32 %90, %91, !dbg !129
  store i32 %add186, i32* %t0, align 4, !dbg !129
  %92 = load i32, i32* %t0, align 4, !dbg !129
  %conv187 = trunc i32 %92 to i8, !dbg !129
  %conv188 = zext i8 %conv187 to i32, !dbg !129
  %and189 = and i32 %conv188, 255, !dbg !129
  %idxprom190 = sext i32 %and189 to i64, !dbg !129
  %arrayidx191 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom190, !dbg !129
  %93 = load i32, i32* %arrayidx191, align 4, !dbg !129
  %94 = load i32, i32* %t0, align 4, !dbg !129
  %shr192 = lshr i32 %94, 8, !dbg !129
  %conv193 = trunc i32 %shr192 to i8, !dbg !129
  %conv194 = zext i8 %conv193 to i32, !dbg !129
  %and195 = and i32 %conv194, 255, !dbg !129
  %idxprom196 = sext i32 %and195 to i64, !dbg !129
  %arrayidx197 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom196, !dbg !129
  %95 = load i32, i32* %arrayidx197, align 4, !dbg !129
  %xor198 = xor i32 %93, %95, !dbg !129
  %96 = load i32, i32* %t0, align 4, !dbg !129
  %shr199 = lshr i32 %96, 16, !dbg !129
  %conv200 = trunc i32 %shr199 to i8, !dbg !129
  %conv201 = zext i8 %conv200 to i32, !dbg !129
  %and202 = and i32 %conv201, 255, !dbg !129
  %idxprom203 = sext i32 %and202 to i64, !dbg !129
  %arrayidx204 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom203, !dbg !129
  %97 = load i32, i32* %arrayidx204, align 4, !dbg !129
  %xor205 = xor i32 %xor198, %97, !dbg !129
  %98 = load i32, i32* %t0, align 4, !dbg !129
  %shr206 = lshr i32 %98, 24, !dbg !129
  %conv207 = trunc i32 %shr206 to i8, !dbg !129
  %conv208 = zext i8 %conv207 to i32, !dbg !129
  %and209 = and i32 %conv208, 255, !dbg !129
  %idxprom210 = sext i32 %and209 to i64, !dbg !129
  %arrayidx211 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom210, !dbg !129
  %99 = load i32, i32* %arrayidx211, align 4, !dbg !129
  %xor212 = xor i32 %xor205, %99, !dbg !129
  store i32 %xor212, i32* %t0, align 4, !dbg !129
  %100 = load i32, i32* %t1, align 4, !dbg !129
  %101 = load i32, i32* %t0, align 4, !dbg !129
  %add213 = add i32 %100, %101, !dbg !129
  store i32 %add213, i32* %t1, align 4, !dbg !129
  %102 = load i32, i32* %t1, align 4, !dbg !129
  %conv214 = trunc i32 %102 to i8, !dbg !129
  %conv215 = zext i8 %conv214 to i32, !dbg !129
  %and216 = and i32 %conv215, 255, !dbg !129
  %idxprom217 = sext i32 %and216 to i64, !dbg !129
  %arrayidx218 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom217, !dbg !129
  %103 = load i32, i32* %arrayidx218, align 4, !dbg !129
  %104 = load i32, i32* %t1, align 4, !dbg !129
  %shr219 = lshr i32 %104, 8, !dbg !129
  %conv220 = trunc i32 %shr219 to i8, !dbg !129
  %conv221 = zext i8 %conv220 to i32, !dbg !129
  %and222 = and i32 %conv221, 255, !dbg !129
  %idxprom223 = sext i32 %and222 to i64, !dbg !129
  %arrayidx224 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom223, !dbg !129
  %105 = load i32, i32* %arrayidx224, align 4, !dbg !129
  %xor225 = xor i32 %103, %105, !dbg !129
  %106 = load i32, i32* %t1, align 4, !dbg !129
  %shr226 = lshr i32 %106, 16, !dbg !129
  %conv227 = trunc i32 %shr226 to i8, !dbg !129
  %conv228 = zext i8 %conv227 to i32, !dbg !129
  %and229 = and i32 %conv228, 255, !dbg !129
  %idxprom230 = sext i32 %and229 to i64, !dbg !129
  %arrayidx231 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom230, !dbg !129
  %107 = load i32, i32* %arrayidx231, align 4, !dbg !129
  %xor232 = xor i32 %xor225, %107, !dbg !129
  %108 = load i32, i32* %t1, align 4, !dbg !129
  %shr233 = lshr i32 %108, 24, !dbg !129
  %conv234 = trunc i32 %shr233 to i8, !dbg !129
  %conv235 = zext i8 %conv234 to i32, !dbg !129
  %and236 = and i32 %conv235, 255, !dbg !129
  %idxprom237 = sext i32 %and236 to i64, !dbg !129
  %arrayidx238 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom237, !dbg !129
  %109 = load i32, i32* %arrayidx238, align 4, !dbg !129
  %xor239 = xor i32 %xor232, %109, !dbg !129
  store i32 %xor239, i32* %t1, align 4, !dbg !129
  %110 = load i32, i32* %t0, align 4, !dbg !129
  %111 = load i32, i32* %t1, align 4, !dbg !129
  %add240 = add i32 %110, %111, !dbg !129
  store i32 %add240, i32* %t0, align 4, !dbg !129
  %112 = load i32, i32* %t0, align 4, !dbg !129
  %113 = load i32, i32* %x3, align 4, !dbg !129
  %xor241 = xor i32 %113, %112, !dbg !129
  store i32 %xor241, i32* %x3, align 4, !dbg !129
  %114 = load i32, i32* %t1, align 4, !dbg !129
  %115 = load i32, i32* %x4, align 4, !dbg !129
  %xor242 = xor i32 %115, %114, !dbg !129
  store i32 %xor242, i32* %x4, align 4, !dbg !129
  %116 = load i32, i32* %x3, align 4, !dbg !130
  %117 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !130
  %data243 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %117, i32 0, i32 0, !dbg !130
  %arrayidx244 = getelementptr inbounds [32 x i32], [32 x i32]* %data243, i64 0, i64 4, !dbg !130
  %118 = load i32, i32* %arrayidx244, align 4, !dbg !130
  %xor245 = xor i32 %116, %118, !dbg !130
  store i32 %xor245, i32* %t0, align 4, !dbg !130
  %119 = load i32, i32* %x4, align 4, !dbg !130
  %120 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !130
  %data246 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %120, i32 0, i32 0, !dbg !130
  %arrayidx247 = getelementptr inbounds [32 x i32], [32 x i32]* %data246, i64 0, i64 5, !dbg !130
  %121 = load i32, i32* %arrayidx247, align 4, !dbg !130
  %xor248 = xor i32 %119, %121, !dbg !130
  store i32 %xor248, i32* %t1, align 4, !dbg !130
  %122 = load i32, i32* %t0, align 4, !dbg !130
  %123 = load i32, i32* %t1, align 4, !dbg !130
  %xor249 = xor i32 %123, %122, !dbg !130
  store i32 %xor249, i32* %t1, align 4, !dbg !130
  %124 = load i32, i32* %t1, align 4, !dbg !130
  %conv250 = trunc i32 %124 to i8, !dbg !130
  %conv251 = zext i8 %conv250 to i32, !dbg !130
  %and252 = and i32 %conv251, 255, !dbg !130
  %idxprom253 = sext i32 %and252 to i64, !dbg !130
  %arrayidx254 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom253, !dbg !130
  %125 = load i32, i32* %arrayidx254, align 4, !dbg !130
  %126 = load i32, i32* %t1, align 4, !dbg !130
  %shr255 = lshr i32 %126, 8, !dbg !130
  %conv256 = trunc i32 %shr255 to i8, !dbg !130
  %conv257 = zext i8 %conv256 to i32, !dbg !130
  %and258 = and i32 %conv257, 255, !dbg !130
  %idxprom259 = sext i32 %and258 to i64, !dbg !130
  %arrayidx260 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom259, !dbg !130
  %127 = load i32, i32* %arrayidx260, align 4, !dbg !130
  %xor261 = xor i32 %125, %127, !dbg !130
  %128 = load i32, i32* %t1, align 4, !dbg !130
  %shr262 = lshr i32 %128, 16, !dbg !130
  %conv263 = trunc i32 %shr262 to i8, !dbg !130
  %conv264 = zext i8 %conv263 to i32, !dbg !130
  %and265 = and i32 %conv264, 255, !dbg !130
  %idxprom266 = sext i32 %and265 to i64, !dbg !130
  %arrayidx267 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom266, !dbg !130
  %129 = load i32, i32* %arrayidx267, align 4, !dbg !130
  %xor268 = xor i32 %xor261, %129, !dbg !130
  %130 = load i32, i32* %t1, align 4, !dbg !130
  %shr269 = lshr i32 %130, 24, !dbg !130
  %conv270 = trunc i32 %shr269 to i8, !dbg !130
  %conv271 = zext i8 %conv270 to i32, !dbg !130
  %and272 = and i32 %conv271, 255, !dbg !130
  %idxprom273 = sext i32 %and272 to i64, !dbg !130
  %arrayidx274 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom273, !dbg !130
  %131 = load i32, i32* %arrayidx274, align 4, !dbg !130
  %xor275 = xor i32 %xor268, %131, !dbg !130
  store i32 %xor275, i32* %t1, align 4, !dbg !130
  %132 = load i32, i32* %t0, align 4, !dbg !130
  %133 = load i32, i32* %t1, align 4, !dbg !130
  %add276 = add i32 %132, %133, !dbg !130
  store i32 %add276, i32* %t0, align 4, !dbg !130
  %134 = load i32, i32* %t0, align 4, !dbg !130
  %conv277 = trunc i32 %134 to i8, !dbg !130
  %conv278 = zext i8 %conv277 to i32, !dbg !130
  %and279 = and i32 %conv278, 255, !dbg !130
  %idxprom280 = sext i32 %and279 to i64, !dbg !130
  %arrayidx281 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom280, !dbg !130
  %135 = load i32, i32* %arrayidx281, align 4, !dbg !130
  %136 = load i32, i32* %t0, align 4, !dbg !130
  %shr282 = lshr i32 %136, 8, !dbg !130
  %conv283 = trunc i32 %shr282 to i8, !dbg !130
  %conv284 = zext i8 %conv283 to i32, !dbg !130
  %and285 = and i32 %conv284, 255, !dbg !130
  %idxprom286 = sext i32 %and285 to i64, !dbg !130
  %arrayidx287 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom286, !dbg !130
  %137 = load i32, i32* %arrayidx287, align 4, !dbg !130
  %xor288 = xor i32 %135, %137, !dbg !130
  %138 = load i32, i32* %t0, align 4, !dbg !130
  %shr289 = lshr i32 %138, 16, !dbg !130
  %conv290 = trunc i32 %shr289 to i8, !dbg !130
  %conv291 = zext i8 %conv290 to i32, !dbg !130
  %and292 = and i32 %conv291, 255, !dbg !130
  %idxprom293 = sext i32 %and292 to i64, !dbg !130
  %arrayidx294 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom293, !dbg !130
  %139 = load i32, i32* %arrayidx294, align 4, !dbg !130
  %xor295 = xor i32 %xor288, %139, !dbg !130
  %140 = load i32, i32* %t0, align 4, !dbg !130
  %shr296 = lshr i32 %140, 24, !dbg !130
  %conv297 = trunc i32 %shr296 to i8, !dbg !130
  %conv298 = zext i8 %conv297 to i32, !dbg !130
  %and299 = and i32 %conv298, 255, !dbg !130
  %idxprom300 = sext i32 %and299 to i64, !dbg !130
  %arrayidx301 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom300, !dbg !130
  %141 = load i32, i32* %arrayidx301, align 4, !dbg !130
  %xor302 = xor i32 %xor295, %141, !dbg !130
  store i32 %xor302, i32* %t0, align 4, !dbg !130
  %142 = load i32, i32* %t1, align 4, !dbg !130
  %143 = load i32, i32* %t0, align 4, !dbg !130
  %add303 = add i32 %142, %143, !dbg !130
  store i32 %add303, i32* %t1, align 4, !dbg !130
  %144 = load i32, i32* %t1, align 4, !dbg !130
  %conv304 = trunc i32 %144 to i8, !dbg !130
  %conv305 = zext i8 %conv304 to i32, !dbg !130
  %and306 = and i32 %conv305, 255, !dbg !130
  %idxprom307 = sext i32 %and306 to i64, !dbg !130
  %arrayidx308 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom307, !dbg !130
  %145 = load i32, i32* %arrayidx308, align 4, !dbg !130
  %146 = load i32, i32* %t1, align 4, !dbg !130
  %shr309 = lshr i32 %146, 8, !dbg !130
  %conv310 = trunc i32 %shr309 to i8, !dbg !130
  %conv311 = zext i8 %conv310 to i32, !dbg !130
  %and312 = and i32 %conv311, 255, !dbg !130
  %idxprom313 = sext i32 %and312 to i64, !dbg !130
  %arrayidx314 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom313, !dbg !130
  %147 = load i32, i32* %arrayidx314, align 4, !dbg !130
  %xor315 = xor i32 %145, %147, !dbg !130
  %148 = load i32, i32* %t1, align 4, !dbg !130
  %shr316 = lshr i32 %148, 16, !dbg !130
  %conv317 = trunc i32 %shr316 to i8, !dbg !130
  %conv318 = zext i8 %conv317 to i32, !dbg !130
  %and319 = and i32 %conv318, 255, !dbg !130
  %idxprom320 = sext i32 %and319 to i64, !dbg !130
  %arrayidx321 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom320, !dbg !130
  %149 = load i32, i32* %arrayidx321, align 4, !dbg !130
  %xor322 = xor i32 %xor315, %149, !dbg !130
  %150 = load i32, i32* %t1, align 4, !dbg !130
  %shr323 = lshr i32 %150, 24, !dbg !130
  %conv324 = trunc i32 %shr323 to i8, !dbg !130
  %conv325 = zext i8 %conv324 to i32, !dbg !130
  %and326 = and i32 %conv325, 255, !dbg !130
  %idxprom327 = sext i32 %and326 to i64, !dbg !130
  %arrayidx328 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom327, !dbg !130
  %151 = load i32, i32* %arrayidx328, align 4, !dbg !130
  %xor329 = xor i32 %xor322, %151, !dbg !130
  store i32 %xor329, i32* %t1, align 4, !dbg !130
  %152 = load i32, i32* %t0, align 4, !dbg !130
  %153 = load i32, i32* %t1, align 4, !dbg !130
  %add330 = add i32 %152, %153, !dbg !130
  store i32 %add330, i32* %t0, align 4, !dbg !130
  %154 = load i32, i32* %t0, align 4, !dbg !130
  %155 = load i32, i32* %x1, align 4, !dbg !130
  %xor331 = xor i32 %155, %154, !dbg !130
  store i32 %xor331, i32* %x1, align 4, !dbg !130
  %156 = load i32, i32* %t1, align 4, !dbg !130
  %157 = load i32, i32* %x2, align 4, !dbg !130
  %xor332 = xor i32 %157, %156, !dbg !130
  store i32 %xor332, i32* %x2, align 4, !dbg !130
  %158 = load i32, i32* %x1, align 4, !dbg !131
  %159 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !131
  %data333 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %159, i32 0, i32 0, !dbg !131
  %arrayidx334 = getelementptr inbounds [32 x i32], [32 x i32]* %data333, i64 0, i64 6, !dbg !131
  %160 = load i32, i32* %arrayidx334, align 4, !dbg !131
  %xor335 = xor i32 %158, %160, !dbg !131
  store i32 %xor335, i32* %t0, align 4, !dbg !131
  %161 = load i32, i32* %x2, align 4, !dbg !131
  %162 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !131
  %data336 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %162, i32 0, i32 0, !dbg !131
  %arrayidx337 = getelementptr inbounds [32 x i32], [32 x i32]* %data336, i64 0, i64 7, !dbg !131
  %163 = load i32, i32* %arrayidx337, align 4, !dbg !131
  %xor338 = xor i32 %161, %163, !dbg !131
  store i32 %xor338, i32* %t1, align 4, !dbg !131
  %164 = load i32, i32* %t0, align 4, !dbg !131
  %165 = load i32, i32* %t1, align 4, !dbg !131
  %xor339 = xor i32 %165, %164, !dbg !131
  store i32 %xor339, i32* %t1, align 4, !dbg !131
  %166 = load i32, i32* %t1, align 4, !dbg !131
  %conv340 = trunc i32 %166 to i8, !dbg !131
  %conv341 = zext i8 %conv340 to i32, !dbg !131
  %and342 = and i32 %conv341, 255, !dbg !131
  %idxprom343 = sext i32 %and342 to i64, !dbg !131
  %arrayidx344 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom343, !dbg !131
  %167 = load i32, i32* %arrayidx344, align 4, !dbg !131
  %168 = load i32, i32* %t1, align 4, !dbg !131
  %shr345 = lshr i32 %168, 8, !dbg !131
  %conv346 = trunc i32 %shr345 to i8, !dbg !131
  %conv347 = zext i8 %conv346 to i32, !dbg !131
  %and348 = and i32 %conv347, 255, !dbg !131
  %idxprom349 = sext i32 %and348 to i64, !dbg !131
  %arrayidx350 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom349, !dbg !131
  %169 = load i32, i32* %arrayidx350, align 4, !dbg !131
  %xor351 = xor i32 %167, %169, !dbg !131
  %170 = load i32, i32* %t1, align 4, !dbg !131
  %shr352 = lshr i32 %170, 16, !dbg !131
  %conv353 = trunc i32 %shr352 to i8, !dbg !131
  %conv354 = zext i8 %conv353 to i32, !dbg !131
  %and355 = and i32 %conv354, 255, !dbg !131
  %idxprom356 = sext i32 %and355 to i64, !dbg !131
  %arrayidx357 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom356, !dbg !131
  %171 = load i32, i32* %arrayidx357, align 4, !dbg !131
  %xor358 = xor i32 %xor351, %171, !dbg !131
  %172 = load i32, i32* %t1, align 4, !dbg !131
  %shr359 = lshr i32 %172, 24, !dbg !131
  %conv360 = trunc i32 %shr359 to i8, !dbg !131
  %conv361 = zext i8 %conv360 to i32, !dbg !131
  %and362 = and i32 %conv361, 255, !dbg !131
  %idxprom363 = sext i32 %and362 to i64, !dbg !131
  %arrayidx364 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom363, !dbg !131
  %173 = load i32, i32* %arrayidx364, align 4, !dbg !131
  %xor365 = xor i32 %xor358, %173, !dbg !131
  store i32 %xor365, i32* %t1, align 4, !dbg !131
  %174 = load i32, i32* %t0, align 4, !dbg !131
  %175 = load i32, i32* %t1, align 4, !dbg !131
  %add366 = add i32 %174, %175, !dbg !131
  store i32 %add366, i32* %t0, align 4, !dbg !131
  %176 = load i32, i32* %t0, align 4, !dbg !131
  %conv367 = trunc i32 %176 to i8, !dbg !131
  %conv368 = zext i8 %conv367 to i32, !dbg !131
  %and369 = and i32 %conv368, 255, !dbg !131
  %idxprom370 = sext i32 %and369 to i64, !dbg !131
  %arrayidx371 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom370, !dbg !131
  %177 = load i32, i32* %arrayidx371, align 4, !dbg !131
  %178 = load i32, i32* %t0, align 4, !dbg !131
  %shr372 = lshr i32 %178, 8, !dbg !131
  %conv373 = trunc i32 %shr372 to i8, !dbg !131
  %conv374 = zext i8 %conv373 to i32, !dbg !131
  %and375 = and i32 %conv374, 255, !dbg !131
  %idxprom376 = sext i32 %and375 to i64, !dbg !131
  %arrayidx377 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom376, !dbg !131
  %179 = load i32, i32* %arrayidx377, align 4, !dbg !131
  %xor378 = xor i32 %177, %179, !dbg !131
  %180 = load i32, i32* %t0, align 4, !dbg !131
  %shr379 = lshr i32 %180, 16, !dbg !131
  %conv380 = trunc i32 %shr379 to i8, !dbg !131
  %conv381 = zext i8 %conv380 to i32, !dbg !131
  %and382 = and i32 %conv381, 255, !dbg !131
  %idxprom383 = sext i32 %and382 to i64, !dbg !131
  %arrayidx384 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom383, !dbg !131
  %181 = load i32, i32* %arrayidx384, align 4, !dbg !131
  %xor385 = xor i32 %xor378, %181, !dbg !131
  %182 = load i32, i32* %t0, align 4, !dbg !131
  %shr386 = lshr i32 %182, 24, !dbg !131
  %conv387 = trunc i32 %shr386 to i8, !dbg !131
  %conv388 = zext i8 %conv387 to i32, !dbg !131
  %and389 = and i32 %conv388, 255, !dbg !131
  %idxprom390 = sext i32 %and389 to i64, !dbg !131
  %arrayidx391 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom390, !dbg !131
  %183 = load i32, i32* %arrayidx391, align 4, !dbg !131
  %xor392 = xor i32 %xor385, %183, !dbg !131
  store i32 %xor392, i32* %t0, align 4, !dbg !131
  %184 = load i32, i32* %t1, align 4, !dbg !131
  %185 = load i32, i32* %t0, align 4, !dbg !131
  %add393 = add i32 %184, %185, !dbg !131
  store i32 %add393, i32* %t1, align 4, !dbg !131
  %186 = load i32, i32* %t1, align 4, !dbg !131
  %conv394 = trunc i32 %186 to i8, !dbg !131
  %conv395 = zext i8 %conv394 to i32, !dbg !131
  %and396 = and i32 %conv395, 255, !dbg !131
  %idxprom397 = sext i32 %and396 to i64, !dbg !131
  %arrayidx398 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom397, !dbg !131
  %187 = load i32, i32* %arrayidx398, align 4, !dbg !131
  %188 = load i32, i32* %t1, align 4, !dbg !131
  %shr399 = lshr i32 %188, 8, !dbg !131
  %conv400 = trunc i32 %shr399 to i8, !dbg !131
  %conv401 = zext i8 %conv400 to i32, !dbg !131
  %and402 = and i32 %conv401, 255, !dbg !131
  %idxprom403 = sext i32 %and402 to i64, !dbg !131
  %arrayidx404 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom403, !dbg !131
  %189 = load i32, i32* %arrayidx404, align 4, !dbg !131
  %xor405 = xor i32 %187, %189, !dbg !131
  %190 = load i32, i32* %t1, align 4, !dbg !131
  %shr406 = lshr i32 %190, 16, !dbg !131
  %conv407 = trunc i32 %shr406 to i8, !dbg !131
  %conv408 = zext i8 %conv407 to i32, !dbg !131
  %and409 = and i32 %conv408, 255, !dbg !131
  %idxprom410 = sext i32 %and409 to i64, !dbg !131
  %arrayidx411 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom410, !dbg !131
  %191 = load i32, i32* %arrayidx411, align 4, !dbg !131
  %xor412 = xor i32 %xor405, %191, !dbg !131
  %192 = load i32, i32* %t1, align 4, !dbg !131
  %shr413 = lshr i32 %192, 24, !dbg !131
  %conv414 = trunc i32 %shr413 to i8, !dbg !131
  %conv415 = zext i8 %conv414 to i32, !dbg !131
  %and416 = and i32 %conv415, 255, !dbg !131
  %idxprom417 = sext i32 %and416 to i64, !dbg !131
  %arrayidx418 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom417, !dbg !131
  %193 = load i32, i32* %arrayidx418, align 4, !dbg !131
  %xor419 = xor i32 %xor412, %193, !dbg !131
  store i32 %xor419, i32* %t1, align 4, !dbg !131
  %194 = load i32, i32* %t0, align 4, !dbg !131
  %195 = load i32, i32* %t1, align 4, !dbg !131
  %add420 = add i32 %194, %195, !dbg !131
  store i32 %add420, i32* %t0, align 4, !dbg !131
  %196 = load i32, i32* %t0, align 4, !dbg !131
  %197 = load i32, i32* %x3, align 4, !dbg !131
  %xor421 = xor i32 %197, %196, !dbg !131
  store i32 %xor421, i32* %x3, align 4, !dbg !131
  %198 = load i32, i32* %t1, align 4, !dbg !131
  %199 = load i32, i32* %x4, align 4, !dbg !131
  %xor422 = xor i32 %199, %198, !dbg !131
  store i32 %xor422, i32* %x4, align 4, !dbg !131
  %200 = load i32, i32* %x3, align 4, !dbg !132
  %201 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !132
  %data423 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %201, i32 0, i32 0, !dbg !132
  %arrayidx424 = getelementptr inbounds [32 x i32], [32 x i32]* %data423, i64 0, i64 8, !dbg !132
  %202 = load i32, i32* %arrayidx424, align 4, !dbg !132
  %xor425 = xor i32 %200, %202, !dbg !132
  store i32 %xor425, i32* %t0, align 4, !dbg !132
  %203 = load i32, i32* %x4, align 4, !dbg !132
  %204 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !132
  %data426 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %204, i32 0, i32 0, !dbg !132
  %arrayidx427 = getelementptr inbounds [32 x i32], [32 x i32]* %data426, i64 0, i64 9, !dbg !132
  %205 = load i32, i32* %arrayidx427, align 4, !dbg !132
  %xor428 = xor i32 %203, %205, !dbg !132
  store i32 %xor428, i32* %t1, align 4, !dbg !132
  %206 = load i32, i32* %t0, align 4, !dbg !132
  %207 = load i32, i32* %t1, align 4, !dbg !132
  %xor429 = xor i32 %207, %206, !dbg !132
  store i32 %xor429, i32* %t1, align 4, !dbg !132
  %208 = load i32, i32* %t1, align 4, !dbg !132
  %conv430 = trunc i32 %208 to i8, !dbg !132
  %conv431 = zext i8 %conv430 to i32, !dbg !132
  %and432 = and i32 %conv431, 255, !dbg !132
  %idxprom433 = sext i32 %and432 to i64, !dbg !132
  %arrayidx434 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom433, !dbg !132
  %209 = load i32, i32* %arrayidx434, align 4, !dbg !132
  %210 = load i32, i32* %t1, align 4, !dbg !132
  %shr435 = lshr i32 %210, 8, !dbg !132
  %conv436 = trunc i32 %shr435 to i8, !dbg !132
  %conv437 = zext i8 %conv436 to i32, !dbg !132
  %and438 = and i32 %conv437, 255, !dbg !132
  %idxprom439 = sext i32 %and438 to i64, !dbg !132
  %arrayidx440 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom439, !dbg !132
  %211 = load i32, i32* %arrayidx440, align 4, !dbg !132
  %xor441 = xor i32 %209, %211, !dbg !132
  %212 = load i32, i32* %t1, align 4, !dbg !132
  %shr442 = lshr i32 %212, 16, !dbg !132
  %conv443 = trunc i32 %shr442 to i8, !dbg !132
  %conv444 = zext i8 %conv443 to i32, !dbg !132
  %and445 = and i32 %conv444, 255, !dbg !132
  %idxprom446 = sext i32 %and445 to i64, !dbg !132
  %arrayidx447 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom446, !dbg !132
  %213 = load i32, i32* %arrayidx447, align 4, !dbg !132
  %xor448 = xor i32 %xor441, %213, !dbg !132
  %214 = load i32, i32* %t1, align 4, !dbg !132
  %shr449 = lshr i32 %214, 24, !dbg !132
  %conv450 = trunc i32 %shr449 to i8, !dbg !132
  %conv451 = zext i8 %conv450 to i32, !dbg !132
  %and452 = and i32 %conv451, 255, !dbg !132
  %idxprom453 = sext i32 %and452 to i64, !dbg !132
  %arrayidx454 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom453, !dbg !132
  %215 = load i32, i32* %arrayidx454, align 4, !dbg !132
  %xor455 = xor i32 %xor448, %215, !dbg !132
  store i32 %xor455, i32* %t1, align 4, !dbg !132
  %216 = load i32, i32* %t0, align 4, !dbg !132
  %217 = load i32, i32* %t1, align 4, !dbg !132
  %add456 = add i32 %216, %217, !dbg !132
  store i32 %add456, i32* %t0, align 4, !dbg !132
  %218 = load i32, i32* %t0, align 4, !dbg !132
  %conv457 = trunc i32 %218 to i8, !dbg !132
  %conv458 = zext i8 %conv457 to i32, !dbg !132
  %and459 = and i32 %conv458, 255, !dbg !132
  %idxprom460 = sext i32 %and459 to i64, !dbg !132
  %arrayidx461 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom460, !dbg !132
  %219 = load i32, i32* %arrayidx461, align 4, !dbg !132
  %220 = load i32, i32* %t0, align 4, !dbg !132
  %shr462 = lshr i32 %220, 8, !dbg !132
  %conv463 = trunc i32 %shr462 to i8, !dbg !132
  %conv464 = zext i8 %conv463 to i32, !dbg !132
  %and465 = and i32 %conv464, 255, !dbg !132
  %idxprom466 = sext i32 %and465 to i64, !dbg !132
  %arrayidx467 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom466, !dbg !132
  %221 = load i32, i32* %arrayidx467, align 4, !dbg !132
  %xor468 = xor i32 %219, %221, !dbg !132
  %222 = load i32, i32* %t0, align 4, !dbg !132
  %shr469 = lshr i32 %222, 16, !dbg !132
  %conv470 = trunc i32 %shr469 to i8, !dbg !132
  %conv471 = zext i8 %conv470 to i32, !dbg !132
  %and472 = and i32 %conv471, 255, !dbg !132
  %idxprom473 = sext i32 %and472 to i64, !dbg !132
  %arrayidx474 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom473, !dbg !132
  %223 = load i32, i32* %arrayidx474, align 4, !dbg !132
  %xor475 = xor i32 %xor468, %223, !dbg !132
  %224 = load i32, i32* %t0, align 4, !dbg !132
  %shr476 = lshr i32 %224, 24, !dbg !132
  %conv477 = trunc i32 %shr476 to i8, !dbg !132
  %conv478 = zext i8 %conv477 to i32, !dbg !132
  %and479 = and i32 %conv478, 255, !dbg !132
  %idxprom480 = sext i32 %and479 to i64, !dbg !132
  %arrayidx481 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom480, !dbg !132
  %225 = load i32, i32* %arrayidx481, align 4, !dbg !132
  %xor482 = xor i32 %xor475, %225, !dbg !132
  store i32 %xor482, i32* %t0, align 4, !dbg !132
  %226 = load i32, i32* %t1, align 4, !dbg !132
  %227 = load i32, i32* %t0, align 4, !dbg !132
  %add483 = add i32 %226, %227, !dbg !132
  store i32 %add483, i32* %t1, align 4, !dbg !132
  %228 = load i32, i32* %t1, align 4, !dbg !132
  %conv484 = trunc i32 %228 to i8, !dbg !132
  %conv485 = zext i8 %conv484 to i32, !dbg !132
  %and486 = and i32 %conv485, 255, !dbg !132
  %idxprom487 = sext i32 %and486 to i64, !dbg !132
  %arrayidx488 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom487, !dbg !132
  %229 = load i32, i32* %arrayidx488, align 4, !dbg !132
  %230 = load i32, i32* %t1, align 4, !dbg !132
  %shr489 = lshr i32 %230, 8, !dbg !132
  %conv490 = trunc i32 %shr489 to i8, !dbg !132
  %conv491 = zext i8 %conv490 to i32, !dbg !132
  %and492 = and i32 %conv491, 255, !dbg !132
  %idxprom493 = sext i32 %and492 to i64, !dbg !132
  %arrayidx494 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom493, !dbg !132
  %231 = load i32, i32* %arrayidx494, align 4, !dbg !132
  %xor495 = xor i32 %229, %231, !dbg !132
  %232 = load i32, i32* %t1, align 4, !dbg !132
  %shr496 = lshr i32 %232, 16, !dbg !132
  %conv497 = trunc i32 %shr496 to i8, !dbg !132
  %conv498 = zext i8 %conv497 to i32, !dbg !132
  %and499 = and i32 %conv498, 255, !dbg !132
  %idxprom500 = sext i32 %and499 to i64, !dbg !132
  %arrayidx501 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom500, !dbg !132
  %233 = load i32, i32* %arrayidx501, align 4, !dbg !132
  %xor502 = xor i32 %xor495, %233, !dbg !132
  %234 = load i32, i32* %t1, align 4, !dbg !132
  %shr503 = lshr i32 %234, 24, !dbg !132
  %conv504 = trunc i32 %shr503 to i8, !dbg !132
  %conv505 = zext i8 %conv504 to i32, !dbg !132
  %and506 = and i32 %conv505, 255, !dbg !132
  %idxprom507 = sext i32 %and506 to i64, !dbg !132
  %arrayidx508 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom507, !dbg !132
  %235 = load i32, i32* %arrayidx508, align 4, !dbg !132
  %xor509 = xor i32 %xor502, %235, !dbg !132
  store i32 %xor509, i32* %t1, align 4, !dbg !132
  %236 = load i32, i32* %t0, align 4, !dbg !132
  %237 = load i32, i32* %t1, align 4, !dbg !132
  %add510 = add i32 %236, %237, !dbg !132
  store i32 %add510, i32* %t0, align 4, !dbg !132
  %238 = load i32, i32* %t0, align 4, !dbg !132
  %239 = load i32, i32* %x1, align 4, !dbg !132
  %xor511 = xor i32 %239, %238, !dbg !132
  store i32 %xor511, i32* %x1, align 4, !dbg !132
  %240 = load i32, i32* %t1, align 4, !dbg !132
  %241 = load i32, i32* %x2, align 4, !dbg !132
  %xor512 = xor i32 %241, %240, !dbg !132
  store i32 %xor512, i32* %x2, align 4, !dbg !132
  %242 = load i32, i32* %x1, align 4, !dbg !133
  %243 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !133
  %data513 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %243, i32 0, i32 0, !dbg !133
  %arrayidx514 = getelementptr inbounds [32 x i32], [32 x i32]* %data513, i64 0, i64 10, !dbg !133
  %244 = load i32, i32* %arrayidx514, align 4, !dbg !133
  %xor515 = xor i32 %242, %244, !dbg !133
  store i32 %xor515, i32* %t0, align 4, !dbg !133
  %245 = load i32, i32* %x2, align 4, !dbg !133
  %246 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !133
  %data516 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %246, i32 0, i32 0, !dbg !133
  %arrayidx517 = getelementptr inbounds [32 x i32], [32 x i32]* %data516, i64 0, i64 11, !dbg !133
  %247 = load i32, i32* %arrayidx517, align 4, !dbg !133
  %xor518 = xor i32 %245, %247, !dbg !133
  store i32 %xor518, i32* %t1, align 4, !dbg !133
  %248 = load i32, i32* %t0, align 4, !dbg !133
  %249 = load i32, i32* %t1, align 4, !dbg !133
  %xor519 = xor i32 %249, %248, !dbg !133
  store i32 %xor519, i32* %t1, align 4, !dbg !133
  %250 = load i32, i32* %t1, align 4, !dbg !133
  %conv520 = trunc i32 %250 to i8, !dbg !133
  %conv521 = zext i8 %conv520 to i32, !dbg !133
  %and522 = and i32 %conv521, 255, !dbg !133
  %idxprom523 = sext i32 %and522 to i64, !dbg !133
  %arrayidx524 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom523, !dbg !133
  %251 = load i32, i32* %arrayidx524, align 4, !dbg !133
  %252 = load i32, i32* %t1, align 4, !dbg !133
  %shr525 = lshr i32 %252, 8, !dbg !133
  %conv526 = trunc i32 %shr525 to i8, !dbg !133
  %conv527 = zext i8 %conv526 to i32, !dbg !133
  %and528 = and i32 %conv527, 255, !dbg !133
  %idxprom529 = sext i32 %and528 to i64, !dbg !133
  %arrayidx530 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom529, !dbg !133
  %253 = load i32, i32* %arrayidx530, align 4, !dbg !133
  %xor531 = xor i32 %251, %253, !dbg !133
  %254 = load i32, i32* %t1, align 4, !dbg !133
  %shr532 = lshr i32 %254, 16, !dbg !133
  %conv533 = trunc i32 %shr532 to i8, !dbg !133
  %conv534 = zext i8 %conv533 to i32, !dbg !133
  %and535 = and i32 %conv534, 255, !dbg !133
  %idxprom536 = sext i32 %and535 to i64, !dbg !133
  %arrayidx537 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom536, !dbg !133
  %255 = load i32, i32* %arrayidx537, align 4, !dbg !133
  %xor538 = xor i32 %xor531, %255, !dbg !133
  %256 = load i32, i32* %t1, align 4, !dbg !133
  %shr539 = lshr i32 %256, 24, !dbg !133
  %conv540 = trunc i32 %shr539 to i8, !dbg !133
  %conv541 = zext i8 %conv540 to i32, !dbg !133
  %and542 = and i32 %conv541, 255, !dbg !133
  %idxprom543 = sext i32 %and542 to i64, !dbg !133
  %arrayidx544 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom543, !dbg !133
  %257 = load i32, i32* %arrayidx544, align 4, !dbg !133
  %xor545 = xor i32 %xor538, %257, !dbg !133
  store i32 %xor545, i32* %t1, align 4, !dbg !133
  %258 = load i32, i32* %t0, align 4, !dbg !133
  %259 = load i32, i32* %t1, align 4, !dbg !133
  %add546 = add i32 %258, %259, !dbg !133
  store i32 %add546, i32* %t0, align 4, !dbg !133
  %260 = load i32, i32* %t0, align 4, !dbg !133
  %conv547 = trunc i32 %260 to i8, !dbg !133
  %conv548 = zext i8 %conv547 to i32, !dbg !133
  %and549 = and i32 %conv548, 255, !dbg !133
  %idxprom550 = sext i32 %and549 to i64, !dbg !133
  %arrayidx551 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom550, !dbg !133
  %261 = load i32, i32* %arrayidx551, align 4, !dbg !133
  %262 = load i32, i32* %t0, align 4, !dbg !133
  %shr552 = lshr i32 %262, 8, !dbg !133
  %conv553 = trunc i32 %shr552 to i8, !dbg !133
  %conv554 = zext i8 %conv553 to i32, !dbg !133
  %and555 = and i32 %conv554, 255, !dbg !133
  %idxprom556 = sext i32 %and555 to i64, !dbg !133
  %arrayidx557 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom556, !dbg !133
  %263 = load i32, i32* %arrayidx557, align 4, !dbg !133
  %xor558 = xor i32 %261, %263, !dbg !133
  %264 = load i32, i32* %t0, align 4, !dbg !133
  %shr559 = lshr i32 %264, 16, !dbg !133
  %conv560 = trunc i32 %shr559 to i8, !dbg !133
  %conv561 = zext i8 %conv560 to i32, !dbg !133
  %and562 = and i32 %conv561, 255, !dbg !133
  %idxprom563 = sext i32 %and562 to i64, !dbg !133
  %arrayidx564 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom563, !dbg !133
  %265 = load i32, i32* %arrayidx564, align 4, !dbg !133
  %xor565 = xor i32 %xor558, %265, !dbg !133
  %266 = load i32, i32* %t0, align 4, !dbg !133
  %shr566 = lshr i32 %266, 24, !dbg !133
  %conv567 = trunc i32 %shr566 to i8, !dbg !133
  %conv568 = zext i8 %conv567 to i32, !dbg !133
  %and569 = and i32 %conv568, 255, !dbg !133
  %idxprom570 = sext i32 %and569 to i64, !dbg !133
  %arrayidx571 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom570, !dbg !133
  %267 = load i32, i32* %arrayidx571, align 4, !dbg !133
  %xor572 = xor i32 %xor565, %267, !dbg !133
  store i32 %xor572, i32* %t0, align 4, !dbg !133
  %268 = load i32, i32* %t1, align 4, !dbg !133
  %269 = load i32, i32* %t0, align 4, !dbg !133
  %add573 = add i32 %268, %269, !dbg !133
  store i32 %add573, i32* %t1, align 4, !dbg !133
  %270 = load i32, i32* %t1, align 4, !dbg !133
  %conv574 = trunc i32 %270 to i8, !dbg !133
  %conv575 = zext i8 %conv574 to i32, !dbg !133
  %and576 = and i32 %conv575, 255, !dbg !133
  %idxprom577 = sext i32 %and576 to i64, !dbg !133
  %arrayidx578 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom577, !dbg !133
  %271 = load i32, i32* %arrayidx578, align 4, !dbg !133
  %272 = load i32, i32* %t1, align 4, !dbg !133
  %shr579 = lshr i32 %272, 8, !dbg !133
  %conv580 = trunc i32 %shr579 to i8, !dbg !133
  %conv581 = zext i8 %conv580 to i32, !dbg !133
  %and582 = and i32 %conv581, 255, !dbg !133
  %idxprom583 = sext i32 %and582 to i64, !dbg !133
  %arrayidx584 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom583, !dbg !133
  %273 = load i32, i32* %arrayidx584, align 4, !dbg !133
  %xor585 = xor i32 %271, %273, !dbg !133
  %274 = load i32, i32* %t1, align 4, !dbg !133
  %shr586 = lshr i32 %274, 16, !dbg !133
  %conv587 = trunc i32 %shr586 to i8, !dbg !133
  %conv588 = zext i8 %conv587 to i32, !dbg !133
  %and589 = and i32 %conv588, 255, !dbg !133
  %idxprom590 = sext i32 %and589 to i64, !dbg !133
  %arrayidx591 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom590, !dbg !133
  %275 = load i32, i32* %arrayidx591, align 4, !dbg !133
  %xor592 = xor i32 %xor585, %275, !dbg !133
  %276 = load i32, i32* %t1, align 4, !dbg !133
  %shr593 = lshr i32 %276, 24, !dbg !133
  %conv594 = trunc i32 %shr593 to i8, !dbg !133
  %conv595 = zext i8 %conv594 to i32, !dbg !133
  %and596 = and i32 %conv595, 255, !dbg !133
  %idxprom597 = sext i32 %and596 to i64, !dbg !133
  %arrayidx598 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom597, !dbg !133
  %277 = load i32, i32* %arrayidx598, align 4, !dbg !133
  %xor599 = xor i32 %xor592, %277, !dbg !133
  store i32 %xor599, i32* %t1, align 4, !dbg !133
  %278 = load i32, i32* %t0, align 4, !dbg !133
  %279 = load i32, i32* %t1, align 4, !dbg !133
  %add600 = add i32 %278, %279, !dbg !133
  store i32 %add600, i32* %t0, align 4, !dbg !133
  %280 = load i32, i32* %t0, align 4, !dbg !133
  %281 = load i32, i32* %x3, align 4, !dbg !133
  %xor601 = xor i32 %281, %280, !dbg !133
  store i32 %xor601, i32* %x3, align 4, !dbg !133
  %282 = load i32, i32* %t1, align 4, !dbg !133
  %283 = load i32, i32* %x4, align 4, !dbg !133
  %xor602 = xor i32 %283, %282, !dbg !133
  store i32 %xor602, i32* %x4, align 4, !dbg !133
  %284 = load i32, i32* %x3, align 4, !dbg !134
  %285 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !134
  %data603 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %285, i32 0, i32 0, !dbg !134
  %arrayidx604 = getelementptr inbounds [32 x i32], [32 x i32]* %data603, i64 0, i64 12, !dbg !134
  %286 = load i32, i32* %arrayidx604, align 4, !dbg !134
  %xor605 = xor i32 %284, %286, !dbg !134
  store i32 %xor605, i32* %t0, align 4, !dbg !134
  %287 = load i32, i32* %x4, align 4, !dbg !134
  %288 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !134
  %data606 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %288, i32 0, i32 0, !dbg !134
  %arrayidx607 = getelementptr inbounds [32 x i32], [32 x i32]* %data606, i64 0, i64 13, !dbg !134
  %289 = load i32, i32* %arrayidx607, align 4, !dbg !134
  %xor608 = xor i32 %287, %289, !dbg !134
  store i32 %xor608, i32* %t1, align 4, !dbg !134
  %290 = load i32, i32* %t0, align 4, !dbg !134
  %291 = load i32, i32* %t1, align 4, !dbg !134
  %xor609 = xor i32 %291, %290, !dbg !134
  store i32 %xor609, i32* %t1, align 4, !dbg !134
  %292 = load i32, i32* %t1, align 4, !dbg !134
  %conv610 = trunc i32 %292 to i8, !dbg !134
  %conv611 = zext i8 %conv610 to i32, !dbg !134
  %and612 = and i32 %conv611, 255, !dbg !134
  %idxprom613 = sext i32 %and612 to i64, !dbg !134
  %arrayidx614 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom613, !dbg !134
  %293 = load i32, i32* %arrayidx614, align 4, !dbg !134
  %294 = load i32, i32* %t1, align 4, !dbg !134
  %shr615 = lshr i32 %294, 8, !dbg !134
  %conv616 = trunc i32 %shr615 to i8, !dbg !134
  %conv617 = zext i8 %conv616 to i32, !dbg !134
  %and618 = and i32 %conv617, 255, !dbg !134
  %idxprom619 = sext i32 %and618 to i64, !dbg !134
  %arrayidx620 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom619, !dbg !134
  %295 = load i32, i32* %arrayidx620, align 4, !dbg !134
  %xor621 = xor i32 %293, %295, !dbg !134
  %296 = load i32, i32* %t1, align 4, !dbg !134
  %shr622 = lshr i32 %296, 16, !dbg !134
  %conv623 = trunc i32 %shr622 to i8, !dbg !134
  %conv624 = zext i8 %conv623 to i32, !dbg !134
  %and625 = and i32 %conv624, 255, !dbg !134
  %idxprom626 = sext i32 %and625 to i64, !dbg !134
  %arrayidx627 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom626, !dbg !134
  %297 = load i32, i32* %arrayidx627, align 4, !dbg !134
  %xor628 = xor i32 %xor621, %297, !dbg !134
  %298 = load i32, i32* %t1, align 4, !dbg !134
  %shr629 = lshr i32 %298, 24, !dbg !134
  %conv630 = trunc i32 %shr629 to i8, !dbg !134
  %conv631 = zext i8 %conv630 to i32, !dbg !134
  %and632 = and i32 %conv631, 255, !dbg !134
  %idxprom633 = sext i32 %and632 to i64, !dbg !134
  %arrayidx634 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom633, !dbg !134
  %299 = load i32, i32* %arrayidx634, align 4, !dbg !134
  %xor635 = xor i32 %xor628, %299, !dbg !134
  store i32 %xor635, i32* %t1, align 4, !dbg !134
  %300 = load i32, i32* %t0, align 4, !dbg !134
  %301 = load i32, i32* %t1, align 4, !dbg !134
  %add636 = add i32 %300, %301, !dbg !134
  store i32 %add636, i32* %t0, align 4, !dbg !134
  %302 = load i32, i32* %t0, align 4, !dbg !134
  %conv637 = trunc i32 %302 to i8, !dbg !134
  %conv638 = zext i8 %conv637 to i32, !dbg !134
  %and639 = and i32 %conv638, 255, !dbg !134
  %idxprom640 = sext i32 %and639 to i64, !dbg !134
  %arrayidx641 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom640, !dbg !134
  %303 = load i32, i32* %arrayidx641, align 4, !dbg !134
  %304 = load i32, i32* %t0, align 4, !dbg !134
  %shr642 = lshr i32 %304, 8, !dbg !134
  %conv643 = trunc i32 %shr642 to i8, !dbg !134
  %conv644 = zext i8 %conv643 to i32, !dbg !134
  %and645 = and i32 %conv644, 255, !dbg !134
  %idxprom646 = sext i32 %and645 to i64, !dbg !134
  %arrayidx647 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom646, !dbg !134
  %305 = load i32, i32* %arrayidx647, align 4, !dbg !134
  %xor648 = xor i32 %303, %305, !dbg !134
  %306 = load i32, i32* %t0, align 4, !dbg !134
  %shr649 = lshr i32 %306, 16, !dbg !134
  %conv650 = trunc i32 %shr649 to i8, !dbg !134
  %conv651 = zext i8 %conv650 to i32, !dbg !134
  %and652 = and i32 %conv651, 255, !dbg !134
  %idxprom653 = sext i32 %and652 to i64, !dbg !134
  %arrayidx654 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom653, !dbg !134
  %307 = load i32, i32* %arrayidx654, align 4, !dbg !134
  %xor655 = xor i32 %xor648, %307, !dbg !134
  %308 = load i32, i32* %t0, align 4, !dbg !134
  %shr656 = lshr i32 %308, 24, !dbg !134
  %conv657 = trunc i32 %shr656 to i8, !dbg !134
  %conv658 = zext i8 %conv657 to i32, !dbg !134
  %and659 = and i32 %conv658, 255, !dbg !134
  %idxprom660 = sext i32 %and659 to i64, !dbg !134
  %arrayidx661 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom660, !dbg !134
  %309 = load i32, i32* %arrayidx661, align 4, !dbg !134
  %xor662 = xor i32 %xor655, %309, !dbg !134
  store i32 %xor662, i32* %t0, align 4, !dbg !134
  %310 = load i32, i32* %t1, align 4, !dbg !134
  %311 = load i32, i32* %t0, align 4, !dbg !134
  %add663 = add i32 %310, %311, !dbg !134
  store i32 %add663, i32* %t1, align 4, !dbg !134
  %312 = load i32, i32* %t1, align 4, !dbg !134
  %conv664 = trunc i32 %312 to i8, !dbg !134
  %conv665 = zext i8 %conv664 to i32, !dbg !134
  %and666 = and i32 %conv665, 255, !dbg !134
  %idxprom667 = sext i32 %and666 to i64, !dbg !134
  %arrayidx668 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom667, !dbg !134
  %313 = load i32, i32* %arrayidx668, align 4, !dbg !134
  %314 = load i32, i32* %t1, align 4, !dbg !134
  %shr669 = lshr i32 %314, 8, !dbg !134
  %conv670 = trunc i32 %shr669 to i8, !dbg !134
  %conv671 = zext i8 %conv670 to i32, !dbg !134
  %and672 = and i32 %conv671, 255, !dbg !134
  %idxprom673 = sext i32 %and672 to i64, !dbg !134
  %arrayidx674 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom673, !dbg !134
  %315 = load i32, i32* %arrayidx674, align 4, !dbg !134
  %xor675 = xor i32 %313, %315, !dbg !134
  %316 = load i32, i32* %t1, align 4, !dbg !134
  %shr676 = lshr i32 %316, 16, !dbg !134
  %conv677 = trunc i32 %shr676 to i8, !dbg !134
  %conv678 = zext i8 %conv677 to i32, !dbg !134
  %and679 = and i32 %conv678, 255, !dbg !134
  %idxprom680 = sext i32 %and679 to i64, !dbg !134
  %arrayidx681 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom680, !dbg !134
  %317 = load i32, i32* %arrayidx681, align 4, !dbg !134
  %xor682 = xor i32 %xor675, %317, !dbg !134
  %318 = load i32, i32* %t1, align 4, !dbg !134
  %shr683 = lshr i32 %318, 24, !dbg !134
  %conv684 = trunc i32 %shr683 to i8, !dbg !134
  %conv685 = zext i8 %conv684 to i32, !dbg !134
  %and686 = and i32 %conv685, 255, !dbg !134
  %idxprom687 = sext i32 %and686 to i64, !dbg !134
  %arrayidx688 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom687, !dbg !134
  %319 = load i32, i32* %arrayidx688, align 4, !dbg !134
  %xor689 = xor i32 %xor682, %319, !dbg !134
  store i32 %xor689, i32* %t1, align 4, !dbg !134
  %320 = load i32, i32* %t0, align 4, !dbg !134
  %321 = load i32, i32* %t1, align 4, !dbg !134
  %add690 = add i32 %320, %321, !dbg !134
  store i32 %add690, i32* %t0, align 4, !dbg !134
  %322 = load i32, i32* %t0, align 4, !dbg !134
  %323 = load i32, i32* %x1, align 4, !dbg !134
  %xor691 = xor i32 %323, %322, !dbg !134
  store i32 %xor691, i32* %x1, align 4, !dbg !134
  %324 = load i32, i32* %t1, align 4, !dbg !134
  %325 = load i32, i32* %x2, align 4, !dbg !134
  %xor692 = xor i32 %325, %324, !dbg !134
  store i32 %xor692, i32* %x2, align 4, !dbg !134
  %326 = load i32, i32* %x1, align 4, !dbg !135
  %327 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !135
  %data693 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %327, i32 0, i32 0, !dbg !135
  %arrayidx694 = getelementptr inbounds [32 x i32], [32 x i32]* %data693, i64 0, i64 14, !dbg !135
  %328 = load i32, i32* %arrayidx694, align 4, !dbg !135
  %xor695 = xor i32 %326, %328, !dbg !135
  store i32 %xor695, i32* %t0, align 4, !dbg !135
  %329 = load i32, i32* %x2, align 4, !dbg !135
  %330 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !135
  %data696 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %330, i32 0, i32 0, !dbg !135
  %arrayidx697 = getelementptr inbounds [32 x i32], [32 x i32]* %data696, i64 0, i64 15, !dbg !135
  %331 = load i32, i32* %arrayidx697, align 4, !dbg !135
  %xor698 = xor i32 %329, %331, !dbg !135
  store i32 %xor698, i32* %t1, align 4, !dbg !135
  %332 = load i32, i32* %t0, align 4, !dbg !135
  %333 = load i32, i32* %t1, align 4, !dbg !135
  %xor699 = xor i32 %333, %332, !dbg !135
  store i32 %xor699, i32* %t1, align 4, !dbg !135
  %334 = load i32, i32* %t1, align 4, !dbg !135
  %conv700 = trunc i32 %334 to i8, !dbg !135
  %conv701 = zext i8 %conv700 to i32, !dbg !135
  %and702 = and i32 %conv701, 255, !dbg !135
  %idxprom703 = sext i32 %and702 to i64, !dbg !135
  %arrayidx704 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom703, !dbg !135
  %335 = load i32, i32* %arrayidx704, align 4, !dbg !135
  %336 = load i32, i32* %t1, align 4, !dbg !135
  %shr705 = lshr i32 %336, 8, !dbg !135
  %conv706 = trunc i32 %shr705 to i8, !dbg !135
  %conv707 = zext i8 %conv706 to i32, !dbg !135
  %and708 = and i32 %conv707, 255, !dbg !135
  %idxprom709 = sext i32 %and708 to i64, !dbg !135
  %arrayidx710 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom709, !dbg !135
  %337 = load i32, i32* %arrayidx710, align 4, !dbg !135
  %xor711 = xor i32 %335, %337, !dbg !135
  %338 = load i32, i32* %t1, align 4, !dbg !135
  %shr712 = lshr i32 %338, 16, !dbg !135
  %conv713 = trunc i32 %shr712 to i8, !dbg !135
  %conv714 = zext i8 %conv713 to i32, !dbg !135
  %and715 = and i32 %conv714, 255, !dbg !135
  %idxprom716 = sext i32 %and715 to i64, !dbg !135
  %arrayidx717 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom716, !dbg !135
  %339 = load i32, i32* %arrayidx717, align 4, !dbg !135
  %xor718 = xor i32 %xor711, %339, !dbg !135
  %340 = load i32, i32* %t1, align 4, !dbg !135
  %shr719 = lshr i32 %340, 24, !dbg !135
  %conv720 = trunc i32 %shr719 to i8, !dbg !135
  %conv721 = zext i8 %conv720 to i32, !dbg !135
  %and722 = and i32 %conv721, 255, !dbg !135
  %idxprom723 = sext i32 %and722 to i64, !dbg !135
  %arrayidx724 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom723, !dbg !135
  %341 = load i32, i32* %arrayidx724, align 4, !dbg !135
  %xor725 = xor i32 %xor718, %341, !dbg !135
  store i32 %xor725, i32* %t1, align 4, !dbg !135
  %342 = load i32, i32* %t0, align 4, !dbg !135
  %343 = load i32, i32* %t1, align 4, !dbg !135
  %add726 = add i32 %342, %343, !dbg !135
  store i32 %add726, i32* %t0, align 4, !dbg !135
  %344 = load i32, i32* %t0, align 4, !dbg !135
  %conv727 = trunc i32 %344 to i8, !dbg !135
  %conv728 = zext i8 %conv727 to i32, !dbg !135
  %and729 = and i32 %conv728, 255, !dbg !135
  %idxprom730 = sext i32 %and729 to i64, !dbg !135
  %arrayidx731 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom730, !dbg !135
  %345 = load i32, i32* %arrayidx731, align 4, !dbg !135
  %346 = load i32, i32* %t0, align 4, !dbg !135
  %shr732 = lshr i32 %346, 8, !dbg !135
  %conv733 = trunc i32 %shr732 to i8, !dbg !135
  %conv734 = zext i8 %conv733 to i32, !dbg !135
  %and735 = and i32 %conv734, 255, !dbg !135
  %idxprom736 = sext i32 %and735 to i64, !dbg !135
  %arrayidx737 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom736, !dbg !135
  %347 = load i32, i32* %arrayidx737, align 4, !dbg !135
  %xor738 = xor i32 %345, %347, !dbg !135
  %348 = load i32, i32* %t0, align 4, !dbg !135
  %shr739 = lshr i32 %348, 16, !dbg !135
  %conv740 = trunc i32 %shr739 to i8, !dbg !135
  %conv741 = zext i8 %conv740 to i32, !dbg !135
  %and742 = and i32 %conv741, 255, !dbg !135
  %idxprom743 = sext i32 %and742 to i64, !dbg !135
  %arrayidx744 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom743, !dbg !135
  %349 = load i32, i32* %arrayidx744, align 4, !dbg !135
  %xor745 = xor i32 %xor738, %349, !dbg !135
  %350 = load i32, i32* %t0, align 4, !dbg !135
  %shr746 = lshr i32 %350, 24, !dbg !135
  %conv747 = trunc i32 %shr746 to i8, !dbg !135
  %conv748 = zext i8 %conv747 to i32, !dbg !135
  %and749 = and i32 %conv748, 255, !dbg !135
  %idxprom750 = sext i32 %and749 to i64, !dbg !135
  %arrayidx751 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom750, !dbg !135
  %351 = load i32, i32* %arrayidx751, align 4, !dbg !135
  %xor752 = xor i32 %xor745, %351, !dbg !135
  store i32 %xor752, i32* %t0, align 4, !dbg !135
  %352 = load i32, i32* %t1, align 4, !dbg !135
  %353 = load i32, i32* %t0, align 4, !dbg !135
  %add753 = add i32 %352, %353, !dbg !135
  store i32 %add753, i32* %t1, align 4, !dbg !135
  %354 = load i32, i32* %t1, align 4, !dbg !135
  %conv754 = trunc i32 %354 to i8, !dbg !135
  %conv755 = zext i8 %conv754 to i32, !dbg !135
  %and756 = and i32 %conv755, 255, !dbg !135
  %idxprom757 = sext i32 %and756 to i64, !dbg !135
  %arrayidx758 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom757, !dbg !135
  %355 = load i32, i32* %arrayidx758, align 4, !dbg !135
  %356 = load i32, i32* %t1, align 4, !dbg !135
  %shr759 = lshr i32 %356, 8, !dbg !135
  %conv760 = trunc i32 %shr759 to i8, !dbg !135
  %conv761 = zext i8 %conv760 to i32, !dbg !135
  %and762 = and i32 %conv761, 255, !dbg !135
  %idxprom763 = sext i32 %and762 to i64, !dbg !135
  %arrayidx764 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom763, !dbg !135
  %357 = load i32, i32* %arrayidx764, align 4, !dbg !135
  %xor765 = xor i32 %355, %357, !dbg !135
  %358 = load i32, i32* %t1, align 4, !dbg !135
  %shr766 = lshr i32 %358, 16, !dbg !135
  %conv767 = trunc i32 %shr766 to i8, !dbg !135
  %conv768 = zext i8 %conv767 to i32, !dbg !135
  %and769 = and i32 %conv768, 255, !dbg !135
  %idxprom770 = sext i32 %and769 to i64, !dbg !135
  %arrayidx771 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom770, !dbg !135
  %359 = load i32, i32* %arrayidx771, align 4, !dbg !135
  %xor772 = xor i32 %xor765, %359, !dbg !135
  %360 = load i32, i32* %t1, align 4, !dbg !135
  %shr773 = lshr i32 %360, 24, !dbg !135
  %conv774 = trunc i32 %shr773 to i8, !dbg !135
  %conv775 = zext i8 %conv774 to i32, !dbg !135
  %and776 = and i32 %conv775, 255, !dbg !135
  %idxprom777 = sext i32 %and776 to i64, !dbg !135
  %arrayidx778 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom777, !dbg !135
  %361 = load i32, i32* %arrayidx778, align 4, !dbg !135
  %xor779 = xor i32 %xor772, %361, !dbg !135
  store i32 %xor779, i32* %t1, align 4, !dbg !135
  %362 = load i32, i32* %t0, align 4, !dbg !135
  %363 = load i32, i32* %t1, align 4, !dbg !135
  %add780 = add i32 %362, %363, !dbg !135
  store i32 %add780, i32* %t0, align 4, !dbg !135
  %364 = load i32, i32* %t0, align 4, !dbg !135
  %365 = load i32, i32* %x3, align 4, !dbg !135
  %xor781 = xor i32 %365, %364, !dbg !135
  store i32 %xor781, i32* %x3, align 4, !dbg !135
  %366 = load i32, i32* %t1, align 4, !dbg !135
  %367 = load i32, i32* %x4, align 4, !dbg !135
  %xor782 = xor i32 %367, %366, !dbg !135
  store i32 %xor782, i32* %x4, align 4, !dbg !135
  %368 = load i32, i32* %x3, align 4, !dbg !136
  %369 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !136
  %data783 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %369, i32 0, i32 0, !dbg !136
  %arrayidx784 = getelementptr inbounds [32 x i32], [32 x i32]* %data783, i64 0, i64 16, !dbg !136
  %370 = load i32, i32* %arrayidx784, align 4, !dbg !136
  %xor785 = xor i32 %368, %370, !dbg !136
  store i32 %xor785, i32* %t0, align 4, !dbg !136
  %371 = load i32, i32* %x4, align 4, !dbg !136
  %372 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !136
  %data786 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %372, i32 0, i32 0, !dbg !136
  %arrayidx787 = getelementptr inbounds [32 x i32], [32 x i32]* %data786, i64 0, i64 17, !dbg !136
  %373 = load i32, i32* %arrayidx787, align 4, !dbg !136
  %xor788 = xor i32 %371, %373, !dbg !136
  store i32 %xor788, i32* %t1, align 4, !dbg !136
  %374 = load i32, i32* %t0, align 4, !dbg !136
  %375 = load i32, i32* %t1, align 4, !dbg !136
  %xor789 = xor i32 %375, %374, !dbg !136
  store i32 %xor789, i32* %t1, align 4, !dbg !136
  %376 = load i32, i32* %t1, align 4, !dbg !136
  %conv790 = trunc i32 %376 to i8, !dbg !136
  %conv791 = zext i8 %conv790 to i32, !dbg !136
  %and792 = and i32 %conv791, 255, !dbg !136
  %idxprom793 = sext i32 %and792 to i64, !dbg !136
  %arrayidx794 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom793, !dbg !136
  %377 = load i32, i32* %arrayidx794, align 4, !dbg !136
  %378 = load i32, i32* %t1, align 4, !dbg !136
  %shr795 = lshr i32 %378, 8, !dbg !136
  %conv796 = trunc i32 %shr795 to i8, !dbg !136
  %conv797 = zext i8 %conv796 to i32, !dbg !136
  %and798 = and i32 %conv797, 255, !dbg !136
  %idxprom799 = sext i32 %and798 to i64, !dbg !136
  %arrayidx800 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom799, !dbg !136
  %379 = load i32, i32* %arrayidx800, align 4, !dbg !136
  %xor801 = xor i32 %377, %379, !dbg !136
  %380 = load i32, i32* %t1, align 4, !dbg !136
  %shr802 = lshr i32 %380, 16, !dbg !136
  %conv803 = trunc i32 %shr802 to i8, !dbg !136
  %conv804 = zext i8 %conv803 to i32, !dbg !136
  %and805 = and i32 %conv804, 255, !dbg !136
  %idxprom806 = sext i32 %and805 to i64, !dbg !136
  %arrayidx807 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom806, !dbg !136
  %381 = load i32, i32* %arrayidx807, align 4, !dbg !136
  %xor808 = xor i32 %xor801, %381, !dbg !136
  %382 = load i32, i32* %t1, align 4, !dbg !136
  %shr809 = lshr i32 %382, 24, !dbg !136
  %conv810 = trunc i32 %shr809 to i8, !dbg !136
  %conv811 = zext i8 %conv810 to i32, !dbg !136
  %and812 = and i32 %conv811, 255, !dbg !136
  %idxprom813 = sext i32 %and812 to i64, !dbg !136
  %arrayidx814 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom813, !dbg !136
  %383 = load i32, i32* %arrayidx814, align 4, !dbg !136
  %xor815 = xor i32 %xor808, %383, !dbg !136
  store i32 %xor815, i32* %t1, align 4, !dbg !136
  %384 = load i32, i32* %t0, align 4, !dbg !136
  %385 = load i32, i32* %t1, align 4, !dbg !136
  %add816 = add i32 %384, %385, !dbg !136
  store i32 %add816, i32* %t0, align 4, !dbg !136
  %386 = load i32, i32* %t0, align 4, !dbg !136
  %conv817 = trunc i32 %386 to i8, !dbg !136
  %conv818 = zext i8 %conv817 to i32, !dbg !136
  %and819 = and i32 %conv818, 255, !dbg !136
  %idxprom820 = sext i32 %and819 to i64, !dbg !136
  %arrayidx821 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom820, !dbg !136
  %387 = load i32, i32* %arrayidx821, align 4, !dbg !136
  %388 = load i32, i32* %t0, align 4, !dbg !136
  %shr822 = lshr i32 %388, 8, !dbg !136
  %conv823 = trunc i32 %shr822 to i8, !dbg !136
  %conv824 = zext i8 %conv823 to i32, !dbg !136
  %and825 = and i32 %conv824, 255, !dbg !136
  %idxprom826 = sext i32 %and825 to i64, !dbg !136
  %arrayidx827 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom826, !dbg !136
  %389 = load i32, i32* %arrayidx827, align 4, !dbg !136
  %xor828 = xor i32 %387, %389, !dbg !136
  %390 = load i32, i32* %t0, align 4, !dbg !136
  %shr829 = lshr i32 %390, 16, !dbg !136
  %conv830 = trunc i32 %shr829 to i8, !dbg !136
  %conv831 = zext i8 %conv830 to i32, !dbg !136
  %and832 = and i32 %conv831, 255, !dbg !136
  %idxprom833 = sext i32 %and832 to i64, !dbg !136
  %arrayidx834 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom833, !dbg !136
  %391 = load i32, i32* %arrayidx834, align 4, !dbg !136
  %xor835 = xor i32 %xor828, %391, !dbg !136
  %392 = load i32, i32* %t0, align 4, !dbg !136
  %shr836 = lshr i32 %392, 24, !dbg !136
  %conv837 = trunc i32 %shr836 to i8, !dbg !136
  %conv838 = zext i8 %conv837 to i32, !dbg !136
  %and839 = and i32 %conv838, 255, !dbg !136
  %idxprom840 = sext i32 %and839 to i64, !dbg !136
  %arrayidx841 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom840, !dbg !136
  %393 = load i32, i32* %arrayidx841, align 4, !dbg !136
  %xor842 = xor i32 %xor835, %393, !dbg !136
  store i32 %xor842, i32* %t0, align 4, !dbg !136
  %394 = load i32, i32* %t1, align 4, !dbg !136
  %395 = load i32, i32* %t0, align 4, !dbg !136
  %add843 = add i32 %394, %395, !dbg !136
  store i32 %add843, i32* %t1, align 4, !dbg !136
  %396 = load i32, i32* %t1, align 4, !dbg !136
  %conv844 = trunc i32 %396 to i8, !dbg !136
  %conv845 = zext i8 %conv844 to i32, !dbg !136
  %and846 = and i32 %conv845, 255, !dbg !136
  %idxprom847 = sext i32 %and846 to i64, !dbg !136
  %arrayidx848 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom847, !dbg !136
  %397 = load i32, i32* %arrayidx848, align 4, !dbg !136
  %398 = load i32, i32* %t1, align 4, !dbg !136
  %shr849 = lshr i32 %398, 8, !dbg !136
  %conv850 = trunc i32 %shr849 to i8, !dbg !136
  %conv851 = zext i8 %conv850 to i32, !dbg !136
  %and852 = and i32 %conv851, 255, !dbg !136
  %idxprom853 = sext i32 %and852 to i64, !dbg !136
  %arrayidx854 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom853, !dbg !136
  %399 = load i32, i32* %arrayidx854, align 4, !dbg !136
  %xor855 = xor i32 %397, %399, !dbg !136
  %400 = load i32, i32* %t1, align 4, !dbg !136
  %shr856 = lshr i32 %400, 16, !dbg !136
  %conv857 = trunc i32 %shr856 to i8, !dbg !136
  %conv858 = zext i8 %conv857 to i32, !dbg !136
  %and859 = and i32 %conv858, 255, !dbg !136
  %idxprom860 = sext i32 %and859 to i64, !dbg !136
  %arrayidx861 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom860, !dbg !136
  %401 = load i32, i32* %arrayidx861, align 4, !dbg !136
  %xor862 = xor i32 %xor855, %401, !dbg !136
  %402 = load i32, i32* %t1, align 4, !dbg !136
  %shr863 = lshr i32 %402, 24, !dbg !136
  %conv864 = trunc i32 %shr863 to i8, !dbg !136
  %conv865 = zext i8 %conv864 to i32, !dbg !136
  %and866 = and i32 %conv865, 255, !dbg !136
  %idxprom867 = sext i32 %and866 to i64, !dbg !136
  %arrayidx868 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom867, !dbg !136
  %403 = load i32, i32* %arrayidx868, align 4, !dbg !136
  %xor869 = xor i32 %xor862, %403, !dbg !136
  store i32 %xor869, i32* %t1, align 4, !dbg !136
  %404 = load i32, i32* %t0, align 4, !dbg !136
  %405 = load i32, i32* %t1, align 4, !dbg !136
  %add870 = add i32 %404, %405, !dbg !136
  store i32 %add870, i32* %t0, align 4, !dbg !136
  %406 = load i32, i32* %t0, align 4, !dbg !136
  %407 = load i32, i32* %x1, align 4, !dbg !136
  %xor871 = xor i32 %407, %406, !dbg !136
  store i32 %xor871, i32* %x1, align 4, !dbg !136
  %408 = load i32, i32* %t1, align 4, !dbg !136
  %409 = load i32, i32* %x2, align 4, !dbg !136
  %xor872 = xor i32 %409, %408, !dbg !136
  store i32 %xor872, i32* %x2, align 4, !dbg !136
  %410 = load i32, i32* %x1, align 4, !dbg !137
  %411 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !137
  %data873 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %411, i32 0, i32 0, !dbg !137
  %arrayidx874 = getelementptr inbounds [32 x i32], [32 x i32]* %data873, i64 0, i64 18, !dbg !137
  %412 = load i32, i32* %arrayidx874, align 4, !dbg !137
  %xor875 = xor i32 %410, %412, !dbg !137
  store i32 %xor875, i32* %t0, align 4, !dbg !137
  %413 = load i32, i32* %x2, align 4, !dbg !137
  %414 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !137
  %data876 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %414, i32 0, i32 0, !dbg !137
  %arrayidx877 = getelementptr inbounds [32 x i32], [32 x i32]* %data876, i64 0, i64 19, !dbg !137
  %415 = load i32, i32* %arrayidx877, align 4, !dbg !137
  %xor878 = xor i32 %413, %415, !dbg !137
  store i32 %xor878, i32* %t1, align 4, !dbg !137
  %416 = load i32, i32* %t0, align 4, !dbg !137
  %417 = load i32, i32* %t1, align 4, !dbg !137
  %xor879 = xor i32 %417, %416, !dbg !137
  store i32 %xor879, i32* %t1, align 4, !dbg !137
  %418 = load i32, i32* %t1, align 4, !dbg !137
  %conv880 = trunc i32 %418 to i8, !dbg !137
  %conv881 = zext i8 %conv880 to i32, !dbg !137
  %and882 = and i32 %conv881, 255, !dbg !137
  %idxprom883 = sext i32 %and882 to i64, !dbg !137
  %arrayidx884 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom883, !dbg !137
  %419 = load i32, i32* %arrayidx884, align 4, !dbg !137
  %420 = load i32, i32* %t1, align 4, !dbg !137
  %shr885 = lshr i32 %420, 8, !dbg !137
  %conv886 = trunc i32 %shr885 to i8, !dbg !137
  %conv887 = zext i8 %conv886 to i32, !dbg !137
  %and888 = and i32 %conv887, 255, !dbg !137
  %idxprom889 = sext i32 %and888 to i64, !dbg !137
  %arrayidx890 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom889, !dbg !137
  %421 = load i32, i32* %arrayidx890, align 4, !dbg !137
  %xor891 = xor i32 %419, %421, !dbg !137
  %422 = load i32, i32* %t1, align 4, !dbg !137
  %shr892 = lshr i32 %422, 16, !dbg !137
  %conv893 = trunc i32 %shr892 to i8, !dbg !137
  %conv894 = zext i8 %conv893 to i32, !dbg !137
  %and895 = and i32 %conv894, 255, !dbg !137
  %idxprom896 = sext i32 %and895 to i64, !dbg !137
  %arrayidx897 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom896, !dbg !137
  %423 = load i32, i32* %arrayidx897, align 4, !dbg !137
  %xor898 = xor i32 %xor891, %423, !dbg !137
  %424 = load i32, i32* %t1, align 4, !dbg !137
  %shr899 = lshr i32 %424, 24, !dbg !137
  %conv900 = trunc i32 %shr899 to i8, !dbg !137
  %conv901 = zext i8 %conv900 to i32, !dbg !137
  %and902 = and i32 %conv901, 255, !dbg !137
  %idxprom903 = sext i32 %and902 to i64, !dbg !137
  %arrayidx904 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom903, !dbg !137
  %425 = load i32, i32* %arrayidx904, align 4, !dbg !137
  %xor905 = xor i32 %xor898, %425, !dbg !137
  store i32 %xor905, i32* %t1, align 4, !dbg !137
  %426 = load i32, i32* %t0, align 4, !dbg !137
  %427 = load i32, i32* %t1, align 4, !dbg !137
  %add906 = add i32 %426, %427, !dbg !137
  store i32 %add906, i32* %t0, align 4, !dbg !137
  %428 = load i32, i32* %t0, align 4, !dbg !137
  %conv907 = trunc i32 %428 to i8, !dbg !137
  %conv908 = zext i8 %conv907 to i32, !dbg !137
  %and909 = and i32 %conv908, 255, !dbg !137
  %idxprom910 = sext i32 %and909 to i64, !dbg !137
  %arrayidx911 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom910, !dbg !137
  %429 = load i32, i32* %arrayidx911, align 4, !dbg !137
  %430 = load i32, i32* %t0, align 4, !dbg !137
  %shr912 = lshr i32 %430, 8, !dbg !137
  %conv913 = trunc i32 %shr912 to i8, !dbg !137
  %conv914 = zext i8 %conv913 to i32, !dbg !137
  %and915 = and i32 %conv914, 255, !dbg !137
  %idxprom916 = sext i32 %and915 to i64, !dbg !137
  %arrayidx917 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom916, !dbg !137
  %431 = load i32, i32* %arrayidx917, align 4, !dbg !137
  %xor918 = xor i32 %429, %431, !dbg !137
  %432 = load i32, i32* %t0, align 4, !dbg !137
  %shr919 = lshr i32 %432, 16, !dbg !137
  %conv920 = trunc i32 %shr919 to i8, !dbg !137
  %conv921 = zext i8 %conv920 to i32, !dbg !137
  %and922 = and i32 %conv921, 255, !dbg !137
  %idxprom923 = sext i32 %and922 to i64, !dbg !137
  %arrayidx924 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom923, !dbg !137
  %433 = load i32, i32* %arrayidx924, align 4, !dbg !137
  %xor925 = xor i32 %xor918, %433, !dbg !137
  %434 = load i32, i32* %t0, align 4, !dbg !137
  %shr926 = lshr i32 %434, 24, !dbg !137
  %conv927 = trunc i32 %shr926 to i8, !dbg !137
  %conv928 = zext i8 %conv927 to i32, !dbg !137
  %and929 = and i32 %conv928, 255, !dbg !137
  %idxprom930 = sext i32 %and929 to i64, !dbg !137
  %arrayidx931 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom930, !dbg !137
  %435 = load i32, i32* %arrayidx931, align 4, !dbg !137
  %xor932 = xor i32 %xor925, %435, !dbg !137
  store i32 %xor932, i32* %t0, align 4, !dbg !137
  %436 = load i32, i32* %t1, align 4, !dbg !137
  %437 = load i32, i32* %t0, align 4, !dbg !137
  %add933 = add i32 %436, %437, !dbg !137
  store i32 %add933, i32* %t1, align 4, !dbg !137
  %438 = load i32, i32* %t1, align 4, !dbg !137
  %conv934 = trunc i32 %438 to i8, !dbg !137
  %conv935 = zext i8 %conv934 to i32, !dbg !137
  %and936 = and i32 %conv935, 255, !dbg !137
  %idxprom937 = sext i32 %and936 to i64, !dbg !137
  %arrayidx938 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom937, !dbg !137
  %439 = load i32, i32* %arrayidx938, align 4, !dbg !137
  %440 = load i32, i32* %t1, align 4, !dbg !137
  %shr939 = lshr i32 %440, 8, !dbg !137
  %conv940 = trunc i32 %shr939 to i8, !dbg !137
  %conv941 = zext i8 %conv940 to i32, !dbg !137
  %and942 = and i32 %conv941, 255, !dbg !137
  %idxprom943 = sext i32 %and942 to i64, !dbg !137
  %arrayidx944 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom943, !dbg !137
  %441 = load i32, i32* %arrayidx944, align 4, !dbg !137
  %xor945 = xor i32 %439, %441, !dbg !137
  %442 = load i32, i32* %t1, align 4, !dbg !137
  %shr946 = lshr i32 %442, 16, !dbg !137
  %conv947 = trunc i32 %shr946 to i8, !dbg !137
  %conv948 = zext i8 %conv947 to i32, !dbg !137
  %and949 = and i32 %conv948, 255, !dbg !137
  %idxprom950 = sext i32 %and949 to i64, !dbg !137
  %arrayidx951 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom950, !dbg !137
  %443 = load i32, i32* %arrayidx951, align 4, !dbg !137
  %xor952 = xor i32 %xor945, %443, !dbg !137
  %444 = load i32, i32* %t1, align 4, !dbg !137
  %shr953 = lshr i32 %444, 24, !dbg !137
  %conv954 = trunc i32 %shr953 to i8, !dbg !137
  %conv955 = zext i8 %conv954 to i32, !dbg !137
  %and956 = and i32 %conv955, 255, !dbg !137
  %idxprom957 = sext i32 %and956 to i64, !dbg !137
  %arrayidx958 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom957, !dbg !137
  %445 = load i32, i32* %arrayidx958, align 4, !dbg !137
  %xor959 = xor i32 %xor952, %445, !dbg !137
  store i32 %xor959, i32* %t1, align 4, !dbg !137
  %446 = load i32, i32* %t0, align 4, !dbg !137
  %447 = load i32, i32* %t1, align 4, !dbg !137
  %add960 = add i32 %446, %447, !dbg !137
  store i32 %add960, i32* %t0, align 4, !dbg !137
  %448 = load i32, i32* %t0, align 4, !dbg !137
  %449 = load i32, i32* %x3, align 4, !dbg !137
  %xor961 = xor i32 %449, %448, !dbg !137
  store i32 %xor961, i32* %x3, align 4, !dbg !137
  %450 = load i32, i32* %t1, align 4, !dbg !137
  %451 = load i32, i32* %x4, align 4, !dbg !137
  %xor962 = xor i32 %451, %450, !dbg !137
  store i32 %xor962, i32* %x4, align 4, !dbg !137
  %452 = load i32, i32* %x3, align 4, !dbg !138
  %453 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !138
  %data963 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %453, i32 0, i32 0, !dbg !138
  %arrayidx964 = getelementptr inbounds [32 x i32], [32 x i32]* %data963, i64 0, i64 20, !dbg !138
  %454 = load i32, i32* %arrayidx964, align 4, !dbg !138
  %xor965 = xor i32 %452, %454, !dbg !138
  store i32 %xor965, i32* %t0, align 4, !dbg !138
  %455 = load i32, i32* %x4, align 4, !dbg !138
  %456 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !138
  %data966 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %456, i32 0, i32 0, !dbg !138
  %arrayidx967 = getelementptr inbounds [32 x i32], [32 x i32]* %data966, i64 0, i64 21, !dbg !138
  %457 = load i32, i32* %arrayidx967, align 4, !dbg !138
  %xor968 = xor i32 %455, %457, !dbg !138
  store i32 %xor968, i32* %t1, align 4, !dbg !138
  %458 = load i32, i32* %t0, align 4, !dbg !138
  %459 = load i32, i32* %t1, align 4, !dbg !138
  %xor969 = xor i32 %459, %458, !dbg !138
  store i32 %xor969, i32* %t1, align 4, !dbg !138
  %460 = load i32, i32* %t1, align 4, !dbg !138
  %conv970 = trunc i32 %460 to i8, !dbg !138
  %conv971 = zext i8 %conv970 to i32, !dbg !138
  %and972 = and i32 %conv971, 255, !dbg !138
  %idxprom973 = sext i32 %and972 to i64, !dbg !138
  %arrayidx974 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom973, !dbg !138
  %461 = load i32, i32* %arrayidx974, align 4, !dbg !138
  %462 = load i32, i32* %t1, align 4, !dbg !138
  %shr975 = lshr i32 %462, 8, !dbg !138
  %conv976 = trunc i32 %shr975 to i8, !dbg !138
  %conv977 = zext i8 %conv976 to i32, !dbg !138
  %and978 = and i32 %conv977, 255, !dbg !138
  %idxprom979 = sext i32 %and978 to i64, !dbg !138
  %arrayidx980 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom979, !dbg !138
  %463 = load i32, i32* %arrayidx980, align 4, !dbg !138
  %xor981 = xor i32 %461, %463, !dbg !138
  %464 = load i32, i32* %t1, align 4, !dbg !138
  %shr982 = lshr i32 %464, 16, !dbg !138
  %conv983 = trunc i32 %shr982 to i8, !dbg !138
  %conv984 = zext i8 %conv983 to i32, !dbg !138
  %and985 = and i32 %conv984, 255, !dbg !138
  %idxprom986 = sext i32 %and985 to i64, !dbg !138
  %arrayidx987 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom986, !dbg !138
  %465 = load i32, i32* %arrayidx987, align 4, !dbg !138
  %xor988 = xor i32 %xor981, %465, !dbg !138
  %466 = load i32, i32* %t1, align 4, !dbg !138
  %shr989 = lshr i32 %466, 24, !dbg !138
  %conv990 = trunc i32 %shr989 to i8, !dbg !138
  %conv991 = zext i8 %conv990 to i32, !dbg !138
  %and992 = and i32 %conv991, 255, !dbg !138
  %idxprom993 = sext i32 %and992 to i64, !dbg !138
  %arrayidx994 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom993, !dbg !138
  %467 = load i32, i32* %arrayidx994, align 4, !dbg !138
  %xor995 = xor i32 %xor988, %467, !dbg !138
  store i32 %xor995, i32* %t1, align 4, !dbg !138
  %468 = load i32, i32* %t0, align 4, !dbg !138
  %469 = load i32, i32* %t1, align 4, !dbg !138
  %add996 = add i32 %468, %469, !dbg !138
  store i32 %add996, i32* %t0, align 4, !dbg !138
  %470 = load i32, i32* %t0, align 4, !dbg !138
  %conv997 = trunc i32 %470 to i8, !dbg !138
  %conv998 = zext i8 %conv997 to i32, !dbg !138
  %and999 = and i32 %conv998, 255, !dbg !138
  %idxprom1000 = sext i32 %and999 to i64, !dbg !138
  %arrayidx1001 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1000, !dbg !138
  %471 = load i32, i32* %arrayidx1001, align 4, !dbg !138
  %472 = load i32, i32* %t0, align 4, !dbg !138
  %shr1002 = lshr i32 %472, 8, !dbg !138
  %conv1003 = trunc i32 %shr1002 to i8, !dbg !138
  %conv1004 = zext i8 %conv1003 to i32, !dbg !138
  %and1005 = and i32 %conv1004, 255, !dbg !138
  %idxprom1006 = sext i32 %and1005 to i64, !dbg !138
  %arrayidx1007 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1006, !dbg !138
  %473 = load i32, i32* %arrayidx1007, align 4, !dbg !138
  %xor1008 = xor i32 %471, %473, !dbg !138
  %474 = load i32, i32* %t0, align 4, !dbg !138
  %shr1009 = lshr i32 %474, 16, !dbg !138
  %conv1010 = trunc i32 %shr1009 to i8, !dbg !138
  %conv1011 = zext i8 %conv1010 to i32, !dbg !138
  %and1012 = and i32 %conv1011, 255, !dbg !138
  %idxprom1013 = sext i32 %and1012 to i64, !dbg !138
  %arrayidx1014 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1013, !dbg !138
  %475 = load i32, i32* %arrayidx1014, align 4, !dbg !138
  %xor1015 = xor i32 %xor1008, %475, !dbg !138
  %476 = load i32, i32* %t0, align 4, !dbg !138
  %shr1016 = lshr i32 %476, 24, !dbg !138
  %conv1017 = trunc i32 %shr1016 to i8, !dbg !138
  %conv1018 = zext i8 %conv1017 to i32, !dbg !138
  %and1019 = and i32 %conv1018, 255, !dbg !138
  %idxprom1020 = sext i32 %and1019 to i64, !dbg !138
  %arrayidx1021 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1020, !dbg !138
  %477 = load i32, i32* %arrayidx1021, align 4, !dbg !138
  %xor1022 = xor i32 %xor1015, %477, !dbg !138
  store i32 %xor1022, i32* %t0, align 4, !dbg !138
  %478 = load i32, i32* %t1, align 4, !dbg !138
  %479 = load i32, i32* %t0, align 4, !dbg !138
  %add1023 = add i32 %478, %479, !dbg !138
  store i32 %add1023, i32* %t1, align 4, !dbg !138
  %480 = load i32, i32* %t1, align 4, !dbg !138
  %conv1024 = trunc i32 %480 to i8, !dbg !138
  %conv1025 = zext i8 %conv1024 to i32, !dbg !138
  %and1026 = and i32 %conv1025, 255, !dbg !138
  %idxprom1027 = sext i32 %and1026 to i64, !dbg !138
  %arrayidx1028 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1027, !dbg !138
  %481 = load i32, i32* %arrayidx1028, align 4, !dbg !138
  %482 = load i32, i32* %t1, align 4, !dbg !138
  %shr1029 = lshr i32 %482, 8, !dbg !138
  %conv1030 = trunc i32 %shr1029 to i8, !dbg !138
  %conv1031 = zext i8 %conv1030 to i32, !dbg !138
  %and1032 = and i32 %conv1031, 255, !dbg !138
  %idxprom1033 = sext i32 %and1032 to i64, !dbg !138
  %arrayidx1034 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1033, !dbg !138
  %483 = load i32, i32* %arrayidx1034, align 4, !dbg !138
  %xor1035 = xor i32 %481, %483, !dbg !138
  %484 = load i32, i32* %t1, align 4, !dbg !138
  %shr1036 = lshr i32 %484, 16, !dbg !138
  %conv1037 = trunc i32 %shr1036 to i8, !dbg !138
  %conv1038 = zext i8 %conv1037 to i32, !dbg !138
  %and1039 = and i32 %conv1038, 255, !dbg !138
  %idxprom1040 = sext i32 %and1039 to i64, !dbg !138
  %arrayidx1041 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1040, !dbg !138
  %485 = load i32, i32* %arrayidx1041, align 4, !dbg !138
  %xor1042 = xor i32 %xor1035, %485, !dbg !138
  %486 = load i32, i32* %t1, align 4, !dbg !138
  %shr1043 = lshr i32 %486, 24, !dbg !138
  %conv1044 = trunc i32 %shr1043 to i8, !dbg !138
  %conv1045 = zext i8 %conv1044 to i32, !dbg !138
  %and1046 = and i32 %conv1045, 255, !dbg !138
  %idxprom1047 = sext i32 %and1046 to i64, !dbg !138
  %arrayidx1048 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1047, !dbg !138
  %487 = load i32, i32* %arrayidx1048, align 4, !dbg !138
  %xor1049 = xor i32 %xor1042, %487, !dbg !138
  store i32 %xor1049, i32* %t1, align 4, !dbg !138
  %488 = load i32, i32* %t0, align 4, !dbg !138
  %489 = load i32, i32* %t1, align 4, !dbg !138
  %add1050 = add i32 %488, %489, !dbg !138
  store i32 %add1050, i32* %t0, align 4, !dbg !138
  %490 = load i32, i32* %t0, align 4, !dbg !138
  %491 = load i32, i32* %x1, align 4, !dbg !138
  %xor1051 = xor i32 %491, %490, !dbg !138
  store i32 %xor1051, i32* %x1, align 4, !dbg !138
  %492 = load i32, i32* %t1, align 4, !dbg !138
  %493 = load i32, i32* %x2, align 4, !dbg !138
  %xor1052 = xor i32 %493, %492, !dbg !138
  store i32 %xor1052, i32* %x2, align 4, !dbg !138
  %494 = load i32, i32* %x1, align 4, !dbg !139
  %495 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !139
  %data1053 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %495, i32 0, i32 0, !dbg !139
  %arrayidx1054 = getelementptr inbounds [32 x i32], [32 x i32]* %data1053, i64 0, i64 22, !dbg !139
  %496 = load i32, i32* %arrayidx1054, align 4, !dbg !139
  %xor1055 = xor i32 %494, %496, !dbg !139
  store i32 %xor1055, i32* %t0, align 4, !dbg !139
  %497 = load i32, i32* %x2, align 4, !dbg !139
  %498 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !139
  %data1056 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %498, i32 0, i32 0, !dbg !139
  %arrayidx1057 = getelementptr inbounds [32 x i32], [32 x i32]* %data1056, i64 0, i64 23, !dbg !139
  %499 = load i32, i32* %arrayidx1057, align 4, !dbg !139
  %xor1058 = xor i32 %497, %499, !dbg !139
  store i32 %xor1058, i32* %t1, align 4, !dbg !139
  %500 = load i32, i32* %t0, align 4, !dbg !139
  %501 = load i32, i32* %t1, align 4, !dbg !139
  %xor1059 = xor i32 %501, %500, !dbg !139
  store i32 %xor1059, i32* %t1, align 4, !dbg !139
  %502 = load i32, i32* %t1, align 4, !dbg !139
  %conv1060 = trunc i32 %502 to i8, !dbg !139
  %conv1061 = zext i8 %conv1060 to i32, !dbg !139
  %and1062 = and i32 %conv1061, 255, !dbg !139
  %idxprom1063 = sext i32 %and1062 to i64, !dbg !139
  %arrayidx1064 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1063, !dbg !139
  %503 = load i32, i32* %arrayidx1064, align 4, !dbg !139
  %504 = load i32, i32* %t1, align 4, !dbg !139
  %shr1065 = lshr i32 %504, 8, !dbg !139
  %conv1066 = trunc i32 %shr1065 to i8, !dbg !139
  %conv1067 = zext i8 %conv1066 to i32, !dbg !139
  %and1068 = and i32 %conv1067, 255, !dbg !139
  %idxprom1069 = sext i32 %and1068 to i64, !dbg !139
  %arrayidx1070 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1069, !dbg !139
  %505 = load i32, i32* %arrayidx1070, align 4, !dbg !139
  %xor1071 = xor i32 %503, %505, !dbg !139
  %506 = load i32, i32* %t1, align 4, !dbg !139
  %shr1072 = lshr i32 %506, 16, !dbg !139
  %conv1073 = trunc i32 %shr1072 to i8, !dbg !139
  %conv1074 = zext i8 %conv1073 to i32, !dbg !139
  %and1075 = and i32 %conv1074, 255, !dbg !139
  %idxprom1076 = sext i32 %and1075 to i64, !dbg !139
  %arrayidx1077 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1076, !dbg !139
  %507 = load i32, i32* %arrayidx1077, align 4, !dbg !139
  %xor1078 = xor i32 %xor1071, %507, !dbg !139
  %508 = load i32, i32* %t1, align 4, !dbg !139
  %shr1079 = lshr i32 %508, 24, !dbg !139
  %conv1080 = trunc i32 %shr1079 to i8, !dbg !139
  %conv1081 = zext i8 %conv1080 to i32, !dbg !139
  %and1082 = and i32 %conv1081, 255, !dbg !139
  %idxprom1083 = sext i32 %and1082 to i64, !dbg !139
  %arrayidx1084 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1083, !dbg !139
  %509 = load i32, i32* %arrayidx1084, align 4, !dbg !139
  %xor1085 = xor i32 %xor1078, %509, !dbg !139
  store i32 %xor1085, i32* %t1, align 4, !dbg !139
  %510 = load i32, i32* %t0, align 4, !dbg !139
  %511 = load i32, i32* %t1, align 4, !dbg !139
  %add1086 = add i32 %510, %511, !dbg !139
  store i32 %add1086, i32* %t0, align 4, !dbg !139
  %512 = load i32, i32* %t0, align 4, !dbg !139
  %conv1087 = trunc i32 %512 to i8, !dbg !139
  %conv1088 = zext i8 %conv1087 to i32, !dbg !139
  %and1089 = and i32 %conv1088, 255, !dbg !139
  %idxprom1090 = sext i32 %and1089 to i64, !dbg !139
  %arrayidx1091 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1090, !dbg !139
  %513 = load i32, i32* %arrayidx1091, align 4, !dbg !139
  %514 = load i32, i32* %t0, align 4, !dbg !139
  %shr1092 = lshr i32 %514, 8, !dbg !139
  %conv1093 = trunc i32 %shr1092 to i8, !dbg !139
  %conv1094 = zext i8 %conv1093 to i32, !dbg !139
  %and1095 = and i32 %conv1094, 255, !dbg !139
  %idxprom1096 = sext i32 %and1095 to i64, !dbg !139
  %arrayidx1097 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1096, !dbg !139
  %515 = load i32, i32* %arrayidx1097, align 4, !dbg !139
  %xor1098 = xor i32 %513, %515, !dbg !139
  %516 = load i32, i32* %t0, align 4, !dbg !139
  %shr1099 = lshr i32 %516, 16, !dbg !139
  %conv1100 = trunc i32 %shr1099 to i8, !dbg !139
  %conv1101 = zext i8 %conv1100 to i32, !dbg !139
  %and1102 = and i32 %conv1101, 255, !dbg !139
  %idxprom1103 = sext i32 %and1102 to i64, !dbg !139
  %arrayidx1104 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1103, !dbg !139
  %517 = load i32, i32* %arrayidx1104, align 4, !dbg !139
  %xor1105 = xor i32 %xor1098, %517, !dbg !139
  %518 = load i32, i32* %t0, align 4, !dbg !139
  %shr1106 = lshr i32 %518, 24, !dbg !139
  %conv1107 = trunc i32 %shr1106 to i8, !dbg !139
  %conv1108 = zext i8 %conv1107 to i32, !dbg !139
  %and1109 = and i32 %conv1108, 255, !dbg !139
  %idxprom1110 = sext i32 %and1109 to i64, !dbg !139
  %arrayidx1111 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1110, !dbg !139
  %519 = load i32, i32* %arrayidx1111, align 4, !dbg !139
  %xor1112 = xor i32 %xor1105, %519, !dbg !139
  store i32 %xor1112, i32* %t0, align 4, !dbg !139
  %520 = load i32, i32* %t1, align 4, !dbg !139
  %521 = load i32, i32* %t0, align 4, !dbg !139
  %add1113 = add i32 %520, %521, !dbg !139
  store i32 %add1113, i32* %t1, align 4, !dbg !139
  %522 = load i32, i32* %t1, align 4, !dbg !139
  %conv1114 = trunc i32 %522 to i8, !dbg !139
  %conv1115 = zext i8 %conv1114 to i32, !dbg !139
  %and1116 = and i32 %conv1115, 255, !dbg !139
  %idxprom1117 = sext i32 %and1116 to i64, !dbg !139
  %arrayidx1118 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1117, !dbg !139
  %523 = load i32, i32* %arrayidx1118, align 4, !dbg !139
  %524 = load i32, i32* %t1, align 4, !dbg !139
  %shr1119 = lshr i32 %524, 8, !dbg !139
  %conv1120 = trunc i32 %shr1119 to i8, !dbg !139
  %conv1121 = zext i8 %conv1120 to i32, !dbg !139
  %and1122 = and i32 %conv1121, 255, !dbg !139
  %idxprom1123 = sext i32 %and1122 to i64, !dbg !139
  %arrayidx1124 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1123, !dbg !139
  %525 = load i32, i32* %arrayidx1124, align 4, !dbg !139
  %xor1125 = xor i32 %523, %525, !dbg !139
  %526 = load i32, i32* %t1, align 4, !dbg !139
  %shr1126 = lshr i32 %526, 16, !dbg !139
  %conv1127 = trunc i32 %shr1126 to i8, !dbg !139
  %conv1128 = zext i8 %conv1127 to i32, !dbg !139
  %and1129 = and i32 %conv1128, 255, !dbg !139
  %idxprom1130 = sext i32 %and1129 to i64, !dbg !139
  %arrayidx1131 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1130, !dbg !139
  %527 = load i32, i32* %arrayidx1131, align 4, !dbg !139
  %xor1132 = xor i32 %xor1125, %527, !dbg !139
  %528 = load i32, i32* %t1, align 4, !dbg !139
  %shr1133 = lshr i32 %528, 24, !dbg !139
  %conv1134 = trunc i32 %shr1133 to i8, !dbg !139
  %conv1135 = zext i8 %conv1134 to i32, !dbg !139
  %and1136 = and i32 %conv1135, 255, !dbg !139
  %idxprom1137 = sext i32 %and1136 to i64, !dbg !139
  %arrayidx1138 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1137, !dbg !139
  %529 = load i32, i32* %arrayidx1138, align 4, !dbg !139
  %xor1139 = xor i32 %xor1132, %529, !dbg !139
  store i32 %xor1139, i32* %t1, align 4, !dbg !139
  %530 = load i32, i32* %t0, align 4, !dbg !139
  %531 = load i32, i32* %t1, align 4, !dbg !139
  %add1140 = add i32 %530, %531, !dbg !139
  store i32 %add1140, i32* %t0, align 4, !dbg !139
  %532 = load i32, i32* %t0, align 4, !dbg !139
  %533 = load i32, i32* %x3, align 4, !dbg !139
  %xor1141 = xor i32 %533, %532, !dbg !139
  store i32 %xor1141, i32* %x3, align 4, !dbg !139
  %534 = load i32, i32* %t1, align 4, !dbg !139
  %535 = load i32, i32* %x4, align 4, !dbg !139
  %xor1142 = xor i32 %535, %534, !dbg !139
  store i32 %xor1142, i32* %x4, align 4, !dbg !139
  %536 = load i32, i32* %x3, align 4, !dbg !140
  %537 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !140
  %data1143 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %537, i32 0, i32 0, !dbg !140
  %arrayidx1144 = getelementptr inbounds [32 x i32], [32 x i32]* %data1143, i64 0, i64 24, !dbg !140
  %538 = load i32, i32* %arrayidx1144, align 4, !dbg !140
  %xor1145 = xor i32 %536, %538, !dbg !140
  store i32 %xor1145, i32* %t0, align 4, !dbg !140
  %539 = load i32, i32* %x4, align 4, !dbg !140
  %540 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !140
  %data1146 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %540, i32 0, i32 0, !dbg !140
  %arrayidx1147 = getelementptr inbounds [32 x i32], [32 x i32]* %data1146, i64 0, i64 25, !dbg !140
  %541 = load i32, i32* %arrayidx1147, align 4, !dbg !140
  %xor1148 = xor i32 %539, %541, !dbg !140
  store i32 %xor1148, i32* %t1, align 4, !dbg !140
  %542 = load i32, i32* %t0, align 4, !dbg !140
  %543 = load i32, i32* %t1, align 4, !dbg !140
  %xor1149 = xor i32 %543, %542, !dbg !140
  store i32 %xor1149, i32* %t1, align 4, !dbg !140
  %544 = load i32, i32* %t1, align 4, !dbg !140
  %conv1150 = trunc i32 %544 to i8, !dbg !140
  %conv1151 = zext i8 %conv1150 to i32, !dbg !140
  %and1152 = and i32 %conv1151, 255, !dbg !140
  %idxprom1153 = sext i32 %and1152 to i64, !dbg !140
  %arrayidx1154 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1153, !dbg !140
  %545 = load i32, i32* %arrayidx1154, align 4, !dbg !140
  %546 = load i32, i32* %t1, align 4, !dbg !140
  %shr1155 = lshr i32 %546, 8, !dbg !140
  %conv1156 = trunc i32 %shr1155 to i8, !dbg !140
  %conv1157 = zext i8 %conv1156 to i32, !dbg !140
  %and1158 = and i32 %conv1157, 255, !dbg !140
  %idxprom1159 = sext i32 %and1158 to i64, !dbg !140
  %arrayidx1160 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1159, !dbg !140
  %547 = load i32, i32* %arrayidx1160, align 4, !dbg !140
  %xor1161 = xor i32 %545, %547, !dbg !140
  %548 = load i32, i32* %t1, align 4, !dbg !140
  %shr1162 = lshr i32 %548, 16, !dbg !140
  %conv1163 = trunc i32 %shr1162 to i8, !dbg !140
  %conv1164 = zext i8 %conv1163 to i32, !dbg !140
  %and1165 = and i32 %conv1164, 255, !dbg !140
  %idxprom1166 = sext i32 %and1165 to i64, !dbg !140
  %arrayidx1167 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1166, !dbg !140
  %549 = load i32, i32* %arrayidx1167, align 4, !dbg !140
  %xor1168 = xor i32 %xor1161, %549, !dbg !140
  %550 = load i32, i32* %t1, align 4, !dbg !140
  %shr1169 = lshr i32 %550, 24, !dbg !140
  %conv1170 = trunc i32 %shr1169 to i8, !dbg !140
  %conv1171 = zext i8 %conv1170 to i32, !dbg !140
  %and1172 = and i32 %conv1171, 255, !dbg !140
  %idxprom1173 = sext i32 %and1172 to i64, !dbg !140
  %arrayidx1174 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1173, !dbg !140
  %551 = load i32, i32* %arrayidx1174, align 4, !dbg !140
  %xor1175 = xor i32 %xor1168, %551, !dbg !140
  store i32 %xor1175, i32* %t1, align 4, !dbg !140
  %552 = load i32, i32* %t0, align 4, !dbg !140
  %553 = load i32, i32* %t1, align 4, !dbg !140
  %add1176 = add i32 %552, %553, !dbg !140
  store i32 %add1176, i32* %t0, align 4, !dbg !140
  %554 = load i32, i32* %t0, align 4, !dbg !140
  %conv1177 = trunc i32 %554 to i8, !dbg !140
  %conv1178 = zext i8 %conv1177 to i32, !dbg !140
  %and1179 = and i32 %conv1178, 255, !dbg !140
  %idxprom1180 = sext i32 %and1179 to i64, !dbg !140
  %arrayidx1181 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1180, !dbg !140
  %555 = load i32, i32* %arrayidx1181, align 4, !dbg !140
  %556 = load i32, i32* %t0, align 4, !dbg !140
  %shr1182 = lshr i32 %556, 8, !dbg !140
  %conv1183 = trunc i32 %shr1182 to i8, !dbg !140
  %conv1184 = zext i8 %conv1183 to i32, !dbg !140
  %and1185 = and i32 %conv1184, 255, !dbg !140
  %idxprom1186 = sext i32 %and1185 to i64, !dbg !140
  %arrayidx1187 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1186, !dbg !140
  %557 = load i32, i32* %arrayidx1187, align 4, !dbg !140
  %xor1188 = xor i32 %555, %557, !dbg !140
  %558 = load i32, i32* %t0, align 4, !dbg !140
  %shr1189 = lshr i32 %558, 16, !dbg !140
  %conv1190 = trunc i32 %shr1189 to i8, !dbg !140
  %conv1191 = zext i8 %conv1190 to i32, !dbg !140
  %and1192 = and i32 %conv1191, 255, !dbg !140
  %idxprom1193 = sext i32 %and1192 to i64, !dbg !140
  %arrayidx1194 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1193, !dbg !140
  %559 = load i32, i32* %arrayidx1194, align 4, !dbg !140
  %xor1195 = xor i32 %xor1188, %559, !dbg !140
  %560 = load i32, i32* %t0, align 4, !dbg !140
  %shr1196 = lshr i32 %560, 24, !dbg !140
  %conv1197 = trunc i32 %shr1196 to i8, !dbg !140
  %conv1198 = zext i8 %conv1197 to i32, !dbg !140
  %and1199 = and i32 %conv1198, 255, !dbg !140
  %idxprom1200 = sext i32 %and1199 to i64, !dbg !140
  %arrayidx1201 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1200, !dbg !140
  %561 = load i32, i32* %arrayidx1201, align 4, !dbg !140
  %xor1202 = xor i32 %xor1195, %561, !dbg !140
  store i32 %xor1202, i32* %t0, align 4, !dbg !140
  %562 = load i32, i32* %t1, align 4, !dbg !140
  %563 = load i32, i32* %t0, align 4, !dbg !140
  %add1203 = add i32 %562, %563, !dbg !140
  store i32 %add1203, i32* %t1, align 4, !dbg !140
  %564 = load i32, i32* %t1, align 4, !dbg !140
  %conv1204 = trunc i32 %564 to i8, !dbg !140
  %conv1205 = zext i8 %conv1204 to i32, !dbg !140
  %and1206 = and i32 %conv1205, 255, !dbg !140
  %idxprom1207 = sext i32 %and1206 to i64, !dbg !140
  %arrayidx1208 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1207, !dbg !140
  %565 = load i32, i32* %arrayidx1208, align 4, !dbg !140
  %566 = load i32, i32* %t1, align 4, !dbg !140
  %shr1209 = lshr i32 %566, 8, !dbg !140
  %conv1210 = trunc i32 %shr1209 to i8, !dbg !140
  %conv1211 = zext i8 %conv1210 to i32, !dbg !140
  %and1212 = and i32 %conv1211, 255, !dbg !140
  %idxprom1213 = sext i32 %and1212 to i64, !dbg !140
  %arrayidx1214 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1213, !dbg !140
  %567 = load i32, i32* %arrayidx1214, align 4, !dbg !140
  %xor1215 = xor i32 %565, %567, !dbg !140
  %568 = load i32, i32* %t1, align 4, !dbg !140
  %shr1216 = lshr i32 %568, 16, !dbg !140
  %conv1217 = trunc i32 %shr1216 to i8, !dbg !140
  %conv1218 = zext i8 %conv1217 to i32, !dbg !140
  %and1219 = and i32 %conv1218, 255, !dbg !140
  %idxprom1220 = sext i32 %and1219 to i64, !dbg !140
  %arrayidx1221 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1220, !dbg !140
  %569 = load i32, i32* %arrayidx1221, align 4, !dbg !140
  %xor1222 = xor i32 %xor1215, %569, !dbg !140
  %570 = load i32, i32* %t1, align 4, !dbg !140
  %shr1223 = lshr i32 %570, 24, !dbg !140
  %conv1224 = trunc i32 %shr1223 to i8, !dbg !140
  %conv1225 = zext i8 %conv1224 to i32, !dbg !140
  %and1226 = and i32 %conv1225, 255, !dbg !140
  %idxprom1227 = sext i32 %and1226 to i64, !dbg !140
  %arrayidx1228 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1227, !dbg !140
  %571 = load i32, i32* %arrayidx1228, align 4, !dbg !140
  %xor1229 = xor i32 %xor1222, %571, !dbg !140
  store i32 %xor1229, i32* %t1, align 4, !dbg !140
  %572 = load i32, i32* %t0, align 4, !dbg !140
  %573 = load i32, i32* %t1, align 4, !dbg !140
  %add1230 = add i32 %572, %573, !dbg !140
  store i32 %add1230, i32* %t0, align 4, !dbg !140
  %574 = load i32, i32* %t0, align 4, !dbg !140
  %575 = load i32, i32* %x1, align 4, !dbg !140
  %xor1231 = xor i32 %575, %574, !dbg !140
  store i32 %xor1231, i32* %x1, align 4, !dbg !140
  %576 = load i32, i32* %t1, align 4, !dbg !140
  %577 = load i32, i32* %x2, align 4, !dbg !140
  %xor1232 = xor i32 %577, %576, !dbg !140
  store i32 %xor1232, i32* %x2, align 4, !dbg !140
  %578 = load i32, i32* %x1, align 4, !dbg !141
  %579 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !141
  %data1233 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %579, i32 0, i32 0, !dbg !141
  %arrayidx1234 = getelementptr inbounds [32 x i32], [32 x i32]* %data1233, i64 0, i64 26, !dbg !141
  %580 = load i32, i32* %arrayidx1234, align 4, !dbg !141
  %xor1235 = xor i32 %578, %580, !dbg !141
  store i32 %xor1235, i32* %t0, align 4, !dbg !141
  %581 = load i32, i32* %x2, align 4, !dbg !141
  %582 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !141
  %data1236 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %582, i32 0, i32 0, !dbg !141
  %arrayidx1237 = getelementptr inbounds [32 x i32], [32 x i32]* %data1236, i64 0, i64 27, !dbg !141
  %583 = load i32, i32* %arrayidx1237, align 4, !dbg !141
  %xor1238 = xor i32 %581, %583, !dbg !141
  store i32 %xor1238, i32* %t1, align 4, !dbg !141
  %584 = load i32, i32* %t0, align 4, !dbg !141
  %585 = load i32, i32* %t1, align 4, !dbg !141
  %xor1239 = xor i32 %585, %584, !dbg !141
  store i32 %xor1239, i32* %t1, align 4, !dbg !141
  %586 = load i32, i32* %t1, align 4, !dbg !141
  %conv1240 = trunc i32 %586 to i8, !dbg !141
  %conv1241 = zext i8 %conv1240 to i32, !dbg !141
  %and1242 = and i32 %conv1241, 255, !dbg !141
  %idxprom1243 = sext i32 %and1242 to i64, !dbg !141
  %arrayidx1244 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1243, !dbg !141
  %587 = load i32, i32* %arrayidx1244, align 4, !dbg !141
  %588 = load i32, i32* %t1, align 4, !dbg !141
  %shr1245 = lshr i32 %588, 8, !dbg !141
  %conv1246 = trunc i32 %shr1245 to i8, !dbg !141
  %conv1247 = zext i8 %conv1246 to i32, !dbg !141
  %and1248 = and i32 %conv1247, 255, !dbg !141
  %idxprom1249 = sext i32 %and1248 to i64, !dbg !141
  %arrayidx1250 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1249, !dbg !141
  %589 = load i32, i32* %arrayidx1250, align 4, !dbg !141
  %xor1251 = xor i32 %587, %589, !dbg !141
  %590 = load i32, i32* %t1, align 4, !dbg !141
  %shr1252 = lshr i32 %590, 16, !dbg !141
  %conv1253 = trunc i32 %shr1252 to i8, !dbg !141
  %conv1254 = zext i8 %conv1253 to i32, !dbg !141
  %and1255 = and i32 %conv1254, 255, !dbg !141
  %idxprom1256 = sext i32 %and1255 to i64, !dbg !141
  %arrayidx1257 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1256, !dbg !141
  %591 = load i32, i32* %arrayidx1257, align 4, !dbg !141
  %xor1258 = xor i32 %xor1251, %591, !dbg !141
  %592 = load i32, i32* %t1, align 4, !dbg !141
  %shr1259 = lshr i32 %592, 24, !dbg !141
  %conv1260 = trunc i32 %shr1259 to i8, !dbg !141
  %conv1261 = zext i8 %conv1260 to i32, !dbg !141
  %and1262 = and i32 %conv1261, 255, !dbg !141
  %idxprom1263 = sext i32 %and1262 to i64, !dbg !141
  %arrayidx1264 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1263, !dbg !141
  %593 = load i32, i32* %arrayidx1264, align 4, !dbg !141
  %xor1265 = xor i32 %xor1258, %593, !dbg !141
  store i32 %xor1265, i32* %t1, align 4, !dbg !141
  %594 = load i32, i32* %t0, align 4, !dbg !141
  %595 = load i32, i32* %t1, align 4, !dbg !141
  %add1266 = add i32 %594, %595, !dbg !141
  store i32 %add1266, i32* %t0, align 4, !dbg !141
  %596 = load i32, i32* %t0, align 4, !dbg !141
  %conv1267 = trunc i32 %596 to i8, !dbg !141
  %conv1268 = zext i8 %conv1267 to i32, !dbg !141
  %and1269 = and i32 %conv1268, 255, !dbg !141
  %idxprom1270 = sext i32 %and1269 to i64, !dbg !141
  %arrayidx1271 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1270, !dbg !141
  %597 = load i32, i32* %arrayidx1271, align 4, !dbg !141
  %598 = load i32, i32* %t0, align 4, !dbg !141
  %shr1272 = lshr i32 %598, 8, !dbg !141
  %conv1273 = trunc i32 %shr1272 to i8, !dbg !141
  %conv1274 = zext i8 %conv1273 to i32, !dbg !141
  %and1275 = and i32 %conv1274, 255, !dbg !141
  %idxprom1276 = sext i32 %and1275 to i64, !dbg !141
  %arrayidx1277 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1276, !dbg !141
  %599 = load i32, i32* %arrayidx1277, align 4, !dbg !141
  %xor1278 = xor i32 %597, %599, !dbg !141
  %600 = load i32, i32* %t0, align 4, !dbg !141
  %shr1279 = lshr i32 %600, 16, !dbg !141
  %conv1280 = trunc i32 %shr1279 to i8, !dbg !141
  %conv1281 = zext i8 %conv1280 to i32, !dbg !141
  %and1282 = and i32 %conv1281, 255, !dbg !141
  %idxprom1283 = sext i32 %and1282 to i64, !dbg !141
  %arrayidx1284 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1283, !dbg !141
  %601 = load i32, i32* %arrayidx1284, align 4, !dbg !141
  %xor1285 = xor i32 %xor1278, %601, !dbg !141
  %602 = load i32, i32* %t0, align 4, !dbg !141
  %shr1286 = lshr i32 %602, 24, !dbg !141
  %conv1287 = trunc i32 %shr1286 to i8, !dbg !141
  %conv1288 = zext i8 %conv1287 to i32, !dbg !141
  %and1289 = and i32 %conv1288, 255, !dbg !141
  %idxprom1290 = sext i32 %and1289 to i64, !dbg !141
  %arrayidx1291 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1290, !dbg !141
  %603 = load i32, i32* %arrayidx1291, align 4, !dbg !141
  %xor1292 = xor i32 %xor1285, %603, !dbg !141
  store i32 %xor1292, i32* %t0, align 4, !dbg !141
  %604 = load i32, i32* %t1, align 4, !dbg !141
  %605 = load i32, i32* %t0, align 4, !dbg !141
  %add1293 = add i32 %604, %605, !dbg !141
  store i32 %add1293, i32* %t1, align 4, !dbg !141
  %606 = load i32, i32* %t1, align 4, !dbg !141
  %conv1294 = trunc i32 %606 to i8, !dbg !141
  %conv1295 = zext i8 %conv1294 to i32, !dbg !141
  %and1296 = and i32 %conv1295, 255, !dbg !141
  %idxprom1297 = sext i32 %and1296 to i64, !dbg !141
  %arrayidx1298 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1297, !dbg !141
  %607 = load i32, i32* %arrayidx1298, align 4, !dbg !141
  %608 = load i32, i32* %t1, align 4, !dbg !141
  %shr1299 = lshr i32 %608, 8, !dbg !141
  %conv1300 = trunc i32 %shr1299 to i8, !dbg !141
  %conv1301 = zext i8 %conv1300 to i32, !dbg !141
  %and1302 = and i32 %conv1301, 255, !dbg !141
  %idxprom1303 = sext i32 %and1302 to i64, !dbg !141
  %arrayidx1304 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1303, !dbg !141
  %609 = load i32, i32* %arrayidx1304, align 4, !dbg !141
  %xor1305 = xor i32 %607, %609, !dbg !141
  %610 = load i32, i32* %t1, align 4, !dbg !141
  %shr1306 = lshr i32 %610, 16, !dbg !141
  %conv1307 = trunc i32 %shr1306 to i8, !dbg !141
  %conv1308 = zext i8 %conv1307 to i32, !dbg !141
  %and1309 = and i32 %conv1308, 255, !dbg !141
  %idxprom1310 = sext i32 %and1309 to i64, !dbg !141
  %arrayidx1311 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1310, !dbg !141
  %611 = load i32, i32* %arrayidx1311, align 4, !dbg !141
  %xor1312 = xor i32 %xor1305, %611, !dbg !141
  %612 = load i32, i32* %t1, align 4, !dbg !141
  %shr1313 = lshr i32 %612, 24, !dbg !141
  %conv1314 = trunc i32 %shr1313 to i8, !dbg !141
  %conv1315 = zext i8 %conv1314 to i32, !dbg !141
  %and1316 = and i32 %conv1315, 255, !dbg !141
  %idxprom1317 = sext i32 %and1316 to i64, !dbg !141
  %arrayidx1318 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1317, !dbg !141
  %613 = load i32, i32* %arrayidx1318, align 4, !dbg !141
  %xor1319 = xor i32 %xor1312, %613, !dbg !141
  store i32 %xor1319, i32* %t1, align 4, !dbg !141
  %614 = load i32, i32* %t0, align 4, !dbg !141
  %615 = load i32, i32* %t1, align 4, !dbg !141
  %add1320 = add i32 %614, %615, !dbg !141
  store i32 %add1320, i32* %t0, align 4, !dbg !141
  %616 = load i32, i32* %t0, align 4, !dbg !141
  %617 = load i32, i32* %x3, align 4, !dbg !141
  %xor1321 = xor i32 %617, %616, !dbg !141
  store i32 %xor1321, i32* %x3, align 4, !dbg !141
  %618 = load i32, i32* %t1, align 4, !dbg !141
  %619 = load i32, i32* %x4, align 4, !dbg !141
  %xor1322 = xor i32 %619, %618, !dbg !141
  store i32 %xor1322, i32* %x4, align 4, !dbg !141
  %620 = load i32, i32* %x3, align 4, !dbg !142
  %621 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !142
  %data1323 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %621, i32 0, i32 0, !dbg !142
  %arrayidx1324 = getelementptr inbounds [32 x i32], [32 x i32]* %data1323, i64 0, i64 28, !dbg !142
  %622 = load i32, i32* %arrayidx1324, align 4, !dbg !142
  %xor1325 = xor i32 %620, %622, !dbg !142
  store i32 %xor1325, i32* %t0, align 4, !dbg !142
  %623 = load i32, i32* %x4, align 4, !dbg !142
  %624 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !142
  %data1326 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %624, i32 0, i32 0, !dbg !142
  %arrayidx1327 = getelementptr inbounds [32 x i32], [32 x i32]* %data1326, i64 0, i64 29, !dbg !142
  %625 = load i32, i32* %arrayidx1327, align 4, !dbg !142
  %xor1328 = xor i32 %623, %625, !dbg !142
  store i32 %xor1328, i32* %t1, align 4, !dbg !142
  %626 = load i32, i32* %t0, align 4, !dbg !142
  %627 = load i32, i32* %t1, align 4, !dbg !142
  %xor1329 = xor i32 %627, %626, !dbg !142
  store i32 %xor1329, i32* %t1, align 4, !dbg !142
  %628 = load i32, i32* %t1, align 4, !dbg !142
  %conv1330 = trunc i32 %628 to i8, !dbg !142
  %conv1331 = zext i8 %conv1330 to i32, !dbg !142
  %and1332 = and i32 %conv1331, 255, !dbg !142
  %idxprom1333 = sext i32 %and1332 to i64, !dbg !142
  %arrayidx1334 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1333, !dbg !142
  %629 = load i32, i32* %arrayidx1334, align 4, !dbg !142
  %630 = load i32, i32* %t1, align 4, !dbg !142
  %shr1335 = lshr i32 %630, 8, !dbg !142
  %conv1336 = trunc i32 %shr1335 to i8, !dbg !142
  %conv1337 = zext i8 %conv1336 to i32, !dbg !142
  %and1338 = and i32 %conv1337, 255, !dbg !142
  %idxprom1339 = sext i32 %and1338 to i64, !dbg !142
  %arrayidx1340 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1339, !dbg !142
  %631 = load i32, i32* %arrayidx1340, align 4, !dbg !142
  %xor1341 = xor i32 %629, %631, !dbg !142
  %632 = load i32, i32* %t1, align 4, !dbg !142
  %shr1342 = lshr i32 %632, 16, !dbg !142
  %conv1343 = trunc i32 %shr1342 to i8, !dbg !142
  %conv1344 = zext i8 %conv1343 to i32, !dbg !142
  %and1345 = and i32 %conv1344, 255, !dbg !142
  %idxprom1346 = sext i32 %and1345 to i64, !dbg !142
  %arrayidx1347 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1346, !dbg !142
  %633 = load i32, i32* %arrayidx1347, align 4, !dbg !142
  %xor1348 = xor i32 %xor1341, %633, !dbg !142
  %634 = load i32, i32* %t1, align 4, !dbg !142
  %shr1349 = lshr i32 %634, 24, !dbg !142
  %conv1350 = trunc i32 %shr1349 to i8, !dbg !142
  %conv1351 = zext i8 %conv1350 to i32, !dbg !142
  %and1352 = and i32 %conv1351, 255, !dbg !142
  %idxprom1353 = sext i32 %and1352 to i64, !dbg !142
  %arrayidx1354 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1353, !dbg !142
  %635 = load i32, i32* %arrayidx1354, align 4, !dbg !142
  %xor1355 = xor i32 %xor1348, %635, !dbg !142
  store i32 %xor1355, i32* %t1, align 4, !dbg !142
  %636 = load i32, i32* %t0, align 4, !dbg !142
  %637 = load i32, i32* %t1, align 4, !dbg !142
  %add1356 = add i32 %636, %637, !dbg !142
  store i32 %add1356, i32* %t0, align 4, !dbg !142
  %638 = load i32, i32* %t0, align 4, !dbg !142
  %conv1357 = trunc i32 %638 to i8, !dbg !142
  %conv1358 = zext i8 %conv1357 to i32, !dbg !142
  %and1359 = and i32 %conv1358, 255, !dbg !142
  %idxprom1360 = sext i32 %and1359 to i64, !dbg !142
  %arrayidx1361 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1360, !dbg !142
  %639 = load i32, i32* %arrayidx1361, align 4, !dbg !142
  %640 = load i32, i32* %t0, align 4, !dbg !142
  %shr1362 = lshr i32 %640, 8, !dbg !142
  %conv1363 = trunc i32 %shr1362 to i8, !dbg !142
  %conv1364 = zext i8 %conv1363 to i32, !dbg !142
  %and1365 = and i32 %conv1364, 255, !dbg !142
  %idxprom1366 = sext i32 %and1365 to i64, !dbg !142
  %arrayidx1367 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1366, !dbg !142
  %641 = load i32, i32* %arrayidx1367, align 4, !dbg !142
  %xor1368 = xor i32 %639, %641, !dbg !142
  %642 = load i32, i32* %t0, align 4, !dbg !142
  %shr1369 = lshr i32 %642, 16, !dbg !142
  %conv1370 = trunc i32 %shr1369 to i8, !dbg !142
  %conv1371 = zext i8 %conv1370 to i32, !dbg !142
  %and1372 = and i32 %conv1371, 255, !dbg !142
  %idxprom1373 = sext i32 %and1372 to i64, !dbg !142
  %arrayidx1374 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1373, !dbg !142
  %643 = load i32, i32* %arrayidx1374, align 4, !dbg !142
  %xor1375 = xor i32 %xor1368, %643, !dbg !142
  %644 = load i32, i32* %t0, align 4, !dbg !142
  %shr1376 = lshr i32 %644, 24, !dbg !142
  %conv1377 = trunc i32 %shr1376 to i8, !dbg !142
  %conv1378 = zext i8 %conv1377 to i32, !dbg !142
  %and1379 = and i32 %conv1378, 255, !dbg !142
  %idxprom1380 = sext i32 %and1379 to i64, !dbg !142
  %arrayidx1381 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1380, !dbg !142
  %645 = load i32, i32* %arrayidx1381, align 4, !dbg !142
  %xor1382 = xor i32 %xor1375, %645, !dbg !142
  store i32 %xor1382, i32* %t0, align 4, !dbg !142
  %646 = load i32, i32* %t1, align 4, !dbg !142
  %647 = load i32, i32* %t0, align 4, !dbg !142
  %add1383 = add i32 %646, %647, !dbg !142
  store i32 %add1383, i32* %t1, align 4, !dbg !142
  %648 = load i32, i32* %t1, align 4, !dbg !142
  %conv1384 = trunc i32 %648 to i8, !dbg !142
  %conv1385 = zext i8 %conv1384 to i32, !dbg !142
  %and1386 = and i32 %conv1385, 255, !dbg !142
  %idxprom1387 = sext i32 %and1386 to i64, !dbg !142
  %arrayidx1388 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1387, !dbg !142
  %649 = load i32, i32* %arrayidx1388, align 4, !dbg !142
  %650 = load i32, i32* %t1, align 4, !dbg !142
  %shr1389 = lshr i32 %650, 8, !dbg !142
  %conv1390 = trunc i32 %shr1389 to i8, !dbg !142
  %conv1391 = zext i8 %conv1390 to i32, !dbg !142
  %and1392 = and i32 %conv1391, 255, !dbg !142
  %idxprom1393 = sext i32 %and1392 to i64, !dbg !142
  %arrayidx1394 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1393, !dbg !142
  %651 = load i32, i32* %arrayidx1394, align 4, !dbg !142
  %xor1395 = xor i32 %649, %651, !dbg !142
  %652 = load i32, i32* %t1, align 4, !dbg !142
  %shr1396 = lshr i32 %652, 16, !dbg !142
  %conv1397 = trunc i32 %shr1396 to i8, !dbg !142
  %conv1398 = zext i8 %conv1397 to i32, !dbg !142
  %and1399 = and i32 %conv1398, 255, !dbg !142
  %idxprom1400 = sext i32 %and1399 to i64, !dbg !142
  %arrayidx1401 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1400, !dbg !142
  %653 = load i32, i32* %arrayidx1401, align 4, !dbg !142
  %xor1402 = xor i32 %xor1395, %653, !dbg !142
  %654 = load i32, i32* %t1, align 4, !dbg !142
  %shr1403 = lshr i32 %654, 24, !dbg !142
  %conv1404 = trunc i32 %shr1403 to i8, !dbg !142
  %conv1405 = zext i8 %conv1404 to i32, !dbg !142
  %and1406 = and i32 %conv1405, 255, !dbg !142
  %idxprom1407 = sext i32 %and1406 to i64, !dbg !142
  %arrayidx1408 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1407, !dbg !142
  %655 = load i32, i32* %arrayidx1408, align 4, !dbg !142
  %xor1409 = xor i32 %xor1402, %655, !dbg !142
  store i32 %xor1409, i32* %t1, align 4, !dbg !142
  %656 = load i32, i32* %t0, align 4, !dbg !142
  %657 = load i32, i32* %t1, align 4, !dbg !142
  %add1410 = add i32 %656, %657, !dbg !142
  store i32 %add1410, i32* %t0, align 4, !dbg !142
  %658 = load i32, i32* %t0, align 4, !dbg !142
  %659 = load i32, i32* %x1, align 4, !dbg !142
  %xor1411 = xor i32 %659, %658, !dbg !142
  store i32 %xor1411, i32* %x1, align 4, !dbg !142
  %660 = load i32, i32* %t1, align 4, !dbg !142
  %661 = load i32, i32* %x2, align 4, !dbg !142
  %xor1412 = xor i32 %661, %660, !dbg !142
  store i32 %xor1412, i32* %x2, align 4, !dbg !142
  %662 = load i32, i32* %x1, align 4, !dbg !143
  %663 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !143
  %data1413 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %663, i32 0, i32 0, !dbg !143
  %arrayidx1414 = getelementptr inbounds [32 x i32], [32 x i32]* %data1413, i64 0, i64 30, !dbg !143
  %664 = load i32, i32* %arrayidx1414, align 4, !dbg !143
  %xor1415 = xor i32 %662, %664, !dbg !143
  store i32 %xor1415, i32* %t0, align 4, !dbg !143
  %665 = load i32, i32* %x2, align 4, !dbg !143
  %666 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !143
  %data1416 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %666, i32 0, i32 0, !dbg !143
  %arrayidx1417 = getelementptr inbounds [32 x i32], [32 x i32]* %data1416, i64 0, i64 31, !dbg !143
  %667 = load i32, i32* %arrayidx1417, align 4, !dbg !143
  %xor1418 = xor i32 %665, %667, !dbg !143
  store i32 %xor1418, i32* %t1, align 4, !dbg !143
  %668 = load i32, i32* %t0, align 4, !dbg !143
  %669 = load i32, i32* %t1, align 4, !dbg !143
  %xor1419 = xor i32 %669, %668, !dbg !143
  store i32 %xor1419, i32* %t1, align 4, !dbg !143
  %670 = load i32, i32* %t1, align 4, !dbg !143
  %conv1420 = trunc i32 %670 to i8, !dbg !143
  %conv1421 = zext i8 %conv1420 to i32, !dbg !143
  %and1422 = and i32 %conv1421, 255, !dbg !143
  %idxprom1423 = sext i32 %and1422 to i64, !dbg !143
  %arrayidx1424 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1423, !dbg !143
  %671 = load i32, i32* %arrayidx1424, align 4, !dbg !143
  %672 = load i32, i32* %t1, align 4, !dbg !143
  %shr1425 = lshr i32 %672, 8, !dbg !143
  %conv1426 = trunc i32 %shr1425 to i8, !dbg !143
  %conv1427 = zext i8 %conv1426 to i32, !dbg !143
  %and1428 = and i32 %conv1427, 255, !dbg !143
  %idxprom1429 = sext i32 %and1428 to i64, !dbg !143
  %arrayidx1430 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1429, !dbg !143
  %673 = load i32, i32* %arrayidx1430, align 4, !dbg !143
  %xor1431 = xor i32 %671, %673, !dbg !143
  %674 = load i32, i32* %t1, align 4, !dbg !143
  %shr1432 = lshr i32 %674, 16, !dbg !143
  %conv1433 = trunc i32 %shr1432 to i8, !dbg !143
  %conv1434 = zext i8 %conv1433 to i32, !dbg !143
  %and1435 = and i32 %conv1434, 255, !dbg !143
  %idxprom1436 = sext i32 %and1435 to i64, !dbg !143
  %arrayidx1437 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1436, !dbg !143
  %675 = load i32, i32* %arrayidx1437, align 4, !dbg !143
  %xor1438 = xor i32 %xor1431, %675, !dbg !143
  %676 = load i32, i32* %t1, align 4, !dbg !143
  %shr1439 = lshr i32 %676, 24, !dbg !143
  %conv1440 = trunc i32 %shr1439 to i8, !dbg !143
  %conv1441 = zext i8 %conv1440 to i32, !dbg !143
  %and1442 = and i32 %conv1441, 255, !dbg !143
  %idxprom1443 = sext i32 %and1442 to i64, !dbg !143
  %arrayidx1444 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1443, !dbg !143
  %677 = load i32, i32* %arrayidx1444, align 4, !dbg !143
  %xor1445 = xor i32 %xor1438, %677, !dbg !143
  store i32 %xor1445, i32* %t1, align 4, !dbg !143
  %678 = load i32, i32* %t0, align 4, !dbg !143
  %679 = load i32, i32* %t1, align 4, !dbg !143
  %add1446 = add i32 %678, %679, !dbg !143
  store i32 %add1446, i32* %t0, align 4, !dbg !143
  %680 = load i32, i32* %t0, align 4, !dbg !143
  %conv1447 = trunc i32 %680 to i8, !dbg !143
  %conv1448 = zext i8 %conv1447 to i32, !dbg !143
  %and1449 = and i32 %conv1448, 255, !dbg !143
  %idxprom1450 = sext i32 %and1449 to i64, !dbg !143
  %arrayidx1451 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1450, !dbg !143
  %681 = load i32, i32* %arrayidx1451, align 4, !dbg !143
  %682 = load i32, i32* %t0, align 4, !dbg !143
  %shr1452 = lshr i32 %682, 8, !dbg !143
  %conv1453 = trunc i32 %shr1452 to i8, !dbg !143
  %conv1454 = zext i8 %conv1453 to i32, !dbg !143
  %and1455 = and i32 %conv1454, 255, !dbg !143
  %idxprom1456 = sext i32 %and1455 to i64, !dbg !143
  %arrayidx1457 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1456, !dbg !143
  %683 = load i32, i32* %arrayidx1457, align 4, !dbg !143
  %xor1458 = xor i32 %681, %683, !dbg !143
  %684 = load i32, i32* %t0, align 4, !dbg !143
  %shr1459 = lshr i32 %684, 16, !dbg !143
  %conv1460 = trunc i32 %shr1459 to i8, !dbg !143
  %conv1461 = zext i8 %conv1460 to i32, !dbg !143
  %and1462 = and i32 %conv1461, 255, !dbg !143
  %idxprom1463 = sext i32 %and1462 to i64, !dbg !143
  %arrayidx1464 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1463, !dbg !143
  %685 = load i32, i32* %arrayidx1464, align 4, !dbg !143
  %xor1465 = xor i32 %xor1458, %685, !dbg !143
  %686 = load i32, i32* %t0, align 4, !dbg !143
  %shr1466 = lshr i32 %686, 24, !dbg !143
  %conv1467 = trunc i32 %shr1466 to i8, !dbg !143
  %conv1468 = zext i8 %conv1467 to i32, !dbg !143
  %and1469 = and i32 %conv1468, 255, !dbg !143
  %idxprom1470 = sext i32 %and1469 to i64, !dbg !143
  %arrayidx1471 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1470, !dbg !143
  %687 = load i32, i32* %arrayidx1471, align 4, !dbg !143
  %xor1472 = xor i32 %xor1465, %687, !dbg !143
  store i32 %xor1472, i32* %t0, align 4, !dbg !143
  %688 = load i32, i32* %t1, align 4, !dbg !143
  %689 = load i32, i32* %t0, align 4, !dbg !143
  %add1473 = add i32 %688, %689, !dbg !143
  store i32 %add1473, i32* %t1, align 4, !dbg !143
  %690 = load i32, i32* %t1, align 4, !dbg !143
  %conv1474 = trunc i32 %690 to i8, !dbg !143
  %conv1475 = zext i8 %conv1474 to i32, !dbg !143
  %and1476 = and i32 %conv1475, 255, !dbg !143
  %idxprom1477 = sext i32 %and1476 to i64, !dbg !143
  %arrayidx1478 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1477, !dbg !143
  %691 = load i32, i32* %arrayidx1478, align 4, !dbg !143
  %692 = load i32, i32* %t1, align 4, !dbg !143
  %shr1479 = lshr i32 %692, 8, !dbg !143
  %conv1480 = trunc i32 %shr1479 to i8, !dbg !143
  %conv1481 = zext i8 %conv1480 to i32, !dbg !143
  %and1482 = and i32 %conv1481, 255, !dbg !143
  %idxprom1483 = sext i32 %and1482 to i64, !dbg !143
  %arrayidx1484 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1483, !dbg !143
  %693 = load i32, i32* %arrayidx1484, align 4, !dbg !143
  %xor1485 = xor i32 %691, %693, !dbg !143
  %694 = load i32, i32* %t1, align 4, !dbg !143
  %shr1486 = lshr i32 %694, 16, !dbg !143
  %conv1487 = trunc i32 %shr1486 to i8, !dbg !143
  %conv1488 = zext i8 %conv1487 to i32, !dbg !143
  %and1489 = and i32 %conv1488, 255, !dbg !143
  %idxprom1490 = sext i32 %and1489 to i64, !dbg !143
  %arrayidx1491 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1490, !dbg !143
  %695 = load i32, i32* %arrayidx1491, align 4, !dbg !143
  %xor1492 = xor i32 %xor1485, %695, !dbg !143
  %696 = load i32, i32* %t1, align 4, !dbg !143
  %shr1493 = lshr i32 %696, 24, !dbg !143
  %conv1494 = trunc i32 %shr1493 to i8, !dbg !143
  %conv1495 = zext i8 %conv1494 to i32, !dbg !143
  %and1496 = and i32 %conv1495, 255, !dbg !143
  %idxprom1497 = sext i32 %and1496 to i64, !dbg !143
  %arrayidx1498 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1497, !dbg !143
  %697 = load i32, i32* %arrayidx1498, align 4, !dbg !143
  %xor1499 = xor i32 %xor1492, %697, !dbg !143
  store i32 %xor1499, i32* %t1, align 4, !dbg !143
  %698 = load i32, i32* %t0, align 4, !dbg !143
  %699 = load i32, i32* %t1, align 4, !dbg !143
  %add1500 = add i32 %698, %699, !dbg !143
  store i32 %add1500, i32* %t0, align 4, !dbg !143
  %700 = load i32, i32* %t0, align 4, !dbg !143
  %701 = load i32, i32* %x3, align 4, !dbg !143
  %xor1501 = xor i32 %701, %700, !dbg !143
  store i32 %xor1501, i32* %x3, align 4, !dbg !143
  %702 = load i32, i32* %t1, align 4, !dbg !143
  %703 = load i32, i32* %x4, align 4, !dbg !143
  %xor1502 = xor i32 %703, %702, !dbg !143
  store i32 %xor1502, i32* %x4, align 4, !dbg !143
  %704 = load i32, i32* %x3, align 4, !dbg !144
  %shr1503 = lshr i32 %704, 24, !dbg !144
  %conv1504 = trunc i32 %shr1503 to i8, !dbg !144
  %conv1505 = zext i8 %conv1504 to i32, !dbg !144
  %and1506 = and i32 %conv1505, 255, !dbg !144
  %conv1507 = trunc i32 %and1506 to i8, !dbg !144
  %705 = load i8*, i8** %d.addr, align 8, !dbg !144
  %add.ptr1508 = getelementptr inbounds i8, i8* %705, i64 0, !dbg !144
  store i8 %conv1507, i8* %add.ptr1508, align 1, !dbg !144
  %706 = load i32, i32* %x3, align 4, !dbg !144
  %shr1509 = lshr i32 %706, 16, !dbg !144
  %conv1510 = trunc i32 %shr1509 to i8, !dbg !144
  %conv1511 = zext i8 %conv1510 to i32, !dbg !144
  %and1512 = and i32 %conv1511, 255, !dbg !144
  %conv1513 = trunc i32 %and1512 to i8, !dbg !144
  %707 = load i8*, i8** %d.addr, align 8, !dbg !144
  %add.ptr1514 = getelementptr inbounds i8, i8* %707, i64 1, !dbg !144
  store i8 %conv1513, i8* %add.ptr1514, align 1, !dbg !144
  %708 = load i32, i32* %x3, align 4, !dbg !144
  %shr1515 = lshr i32 %708, 8, !dbg !144
  %conv1516 = trunc i32 %shr1515 to i8, !dbg !144
  %conv1517 = zext i8 %conv1516 to i32, !dbg !144
  %and1518 = and i32 %conv1517, 255, !dbg !144
  %conv1519 = trunc i32 %and1518 to i8, !dbg !144
  %709 = load i8*, i8** %d.addr, align 8, !dbg !144
  %add.ptr1520 = getelementptr inbounds i8, i8* %709, i64 2, !dbg !144
  store i8 %conv1519, i8* %add.ptr1520, align 1, !dbg !144
  %710 = load i32, i32* %x3, align 4, !dbg !144
  %conv1521 = trunc i32 %710 to i8, !dbg !144
  %conv1522 = zext i8 %conv1521 to i32, !dbg !144
  %and1523 = and i32 %conv1522, 255, !dbg !144
  %conv1524 = trunc i32 %and1523 to i8, !dbg !144
  %711 = load i8*, i8** %d.addr, align 8, !dbg !144
  %add.ptr1525 = getelementptr inbounds i8, i8* %711, i64 3, !dbg !144
  store i8 %conv1524, i8* %add.ptr1525, align 1, !dbg !144
  %712 = load i32, i32* %x4, align 4, !dbg !145
  %shr1526 = lshr i32 %712, 24, !dbg !145
  %conv1527 = trunc i32 %shr1526 to i8, !dbg !145
  %conv1528 = zext i8 %conv1527 to i32, !dbg !145
  %and1529 = and i32 %conv1528, 255, !dbg !145
  %conv1530 = trunc i32 %and1529 to i8, !dbg !145
  %713 = load i8*, i8** %d.addr, align 8, !dbg !145
  %add.ptr1531 = getelementptr inbounds i8, i8* %713, i64 4, !dbg !145
  %add.ptr1532 = getelementptr inbounds i8, i8* %add.ptr1531, i64 0, !dbg !145
  store i8 %conv1530, i8* %add.ptr1532, align 1, !dbg !145
  %714 = load i32, i32* %x4, align 4, !dbg !145
  %shr1533 = lshr i32 %714, 16, !dbg !145
  %conv1534 = trunc i32 %shr1533 to i8, !dbg !145
  %conv1535 = zext i8 %conv1534 to i32, !dbg !145
  %and1536 = and i32 %conv1535, 255, !dbg !145
  %conv1537 = trunc i32 %and1536 to i8, !dbg !145
  %715 = load i8*, i8** %d.addr, align 8, !dbg !145
  %add.ptr1538 = getelementptr inbounds i8, i8* %715, i64 4, !dbg !145
  %add.ptr1539 = getelementptr inbounds i8, i8* %add.ptr1538, i64 1, !dbg !145
  store i8 %conv1537, i8* %add.ptr1539, align 1, !dbg !145
  %716 = load i32, i32* %x4, align 4, !dbg !145
  %shr1540 = lshr i32 %716, 8, !dbg !145
  %conv1541 = trunc i32 %shr1540 to i8, !dbg !145
  %conv1542 = zext i8 %conv1541 to i32, !dbg !145
  %and1543 = and i32 %conv1542, 255, !dbg !145
  %conv1544 = trunc i32 %and1543 to i8, !dbg !145
  %717 = load i8*, i8** %d.addr, align 8, !dbg !145
  %add.ptr1545 = getelementptr inbounds i8, i8* %717, i64 4, !dbg !145
  %add.ptr1546 = getelementptr inbounds i8, i8* %add.ptr1545, i64 2, !dbg !145
  store i8 %conv1544, i8* %add.ptr1546, align 1, !dbg !145
  %718 = load i32, i32* %x4, align 4, !dbg !145
  %conv1547 = trunc i32 %718 to i8, !dbg !145
  %conv1548 = zext i8 %conv1547 to i32, !dbg !145
  %and1549 = and i32 %conv1548, 255, !dbg !145
  %conv1550 = trunc i32 %and1549 to i8, !dbg !145
  %719 = load i8*, i8** %d.addr, align 8, !dbg !145
  %add.ptr1551 = getelementptr inbounds i8, i8* %719, i64 4, !dbg !145
  %add.ptr1552 = getelementptr inbounds i8, i8* %add.ptr1551, i64 3, !dbg !145
  store i8 %conv1550, i8* %add.ptr1552, align 1, !dbg !145
  %720 = load i32, i32* %x1, align 4, !dbg !146
  %shr1553 = lshr i32 %720, 24, !dbg !146
  %conv1554 = trunc i32 %shr1553 to i8, !dbg !146
  %conv1555 = zext i8 %conv1554 to i32, !dbg !146
  %and1556 = and i32 %conv1555, 255, !dbg !146
  %conv1557 = trunc i32 %and1556 to i8, !dbg !146
  %721 = load i8*, i8** %d.addr, align 8, !dbg !146
  %add.ptr1558 = getelementptr inbounds i8, i8* %721, i64 8, !dbg !146
  %add.ptr1559 = getelementptr inbounds i8, i8* %add.ptr1558, i64 0, !dbg !146
  store i8 %conv1557, i8* %add.ptr1559, align 1, !dbg !146
  %722 = load i32, i32* %x1, align 4, !dbg !146
  %shr1560 = lshr i32 %722, 16, !dbg !146
  %conv1561 = trunc i32 %shr1560 to i8, !dbg !146
  %conv1562 = zext i8 %conv1561 to i32, !dbg !146
  %and1563 = and i32 %conv1562, 255, !dbg !146
  %conv1564 = trunc i32 %and1563 to i8, !dbg !146
  %723 = load i8*, i8** %d.addr, align 8, !dbg !146
  %add.ptr1565 = getelementptr inbounds i8, i8* %723, i64 8, !dbg !146
  %add.ptr1566 = getelementptr inbounds i8, i8* %add.ptr1565, i64 1, !dbg !146
  store i8 %conv1564, i8* %add.ptr1566, align 1, !dbg !146
  %724 = load i32, i32* %x1, align 4, !dbg !146
  %shr1567 = lshr i32 %724, 8, !dbg !146
  %conv1568 = trunc i32 %shr1567 to i8, !dbg !146
  %conv1569 = zext i8 %conv1568 to i32, !dbg !146
  %and1570 = and i32 %conv1569, 255, !dbg !146
  %conv1571 = trunc i32 %and1570 to i8, !dbg !146
  %725 = load i8*, i8** %d.addr, align 8, !dbg !146
  %add.ptr1572 = getelementptr inbounds i8, i8* %725, i64 8, !dbg !146
  %add.ptr1573 = getelementptr inbounds i8, i8* %add.ptr1572, i64 2, !dbg !146
  store i8 %conv1571, i8* %add.ptr1573, align 1, !dbg !146
  %726 = load i32, i32* %x1, align 4, !dbg !146
  %conv1574 = trunc i32 %726 to i8, !dbg !146
  %conv1575 = zext i8 %conv1574 to i32, !dbg !146
  %and1576 = and i32 %conv1575, 255, !dbg !146
  %conv1577 = trunc i32 %and1576 to i8, !dbg !146
  %727 = load i8*, i8** %d.addr, align 8, !dbg !146
  %add.ptr1578 = getelementptr inbounds i8, i8* %727, i64 8, !dbg !146
  %add.ptr1579 = getelementptr inbounds i8, i8* %add.ptr1578, i64 3, !dbg !146
  store i8 %conv1577, i8* %add.ptr1579, align 1, !dbg !146
  %728 = load i32, i32* %x2, align 4, !dbg !147
  %shr1580 = lshr i32 %728, 24, !dbg !147
  %conv1581 = trunc i32 %shr1580 to i8, !dbg !147
  %conv1582 = zext i8 %conv1581 to i32, !dbg !147
  %and1583 = and i32 %conv1582, 255, !dbg !147
  %conv1584 = trunc i32 %and1583 to i8, !dbg !147
  %729 = load i8*, i8** %d.addr, align 8, !dbg !147
  %add.ptr1585 = getelementptr inbounds i8, i8* %729, i64 12, !dbg !147
  %add.ptr1586 = getelementptr inbounds i8, i8* %add.ptr1585, i64 0, !dbg !147
  store i8 %conv1584, i8* %add.ptr1586, align 1, !dbg !147
  %730 = load i32, i32* %x2, align 4, !dbg !147
  %shr1587 = lshr i32 %730, 16, !dbg !147
  %conv1588 = trunc i32 %shr1587 to i8, !dbg !147
  %conv1589 = zext i8 %conv1588 to i32, !dbg !147
  %and1590 = and i32 %conv1589, 255, !dbg !147
  %conv1591 = trunc i32 %and1590 to i8, !dbg !147
  %731 = load i8*, i8** %d.addr, align 8, !dbg !147
  %add.ptr1592 = getelementptr inbounds i8, i8* %731, i64 12, !dbg !147
  %add.ptr1593 = getelementptr inbounds i8, i8* %add.ptr1592, i64 1, !dbg !147
  store i8 %conv1591, i8* %add.ptr1593, align 1, !dbg !147
  %732 = load i32, i32* %x2, align 4, !dbg !147
  %shr1594 = lshr i32 %732, 8, !dbg !147
  %conv1595 = trunc i32 %shr1594 to i8, !dbg !147
  %conv1596 = zext i8 %conv1595 to i32, !dbg !147
  %and1597 = and i32 %conv1596, 255, !dbg !147
  %conv1598 = trunc i32 %and1597 to i8, !dbg !147
  %733 = load i8*, i8** %d.addr, align 8, !dbg !147
  %add.ptr1599 = getelementptr inbounds i8, i8* %733, i64 12, !dbg !147
  %add.ptr1600 = getelementptr inbounds i8, i8* %add.ptr1599, i64 2, !dbg !147
  store i8 %conv1598, i8* %add.ptr1600, align 1, !dbg !147
  %734 = load i32, i32* %x2, align 4, !dbg !147
  %conv1601 = trunc i32 %734 to i8, !dbg !147
  %conv1602 = zext i8 %conv1601 to i32, !dbg !147
  %and1603 = and i32 %conv1602, 255, !dbg !147
  %conv1604 = trunc i32 %and1603 to i8, !dbg !147
  %735 = load i8*, i8** %d.addr, align 8, !dbg !147
  %add.ptr1605 = getelementptr inbounds i8, i8* %735, i64 12, !dbg !147
  %add.ptr1606 = getelementptr inbounds i8, i8* %add.ptr1605, i64 3, !dbg !147
  store i8 %conv1604, i8* %add.ptr1606, align 1, !dbg !147
  ret void, !dbg !148
}

; Function Attrs: nounwind willreturn
declare void @llvm.var.annotation(i8*, i8*, i8*, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @SEED_decrypt(i8* %s, i8* %d, %struct.seed_key_st* %ks) #0 !dbg !149 {
entry:
  %s.addr = alloca i8*, align 8
  %d.addr = alloca i8*, align 8
  %ks.addr = alloca %struct.seed_key_st*, align 8
  %x1 = alloca i32, align 4
  %x2 = alloca i32, align 4
  %x3 = alloca i32, align 4
  %x4 = alloca i32, align 4
  %t0 = alloca i32, align 4
  %t1 = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !150, metadata !DIExpression()), !dbg !151
  store i8* %d, i8** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr, metadata !152, metadata !DIExpression()), !dbg !153
  store %struct.seed_key_st* %ks, %struct.seed_key_st** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seed_key_st** %ks.addr, metadata !154, metadata !DIExpression()), !dbg !155
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !156, metadata !DIExpression()), !dbg !157
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !158, metadata !DIExpression()), !dbg !159
  call void @llvm.dbg.declare(metadata i32* %x3, metadata !160, metadata !DIExpression()), !dbg !161
  call void @llvm.dbg.declare(metadata i32* %x4, metadata !162, metadata !DIExpression()), !dbg !163
  call void @llvm.dbg.declare(metadata i32* %t0, metadata !164, metadata !DIExpression()), !dbg !165
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !166, metadata !DIExpression()), !dbg !167
  %0 = load i8*, i8** %s.addr, align 8, !dbg !168
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !168
  %1 = load i8, i8* %arrayidx, align 1, !dbg !168
  %conv = zext i8 %1 to i32, !dbg !168
  %shl = shl i32 %conv, 24, !dbg !168
  %2 = load i8*, i8** %s.addr, align 8, !dbg !168
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !168
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !168
  %conv2 = zext i8 %3 to i32, !dbg !168
  %shl3 = shl i32 %conv2, 16, !dbg !168
  %or = or i32 %shl, %shl3, !dbg !168
  %4 = load i8*, i8** %s.addr, align 8, !dbg !168
  %arrayidx4 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !168
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !168
  %conv5 = zext i8 %5 to i32, !dbg !168
  %shl6 = shl i32 %conv5, 8, !dbg !168
  %or7 = or i32 %or, %shl6, !dbg !168
  %6 = load i8*, i8** %s.addr, align 8, !dbg !168
  %arrayidx8 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !168
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !168
  %conv9 = zext i8 %7 to i32, !dbg !168
  %or10 = or i32 %or7, %conv9, !dbg !168
  store i32 %or10, i32* %x1, align 4, !dbg !168
  %8 = load i8*, i8** %s.addr, align 8, !dbg !169
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 4, !dbg !169
  %arrayidx11 = getelementptr inbounds i8, i8* %add.ptr, i64 0, !dbg !169
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !169
  %conv12 = zext i8 %9 to i32, !dbg !169
  %shl13 = shl i32 %conv12, 24, !dbg !169
  %10 = load i8*, i8** %s.addr, align 8, !dbg !169
  %add.ptr14 = getelementptr inbounds i8, i8* %10, i64 4, !dbg !169
  %arrayidx15 = getelementptr inbounds i8, i8* %add.ptr14, i64 1, !dbg !169
  %11 = load i8, i8* %arrayidx15, align 1, !dbg !169
  %conv16 = zext i8 %11 to i32, !dbg !169
  %shl17 = shl i32 %conv16, 16, !dbg !169
  %or18 = or i32 %shl13, %shl17, !dbg !169
  %12 = load i8*, i8** %s.addr, align 8, !dbg !169
  %add.ptr19 = getelementptr inbounds i8, i8* %12, i64 4, !dbg !169
  %arrayidx20 = getelementptr inbounds i8, i8* %add.ptr19, i64 2, !dbg !169
  %13 = load i8, i8* %arrayidx20, align 1, !dbg !169
  %conv21 = zext i8 %13 to i32, !dbg !169
  %shl22 = shl i32 %conv21, 8, !dbg !169
  %or23 = or i32 %or18, %shl22, !dbg !169
  %14 = load i8*, i8** %s.addr, align 8, !dbg !169
  %add.ptr24 = getelementptr inbounds i8, i8* %14, i64 4, !dbg !169
  %arrayidx25 = getelementptr inbounds i8, i8* %add.ptr24, i64 3, !dbg !169
  %15 = load i8, i8* %arrayidx25, align 1, !dbg !169
  %conv26 = zext i8 %15 to i32, !dbg !169
  %or27 = or i32 %or23, %conv26, !dbg !169
  store i32 %or27, i32* %x2, align 4, !dbg !169
  %16 = load i8*, i8** %s.addr, align 8, !dbg !170
  %add.ptr28 = getelementptr inbounds i8, i8* %16, i64 8, !dbg !170
  %arrayidx29 = getelementptr inbounds i8, i8* %add.ptr28, i64 0, !dbg !170
  %17 = load i8, i8* %arrayidx29, align 1, !dbg !170
  %conv30 = zext i8 %17 to i32, !dbg !170
  %shl31 = shl i32 %conv30, 24, !dbg !170
  %18 = load i8*, i8** %s.addr, align 8, !dbg !170
  %add.ptr32 = getelementptr inbounds i8, i8* %18, i64 8, !dbg !170
  %arrayidx33 = getelementptr inbounds i8, i8* %add.ptr32, i64 1, !dbg !170
  %19 = load i8, i8* %arrayidx33, align 1, !dbg !170
  %conv34 = zext i8 %19 to i32, !dbg !170
  %shl35 = shl i32 %conv34, 16, !dbg !170
  %or36 = or i32 %shl31, %shl35, !dbg !170
  %20 = load i8*, i8** %s.addr, align 8, !dbg !170
  %add.ptr37 = getelementptr inbounds i8, i8* %20, i64 8, !dbg !170
  %arrayidx38 = getelementptr inbounds i8, i8* %add.ptr37, i64 2, !dbg !170
  %21 = load i8, i8* %arrayidx38, align 1, !dbg !170
  %conv39 = zext i8 %21 to i32, !dbg !170
  %shl40 = shl i32 %conv39, 8, !dbg !170
  %or41 = or i32 %or36, %shl40, !dbg !170
  %22 = load i8*, i8** %s.addr, align 8, !dbg !170
  %add.ptr42 = getelementptr inbounds i8, i8* %22, i64 8, !dbg !170
  %arrayidx43 = getelementptr inbounds i8, i8* %add.ptr42, i64 3, !dbg !170
  %23 = load i8, i8* %arrayidx43, align 1, !dbg !170
  %conv44 = zext i8 %23 to i32, !dbg !170
  %or45 = or i32 %or41, %conv44, !dbg !170
  store i32 %or45, i32* %x3, align 4, !dbg !170
  %24 = load i8*, i8** %s.addr, align 8, !dbg !171
  %add.ptr46 = getelementptr inbounds i8, i8* %24, i64 12, !dbg !171
  %arrayidx47 = getelementptr inbounds i8, i8* %add.ptr46, i64 0, !dbg !171
  %25 = load i8, i8* %arrayidx47, align 1, !dbg !171
  %conv48 = zext i8 %25 to i32, !dbg !171
  %shl49 = shl i32 %conv48, 24, !dbg !171
  %26 = load i8*, i8** %s.addr, align 8, !dbg !171
  %add.ptr50 = getelementptr inbounds i8, i8* %26, i64 12, !dbg !171
  %arrayidx51 = getelementptr inbounds i8, i8* %add.ptr50, i64 1, !dbg !171
  %27 = load i8, i8* %arrayidx51, align 1, !dbg !171
  %conv52 = zext i8 %27 to i32, !dbg !171
  %shl53 = shl i32 %conv52, 16, !dbg !171
  %or54 = or i32 %shl49, %shl53, !dbg !171
  %28 = load i8*, i8** %s.addr, align 8, !dbg !171
  %add.ptr55 = getelementptr inbounds i8, i8* %28, i64 12, !dbg !171
  %arrayidx56 = getelementptr inbounds i8, i8* %add.ptr55, i64 2, !dbg !171
  %29 = load i8, i8* %arrayidx56, align 1, !dbg !171
  %conv57 = zext i8 %29 to i32, !dbg !171
  %shl58 = shl i32 %conv57, 8, !dbg !171
  %or59 = or i32 %or54, %shl58, !dbg !171
  %30 = load i8*, i8** %s.addr, align 8, !dbg !171
  %add.ptr60 = getelementptr inbounds i8, i8* %30, i64 12, !dbg !171
  %arrayidx61 = getelementptr inbounds i8, i8* %add.ptr60, i64 3, !dbg !171
  %31 = load i8, i8* %arrayidx61, align 1, !dbg !171
  %conv62 = zext i8 %31 to i32, !dbg !171
  %or63 = or i32 %or59, %conv62, !dbg !171
  store i32 %or63, i32* %x4, align 4, !dbg !171
  %32 = load i32, i32* %x3, align 4, !dbg !172
  %33 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !172
  %data = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %33, i32 0, i32 0, !dbg !172
  %arrayidx64 = getelementptr inbounds [32 x i32], [32 x i32]* %data, i64 0, i64 30, !dbg !172
  %34 = load i32, i32* %arrayidx64, align 4, !dbg !172
  %xor = xor i32 %32, %34, !dbg !172
  store i32 %xor, i32* %t0, align 4, !dbg !172
  %35 = load i32, i32* %x4, align 4, !dbg !172
  %36 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !172
  %data65 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %36, i32 0, i32 0, !dbg !172
  %arrayidx66 = getelementptr inbounds [32 x i32], [32 x i32]* %data65, i64 0, i64 31, !dbg !172
  %37 = load i32, i32* %arrayidx66, align 4, !dbg !172
  %xor67 = xor i32 %35, %37, !dbg !172
  store i32 %xor67, i32* %t1, align 4, !dbg !172
  %38 = load i32, i32* %t0, align 4, !dbg !172
  %39 = load i32, i32* %t1, align 4, !dbg !172
  %xor68 = xor i32 %39, %38, !dbg !172
  store i32 %xor68, i32* %t1, align 4, !dbg !172
  %40 = load i32, i32* %t1, align 4, !dbg !172
  %conv69 = trunc i32 %40 to i8, !dbg !172
  %conv70 = zext i8 %conv69 to i32, !dbg !172
  %and = and i32 %conv70, 255, !dbg !172
  %idxprom = sext i32 %and to i64, !dbg !172
  %arrayidx71 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom, !dbg !172
  %41 = load i32, i32* %arrayidx71, align 4, !dbg !172
  %42 = load i32, i32* %t1, align 4, !dbg !172
  %shr = lshr i32 %42, 8, !dbg !172
  %conv72 = trunc i32 %shr to i8, !dbg !172
  %conv73 = zext i8 %conv72 to i32, !dbg !172
  %and74 = and i32 %conv73, 255, !dbg !172
  %idxprom75 = sext i32 %and74 to i64, !dbg !172
  %arrayidx76 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom75, !dbg !172
  %43 = load i32, i32* %arrayidx76, align 4, !dbg !172
  %xor77 = xor i32 %41, %43, !dbg !172
  %44 = load i32, i32* %t1, align 4, !dbg !172
  %shr78 = lshr i32 %44, 16, !dbg !172
  %conv79 = trunc i32 %shr78 to i8, !dbg !172
  %conv80 = zext i8 %conv79 to i32, !dbg !172
  %and81 = and i32 %conv80, 255, !dbg !172
  %idxprom82 = sext i32 %and81 to i64, !dbg !172
  %arrayidx83 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom82, !dbg !172
  %45 = load i32, i32* %arrayidx83, align 4, !dbg !172
  %xor84 = xor i32 %xor77, %45, !dbg !172
  %46 = load i32, i32* %t1, align 4, !dbg !172
  %shr85 = lshr i32 %46, 24, !dbg !172
  %conv86 = trunc i32 %shr85 to i8, !dbg !172
  %conv87 = zext i8 %conv86 to i32, !dbg !172
  %and88 = and i32 %conv87, 255, !dbg !172
  %idxprom89 = sext i32 %and88 to i64, !dbg !172
  %arrayidx90 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom89, !dbg !172
  %47 = load i32, i32* %arrayidx90, align 4, !dbg !172
  %xor91 = xor i32 %xor84, %47, !dbg !172
  store i32 %xor91, i32* %t1, align 4, !dbg !172
  %48 = load i32, i32* %t0, align 4, !dbg !172
  %49 = load i32, i32* %t1, align 4, !dbg !172
  %add = add i32 %48, %49, !dbg !172
  store i32 %add, i32* %t0, align 4, !dbg !172
  %50 = load i32, i32* %t0, align 4, !dbg !172
  %conv92 = trunc i32 %50 to i8, !dbg !172
  %conv93 = zext i8 %conv92 to i32, !dbg !172
  %and94 = and i32 %conv93, 255, !dbg !172
  %idxprom95 = sext i32 %and94 to i64, !dbg !172
  %arrayidx96 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom95, !dbg !172
  %51 = load i32, i32* %arrayidx96, align 4, !dbg !172
  %52 = load i32, i32* %t0, align 4, !dbg !172
  %shr97 = lshr i32 %52, 8, !dbg !172
  %conv98 = trunc i32 %shr97 to i8, !dbg !172
  %conv99 = zext i8 %conv98 to i32, !dbg !172
  %and100 = and i32 %conv99, 255, !dbg !172
  %idxprom101 = sext i32 %and100 to i64, !dbg !172
  %arrayidx102 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom101, !dbg !172
  %53 = load i32, i32* %arrayidx102, align 4, !dbg !172
  %xor103 = xor i32 %51, %53, !dbg !172
  %54 = load i32, i32* %t0, align 4, !dbg !172
  %shr104 = lshr i32 %54, 16, !dbg !172
  %conv105 = trunc i32 %shr104 to i8, !dbg !172
  %conv106 = zext i8 %conv105 to i32, !dbg !172
  %and107 = and i32 %conv106, 255, !dbg !172
  %idxprom108 = sext i32 %and107 to i64, !dbg !172
  %arrayidx109 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom108, !dbg !172
  %55 = load i32, i32* %arrayidx109, align 4, !dbg !172
  %xor110 = xor i32 %xor103, %55, !dbg !172
  %56 = load i32, i32* %t0, align 4, !dbg !172
  %shr111 = lshr i32 %56, 24, !dbg !172
  %conv112 = trunc i32 %shr111 to i8, !dbg !172
  %conv113 = zext i8 %conv112 to i32, !dbg !172
  %and114 = and i32 %conv113, 255, !dbg !172
  %idxprom115 = sext i32 %and114 to i64, !dbg !172
  %arrayidx116 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom115, !dbg !172
  %57 = load i32, i32* %arrayidx116, align 4, !dbg !172
  %xor117 = xor i32 %xor110, %57, !dbg !172
  store i32 %xor117, i32* %t0, align 4, !dbg !172
  %58 = load i32, i32* %t1, align 4, !dbg !172
  %59 = load i32, i32* %t0, align 4, !dbg !172
  %add118 = add i32 %58, %59, !dbg !172
  store i32 %add118, i32* %t1, align 4, !dbg !172
  %60 = load i32, i32* %t1, align 4, !dbg !172
  %conv119 = trunc i32 %60 to i8, !dbg !172
  %conv120 = zext i8 %conv119 to i32, !dbg !172
  %and121 = and i32 %conv120, 255, !dbg !172
  %idxprom122 = sext i32 %and121 to i64, !dbg !172
  %arrayidx123 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom122, !dbg !172
  %61 = load i32, i32* %arrayidx123, align 4, !dbg !172
  %62 = load i32, i32* %t1, align 4, !dbg !172
  %shr124 = lshr i32 %62, 8, !dbg !172
  %conv125 = trunc i32 %shr124 to i8, !dbg !172
  %conv126 = zext i8 %conv125 to i32, !dbg !172
  %and127 = and i32 %conv126, 255, !dbg !172
  %idxprom128 = sext i32 %and127 to i64, !dbg !172
  %arrayidx129 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom128, !dbg !172
  %63 = load i32, i32* %arrayidx129, align 4, !dbg !172
  %xor130 = xor i32 %61, %63, !dbg !172
  %64 = load i32, i32* %t1, align 4, !dbg !172
  %shr131 = lshr i32 %64, 16, !dbg !172
  %conv132 = trunc i32 %shr131 to i8, !dbg !172
  %conv133 = zext i8 %conv132 to i32, !dbg !172
  %and134 = and i32 %conv133, 255, !dbg !172
  %idxprom135 = sext i32 %and134 to i64, !dbg !172
  %arrayidx136 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom135, !dbg !172
  %65 = load i32, i32* %arrayidx136, align 4, !dbg !172
  %xor137 = xor i32 %xor130, %65, !dbg !172
  %66 = load i32, i32* %t1, align 4, !dbg !172
  %shr138 = lshr i32 %66, 24, !dbg !172
  %conv139 = trunc i32 %shr138 to i8, !dbg !172
  %conv140 = zext i8 %conv139 to i32, !dbg !172
  %and141 = and i32 %conv140, 255, !dbg !172
  %idxprom142 = sext i32 %and141 to i64, !dbg !172
  %arrayidx143 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom142, !dbg !172
  %67 = load i32, i32* %arrayidx143, align 4, !dbg !172
  %xor144 = xor i32 %xor137, %67, !dbg !172
  store i32 %xor144, i32* %t1, align 4, !dbg !172
  %68 = load i32, i32* %t0, align 4, !dbg !172
  %69 = load i32, i32* %t1, align 4, !dbg !172
  %add145 = add i32 %68, %69, !dbg !172
  store i32 %add145, i32* %t0, align 4, !dbg !172
  %70 = load i32, i32* %t0, align 4, !dbg !172
  %71 = load i32, i32* %x1, align 4, !dbg !172
  %xor146 = xor i32 %71, %70, !dbg !172
  store i32 %xor146, i32* %x1, align 4, !dbg !172
  %72 = load i32, i32* %t1, align 4, !dbg !172
  %73 = load i32, i32* %x2, align 4, !dbg !172
  %xor147 = xor i32 %73, %72, !dbg !172
  store i32 %xor147, i32* %x2, align 4, !dbg !172
  %74 = load i32, i32* %x1, align 4, !dbg !173
  %75 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !173
  %data148 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %75, i32 0, i32 0, !dbg !173
  %arrayidx149 = getelementptr inbounds [32 x i32], [32 x i32]* %data148, i64 0, i64 28, !dbg !173
  %76 = load i32, i32* %arrayidx149, align 4, !dbg !173
  %xor150 = xor i32 %74, %76, !dbg !173
  store i32 %xor150, i32* %t0, align 4, !dbg !173
  %77 = load i32, i32* %x2, align 4, !dbg !173
  %78 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !173
  %data151 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %78, i32 0, i32 0, !dbg !173
  %arrayidx152 = getelementptr inbounds [32 x i32], [32 x i32]* %data151, i64 0, i64 29, !dbg !173
  %79 = load i32, i32* %arrayidx152, align 4, !dbg !173
  %xor153 = xor i32 %77, %79, !dbg !173
  store i32 %xor153, i32* %t1, align 4, !dbg !173
  %80 = load i32, i32* %t0, align 4, !dbg !173
  %81 = load i32, i32* %t1, align 4, !dbg !173
  %xor154 = xor i32 %81, %80, !dbg !173
  store i32 %xor154, i32* %t1, align 4, !dbg !173
  %82 = load i32, i32* %t1, align 4, !dbg !173
  %conv155 = trunc i32 %82 to i8, !dbg !173
  %conv156 = zext i8 %conv155 to i32, !dbg !173
  %and157 = and i32 %conv156, 255, !dbg !173
  %idxprom158 = sext i32 %and157 to i64, !dbg !173
  %arrayidx159 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom158, !dbg !173
  %83 = load i32, i32* %arrayidx159, align 4, !dbg !173
  %84 = load i32, i32* %t1, align 4, !dbg !173
  %shr160 = lshr i32 %84, 8, !dbg !173
  %conv161 = trunc i32 %shr160 to i8, !dbg !173
  %conv162 = zext i8 %conv161 to i32, !dbg !173
  %and163 = and i32 %conv162, 255, !dbg !173
  %idxprom164 = sext i32 %and163 to i64, !dbg !173
  %arrayidx165 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom164, !dbg !173
  %85 = load i32, i32* %arrayidx165, align 4, !dbg !173
  %xor166 = xor i32 %83, %85, !dbg !173
  %86 = load i32, i32* %t1, align 4, !dbg !173
  %shr167 = lshr i32 %86, 16, !dbg !173
  %conv168 = trunc i32 %shr167 to i8, !dbg !173
  %conv169 = zext i8 %conv168 to i32, !dbg !173
  %and170 = and i32 %conv169, 255, !dbg !173
  %idxprom171 = sext i32 %and170 to i64, !dbg !173
  %arrayidx172 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom171, !dbg !173
  %87 = load i32, i32* %arrayidx172, align 4, !dbg !173
  %xor173 = xor i32 %xor166, %87, !dbg !173
  %88 = load i32, i32* %t1, align 4, !dbg !173
  %shr174 = lshr i32 %88, 24, !dbg !173
  %conv175 = trunc i32 %shr174 to i8, !dbg !173
  %conv176 = zext i8 %conv175 to i32, !dbg !173
  %and177 = and i32 %conv176, 255, !dbg !173
  %idxprom178 = sext i32 %and177 to i64, !dbg !173
  %arrayidx179 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom178, !dbg !173
  %89 = load i32, i32* %arrayidx179, align 4, !dbg !173
  %xor180 = xor i32 %xor173, %89, !dbg !173
  store i32 %xor180, i32* %t1, align 4, !dbg !173
  %90 = load i32, i32* %t0, align 4, !dbg !173
  %91 = load i32, i32* %t1, align 4, !dbg !173
  %add181 = add i32 %90, %91, !dbg !173
  store i32 %add181, i32* %t0, align 4, !dbg !173
  %92 = load i32, i32* %t0, align 4, !dbg !173
  %conv182 = trunc i32 %92 to i8, !dbg !173
  %conv183 = zext i8 %conv182 to i32, !dbg !173
  %and184 = and i32 %conv183, 255, !dbg !173
  %idxprom185 = sext i32 %and184 to i64, !dbg !173
  %arrayidx186 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom185, !dbg !173
  %93 = load i32, i32* %arrayidx186, align 4, !dbg !173
  %94 = load i32, i32* %t0, align 4, !dbg !173
  %shr187 = lshr i32 %94, 8, !dbg !173
  %conv188 = trunc i32 %shr187 to i8, !dbg !173
  %conv189 = zext i8 %conv188 to i32, !dbg !173
  %and190 = and i32 %conv189, 255, !dbg !173
  %idxprom191 = sext i32 %and190 to i64, !dbg !173
  %arrayidx192 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom191, !dbg !173
  %95 = load i32, i32* %arrayidx192, align 4, !dbg !173
  %xor193 = xor i32 %93, %95, !dbg !173
  %96 = load i32, i32* %t0, align 4, !dbg !173
  %shr194 = lshr i32 %96, 16, !dbg !173
  %conv195 = trunc i32 %shr194 to i8, !dbg !173
  %conv196 = zext i8 %conv195 to i32, !dbg !173
  %and197 = and i32 %conv196, 255, !dbg !173
  %idxprom198 = sext i32 %and197 to i64, !dbg !173
  %arrayidx199 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom198, !dbg !173
  %97 = load i32, i32* %arrayidx199, align 4, !dbg !173
  %xor200 = xor i32 %xor193, %97, !dbg !173
  %98 = load i32, i32* %t0, align 4, !dbg !173
  %shr201 = lshr i32 %98, 24, !dbg !173
  %conv202 = trunc i32 %shr201 to i8, !dbg !173
  %conv203 = zext i8 %conv202 to i32, !dbg !173
  %and204 = and i32 %conv203, 255, !dbg !173
  %idxprom205 = sext i32 %and204 to i64, !dbg !173
  %arrayidx206 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom205, !dbg !173
  %99 = load i32, i32* %arrayidx206, align 4, !dbg !173
  %xor207 = xor i32 %xor200, %99, !dbg !173
  store i32 %xor207, i32* %t0, align 4, !dbg !173
  %100 = load i32, i32* %t1, align 4, !dbg !173
  %101 = load i32, i32* %t0, align 4, !dbg !173
  %add208 = add i32 %100, %101, !dbg !173
  store i32 %add208, i32* %t1, align 4, !dbg !173
  %102 = load i32, i32* %t1, align 4, !dbg !173
  %conv209 = trunc i32 %102 to i8, !dbg !173
  %conv210 = zext i8 %conv209 to i32, !dbg !173
  %and211 = and i32 %conv210, 255, !dbg !173
  %idxprom212 = sext i32 %and211 to i64, !dbg !173
  %arrayidx213 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom212, !dbg !173
  %103 = load i32, i32* %arrayidx213, align 4, !dbg !173
  %104 = load i32, i32* %t1, align 4, !dbg !173
  %shr214 = lshr i32 %104, 8, !dbg !173
  %conv215 = trunc i32 %shr214 to i8, !dbg !173
  %conv216 = zext i8 %conv215 to i32, !dbg !173
  %and217 = and i32 %conv216, 255, !dbg !173
  %idxprom218 = sext i32 %and217 to i64, !dbg !173
  %arrayidx219 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom218, !dbg !173
  %105 = load i32, i32* %arrayidx219, align 4, !dbg !173
  %xor220 = xor i32 %103, %105, !dbg !173
  %106 = load i32, i32* %t1, align 4, !dbg !173
  %shr221 = lshr i32 %106, 16, !dbg !173
  %conv222 = trunc i32 %shr221 to i8, !dbg !173
  %conv223 = zext i8 %conv222 to i32, !dbg !173
  %and224 = and i32 %conv223, 255, !dbg !173
  %idxprom225 = sext i32 %and224 to i64, !dbg !173
  %arrayidx226 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom225, !dbg !173
  %107 = load i32, i32* %arrayidx226, align 4, !dbg !173
  %xor227 = xor i32 %xor220, %107, !dbg !173
  %108 = load i32, i32* %t1, align 4, !dbg !173
  %shr228 = lshr i32 %108, 24, !dbg !173
  %conv229 = trunc i32 %shr228 to i8, !dbg !173
  %conv230 = zext i8 %conv229 to i32, !dbg !173
  %and231 = and i32 %conv230, 255, !dbg !173
  %idxprom232 = sext i32 %and231 to i64, !dbg !173
  %arrayidx233 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom232, !dbg !173
  %109 = load i32, i32* %arrayidx233, align 4, !dbg !173
  %xor234 = xor i32 %xor227, %109, !dbg !173
  store i32 %xor234, i32* %t1, align 4, !dbg !173
  %110 = load i32, i32* %t0, align 4, !dbg !173
  %111 = load i32, i32* %t1, align 4, !dbg !173
  %add235 = add i32 %110, %111, !dbg !173
  store i32 %add235, i32* %t0, align 4, !dbg !173
  %112 = load i32, i32* %t0, align 4, !dbg !173
  %113 = load i32, i32* %x3, align 4, !dbg !173
  %xor236 = xor i32 %113, %112, !dbg !173
  store i32 %xor236, i32* %x3, align 4, !dbg !173
  %114 = load i32, i32* %t1, align 4, !dbg !173
  %115 = load i32, i32* %x4, align 4, !dbg !173
  %xor237 = xor i32 %115, %114, !dbg !173
  store i32 %xor237, i32* %x4, align 4, !dbg !173
  %116 = load i32, i32* %x3, align 4, !dbg !174
  %117 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !174
  %data238 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %117, i32 0, i32 0, !dbg !174
  %arrayidx239 = getelementptr inbounds [32 x i32], [32 x i32]* %data238, i64 0, i64 26, !dbg !174
  %118 = load i32, i32* %arrayidx239, align 4, !dbg !174
  %xor240 = xor i32 %116, %118, !dbg !174
  store i32 %xor240, i32* %t0, align 4, !dbg !174
  %119 = load i32, i32* %x4, align 4, !dbg !174
  %120 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !174
  %data241 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %120, i32 0, i32 0, !dbg !174
  %arrayidx242 = getelementptr inbounds [32 x i32], [32 x i32]* %data241, i64 0, i64 27, !dbg !174
  %121 = load i32, i32* %arrayidx242, align 4, !dbg !174
  %xor243 = xor i32 %119, %121, !dbg !174
  store i32 %xor243, i32* %t1, align 4, !dbg !174
  %122 = load i32, i32* %t0, align 4, !dbg !174
  %123 = load i32, i32* %t1, align 4, !dbg !174
  %xor244 = xor i32 %123, %122, !dbg !174
  store i32 %xor244, i32* %t1, align 4, !dbg !174
  %124 = load i32, i32* %t1, align 4, !dbg !174
  %conv245 = trunc i32 %124 to i8, !dbg !174
  %conv246 = zext i8 %conv245 to i32, !dbg !174
  %and247 = and i32 %conv246, 255, !dbg !174
  %idxprom248 = sext i32 %and247 to i64, !dbg !174
  %arrayidx249 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom248, !dbg !174
  %125 = load i32, i32* %arrayidx249, align 4, !dbg !174
  %126 = load i32, i32* %t1, align 4, !dbg !174
  %shr250 = lshr i32 %126, 8, !dbg !174
  %conv251 = trunc i32 %shr250 to i8, !dbg !174
  %conv252 = zext i8 %conv251 to i32, !dbg !174
  %and253 = and i32 %conv252, 255, !dbg !174
  %idxprom254 = sext i32 %and253 to i64, !dbg !174
  %arrayidx255 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom254, !dbg !174
  %127 = load i32, i32* %arrayidx255, align 4, !dbg !174
  %xor256 = xor i32 %125, %127, !dbg !174
  %128 = load i32, i32* %t1, align 4, !dbg !174
  %shr257 = lshr i32 %128, 16, !dbg !174
  %conv258 = trunc i32 %shr257 to i8, !dbg !174
  %conv259 = zext i8 %conv258 to i32, !dbg !174
  %and260 = and i32 %conv259, 255, !dbg !174
  %idxprom261 = sext i32 %and260 to i64, !dbg !174
  %arrayidx262 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom261, !dbg !174
  %129 = load i32, i32* %arrayidx262, align 4, !dbg !174
  %xor263 = xor i32 %xor256, %129, !dbg !174
  %130 = load i32, i32* %t1, align 4, !dbg !174
  %shr264 = lshr i32 %130, 24, !dbg !174
  %conv265 = trunc i32 %shr264 to i8, !dbg !174
  %conv266 = zext i8 %conv265 to i32, !dbg !174
  %and267 = and i32 %conv266, 255, !dbg !174
  %idxprom268 = sext i32 %and267 to i64, !dbg !174
  %arrayidx269 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom268, !dbg !174
  %131 = load i32, i32* %arrayidx269, align 4, !dbg !174
  %xor270 = xor i32 %xor263, %131, !dbg !174
  store i32 %xor270, i32* %t1, align 4, !dbg !174
  %132 = load i32, i32* %t0, align 4, !dbg !174
  %133 = load i32, i32* %t1, align 4, !dbg !174
  %add271 = add i32 %132, %133, !dbg !174
  store i32 %add271, i32* %t0, align 4, !dbg !174
  %134 = load i32, i32* %t0, align 4, !dbg !174
  %conv272 = trunc i32 %134 to i8, !dbg !174
  %conv273 = zext i8 %conv272 to i32, !dbg !174
  %and274 = and i32 %conv273, 255, !dbg !174
  %idxprom275 = sext i32 %and274 to i64, !dbg !174
  %arrayidx276 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom275, !dbg !174
  %135 = load i32, i32* %arrayidx276, align 4, !dbg !174
  %136 = load i32, i32* %t0, align 4, !dbg !174
  %shr277 = lshr i32 %136, 8, !dbg !174
  %conv278 = trunc i32 %shr277 to i8, !dbg !174
  %conv279 = zext i8 %conv278 to i32, !dbg !174
  %and280 = and i32 %conv279, 255, !dbg !174
  %idxprom281 = sext i32 %and280 to i64, !dbg !174
  %arrayidx282 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom281, !dbg !174
  %137 = load i32, i32* %arrayidx282, align 4, !dbg !174
  %xor283 = xor i32 %135, %137, !dbg !174
  %138 = load i32, i32* %t0, align 4, !dbg !174
  %shr284 = lshr i32 %138, 16, !dbg !174
  %conv285 = trunc i32 %shr284 to i8, !dbg !174
  %conv286 = zext i8 %conv285 to i32, !dbg !174
  %and287 = and i32 %conv286, 255, !dbg !174
  %idxprom288 = sext i32 %and287 to i64, !dbg !174
  %arrayidx289 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom288, !dbg !174
  %139 = load i32, i32* %arrayidx289, align 4, !dbg !174
  %xor290 = xor i32 %xor283, %139, !dbg !174
  %140 = load i32, i32* %t0, align 4, !dbg !174
  %shr291 = lshr i32 %140, 24, !dbg !174
  %conv292 = trunc i32 %shr291 to i8, !dbg !174
  %conv293 = zext i8 %conv292 to i32, !dbg !174
  %and294 = and i32 %conv293, 255, !dbg !174
  %idxprom295 = sext i32 %and294 to i64, !dbg !174
  %arrayidx296 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom295, !dbg !174
  %141 = load i32, i32* %arrayidx296, align 4, !dbg !174
  %xor297 = xor i32 %xor290, %141, !dbg !174
  store i32 %xor297, i32* %t0, align 4, !dbg !174
  %142 = load i32, i32* %t1, align 4, !dbg !174
  %143 = load i32, i32* %t0, align 4, !dbg !174
  %add298 = add i32 %142, %143, !dbg !174
  store i32 %add298, i32* %t1, align 4, !dbg !174
  %144 = load i32, i32* %t1, align 4, !dbg !174
  %conv299 = trunc i32 %144 to i8, !dbg !174
  %conv300 = zext i8 %conv299 to i32, !dbg !174
  %and301 = and i32 %conv300, 255, !dbg !174
  %idxprom302 = sext i32 %and301 to i64, !dbg !174
  %arrayidx303 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom302, !dbg !174
  %145 = load i32, i32* %arrayidx303, align 4, !dbg !174
  %146 = load i32, i32* %t1, align 4, !dbg !174
  %shr304 = lshr i32 %146, 8, !dbg !174
  %conv305 = trunc i32 %shr304 to i8, !dbg !174
  %conv306 = zext i8 %conv305 to i32, !dbg !174
  %and307 = and i32 %conv306, 255, !dbg !174
  %idxprom308 = sext i32 %and307 to i64, !dbg !174
  %arrayidx309 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom308, !dbg !174
  %147 = load i32, i32* %arrayidx309, align 4, !dbg !174
  %xor310 = xor i32 %145, %147, !dbg !174
  %148 = load i32, i32* %t1, align 4, !dbg !174
  %shr311 = lshr i32 %148, 16, !dbg !174
  %conv312 = trunc i32 %shr311 to i8, !dbg !174
  %conv313 = zext i8 %conv312 to i32, !dbg !174
  %and314 = and i32 %conv313, 255, !dbg !174
  %idxprom315 = sext i32 %and314 to i64, !dbg !174
  %arrayidx316 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom315, !dbg !174
  %149 = load i32, i32* %arrayidx316, align 4, !dbg !174
  %xor317 = xor i32 %xor310, %149, !dbg !174
  %150 = load i32, i32* %t1, align 4, !dbg !174
  %shr318 = lshr i32 %150, 24, !dbg !174
  %conv319 = trunc i32 %shr318 to i8, !dbg !174
  %conv320 = zext i8 %conv319 to i32, !dbg !174
  %and321 = and i32 %conv320, 255, !dbg !174
  %idxprom322 = sext i32 %and321 to i64, !dbg !174
  %arrayidx323 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom322, !dbg !174
  %151 = load i32, i32* %arrayidx323, align 4, !dbg !174
  %xor324 = xor i32 %xor317, %151, !dbg !174
  store i32 %xor324, i32* %t1, align 4, !dbg !174
  %152 = load i32, i32* %t0, align 4, !dbg !174
  %153 = load i32, i32* %t1, align 4, !dbg !174
  %add325 = add i32 %152, %153, !dbg !174
  store i32 %add325, i32* %t0, align 4, !dbg !174
  %154 = load i32, i32* %t0, align 4, !dbg !174
  %155 = load i32, i32* %x1, align 4, !dbg !174
  %xor326 = xor i32 %155, %154, !dbg !174
  store i32 %xor326, i32* %x1, align 4, !dbg !174
  %156 = load i32, i32* %t1, align 4, !dbg !174
  %157 = load i32, i32* %x2, align 4, !dbg !174
  %xor327 = xor i32 %157, %156, !dbg !174
  store i32 %xor327, i32* %x2, align 4, !dbg !174
  %158 = load i32, i32* %x1, align 4, !dbg !175
  %159 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !175
  %data328 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %159, i32 0, i32 0, !dbg !175
  %arrayidx329 = getelementptr inbounds [32 x i32], [32 x i32]* %data328, i64 0, i64 24, !dbg !175
  %160 = load i32, i32* %arrayidx329, align 4, !dbg !175
  %xor330 = xor i32 %158, %160, !dbg !175
  store i32 %xor330, i32* %t0, align 4, !dbg !175
  %161 = load i32, i32* %x2, align 4, !dbg !175
  %162 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !175
  %data331 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %162, i32 0, i32 0, !dbg !175
  %arrayidx332 = getelementptr inbounds [32 x i32], [32 x i32]* %data331, i64 0, i64 25, !dbg !175
  %163 = load i32, i32* %arrayidx332, align 4, !dbg !175
  %xor333 = xor i32 %161, %163, !dbg !175
  store i32 %xor333, i32* %t1, align 4, !dbg !175
  %164 = load i32, i32* %t0, align 4, !dbg !175
  %165 = load i32, i32* %t1, align 4, !dbg !175
  %xor334 = xor i32 %165, %164, !dbg !175
  store i32 %xor334, i32* %t1, align 4, !dbg !175
  %166 = load i32, i32* %t1, align 4, !dbg !175
  %conv335 = trunc i32 %166 to i8, !dbg !175
  %conv336 = zext i8 %conv335 to i32, !dbg !175
  %and337 = and i32 %conv336, 255, !dbg !175
  %idxprom338 = sext i32 %and337 to i64, !dbg !175
  %arrayidx339 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom338, !dbg !175
  %167 = load i32, i32* %arrayidx339, align 4, !dbg !175
  %168 = load i32, i32* %t1, align 4, !dbg !175
  %shr340 = lshr i32 %168, 8, !dbg !175
  %conv341 = trunc i32 %shr340 to i8, !dbg !175
  %conv342 = zext i8 %conv341 to i32, !dbg !175
  %and343 = and i32 %conv342, 255, !dbg !175
  %idxprom344 = sext i32 %and343 to i64, !dbg !175
  %arrayidx345 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom344, !dbg !175
  %169 = load i32, i32* %arrayidx345, align 4, !dbg !175
  %xor346 = xor i32 %167, %169, !dbg !175
  %170 = load i32, i32* %t1, align 4, !dbg !175
  %shr347 = lshr i32 %170, 16, !dbg !175
  %conv348 = trunc i32 %shr347 to i8, !dbg !175
  %conv349 = zext i8 %conv348 to i32, !dbg !175
  %and350 = and i32 %conv349, 255, !dbg !175
  %idxprom351 = sext i32 %and350 to i64, !dbg !175
  %arrayidx352 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom351, !dbg !175
  %171 = load i32, i32* %arrayidx352, align 4, !dbg !175
  %xor353 = xor i32 %xor346, %171, !dbg !175
  %172 = load i32, i32* %t1, align 4, !dbg !175
  %shr354 = lshr i32 %172, 24, !dbg !175
  %conv355 = trunc i32 %shr354 to i8, !dbg !175
  %conv356 = zext i8 %conv355 to i32, !dbg !175
  %and357 = and i32 %conv356, 255, !dbg !175
  %idxprom358 = sext i32 %and357 to i64, !dbg !175
  %arrayidx359 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom358, !dbg !175
  %173 = load i32, i32* %arrayidx359, align 4, !dbg !175
  %xor360 = xor i32 %xor353, %173, !dbg !175
  store i32 %xor360, i32* %t1, align 4, !dbg !175
  %174 = load i32, i32* %t0, align 4, !dbg !175
  %175 = load i32, i32* %t1, align 4, !dbg !175
  %add361 = add i32 %174, %175, !dbg !175
  store i32 %add361, i32* %t0, align 4, !dbg !175
  %176 = load i32, i32* %t0, align 4, !dbg !175
  %conv362 = trunc i32 %176 to i8, !dbg !175
  %conv363 = zext i8 %conv362 to i32, !dbg !175
  %and364 = and i32 %conv363, 255, !dbg !175
  %idxprom365 = sext i32 %and364 to i64, !dbg !175
  %arrayidx366 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom365, !dbg !175
  %177 = load i32, i32* %arrayidx366, align 4, !dbg !175
  %178 = load i32, i32* %t0, align 4, !dbg !175
  %shr367 = lshr i32 %178, 8, !dbg !175
  %conv368 = trunc i32 %shr367 to i8, !dbg !175
  %conv369 = zext i8 %conv368 to i32, !dbg !175
  %and370 = and i32 %conv369, 255, !dbg !175
  %idxprom371 = sext i32 %and370 to i64, !dbg !175
  %arrayidx372 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom371, !dbg !175
  %179 = load i32, i32* %arrayidx372, align 4, !dbg !175
  %xor373 = xor i32 %177, %179, !dbg !175
  %180 = load i32, i32* %t0, align 4, !dbg !175
  %shr374 = lshr i32 %180, 16, !dbg !175
  %conv375 = trunc i32 %shr374 to i8, !dbg !175
  %conv376 = zext i8 %conv375 to i32, !dbg !175
  %and377 = and i32 %conv376, 255, !dbg !175
  %idxprom378 = sext i32 %and377 to i64, !dbg !175
  %arrayidx379 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom378, !dbg !175
  %181 = load i32, i32* %arrayidx379, align 4, !dbg !175
  %xor380 = xor i32 %xor373, %181, !dbg !175
  %182 = load i32, i32* %t0, align 4, !dbg !175
  %shr381 = lshr i32 %182, 24, !dbg !175
  %conv382 = trunc i32 %shr381 to i8, !dbg !175
  %conv383 = zext i8 %conv382 to i32, !dbg !175
  %and384 = and i32 %conv383, 255, !dbg !175
  %idxprom385 = sext i32 %and384 to i64, !dbg !175
  %arrayidx386 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom385, !dbg !175
  %183 = load i32, i32* %arrayidx386, align 4, !dbg !175
  %xor387 = xor i32 %xor380, %183, !dbg !175
  store i32 %xor387, i32* %t0, align 4, !dbg !175
  %184 = load i32, i32* %t1, align 4, !dbg !175
  %185 = load i32, i32* %t0, align 4, !dbg !175
  %add388 = add i32 %184, %185, !dbg !175
  store i32 %add388, i32* %t1, align 4, !dbg !175
  %186 = load i32, i32* %t1, align 4, !dbg !175
  %conv389 = trunc i32 %186 to i8, !dbg !175
  %conv390 = zext i8 %conv389 to i32, !dbg !175
  %and391 = and i32 %conv390, 255, !dbg !175
  %idxprom392 = sext i32 %and391 to i64, !dbg !175
  %arrayidx393 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom392, !dbg !175
  %187 = load i32, i32* %arrayidx393, align 4, !dbg !175
  %188 = load i32, i32* %t1, align 4, !dbg !175
  %shr394 = lshr i32 %188, 8, !dbg !175
  %conv395 = trunc i32 %shr394 to i8, !dbg !175
  %conv396 = zext i8 %conv395 to i32, !dbg !175
  %and397 = and i32 %conv396, 255, !dbg !175
  %idxprom398 = sext i32 %and397 to i64, !dbg !175
  %arrayidx399 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom398, !dbg !175
  %189 = load i32, i32* %arrayidx399, align 4, !dbg !175
  %xor400 = xor i32 %187, %189, !dbg !175
  %190 = load i32, i32* %t1, align 4, !dbg !175
  %shr401 = lshr i32 %190, 16, !dbg !175
  %conv402 = trunc i32 %shr401 to i8, !dbg !175
  %conv403 = zext i8 %conv402 to i32, !dbg !175
  %and404 = and i32 %conv403, 255, !dbg !175
  %idxprom405 = sext i32 %and404 to i64, !dbg !175
  %arrayidx406 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom405, !dbg !175
  %191 = load i32, i32* %arrayidx406, align 4, !dbg !175
  %xor407 = xor i32 %xor400, %191, !dbg !175
  %192 = load i32, i32* %t1, align 4, !dbg !175
  %shr408 = lshr i32 %192, 24, !dbg !175
  %conv409 = trunc i32 %shr408 to i8, !dbg !175
  %conv410 = zext i8 %conv409 to i32, !dbg !175
  %and411 = and i32 %conv410, 255, !dbg !175
  %idxprom412 = sext i32 %and411 to i64, !dbg !175
  %arrayidx413 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom412, !dbg !175
  %193 = load i32, i32* %arrayidx413, align 4, !dbg !175
  %xor414 = xor i32 %xor407, %193, !dbg !175
  store i32 %xor414, i32* %t1, align 4, !dbg !175
  %194 = load i32, i32* %t0, align 4, !dbg !175
  %195 = load i32, i32* %t1, align 4, !dbg !175
  %add415 = add i32 %194, %195, !dbg !175
  store i32 %add415, i32* %t0, align 4, !dbg !175
  %196 = load i32, i32* %t0, align 4, !dbg !175
  %197 = load i32, i32* %x3, align 4, !dbg !175
  %xor416 = xor i32 %197, %196, !dbg !175
  store i32 %xor416, i32* %x3, align 4, !dbg !175
  %198 = load i32, i32* %t1, align 4, !dbg !175
  %199 = load i32, i32* %x4, align 4, !dbg !175
  %xor417 = xor i32 %199, %198, !dbg !175
  store i32 %xor417, i32* %x4, align 4, !dbg !175
  %200 = load i32, i32* %x3, align 4, !dbg !176
  %201 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !176
  %data418 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %201, i32 0, i32 0, !dbg !176
  %arrayidx419 = getelementptr inbounds [32 x i32], [32 x i32]* %data418, i64 0, i64 22, !dbg !176
  %202 = load i32, i32* %arrayidx419, align 4, !dbg !176
  %xor420 = xor i32 %200, %202, !dbg !176
  store i32 %xor420, i32* %t0, align 4, !dbg !176
  %203 = load i32, i32* %x4, align 4, !dbg !176
  %204 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !176
  %data421 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %204, i32 0, i32 0, !dbg !176
  %arrayidx422 = getelementptr inbounds [32 x i32], [32 x i32]* %data421, i64 0, i64 23, !dbg !176
  %205 = load i32, i32* %arrayidx422, align 4, !dbg !176
  %xor423 = xor i32 %203, %205, !dbg !176
  store i32 %xor423, i32* %t1, align 4, !dbg !176
  %206 = load i32, i32* %t0, align 4, !dbg !176
  %207 = load i32, i32* %t1, align 4, !dbg !176
  %xor424 = xor i32 %207, %206, !dbg !176
  store i32 %xor424, i32* %t1, align 4, !dbg !176
  %208 = load i32, i32* %t1, align 4, !dbg !176
  %conv425 = trunc i32 %208 to i8, !dbg !176
  %conv426 = zext i8 %conv425 to i32, !dbg !176
  %and427 = and i32 %conv426, 255, !dbg !176
  %idxprom428 = sext i32 %and427 to i64, !dbg !176
  %arrayidx429 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom428, !dbg !176
  %209 = load i32, i32* %arrayidx429, align 4, !dbg !176
  %210 = load i32, i32* %t1, align 4, !dbg !176
  %shr430 = lshr i32 %210, 8, !dbg !176
  %conv431 = trunc i32 %shr430 to i8, !dbg !176
  %conv432 = zext i8 %conv431 to i32, !dbg !176
  %and433 = and i32 %conv432, 255, !dbg !176
  %idxprom434 = sext i32 %and433 to i64, !dbg !176
  %arrayidx435 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom434, !dbg !176
  %211 = load i32, i32* %arrayidx435, align 4, !dbg !176
  %xor436 = xor i32 %209, %211, !dbg !176
  %212 = load i32, i32* %t1, align 4, !dbg !176
  %shr437 = lshr i32 %212, 16, !dbg !176
  %conv438 = trunc i32 %shr437 to i8, !dbg !176
  %conv439 = zext i8 %conv438 to i32, !dbg !176
  %and440 = and i32 %conv439, 255, !dbg !176
  %idxprom441 = sext i32 %and440 to i64, !dbg !176
  %arrayidx442 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom441, !dbg !176
  %213 = load i32, i32* %arrayidx442, align 4, !dbg !176
  %xor443 = xor i32 %xor436, %213, !dbg !176
  %214 = load i32, i32* %t1, align 4, !dbg !176
  %shr444 = lshr i32 %214, 24, !dbg !176
  %conv445 = trunc i32 %shr444 to i8, !dbg !176
  %conv446 = zext i8 %conv445 to i32, !dbg !176
  %and447 = and i32 %conv446, 255, !dbg !176
  %idxprom448 = sext i32 %and447 to i64, !dbg !176
  %arrayidx449 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom448, !dbg !176
  %215 = load i32, i32* %arrayidx449, align 4, !dbg !176
  %xor450 = xor i32 %xor443, %215, !dbg !176
  store i32 %xor450, i32* %t1, align 4, !dbg !176
  %216 = load i32, i32* %t0, align 4, !dbg !176
  %217 = load i32, i32* %t1, align 4, !dbg !176
  %add451 = add i32 %216, %217, !dbg !176
  store i32 %add451, i32* %t0, align 4, !dbg !176
  %218 = load i32, i32* %t0, align 4, !dbg !176
  %conv452 = trunc i32 %218 to i8, !dbg !176
  %conv453 = zext i8 %conv452 to i32, !dbg !176
  %and454 = and i32 %conv453, 255, !dbg !176
  %idxprom455 = sext i32 %and454 to i64, !dbg !176
  %arrayidx456 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom455, !dbg !176
  %219 = load i32, i32* %arrayidx456, align 4, !dbg !176
  %220 = load i32, i32* %t0, align 4, !dbg !176
  %shr457 = lshr i32 %220, 8, !dbg !176
  %conv458 = trunc i32 %shr457 to i8, !dbg !176
  %conv459 = zext i8 %conv458 to i32, !dbg !176
  %and460 = and i32 %conv459, 255, !dbg !176
  %idxprom461 = sext i32 %and460 to i64, !dbg !176
  %arrayidx462 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom461, !dbg !176
  %221 = load i32, i32* %arrayidx462, align 4, !dbg !176
  %xor463 = xor i32 %219, %221, !dbg !176
  %222 = load i32, i32* %t0, align 4, !dbg !176
  %shr464 = lshr i32 %222, 16, !dbg !176
  %conv465 = trunc i32 %shr464 to i8, !dbg !176
  %conv466 = zext i8 %conv465 to i32, !dbg !176
  %and467 = and i32 %conv466, 255, !dbg !176
  %idxprom468 = sext i32 %and467 to i64, !dbg !176
  %arrayidx469 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom468, !dbg !176
  %223 = load i32, i32* %arrayidx469, align 4, !dbg !176
  %xor470 = xor i32 %xor463, %223, !dbg !176
  %224 = load i32, i32* %t0, align 4, !dbg !176
  %shr471 = lshr i32 %224, 24, !dbg !176
  %conv472 = trunc i32 %shr471 to i8, !dbg !176
  %conv473 = zext i8 %conv472 to i32, !dbg !176
  %and474 = and i32 %conv473, 255, !dbg !176
  %idxprom475 = sext i32 %and474 to i64, !dbg !176
  %arrayidx476 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom475, !dbg !176
  %225 = load i32, i32* %arrayidx476, align 4, !dbg !176
  %xor477 = xor i32 %xor470, %225, !dbg !176
  store i32 %xor477, i32* %t0, align 4, !dbg !176
  %226 = load i32, i32* %t1, align 4, !dbg !176
  %227 = load i32, i32* %t0, align 4, !dbg !176
  %add478 = add i32 %226, %227, !dbg !176
  store i32 %add478, i32* %t1, align 4, !dbg !176
  %228 = load i32, i32* %t1, align 4, !dbg !176
  %conv479 = trunc i32 %228 to i8, !dbg !176
  %conv480 = zext i8 %conv479 to i32, !dbg !176
  %and481 = and i32 %conv480, 255, !dbg !176
  %idxprom482 = sext i32 %and481 to i64, !dbg !176
  %arrayidx483 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom482, !dbg !176
  %229 = load i32, i32* %arrayidx483, align 4, !dbg !176
  %230 = load i32, i32* %t1, align 4, !dbg !176
  %shr484 = lshr i32 %230, 8, !dbg !176
  %conv485 = trunc i32 %shr484 to i8, !dbg !176
  %conv486 = zext i8 %conv485 to i32, !dbg !176
  %and487 = and i32 %conv486, 255, !dbg !176
  %idxprom488 = sext i32 %and487 to i64, !dbg !176
  %arrayidx489 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom488, !dbg !176
  %231 = load i32, i32* %arrayidx489, align 4, !dbg !176
  %xor490 = xor i32 %229, %231, !dbg !176
  %232 = load i32, i32* %t1, align 4, !dbg !176
  %shr491 = lshr i32 %232, 16, !dbg !176
  %conv492 = trunc i32 %shr491 to i8, !dbg !176
  %conv493 = zext i8 %conv492 to i32, !dbg !176
  %and494 = and i32 %conv493, 255, !dbg !176
  %idxprom495 = sext i32 %and494 to i64, !dbg !176
  %arrayidx496 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom495, !dbg !176
  %233 = load i32, i32* %arrayidx496, align 4, !dbg !176
  %xor497 = xor i32 %xor490, %233, !dbg !176
  %234 = load i32, i32* %t1, align 4, !dbg !176
  %shr498 = lshr i32 %234, 24, !dbg !176
  %conv499 = trunc i32 %shr498 to i8, !dbg !176
  %conv500 = zext i8 %conv499 to i32, !dbg !176
  %and501 = and i32 %conv500, 255, !dbg !176
  %idxprom502 = sext i32 %and501 to i64, !dbg !176
  %arrayidx503 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom502, !dbg !176
  %235 = load i32, i32* %arrayidx503, align 4, !dbg !176
  %xor504 = xor i32 %xor497, %235, !dbg !176
  store i32 %xor504, i32* %t1, align 4, !dbg !176
  %236 = load i32, i32* %t0, align 4, !dbg !176
  %237 = load i32, i32* %t1, align 4, !dbg !176
  %add505 = add i32 %236, %237, !dbg !176
  store i32 %add505, i32* %t0, align 4, !dbg !176
  %238 = load i32, i32* %t0, align 4, !dbg !176
  %239 = load i32, i32* %x1, align 4, !dbg !176
  %xor506 = xor i32 %239, %238, !dbg !176
  store i32 %xor506, i32* %x1, align 4, !dbg !176
  %240 = load i32, i32* %t1, align 4, !dbg !176
  %241 = load i32, i32* %x2, align 4, !dbg !176
  %xor507 = xor i32 %241, %240, !dbg !176
  store i32 %xor507, i32* %x2, align 4, !dbg !176
  %242 = load i32, i32* %x1, align 4, !dbg !177
  %243 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !177
  %data508 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %243, i32 0, i32 0, !dbg !177
  %arrayidx509 = getelementptr inbounds [32 x i32], [32 x i32]* %data508, i64 0, i64 20, !dbg !177
  %244 = load i32, i32* %arrayidx509, align 4, !dbg !177
  %xor510 = xor i32 %242, %244, !dbg !177
  store i32 %xor510, i32* %t0, align 4, !dbg !177
  %245 = load i32, i32* %x2, align 4, !dbg !177
  %246 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !177
  %data511 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %246, i32 0, i32 0, !dbg !177
  %arrayidx512 = getelementptr inbounds [32 x i32], [32 x i32]* %data511, i64 0, i64 21, !dbg !177
  %247 = load i32, i32* %arrayidx512, align 4, !dbg !177
  %xor513 = xor i32 %245, %247, !dbg !177
  store i32 %xor513, i32* %t1, align 4, !dbg !177
  %248 = load i32, i32* %t0, align 4, !dbg !177
  %249 = load i32, i32* %t1, align 4, !dbg !177
  %xor514 = xor i32 %249, %248, !dbg !177
  store i32 %xor514, i32* %t1, align 4, !dbg !177
  %250 = load i32, i32* %t1, align 4, !dbg !177
  %conv515 = trunc i32 %250 to i8, !dbg !177
  %conv516 = zext i8 %conv515 to i32, !dbg !177
  %and517 = and i32 %conv516, 255, !dbg !177
  %idxprom518 = sext i32 %and517 to i64, !dbg !177
  %arrayidx519 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom518, !dbg !177
  %251 = load i32, i32* %arrayidx519, align 4, !dbg !177
  %252 = load i32, i32* %t1, align 4, !dbg !177
  %shr520 = lshr i32 %252, 8, !dbg !177
  %conv521 = trunc i32 %shr520 to i8, !dbg !177
  %conv522 = zext i8 %conv521 to i32, !dbg !177
  %and523 = and i32 %conv522, 255, !dbg !177
  %idxprom524 = sext i32 %and523 to i64, !dbg !177
  %arrayidx525 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom524, !dbg !177
  %253 = load i32, i32* %arrayidx525, align 4, !dbg !177
  %xor526 = xor i32 %251, %253, !dbg !177
  %254 = load i32, i32* %t1, align 4, !dbg !177
  %shr527 = lshr i32 %254, 16, !dbg !177
  %conv528 = trunc i32 %shr527 to i8, !dbg !177
  %conv529 = zext i8 %conv528 to i32, !dbg !177
  %and530 = and i32 %conv529, 255, !dbg !177
  %idxprom531 = sext i32 %and530 to i64, !dbg !177
  %arrayidx532 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom531, !dbg !177
  %255 = load i32, i32* %arrayidx532, align 4, !dbg !177
  %xor533 = xor i32 %xor526, %255, !dbg !177
  %256 = load i32, i32* %t1, align 4, !dbg !177
  %shr534 = lshr i32 %256, 24, !dbg !177
  %conv535 = trunc i32 %shr534 to i8, !dbg !177
  %conv536 = zext i8 %conv535 to i32, !dbg !177
  %and537 = and i32 %conv536, 255, !dbg !177
  %idxprom538 = sext i32 %and537 to i64, !dbg !177
  %arrayidx539 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom538, !dbg !177
  %257 = load i32, i32* %arrayidx539, align 4, !dbg !177
  %xor540 = xor i32 %xor533, %257, !dbg !177
  store i32 %xor540, i32* %t1, align 4, !dbg !177
  %258 = load i32, i32* %t0, align 4, !dbg !177
  %259 = load i32, i32* %t1, align 4, !dbg !177
  %add541 = add i32 %258, %259, !dbg !177
  store i32 %add541, i32* %t0, align 4, !dbg !177
  %260 = load i32, i32* %t0, align 4, !dbg !177
  %conv542 = trunc i32 %260 to i8, !dbg !177
  %conv543 = zext i8 %conv542 to i32, !dbg !177
  %and544 = and i32 %conv543, 255, !dbg !177
  %idxprom545 = sext i32 %and544 to i64, !dbg !177
  %arrayidx546 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom545, !dbg !177
  %261 = load i32, i32* %arrayidx546, align 4, !dbg !177
  %262 = load i32, i32* %t0, align 4, !dbg !177
  %shr547 = lshr i32 %262, 8, !dbg !177
  %conv548 = trunc i32 %shr547 to i8, !dbg !177
  %conv549 = zext i8 %conv548 to i32, !dbg !177
  %and550 = and i32 %conv549, 255, !dbg !177
  %idxprom551 = sext i32 %and550 to i64, !dbg !177
  %arrayidx552 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom551, !dbg !177
  %263 = load i32, i32* %arrayidx552, align 4, !dbg !177
  %xor553 = xor i32 %261, %263, !dbg !177
  %264 = load i32, i32* %t0, align 4, !dbg !177
  %shr554 = lshr i32 %264, 16, !dbg !177
  %conv555 = trunc i32 %shr554 to i8, !dbg !177
  %conv556 = zext i8 %conv555 to i32, !dbg !177
  %and557 = and i32 %conv556, 255, !dbg !177
  %idxprom558 = sext i32 %and557 to i64, !dbg !177
  %arrayidx559 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom558, !dbg !177
  %265 = load i32, i32* %arrayidx559, align 4, !dbg !177
  %xor560 = xor i32 %xor553, %265, !dbg !177
  %266 = load i32, i32* %t0, align 4, !dbg !177
  %shr561 = lshr i32 %266, 24, !dbg !177
  %conv562 = trunc i32 %shr561 to i8, !dbg !177
  %conv563 = zext i8 %conv562 to i32, !dbg !177
  %and564 = and i32 %conv563, 255, !dbg !177
  %idxprom565 = sext i32 %and564 to i64, !dbg !177
  %arrayidx566 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom565, !dbg !177
  %267 = load i32, i32* %arrayidx566, align 4, !dbg !177
  %xor567 = xor i32 %xor560, %267, !dbg !177
  store i32 %xor567, i32* %t0, align 4, !dbg !177
  %268 = load i32, i32* %t1, align 4, !dbg !177
  %269 = load i32, i32* %t0, align 4, !dbg !177
  %add568 = add i32 %268, %269, !dbg !177
  store i32 %add568, i32* %t1, align 4, !dbg !177
  %270 = load i32, i32* %t1, align 4, !dbg !177
  %conv569 = trunc i32 %270 to i8, !dbg !177
  %conv570 = zext i8 %conv569 to i32, !dbg !177
  %and571 = and i32 %conv570, 255, !dbg !177
  %idxprom572 = sext i32 %and571 to i64, !dbg !177
  %arrayidx573 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom572, !dbg !177
  %271 = load i32, i32* %arrayidx573, align 4, !dbg !177
  %272 = load i32, i32* %t1, align 4, !dbg !177
  %shr574 = lshr i32 %272, 8, !dbg !177
  %conv575 = trunc i32 %shr574 to i8, !dbg !177
  %conv576 = zext i8 %conv575 to i32, !dbg !177
  %and577 = and i32 %conv576, 255, !dbg !177
  %idxprom578 = sext i32 %and577 to i64, !dbg !177
  %arrayidx579 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom578, !dbg !177
  %273 = load i32, i32* %arrayidx579, align 4, !dbg !177
  %xor580 = xor i32 %271, %273, !dbg !177
  %274 = load i32, i32* %t1, align 4, !dbg !177
  %shr581 = lshr i32 %274, 16, !dbg !177
  %conv582 = trunc i32 %shr581 to i8, !dbg !177
  %conv583 = zext i8 %conv582 to i32, !dbg !177
  %and584 = and i32 %conv583, 255, !dbg !177
  %idxprom585 = sext i32 %and584 to i64, !dbg !177
  %arrayidx586 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom585, !dbg !177
  %275 = load i32, i32* %arrayidx586, align 4, !dbg !177
  %xor587 = xor i32 %xor580, %275, !dbg !177
  %276 = load i32, i32* %t1, align 4, !dbg !177
  %shr588 = lshr i32 %276, 24, !dbg !177
  %conv589 = trunc i32 %shr588 to i8, !dbg !177
  %conv590 = zext i8 %conv589 to i32, !dbg !177
  %and591 = and i32 %conv590, 255, !dbg !177
  %idxprom592 = sext i32 %and591 to i64, !dbg !177
  %arrayidx593 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom592, !dbg !177
  %277 = load i32, i32* %arrayidx593, align 4, !dbg !177
  %xor594 = xor i32 %xor587, %277, !dbg !177
  store i32 %xor594, i32* %t1, align 4, !dbg !177
  %278 = load i32, i32* %t0, align 4, !dbg !177
  %279 = load i32, i32* %t1, align 4, !dbg !177
  %add595 = add i32 %278, %279, !dbg !177
  store i32 %add595, i32* %t0, align 4, !dbg !177
  %280 = load i32, i32* %t0, align 4, !dbg !177
  %281 = load i32, i32* %x3, align 4, !dbg !177
  %xor596 = xor i32 %281, %280, !dbg !177
  store i32 %xor596, i32* %x3, align 4, !dbg !177
  %282 = load i32, i32* %t1, align 4, !dbg !177
  %283 = load i32, i32* %x4, align 4, !dbg !177
  %xor597 = xor i32 %283, %282, !dbg !177
  store i32 %xor597, i32* %x4, align 4, !dbg !177
  %284 = load i32, i32* %x3, align 4, !dbg !178
  %285 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !178
  %data598 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %285, i32 0, i32 0, !dbg !178
  %arrayidx599 = getelementptr inbounds [32 x i32], [32 x i32]* %data598, i64 0, i64 18, !dbg !178
  %286 = load i32, i32* %arrayidx599, align 4, !dbg !178
  %xor600 = xor i32 %284, %286, !dbg !178
  store i32 %xor600, i32* %t0, align 4, !dbg !178
  %287 = load i32, i32* %x4, align 4, !dbg !178
  %288 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !178
  %data601 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %288, i32 0, i32 0, !dbg !178
  %arrayidx602 = getelementptr inbounds [32 x i32], [32 x i32]* %data601, i64 0, i64 19, !dbg !178
  %289 = load i32, i32* %arrayidx602, align 4, !dbg !178
  %xor603 = xor i32 %287, %289, !dbg !178
  store i32 %xor603, i32* %t1, align 4, !dbg !178
  %290 = load i32, i32* %t0, align 4, !dbg !178
  %291 = load i32, i32* %t1, align 4, !dbg !178
  %xor604 = xor i32 %291, %290, !dbg !178
  store i32 %xor604, i32* %t1, align 4, !dbg !178
  %292 = load i32, i32* %t1, align 4, !dbg !178
  %conv605 = trunc i32 %292 to i8, !dbg !178
  %conv606 = zext i8 %conv605 to i32, !dbg !178
  %and607 = and i32 %conv606, 255, !dbg !178
  %idxprom608 = sext i32 %and607 to i64, !dbg !178
  %arrayidx609 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom608, !dbg !178
  %293 = load i32, i32* %arrayidx609, align 4, !dbg !178
  %294 = load i32, i32* %t1, align 4, !dbg !178
  %shr610 = lshr i32 %294, 8, !dbg !178
  %conv611 = trunc i32 %shr610 to i8, !dbg !178
  %conv612 = zext i8 %conv611 to i32, !dbg !178
  %and613 = and i32 %conv612, 255, !dbg !178
  %idxprom614 = sext i32 %and613 to i64, !dbg !178
  %arrayidx615 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom614, !dbg !178
  %295 = load i32, i32* %arrayidx615, align 4, !dbg !178
  %xor616 = xor i32 %293, %295, !dbg !178
  %296 = load i32, i32* %t1, align 4, !dbg !178
  %shr617 = lshr i32 %296, 16, !dbg !178
  %conv618 = trunc i32 %shr617 to i8, !dbg !178
  %conv619 = zext i8 %conv618 to i32, !dbg !178
  %and620 = and i32 %conv619, 255, !dbg !178
  %idxprom621 = sext i32 %and620 to i64, !dbg !178
  %arrayidx622 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom621, !dbg !178
  %297 = load i32, i32* %arrayidx622, align 4, !dbg !178
  %xor623 = xor i32 %xor616, %297, !dbg !178
  %298 = load i32, i32* %t1, align 4, !dbg !178
  %shr624 = lshr i32 %298, 24, !dbg !178
  %conv625 = trunc i32 %shr624 to i8, !dbg !178
  %conv626 = zext i8 %conv625 to i32, !dbg !178
  %and627 = and i32 %conv626, 255, !dbg !178
  %idxprom628 = sext i32 %and627 to i64, !dbg !178
  %arrayidx629 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom628, !dbg !178
  %299 = load i32, i32* %arrayidx629, align 4, !dbg !178
  %xor630 = xor i32 %xor623, %299, !dbg !178
  store i32 %xor630, i32* %t1, align 4, !dbg !178
  %300 = load i32, i32* %t0, align 4, !dbg !178
  %301 = load i32, i32* %t1, align 4, !dbg !178
  %add631 = add i32 %300, %301, !dbg !178
  store i32 %add631, i32* %t0, align 4, !dbg !178
  %302 = load i32, i32* %t0, align 4, !dbg !178
  %conv632 = trunc i32 %302 to i8, !dbg !178
  %conv633 = zext i8 %conv632 to i32, !dbg !178
  %and634 = and i32 %conv633, 255, !dbg !178
  %idxprom635 = sext i32 %and634 to i64, !dbg !178
  %arrayidx636 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom635, !dbg !178
  %303 = load i32, i32* %arrayidx636, align 4, !dbg !178
  %304 = load i32, i32* %t0, align 4, !dbg !178
  %shr637 = lshr i32 %304, 8, !dbg !178
  %conv638 = trunc i32 %shr637 to i8, !dbg !178
  %conv639 = zext i8 %conv638 to i32, !dbg !178
  %and640 = and i32 %conv639, 255, !dbg !178
  %idxprom641 = sext i32 %and640 to i64, !dbg !178
  %arrayidx642 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom641, !dbg !178
  %305 = load i32, i32* %arrayidx642, align 4, !dbg !178
  %xor643 = xor i32 %303, %305, !dbg !178
  %306 = load i32, i32* %t0, align 4, !dbg !178
  %shr644 = lshr i32 %306, 16, !dbg !178
  %conv645 = trunc i32 %shr644 to i8, !dbg !178
  %conv646 = zext i8 %conv645 to i32, !dbg !178
  %and647 = and i32 %conv646, 255, !dbg !178
  %idxprom648 = sext i32 %and647 to i64, !dbg !178
  %arrayidx649 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom648, !dbg !178
  %307 = load i32, i32* %arrayidx649, align 4, !dbg !178
  %xor650 = xor i32 %xor643, %307, !dbg !178
  %308 = load i32, i32* %t0, align 4, !dbg !178
  %shr651 = lshr i32 %308, 24, !dbg !178
  %conv652 = trunc i32 %shr651 to i8, !dbg !178
  %conv653 = zext i8 %conv652 to i32, !dbg !178
  %and654 = and i32 %conv653, 255, !dbg !178
  %idxprom655 = sext i32 %and654 to i64, !dbg !178
  %arrayidx656 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom655, !dbg !178
  %309 = load i32, i32* %arrayidx656, align 4, !dbg !178
  %xor657 = xor i32 %xor650, %309, !dbg !178
  store i32 %xor657, i32* %t0, align 4, !dbg !178
  %310 = load i32, i32* %t1, align 4, !dbg !178
  %311 = load i32, i32* %t0, align 4, !dbg !178
  %add658 = add i32 %310, %311, !dbg !178
  store i32 %add658, i32* %t1, align 4, !dbg !178
  %312 = load i32, i32* %t1, align 4, !dbg !178
  %conv659 = trunc i32 %312 to i8, !dbg !178
  %conv660 = zext i8 %conv659 to i32, !dbg !178
  %and661 = and i32 %conv660, 255, !dbg !178
  %idxprom662 = sext i32 %and661 to i64, !dbg !178
  %arrayidx663 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom662, !dbg !178
  %313 = load i32, i32* %arrayidx663, align 4, !dbg !178
  %314 = load i32, i32* %t1, align 4, !dbg !178
  %shr664 = lshr i32 %314, 8, !dbg !178
  %conv665 = trunc i32 %shr664 to i8, !dbg !178
  %conv666 = zext i8 %conv665 to i32, !dbg !178
  %and667 = and i32 %conv666, 255, !dbg !178
  %idxprom668 = sext i32 %and667 to i64, !dbg !178
  %arrayidx669 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom668, !dbg !178
  %315 = load i32, i32* %arrayidx669, align 4, !dbg !178
  %xor670 = xor i32 %313, %315, !dbg !178
  %316 = load i32, i32* %t1, align 4, !dbg !178
  %shr671 = lshr i32 %316, 16, !dbg !178
  %conv672 = trunc i32 %shr671 to i8, !dbg !178
  %conv673 = zext i8 %conv672 to i32, !dbg !178
  %and674 = and i32 %conv673, 255, !dbg !178
  %idxprom675 = sext i32 %and674 to i64, !dbg !178
  %arrayidx676 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom675, !dbg !178
  %317 = load i32, i32* %arrayidx676, align 4, !dbg !178
  %xor677 = xor i32 %xor670, %317, !dbg !178
  %318 = load i32, i32* %t1, align 4, !dbg !178
  %shr678 = lshr i32 %318, 24, !dbg !178
  %conv679 = trunc i32 %shr678 to i8, !dbg !178
  %conv680 = zext i8 %conv679 to i32, !dbg !178
  %and681 = and i32 %conv680, 255, !dbg !178
  %idxprom682 = sext i32 %and681 to i64, !dbg !178
  %arrayidx683 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom682, !dbg !178
  %319 = load i32, i32* %arrayidx683, align 4, !dbg !178
  %xor684 = xor i32 %xor677, %319, !dbg !178
  store i32 %xor684, i32* %t1, align 4, !dbg !178
  %320 = load i32, i32* %t0, align 4, !dbg !178
  %321 = load i32, i32* %t1, align 4, !dbg !178
  %add685 = add i32 %320, %321, !dbg !178
  store i32 %add685, i32* %t0, align 4, !dbg !178
  %322 = load i32, i32* %t0, align 4, !dbg !178
  %323 = load i32, i32* %x1, align 4, !dbg !178
  %xor686 = xor i32 %323, %322, !dbg !178
  store i32 %xor686, i32* %x1, align 4, !dbg !178
  %324 = load i32, i32* %t1, align 4, !dbg !178
  %325 = load i32, i32* %x2, align 4, !dbg !178
  %xor687 = xor i32 %325, %324, !dbg !178
  store i32 %xor687, i32* %x2, align 4, !dbg !178
  %326 = load i32, i32* %x1, align 4, !dbg !179
  %327 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !179
  %data688 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %327, i32 0, i32 0, !dbg !179
  %arrayidx689 = getelementptr inbounds [32 x i32], [32 x i32]* %data688, i64 0, i64 16, !dbg !179
  %328 = load i32, i32* %arrayidx689, align 4, !dbg !179
  %xor690 = xor i32 %326, %328, !dbg !179
  store i32 %xor690, i32* %t0, align 4, !dbg !179
  %329 = load i32, i32* %x2, align 4, !dbg !179
  %330 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !179
  %data691 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %330, i32 0, i32 0, !dbg !179
  %arrayidx692 = getelementptr inbounds [32 x i32], [32 x i32]* %data691, i64 0, i64 17, !dbg !179
  %331 = load i32, i32* %arrayidx692, align 4, !dbg !179
  %xor693 = xor i32 %329, %331, !dbg !179
  store i32 %xor693, i32* %t1, align 4, !dbg !179
  %332 = load i32, i32* %t0, align 4, !dbg !179
  %333 = load i32, i32* %t1, align 4, !dbg !179
  %xor694 = xor i32 %333, %332, !dbg !179
  store i32 %xor694, i32* %t1, align 4, !dbg !179
  %334 = load i32, i32* %t1, align 4, !dbg !179
  %conv695 = trunc i32 %334 to i8, !dbg !179
  %conv696 = zext i8 %conv695 to i32, !dbg !179
  %and697 = and i32 %conv696, 255, !dbg !179
  %idxprom698 = sext i32 %and697 to i64, !dbg !179
  %arrayidx699 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom698, !dbg !179
  %335 = load i32, i32* %arrayidx699, align 4, !dbg !179
  %336 = load i32, i32* %t1, align 4, !dbg !179
  %shr700 = lshr i32 %336, 8, !dbg !179
  %conv701 = trunc i32 %shr700 to i8, !dbg !179
  %conv702 = zext i8 %conv701 to i32, !dbg !179
  %and703 = and i32 %conv702, 255, !dbg !179
  %idxprom704 = sext i32 %and703 to i64, !dbg !179
  %arrayidx705 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom704, !dbg !179
  %337 = load i32, i32* %arrayidx705, align 4, !dbg !179
  %xor706 = xor i32 %335, %337, !dbg !179
  %338 = load i32, i32* %t1, align 4, !dbg !179
  %shr707 = lshr i32 %338, 16, !dbg !179
  %conv708 = trunc i32 %shr707 to i8, !dbg !179
  %conv709 = zext i8 %conv708 to i32, !dbg !179
  %and710 = and i32 %conv709, 255, !dbg !179
  %idxprom711 = sext i32 %and710 to i64, !dbg !179
  %arrayidx712 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom711, !dbg !179
  %339 = load i32, i32* %arrayidx712, align 4, !dbg !179
  %xor713 = xor i32 %xor706, %339, !dbg !179
  %340 = load i32, i32* %t1, align 4, !dbg !179
  %shr714 = lshr i32 %340, 24, !dbg !179
  %conv715 = trunc i32 %shr714 to i8, !dbg !179
  %conv716 = zext i8 %conv715 to i32, !dbg !179
  %and717 = and i32 %conv716, 255, !dbg !179
  %idxprom718 = sext i32 %and717 to i64, !dbg !179
  %arrayidx719 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom718, !dbg !179
  %341 = load i32, i32* %arrayidx719, align 4, !dbg !179
  %xor720 = xor i32 %xor713, %341, !dbg !179
  store i32 %xor720, i32* %t1, align 4, !dbg !179
  %342 = load i32, i32* %t0, align 4, !dbg !179
  %343 = load i32, i32* %t1, align 4, !dbg !179
  %add721 = add i32 %342, %343, !dbg !179
  store i32 %add721, i32* %t0, align 4, !dbg !179
  %344 = load i32, i32* %t0, align 4, !dbg !179
  %conv722 = trunc i32 %344 to i8, !dbg !179
  %conv723 = zext i8 %conv722 to i32, !dbg !179
  %and724 = and i32 %conv723, 255, !dbg !179
  %idxprom725 = sext i32 %and724 to i64, !dbg !179
  %arrayidx726 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom725, !dbg !179
  %345 = load i32, i32* %arrayidx726, align 4, !dbg !179
  %346 = load i32, i32* %t0, align 4, !dbg !179
  %shr727 = lshr i32 %346, 8, !dbg !179
  %conv728 = trunc i32 %shr727 to i8, !dbg !179
  %conv729 = zext i8 %conv728 to i32, !dbg !179
  %and730 = and i32 %conv729, 255, !dbg !179
  %idxprom731 = sext i32 %and730 to i64, !dbg !179
  %arrayidx732 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom731, !dbg !179
  %347 = load i32, i32* %arrayidx732, align 4, !dbg !179
  %xor733 = xor i32 %345, %347, !dbg !179
  %348 = load i32, i32* %t0, align 4, !dbg !179
  %shr734 = lshr i32 %348, 16, !dbg !179
  %conv735 = trunc i32 %shr734 to i8, !dbg !179
  %conv736 = zext i8 %conv735 to i32, !dbg !179
  %and737 = and i32 %conv736, 255, !dbg !179
  %idxprom738 = sext i32 %and737 to i64, !dbg !179
  %arrayidx739 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom738, !dbg !179
  %349 = load i32, i32* %arrayidx739, align 4, !dbg !179
  %xor740 = xor i32 %xor733, %349, !dbg !179
  %350 = load i32, i32* %t0, align 4, !dbg !179
  %shr741 = lshr i32 %350, 24, !dbg !179
  %conv742 = trunc i32 %shr741 to i8, !dbg !179
  %conv743 = zext i8 %conv742 to i32, !dbg !179
  %and744 = and i32 %conv743, 255, !dbg !179
  %idxprom745 = sext i32 %and744 to i64, !dbg !179
  %arrayidx746 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom745, !dbg !179
  %351 = load i32, i32* %arrayidx746, align 4, !dbg !179
  %xor747 = xor i32 %xor740, %351, !dbg !179
  store i32 %xor747, i32* %t0, align 4, !dbg !179
  %352 = load i32, i32* %t1, align 4, !dbg !179
  %353 = load i32, i32* %t0, align 4, !dbg !179
  %add748 = add i32 %352, %353, !dbg !179
  store i32 %add748, i32* %t1, align 4, !dbg !179
  %354 = load i32, i32* %t1, align 4, !dbg !179
  %conv749 = trunc i32 %354 to i8, !dbg !179
  %conv750 = zext i8 %conv749 to i32, !dbg !179
  %and751 = and i32 %conv750, 255, !dbg !179
  %idxprom752 = sext i32 %and751 to i64, !dbg !179
  %arrayidx753 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom752, !dbg !179
  %355 = load i32, i32* %arrayidx753, align 4, !dbg !179
  %356 = load i32, i32* %t1, align 4, !dbg !179
  %shr754 = lshr i32 %356, 8, !dbg !179
  %conv755 = trunc i32 %shr754 to i8, !dbg !179
  %conv756 = zext i8 %conv755 to i32, !dbg !179
  %and757 = and i32 %conv756, 255, !dbg !179
  %idxprom758 = sext i32 %and757 to i64, !dbg !179
  %arrayidx759 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom758, !dbg !179
  %357 = load i32, i32* %arrayidx759, align 4, !dbg !179
  %xor760 = xor i32 %355, %357, !dbg !179
  %358 = load i32, i32* %t1, align 4, !dbg !179
  %shr761 = lshr i32 %358, 16, !dbg !179
  %conv762 = trunc i32 %shr761 to i8, !dbg !179
  %conv763 = zext i8 %conv762 to i32, !dbg !179
  %and764 = and i32 %conv763, 255, !dbg !179
  %idxprom765 = sext i32 %and764 to i64, !dbg !179
  %arrayidx766 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom765, !dbg !179
  %359 = load i32, i32* %arrayidx766, align 4, !dbg !179
  %xor767 = xor i32 %xor760, %359, !dbg !179
  %360 = load i32, i32* %t1, align 4, !dbg !179
  %shr768 = lshr i32 %360, 24, !dbg !179
  %conv769 = trunc i32 %shr768 to i8, !dbg !179
  %conv770 = zext i8 %conv769 to i32, !dbg !179
  %and771 = and i32 %conv770, 255, !dbg !179
  %idxprom772 = sext i32 %and771 to i64, !dbg !179
  %arrayidx773 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom772, !dbg !179
  %361 = load i32, i32* %arrayidx773, align 4, !dbg !179
  %xor774 = xor i32 %xor767, %361, !dbg !179
  store i32 %xor774, i32* %t1, align 4, !dbg !179
  %362 = load i32, i32* %t0, align 4, !dbg !179
  %363 = load i32, i32* %t1, align 4, !dbg !179
  %add775 = add i32 %362, %363, !dbg !179
  store i32 %add775, i32* %t0, align 4, !dbg !179
  %364 = load i32, i32* %t0, align 4, !dbg !179
  %365 = load i32, i32* %x3, align 4, !dbg !179
  %xor776 = xor i32 %365, %364, !dbg !179
  store i32 %xor776, i32* %x3, align 4, !dbg !179
  %366 = load i32, i32* %t1, align 4, !dbg !179
  %367 = load i32, i32* %x4, align 4, !dbg !179
  %xor777 = xor i32 %367, %366, !dbg !179
  store i32 %xor777, i32* %x4, align 4, !dbg !179
  %368 = load i32, i32* %x3, align 4, !dbg !180
  %369 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !180
  %data778 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %369, i32 0, i32 0, !dbg !180
  %arrayidx779 = getelementptr inbounds [32 x i32], [32 x i32]* %data778, i64 0, i64 14, !dbg !180
  %370 = load i32, i32* %arrayidx779, align 4, !dbg !180
  %xor780 = xor i32 %368, %370, !dbg !180
  store i32 %xor780, i32* %t0, align 4, !dbg !180
  %371 = load i32, i32* %x4, align 4, !dbg !180
  %372 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !180
  %data781 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %372, i32 0, i32 0, !dbg !180
  %arrayidx782 = getelementptr inbounds [32 x i32], [32 x i32]* %data781, i64 0, i64 15, !dbg !180
  %373 = load i32, i32* %arrayidx782, align 4, !dbg !180
  %xor783 = xor i32 %371, %373, !dbg !180
  store i32 %xor783, i32* %t1, align 4, !dbg !180
  %374 = load i32, i32* %t0, align 4, !dbg !180
  %375 = load i32, i32* %t1, align 4, !dbg !180
  %xor784 = xor i32 %375, %374, !dbg !180
  store i32 %xor784, i32* %t1, align 4, !dbg !180
  %376 = load i32, i32* %t1, align 4, !dbg !180
  %conv785 = trunc i32 %376 to i8, !dbg !180
  %conv786 = zext i8 %conv785 to i32, !dbg !180
  %and787 = and i32 %conv786, 255, !dbg !180
  %idxprom788 = sext i32 %and787 to i64, !dbg !180
  %arrayidx789 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom788, !dbg !180
  %377 = load i32, i32* %arrayidx789, align 4, !dbg !180
  %378 = load i32, i32* %t1, align 4, !dbg !180
  %shr790 = lshr i32 %378, 8, !dbg !180
  %conv791 = trunc i32 %shr790 to i8, !dbg !180
  %conv792 = zext i8 %conv791 to i32, !dbg !180
  %and793 = and i32 %conv792, 255, !dbg !180
  %idxprom794 = sext i32 %and793 to i64, !dbg !180
  %arrayidx795 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom794, !dbg !180
  %379 = load i32, i32* %arrayidx795, align 4, !dbg !180
  %xor796 = xor i32 %377, %379, !dbg !180
  %380 = load i32, i32* %t1, align 4, !dbg !180
  %shr797 = lshr i32 %380, 16, !dbg !180
  %conv798 = trunc i32 %shr797 to i8, !dbg !180
  %conv799 = zext i8 %conv798 to i32, !dbg !180
  %and800 = and i32 %conv799, 255, !dbg !180
  %idxprom801 = sext i32 %and800 to i64, !dbg !180
  %arrayidx802 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom801, !dbg !180
  %381 = load i32, i32* %arrayidx802, align 4, !dbg !180
  %xor803 = xor i32 %xor796, %381, !dbg !180
  %382 = load i32, i32* %t1, align 4, !dbg !180
  %shr804 = lshr i32 %382, 24, !dbg !180
  %conv805 = trunc i32 %shr804 to i8, !dbg !180
  %conv806 = zext i8 %conv805 to i32, !dbg !180
  %and807 = and i32 %conv806, 255, !dbg !180
  %idxprom808 = sext i32 %and807 to i64, !dbg !180
  %arrayidx809 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom808, !dbg !180
  %383 = load i32, i32* %arrayidx809, align 4, !dbg !180
  %xor810 = xor i32 %xor803, %383, !dbg !180
  store i32 %xor810, i32* %t1, align 4, !dbg !180
  %384 = load i32, i32* %t0, align 4, !dbg !180
  %385 = load i32, i32* %t1, align 4, !dbg !180
  %add811 = add i32 %384, %385, !dbg !180
  store i32 %add811, i32* %t0, align 4, !dbg !180
  %386 = load i32, i32* %t0, align 4, !dbg !180
  %conv812 = trunc i32 %386 to i8, !dbg !180
  %conv813 = zext i8 %conv812 to i32, !dbg !180
  %and814 = and i32 %conv813, 255, !dbg !180
  %idxprom815 = sext i32 %and814 to i64, !dbg !180
  %arrayidx816 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom815, !dbg !180
  %387 = load i32, i32* %arrayidx816, align 4, !dbg !180
  %388 = load i32, i32* %t0, align 4, !dbg !180
  %shr817 = lshr i32 %388, 8, !dbg !180
  %conv818 = trunc i32 %shr817 to i8, !dbg !180
  %conv819 = zext i8 %conv818 to i32, !dbg !180
  %and820 = and i32 %conv819, 255, !dbg !180
  %idxprom821 = sext i32 %and820 to i64, !dbg !180
  %arrayidx822 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom821, !dbg !180
  %389 = load i32, i32* %arrayidx822, align 4, !dbg !180
  %xor823 = xor i32 %387, %389, !dbg !180
  %390 = load i32, i32* %t0, align 4, !dbg !180
  %shr824 = lshr i32 %390, 16, !dbg !180
  %conv825 = trunc i32 %shr824 to i8, !dbg !180
  %conv826 = zext i8 %conv825 to i32, !dbg !180
  %and827 = and i32 %conv826, 255, !dbg !180
  %idxprom828 = sext i32 %and827 to i64, !dbg !180
  %arrayidx829 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom828, !dbg !180
  %391 = load i32, i32* %arrayidx829, align 4, !dbg !180
  %xor830 = xor i32 %xor823, %391, !dbg !180
  %392 = load i32, i32* %t0, align 4, !dbg !180
  %shr831 = lshr i32 %392, 24, !dbg !180
  %conv832 = trunc i32 %shr831 to i8, !dbg !180
  %conv833 = zext i8 %conv832 to i32, !dbg !180
  %and834 = and i32 %conv833, 255, !dbg !180
  %idxprom835 = sext i32 %and834 to i64, !dbg !180
  %arrayidx836 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom835, !dbg !180
  %393 = load i32, i32* %arrayidx836, align 4, !dbg !180
  %xor837 = xor i32 %xor830, %393, !dbg !180
  store i32 %xor837, i32* %t0, align 4, !dbg !180
  %394 = load i32, i32* %t1, align 4, !dbg !180
  %395 = load i32, i32* %t0, align 4, !dbg !180
  %add838 = add i32 %394, %395, !dbg !180
  store i32 %add838, i32* %t1, align 4, !dbg !180
  %396 = load i32, i32* %t1, align 4, !dbg !180
  %conv839 = trunc i32 %396 to i8, !dbg !180
  %conv840 = zext i8 %conv839 to i32, !dbg !180
  %and841 = and i32 %conv840, 255, !dbg !180
  %idxprom842 = sext i32 %and841 to i64, !dbg !180
  %arrayidx843 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom842, !dbg !180
  %397 = load i32, i32* %arrayidx843, align 4, !dbg !180
  %398 = load i32, i32* %t1, align 4, !dbg !180
  %shr844 = lshr i32 %398, 8, !dbg !180
  %conv845 = trunc i32 %shr844 to i8, !dbg !180
  %conv846 = zext i8 %conv845 to i32, !dbg !180
  %and847 = and i32 %conv846, 255, !dbg !180
  %idxprom848 = sext i32 %and847 to i64, !dbg !180
  %arrayidx849 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom848, !dbg !180
  %399 = load i32, i32* %arrayidx849, align 4, !dbg !180
  %xor850 = xor i32 %397, %399, !dbg !180
  %400 = load i32, i32* %t1, align 4, !dbg !180
  %shr851 = lshr i32 %400, 16, !dbg !180
  %conv852 = trunc i32 %shr851 to i8, !dbg !180
  %conv853 = zext i8 %conv852 to i32, !dbg !180
  %and854 = and i32 %conv853, 255, !dbg !180
  %idxprom855 = sext i32 %and854 to i64, !dbg !180
  %arrayidx856 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom855, !dbg !180
  %401 = load i32, i32* %arrayidx856, align 4, !dbg !180
  %xor857 = xor i32 %xor850, %401, !dbg !180
  %402 = load i32, i32* %t1, align 4, !dbg !180
  %shr858 = lshr i32 %402, 24, !dbg !180
  %conv859 = trunc i32 %shr858 to i8, !dbg !180
  %conv860 = zext i8 %conv859 to i32, !dbg !180
  %and861 = and i32 %conv860, 255, !dbg !180
  %idxprom862 = sext i32 %and861 to i64, !dbg !180
  %arrayidx863 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom862, !dbg !180
  %403 = load i32, i32* %arrayidx863, align 4, !dbg !180
  %xor864 = xor i32 %xor857, %403, !dbg !180
  store i32 %xor864, i32* %t1, align 4, !dbg !180
  %404 = load i32, i32* %t0, align 4, !dbg !180
  %405 = load i32, i32* %t1, align 4, !dbg !180
  %add865 = add i32 %404, %405, !dbg !180
  store i32 %add865, i32* %t0, align 4, !dbg !180
  %406 = load i32, i32* %t0, align 4, !dbg !180
  %407 = load i32, i32* %x1, align 4, !dbg !180
  %xor866 = xor i32 %407, %406, !dbg !180
  store i32 %xor866, i32* %x1, align 4, !dbg !180
  %408 = load i32, i32* %t1, align 4, !dbg !180
  %409 = load i32, i32* %x2, align 4, !dbg !180
  %xor867 = xor i32 %409, %408, !dbg !180
  store i32 %xor867, i32* %x2, align 4, !dbg !180
  %410 = load i32, i32* %x1, align 4, !dbg !181
  %411 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !181
  %data868 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %411, i32 0, i32 0, !dbg !181
  %arrayidx869 = getelementptr inbounds [32 x i32], [32 x i32]* %data868, i64 0, i64 12, !dbg !181
  %412 = load i32, i32* %arrayidx869, align 4, !dbg !181
  %xor870 = xor i32 %410, %412, !dbg !181
  store i32 %xor870, i32* %t0, align 4, !dbg !181
  %413 = load i32, i32* %x2, align 4, !dbg !181
  %414 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !181
  %data871 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %414, i32 0, i32 0, !dbg !181
  %arrayidx872 = getelementptr inbounds [32 x i32], [32 x i32]* %data871, i64 0, i64 13, !dbg !181
  %415 = load i32, i32* %arrayidx872, align 4, !dbg !181
  %xor873 = xor i32 %413, %415, !dbg !181
  store i32 %xor873, i32* %t1, align 4, !dbg !181
  %416 = load i32, i32* %t0, align 4, !dbg !181
  %417 = load i32, i32* %t1, align 4, !dbg !181
  %xor874 = xor i32 %417, %416, !dbg !181
  store i32 %xor874, i32* %t1, align 4, !dbg !181
  %418 = load i32, i32* %t1, align 4, !dbg !181
  %conv875 = trunc i32 %418 to i8, !dbg !181
  %conv876 = zext i8 %conv875 to i32, !dbg !181
  %and877 = and i32 %conv876, 255, !dbg !181
  %idxprom878 = sext i32 %and877 to i64, !dbg !181
  %arrayidx879 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom878, !dbg !181
  %419 = load i32, i32* %arrayidx879, align 4, !dbg !181
  %420 = load i32, i32* %t1, align 4, !dbg !181
  %shr880 = lshr i32 %420, 8, !dbg !181
  %conv881 = trunc i32 %shr880 to i8, !dbg !181
  %conv882 = zext i8 %conv881 to i32, !dbg !181
  %and883 = and i32 %conv882, 255, !dbg !181
  %idxprom884 = sext i32 %and883 to i64, !dbg !181
  %arrayidx885 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom884, !dbg !181
  %421 = load i32, i32* %arrayidx885, align 4, !dbg !181
  %xor886 = xor i32 %419, %421, !dbg !181
  %422 = load i32, i32* %t1, align 4, !dbg !181
  %shr887 = lshr i32 %422, 16, !dbg !181
  %conv888 = trunc i32 %shr887 to i8, !dbg !181
  %conv889 = zext i8 %conv888 to i32, !dbg !181
  %and890 = and i32 %conv889, 255, !dbg !181
  %idxprom891 = sext i32 %and890 to i64, !dbg !181
  %arrayidx892 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom891, !dbg !181
  %423 = load i32, i32* %arrayidx892, align 4, !dbg !181
  %xor893 = xor i32 %xor886, %423, !dbg !181
  %424 = load i32, i32* %t1, align 4, !dbg !181
  %shr894 = lshr i32 %424, 24, !dbg !181
  %conv895 = trunc i32 %shr894 to i8, !dbg !181
  %conv896 = zext i8 %conv895 to i32, !dbg !181
  %and897 = and i32 %conv896, 255, !dbg !181
  %idxprom898 = sext i32 %and897 to i64, !dbg !181
  %arrayidx899 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom898, !dbg !181
  %425 = load i32, i32* %arrayidx899, align 4, !dbg !181
  %xor900 = xor i32 %xor893, %425, !dbg !181
  store i32 %xor900, i32* %t1, align 4, !dbg !181
  %426 = load i32, i32* %t0, align 4, !dbg !181
  %427 = load i32, i32* %t1, align 4, !dbg !181
  %add901 = add i32 %426, %427, !dbg !181
  store i32 %add901, i32* %t0, align 4, !dbg !181
  %428 = load i32, i32* %t0, align 4, !dbg !181
  %conv902 = trunc i32 %428 to i8, !dbg !181
  %conv903 = zext i8 %conv902 to i32, !dbg !181
  %and904 = and i32 %conv903, 255, !dbg !181
  %idxprom905 = sext i32 %and904 to i64, !dbg !181
  %arrayidx906 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom905, !dbg !181
  %429 = load i32, i32* %arrayidx906, align 4, !dbg !181
  %430 = load i32, i32* %t0, align 4, !dbg !181
  %shr907 = lshr i32 %430, 8, !dbg !181
  %conv908 = trunc i32 %shr907 to i8, !dbg !181
  %conv909 = zext i8 %conv908 to i32, !dbg !181
  %and910 = and i32 %conv909, 255, !dbg !181
  %idxprom911 = sext i32 %and910 to i64, !dbg !181
  %arrayidx912 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom911, !dbg !181
  %431 = load i32, i32* %arrayidx912, align 4, !dbg !181
  %xor913 = xor i32 %429, %431, !dbg !181
  %432 = load i32, i32* %t0, align 4, !dbg !181
  %shr914 = lshr i32 %432, 16, !dbg !181
  %conv915 = trunc i32 %shr914 to i8, !dbg !181
  %conv916 = zext i8 %conv915 to i32, !dbg !181
  %and917 = and i32 %conv916, 255, !dbg !181
  %idxprom918 = sext i32 %and917 to i64, !dbg !181
  %arrayidx919 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom918, !dbg !181
  %433 = load i32, i32* %arrayidx919, align 4, !dbg !181
  %xor920 = xor i32 %xor913, %433, !dbg !181
  %434 = load i32, i32* %t0, align 4, !dbg !181
  %shr921 = lshr i32 %434, 24, !dbg !181
  %conv922 = trunc i32 %shr921 to i8, !dbg !181
  %conv923 = zext i8 %conv922 to i32, !dbg !181
  %and924 = and i32 %conv923, 255, !dbg !181
  %idxprom925 = sext i32 %and924 to i64, !dbg !181
  %arrayidx926 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom925, !dbg !181
  %435 = load i32, i32* %arrayidx926, align 4, !dbg !181
  %xor927 = xor i32 %xor920, %435, !dbg !181
  store i32 %xor927, i32* %t0, align 4, !dbg !181
  %436 = load i32, i32* %t1, align 4, !dbg !181
  %437 = load i32, i32* %t0, align 4, !dbg !181
  %add928 = add i32 %436, %437, !dbg !181
  store i32 %add928, i32* %t1, align 4, !dbg !181
  %438 = load i32, i32* %t1, align 4, !dbg !181
  %conv929 = trunc i32 %438 to i8, !dbg !181
  %conv930 = zext i8 %conv929 to i32, !dbg !181
  %and931 = and i32 %conv930, 255, !dbg !181
  %idxprom932 = sext i32 %and931 to i64, !dbg !181
  %arrayidx933 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom932, !dbg !181
  %439 = load i32, i32* %arrayidx933, align 4, !dbg !181
  %440 = load i32, i32* %t1, align 4, !dbg !181
  %shr934 = lshr i32 %440, 8, !dbg !181
  %conv935 = trunc i32 %shr934 to i8, !dbg !181
  %conv936 = zext i8 %conv935 to i32, !dbg !181
  %and937 = and i32 %conv936, 255, !dbg !181
  %idxprom938 = sext i32 %and937 to i64, !dbg !181
  %arrayidx939 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom938, !dbg !181
  %441 = load i32, i32* %arrayidx939, align 4, !dbg !181
  %xor940 = xor i32 %439, %441, !dbg !181
  %442 = load i32, i32* %t1, align 4, !dbg !181
  %shr941 = lshr i32 %442, 16, !dbg !181
  %conv942 = trunc i32 %shr941 to i8, !dbg !181
  %conv943 = zext i8 %conv942 to i32, !dbg !181
  %and944 = and i32 %conv943, 255, !dbg !181
  %idxprom945 = sext i32 %and944 to i64, !dbg !181
  %arrayidx946 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom945, !dbg !181
  %443 = load i32, i32* %arrayidx946, align 4, !dbg !181
  %xor947 = xor i32 %xor940, %443, !dbg !181
  %444 = load i32, i32* %t1, align 4, !dbg !181
  %shr948 = lshr i32 %444, 24, !dbg !181
  %conv949 = trunc i32 %shr948 to i8, !dbg !181
  %conv950 = zext i8 %conv949 to i32, !dbg !181
  %and951 = and i32 %conv950, 255, !dbg !181
  %idxprom952 = sext i32 %and951 to i64, !dbg !181
  %arrayidx953 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom952, !dbg !181
  %445 = load i32, i32* %arrayidx953, align 4, !dbg !181
  %xor954 = xor i32 %xor947, %445, !dbg !181
  store i32 %xor954, i32* %t1, align 4, !dbg !181
  %446 = load i32, i32* %t0, align 4, !dbg !181
  %447 = load i32, i32* %t1, align 4, !dbg !181
  %add955 = add i32 %446, %447, !dbg !181
  store i32 %add955, i32* %t0, align 4, !dbg !181
  %448 = load i32, i32* %t0, align 4, !dbg !181
  %449 = load i32, i32* %x3, align 4, !dbg !181
  %xor956 = xor i32 %449, %448, !dbg !181
  store i32 %xor956, i32* %x3, align 4, !dbg !181
  %450 = load i32, i32* %t1, align 4, !dbg !181
  %451 = load i32, i32* %x4, align 4, !dbg !181
  %xor957 = xor i32 %451, %450, !dbg !181
  store i32 %xor957, i32* %x4, align 4, !dbg !181
  %452 = load i32, i32* %x3, align 4, !dbg !182
  %453 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !182
  %data958 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %453, i32 0, i32 0, !dbg !182
  %arrayidx959 = getelementptr inbounds [32 x i32], [32 x i32]* %data958, i64 0, i64 10, !dbg !182
  %454 = load i32, i32* %arrayidx959, align 4, !dbg !182
  %xor960 = xor i32 %452, %454, !dbg !182
  store i32 %xor960, i32* %t0, align 4, !dbg !182
  %455 = load i32, i32* %x4, align 4, !dbg !182
  %456 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !182
  %data961 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %456, i32 0, i32 0, !dbg !182
  %arrayidx962 = getelementptr inbounds [32 x i32], [32 x i32]* %data961, i64 0, i64 11, !dbg !182
  %457 = load i32, i32* %arrayidx962, align 4, !dbg !182
  %xor963 = xor i32 %455, %457, !dbg !182
  store i32 %xor963, i32* %t1, align 4, !dbg !182
  %458 = load i32, i32* %t0, align 4, !dbg !182
  %459 = load i32, i32* %t1, align 4, !dbg !182
  %xor964 = xor i32 %459, %458, !dbg !182
  store i32 %xor964, i32* %t1, align 4, !dbg !182
  %460 = load i32, i32* %t1, align 4, !dbg !182
  %conv965 = trunc i32 %460 to i8, !dbg !182
  %conv966 = zext i8 %conv965 to i32, !dbg !182
  %and967 = and i32 %conv966, 255, !dbg !182
  %idxprom968 = sext i32 %and967 to i64, !dbg !182
  %arrayidx969 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom968, !dbg !182
  %461 = load i32, i32* %arrayidx969, align 4, !dbg !182
  %462 = load i32, i32* %t1, align 4, !dbg !182
  %shr970 = lshr i32 %462, 8, !dbg !182
  %conv971 = trunc i32 %shr970 to i8, !dbg !182
  %conv972 = zext i8 %conv971 to i32, !dbg !182
  %and973 = and i32 %conv972, 255, !dbg !182
  %idxprom974 = sext i32 %and973 to i64, !dbg !182
  %arrayidx975 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom974, !dbg !182
  %463 = load i32, i32* %arrayidx975, align 4, !dbg !182
  %xor976 = xor i32 %461, %463, !dbg !182
  %464 = load i32, i32* %t1, align 4, !dbg !182
  %shr977 = lshr i32 %464, 16, !dbg !182
  %conv978 = trunc i32 %shr977 to i8, !dbg !182
  %conv979 = zext i8 %conv978 to i32, !dbg !182
  %and980 = and i32 %conv979, 255, !dbg !182
  %idxprom981 = sext i32 %and980 to i64, !dbg !182
  %arrayidx982 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom981, !dbg !182
  %465 = load i32, i32* %arrayidx982, align 4, !dbg !182
  %xor983 = xor i32 %xor976, %465, !dbg !182
  %466 = load i32, i32* %t1, align 4, !dbg !182
  %shr984 = lshr i32 %466, 24, !dbg !182
  %conv985 = trunc i32 %shr984 to i8, !dbg !182
  %conv986 = zext i8 %conv985 to i32, !dbg !182
  %and987 = and i32 %conv986, 255, !dbg !182
  %idxprom988 = sext i32 %and987 to i64, !dbg !182
  %arrayidx989 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom988, !dbg !182
  %467 = load i32, i32* %arrayidx989, align 4, !dbg !182
  %xor990 = xor i32 %xor983, %467, !dbg !182
  store i32 %xor990, i32* %t1, align 4, !dbg !182
  %468 = load i32, i32* %t0, align 4, !dbg !182
  %469 = load i32, i32* %t1, align 4, !dbg !182
  %add991 = add i32 %468, %469, !dbg !182
  store i32 %add991, i32* %t0, align 4, !dbg !182
  %470 = load i32, i32* %t0, align 4, !dbg !182
  %conv992 = trunc i32 %470 to i8, !dbg !182
  %conv993 = zext i8 %conv992 to i32, !dbg !182
  %and994 = and i32 %conv993, 255, !dbg !182
  %idxprom995 = sext i32 %and994 to i64, !dbg !182
  %arrayidx996 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom995, !dbg !182
  %471 = load i32, i32* %arrayidx996, align 4, !dbg !182
  %472 = load i32, i32* %t0, align 4, !dbg !182
  %shr997 = lshr i32 %472, 8, !dbg !182
  %conv998 = trunc i32 %shr997 to i8, !dbg !182
  %conv999 = zext i8 %conv998 to i32, !dbg !182
  %and1000 = and i32 %conv999, 255, !dbg !182
  %idxprom1001 = sext i32 %and1000 to i64, !dbg !182
  %arrayidx1002 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1001, !dbg !182
  %473 = load i32, i32* %arrayidx1002, align 4, !dbg !182
  %xor1003 = xor i32 %471, %473, !dbg !182
  %474 = load i32, i32* %t0, align 4, !dbg !182
  %shr1004 = lshr i32 %474, 16, !dbg !182
  %conv1005 = trunc i32 %shr1004 to i8, !dbg !182
  %conv1006 = zext i8 %conv1005 to i32, !dbg !182
  %and1007 = and i32 %conv1006, 255, !dbg !182
  %idxprom1008 = sext i32 %and1007 to i64, !dbg !182
  %arrayidx1009 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1008, !dbg !182
  %475 = load i32, i32* %arrayidx1009, align 4, !dbg !182
  %xor1010 = xor i32 %xor1003, %475, !dbg !182
  %476 = load i32, i32* %t0, align 4, !dbg !182
  %shr1011 = lshr i32 %476, 24, !dbg !182
  %conv1012 = trunc i32 %shr1011 to i8, !dbg !182
  %conv1013 = zext i8 %conv1012 to i32, !dbg !182
  %and1014 = and i32 %conv1013, 255, !dbg !182
  %idxprom1015 = sext i32 %and1014 to i64, !dbg !182
  %arrayidx1016 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1015, !dbg !182
  %477 = load i32, i32* %arrayidx1016, align 4, !dbg !182
  %xor1017 = xor i32 %xor1010, %477, !dbg !182
  store i32 %xor1017, i32* %t0, align 4, !dbg !182
  %478 = load i32, i32* %t1, align 4, !dbg !182
  %479 = load i32, i32* %t0, align 4, !dbg !182
  %add1018 = add i32 %478, %479, !dbg !182
  store i32 %add1018, i32* %t1, align 4, !dbg !182
  %480 = load i32, i32* %t1, align 4, !dbg !182
  %conv1019 = trunc i32 %480 to i8, !dbg !182
  %conv1020 = zext i8 %conv1019 to i32, !dbg !182
  %and1021 = and i32 %conv1020, 255, !dbg !182
  %idxprom1022 = sext i32 %and1021 to i64, !dbg !182
  %arrayidx1023 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1022, !dbg !182
  %481 = load i32, i32* %arrayidx1023, align 4, !dbg !182
  %482 = load i32, i32* %t1, align 4, !dbg !182
  %shr1024 = lshr i32 %482, 8, !dbg !182
  %conv1025 = trunc i32 %shr1024 to i8, !dbg !182
  %conv1026 = zext i8 %conv1025 to i32, !dbg !182
  %and1027 = and i32 %conv1026, 255, !dbg !182
  %idxprom1028 = sext i32 %and1027 to i64, !dbg !182
  %arrayidx1029 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1028, !dbg !182
  %483 = load i32, i32* %arrayidx1029, align 4, !dbg !182
  %xor1030 = xor i32 %481, %483, !dbg !182
  %484 = load i32, i32* %t1, align 4, !dbg !182
  %shr1031 = lshr i32 %484, 16, !dbg !182
  %conv1032 = trunc i32 %shr1031 to i8, !dbg !182
  %conv1033 = zext i8 %conv1032 to i32, !dbg !182
  %and1034 = and i32 %conv1033, 255, !dbg !182
  %idxprom1035 = sext i32 %and1034 to i64, !dbg !182
  %arrayidx1036 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1035, !dbg !182
  %485 = load i32, i32* %arrayidx1036, align 4, !dbg !182
  %xor1037 = xor i32 %xor1030, %485, !dbg !182
  %486 = load i32, i32* %t1, align 4, !dbg !182
  %shr1038 = lshr i32 %486, 24, !dbg !182
  %conv1039 = trunc i32 %shr1038 to i8, !dbg !182
  %conv1040 = zext i8 %conv1039 to i32, !dbg !182
  %and1041 = and i32 %conv1040, 255, !dbg !182
  %idxprom1042 = sext i32 %and1041 to i64, !dbg !182
  %arrayidx1043 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1042, !dbg !182
  %487 = load i32, i32* %arrayidx1043, align 4, !dbg !182
  %xor1044 = xor i32 %xor1037, %487, !dbg !182
  store i32 %xor1044, i32* %t1, align 4, !dbg !182
  %488 = load i32, i32* %t0, align 4, !dbg !182
  %489 = load i32, i32* %t1, align 4, !dbg !182
  %add1045 = add i32 %488, %489, !dbg !182
  store i32 %add1045, i32* %t0, align 4, !dbg !182
  %490 = load i32, i32* %t0, align 4, !dbg !182
  %491 = load i32, i32* %x1, align 4, !dbg !182
  %xor1046 = xor i32 %491, %490, !dbg !182
  store i32 %xor1046, i32* %x1, align 4, !dbg !182
  %492 = load i32, i32* %t1, align 4, !dbg !182
  %493 = load i32, i32* %x2, align 4, !dbg !182
  %xor1047 = xor i32 %493, %492, !dbg !182
  store i32 %xor1047, i32* %x2, align 4, !dbg !182
  %494 = load i32, i32* %x1, align 4, !dbg !183
  %495 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !183
  %data1048 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %495, i32 0, i32 0, !dbg !183
  %arrayidx1049 = getelementptr inbounds [32 x i32], [32 x i32]* %data1048, i64 0, i64 8, !dbg !183
  %496 = load i32, i32* %arrayidx1049, align 4, !dbg !183
  %xor1050 = xor i32 %494, %496, !dbg !183
  store i32 %xor1050, i32* %t0, align 4, !dbg !183
  %497 = load i32, i32* %x2, align 4, !dbg !183
  %498 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !183
  %data1051 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %498, i32 0, i32 0, !dbg !183
  %arrayidx1052 = getelementptr inbounds [32 x i32], [32 x i32]* %data1051, i64 0, i64 9, !dbg !183
  %499 = load i32, i32* %arrayidx1052, align 4, !dbg !183
  %xor1053 = xor i32 %497, %499, !dbg !183
  store i32 %xor1053, i32* %t1, align 4, !dbg !183
  %500 = load i32, i32* %t0, align 4, !dbg !183
  %501 = load i32, i32* %t1, align 4, !dbg !183
  %xor1054 = xor i32 %501, %500, !dbg !183
  store i32 %xor1054, i32* %t1, align 4, !dbg !183
  %502 = load i32, i32* %t1, align 4, !dbg !183
  %conv1055 = trunc i32 %502 to i8, !dbg !183
  %conv1056 = zext i8 %conv1055 to i32, !dbg !183
  %and1057 = and i32 %conv1056, 255, !dbg !183
  %idxprom1058 = sext i32 %and1057 to i64, !dbg !183
  %arrayidx1059 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1058, !dbg !183
  %503 = load i32, i32* %arrayidx1059, align 4, !dbg !183
  %504 = load i32, i32* %t1, align 4, !dbg !183
  %shr1060 = lshr i32 %504, 8, !dbg !183
  %conv1061 = trunc i32 %shr1060 to i8, !dbg !183
  %conv1062 = zext i8 %conv1061 to i32, !dbg !183
  %and1063 = and i32 %conv1062, 255, !dbg !183
  %idxprom1064 = sext i32 %and1063 to i64, !dbg !183
  %arrayidx1065 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1064, !dbg !183
  %505 = load i32, i32* %arrayidx1065, align 4, !dbg !183
  %xor1066 = xor i32 %503, %505, !dbg !183
  %506 = load i32, i32* %t1, align 4, !dbg !183
  %shr1067 = lshr i32 %506, 16, !dbg !183
  %conv1068 = trunc i32 %shr1067 to i8, !dbg !183
  %conv1069 = zext i8 %conv1068 to i32, !dbg !183
  %and1070 = and i32 %conv1069, 255, !dbg !183
  %idxprom1071 = sext i32 %and1070 to i64, !dbg !183
  %arrayidx1072 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1071, !dbg !183
  %507 = load i32, i32* %arrayidx1072, align 4, !dbg !183
  %xor1073 = xor i32 %xor1066, %507, !dbg !183
  %508 = load i32, i32* %t1, align 4, !dbg !183
  %shr1074 = lshr i32 %508, 24, !dbg !183
  %conv1075 = trunc i32 %shr1074 to i8, !dbg !183
  %conv1076 = zext i8 %conv1075 to i32, !dbg !183
  %and1077 = and i32 %conv1076, 255, !dbg !183
  %idxprom1078 = sext i32 %and1077 to i64, !dbg !183
  %arrayidx1079 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1078, !dbg !183
  %509 = load i32, i32* %arrayidx1079, align 4, !dbg !183
  %xor1080 = xor i32 %xor1073, %509, !dbg !183
  store i32 %xor1080, i32* %t1, align 4, !dbg !183
  %510 = load i32, i32* %t0, align 4, !dbg !183
  %511 = load i32, i32* %t1, align 4, !dbg !183
  %add1081 = add i32 %510, %511, !dbg !183
  store i32 %add1081, i32* %t0, align 4, !dbg !183
  %512 = load i32, i32* %t0, align 4, !dbg !183
  %conv1082 = trunc i32 %512 to i8, !dbg !183
  %conv1083 = zext i8 %conv1082 to i32, !dbg !183
  %and1084 = and i32 %conv1083, 255, !dbg !183
  %idxprom1085 = sext i32 %and1084 to i64, !dbg !183
  %arrayidx1086 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1085, !dbg !183
  %513 = load i32, i32* %arrayidx1086, align 4, !dbg !183
  %514 = load i32, i32* %t0, align 4, !dbg !183
  %shr1087 = lshr i32 %514, 8, !dbg !183
  %conv1088 = trunc i32 %shr1087 to i8, !dbg !183
  %conv1089 = zext i8 %conv1088 to i32, !dbg !183
  %and1090 = and i32 %conv1089, 255, !dbg !183
  %idxprom1091 = sext i32 %and1090 to i64, !dbg !183
  %arrayidx1092 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1091, !dbg !183
  %515 = load i32, i32* %arrayidx1092, align 4, !dbg !183
  %xor1093 = xor i32 %513, %515, !dbg !183
  %516 = load i32, i32* %t0, align 4, !dbg !183
  %shr1094 = lshr i32 %516, 16, !dbg !183
  %conv1095 = trunc i32 %shr1094 to i8, !dbg !183
  %conv1096 = zext i8 %conv1095 to i32, !dbg !183
  %and1097 = and i32 %conv1096, 255, !dbg !183
  %idxprom1098 = sext i32 %and1097 to i64, !dbg !183
  %arrayidx1099 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1098, !dbg !183
  %517 = load i32, i32* %arrayidx1099, align 4, !dbg !183
  %xor1100 = xor i32 %xor1093, %517, !dbg !183
  %518 = load i32, i32* %t0, align 4, !dbg !183
  %shr1101 = lshr i32 %518, 24, !dbg !183
  %conv1102 = trunc i32 %shr1101 to i8, !dbg !183
  %conv1103 = zext i8 %conv1102 to i32, !dbg !183
  %and1104 = and i32 %conv1103, 255, !dbg !183
  %idxprom1105 = sext i32 %and1104 to i64, !dbg !183
  %arrayidx1106 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1105, !dbg !183
  %519 = load i32, i32* %arrayidx1106, align 4, !dbg !183
  %xor1107 = xor i32 %xor1100, %519, !dbg !183
  store i32 %xor1107, i32* %t0, align 4, !dbg !183
  %520 = load i32, i32* %t1, align 4, !dbg !183
  %521 = load i32, i32* %t0, align 4, !dbg !183
  %add1108 = add i32 %520, %521, !dbg !183
  store i32 %add1108, i32* %t1, align 4, !dbg !183
  %522 = load i32, i32* %t1, align 4, !dbg !183
  %conv1109 = trunc i32 %522 to i8, !dbg !183
  %conv1110 = zext i8 %conv1109 to i32, !dbg !183
  %and1111 = and i32 %conv1110, 255, !dbg !183
  %idxprom1112 = sext i32 %and1111 to i64, !dbg !183
  %arrayidx1113 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1112, !dbg !183
  %523 = load i32, i32* %arrayidx1113, align 4, !dbg !183
  %524 = load i32, i32* %t1, align 4, !dbg !183
  %shr1114 = lshr i32 %524, 8, !dbg !183
  %conv1115 = trunc i32 %shr1114 to i8, !dbg !183
  %conv1116 = zext i8 %conv1115 to i32, !dbg !183
  %and1117 = and i32 %conv1116, 255, !dbg !183
  %idxprom1118 = sext i32 %and1117 to i64, !dbg !183
  %arrayidx1119 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1118, !dbg !183
  %525 = load i32, i32* %arrayidx1119, align 4, !dbg !183
  %xor1120 = xor i32 %523, %525, !dbg !183
  %526 = load i32, i32* %t1, align 4, !dbg !183
  %shr1121 = lshr i32 %526, 16, !dbg !183
  %conv1122 = trunc i32 %shr1121 to i8, !dbg !183
  %conv1123 = zext i8 %conv1122 to i32, !dbg !183
  %and1124 = and i32 %conv1123, 255, !dbg !183
  %idxprom1125 = sext i32 %and1124 to i64, !dbg !183
  %arrayidx1126 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1125, !dbg !183
  %527 = load i32, i32* %arrayidx1126, align 4, !dbg !183
  %xor1127 = xor i32 %xor1120, %527, !dbg !183
  %528 = load i32, i32* %t1, align 4, !dbg !183
  %shr1128 = lshr i32 %528, 24, !dbg !183
  %conv1129 = trunc i32 %shr1128 to i8, !dbg !183
  %conv1130 = zext i8 %conv1129 to i32, !dbg !183
  %and1131 = and i32 %conv1130, 255, !dbg !183
  %idxprom1132 = sext i32 %and1131 to i64, !dbg !183
  %arrayidx1133 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1132, !dbg !183
  %529 = load i32, i32* %arrayidx1133, align 4, !dbg !183
  %xor1134 = xor i32 %xor1127, %529, !dbg !183
  store i32 %xor1134, i32* %t1, align 4, !dbg !183
  %530 = load i32, i32* %t0, align 4, !dbg !183
  %531 = load i32, i32* %t1, align 4, !dbg !183
  %add1135 = add i32 %530, %531, !dbg !183
  store i32 %add1135, i32* %t0, align 4, !dbg !183
  %532 = load i32, i32* %t0, align 4, !dbg !183
  %533 = load i32, i32* %x3, align 4, !dbg !183
  %xor1136 = xor i32 %533, %532, !dbg !183
  store i32 %xor1136, i32* %x3, align 4, !dbg !183
  %534 = load i32, i32* %t1, align 4, !dbg !183
  %535 = load i32, i32* %x4, align 4, !dbg !183
  %xor1137 = xor i32 %535, %534, !dbg !183
  store i32 %xor1137, i32* %x4, align 4, !dbg !183
  %536 = load i32, i32* %x3, align 4, !dbg !184
  %537 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !184
  %data1138 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %537, i32 0, i32 0, !dbg !184
  %arrayidx1139 = getelementptr inbounds [32 x i32], [32 x i32]* %data1138, i64 0, i64 6, !dbg !184
  %538 = load i32, i32* %arrayidx1139, align 4, !dbg !184
  %xor1140 = xor i32 %536, %538, !dbg !184
  store i32 %xor1140, i32* %t0, align 4, !dbg !184
  %539 = load i32, i32* %x4, align 4, !dbg !184
  %540 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !184
  %data1141 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %540, i32 0, i32 0, !dbg !184
  %arrayidx1142 = getelementptr inbounds [32 x i32], [32 x i32]* %data1141, i64 0, i64 7, !dbg !184
  %541 = load i32, i32* %arrayidx1142, align 4, !dbg !184
  %xor1143 = xor i32 %539, %541, !dbg !184
  store i32 %xor1143, i32* %t1, align 4, !dbg !184
  %542 = load i32, i32* %t0, align 4, !dbg !184
  %543 = load i32, i32* %t1, align 4, !dbg !184
  %xor1144 = xor i32 %543, %542, !dbg !184
  store i32 %xor1144, i32* %t1, align 4, !dbg !184
  %544 = load i32, i32* %t1, align 4, !dbg !184
  %conv1145 = trunc i32 %544 to i8, !dbg !184
  %conv1146 = zext i8 %conv1145 to i32, !dbg !184
  %and1147 = and i32 %conv1146, 255, !dbg !184
  %idxprom1148 = sext i32 %and1147 to i64, !dbg !184
  %arrayidx1149 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1148, !dbg !184
  %545 = load i32, i32* %arrayidx1149, align 4, !dbg !184
  %546 = load i32, i32* %t1, align 4, !dbg !184
  %shr1150 = lshr i32 %546, 8, !dbg !184
  %conv1151 = trunc i32 %shr1150 to i8, !dbg !184
  %conv1152 = zext i8 %conv1151 to i32, !dbg !184
  %and1153 = and i32 %conv1152, 255, !dbg !184
  %idxprom1154 = sext i32 %and1153 to i64, !dbg !184
  %arrayidx1155 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1154, !dbg !184
  %547 = load i32, i32* %arrayidx1155, align 4, !dbg !184
  %xor1156 = xor i32 %545, %547, !dbg !184
  %548 = load i32, i32* %t1, align 4, !dbg !184
  %shr1157 = lshr i32 %548, 16, !dbg !184
  %conv1158 = trunc i32 %shr1157 to i8, !dbg !184
  %conv1159 = zext i8 %conv1158 to i32, !dbg !184
  %and1160 = and i32 %conv1159, 255, !dbg !184
  %idxprom1161 = sext i32 %and1160 to i64, !dbg !184
  %arrayidx1162 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1161, !dbg !184
  %549 = load i32, i32* %arrayidx1162, align 4, !dbg !184
  %xor1163 = xor i32 %xor1156, %549, !dbg !184
  %550 = load i32, i32* %t1, align 4, !dbg !184
  %shr1164 = lshr i32 %550, 24, !dbg !184
  %conv1165 = trunc i32 %shr1164 to i8, !dbg !184
  %conv1166 = zext i8 %conv1165 to i32, !dbg !184
  %and1167 = and i32 %conv1166, 255, !dbg !184
  %idxprom1168 = sext i32 %and1167 to i64, !dbg !184
  %arrayidx1169 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1168, !dbg !184
  %551 = load i32, i32* %arrayidx1169, align 4, !dbg !184
  %xor1170 = xor i32 %xor1163, %551, !dbg !184
  store i32 %xor1170, i32* %t1, align 4, !dbg !184
  %552 = load i32, i32* %t0, align 4, !dbg !184
  %553 = load i32, i32* %t1, align 4, !dbg !184
  %add1171 = add i32 %552, %553, !dbg !184
  store i32 %add1171, i32* %t0, align 4, !dbg !184
  %554 = load i32, i32* %t0, align 4, !dbg !184
  %conv1172 = trunc i32 %554 to i8, !dbg !184
  %conv1173 = zext i8 %conv1172 to i32, !dbg !184
  %and1174 = and i32 %conv1173, 255, !dbg !184
  %idxprom1175 = sext i32 %and1174 to i64, !dbg !184
  %arrayidx1176 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1175, !dbg !184
  %555 = load i32, i32* %arrayidx1176, align 4, !dbg !184
  %556 = load i32, i32* %t0, align 4, !dbg !184
  %shr1177 = lshr i32 %556, 8, !dbg !184
  %conv1178 = trunc i32 %shr1177 to i8, !dbg !184
  %conv1179 = zext i8 %conv1178 to i32, !dbg !184
  %and1180 = and i32 %conv1179, 255, !dbg !184
  %idxprom1181 = sext i32 %and1180 to i64, !dbg !184
  %arrayidx1182 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1181, !dbg !184
  %557 = load i32, i32* %arrayidx1182, align 4, !dbg !184
  %xor1183 = xor i32 %555, %557, !dbg !184
  %558 = load i32, i32* %t0, align 4, !dbg !184
  %shr1184 = lshr i32 %558, 16, !dbg !184
  %conv1185 = trunc i32 %shr1184 to i8, !dbg !184
  %conv1186 = zext i8 %conv1185 to i32, !dbg !184
  %and1187 = and i32 %conv1186, 255, !dbg !184
  %idxprom1188 = sext i32 %and1187 to i64, !dbg !184
  %arrayidx1189 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1188, !dbg !184
  %559 = load i32, i32* %arrayidx1189, align 4, !dbg !184
  %xor1190 = xor i32 %xor1183, %559, !dbg !184
  %560 = load i32, i32* %t0, align 4, !dbg !184
  %shr1191 = lshr i32 %560, 24, !dbg !184
  %conv1192 = trunc i32 %shr1191 to i8, !dbg !184
  %conv1193 = zext i8 %conv1192 to i32, !dbg !184
  %and1194 = and i32 %conv1193, 255, !dbg !184
  %idxprom1195 = sext i32 %and1194 to i64, !dbg !184
  %arrayidx1196 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1195, !dbg !184
  %561 = load i32, i32* %arrayidx1196, align 4, !dbg !184
  %xor1197 = xor i32 %xor1190, %561, !dbg !184
  store i32 %xor1197, i32* %t0, align 4, !dbg !184
  %562 = load i32, i32* %t1, align 4, !dbg !184
  %563 = load i32, i32* %t0, align 4, !dbg !184
  %add1198 = add i32 %562, %563, !dbg !184
  store i32 %add1198, i32* %t1, align 4, !dbg !184
  %564 = load i32, i32* %t1, align 4, !dbg !184
  %conv1199 = trunc i32 %564 to i8, !dbg !184
  %conv1200 = zext i8 %conv1199 to i32, !dbg !184
  %and1201 = and i32 %conv1200, 255, !dbg !184
  %idxprom1202 = sext i32 %and1201 to i64, !dbg !184
  %arrayidx1203 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1202, !dbg !184
  %565 = load i32, i32* %arrayidx1203, align 4, !dbg !184
  %566 = load i32, i32* %t1, align 4, !dbg !184
  %shr1204 = lshr i32 %566, 8, !dbg !184
  %conv1205 = trunc i32 %shr1204 to i8, !dbg !184
  %conv1206 = zext i8 %conv1205 to i32, !dbg !184
  %and1207 = and i32 %conv1206, 255, !dbg !184
  %idxprom1208 = sext i32 %and1207 to i64, !dbg !184
  %arrayidx1209 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1208, !dbg !184
  %567 = load i32, i32* %arrayidx1209, align 4, !dbg !184
  %xor1210 = xor i32 %565, %567, !dbg !184
  %568 = load i32, i32* %t1, align 4, !dbg !184
  %shr1211 = lshr i32 %568, 16, !dbg !184
  %conv1212 = trunc i32 %shr1211 to i8, !dbg !184
  %conv1213 = zext i8 %conv1212 to i32, !dbg !184
  %and1214 = and i32 %conv1213, 255, !dbg !184
  %idxprom1215 = sext i32 %and1214 to i64, !dbg !184
  %arrayidx1216 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1215, !dbg !184
  %569 = load i32, i32* %arrayidx1216, align 4, !dbg !184
  %xor1217 = xor i32 %xor1210, %569, !dbg !184
  %570 = load i32, i32* %t1, align 4, !dbg !184
  %shr1218 = lshr i32 %570, 24, !dbg !184
  %conv1219 = trunc i32 %shr1218 to i8, !dbg !184
  %conv1220 = zext i8 %conv1219 to i32, !dbg !184
  %and1221 = and i32 %conv1220, 255, !dbg !184
  %idxprom1222 = sext i32 %and1221 to i64, !dbg !184
  %arrayidx1223 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1222, !dbg !184
  %571 = load i32, i32* %arrayidx1223, align 4, !dbg !184
  %xor1224 = xor i32 %xor1217, %571, !dbg !184
  store i32 %xor1224, i32* %t1, align 4, !dbg !184
  %572 = load i32, i32* %t0, align 4, !dbg !184
  %573 = load i32, i32* %t1, align 4, !dbg !184
  %add1225 = add i32 %572, %573, !dbg !184
  store i32 %add1225, i32* %t0, align 4, !dbg !184
  %574 = load i32, i32* %t0, align 4, !dbg !184
  %575 = load i32, i32* %x1, align 4, !dbg !184
  %xor1226 = xor i32 %575, %574, !dbg !184
  store i32 %xor1226, i32* %x1, align 4, !dbg !184
  %576 = load i32, i32* %t1, align 4, !dbg !184
  %577 = load i32, i32* %x2, align 4, !dbg !184
  %xor1227 = xor i32 %577, %576, !dbg !184
  store i32 %xor1227, i32* %x2, align 4, !dbg !184
  %578 = load i32, i32* %x1, align 4, !dbg !185
  %579 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !185
  %data1228 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %579, i32 0, i32 0, !dbg !185
  %arrayidx1229 = getelementptr inbounds [32 x i32], [32 x i32]* %data1228, i64 0, i64 4, !dbg !185
  %580 = load i32, i32* %arrayidx1229, align 4, !dbg !185
  %xor1230 = xor i32 %578, %580, !dbg !185
  store i32 %xor1230, i32* %t0, align 4, !dbg !185
  %581 = load i32, i32* %x2, align 4, !dbg !185
  %582 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !185
  %data1231 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %582, i32 0, i32 0, !dbg !185
  %arrayidx1232 = getelementptr inbounds [32 x i32], [32 x i32]* %data1231, i64 0, i64 5, !dbg !185
  %583 = load i32, i32* %arrayidx1232, align 4, !dbg !185
  %xor1233 = xor i32 %581, %583, !dbg !185
  store i32 %xor1233, i32* %t1, align 4, !dbg !185
  %584 = load i32, i32* %t0, align 4, !dbg !185
  %585 = load i32, i32* %t1, align 4, !dbg !185
  %xor1234 = xor i32 %585, %584, !dbg !185
  store i32 %xor1234, i32* %t1, align 4, !dbg !185
  %586 = load i32, i32* %t1, align 4, !dbg !185
  %conv1235 = trunc i32 %586 to i8, !dbg !185
  %conv1236 = zext i8 %conv1235 to i32, !dbg !185
  %and1237 = and i32 %conv1236, 255, !dbg !185
  %idxprom1238 = sext i32 %and1237 to i64, !dbg !185
  %arrayidx1239 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1238, !dbg !185
  %587 = load i32, i32* %arrayidx1239, align 4, !dbg !185
  %588 = load i32, i32* %t1, align 4, !dbg !185
  %shr1240 = lshr i32 %588, 8, !dbg !185
  %conv1241 = trunc i32 %shr1240 to i8, !dbg !185
  %conv1242 = zext i8 %conv1241 to i32, !dbg !185
  %and1243 = and i32 %conv1242, 255, !dbg !185
  %idxprom1244 = sext i32 %and1243 to i64, !dbg !185
  %arrayidx1245 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1244, !dbg !185
  %589 = load i32, i32* %arrayidx1245, align 4, !dbg !185
  %xor1246 = xor i32 %587, %589, !dbg !185
  %590 = load i32, i32* %t1, align 4, !dbg !185
  %shr1247 = lshr i32 %590, 16, !dbg !185
  %conv1248 = trunc i32 %shr1247 to i8, !dbg !185
  %conv1249 = zext i8 %conv1248 to i32, !dbg !185
  %and1250 = and i32 %conv1249, 255, !dbg !185
  %idxprom1251 = sext i32 %and1250 to i64, !dbg !185
  %arrayidx1252 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1251, !dbg !185
  %591 = load i32, i32* %arrayidx1252, align 4, !dbg !185
  %xor1253 = xor i32 %xor1246, %591, !dbg !185
  %592 = load i32, i32* %t1, align 4, !dbg !185
  %shr1254 = lshr i32 %592, 24, !dbg !185
  %conv1255 = trunc i32 %shr1254 to i8, !dbg !185
  %conv1256 = zext i8 %conv1255 to i32, !dbg !185
  %and1257 = and i32 %conv1256, 255, !dbg !185
  %idxprom1258 = sext i32 %and1257 to i64, !dbg !185
  %arrayidx1259 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1258, !dbg !185
  %593 = load i32, i32* %arrayidx1259, align 4, !dbg !185
  %xor1260 = xor i32 %xor1253, %593, !dbg !185
  store i32 %xor1260, i32* %t1, align 4, !dbg !185
  %594 = load i32, i32* %t0, align 4, !dbg !185
  %595 = load i32, i32* %t1, align 4, !dbg !185
  %add1261 = add i32 %594, %595, !dbg !185
  store i32 %add1261, i32* %t0, align 4, !dbg !185
  %596 = load i32, i32* %t0, align 4, !dbg !185
  %conv1262 = trunc i32 %596 to i8, !dbg !185
  %conv1263 = zext i8 %conv1262 to i32, !dbg !185
  %and1264 = and i32 %conv1263, 255, !dbg !185
  %idxprom1265 = sext i32 %and1264 to i64, !dbg !185
  %arrayidx1266 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1265, !dbg !185
  %597 = load i32, i32* %arrayidx1266, align 4, !dbg !185
  %598 = load i32, i32* %t0, align 4, !dbg !185
  %shr1267 = lshr i32 %598, 8, !dbg !185
  %conv1268 = trunc i32 %shr1267 to i8, !dbg !185
  %conv1269 = zext i8 %conv1268 to i32, !dbg !185
  %and1270 = and i32 %conv1269, 255, !dbg !185
  %idxprom1271 = sext i32 %and1270 to i64, !dbg !185
  %arrayidx1272 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1271, !dbg !185
  %599 = load i32, i32* %arrayidx1272, align 4, !dbg !185
  %xor1273 = xor i32 %597, %599, !dbg !185
  %600 = load i32, i32* %t0, align 4, !dbg !185
  %shr1274 = lshr i32 %600, 16, !dbg !185
  %conv1275 = trunc i32 %shr1274 to i8, !dbg !185
  %conv1276 = zext i8 %conv1275 to i32, !dbg !185
  %and1277 = and i32 %conv1276, 255, !dbg !185
  %idxprom1278 = sext i32 %and1277 to i64, !dbg !185
  %arrayidx1279 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1278, !dbg !185
  %601 = load i32, i32* %arrayidx1279, align 4, !dbg !185
  %xor1280 = xor i32 %xor1273, %601, !dbg !185
  %602 = load i32, i32* %t0, align 4, !dbg !185
  %shr1281 = lshr i32 %602, 24, !dbg !185
  %conv1282 = trunc i32 %shr1281 to i8, !dbg !185
  %conv1283 = zext i8 %conv1282 to i32, !dbg !185
  %and1284 = and i32 %conv1283, 255, !dbg !185
  %idxprom1285 = sext i32 %and1284 to i64, !dbg !185
  %arrayidx1286 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1285, !dbg !185
  %603 = load i32, i32* %arrayidx1286, align 4, !dbg !185
  %xor1287 = xor i32 %xor1280, %603, !dbg !185
  store i32 %xor1287, i32* %t0, align 4, !dbg !185
  %604 = load i32, i32* %t1, align 4, !dbg !185
  %605 = load i32, i32* %t0, align 4, !dbg !185
  %add1288 = add i32 %604, %605, !dbg !185
  store i32 %add1288, i32* %t1, align 4, !dbg !185
  %606 = load i32, i32* %t1, align 4, !dbg !185
  %conv1289 = trunc i32 %606 to i8, !dbg !185
  %conv1290 = zext i8 %conv1289 to i32, !dbg !185
  %and1291 = and i32 %conv1290, 255, !dbg !185
  %idxprom1292 = sext i32 %and1291 to i64, !dbg !185
  %arrayidx1293 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1292, !dbg !185
  %607 = load i32, i32* %arrayidx1293, align 4, !dbg !185
  %608 = load i32, i32* %t1, align 4, !dbg !185
  %shr1294 = lshr i32 %608, 8, !dbg !185
  %conv1295 = trunc i32 %shr1294 to i8, !dbg !185
  %conv1296 = zext i8 %conv1295 to i32, !dbg !185
  %and1297 = and i32 %conv1296, 255, !dbg !185
  %idxprom1298 = sext i32 %and1297 to i64, !dbg !185
  %arrayidx1299 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1298, !dbg !185
  %609 = load i32, i32* %arrayidx1299, align 4, !dbg !185
  %xor1300 = xor i32 %607, %609, !dbg !185
  %610 = load i32, i32* %t1, align 4, !dbg !185
  %shr1301 = lshr i32 %610, 16, !dbg !185
  %conv1302 = trunc i32 %shr1301 to i8, !dbg !185
  %conv1303 = zext i8 %conv1302 to i32, !dbg !185
  %and1304 = and i32 %conv1303, 255, !dbg !185
  %idxprom1305 = sext i32 %and1304 to i64, !dbg !185
  %arrayidx1306 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1305, !dbg !185
  %611 = load i32, i32* %arrayidx1306, align 4, !dbg !185
  %xor1307 = xor i32 %xor1300, %611, !dbg !185
  %612 = load i32, i32* %t1, align 4, !dbg !185
  %shr1308 = lshr i32 %612, 24, !dbg !185
  %conv1309 = trunc i32 %shr1308 to i8, !dbg !185
  %conv1310 = zext i8 %conv1309 to i32, !dbg !185
  %and1311 = and i32 %conv1310, 255, !dbg !185
  %idxprom1312 = sext i32 %and1311 to i64, !dbg !185
  %arrayidx1313 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1312, !dbg !185
  %613 = load i32, i32* %arrayidx1313, align 4, !dbg !185
  %xor1314 = xor i32 %xor1307, %613, !dbg !185
  store i32 %xor1314, i32* %t1, align 4, !dbg !185
  %614 = load i32, i32* %t0, align 4, !dbg !185
  %615 = load i32, i32* %t1, align 4, !dbg !185
  %add1315 = add i32 %614, %615, !dbg !185
  store i32 %add1315, i32* %t0, align 4, !dbg !185
  %616 = load i32, i32* %t0, align 4, !dbg !185
  %617 = load i32, i32* %x3, align 4, !dbg !185
  %xor1316 = xor i32 %617, %616, !dbg !185
  store i32 %xor1316, i32* %x3, align 4, !dbg !185
  %618 = load i32, i32* %t1, align 4, !dbg !185
  %619 = load i32, i32* %x4, align 4, !dbg !185
  %xor1317 = xor i32 %619, %618, !dbg !185
  store i32 %xor1317, i32* %x4, align 4, !dbg !185
  %620 = load i32, i32* %x3, align 4, !dbg !186
  %621 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !186
  %data1318 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %621, i32 0, i32 0, !dbg !186
  %arrayidx1319 = getelementptr inbounds [32 x i32], [32 x i32]* %data1318, i64 0, i64 2, !dbg !186
  %622 = load i32, i32* %arrayidx1319, align 4, !dbg !186
  %xor1320 = xor i32 %620, %622, !dbg !186
  store i32 %xor1320, i32* %t0, align 4, !dbg !186
  %623 = load i32, i32* %x4, align 4, !dbg !186
  %624 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !186
  %data1321 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %624, i32 0, i32 0, !dbg !186
  %arrayidx1322 = getelementptr inbounds [32 x i32], [32 x i32]* %data1321, i64 0, i64 3, !dbg !186
  %625 = load i32, i32* %arrayidx1322, align 4, !dbg !186
  %xor1323 = xor i32 %623, %625, !dbg !186
  store i32 %xor1323, i32* %t1, align 4, !dbg !186
  %626 = load i32, i32* %t0, align 4, !dbg !186
  %627 = load i32, i32* %t1, align 4, !dbg !186
  %xor1324 = xor i32 %627, %626, !dbg !186
  store i32 %xor1324, i32* %t1, align 4, !dbg !186
  %628 = load i32, i32* %t1, align 4, !dbg !186
  %conv1325 = trunc i32 %628 to i8, !dbg !186
  %conv1326 = zext i8 %conv1325 to i32, !dbg !186
  %and1327 = and i32 %conv1326, 255, !dbg !186
  %idxprom1328 = sext i32 %and1327 to i64, !dbg !186
  %arrayidx1329 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1328, !dbg !186
  %629 = load i32, i32* %arrayidx1329, align 4, !dbg !186
  %630 = load i32, i32* %t1, align 4, !dbg !186
  %shr1330 = lshr i32 %630, 8, !dbg !186
  %conv1331 = trunc i32 %shr1330 to i8, !dbg !186
  %conv1332 = zext i8 %conv1331 to i32, !dbg !186
  %and1333 = and i32 %conv1332, 255, !dbg !186
  %idxprom1334 = sext i32 %and1333 to i64, !dbg !186
  %arrayidx1335 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1334, !dbg !186
  %631 = load i32, i32* %arrayidx1335, align 4, !dbg !186
  %xor1336 = xor i32 %629, %631, !dbg !186
  %632 = load i32, i32* %t1, align 4, !dbg !186
  %shr1337 = lshr i32 %632, 16, !dbg !186
  %conv1338 = trunc i32 %shr1337 to i8, !dbg !186
  %conv1339 = zext i8 %conv1338 to i32, !dbg !186
  %and1340 = and i32 %conv1339, 255, !dbg !186
  %idxprom1341 = sext i32 %and1340 to i64, !dbg !186
  %arrayidx1342 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1341, !dbg !186
  %633 = load i32, i32* %arrayidx1342, align 4, !dbg !186
  %xor1343 = xor i32 %xor1336, %633, !dbg !186
  %634 = load i32, i32* %t1, align 4, !dbg !186
  %shr1344 = lshr i32 %634, 24, !dbg !186
  %conv1345 = trunc i32 %shr1344 to i8, !dbg !186
  %conv1346 = zext i8 %conv1345 to i32, !dbg !186
  %and1347 = and i32 %conv1346, 255, !dbg !186
  %idxprom1348 = sext i32 %and1347 to i64, !dbg !186
  %arrayidx1349 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1348, !dbg !186
  %635 = load i32, i32* %arrayidx1349, align 4, !dbg !186
  %xor1350 = xor i32 %xor1343, %635, !dbg !186
  store i32 %xor1350, i32* %t1, align 4, !dbg !186
  %636 = load i32, i32* %t0, align 4, !dbg !186
  %637 = load i32, i32* %t1, align 4, !dbg !186
  %add1351 = add i32 %636, %637, !dbg !186
  store i32 %add1351, i32* %t0, align 4, !dbg !186
  %638 = load i32, i32* %t0, align 4, !dbg !186
  %conv1352 = trunc i32 %638 to i8, !dbg !186
  %conv1353 = zext i8 %conv1352 to i32, !dbg !186
  %and1354 = and i32 %conv1353, 255, !dbg !186
  %idxprom1355 = sext i32 %and1354 to i64, !dbg !186
  %arrayidx1356 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1355, !dbg !186
  %639 = load i32, i32* %arrayidx1356, align 4, !dbg !186
  %640 = load i32, i32* %t0, align 4, !dbg !186
  %shr1357 = lshr i32 %640, 8, !dbg !186
  %conv1358 = trunc i32 %shr1357 to i8, !dbg !186
  %conv1359 = zext i8 %conv1358 to i32, !dbg !186
  %and1360 = and i32 %conv1359, 255, !dbg !186
  %idxprom1361 = sext i32 %and1360 to i64, !dbg !186
  %arrayidx1362 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1361, !dbg !186
  %641 = load i32, i32* %arrayidx1362, align 4, !dbg !186
  %xor1363 = xor i32 %639, %641, !dbg !186
  %642 = load i32, i32* %t0, align 4, !dbg !186
  %shr1364 = lshr i32 %642, 16, !dbg !186
  %conv1365 = trunc i32 %shr1364 to i8, !dbg !186
  %conv1366 = zext i8 %conv1365 to i32, !dbg !186
  %and1367 = and i32 %conv1366, 255, !dbg !186
  %idxprom1368 = sext i32 %and1367 to i64, !dbg !186
  %arrayidx1369 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1368, !dbg !186
  %643 = load i32, i32* %arrayidx1369, align 4, !dbg !186
  %xor1370 = xor i32 %xor1363, %643, !dbg !186
  %644 = load i32, i32* %t0, align 4, !dbg !186
  %shr1371 = lshr i32 %644, 24, !dbg !186
  %conv1372 = trunc i32 %shr1371 to i8, !dbg !186
  %conv1373 = zext i8 %conv1372 to i32, !dbg !186
  %and1374 = and i32 %conv1373, 255, !dbg !186
  %idxprom1375 = sext i32 %and1374 to i64, !dbg !186
  %arrayidx1376 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1375, !dbg !186
  %645 = load i32, i32* %arrayidx1376, align 4, !dbg !186
  %xor1377 = xor i32 %xor1370, %645, !dbg !186
  store i32 %xor1377, i32* %t0, align 4, !dbg !186
  %646 = load i32, i32* %t1, align 4, !dbg !186
  %647 = load i32, i32* %t0, align 4, !dbg !186
  %add1378 = add i32 %646, %647, !dbg !186
  store i32 %add1378, i32* %t1, align 4, !dbg !186
  %648 = load i32, i32* %t1, align 4, !dbg !186
  %conv1379 = trunc i32 %648 to i8, !dbg !186
  %conv1380 = zext i8 %conv1379 to i32, !dbg !186
  %and1381 = and i32 %conv1380, 255, !dbg !186
  %idxprom1382 = sext i32 %and1381 to i64, !dbg !186
  %arrayidx1383 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1382, !dbg !186
  %649 = load i32, i32* %arrayidx1383, align 4, !dbg !186
  %650 = load i32, i32* %t1, align 4, !dbg !186
  %shr1384 = lshr i32 %650, 8, !dbg !186
  %conv1385 = trunc i32 %shr1384 to i8, !dbg !186
  %conv1386 = zext i8 %conv1385 to i32, !dbg !186
  %and1387 = and i32 %conv1386, 255, !dbg !186
  %idxprom1388 = sext i32 %and1387 to i64, !dbg !186
  %arrayidx1389 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1388, !dbg !186
  %651 = load i32, i32* %arrayidx1389, align 4, !dbg !186
  %xor1390 = xor i32 %649, %651, !dbg !186
  %652 = load i32, i32* %t1, align 4, !dbg !186
  %shr1391 = lshr i32 %652, 16, !dbg !186
  %conv1392 = trunc i32 %shr1391 to i8, !dbg !186
  %conv1393 = zext i8 %conv1392 to i32, !dbg !186
  %and1394 = and i32 %conv1393, 255, !dbg !186
  %idxprom1395 = sext i32 %and1394 to i64, !dbg !186
  %arrayidx1396 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1395, !dbg !186
  %653 = load i32, i32* %arrayidx1396, align 4, !dbg !186
  %xor1397 = xor i32 %xor1390, %653, !dbg !186
  %654 = load i32, i32* %t1, align 4, !dbg !186
  %shr1398 = lshr i32 %654, 24, !dbg !186
  %conv1399 = trunc i32 %shr1398 to i8, !dbg !186
  %conv1400 = zext i8 %conv1399 to i32, !dbg !186
  %and1401 = and i32 %conv1400, 255, !dbg !186
  %idxprom1402 = sext i32 %and1401 to i64, !dbg !186
  %arrayidx1403 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1402, !dbg !186
  %655 = load i32, i32* %arrayidx1403, align 4, !dbg !186
  %xor1404 = xor i32 %xor1397, %655, !dbg !186
  store i32 %xor1404, i32* %t1, align 4, !dbg !186
  %656 = load i32, i32* %t0, align 4, !dbg !186
  %657 = load i32, i32* %t1, align 4, !dbg !186
  %add1405 = add i32 %656, %657, !dbg !186
  store i32 %add1405, i32* %t0, align 4, !dbg !186
  %658 = load i32, i32* %t0, align 4, !dbg !186
  %659 = load i32, i32* %x1, align 4, !dbg !186
  %xor1406 = xor i32 %659, %658, !dbg !186
  store i32 %xor1406, i32* %x1, align 4, !dbg !186
  %660 = load i32, i32* %t1, align 4, !dbg !186
  %661 = load i32, i32* %x2, align 4, !dbg !186
  %xor1407 = xor i32 %661, %660, !dbg !186
  store i32 %xor1407, i32* %x2, align 4, !dbg !186
  %662 = load i32, i32* %x1, align 4, !dbg !187
  %663 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !187
  %data1408 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %663, i32 0, i32 0, !dbg !187
  %arrayidx1409 = getelementptr inbounds [32 x i32], [32 x i32]* %data1408, i64 0, i64 0, !dbg !187
  %664 = load i32, i32* %arrayidx1409, align 4, !dbg !187
  %xor1410 = xor i32 %662, %664, !dbg !187
  store i32 %xor1410, i32* %t0, align 4, !dbg !187
  %665 = load i32, i32* %x2, align 4, !dbg !187
  %666 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr, align 8, !dbg !187
  %data1411 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %666, i32 0, i32 0, !dbg !187
  %arrayidx1412 = getelementptr inbounds [32 x i32], [32 x i32]* %data1411, i64 0, i64 1, !dbg !187
  %667 = load i32, i32* %arrayidx1412, align 4, !dbg !187
  %xor1413 = xor i32 %665, %667, !dbg !187
  store i32 %xor1413, i32* %t1, align 4, !dbg !187
  %668 = load i32, i32* %t0, align 4, !dbg !187
  %669 = load i32, i32* %t1, align 4, !dbg !187
  %xor1414 = xor i32 %669, %668, !dbg !187
  store i32 %xor1414, i32* %t1, align 4, !dbg !187
  %670 = load i32, i32* %t1, align 4, !dbg !187
  %conv1415 = trunc i32 %670 to i8, !dbg !187
  %conv1416 = zext i8 %conv1415 to i32, !dbg !187
  %and1417 = and i32 %conv1416, 255, !dbg !187
  %idxprom1418 = sext i32 %and1417 to i64, !dbg !187
  %arrayidx1419 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1418, !dbg !187
  %671 = load i32, i32* %arrayidx1419, align 4, !dbg !187
  %672 = load i32, i32* %t1, align 4, !dbg !187
  %shr1420 = lshr i32 %672, 8, !dbg !187
  %conv1421 = trunc i32 %shr1420 to i8, !dbg !187
  %conv1422 = zext i8 %conv1421 to i32, !dbg !187
  %and1423 = and i32 %conv1422, 255, !dbg !187
  %idxprom1424 = sext i32 %and1423 to i64, !dbg !187
  %arrayidx1425 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1424, !dbg !187
  %673 = load i32, i32* %arrayidx1425, align 4, !dbg !187
  %xor1426 = xor i32 %671, %673, !dbg !187
  %674 = load i32, i32* %t1, align 4, !dbg !187
  %shr1427 = lshr i32 %674, 16, !dbg !187
  %conv1428 = trunc i32 %shr1427 to i8, !dbg !187
  %conv1429 = zext i8 %conv1428 to i32, !dbg !187
  %and1430 = and i32 %conv1429, 255, !dbg !187
  %idxprom1431 = sext i32 %and1430 to i64, !dbg !187
  %arrayidx1432 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1431, !dbg !187
  %675 = load i32, i32* %arrayidx1432, align 4, !dbg !187
  %xor1433 = xor i32 %xor1426, %675, !dbg !187
  %676 = load i32, i32* %t1, align 4, !dbg !187
  %shr1434 = lshr i32 %676, 24, !dbg !187
  %conv1435 = trunc i32 %shr1434 to i8, !dbg !187
  %conv1436 = zext i8 %conv1435 to i32, !dbg !187
  %and1437 = and i32 %conv1436, 255, !dbg !187
  %idxprom1438 = sext i32 %and1437 to i64, !dbg !187
  %arrayidx1439 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1438, !dbg !187
  %677 = load i32, i32* %arrayidx1439, align 4, !dbg !187
  %xor1440 = xor i32 %xor1433, %677, !dbg !187
  store i32 %xor1440, i32* %t1, align 4, !dbg !187
  %678 = load i32, i32* %t0, align 4, !dbg !187
  %679 = load i32, i32* %t1, align 4, !dbg !187
  %add1441 = add i32 %678, %679, !dbg !187
  store i32 %add1441, i32* %t0, align 4, !dbg !187
  %680 = load i32, i32* %t0, align 4, !dbg !187
  %conv1442 = trunc i32 %680 to i8, !dbg !187
  %conv1443 = zext i8 %conv1442 to i32, !dbg !187
  %and1444 = and i32 %conv1443, 255, !dbg !187
  %idxprom1445 = sext i32 %and1444 to i64, !dbg !187
  %arrayidx1446 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1445, !dbg !187
  %681 = load i32, i32* %arrayidx1446, align 4, !dbg !187
  %682 = load i32, i32* %t0, align 4, !dbg !187
  %shr1447 = lshr i32 %682, 8, !dbg !187
  %conv1448 = trunc i32 %shr1447 to i8, !dbg !187
  %conv1449 = zext i8 %conv1448 to i32, !dbg !187
  %and1450 = and i32 %conv1449, 255, !dbg !187
  %idxprom1451 = sext i32 %and1450 to i64, !dbg !187
  %arrayidx1452 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1451, !dbg !187
  %683 = load i32, i32* %arrayidx1452, align 4, !dbg !187
  %xor1453 = xor i32 %681, %683, !dbg !187
  %684 = load i32, i32* %t0, align 4, !dbg !187
  %shr1454 = lshr i32 %684, 16, !dbg !187
  %conv1455 = trunc i32 %shr1454 to i8, !dbg !187
  %conv1456 = zext i8 %conv1455 to i32, !dbg !187
  %and1457 = and i32 %conv1456, 255, !dbg !187
  %idxprom1458 = sext i32 %and1457 to i64, !dbg !187
  %arrayidx1459 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1458, !dbg !187
  %685 = load i32, i32* %arrayidx1459, align 4, !dbg !187
  %xor1460 = xor i32 %xor1453, %685, !dbg !187
  %686 = load i32, i32* %t0, align 4, !dbg !187
  %shr1461 = lshr i32 %686, 24, !dbg !187
  %conv1462 = trunc i32 %shr1461 to i8, !dbg !187
  %conv1463 = zext i8 %conv1462 to i32, !dbg !187
  %and1464 = and i32 %conv1463, 255, !dbg !187
  %idxprom1465 = sext i32 %and1464 to i64, !dbg !187
  %arrayidx1466 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1465, !dbg !187
  %687 = load i32, i32* %arrayidx1466, align 4, !dbg !187
  %xor1467 = xor i32 %xor1460, %687, !dbg !187
  store i32 %xor1467, i32* %t0, align 4, !dbg !187
  %688 = load i32, i32* %t1, align 4, !dbg !187
  %689 = load i32, i32* %t0, align 4, !dbg !187
  %add1468 = add i32 %688, %689, !dbg !187
  store i32 %add1468, i32* %t1, align 4, !dbg !187
  %690 = load i32, i32* %t1, align 4, !dbg !187
  %conv1469 = trunc i32 %690 to i8, !dbg !187
  %conv1470 = zext i8 %conv1469 to i32, !dbg !187
  %and1471 = and i32 %conv1470, 255, !dbg !187
  %idxprom1472 = sext i32 %and1471 to i64, !dbg !187
  %arrayidx1473 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1472, !dbg !187
  %691 = load i32, i32* %arrayidx1473, align 4, !dbg !187
  %692 = load i32, i32* %t1, align 4, !dbg !187
  %shr1474 = lshr i32 %692, 8, !dbg !187
  %conv1475 = trunc i32 %shr1474 to i8, !dbg !187
  %conv1476 = zext i8 %conv1475 to i32, !dbg !187
  %and1477 = and i32 %conv1476, 255, !dbg !187
  %idxprom1478 = sext i32 %and1477 to i64, !dbg !187
  %arrayidx1479 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1478, !dbg !187
  %693 = load i32, i32* %arrayidx1479, align 4, !dbg !187
  %xor1480 = xor i32 %691, %693, !dbg !187
  %694 = load i32, i32* %t1, align 4, !dbg !187
  %shr1481 = lshr i32 %694, 16, !dbg !187
  %conv1482 = trunc i32 %shr1481 to i8, !dbg !187
  %conv1483 = zext i8 %conv1482 to i32, !dbg !187
  %and1484 = and i32 %conv1483, 255, !dbg !187
  %idxprom1485 = sext i32 %and1484 to i64, !dbg !187
  %arrayidx1486 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1485, !dbg !187
  %695 = load i32, i32* %arrayidx1486, align 4, !dbg !187
  %xor1487 = xor i32 %xor1480, %695, !dbg !187
  %696 = load i32, i32* %t1, align 4, !dbg !187
  %shr1488 = lshr i32 %696, 24, !dbg !187
  %conv1489 = trunc i32 %shr1488 to i8, !dbg !187
  %conv1490 = zext i8 %conv1489 to i32, !dbg !187
  %and1491 = and i32 %conv1490, 255, !dbg !187
  %idxprom1492 = sext i32 %and1491 to i64, !dbg !187
  %arrayidx1493 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1492, !dbg !187
  %697 = load i32, i32* %arrayidx1493, align 4, !dbg !187
  %xor1494 = xor i32 %xor1487, %697, !dbg !187
  store i32 %xor1494, i32* %t1, align 4, !dbg !187
  %698 = load i32, i32* %t0, align 4, !dbg !187
  %699 = load i32, i32* %t1, align 4, !dbg !187
  %add1495 = add i32 %698, %699, !dbg !187
  store i32 %add1495, i32* %t0, align 4, !dbg !187
  %700 = load i32, i32* %t0, align 4, !dbg !187
  %701 = load i32, i32* %x3, align 4, !dbg !187
  %xor1496 = xor i32 %701, %700, !dbg !187
  store i32 %xor1496, i32* %x3, align 4, !dbg !187
  %702 = load i32, i32* %t1, align 4, !dbg !187
  %703 = load i32, i32* %x4, align 4, !dbg !187
  %xor1497 = xor i32 %703, %702, !dbg !187
  store i32 %xor1497, i32* %x4, align 4, !dbg !187
  %704 = load i32, i32* %x3, align 4, !dbg !188
  %shr1498 = lshr i32 %704, 24, !dbg !188
  %conv1499 = trunc i32 %shr1498 to i8, !dbg !188
  %conv1500 = zext i8 %conv1499 to i32, !dbg !188
  %and1501 = and i32 %conv1500, 255, !dbg !188
  %conv1502 = trunc i32 %and1501 to i8, !dbg !188
  %705 = load i8*, i8** %d.addr, align 8, !dbg !188
  %add.ptr1503 = getelementptr inbounds i8, i8* %705, i64 0, !dbg !188
  store i8 %conv1502, i8* %add.ptr1503, align 1, !dbg !188
  %706 = load i32, i32* %x3, align 4, !dbg !188
  %shr1504 = lshr i32 %706, 16, !dbg !188
  %conv1505 = trunc i32 %shr1504 to i8, !dbg !188
  %conv1506 = zext i8 %conv1505 to i32, !dbg !188
  %and1507 = and i32 %conv1506, 255, !dbg !188
  %conv1508 = trunc i32 %and1507 to i8, !dbg !188
  %707 = load i8*, i8** %d.addr, align 8, !dbg !188
  %add.ptr1509 = getelementptr inbounds i8, i8* %707, i64 1, !dbg !188
  store i8 %conv1508, i8* %add.ptr1509, align 1, !dbg !188
  %708 = load i32, i32* %x3, align 4, !dbg !188
  %shr1510 = lshr i32 %708, 8, !dbg !188
  %conv1511 = trunc i32 %shr1510 to i8, !dbg !188
  %conv1512 = zext i8 %conv1511 to i32, !dbg !188
  %and1513 = and i32 %conv1512, 255, !dbg !188
  %conv1514 = trunc i32 %and1513 to i8, !dbg !188
  %709 = load i8*, i8** %d.addr, align 8, !dbg !188
  %add.ptr1515 = getelementptr inbounds i8, i8* %709, i64 2, !dbg !188
  store i8 %conv1514, i8* %add.ptr1515, align 1, !dbg !188
  %710 = load i32, i32* %x3, align 4, !dbg !188
  %conv1516 = trunc i32 %710 to i8, !dbg !188
  %conv1517 = zext i8 %conv1516 to i32, !dbg !188
  %and1518 = and i32 %conv1517, 255, !dbg !188
  %conv1519 = trunc i32 %and1518 to i8, !dbg !188
  %711 = load i8*, i8** %d.addr, align 8, !dbg !188
  %add.ptr1520 = getelementptr inbounds i8, i8* %711, i64 3, !dbg !188
  store i8 %conv1519, i8* %add.ptr1520, align 1, !dbg !188
  %712 = load i32, i32* %x4, align 4, !dbg !189
  %shr1521 = lshr i32 %712, 24, !dbg !189
  %conv1522 = trunc i32 %shr1521 to i8, !dbg !189
  %conv1523 = zext i8 %conv1522 to i32, !dbg !189
  %and1524 = and i32 %conv1523, 255, !dbg !189
  %conv1525 = trunc i32 %and1524 to i8, !dbg !189
  %713 = load i8*, i8** %d.addr, align 8, !dbg !189
  %add.ptr1526 = getelementptr inbounds i8, i8* %713, i64 4, !dbg !189
  %add.ptr1527 = getelementptr inbounds i8, i8* %add.ptr1526, i64 0, !dbg !189
  store i8 %conv1525, i8* %add.ptr1527, align 1, !dbg !189
  %714 = load i32, i32* %x4, align 4, !dbg !189
  %shr1528 = lshr i32 %714, 16, !dbg !189
  %conv1529 = trunc i32 %shr1528 to i8, !dbg !189
  %conv1530 = zext i8 %conv1529 to i32, !dbg !189
  %and1531 = and i32 %conv1530, 255, !dbg !189
  %conv1532 = trunc i32 %and1531 to i8, !dbg !189
  %715 = load i8*, i8** %d.addr, align 8, !dbg !189
  %add.ptr1533 = getelementptr inbounds i8, i8* %715, i64 4, !dbg !189
  %add.ptr1534 = getelementptr inbounds i8, i8* %add.ptr1533, i64 1, !dbg !189
  store i8 %conv1532, i8* %add.ptr1534, align 1, !dbg !189
  %716 = load i32, i32* %x4, align 4, !dbg !189
  %shr1535 = lshr i32 %716, 8, !dbg !189
  %conv1536 = trunc i32 %shr1535 to i8, !dbg !189
  %conv1537 = zext i8 %conv1536 to i32, !dbg !189
  %and1538 = and i32 %conv1537, 255, !dbg !189
  %conv1539 = trunc i32 %and1538 to i8, !dbg !189
  %717 = load i8*, i8** %d.addr, align 8, !dbg !189
  %add.ptr1540 = getelementptr inbounds i8, i8* %717, i64 4, !dbg !189
  %add.ptr1541 = getelementptr inbounds i8, i8* %add.ptr1540, i64 2, !dbg !189
  store i8 %conv1539, i8* %add.ptr1541, align 1, !dbg !189
  %718 = load i32, i32* %x4, align 4, !dbg !189
  %conv1542 = trunc i32 %718 to i8, !dbg !189
  %conv1543 = zext i8 %conv1542 to i32, !dbg !189
  %and1544 = and i32 %conv1543, 255, !dbg !189
  %conv1545 = trunc i32 %and1544 to i8, !dbg !189
  %719 = load i8*, i8** %d.addr, align 8, !dbg !189
  %add.ptr1546 = getelementptr inbounds i8, i8* %719, i64 4, !dbg !189
  %add.ptr1547 = getelementptr inbounds i8, i8* %add.ptr1546, i64 3, !dbg !189
  store i8 %conv1545, i8* %add.ptr1547, align 1, !dbg !189
  %720 = load i32, i32* %x1, align 4, !dbg !190
  %shr1548 = lshr i32 %720, 24, !dbg !190
  %conv1549 = trunc i32 %shr1548 to i8, !dbg !190
  %conv1550 = zext i8 %conv1549 to i32, !dbg !190
  %and1551 = and i32 %conv1550, 255, !dbg !190
  %conv1552 = trunc i32 %and1551 to i8, !dbg !190
  %721 = load i8*, i8** %d.addr, align 8, !dbg !190
  %add.ptr1553 = getelementptr inbounds i8, i8* %721, i64 8, !dbg !190
  %add.ptr1554 = getelementptr inbounds i8, i8* %add.ptr1553, i64 0, !dbg !190
  store i8 %conv1552, i8* %add.ptr1554, align 1, !dbg !190
  %722 = load i32, i32* %x1, align 4, !dbg !190
  %shr1555 = lshr i32 %722, 16, !dbg !190
  %conv1556 = trunc i32 %shr1555 to i8, !dbg !190
  %conv1557 = zext i8 %conv1556 to i32, !dbg !190
  %and1558 = and i32 %conv1557, 255, !dbg !190
  %conv1559 = trunc i32 %and1558 to i8, !dbg !190
  %723 = load i8*, i8** %d.addr, align 8, !dbg !190
  %add.ptr1560 = getelementptr inbounds i8, i8* %723, i64 8, !dbg !190
  %add.ptr1561 = getelementptr inbounds i8, i8* %add.ptr1560, i64 1, !dbg !190
  store i8 %conv1559, i8* %add.ptr1561, align 1, !dbg !190
  %724 = load i32, i32* %x1, align 4, !dbg !190
  %shr1562 = lshr i32 %724, 8, !dbg !190
  %conv1563 = trunc i32 %shr1562 to i8, !dbg !190
  %conv1564 = zext i8 %conv1563 to i32, !dbg !190
  %and1565 = and i32 %conv1564, 255, !dbg !190
  %conv1566 = trunc i32 %and1565 to i8, !dbg !190
  %725 = load i8*, i8** %d.addr, align 8, !dbg !190
  %add.ptr1567 = getelementptr inbounds i8, i8* %725, i64 8, !dbg !190
  %add.ptr1568 = getelementptr inbounds i8, i8* %add.ptr1567, i64 2, !dbg !190
  store i8 %conv1566, i8* %add.ptr1568, align 1, !dbg !190
  %726 = load i32, i32* %x1, align 4, !dbg !190
  %conv1569 = trunc i32 %726 to i8, !dbg !190
  %conv1570 = zext i8 %conv1569 to i32, !dbg !190
  %and1571 = and i32 %conv1570, 255, !dbg !190
  %conv1572 = trunc i32 %and1571 to i8, !dbg !190
  %727 = load i8*, i8** %d.addr, align 8, !dbg !190
  %add.ptr1573 = getelementptr inbounds i8, i8* %727, i64 8, !dbg !190
  %add.ptr1574 = getelementptr inbounds i8, i8* %add.ptr1573, i64 3, !dbg !190
  store i8 %conv1572, i8* %add.ptr1574, align 1, !dbg !190
  %728 = load i32, i32* %x2, align 4, !dbg !191
  %shr1575 = lshr i32 %728, 24, !dbg !191
  %conv1576 = trunc i32 %shr1575 to i8, !dbg !191
  %conv1577 = zext i8 %conv1576 to i32, !dbg !191
  %and1578 = and i32 %conv1577, 255, !dbg !191
  %conv1579 = trunc i32 %and1578 to i8, !dbg !191
  %729 = load i8*, i8** %d.addr, align 8, !dbg !191
  %add.ptr1580 = getelementptr inbounds i8, i8* %729, i64 12, !dbg !191
  %add.ptr1581 = getelementptr inbounds i8, i8* %add.ptr1580, i64 0, !dbg !191
  store i8 %conv1579, i8* %add.ptr1581, align 1, !dbg !191
  %730 = load i32, i32* %x2, align 4, !dbg !191
  %shr1582 = lshr i32 %730, 16, !dbg !191
  %conv1583 = trunc i32 %shr1582 to i8, !dbg !191
  %conv1584 = zext i8 %conv1583 to i32, !dbg !191
  %and1585 = and i32 %conv1584, 255, !dbg !191
  %conv1586 = trunc i32 %and1585 to i8, !dbg !191
  %731 = load i8*, i8** %d.addr, align 8, !dbg !191
  %add.ptr1587 = getelementptr inbounds i8, i8* %731, i64 12, !dbg !191
  %add.ptr1588 = getelementptr inbounds i8, i8* %add.ptr1587, i64 1, !dbg !191
  store i8 %conv1586, i8* %add.ptr1588, align 1, !dbg !191
  %732 = load i32, i32* %x2, align 4, !dbg !191
  %shr1589 = lshr i32 %732, 8, !dbg !191
  %conv1590 = trunc i32 %shr1589 to i8, !dbg !191
  %conv1591 = zext i8 %conv1590 to i32, !dbg !191
  %and1592 = and i32 %conv1591, 255, !dbg !191
  %conv1593 = trunc i32 %and1592 to i8, !dbg !191
  %733 = load i8*, i8** %d.addr, align 8, !dbg !191
  %add.ptr1594 = getelementptr inbounds i8, i8* %733, i64 12, !dbg !191
  %add.ptr1595 = getelementptr inbounds i8, i8* %add.ptr1594, i64 2, !dbg !191
  store i8 %conv1593, i8* %add.ptr1595, align 1, !dbg !191
  %734 = load i32, i32* %x2, align 4, !dbg !191
  %conv1596 = trunc i32 %734 to i8, !dbg !191
  %conv1597 = zext i8 %conv1596 to i32, !dbg !191
  %and1598 = and i32 %conv1597, 255, !dbg !191
  %conv1599 = trunc i32 %and1598 to i8, !dbg !191
  %735 = load i8*, i8** %d.addr, align 8, !dbg !191
  %add.ptr1600 = getelementptr inbounds i8, i8* %735, i64 12, !dbg !191
  %add.ptr1601 = getelementptr inbounds i8, i8* %add.ptr1600, i64 3, !dbg !191
  store i8 %conv1599, i8* %add.ptr1601, align 1, !dbg !191
  ret void, !dbg !192
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #3 !dbg !193 {
entry:
  %s.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr.i, metadata !105, metadata !DIExpression()), !dbg !197
  %d.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr.i, metadata !107, metadata !DIExpression()), !dbg !200
  %ks.addr.i29 = alloca %struct.seed_key_st*, align 8
  call void @llvm.dbg.declare(metadata %struct.seed_key_st** %ks.addr.i29, metadata !109, metadata !DIExpression()), !dbg !201
  %x1.i30 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x1.i30, metadata !111, metadata !DIExpression()), !dbg !202
  %x2.i31 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x2.i31, metadata !114, metadata !DIExpression()), !dbg !203
  %x3.i32 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x3.i32, metadata !116, metadata !DIExpression()), !dbg !204
  %x4.i33 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x4.i33, metadata !118, metadata !DIExpression()), !dbg !205
  %t0.i34 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t0.i34, metadata !120, metadata !DIExpression()), !dbg !206
  %t1.i35 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t1.i35, metadata !122, metadata !DIExpression()), !dbg !207
  %rawkey.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %rawkey.addr.i, metadata !37, metadata !DIExpression()), !dbg !208
  %ks.addr.i = alloca %struct.seed_key_st*, align 8
  call void @llvm.dbg.declare(metadata %struct.seed_key_st** %ks.addr.i, metadata !39, metadata !DIExpression()), !dbg !210
  %x1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x1.i, metadata !41, metadata !DIExpression()), !dbg !211
  %x2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x2.i, metadata !43, metadata !DIExpression()), !dbg !212
  %x3.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x3.i, metadata !45, metadata !DIExpression()), !dbg !213
  %x4.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x4.i, metadata !47, metadata !DIExpression()), !dbg !214
  %t0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t0.i, metadata !49, metadata !DIExpression()), !dbg !215
  %t1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %t1.i, metadata !51, metadata !DIExpression()), !dbg !216
  %retval = alloca i32, align 4
  %d = alloca [12 x i8], align 1
  %ks = alloca [32 x %struct.seed_key_st], align 16
  %charset = alloca [94 x i8], align 16
  %length = alloca i64, align 8
  %size = alloca i32, align 4
  %round = alloca i64, align 8
  %i = alloca i32, align 4
  %buff = alloca i8*, align 8
  %key = alloca i32, align 4
  %input = alloca i8*, align 8
  %n = alloca i64, align 8
  %key13 = alloca i32, align 4
  %in = alloca i8*, align 8
  store i32 0, i32* %retval, align 4
  call void @llvm.dbg.declare(metadata [12 x i8]* %d, metadata !217, metadata !DIExpression()), !dbg !221
  call void @llvm.dbg.declare(metadata [32 x %struct.seed_key_st]* %ks, metadata !222, metadata !DIExpression()), !dbg !224
  %arraydecay = getelementptr inbounds [32 x %struct.seed_key_st], [32 x %struct.seed_key_st]* %ks, i64 0, i64 0, !dbg !225
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @key, i64 0, i64 0), i8** %rawkey.addr.i, align 8
  store %struct.seed_key_st* %arraydecay, %struct.seed_key_st** %ks.addr.i, align 8
  %0 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !226
  %1 = load i8, i8* %0, align 1, !dbg !226
  %conv.i = zext i8 %1 to i32, !dbg !226
  %shl.i = shl i32 %conv.i, 24, !dbg !226
  %2 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !226
  %arrayidx1.i = getelementptr inbounds i8, i8* %2, i64 1, !dbg !226
  %3 = load i8, i8* %arrayidx1.i, align 1, !dbg !226
  %conv2.i = zext i8 %3 to i32, !dbg !226
  %shl3.i = shl i32 %conv2.i, 16, !dbg !226
  %or.i = or i32 %shl.i, %shl3.i, !dbg !226
  %4 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !226
  %arrayidx4.i = getelementptr inbounds i8, i8* %4, i64 2, !dbg !226
  %5 = load i8, i8* %arrayidx4.i, align 1, !dbg !226
  %conv5.i = zext i8 %5 to i32, !dbg !226
  %shl6.i = shl i32 %conv5.i, 8, !dbg !226
  %or7.i = or i32 %or.i, %shl6.i, !dbg !226
  %6 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !226
  %arrayidx8.i = getelementptr inbounds i8, i8* %6, i64 3, !dbg !226
  %7 = load i8, i8* %arrayidx8.i, align 1, !dbg !226
  %conv9.i = zext i8 %7 to i32, !dbg !226
  %or10.i = or i32 %or7.i, %conv9.i, !dbg !226
  store i32 %or10.i, i32* %x1.i, align 4, !dbg !226
  %8 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !227
  %add.ptr.i = getelementptr inbounds i8, i8* %8, i64 4, !dbg !227
  %9 = load i8, i8* %add.ptr.i, align 1, !dbg !227
  %conv12.i = zext i8 %9 to i32, !dbg !227
  %shl13.i = shl i32 %conv12.i, 24, !dbg !227
  %10 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !227
  %add.ptr14.i = getelementptr inbounds i8, i8* %10, i64 4, !dbg !227
  %arrayidx15.i = getelementptr inbounds i8, i8* %add.ptr14.i, i64 1, !dbg !227
  %11 = load i8, i8* %arrayidx15.i, align 1, !dbg !227
  %conv16.i = zext i8 %11 to i32, !dbg !227
  %shl17.i = shl i32 %conv16.i, 16, !dbg !227
  %or18.i = or i32 %shl13.i, %shl17.i, !dbg !227
  %12 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !227
  %add.ptr19.i = getelementptr inbounds i8, i8* %12, i64 4, !dbg !227
  %arrayidx20.i = getelementptr inbounds i8, i8* %add.ptr19.i, i64 2, !dbg !227
  %13 = load i8, i8* %arrayidx20.i, align 1, !dbg !227
  %conv21.i = zext i8 %13 to i32, !dbg !227
  %shl22.i = shl i32 %conv21.i, 8, !dbg !227
  %or23.i = or i32 %or18.i, %shl22.i, !dbg !227
  %14 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !227
  %add.ptr24.i = getelementptr inbounds i8, i8* %14, i64 4, !dbg !227
  %arrayidx25.i = getelementptr inbounds i8, i8* %add.ptr24.i, i64 3, !dbg !227
  %15 = load i8, i8* %arrayidx25.i, align 1, !dbg !227
  %conv26.i = zext i8 %15 to i32, !dbg !227
  %or27.i = or i32 %or23.i, %conv26.i, !dbg !227
  store i32 %or27.i, i32* %x2.i, align 4, !dbg !227
  %16 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !228
  %add.ptr28.i = getelementptr inbounds i8, i8* %16, i64 8, !dbg !228
  %17 = load i8, i8* %add.ptr28.i, align 1, !dbg !228
  %conv30.i = zext i8 %17 to i32, !dbg !228
  %shl31.i = shl i32 %conv30.i, 24, !dbg !228
  %18 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !228
  %add.ptr32.i = getelementptr inbounds i8, i8* %18, i64 8, !dbg !228
  %arrayidx33.i = getelementptr inbounds i8, i8* %add.ptr32.i, i64 1, !dbg !228
  %19 = load i8, i8* %arrayidx33.i, align 1, !dbg !228
  %conv34.i = zext i8 %19 to i32, !dbg !228
  %shl35.i = shl i32 %conv34.i, 16, !dbg !228
  %or36.i = or i32 %shl31.i, %shl35.i, !dbg !228
  %20 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !228
  %add.ptr37.i = getelementptr inbounds i8, i8* %20, i64 8, !dbg !228
  %arrayidx38.i = getelementptr inbounds i8, i8* %add.ptr37.i, i64 2, !dbg !228
  %21 = load i8, i8* %arrayidx38.i, align 1, !dbg !228
  %conv39.i = zext i8 %21 to i32, !dbg !228
  %shl40.i = shl i32 %conv39.i, 8, !dbg !228
  %or41.i = or i32 %or36.i, %shl40.i, !dbg !228
  %22 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !228
  %add.ptr42.i = getelementptr inbounds i8, i8* %22, i64 8, !dbg !228
  %arrayidx43.i = getelementptr inbounds i8, i8* %add.ptr42.i, i64 3, !dbg !228
  %23 = load i8, i8* %arrayidx43.i, align 1, !dbg !228
  %conv44.i = zext i8 %23 to i32, !dbg !228
  %or45.i = or i32 %or41.i, %conv44.i, !dbg !228
  store i32 %or45.i, i32* %x3.i, align 4, !dbg !228
  %24 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !229
  %add.ptr46.i = getelementptr inbounds i8, i8* %24, i64 12, !dbg !229
  %25 = load i8, i8* %add.ptr46.i, align 1, !dbg !229
  %conv48.i = zext i8 %25 to i32, !dbg !229
  %shl49.i = shl i32 %conv48.i, 24, !dbg !229
  %26 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !229
  %add.ptr50.i = getelementptr inbounds i8, i8* %26, i64 12, !dbg !229
  %arrayidx51.i = getelementptr inbounds i8, i8* %add.ptr50.i, i64 1, !dbg !229
  %27 = load i8, i8* %arrayidx51.i, align 1, !dbg !229
  %conv52.i = zext i8 %27 to i32, !dbg !229
  %shl53.i = shl i32 %conv52.i, 16, !dbg !229
  %or54.i = or i32 %shl49.i, %shl53.i, !dbg !229
  %28 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !229
  %add.ptr55.i = getelementptr inbounds i8, i8* %28, i64 12, !dbg !229
  %arrayidx56.i = getelementptr inbounds i8, i8* %add.ptr55.i, i64 2, !dbg !229
  %29 = load i8, i8* %arrayidx56.i, align 1, !dbg !229
  %conv57.i = zext i8 %29 to i32, !dbg !229
  %shl58.i = shl i32 %conv57.i, 8, !dbg !229
  %or59.i = or i32 %or54.i, %shl58.i, !dbg !229
  %30 = load i8*, i8** %rawkey.addr.i, align 8, !dbg !229
  %add.ptr60.i = getelementptr inbounds i8, i8* %30, i64 12, !dbg !229
  %arrayidx61.i = getelementptr inbounds i8, i8* %add.ptr60.i, i64 3, !dbg !229
  %31 = load i8, i8* %arrayidx61.i, align 1, !dbg !229
  %conv62.i = zext i8 %31 to i32, !dbg !229
  %or63.i = or i32 %or59.i, %conv62.i, !dbg !229
  store i32 %or63.i, i32* %x4.i, align 4, !dbg !229
  %32 = load i32, i32* %x1.i, align 4, !dbg !230
  %33 = load i32, i32* %x3.i, align 4, !dbg !231
  %add.i = add i32 %32, %33, !dbg !232
  %sub.i = sub i32 %add.i, -1640531527, !dbg !233
  store i32 %sub.i, i32* %t0.i, align 4, !dbg !234
  %34 = load i32, i32* %x2.i, align 4, !dbg !235
  %35 = load i32, i32* %x4.i, align 4, !dbg !236
  %sub64.i = sub i32 %34, %35, !dbg !237
  %add65.i = add i32 %sub64.i, -1640531527, !dbg !238
  store i32 %add65.i, i32* %t1.i, align 4, !dbg !239
  %36 = load i32, i32* %t0.i, align 4, !dbg !240
  %conv66.i = trunc i32 %36 to i8, !dbg !240
  %conv67.i = zext i8 %conv66.i to i32, !dbg !240
  %and.i = and i32 %conv67.i, 255, !dbg !240
  %idxprom.i = sext i32 %and.i to i64, !dbg !240
  %arrayidx68.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom.i, !dbg !240
  %37 = load i32, i32* %arrayidx68.i, align 4, !dbg !240
  %38 = load i32, i32* %t0.i, align 4, !dbg !240
  %shr.i = lshr i32 %38, 8, !dbg !240
  %conv69.i = trunc i32 %shr.i to i8, !dbg !240
  %conv70.i = zext i8 %conv69.i to i32, !dbg !240
  %and71.i = and i32 %conv70.i, 255, !dbg !240
  %idxprom72.i = sext i32 %and71.i to i64, !dbg !240
  %arrayidx73.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom72.i, !dbg !240
  %39 = load i32, i32* %arrayidx73.i, align 4, !dbg !240
  %xor.i = xor i32 %37, %39, !dbg !240
  %40 = load i32, i32* %t0.i, align 4, !dbg !240
  %shr74.i = lshr i32 %40, 16, !dbg !240
  %conv75.i = trunc i32 %shr74.i to i8, !dbg !240
  %conv76.i = zext i8 %conv75.i to i32, !dbg !240
  %and77.i = and i32 %conv76.i, 255, !dbg !240
  %idxprom78.i = sext i32 %and77.i to i64, !dbg !240
  %arrayidx79.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom78.i, !dbg !240
  %41 = load i32, i32* %arrayidx79.i, align 4, !dbg !240
  %xor80.i = xor i32 %xor.i, %41, !dbg !240
  %42 = load i32, i32* %t0.i, align 4, !dbg !240
  %shr81.i = lshr i32 %42, 24, !dbg !240
  %conv82.i = trunc i32 %shr81.i to i8, !dbg !240
  %conv83.i = zext i8 %conv82.i to i32, !dbg !240
  %and84.i = and i32 %conv83.i, 255, !dbg !240
  %idxprom85.i = sext i32 %and84.i to i64, !dbg !240
  %arrayidx86.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom85.i, !dbg !240
  %43 = load i32, i32* %arrayidx86.i, align 4, !dbg !240
  %xor87.i = xor i32 %xor80.i, %43, !dbg !240
  %44 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !240
  %data.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %44, i32 0, i32 0, !dbg !240
  %arrayidx88.i = getelementptr inbounds [32 x i32], [32 x i32]* %data.i, i64 0, i64 0, !dbg !240
  store i32 %xor87.i, i32* %arrayidx88.i, align 4, !dbg !240
  %45 = load i32, i32* %t1.i, align 4, !dbg !240
  %conv90.i = trunc i32 %45 to i8, !dbg !240
  %conv91.i = zext i8 %conv90.i to i32, !dbg !240
  %and92.i = and i32 %conv91.i, 255, !dbg !240
  %idxprom93.i = sext i32 %and92.i to i64, !dbg !240
  %arrayidx94.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom93.i, !dbg !240
  %46 = load i32, i32* %arrayidx94.i, align 4, !dbg !240
  %47 = load i32, i32* %t1.i, align 4, !dbg !240
  %shr95.i = lshr i32 %47, 8, !dbg !240
  %conv96.i = trunc i32 %shr95.i to i8, !dbg !240
  %conv97.i = zext i8 %conv96.i to i32, !dbg !240
  %and98.i = and i32 %conv97.i, 255, !dbg !240
  %idxprom99.i = sext i32 %and98.i to i64, !dbg !240
  %arrayidx100.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom99.i, !dbg !240
  %48 = load i32, i32* %arrayidx100.i, align 4, !dbg !240
  %xor101.i = xor i32 %46, %48, !dbg !240
  %49 = load i32, i32* %t1.i, align 4, !dbg !240
  %shr102.i = lshr i32 %49, 16, !dbg !240
  %conv103.i = trunc i32 %shr102.i to i8, !dbg !240
  %conv104.i = zext i8 %conv103.i to i32, !dbg !240
  %and105.i = and i32 %conv104.i, 255, !dbg !240
  %idxprom106.i = sext i32 %and105.i to i64, !dbg !240
  %arrayidx107.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom106.i, !dbg !240
  %50 = load i32, i32* %arrayidx107.i, align 4, !dbg !240
  %xor108.i = xor i32 %xor101.i, %50, !dbg !240
  %51 = load i32, i32* %t1.i, align 4, !dbg !240
  %shr109.i = lshr i32 %51, 24, !dbg !240
  %conv110.i = trunc i32 %shr109.i to i8, !dbg !240
  %conv111.i = zext i8 %conv110.i to i32, !dbg !240
  %and112.i = and i32 %conv111.i, 255, !dbg !240
  %idxprom113.i = sext i32 %and112.i to i64, !dbg !240
  %arrayidx114.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom113.i, !dbg !240
  %52 = load i32, i32* %arrayidx114.i, align 4, !dbg !240
  %xor115.i = xor i32 %xor108.i, %52, !dbg !240
  %53 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !240
  %data116.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %53, i32 0, i32 0, !dbg !240
  %arrayidx117.i = getelementptr inbounds [32 x i32], [32 x i32]* %data116.i, i64 0, i64 0, !dbg !240
  %arrayidx118.i = getelementptr inbounds i32, i32* %arrayidx117.i, i64 1, !dbg !240
  store i32 %xor115.i, i32* %arrayidx118.i, align 4, !dbg !240
  %54 = load i32, i32* %x1.i, align 4, !dbg !241
  store i32 %54, i32* %t0.i, align 4, !dbg !241
  %55 = load i32, i32* %x1.i, align 4, !dbg !241
  %shr119.i = lshr i32 %55, 8, !dbg !241
  %56 = load i32, i32* %x2.i, align 4, !dbg !241
  %shl120.i = shl i32 %56, 24, !dbg !241
  %xor121.i = xor i32 %shr119.i, %shl120.i, !dbg !241
  store i32 %xor121.i, i32* %x1.i, align 4, !dbg !241
  %57 = load i32, i32* %x2.i, align 4, !dbg !241
  %shr122.i = lshr i32 %57, 8, !dbg !241
  %58 = load i32, i32* %t0.i, align 4, !dbg !241
  %shl123.i = shl i32 %58, 24, !dbg !241
  %xor124.i = xor i32 %shr122.i, %shl123.i, !dbg !241
  store i32 %xor124.i, i32* %x2.i, align 4, !dbg !241
  %59 = load i32, i32* %x1.i, align 4, !dbg !241
  %60 = load i32, i32* %x3.i, align 4, !dbg !241
  %add125.i = add i32 %59, %60, !dbg !241
  %sub126.i = sub i32 %add125.i, 1013904243, !dbg !241
  store i32 %sub126.i, i32* %t0.i, align 4, !dbg !241
  %61 = load i32, i32* %x2.i, align 4, !dbg !241
  %add127.i = add i32 %61, 1013904243, !dbg !241
  %62 = load i32, i32* %x4.i, align 4, !dbg !241
  %sub128.i = sub i32 %add127.i, %62, !dbg !241
  store i32 %sub128.i, i32* %t1.i, align 4, !dbg !241
  %63 = load i32, i32* %t0.i, align 4, !dbg !242
  %conv129.i = trunc i32 %63 to i8, !dbg !242
  %conv130.i = zext i8 %conv129.i to i32, !dbg !242
  %and131.i = and i32 %conv130.i, 255, !dbg !242
  %idxprom132.i = sext i32 %and131.i to i64, !dbg !242
  %arrayidx133.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom132.i, !dbg !242
  %64 = load i32, i32* %arrayidx133.i, align 4, !dbg !242
  %65 = load i32, i32* %t0.i, align 4, !dbg !242
  %shr134.i = lshr i32 %65, 8, !dbg !242
  %conv135.i = trunc i32 %shr134.i to i8, !dbg !242
  %conv136.i = zext i8 %conv135.i to i32, !dbg !242
  %and137.i = and i32 %conv136.i, 255, !dbg !242
  %idxprom138.i = sext i32 %and137.i to i64, !dbg !242
  %arrayidx139.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom138.i, !dbg !242
  %66 = load i32, i32* %arrayidx139.i, align 4, !dbg !242
  %xor140.i = xor i32 %64, %66, !dbg !242
  %67 = load i32, i32* %t0.i, align 4, !dbg !242
  %shr141.i = lshr i32 %67, 16, !dbg !242
  %conv142.i = trunc i32 %shr141.i to i8, !dbg !242
  %conv143.i = zext i8 %conv142.i to i32, !dbg !242
  %and144.i = and i32 %conv143.i, 255, !dbg !242
  %idxprom145.i = sext i32 %and144.i to i64, !dbg !242
  %arrayidx146.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom145.i, !dbg !242
  %68 = load i32, i32* %arrayidx146.i, align 4, !dbg !242
  %xor147.i = xor i32 %xor140.i, %68, !dbg !242
  %69 = load i32, i32* %t0.i, align 4, !dbg !242
  %shr148.i = lshr i32 %69, 24, !dbg !242
  %conv149.i = trunc i32 %shr148.i to i8, !dbg !242
  %conv150.i = zext i8 %conv149.i to i32, !dbg !242
  %and151.i = and i32 %conv150.i, 255, !dbg !242
  %idxprom152.i = sext i32 %and151.i to i64, !dbg !242
  %arrayidx153.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom152.i, !dbg !242
  %70 = load i32, i32* %arrayidx153.i, align 4, !dbg !242
  %xor154.i = xor i32 %xor147.i, %70, !dbg !242
  %71 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !242
  %data155.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %71, i32 0, i32 0, !dbg !242
  %arrayidx156.i = getelementptr inbounds [32 x i32], [32 x i32]* %data155.i, i64 0, i64 2, !dbg !242
  store i32 %xor154.i, i32* %arrayidx156.i, align 4, !dbg !242
  %72 = load i32, i32* %t1.i, align 4, !dbg !242
  %conv158.i = trunc i32 %72 to i8, !dbg !242
  %conv159.i = zext i8 %conv158.i to i32, !dbg !242
  %and160.i = and i32 %conv159.i, 255, !dbg !242
  %idxprom161.i = sext i32 %and160.i to i64, !dbg !242
  %arrayidx162.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom161.i, !dbg !242
  %73 = load i32, i32* %arrayidx162.i, align 4, !dbg !242
  %74 = load i32, i32* %t1.i, align 4, !dbg !242
  %shr163.i = lshr i32 %74, 8, !dbg !242
  %conv164.i = trunc i32 %shr163.i to i8, !dbg !242
  %conv165.i = zext i8 %conv164.i to i32, !dbg !242
  %and166.i = and i32 %conv165.i, 255, !dbg !242
  %idxprom167.i = sext i32 %and166.i to i64, !dbg !242
  %arrayidx168.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom167.i, !dbg !242
  %75 = load i32, i32* %arrayidx168.i, align 4, !dbg !242
  %xor169.i = xor i32 %73, %75, !dbg !242
  %76 = load i32, i32* %t1.i, align 4, !dbg !242
  %shr170.i = lshr i32 %76, 16, !dbg !242
  %conv171.i = trunc i32 %shr170.i to i8, !dbg !242
  %conv172.i = zext i8 %conv171.i to i32, !dbg !242
  %and173.i = and i32 %conv172.i, 255, !dbg !242
  %idxprom174.i = sext i32 %and173.i to i64, !dbg !242
  %arrayidx175.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom174.i, !dbg !242
  %77 = load i32, i32* %arrayidx175.i, align 4, !dbg !242
  %xor176.i = xor i32 %xor169.i, %77, !dbg !242
  %78 = load i32, i32* %t1.i, align 4, !dbg !242
  %shr177.i = lshr i32 %78, 24, !dbg !242
  %conv178.i = trunc i32 %shr177.i to i8, !dbg !242
  %conv179.i = zext i8 %conv178.i to i32, !dbg !242
  %and180.i = and i32 %conv179.i, 255, !dbg !242
  %idxprom181.i = sext i32 %and180.i to i64, !dbg !242
  %arrayidx182.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom181.i, !dbg !242
  %79 = load i32, i32* %arrayidx182.i, align 4, !dbg !242
  %xor183.i = xor i32 %xor176.i, %79, !dbg !242
  %80 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !242
  %data184.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %80, i32 0, i32 0, !dbg !242
  %arrayidx185.i = getelementptr inbounds [32 x i32], [32 x i32]* %data184.i, i64 0, i64 2, !dbg !242
  %arrayidx186.i = getelementptr inbounds i32, i32* %arrayidx185.i, i64 1, !dbg !242
  store i32 %xor183.i, i32* %arrayidx186.i, align 4, !dbg !242
  %81 = load i32, i32* %x3.i, align 4, !dbg !243
  store i32 %81, i32* %t0.i, align 4, !dbg !243
  %82 = load i32, i32* %x3.i, align 4, !dbg !243
  %shl187.i = shl i32 %82, 8, !dbg !243
  %83 = load i32, i32* %x4.i, align 4, !dbg !243
  %shr188.i = lshr i32 %83, 24, !dbg !243
  %xor189.i = xor i32 %shl187.i, %shr188.i, !dbg !243
  store i32 %xor189.i, i32* %x3.i, align 4, !dbg !243
  %84 = load i32, i32* %x4.i, align 4, !dbg !243
  %shl190.i = shl i32 %84, 8, !dbg !243
  %85 = load i32, i32* %t0.i, align 4, !dbg !243
  %shr191.i = lshr i32 %85, 24, !dbg !243
  %xor192.i = xor i32 %shl190.i, %shr191.i, !dbg !243
  store i32 %xor192.i, i32* %x4.i, align 4, !dbg !243
  %86 = load i32, i32* %x1.i, align 4, !dbg !243
  %87 = load i32, i32* %x3.i, align 4, !dbg !243
  %add193.i = add i32 %86, %87, !dbg !243
  %sub194.i = sub i32 %add193.i, 2027808486, !dbg !243
  store i32 %sub194.i, i32* %t0.i, align 4, !dbg !243
  %88 = load i32, i32* %x2.i, align 4, !dbg !243
  %add195.i = add i32 %88, 2027808486, !dbg !243
  %89 = load i32, i32* %x4.i, align 4, !dbg !243
  %sub196.i = sub i32 %add195.i, %89, !dbg !243
  store i32 %sub196.i, i32* %t1.i, align 4, !dbg !243
  %90 = load i32, i32* %t0.i, align 4, !dbg !244
  %conv197.i = trunc i32 %90 to i8, !dbg !244
  %conv198.i = zext i8 %conv197.i to i32, !dbg !244
  %and199.i = and i32 %conv198.i, 255, !dbg !244
  %idxprom200.i = sext i32 %and199.i to i64, !dbg !244
  %arrayidx201.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom200.i, !dbg !244
  %91 = load i32, i32* %arrayidx201.i, align 4, !dbg !244
  %92 = load i32, i32* %t0.i, align 4, !dbg !244
  %shr202.i = lshr i32 %92, 8, !dbg !244
  %conv203.i = trunc i32 %shr202.i to i8, !dbg !244
  %conv204.i = zext i8 %conv203.i to i32, !dbg !244
  %and205.i = and i32 %conv204.i, 255, !dbg !244
  %idxprom206.i = sext i32 %and205.i to i64, !dbg !244
  %arrayidx207.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom206.i, !dbg !244
  %93 = load i32, i32* %arrayidx207.i, align 4, !dbg !244
  %xor208.i = xor i32 %91, %93, !dbg !244
  %94 = load i32, i32* %t0.i, align 4, !dbg !244
  %shr209.i = lshr i32 %94, 16, !dbg !244
  %conv210.i = trunc i32 %shr209.i to i8, !dbg !244
  %conv211.i = zext i8 %conv210.i to i32, !dbg !244
  %and212.i = and i32 %conv211.i, 255, !dbg !244
  %idxprom213.i = sext i32 %and212.i to i64, !dbg !244
  %arrayidx214.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom213.i, !dbg !244
  %95 = load i32, i32* %arrayidx214.i, align 4, !dbg !244
  %xor215.i = xor i32 %xor208.i, %95, !dbg !244
  %96 = load i32, i32* %t0.i, align 4, !dbg !244
  %shr216.i = lshr i32 %96, 24, !dbg !244
  %conv217.i = trunc i32 %shr216.i to i8, !dbg !244
  %conv218.i = zext i8 %conv217.i to i32, !dbg !244
  %and219.i = and i32 %conv218.i, 255, !dbg !244
  %idxprom220.i = sext i32 %and219.i to i64, !dbg !244
  %arrayidx221.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom220.i, !dbg !244
  %97 = load i32, i32* %arrayidx221.i, align 4, !dbg !244
  %xor222.i = xor i32 %xor215.i, %97, !dbg !244
  %98 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !244
  %data223.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %98, i32 0, i32 0, !dbg !244
  %arrayidx224.i = getelementptr inbounds [32 x i32], [32 x i32]* %data223.i, i64 0, i64 4, !dbg !244
  store i32 %xor222.i, i32* %arrayidx224.i, align 4, !dbg !244
  %99 = load i32, i32* %t1.i, align 4, !dbg !244
  %conv226.i = trunc i32 %99 to i8, !dbg !244
  %conv227.i = zext i8 %conv226.i to i32, !dbg !244
  %and228.i = and i32 %conv227.i, 255, !dbg !244
  %idxprom229.i = sext i32 %and228.i to i64, !dbg !244
  %arrayidx230.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom229.i, !dbg !244
  %100 = load i32, i32* %arrayidx230.i, align 4, !dbg !244
  %101 = load i32, i32* %t1.i, align 4, !dbg !244
  %shr231.i = lshr i32 %101, 8, !dbg !244
  %conv232.i = trunc i32 %shr231.i to i8, !dbg !244
  %conv233.i = zext i8 %conv232.i to i32, !dbg !244
  %and234.i = and i32 %conv233.i, 255, !dbg !244
  %idxprom235.i = sext i32 %and234.i to i64, !dbg !244
  %arrayidx236.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom235.i, !dbg !244
  %102 = load i32, i32* %arrayidx236.i, align 4, !dbg !244
  %xor237.i = xor i32 %100, %102, !dbg !244
  %103 = load i32, i32* %t1.i, align 4, !dbg !244
  %shr238.i = lshr i32 %103, 16, !dbg !244
  %conv239.i = trunc i32 %shr238.i to i8, !dbg !244
  %conv240.i = zext i8 %conv239.i to i32, !dbg !244
  %and241.i = and i32 %conv240.i, 255, !dbg !244
  %idxprom242.i = sext i32 %and241.i to i64, !dbg !244
  %arrayidx243.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom242.i, !dbg !244
  %104 = load i32, i32* %arrayidx243.i, align 4, !dbg !244
  %xor244.i = xor i32 %xor237.i, %104, !dbg !244
  %105 = load i32, i32* %t1.i, align 4, !dbg !244
  %shr245.i = lshr i32 %105, 24, !dbg !244
  %conv246.i = trunc i32 %shr245.i to i8, !dbg !244
  %conv247.i = zext i8 %conv246.i to i32, !dbg !244
  %and248.i = and i32 %conv247.i, 255, !dbg !244
  %idxprom249.i = sext i32 %and248.i to i64, !dbg !244
  %arrayidx250.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom249.i, !dbg !244
  %106 = load i32, i32* %arrayidx250.i, align 4, !dbg !244
  %xor251.i = xor i32 %xor244.i, %106, !dbg !244
  %107 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !244
  %data252.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %107, i32 0, i32 0, !dbg !244
  %arrayidx253.i = getelementptr inbounds [32 x i32], [32 x i32]* %data252.i, i64 0, i64 4, !dbg !244
  %arrayidx254.i = getelementptr inbounds i32, i32* %arrayidx253.i, i64 1, !dbg !244
  store i32 %xor251.i, i32* %arrayidx254.i, align 4, !dbg !244
  %108 = load i32, i32* %x1.i, align 4, !dbg !245
  store i32 %108, i32* %t0.i, align 4, !dbg !245
  %109 = load i32, i32* %x1.i, align 4, !dbg !245
  %shr255.i = lshr i32 %109, 8, !dbg !245
  %110 = load i32, i32* %x2.i, align 4, !dbg !245
  %shl256.i = shl i32 %110, 24, !dbg !245
  %xor257.i = xor i32 %shr255.i, %shl256.i, !dbg !245
  store i32 %xor257.i, i32* %x1.i, align 4, !dbg !245
  %111 = load i32, i32* %x2.i, align 4, !dbg !245
  %shr258.i = lshr i32 %111, 8, !dbg !245
  %112 = load i32, i32* %t0.i, align 4, !dbg !245
  %shl259.i = shl i32 %112, 24, !dbg !245
  %xor260.i = xor i32 %shr258.i, %shl259.i, !dbg !245
  store i32 %xor260.i, i32* %x2.i, align 4, !dbg !245
  %113 = load i32, i32* %x1.i, align 4, !dbg !245
  %114 = load i32, i32* %x3.i, align 4, !dbg !245
  %add261.i = add i32 %113, %114, !dbg !245
  %sub262.i = sub i32 %add261.i, -239350324, !dbg !245
  store i32 %sub262.i, i32* %t0.i, align 4, !dbg !245
  %115 = load i32, i32* %x2.i, align 4, !dbg !245
  %add263.i = add i32 %115, -239350324, !dbg !245
  %116 = load i32, i32* %x4.i, align 4, !dbg !245
  %sub264.i = sub i32 %add263.i, %116, !dbg !245
  store i32 %sub264.i, i32* %t1.i, align 4, !dbg !245
  %117 = load i32, i32* %t0.i, align 4, !dbg !246
  %conv265.i = trunc i32 %117 to i8, !dbg !246
  %conv266.i = zext i8 %conv265.i to i32, !dbg !246
  %and267.i = and i32 %conv266.i, 255, !dbg !246
  %idxprom268.i = sext i32 %and267.i to i64, !dbg !246
  %arrayidx269.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom268.i, !dbg !246
  %118 = load i32, i32* %arrayidx269.i, align 4, !dbg !246
  %119 = load i32, i32* %t0.i, align 4, !dbg !246
  %shr270.i = lshr i32 %119, 8, !dbg !246
  %conv271.i = trunc i32 %shr270.i to i8, !dbg !246
  %conv272.i = zext i8 %conv271.i to i32, !dbg !246
  %and273.i = and i32 %conv272.i, 255, !dbg !246
  %idxprom274.i = sext i32 %and273.i to i64, !dbg !246
  %arrayidx275.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom274.i, !dbg !246
  %120 = load i32, i32* %arrayidx275.i, align 4, !dbg !246
  %xor276.i = xor i32 %118, %120, !dbg !246
  %121 = load i32, i32* %t0.i, align 4, !dbg !246
  %shr277.i = lshr i32 %121, 16, !dbg !246
  %conv278.i = trunc i32 %shr277.i to i8, !dbg !246
  %conv279.i = zext i8 %conv278.i to i32, !dbg !246
  %and280.i = and i32 %conv279.i, 255, !dbg !246
  %idxprom281.i = sext i32 %and280.i to i64, !dbg !246
  %arrayidx282.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom281.i, !dbg !246
  %122 = load i32, i32* %arrayidx282.i, align 4, !dbg !246
  %xor283.i = xor i32 %xor276.i, %122, !dbg !246
  %123 = load i32, i32* %t0.i, align 4, !dbg !246
  %shr284.i = lshr i32 %123, 24, !dbg !246
  %conv285.i = trunc i32 %shr284.i to i8, !dbg !246
  %conv286.i = zext i8 %conv285.i to i32, !dbg !246
  %and287.i = and i32 %conv286.i, 255, !dbg !246
  %idxprom288.i = sext i32 %and287.i to i64, !dbg !246
  %arrayidx289.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom288.i, !dbg !246
  %124 = load i32, i32* %arrayidx289.i, align 4, !dbg !246
  %xor290.i = xor i32 %xor283.i, %124, !dbg !246
  %125 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !246
  %data291.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %125, i32 0, i32 0, !dbg !246
  %arrayidx292.i = getelementptr inbounds [32 x i32], [32 x i32]* %data291.i, i64 0, i64 6, !dbg !246
  store i32 %xor290.i, i32* %arrayidx292.i, align 4, !dbg !246
  %126 = load i32, i32* %t1.i, align 4, !dbg !246
  %conv294.i = trunc i32 %126 to i8, !dbg !246
  %conv295.i = zext i8 %conv294.i to i32, !dbg !246
  %and296.i = and i32 %conv295.i, 255, !dbg !246
  %idxprom297.i = sext i32 %and296.i to i64, !dbg !246
  %arrayidx298.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom297.i, !dbg !246
  %127 = load i32, i32* %arrayidx298.i, align 4, !dbg !246
  %128 = load i32, i32* %t1.i, align 4, !dbg !246
  %shr299.i = lshr i32 %128, 8, !dbg !246
  %conv300.i = trunc i32 %shr299.i to i8, !dbg !246
  %conv301.i = zext i8 %conv300.i to i32, !dbg !246
  %and302.i = and i32 %conv301.i, 255, !dbg !246
  %idxprom303.i = sext i32 %and302.i to i64, !dbg !246
  %arrayidx304.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom303.i, !dbg !246
  %129 = load i32, i32* %arrayidx304.i, align 4, !dbg !246
  %xor305.i = xor i32 %127, %129, !dbg !246
  %130 = load i32, i32* %t1.i, align 4, !dbg !246
  %shr306.i = lshr i32 %130, 16, !dbg !246
  %conv307.i = trunc i32 %shr306.i to i8, !dbg !246
  %conv308.i = zext i8 %conv307.i to i32, !dbg !246
  %and309.i = and i32 %conv308.i, 255, !dbg !246
  %idxprom310.i = sext i32 %and309.i to i64, !dbg !246
  %arrayidx311.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom310.i, !dbg !246
  %131 = load i32, i32* %arrayidx311.i, align 4, !dbg !246
  %xor312.i = xor i32 %xor305.i, %131, !dbg !246
  %132 = load i32, i32* %t1.i, align 4, !dbg !246
  %shr313.i = lshr i32 %132, 24, !dbg !246
  %conv314.i = trunc i32 %shr313.i to i8, !dbg !246
  %conv315.i = zext i8 %conv314.i to i32, !dbg !246
  %and316.i = and i32 %conv315.i, 255, !dbg !246
  %idxprom317.i = sext i32 %and316.i to i64, !dbg !246
  %arrayidx318.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom317.i, !dbg !246
  %133 = load i32, i32* %arrayidx318.i, align 4, !dbg !246
  %xor319.i = xor i32 %xor312.i, %133, !dbg !246
  %134 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !246
  %data320.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %134, i32 0, i32 0, !dbg !246
  %arrayidx321.i = getelementptr inbounds [32 x i32], [32 x i32]* %data320.i, i64 0, i64 6, !dbg !246
  %arrayidx322.i = getelementptr inbounds i32, i32* %arrayidx321.i, i64 1, !dbg !246
  store i32 %xor319.i, i32* %arrayidx322.i, align 4, !dbg !246
  %135 = load i32, i32* %x3.i, align 4, !dbg !247
  store i32 %135, i32* %t0.i, align 4, !dbg !247
  %136 = load i32, i32* %x3.i, align 4, !dbg !247
  %shl323.i = shl i32 %136, 8, !dbg !247
  %137 = load i32, i32* %x4.i, align 4, !dbg !247
  %shr324.i = lshr i32 %137, 24, !dbg !247
  %xor325.i = xor i32 %shl323.i, %shr324.i, !dbg !247
  store i32 %xor325.i, i32* %x3.i, align 4, !dbg !247
  %138 = load i32, i32* %x4.i, align 4, !dbg !247
  %shl326.i = shl i32 %138, 8, !dbg !247
  %139 = load i32, i32* %t0.i, align 4, !dbg !247
  %shr327.i = lshr i32 %139, 24, !dbg !247
  %xor328.i = xor i32 %shl326.i, %shr327.i, !dbg !247
  store i32 %xor328.i, i32* %x4.i, align 4, !dbg !247
  %140 = load i32, i32* %x1.i, align 4, !dbg !247
  %141 = load i32, i32* %x3.i, align 4, !dbg !247
  %add329.i = add i32 %140, %141, !dbg !247
  %sub330.i = sub i32 %add329.i, -478700647, !dbg !247
  store i32 %sub330.i, i32* %t0.i, align 4, !dbg !247
  %142 = load i32, i32* %x2.i, align 4, !dbg !247
  %add331.i = add i32 %142, -478700647, !dbg !247
  %143 = load i32, i32* %x4.i, align 4, !dbg !247
  %sub332.i = sub i32 %add331.i, %143, !dbg !247
  store i32 %sub332.i, i32* %t1.i, align 4, !dbg !247
  %144 = load i32, i32* %t0.i, align 4, !dbg !248
  %conv333.i = trunc i32 %144 to i8, !dbg !248
  %conv334.i = zext i8 %conv333.i to i32, !dbg !248
  %and335.i = and i32 %conv334.i, 255, !dbg !248
  %idxprom336.i = sext i32 %and335.i to i64, !dbg !248
  %arrayidx337.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom336.i, !dbg !248
  %145 = load i32, i32* %arrayidx337.i, align 4, !dbg !248
  %146 = load i32, i32* %t0.i, align 4, !dbg !248
  %shr338.i = lshr i32 %146, 8, !dbg !248
  %conv339.i = trunc i32 %shr338.i to i8, !dbg !248
  %conv340.i = zext i8 %conv339.i to i32, !dbg !248
  %and341.i = and i32 %conv340.i, 255, !dbg !248
  %idxprom342.i = sext i32 %and341.i to i64, !dbg !248
  %arrayidx343.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom342.i, !dbg !248
  %147 = load i32, i32* %arrayidx343.i, align 4, !dbg !248
  %xor344.i = xor i32 %145, %147, !dbg !248
  %148 = load i32, i32* %t0.i, align 4, !dbg !248
  %shr345.i = lshr i32 %148, 16, !dbg !248
  %conv346.i = trunc i32 %shr345.i to i8, !dbg !248
  %conv347.i = zext i8 %conv346.i to i32, !dbg !248
  %and348.i = and i32 %conv347.i, 255, !dbg !248
  %idxprom349.i = sext i32 %and348.i to i64, !dbg !248
  %arrayidx350.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom349.i, !dbg !248
  %149 = load i32, i32* %arrayidx350.i, align 4, !dbg !248
  %xor351.i = xor i32 %xor344.i, %149, !dbg !248
  %150 = load i32, i32* %t0.i, align 4, !dbg !248
  %shr352.i = lshr i32 %150, 24, !dbg !248
  %conv353.i = trunc i32 %shr352.i to i8, !dbg !248
  %conv354.i = zext i8 %conv353.i to i32, !dbg !248
  %and355.i = and i32 %conv354.i, 255, !dbg !248
  %idxprom356.i = sext i32 %and355.i to i64, !dbg !248
  %arrayidx357.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom356.i, !dbg !248
  %151 = load i32, i32* %arrayidx357.i, align 4, !dbg !248
  %xor358.i = xor i32 %xor351.i, %151, !dbg !248
  %152 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !248
  %data359.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %152, i32 0, i32 0, !dbg !248
  %arrayidx360.i = getelementptr inbounds [32 x i32], [32 x i32]* %data359.i, i64 0, i64 8, !dbg !248
  store i32 %xor358.i, i32* %arrayidx360.i, align 4, !dbg !248
  %153 = load i32, i32* %t1.i, align 4, !dbg !248
  %conv362.i = trunc i32 %153 to i8, !dbg !248
  %conv363.i = zext i8 %conv362.i to i32, !dbg !248
  %and364.i = and i32 %conv363.i, 255, !dbg !248
  %idxprom365.i = sext i32 %and364.i to i64, !dbg !248
  %arrayidx366.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom365.i, !dbg !248
  %154 = load i32, i32* %arrayidx366.i, align 4, !dbg !248
  %155 = load i32, i32* %t1.i, align 4, !dbg !248
  %shr367.i = lshr i32 %155, 8, !dbg !248
  %conv368.i = trunc i32 %shr367.i to i8, !dbg !248
  %conv369.i = zext i8 %conv368.i to i32, !dbg !248
  %and370.i = and i32 %conv369.i, 255, !dbg !248
  %idxprom371.i = sext i32 %and370.i to i64, !dbg !248
  %arrayidx372.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom371.i, !dbg !248
  %156 = load i32, i32* %arrayidx372.i, align 4, !dbg !248
  %xor373.i = xor i32 %154, %156, !dbg !248
  %157 = load i32, i32* %t1.i, align 4, !dbg !248
  %shr374.i = lshr i32 %157, 16, !dbg !248
  %conv375.i = trunc i32 %shr374.i to i8, !dbg !248
  %conv376.i = zext i8 %conv375.i to i32, !dbg !248
  %and377.i = and i32 %conv376.i, 255, !dbg !248
  %idxprom378.i = sext i32 %and377.i to i64, !dbg !248
  %arrayidx379.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom378.i, !dbg !248
  %158 = load i32, i32* %arrayidx379.i, align 4, !dbg !248
  %xor380.i = xor i32 %xor373.i, %158, !dbg !248
  %159 = load i32, i32* %t1.i, align 4, !dbg !248
  %shr381.i = lshr i32 %159, 24, !dbg !248
  %conv382.i = trunc i32 %shr381.i to i8, !dbg !248
  %conv383.i = zext i8 %conv382.i to i32, !dbg !248
  %and384.i = and i32 %conv383.i, 255, !dbg !248
  %idxprom385.i = sext i32 %and384.i to i64, !dbg !248
  %arrayidx386.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom385.i, !dbg !248
  %160 = load i32, i32* %arrayidx386.i, align 4, !dbg !248
  %xor387.i = xor i32 %xor380.i, %160, !dbg !248
  %161 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !248
  %data388.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %161, i32 0, i32 0, !dbg !248
  %arrayidx389.i = getelementptr inbounds [32 x i32], [32 x i32]* %data388.i, i64 0, i64 8, !dbg !248
  %arrayidx390.i = getelementptr inbounds i32, i32* %arrayidx389.i, i64 1, !dbg !248
  store i32 %xor387.i, i32* %arrayidx390.i, align 4, !dbg !248
  %162 = load i32, i32* %x1.i, align 4, !dbg !249
  store i32 %162, i32* %t0.i, align 4, !dbg !249
  %163 = load i32, i32* %x1.i, align 4, !dbg !249
  %shr391.i = lshr i32 %163, 8, !dbg !249
  %164 = load i32, i32* %x2.i, align 4, !dbg !249
  %shl392.i = shl i32 %164, 24, !dbg !249
  %xor393.i = xor i32 %shr391.i, %shl392.i, !dbg !249
  store i32 %xor393.i, i32* %x1.i, align 4, !dbg !249
  %165 = load i32, i32* %x2.i, align 4, !dbg !249
  %shr394.i = lshr i32 %165, 8, !dbg !249
  %166 = load i32, i32* %t0.i, align 4, !dbg !249
  %shl395.i = shl i32 %166, 24, !dbg !249
  %xor396.i = xor i32 %shr394.i, %shl395.i, !dbg !249
  store i32 %xor396.i, i32* %x2.i, align 4, !dbg !249
  %167 = load i32, i32* %x1.i, align 4, !dbg !249
  %168 = load i32, i32* %x3.i, align 4, !dbg !249
  %add397.i = add i32 %167, %168, !dbg !249
  %sub398.i = sub i32 %add397.i, -957401293, !dbg !249
  store i32 %sub398.i, i32* %t0.i, align 4, !dbg !249
  %169 = load i32, i32* %x2.i, align 4, !dbg !249
  %add399.i = add i32 %169, -957401293, !dbg !249
  %170 = load i32, i32* %x4.i, align 4, !dbg !249
  %sub400.i = sub i32 %add399.i, %170, !dbg !249
  store i32 %sub400.i, i32* %t1.i, align 4, !dbg !249
  %171 = load i32, i32* %t0.i, align 4, !dbg !250
  %conv401.i = trunc i32 %171 to i8, !dbg !250
  %conv402.i = zext i8 %conv401.i to i32, !dbg !250
  %and403.i = and i32 %conv402.i, 255, !dbg !250
  %idxprom404.i = sext i32 %and403.i to i64, !dbg !250
  %arrayidx405.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom404.i, !dbg !250
  %172 = load i32, i32* %arrayidx405.i, align 4, !dbg !250
  %173 = load i32, i32* %t0.i, align 4, !dbg !250
  %shr406.i = lshr i32 %173, 8, !dbg !250
  %conv407.i = trunc i32 %shr406.i to i8, !dbg !250
  %conv408.i = zext i8 %conv407.i to i32, !dbg !250
  %and409.i = and i32 %conv408.i, 255, !dbg !250
  %idxprom410.i = sext i32 %and409.i to i64, !dbg !250
  %arrayidx411.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom410.i, !dbg !250
  %174 = load i32, i32* %arrayidx411.i, align 4, !dbg !250
  %xor412.i = xor i32 %172, %174, !dbg !250
  %175 = load i32, i32* %t0.i, align 4, !dbg !250
  %shr413.i = lshr i32 %175, 16, !dbg !250
  %conv414.i = trunc i32 %shr413.i to i8, !dbg !250
  %conv415.i = zext i8 %conv414.i to i32, !dbg !250
  %and416.i = and i32 %conv415.i, 255, !dbg !250
  %idxprom417.i = sext i32 %and416.i to i64, !dbg !250
  %arrayidx418.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom417.i, !dbg !250
  %176 = load i32, i32* %arrayidx418.i, align 4, !dbg !250
  %xor419.i = xor i32 %xor412.i, %176, !dbg !250
  %177 = load i32, i32* %t0.i, align 4, !dbg !250
  %shr420.i = lshr i32 %177, 24, !dbg !250
  %conv421.i = trunc i32 %shr420.i to i8, !dbg !250
  %conv422.i = zext i8 %conv421.i to i32, !dbg !250
  %and423.i = and i32 %conv422.i, 255, !dbg !250
  %idxprom424.i = sext i32 %and423.i to i64, !dbg !250
  %arrayidx425.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom424.i, !dbg !250
  %178 = load i32, i32* %arrayidx425.i, align 4, !dbg !250
  %xor426.i = xor i32 %xor419.i, %178, !dbg !250
  %179 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !250
  %data427.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %179, i32 0, i32 0, !dbg !250
  %arrayidx428.i = getelementptr inbounds [32 x i32], [32 x i32]* %data427.i, i64 0, i64 10, !dbg !250
  store i32 %xor426.i, i32* %arrayidx428.i, align 4, !dbg !250
  %180 = load i32, i32* %t1.i, align 4, !dbg !250
  %conv430.i = trunc i32 %180 to i8, !dbg !250
  %conv431.i = zext i8 %conv430.i to i32, !dbg !250
  %and432.i = and i32 %conv431.i, 255, !dbg !250
  %idxprom433.i = sext i32 %and432.i to i64, !dbg !250
  %arrayidx434.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom433.i, !dbg !250
  %181 = load i32, i32* %arrayidx434.i, align 4, !dbg !250
  %182 = load i32, i32* %t1.i, align 4, !dbg !250
  %shr435.i = lshr i32 %182, 8, !dbg !250
  %conv436.i = trunc i32 %shr435.i to i8, !dbg !250
  %conv437.i = zext i8 %conv436.i to i32, !dbg !250
  %and438.i = and i32 %conv437.i, 255, !dbg !250
  %idxprom439.i = sext i32 %and438.i to i64, !dbg !250
  %arrayidx440.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom439.i, !dbg !250
  %183 = load i32, i32* %arrayidx440.i, align 4, !dbg !250
  %xor441.i = xor i32 %181, %183, !dbg !250
  %184 = load i32, i32* %t1.i, align 4, !dbg !250
  %shr442.i = lshr i32 %184, 16, !dbg !250
  %conv443.i = trunc i32 %shr442.i to i8, !dbg !250
  %conv444.i = zext i8 %conv443.i to i32, !dbg !250
  %and445.i = and i32 %conv444.i, 255, !dbg !250
  %idxprom446.i = sext i32 %and445.i to i64, !dbg !250
  %arrayidx447.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom446.i, !dbg !250
  %185 = load i32, i32* %arrayidx447.i, align 4, !dbg !250
  %xor448.i = xor i32 %xor441.i, %185, !dbg !250
  %186 = load i32, i32* %t1.i, align 4, !dbg !250
  %shr449.i = lshr i32 %186, 24, !dbg !250
  %conv450.i = trunc i32 %shr449.i to i8, !dbg !250
  %conv451.i = zext i8 %conv450.i to i32, !dbg !250
  %and452.i = and i32 %conv451.i, 255, !dbg !250
  %idxprom453.i = sext i32 %and452.i to i64, !dbg !250
  %arrayidx454.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom453.i, !dbg !250
  %187 = load i32, i32* %arrayidx454.i, align 4, !dbg !250
  %xor455.i = xor i32 %xor448.i, %187, !dbg !250
  %188 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !250
  %data456.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %188, i32 0, i32 0, !dbg !250
  %arrayidx457.i = getelementptr inbounds [32 x i32], [32 x i32]* %data456.i, i64 0, i64 10, !dbg !250
  %arrayidx458.i = getelementptr inbounds i32, i32* %arrayidx457.i, i64 1, !dbg !250
  store i32 %xor455.i, i32* %arrayidx458.i, align 4, !dbg !250
  %189 = load i32, i32* %x3.i, align 4, !dbg !251
  store i32 %189, i32* %t0.i, align 4, !dbg !251
  %190 = load i32, i32* %x3.i, align 4, !dbg !251
  %shl459.i = shl i32 %190, 8, !dbg !251
  %191 = load i32, i32* %x4.i, align 4, !dbg !251
  %shr460.i = lshr i32 %191, 24, !dbg !251
  %xor461.i = xor i32 %shl459.i, %shr460.i, !dbg !251
  store i32 %xor461.i, i32* %x3.i, align 4, !dbg !251
  %192 = load i32, i32* %x4.i, align 4, !dbg !251
  %shl462.i = shl i32 %192, 8, !dbg !251
  %193 = load i32, i32* %t0.i, align 4, !dbg !251
  %shr463.i = lshr i32 %193, 24, !dbg !251
  %xor464.i = xor i32 %shl462.i, %shr463.i, !dbg !251
  store i32 %xor464.i, i32* %x4.i, align 4, !dbg !251
  %194 = load i32, i32* %x1.i, align 4, !dbg !251
  %195 = load i32, i32* %x3.i, align 4, !dbg !251
  %add465.i = add i32 %194, %195, !dbg !251
  %sub466.i = sub i32 %add465.i, -1914802585, !dbg !251
  store i32 %sub466.i, i32* %t0.i, align 4, !dbg !251
  %196 = load i32, i32* %x2.i, align 4, !dbg !251
  %add467.i = add i32 %196, -1914802585, !dbg !251
  %197 = load i32, i32* %x4.i, align 4, !dbg !251
  %sub468.i = sub i32 %add467.i, %197, !dbg !251
  store i32 %sub468.i, i32* %t1.i, align 4, !dbg !251
  %198 = load i32, i32* %t0.i, align 4, !dbg !252
  %conv469.i = trunc i32 %198 to i8, !dbg !252
  %conv470.i = zext i8 %conv469.i to i32, !dbg !252
  %and471.i = and i32 %conv470.i, 255, !dbg !252
  %idxprom472.i = sext i32 %and471.i to i64, !dbg !252
  %arrayidx473.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom472.i, !dbg !252
  %199 = load i32, i32* %arrayidx473.i, align 4, !dbg !252
  %200 = load i32, i32* %t0.i, align 4, !dbg !252
  %shr474.i = lshr i32 %200, 8, !dbg !252
  %conv475.i = trunc i32 %shr474.i to i8, !dbg !252
  %conv476.i = zext i8 %conv475.i to i32, !dbg !252
  %and477.i = and i32 %conv476.i, 255, !dbg !252
  %idxprom478.i = sext i32 %and477.i to i64, !dbg !252
  %arrayidx479.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom478.i, !dbg !252
  %201 = load i32, i32* %arrayidx479.i, align 4, !dbg !252
  %xor480.i = xor i32 %199, %201, !dbg !252
  %202 = load i32, i32* %t0.i, align 4, !dbg !252
  %shr481.i = lshr i32 %202, 16, !dbg !252
  %conv482.i = trunc i32 %shr481.i to i8, !dbg !252
  %conv483.i = zext i8 %conv482.i to i32, !dbg !252
  %and484.i = and i32 %conv483.i, 255, !dbg !252
  %idxprom485.i = sext i32 %and484.i to i64, !dbg !252
  %arrayidx486.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom485.i, !dbg !252
  %203 = load i32, i32* %arrayidx486.i, align 4, !dbg !252
  %xor487.i = xor i32 %xor480.i, %203, !dbg !252
  %204 = load i32, i32* %t0.i, align 4, !dbg !252
  %shr488.i = lshr i32 %204, 24, !dbg !252
  %conv489.i = trunc i32 %shr488.i to i8, !dbg !252
  %conv490.i = zext i8 %conv489.i to i32, !dbg !252
  %and491.i = and i32 %conv490.i, 255, !dbg !252
  %idxprom492.i = sext i32 %and491.i to i64, !dbg !252
  %arrayidx493.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom492.i, !dbg !252
  %205 = load i32, i32* %arrayidx493.i, align 4, !dbg !252
  %xor494.i = xor i32 %xor487.i, %205, !dbg !252
  %206 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !252
  %data495.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %206, i32 0, i32 0, !dbg !252
  %arrayidx496.i = getelementptr inbounds [32 x i32], [32 x i32]* %data495.i, i64 0, i64 12, !dbg !252
  store i32 %xor494.i, i32* %arrayidx496.i, align 4, !dbg !252
  %207 = load i32, i32* %t1.i, align 4, !dbg !252
  %conv498.i = trunc i32 %207 to i8, !dbg !252
  %conv499.i = zext i8 %conv498.i to i32, !dbg !252
  %and500.i = and i32 %conv499.i, 255, !dbg !252
  %idxprom501.i = sext i32 %and500.i to i64, !dbg !252
  %arrayidx502.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom501.i, !dbg !252
  %208 = load i32, i32* %arrayidx502.i, align 4, !dbg !252
  %209 = load i32, i32* %t1.i, align 4, !dbg !252
  %shr503.i = lshr i32 %209, 8, !dbg !252
  %conv504.i = trunc i32 %shr503.i to i8, !dbg !252
  %conv505.i = zext i8 %conv504.i to i32, !dbg !252
  %and506.i = and i32 %conv505.i, 255, !dbg !252
  %idxprom507.i = sext i32 %and506.i to i64, !dbg !252
  %arrayidx508.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom507.i, !dbg !252
  %210 = load i32, i32* %arrayidx508.i, align 4, !dbg !252
  %xor509.i = xor i32 %208, %210, !dbg !252
  %211 = load i32, i32* %t1.i, align 4, !dbg !252
  %shr510.i = lshr i32 %211, 16, !dbg !252
  %conv511.i = trunc i32 %shr510.i to i8, !dbg !252
  %conv512.i = zext i8 %conv511.i to i32, !dbg !252
  %and513.i = and i32 %conv512.i, 255, !dbg !252
  %idxprom514.i = sext i32 %and513.i to i64, !dbg !252
  %arrayidx515.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom514.i, !dbg !252
  %212 = load i32, i32* %arrayidx515.i, align 4, !dbg !252
  %xor516.i = xor i32 %xor509.i, %212, !dbg !252
  %213 = load i32, i32* %t1.i, align 4, !dbg !252
  %shr517.i = lshr i32 %213, 24, !dbg !252
  %conv518.i = trunc i32 %shr517.i to i8, !dbg !252
  %conv519.i = zext i8 %conv518.i to i32, !dbg !252
  %and520.i = and i32 %conv519.i, 255, !dbg !252
  %idxprom521.i = sext i32 %and520.i to i64, !dbg !252
  %arrayidx522.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom521.i, !dbg !252
  %214 = load i32, i32* %arrayidx522.i, align 4, !dbg !252
  %xor523.i = xor i32 %xor516.i, %214, !dbg !252
  %215 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !252
  %data524.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %215, i32 0, i32 0, !dbg !252
  %arrayidx525.i = getelementptr inbounds [32 x i32], [32 x i32]* %data524.i, i64 0, i64 12, !dbg !252
  %arrayidx526.i = getelementptr inbounds i32, i32* %arrayidx525.i, i64 1, !dbg !252
  store i32 %xor523.i, i32* %arrayidx526.i, align 4, !dbg !252
  %216 = load i32, i32* %x1.i, align 4, !dbg !253
  store i32 %216, i32* %t0.i, align 4, !dbg !253
  %217 = load i32, i32* %x1.i, align 4, !dbg !253
  %shr527.i = lshr i32 %217, 8, !dbg !253
  %218 = load i32, i32* %x2.i, align 4, !dbg !253
  %shl528.i = shl i32 %218, 24, !dbg !253
  %xor529.i = xor i32 %shr527.i, %shl528.i, !dbg !253
  store i32 %xor529.i, i32* %x1.i, align 4, !dbg !253
  %219 = load i32, i32* %x2.i, align 4, !dbg !253
  %shr530.i = lshr i32 %219, 8, !dbg !253
  %220 = load i32, i32* %t0.i, align 4, !dbg !253
  %shl531.i = shl i32 %220, 24, !dbg !253
  %xor532.i = xor i32 %shr530.i, %shl531.i, !dbg !253
  store i32 %xor532.i, i32* %x2.i, align 4, !dbg !253
  %221 = load i32, i32* %x1.i, align 4, !dbg !253
  %222 = load i32, i32* %x3.i, align 4, !dbg !253
  %add533.i = add i32 %221, %222, !dbg !253
  %sub534.i = sub i32 %add533.i, 465362127, !dbg !253
  store i32 %sub534.i, i32* %t0.i, align 4, !dbg !253
  %223 = load i32, i32* %x2.i, align 4, !dbg !253
  %add535.i = add i32 %223, 465362127, !dbg !253
  %224 = load i32, i32* %x4.i, align 4, !dbg !253
  %sub536.i = sub i32 %add535.i, %224, !dbg !253
  store i32 %sub536.i, i32* %t1.i, align 4, !dbg !253
  %225 = load i32, i32* %t0.i, align 4, !dbg !254
  %conv537.i = trunc i32 %225 to i8, !dbg !254
  %conv538.i = zext i8 %conv537.i to i32, !dbg !254
  %and539.i = and i32 %conv538.i, 255, !dbg !254
  %idxprom540.i = sext i32 %and539.i to i64, !dbg !254
  %arrayidx541.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom540.i, !dbg !254
  %226 = load i32, i32* %arrayidx541.i, align 4, !dbg !254
  %227 = load i32, i32* %t0.i, align 4, !dbg !254
  %shr542.i = lshr i32 %227, 8, !dbg !254
  %conv543.i = trunc i32 %shr542.i to i8, !dbg !254
  %conv544.i = zext i8 %conv543.i to i32, !dbg !254
  %and545.i = and i32 %conv544.i, 255, !dbg !254
  %idxprom546.i = sext i32 %and545.i to i64, !dbg !254
  %arrayidx547.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom546.i, !dbg !254
  %228 = load i32, i32* %arrayidx547.i, align 4, !dbg !254
  %xor548.i = xor i32 %226, %228, !dbg !254
  %229 = load i32, i32* %t0.i, align 4, !dbg !254
  %shr549.i = lshr i32 %229, 16, !dbg !254
  %conv550.i = trunc i32 %shr549.i to i8, !dbg !254
  %conv551.i = zext i8 %conv550.i to i32, !dbg !254
  %and552.i = and i32 %conv551.i, 255, !dbg !254
  %idxprom553.i = sext i32 %and552.i to i64, !dbg !254
  %arrayidx554.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom553.i, !dbg !254
  %230 = load i32, i32* %arrayidx554.i, align 4, !dbg !254
  %xor555.i = xor i32 %xor548.i, %230, !dbg !254
  %231 = load i32, i32* %t0.i, align 4, !dbg !254
  %shr556.i = lshr i32 %231, 24, !dbg !254
  %conv557.i = trunc i32 %shr556.i to i8, !dbg !254
  %conv558.i = zext i8 %conv557.i to i32, !dbg !254
  %and559.i = and i32 %conv558.i, 255, !dbg !254
  %idxprom560.i = sext i32 %and559.i to i64, !dbg !254
  %arrayidx561.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom560.i, !dbg !254
  %232 = load i32, i32* %arrayidx561.i, align 4, !dbg !254
  %xor562.i = xor i32 %xor555.i, %232, !dbg !254
  %233 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !254
  %data563.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %233, i32 0, i32 0, !dbg !254
  %arrayidx564.i = getelementptr inbounds [32 x i32], [32 x i32]* %data563.i, i64 0, i64 14, !dbg !254
  store i32 %xor562.i, i32* %arrayidx564.i, align 4, !dbg !254
  %234 = load i32, i32* %t1.i, align 4, !dbg !254
  %conv566.i = trunc i32 %234 to i8, !dbg !254
  %conv567.i = zext i8 %conv566.i to i32, !dbg !254
  %and568.i = and i32 %conv567.i, 255, !dbg !254
  %idxprom569.i = sext i32 %and568.i to i64, !dbg !254
  %arrayidx570.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom569.i, !dbg !254
  %235 = load i32, i32* %arrayidx570.i, align 4, !dbg !254
  %236 = load i32, i32* %t1.i, align 4, !dbg !254
  %shr571.i = lshr i32 %236, 8, !dbg !254
  %conv572.i = trunc i32 %shr571.i to i8, !dbg !254
  %conv573.i = zext i8 %conv572.i to i32, !dbg !254
  %and574.i = and i32 %conv573.i, 255, !dbg !254
  %idxprom575.i = sext i32 %and574.i to i64, !dbg !254
  %arrayidx576.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom575.i, !dbg !254
  %237 = load i32, i32* %arrayidx576.i, align 4, !dbg !254
  %xor577.i = xor i32 %235, %237, !dbg !254
  %238 = load i32, i32* %t1.i, align 4, !dbg !254
  %shr578.i = lshr i32 %238, 16, !dbg !254
  %conv579.i = trunc i32 %shr578.i to i8, !dbg !254
  %conv580.i = zext i8 %conv579.i to i32, !dbg !254
  %and581.i = and i32 %conv580.i, 255, !dbg !254
  %idxprom582.i = sext i32 %and581.i to i64, !dbg !254
  %arrayidx583.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom582.i, !dbg !254
  %239 = load i32, i32* %arrayidx583.i, align 4, !dbg !254
  %xor584.i = xor i32 %xor577.i, %239, !dbg !254
  %240 = load i32, i32* %t1.i, align 4, !dbg !254
  %shr585.i = lshr i32 %240, 24, !dbg !254
  %conv586.i = trunc i32 %shr585.i to i8, !dbg !254
  %conv587.i = zext i8 %conv586.i to i32, !dbg !254
  %and588.i = and i32 %conv587.i, 255, !dbg !254
  %idxprom589.i = sext i32 %and588.i to i64, !dbg !254
  %arrayidx590.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom589.i, !dbg !254
  %241 = load i32, i32* %arrayidx590.i, align 4, !dbg !254
  %xor591.i = xor i32 %xor584.i, %241, !dbg !254
  %242 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !254
  %data592.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %242, i32 0, i32 0, !dbg !254
  %arrayidx593.i = getelementptr inbounds [32 x i32], [32 x i32]* %data592.i, i64 0, i64 14, !dbg !254
  %arrayidx594.i = getelementptr inbounds i32, i32* %arrayidx593.i, i64 1, !dbg !254
  store i32 %xor591.i, i32* %arrayidx594.i, align 4, !dbg !254
  %243 = load i32, i32* %x3.i, align 4, !dbg !255
  store i32 %243, i32* %t0.i, align 4, !dbg !255
  %244 = load i32, i32* %x3.i, align 4, !dbg !255
  %shl595.i = shl i32 %244, 8, !dbg !255
  %245 = load i32, i32* %x4.i, align 4, !dbg !255
  %shr596.i = lshr i32 %245, 24, !dbg !255
  %xor597.i = xor i32 %shl595.i, %shr596.i, !dbg !255
  store i32 %xor597.i, i32* %x3.i, align 4, !dbg !255
  %246 = load i32, i32* %x4.i, align 4, !dbg !255
  %shl598.i = shl i32 %246, 8, !dbg !255
  %247 = load i32, i32* %t0.i, align 4, !dbg !255
  %shr599.i = lshr i32 %247, 24, !dbg !255
  %xor600.i = xor i32 %shl598.i, %shr599.i, !dbg !255
  store i32 %xor600.i, i32* %x4.i, align 4, !dbg !255
  %248 = load i32, i32* %x1.i, align 4, !dbg !255
  %249 = load i32, i32* %x3.i, align 4, !dbg !255
  %add601.i = add i32 %248, %249, !dbg !255
  %sub602.i = sub i32 %add601.i, 930724254, !dbg !255
  store i32 %sub602.i, i32* %t0.i, align 4, !dbg !255
  %250 = load i32, i32* %x2.i, align 4, !dbg !255
  %add603.i = add i32 %250, 930724254, !dbg !255
  %251 = load i32, i32* %x4.i, align 4, !dbg !255
  %sub604.i = sub i32 %add603.i, %251, !dbg !255
  store i32 %sub604.i, i32* %t1.i, align 4, !dbg !255
  %252 = load i32, i32* %t0.i, align 4, !dbg !256
  %conv605.i = trunc i32 %252 to i8, !dbg !256
  %conv606.i = zext i8 %conv605.i to i32, !dbg !256
  %and607.i = and i32 %conv606.i, 255, !dbg !256
  %idxprom608.i = sext i32 %and607.i to i64, !dbg !256
  %arrayidx609.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom608.i, !dbg !256
  %253 = load i32, i32* %arrayidx609.i, align 4, !dbg !256
  %254 = load i32, i32* %t0.i, align 4, !dbg !256
  %shr610.i = lshr i32 %254, 8, !dbg !256
  %conv611.i = trunc i32 %shr610.i to i8, !dbg !256
  %conv612.i = zext i8 %conv611.i to i32, !dbg !256
  %and613.i = and i32 %conv612.i, 255, !dbg !256
  %idxprom614.i = sext i32 %and613.i to i64, !dbg !256
  %arrayidx615.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom614.i, !dbg !256
  %255 = load i32, i32* %arrayidx615.i, align 4, !dbg !256
  %xor616.i = xor i32 %253, %255, !dbg !256
  %256 = load i32, i32* %t0.i, align 4, !dbg !256
  %shr617.i = lshr i32 %256, 16, !dbg !256
  %conv618.i = trunc i32 %shr617.i to i8, !dbg !256
  %conv619.i = zext i8 %conv618.i to i32, !dbg !256
  %and620.i = and i32 %conv619.i, 255, !dbg !256
  %idxprom621.i = sext i32 %and620.i to i64, !dbg !256
  %arrayidx622.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom621.i, !dbg !256
  %257 = load i32, i32* %arrayidx622.i, align 4, !dbg !256
  %xor623.i = xor i32 %xor616.i, %257, !dbg !256
  %258 = load i32, i32* %t0.i, align 4, !dbg !256
  %shr624.i = lshr i32 %258, 24, !dbg !256
  %conv625.i = trunc i32 %shr624.i to i8, !dbg !256
  %conv626.i = zext i8 %conv625.i to i32, !dbg !256
  %and627.i = and i32 %conv626.i, 255, !dbg !256
  %idxprom628.i = sext i32 %and627.i to i64, !dbg !256
  %arrayidx629.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom628.i, !dbg !256
  %259 = load i32, i32* %arrayidx629.i, align 4, !dbg !256
  %xor630.i = xor i32 %xor623.i, %259, !dbg !256
  %260 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !256
  %data631.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %260, i32 0, i32 0, !dbg !256
  %arrayidx632.i = getelementptr inbounds [32 x i32], [32 x i32]* %data631.i, i64 0, i64 16, !dbg !256
  store i32 %xor630.i, i32* %arrayidx632.i, align 4, !dbg !256
  %261 = load i32, i32* %t1.i, align 4, !dbg !256
  %conv634.i = trunc i32 %261 to i8, !dbg !256
  %conv635.i = zext i8 %conv634.i to i32, !dbg !256
  %and636.i = and i32 %conv635.i, 255, !dbg !256
  %idxprom637.i = sext i32 %and636.i to i64, !dbg !256
  %arrayidx638.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom637.i, !dbg !256
  %262 = load i32, i32* %arrayidx638.i, align 4, !dbg !256
  %263 = load i32, i32* %t1.i, align 4, !dbg !256
  %shr639.i = lshr i32 %263, 8, !dbg !256
  %conv640.i = trunc i32 %shr639.i to i8, !dbg !256
  %conv641.i = zext i8 %conv640.i to i32, !dbg !256
  %and642.i = and i32 %conv641.i, 255, !dbg !256
  %idxprom643.i = sext i32 %and642.i to i64, !dbg !256
  %arrayidx644.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom643.i, !dbg !256
  %264 = load i32, i32* %arrayidx644.i, align 4, !dbg !256
  %xor645.i = xor i32 %262, %264, !dbg !256
  %265 = load i32, i32* %t1.i, align 4, !dbg !256
  %shr646.i = lshr i32 %265, 16, !dbg !256
  %conv647.i = trunc i32 %shr646.i to i8, !dbg !256
  %conv648.i = zext i8 %conv647.i to i32, !dbg !256
  %and649.i = and i32 %conv648.i, 255, !dbg !256
  %idxprom650.i = sext i32 %and649.i to i64, !dbg !256
  %arrayidx651.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom650.i, !dbg !256
  %266 = load i32, i32* %arrayidx651.i, align 4, !dbg !256
  %xor652.i = xor i32 %xor645.i, %266, !dbg !256
  %267 = load i32, i32* %t1.i, align 4, !dbg !256
  %shr653.i = lshr i32 %267, 24, !dbg !256
  %conv654.i = trunc i32 %shr653.i to i8, !dbg !256
  %conv655.i = zext i8 %conv654.i to i32, !dbg !256
  %and656.i = and i32 %conv655.i, 255, !dbg !256
  %idxprom657.i = sext i32 %and656.i to i64, !dbg !256
  %arrayidx658.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom657.i, !dbg !256
  %268 = load i32, i32* %arrayidx658.i, align 4, !dbg !256
  %xor659.i = xor i32 %xor652.i, %268, !dbg !256
  %269 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !256
  %data660.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %269, i32 0, i32 0, !dbg !256
  %arrayidx661.i = getelementptr inbounds [32 x i32], [32 x i32]* %data660.i, i64 0, i64 16, !dbg !256
  %arrayidx662.i = getelementptr inbounds i32, i32* %arrayidx661.i, i64 1, !dbg !256
  store i32 %xor659.i, i32* %arrayidx662.i, align 4, !dbg !256
  %270 = load i32, i32* %x1.i, align 4, !dbg !257
  store i32 %270, i32* %t0.i, align 4, !dbg !257
  %271 = load i32, i32* %x1.i, align 4, !dbg !257
  %shr663.i = lshr i32 %271, 8, !dbg !257
  %272 = load i32, i32* %x2.i, align 4, !dbg !257
  %shl664.i = shl i32 %272, 24, !dbg !257
  %xor665.i = xor i32 %shr663.i, %shl664.i, !dbg !257
  store i32 %xor665.i, i32* %x1.i, align 4, !dbg !257
  %273 = load i32, i32* %x2.i, align 4, !dbg !257
  %shr666.i = lshr i32 %273, 8, !dbg !257
  %274 = load i32, i32* %t0.i, align 4, !dbg !257
  %shl667.i = shl i32 %274, 24, !dbg !257
  %xor668.i = xor i32 %shr666.i, %shl667.i, !dbg !257
  store i32 %xor668.i, i32* %x2.i, align 4, !dbg !257
  %275 = load i32, i32* %x1.i, align 4, !dbg !257
  %276 = load i32, i32* %x3.i, align 4, !dbg !257
  %add669.i = add i32 %275, %276, !dbg !257
  %sub670.i = sub i32 %add669.i, 1861448508, !dbg !257
  store i32 %sub670.i, i32* %t0.i, align 4, !dbg !257
  %277 = load i32, i32* %x2.i, align 4, !dbg !257
  %add671.i = add i32 %277, 1861448508, !dbg !257
  %278 = load i32, i32* %x4.i, align 4, !dbg !257
  %sub672.i = sub i32 %add671.i, %278, !dbg !257
  store i32 %sub672.i, i32* %t1.i, align 4, !dbg !257
  %279 = load i32, i32* %t0.i, align 4, !dbg !258
  %conv673.i = trunc i32 %279 to i8, !dbg !258
  %conv674.i = zext i8 %conv673.i to i32, !dbg !258
  %and675.i = and i32 %conv674.i, 255, !dbg !258
  %idxprom676.i = sext i32 %and675.i to i64, !dbg !258
  %arrayidx677.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom676.i, !dbg !258
  %280 = load i32, i32* %arrayidx677.i, align 4, !dbg !258
  %281 = load i32, i32* %t0.i, align 4, !dbg !258
  %shr678.i = lshr i32 %281, 8, !dbg !258
  %conv679.i = trunc i32 %shr678.i to i8, !dbg !258
  %conv680.i = zext i8 %conv679.i to i32, !dbg !258
  %and681.i = and i32 %conv680.i, 255, !dbg !258
  %idxprom682.i = sext i32 %and681.i to i64, !dbg !258
  %arrayidx683.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom682.i, !dbg !258
  %282 = load i32, i32* %arrayidx683.i, align 4, !dbg !258
  %xor684.i = xor i32 %280, %282, !dbg !258
  %283 = load i32, i32* %t0.i, align 4, !dbg !258
  %shr685.i = lshr i32 %283, 16, !dbg !258
  %conv686.i = trunc i32 %shr685.i to i8, !dbg !258
  %conv687.i = zext i8 %conv686.i to i32, !dbg !258
  %and688.i = and i32 %conv687.i, 255, !dbg !258
  %idxprom689.i = sext i32 %and688.i to i64, !dbg !258
  %arrayidx690.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom689.i, !dbg !258
  %284 = load i32, i32* %arrayidx690.i, align 4, !dbg !258
  %xor691.i = xor i32 %xor684.i, %284, !dbg !258
  %285 = load i32, i32* %t0.i, align 4, !dbg !258
  %shr692.i = lshr i32 %285, 24, !dbg !258
  %conv693.i = trunc i32 %shr692.i to i8, !dbg !258
  %conv694.i = zext i8 %conv693.i to i32, !dbg !258
  %and695.i = and i32 %conv694.i, 255, !dbg !258
  %idxprom696.i = sext i32 %and695.i to i64, !dbg !258
  %arrayidx697.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom696.i, !dbg !258
  %286 = load i32, i32* %arrayidx697.i, align 4, !dbg !258
  %xor698.i = xor i32 %xor691.i, %286, !dbg !258
  %287 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !258
  %data699.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %287, i32 0, i32 0, !dbg !258
  %arrayidx700.i = getelementptr inbounds [32 x i32], [32 x i32]* %data699.i, i64 0, i64 18, !dbg !258
  store i32 %xor698.i, i32* %arrayidx700.i, align 4, !dbg !258
  %288 = load i32, i32* %t1.i, align 4, !dbg !258
  %conv702.i = trunc i32 %288 to i8, !dbg !258
  %conv703.i = zext i8 %conv702.i to i32, !dbg !258
  %and704.i = and i32 %conv703.i, 255, !dbg !258
  %idxprom705.i = sext i32 %and704.i to i64, !dbg !258
  %arrayidx706.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom705.i, !dbg !258
  %289 = load i32, i32* %arrayidx706.i, align 4, !dbg !258
  %290 = load i32, i32* %t1.i, align 4, !dbg !258
  %shr707.i = lshr i32 %290, 8, !dbg !258
  %conv708.i = trunc i32 %shr707.i to i8, !dbg !258
  %conv709.i = zext i8 %conv708.i to i32, !dbg !258
  %and710.i = and i32 %conv709.i, 255, !dbg !258
  %idxprom711.i = sext i32 %and710.i to i64, !dbg !258
  %arrayidx712.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom711.i, !dbg !258
  %291 = load i32, i32* %arrayidx712.i, align 4, !dbg !258
  %xor713.i = xor i32 %289, %291, !dbg !258
  %292 = load i32, i32* %t1.i, align 4, !dbg !258
  %shr714.i = lshr i32 %292, 16, !dbg !258
  %conv715.i = trunc i32 %shr714.i to i8, !dbg !258
  %conv716.i = zext i8 %conv715.i to i32, !dbg !258
  %and717.i = and i32 %conv716.i, 255, !dbg !258
  %idxprom718.i = sext i32 %and717.i to i64, !dbg !258
  %arrayidx719.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom718.i, !dbg !258
  %293 = load i32, i32* %arrayidx719.i, align 4, !dbg !258
  %xor720.i = xor i32 %xor713.i, %293, !dbg !258
  %294 = load i32, i32* %t1.i, align 4, !dbg !258
  %shr721.i = lshr i32 %294, 24, !dbg !258
  %conv722.i = trunc i32 %shr721.i to i8, !dbg !258
  %conv723.i = zext i8 %conv722.i to i32, !dbg !258
  %and724.i = and i32 %conv723.i, 255, !dbg !258
  %idxprom725.i = sext i32 %and724.i to i64, !dbg !258
  %arrayidx726.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom725.i, !dbg !258
  %295 = load i32, i32* %arrayidx726.i, align 4, !dbg !258
  %xor727.i = xor i32 %xor720.i, %295, !dbg !258
  %296 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !258
  %data728.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %296, i32 0, i32 0, !dbg !258
  %arrayidx729.i = getelementptr inbounds [32 x i32], [32 x i32]* %data728.i, i64 0, i64 18, !dbg !258
  %arrayidx730.i = getelementptr inbounds i32, i32* %arrayidx729.i, i64 1, !dbg !258
  store i32 %xor727.i, i32* %arrayidx730.i, align 4, !dbg !258
  %297 = load i32, i32* %x3.i, align 4, !dbg !259
  store i32 %297, i32* %t0.i, align 4, !dbg !259
  %298 = load i32, i32* %x3.i, align 4, !dbg !259
  %shl731.i = shl i32 %298, 8, !dbg !259
  %299 = load i32, i32* %x4.i, align 4, !dbg !259
  %shr732.i = lshr i32 %299, 24, !dbg !259
  %xor733.i = xor i32 %shl731.i, %shr732.i, !dbg !259
  store i32 %xor733.i, i32* %x3.i, align 4, !dbg !259
  %300 = load i32, i32* %x4.i, align 4, !dbg !259
  %shl734.i = shl i32 %300, 8, !dbg !259
  %301 = load i32, i32* %t0.i, align 4, !dbg !259
  %shr735.i = lshr i32 %301, 24, !dbg !259
  %xor736.i = xor i32 %shl734.i, %shr735.i, !dbg !259
  store i32 %xor736.i, i32* %x4.i, align 4, !dbg !259
  %302 = load i32, i32* %x1.i, align 4, !dbg !259
  %303 = load i32, i32* %x3.i, align 4, !dbg !259
  %add737.i = add i32 %302, %303, !dbg !259
  %sub738.i = sub i32 %add737.i, -572070280, !dbg !259
  store i32 %sub738.i, i32* %t0.i, align 4, !dbg !259
  %304 = load i32, i32* %x2.i, align 4, !dbg !259
  %add739.i = add i32 %304, -572070280, !dbg !259
  %305 = load i32, i32* %x4.i, align 4, !dbg !259
  %sub740.i = sub i32 %add739.i, %305, !dbg !259
  store i32 %sub740.i, i32* %t1.i, align 4, !dbg !259
  %306 = load i32, i32* %t0.i, align 4, !dbg !260
  %conv741.i = trunc i32 %306 to i8, !dbg !260
  %conv742.i = zext i8 %conv741.i to i32, !dbg !260
  %and743.i = and i32 %conv742.i, 255, !dbg !260
  %idxprom744.i = sext i32 %and743.i to i64, !dbg !260
  %arrayidx745.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom744.i, !dbg !260
  %307 = load i32, i32* %arrayidx745.i, align 4, !dbg !260
  %308 = load i32, i32* %t0.i, align 4, !dbg !260
  %shr746.i = lshr i32 %308, 8, !dbg !260
  %conv747.i = trunc i32 %shr746.i to i8, !dbg !260
  %conv748.i = zext i8 %conv747.i to i32, !dbg !260
  %and749.i = and i32 %conv748.i, 255, !dbg !260
  %idxprom750.i = sext i32 %and749.i to i64, !dbg !260
  %arrayidx751.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom750.i, !dbg !260
  %309 = load i32, i32* %arrayidx751.i, align 4, !dbg !260
  %xor752.i = xor i32 %307, %309, !dbg !260
  %310 = load i32, i32* %t0.i, align 4, !dbg !260
  %shr753.i = lshr i32 %310, 16, !dbg !260
  %conv754.i = trunc i32 %shr753.i to i8, !dbg !260
  %conv755.i = zext i8 %conv754.i to i32, !dbg !260
  %and756.i = and i32 %conv755.i, 255, !dbg !260
  %idxprom757.i = sext i32 %and756.i to i64, !dbg !260
  %arrayidx758.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom757.i, !dbg !260
  %311 = load i32, i32* %arrayidx758.i, align 4, !dbg !260
  %xor759.i = xor i32 %xor752.i, %311, !dbg !260
  %312 = load i32, i32* %t0.i, align 4, !dbg !260
  %shr760.i = lshr i32 %312, 24, !dbg !260
  %conv761.i = trunc i32 %shr760.i to i8, !dbg !260
  %conv762.i = zext i8 %conv761.i to i32, !dbg !260
  %and763.i = and i32 %conv762.i, 255, !dbg !260
  %idxprom764.i = sext i32 %and763.i to i64, !dbg !260
  %arrayidx765.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom764.i, !dbg !260
  %313 = load i32, i32* %arrayidx765.i, align 4, !dbg !260
  %xor766.i = xor i32 %xor759.i, %313, !dbg !260
  %314 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !260
  %data767.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %314, i32 0, i32 0, !dbg !260
  %arrayidx768.i = getelementptr inbounds [32 x i32], [32 x i32]* %data767.i, i64 0, i64 20, !dbg !260
  store i32 %xor766.i, i32* %arrayidx768.i, align 4, !dbg !260
  %315 = load i32, i32* %t1.i, align 4, !dbg !260
  %conv770.i = trunc i32 %315 to i8, !dbg !260
  %conv771.i = zext i8 %conv770.i to i32, !dbg !260
  %and772.i = and i32 %conv771.i, 255, !dbg !260
  %idxprom773.i = sext i32 %and772.i to i64, !dbg !260
  %arrayidx774.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom773.i, !dbg !260
  %316 = load i32, i32* %arrayidx774.i, align 4, !dbg !260
  %317 = load i32, i32* %t1.i, align 4, !dbg !260
  %shr775.i = lshr i32 %317, 8, !dbg !260
  %conv776.i = trunc i32 %shr775.i to i8, !dbg !260
  %conv777.i = zext i8 %conv776.i to i32, !dbg !260
  %and778.i = and i32 %conv777.i, 255, !dbg !260
  %idxprom779.i = sext i32 %and778.i to i64, !dbg !260
  %arrayidx780.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom779.i, !dbg !260
  %318 = load i32, i32* %arrayidx780.i, align 4, !dbg !260
  %xor781.i = xor i32 %316, %318, !dbg !260
  %319 = load i32, i32* %t1.i, align 4, !dbg !260
  %shr782.i = lshr i32 %319, 16, !dbg !260
  %conv783.i = trunc i32 %shr782.i to i8, !dbg !260
  %conv784.i = zext i8 %conv783.i to i32, !dbg !260
  %and785.i = and i32 %conv784.i, 255, !dbg !260
  %idxprom786.i = sext i32 %and785.i to i64, !dbg !260
  %arrayidx787.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom786.i, !dbg !260
  %320 = load i32, i32* %arrayidx787.i, align 4, !dbg !260
  %xor788.i = xor i32 %xor781.i, %320, !dbg !260
  %321 = load i32, i32* %t1.i, align 4, !dbg !260
  %shr789.i = lshr i32 %321, 24, !dbg !260
  %conv790.i = trunc i32 %shr789.i to i8, !dbg !260
  %conv791.i = zext i8 %conv790.i to i32, !dbg !260
  %and792.i = and i32 %conv791.i, 255, !dbg !260
  %idxprom793.i = sext i32 %and792.i to i64, !dbg !260
  %arrayidx794.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom793.i, !dbg !260
  %322 = load i32, i32* %arrayidx794.i, align 4, !dbg !260
  %xor795.i = xor i32 %xor788.i, %322, !dbg !260
  %323 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !260
  %data796.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %323, i32 0, i32 0, !dbg !260
  %arrayidx797.i = getelementptr inbounds [32 x i32], [32 x i32]* %data796.i, i64 0, i64 20, !dbg !260
  %arrayidx798.i = getelementptr inbounds i32, i32* %arrayidx797.i, i64 1, !dbg !260
  store i32 %xor795.i, i32* %arrayidx798.i, align 4, !dbg !260
  %324 = load i32, i32* %x1.i, align 4, !dbg !261
  store i32 %324, i32* %t0.i, align 4, !dbg !261
  %325 = load i32, i32* %x1.i, align 4, !dbg !261
  %shr799.i = lshr i32 %325, 8, !dbg !261
  %326 = load i32, i32* %x2.i, align 4, !dbg !261
  %shl800.i = shl i32 %326, 24, !dbg !261
  %xor801.i = xor i32 %shr799.i, %shl800.i, !dbg !261
  store i32 %xor801.i, i32* %x1.i, align 4, !dbg !261
  %327 = load i32, i32* %x2.i, align 4, !dbg !261
  %shr802.i = lshr i32 %327, 8, !dbg !261
  %328 = load i32, i32* %t0.i, align 4, !dbg !261
  %shl803.i = shl i32 %328, 24, !dbg !261
  %xor804.i = xor i32 %shr802.i, %shl803.i, !dbg !261
  store i32 %xor804.i, i32* %x2.i, align 4, !dbg !261
  %329 = load i32, i32* %x1.i, align 4, !dbg !261
  %330 = load i32, i32* %x3.i, align 4, !dbg !261
  %add805.i = add i32 %329, %330, !dbg !261
  %sub806.i = sub i32 %add805.i, -1144140559, !dbg !261
  store i32 %sub806.i, i32* %t0.i, align 4, !dbg !261
  %331 = load i32, i32* %x2.i, align 4, !dbg !261
  %add807.i = add i32 %331, -1144140559, !dbg !261
  %332 = load i32, i32* %x4.i, align 4, !dbg !261
  %sub808.i = sub i32 %add807.i, %332, !dbg !261
  store i32 %sub808.i, i32* %t1.i, align 4, !dbg !261
  %333 = load i32, i32* %t0.i, align 4, !dbg !262
  %conv809.i = trunc i32 %333 to i8, !dbg !262
  %conv810.i = zext i8 %conv809.i to i32, !dbg !262
  %and811.i = and i32 %conv810.i, 255, !dbg !262
  %idxprom812.i = sext i32 %and811.i to i64, !dbg !262
  %arrayidx813.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom812.i, !dbg !262
  %334 = load i32, i32* %arrayidx813.i, align 4, !dbg !262
  %335 = load i32, i32* %t0.i, align 4, !dbg !262
  %shr814.i = lshr i32 %335, 8, !dbg !262
  %conv815.i = trunc i32 %shr814.i to i8, !dbg !262
  %conv816.i = zext i8 %conv815.i to i32, !dbg !262
  %and817.i = and i32 %conv816.i, 255, !dbg !262
  %idxprom818.i = sext i32 %and817.i to i64, !dbg !262
  %arrayidx819.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom818.i, !dbg !262
  %336 = load i32, i32* %arrayidx819.i, align 4, !dbg !262
  %xor820.i = xor i32 %334, %336, !dbg !262
  %337 = load i32, i32* %t0.i, align 4, !dbg !262
  %shr821.i = lshr i32 %337, 16, !dbg !262
  %conv822.i = trunc i32 %shr821.i to i8, !dbg !262
  %conv823.i = zext i8 %conv822.i to i32, !dbg !262
  %and824.i = and i32 %conv823.i, 255, !dbg !262
  %idxprom825.i = sext i32 %and824.i to i64, !dbg !262
  %arrayidx826.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom825.i, !dbg !262
  %338 = load i32, i32* %arrayidx826.i, align 4, !dbg !262
  %xor827.i = xor i32 %xor820.i, %338, !dbg !262
  %339 = load i32, i32* %t0.i, align 4, !dbg !262
  %shr828.i = lshr i32 %339, 24, !dbg !262
  %conv829.i = trunc i32 %shr828.i to i8, !dbg !262
  %conv830.i = zext i8 %conv829.i to i32, !dbg !262
  %and831.i = and i32 %conv830.i, 255, !dbg !262
  %idxprom832.i = sext i32 %and831.i to i64, !dbg !262
  %arrayidx833.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom832.i, !dbg !262
  %340 = load i32, i32* %arrayidx833.i, align 4, !dbg !262
  %xor834.i = xor i32 %xor827.i, %340, !dbg !262
  %341 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !262
  %data835.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %341, i32 0, i32 0, !dbg !262
  %arrayidx836.i = getelementptr inbounds [32 x i32], [32 x i32]* %data835.i, i64 0, i64 22, !dbg !262
  store i32 %xor834.i, i32* %arrayidx836.i, align 4, !dbg !262
  %342 = load i32, i32* %t1.i, align 4, !dbg !262
  %conv838.i = trunc i32 %342 to i8, !dbg !262
  %conv839.i = zext i8 %conv838.i to i32, !dbg !262
  %and840.i = and i32 %conv839.i, 255, !dbg !262
  %idxprom841.i = sext i32 %and840.i to i64, !dbg !262
  %arrayidx842.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom841.i, !dbg !262
  %343 = load i32, i32* %arrayidx842.i, align 4, !dbg !262
  %344 = load i32, i32* %t1.i, align 4, !dbg !262
  %shr843.i = lshr i32 %344, 8, !dbg !262
  %conv844.i = trunc i32 %shr843.i to i8, !dbg !262
  %conv845.i = zext i8 %conv844.i to i32, !dbg !262
  %and846.i = and i32 %conv845.i, 255, !dbg !262
  %idxprom847.i = sext i32 %and846.i to i64, !dbg !262
  %arrayidx848.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom847.i, !dbg !262
  %345 = load i32, i32* %arrayidx848.i, align 4, !dbg !262
  %xor849.i = xor i32 %343, %345, !dbg !262
  %346 = load i32, i32* %t1.i, align 4, !dbg !262
  %shr850.i = lshr i32 %346, 16, !dbg !262
  %conv851.i = trunc i32 %shr850.i to i8, !dbg !262
  %conv852.i = zext i8 %conv851.i to i32, !dbg !262
  %and853.i = and i32 %conv852.i, 255, !dbg !262
  %idxprom854.i = sext i32 %and853.i to i64, !dbg !262
  %arrayidx855.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom854.i, !dbg !262
  %347 = load i32, i32* %arrayidx855.i, align 4, !dbg !262
  %xor856.i = xor i32 %xor849.i, %347, !dbg !262
  %348 = load i32, i32* %t1.i, align 4, !dbg !262
  %shr857.i = lshr i32 %348, 24, !dbg !262
  %conv858.i = trunc i32 %shr857.i to i8, !dbg !262
  %conv859.i = zext i8 %conv858.i to i32, !dbg !262
  %and860.i = and i32 %conv859.i, 255, !dbg !262
  %idxprom861.i = sext i32 %and860.i to i64, !dbg !262
  %arrayidx862.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom861.i, !dbg !262
  %349 = load i32, i32* %arrayidx862.i, align 4, !dbg !262
  %xor863.i = xor i32 %xor856.i, %349, !dbg !262
  %350 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !262
  %data864.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %350, i32 0, i32 0, !dbg !262
  %arrayidx865.i = getelementptr inbounds [32 x i32], [32 x i32]* %data864.i, i64 0, i64 22, !dbg !262
  %arrayidx866.i = getelementptr inbounds i32, i32* %arrayidx865.i, i64 1, !dbg !262
  store i32 %xor863.i, i32* %arrayidx866.i, align 4, !dbg !262
  %351 = load i32, i32* %x3.i, align 4, !dbg !263
  store i32 %351, i32* %t0.i, align 4, !dbg !263
  %352 = load i32, i32* %x3.i, align 4, !dbg !263
  %shl867.i = shl i32 %352, 8, !dbg !263
  %353 = load i32, i32* %x4.i, align 4, !dbg !263
  %shr868.i = lshr i32 %353, 24, !dbg !263
  %xor869.i = xor i32 %shl867.i, %shr868.i, !dbg !263
  store i32 %xor869.i, i32* %x3.i, align 4, !dbg !263
  %354 = load i32, i32* %x4.i, align 4, !dbg !263
  %shl870.i = shl i32 %354, 8, !dbg !263
  %355 = load i32, i32* %t0.i, align 4, !dbg !263
  %shr871.i = lshr i32 %355, 24, !dbg !263
  %xor872.i = xor i32 %shl870.i, %shr871.i, !dbg !263
  store i32 %xor872.i, i32* %x4.i, align 4, !dbg !263
  %356 = load i32, i32* %x1.i, align 4, !dbg !263
  %357 = load i32, i32* %x3.i, align 4, !dbg !263
  %add873.i = add i32 %356, %357, !dbg !263
  %sub874.i = sub i32 %add873.i, 2006686179, !dbg !263
  store i32 %sub874.i, i32* %t0.i, align 4, !dbg !263
  %358 = load i32, i32* %x2.i, align 4, !dbg !263
  %add875.i = add i32 %358, 2006686179, !dbg !263
  %359 = load i32, i32* %x4.i, align 4, !dbg !263
  %sub876.i = sub i32 %add875.i, %359, !dbg !263
  store i32 %sub876.i, i32* %t1.i, align 4, !dbg !263
  %360 = load i32, i32* %t0.i, align 4, !dbg !264
  %conv877.i = trunc i32 %360 to i8, !dbg !264
  %conv878.i = zext i8 %conv877.i to i32, !dbg !264
  %and879.i = and i32 %conv878.i, 255, !dbg !264
  %idxprom880.i = sext i32 %and879.i to i64, !dbg !264
  %arrayidx881.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom880.i, !dbg !264
  %361 = load i32, i32* %arrayidx881.i, align 4, !dbg !264
  %362 = load i32, i32* %t0.i, align 4, !dbg !264
  %shr882.i = lshr i32 %362, 8, !dbg !264
  %conv883.i = trunc i32 %shr882.i to i8, !dbg !264
  %conv884.i = zext i8 %conv883.i to i32, !dbg !264
  %and885.i = and i32 %conv884.i, 255, !dbg !264
  %idxprom886.i = sext i32 %and885.i to i64, !dbg !264
  %arrayidx887.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom886.i, !dbg !264
  %363 = load i32, i32* %arrayidx887.i, align 4, !dbg !264
  %xor888.i = xor i32 %361, %363, !dbg !264
  %364 = load i32, i32* %t0.i, align 4, !dbg !264
  %shr889.i = lshr i32 %364, 16, !dbg !264
  %conv890.i = trunc i32 %shr889.i to i8, !dbg !264
  %conv891.i = zext i8 %conv890.i to i32, !dbg !264
  %and892.i = and i32 %conv891.i, 255, !dbg !264
  %idxprom893.i = sext i32 %and892.i to i64, !dbg !264
  %arrayidx894.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom893.i, !dbg !264
  %365 = load i32, i32* %arrayidx894.i, align 4, !dbg !264
  %xor895.i = xor i32 %xor888.i, %365, !dbg !264
  %366 = load i32, i32* %t0.i, align 4, !dbg !264
  %shr896.i = lshr i32 %366, 24, !dbg !264
  %conv897.i = trunc i32 %shr896.i to i8, !dbg !264
  %conv898.i = zext i8 %conv897.i to i32, !dbg !264
  %and899.i = and i32 %conv898.i, 255, !dbg !264
  %idxprom900.i = sext i32 %and899.i to i64, !dbg !264
  %arrayidx901.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom900.i, !dbg !264
  %367 = load i32, i32* %arrayidx901.i, align 4, !dbg !264
  %xor902.i = xor i32 %xor895.i, %367, !dbg !264
  %368 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !264
  %data903.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %368, i32 0, i32 0, !dbg !264
  %arrayidx904.i = getelementptr inbounds [32 x i32], [32 x i32]* %data903.i, i64 0, i64 24, !dbg !264
  store i32 %xor902.i, i32* %arrayidx904.i, align 4, !dbg !264
  %369 = load i32, i32* %t1.i, align 4, !dbg !264
  %conv906.i = trunc i32 %369 to i8, !dbg !264
  %conv907.i = zext i8 %conv906.i to i32, !dbg !264
  %and908.i = and i32 %conv907.i, 255, !dbg !264
  %idxprom909.i = sext i32 %and908.i to i64, !dbg !264
  %arrayidx910.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom909.i, !dbg !264
  %370 = load i32, i32* %arrayidx910.i, align 4, !dbg !264
  %371 = load i32, i32* %t1.i, align 4, !dbg !264
  %shr911.i = lshr i32 %371, 8, !dbg !264
  %conv912.i = trunc i32 %shr911.i to i8, !dbg !264
  %conv913.i = zext i8 %conv912.i to i32, !dbg !264
  %and914.i = and i32 %conv913.i, 255, !dbg !264
  %idxprom915.i = sext i32 %and914.i to i64, !dbg !264
  %arrayidx916.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom915.i, !dbg !264
  %372 = load i32, i32* %arrayidx916.i, align 4, !dbg !264
  %xor917.i = xor i32 %370, %372, !dbg !264
  %373 = load i32, i32* %t1.i, align 4, !dbg !264
  %shr918.i = lshr i32 %373, 16, !dbg !264
  %conv919.i = trunc i32 %shr918.i to i8, !dbg !264
  %conv920.i = zext i8 %conv919.i to i32, !dbg !264
  %and921.i = and i32 %conv920.i, 255, !dbg !264
  %idxprom922.i = sext i32 %and921.i to i64, !dbg !264
  %arrayidx923.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom922.i, !dbg !264
  %374 = load i32, i32* %arrayidx923.i, align 4, !dbg !264
  %xor924.i = xor i32 %xor917.i, %374, !dbg !264
  %375 = load i32, i32* %t1.i, align 4, !dbg !264
  %shr925.i = lshr i32 %375, 24, !dbg !264
  %conv926.i = trunc i32 %shr925.i to i8, !dbg !264
  %conv927.i = zext i8 %conv926.i to i32, !dbg !264
  %and928.i = and i32 %conv927.i, 255, !dbg !264
  %idxprom929.i = sext i32 %and928.i to i64, !dbg !264
  %arrayidx930.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom929.i, !dbg !264
  %376 = load i32, i32* %arrayidx930.i, align 4, !dbg !264
  %xor931.i = xor i32 %xor924.i, %376, !dbg !264
  %377 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !264
  %data932.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %377, i32 0, i32 0, !dbg !264
  %arrayidx933.i = getelementptr inbounds [32 x i32], [32 x i32]* %data932.i, i64 0, i64 24, !dbg !264
  %arrayidx934.i = getelementptr inbounds i32, i32* %arrayidx933.i, i64 1, !dbg !264
  store i32 %xor931.i, i32* %arrayidx934.i, align 4, !dbg !264
  %378 = load i32, i32* %x1.i, align 4, !dbg !265
  store i32 %378, i32* %t0.i, align 4, !dbg !265
  %379 = load i32, i32* %x1.i, align 4, !dbg !265
  %shr935.i = lshr i32 %379, 8, !dbg !265
  %380 = load i32, i32* %x2.i, align 4, !dbg !265
  %shl936.i = shl i32 %380, 24, !dbg !265
  %xor937.i = xor i32 %shr935.i, %shl936.i, !dbg !265
  store i32 %xor937.i, i32* %x1.i, align 4, !dbg !265
  %381 = load i32, i32* %x2.i, align 4, !dbg !265
  %shr938.i = lshr i32 %381, 8, !dbg !265
  %382 = load i32, i32* %t0.i, align 4, !dbg !265
  %shl939.i = shl i32 %382, 24, !dbg !265
  %xor940.i = xor i32 %shr938.i, %shl939.i, !dbg !265
  store i32 %xor940.i, i32* %x2.i, align 4, !dbg !265
  %383 = load i32, i32* %x1.i, align 4, !dbg !265
  %384 = load i32, i32* %x3.i, align 4, !dbg !265
  %add941.i = add i32 %383, %384, !dbg !265
  %sub942.i = sub i32 %add941.i, -281594938, !dbg !265
  store i32 %sub942.i, i32* %t0.i, align 4, !dbg !265
  %385 = load i32, i32* %x2.i, align 4, !dbg !265
  %add943.i = add i32 %385, -281594938, !dbg !265
  %386 = load i32, i32* %x4.i, align 4, !dbg !265
  %sub944.i = sub i32 %add943.i, %386, !dbg !265
  store i32 %sub944.i, i32* %t1.i, align 4, !dbg !265
  %387 = load i32, i32* %t0.i, align 4, !dbg !266
  %conv945.i = trunc i32 %387 to i8, !dbg !266
  %conv946.i = zext i8 %conv945.i to i32, !dbg !266
  %and947.i = and i32 %conv946.i, 255, !dbg !266
  %idxprom948.i = sext i32 %and947.i to i64, !dbg !266
  %arrayidx949.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom948.i, !dbg !266
  %388 = load i32, i32* %arrayidx949.i, align 4, !dbg !266
  %389 = load i32, i32* %t0.i, align 4, !dbg !266
  %shr950.i = lshr i32 %389, 8, !dbg !266
  %conv951.i = trunc i32 %shr950.i to i8, !dbg !266
  %conv952.i = zext i8 %conv951.i to i32, !dbg !266
  %and953.i = and i32 %conv952.i, 255, !dbg !266
  %idxprom954.i = sext i32 %and953.i to i64, !dbg !266
  %arrayidx955.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom954.i, !dbg !266
  %390 = load i32, i32* %arrayidx955.i, align 4, !dbg !266
  %xor956.i = xor i32 %388, %390, !dbg !266
  %391 = load i32, i32* %t0.i, align 4, !dbg !266
  %shr957.i = lshr i32 %391, 16, !dbg !266
  %conv958.i = trunc i32 %shr957.i to i8, !dbg !266
  %conv959.i = zext i8 %conv958.i to i32, !dbg !266
  %and960.i = and i32 %conv959.i, 255, !dbg !266
  %idxprom961.i = sext i32 %and960.i to i64, !dbg !266
  %arrayidx962.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom961.i, !dbg !266
  %392 = load i32, i32* %arrayidx962.i, align 4, !dbg !266
  %xor963.i = xor i32 %xor956.i, %392, !dbg !266
  %393 = load i32, i32* %t0.i, align 4, !dbg !266
  %shr964.i = lshr i32 %393, 24, !dbg !266
  %conv965.i = trunc i32 %shr964.i to i8, !dbg !266
  %conv966.i = zext i8 %conv965.i to i32, !dbg !266
  %and967.i = and i32 %conv966.i, 255, !dbg !266
  %idxprom968.i = sext i32 %and967.i to i64, !dbg !266
  %arrayidx969.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom968.i, !dbg !266
  %394 = load i32, i32* %arrayidx969.i, align 4, !dbg !266
  %xor970.i = xor i32 %xor963.i, %394, !dbg !266
  %395 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !266
  %data971.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %395, i32 0, i32 0, !dbg !266
  %arrayidx972.i = getelementptr inbounds [32 x i32], [32 x i32]* %data971.i, i64 0, i64 26, !dbg !266
  store i32 %xor970.i, i32* %arrayidx972.i, align 4, !dbg !266
  %396 = load i32, i32* %t1.i, align 4, !dbg !266
  %conv974.i = trunc i32 %396 to i8, !dbg !266
  %conv975.i = zext i8 %conv974.i to i32, !dbg !266
  %and976.i = and i32 %conv975.i, 255, !dbg !266
  %idxprom977.i = sext i32 %and976.i to i64, !dbg !266
  %arrayidx978.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom977.i, !dbg !266
  %397 = load i32, i32* %arrayidx978.i, align 4, !dbg !266
  %398 = load i32, i32* %t1.i, align 4, !dbg !266
  %shr979.i = lshr i32 %398, 8, !dbg !266
  %conv980.i = trunc i32 %shr979.i to i8, !dbg !266
  %conv981.i = zext i8 %conv980.i to i32, !dbg !266
  %and982.i = and i32 %conv981.i, 255, !dbg !266
  %idxprom983.i = sext i32 %and982.i to i64, !dbg !266
  %arrayidx984.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom983.i, !dbg !266
  %399 = load i32, i32* %arrayidx984.i, align 4, !dbg !266
  %xor985.i = xor i32 %397, %399, !dbg !266
  %400 = load i32, i32* %t1.i, align 4, !dbg !266
  %shr986.i = lshr i32 %400, 16, !dbg !266
  %conv987.i = trunc i32 %shr986.i to i8, !dbg !266
  %conv988.i = zext i8 %conv987.i to i32, !dbg !266
  %and989.i = and i32 %conv988.i, 255, !dbg !266
  %idxprom990.i = sext i32 %and989.i to i64, !dbg !266
  %arrayidx991.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom990.i, !dbg !266
  %401 = load i32, i32* %arrayidx991.i, align 4, !dbg !266
  %xor992.i = xor i32 %xor985.i, %401, !dbg !266
  %402 = load i32, i32* %t1.i, align 4, !dbg !266
  %shr993.i = lshr i32 %402, 24, !dbg !266
  %conv994.i = trunc i32 %shr993.i to i8, !dbg !266
  %conv995.i = zext i8 %conv994.i to i32, !dbg !266
  %and996.i = and i32 %conv995.i, 255, !dbg !266
  %idxprom997.i = sext i32 %and996.i to i64, !dbg !266
  %arrayidx998.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom997.i, !dbg !266
  %403 = load i32, i32* %arrayidx998.i, align 4, !dbg !266
  %xor999.i = xor i32 %xor992.i, %403, !dbg !266
  %404 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !266
  %data1000.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %404, i32 0, i32 0, !dbg !266
  %arrayidx1001.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1000.i, i64 0, i64 26, !dbg !266
  %arrayidx1002.i = getelementptr inbounds i32, i32* %arrayidx1001.i, i64 1, !dbg !266
  store i32 %xor999.i, i32* %arrayidx1002.i, align 4, !dbg !266
  %405 = load i32, i32* %x3.i, align 4, !dbg !267
  store i32 %405, i32* %t0.i, align 4, !dbg !267
  %406 = load i32, i32* %x3.i, align 4, !dbg !267
  %shl1003.i = shl i32 %406, 8, !dbg !267
  %407 = load i32, i32* %x4.i, align 4, !dbg !267
  %shr1004.i = lshr i32 %407, 24, !dbg !267
  %xor1005.i = xor i32 %shl1003.i, %shr1004.i, !dbg !267
  store i32 %xor1005.i, i32* %x3.i, align 4, !dbg !267
  %408 = load i32, i32* %x4.i, align 4, !dbg !267
  %shl1006.i = shl i32 %408, 8, !dbg !267
  %409 = load i32, i32* %t0.i, align 4, !dbg !267
  %shr1007.i = lshr i32 %409, 24, !dbg !267
  %xor1008.i = xor i32 %shl1006.i, %shr1007.i, !dbg !267
  store i32 %xor1008.i, i32* %x4.i, align 4, !dbg !267
  %410 = load i32, i32* %x1.i, align 4, !dbg !267
  %411 = load i32, i32* %x3.i, align 4, !dbg !267
  %add1009.i = add i32 %410, %411, !dbg !267
  %sub1010.i = sub i32 %add1009.i, -563189875, !dbg !267
  store i32 %sub1010.i, i32* %t0.i, align 4, !dbg !267
  %412 = load i32, i32* %x2.i, align 4, !dbg !267
  %add1011.i = add i32 %412, -563189875, !dbg !267
  %413 = load i32, i32* %x4.i, align 4, !dbg !267
  %sub1012.i = sub i32 %add1011.i, %413, !dbg !267
  store i32 %sub1012.i, i32* %t1.i, align 4, !dbg !267
  %414 = load i32, i32* %t0.i, align 4, !dbg !268
  %conv1013.i = trunc i32 %414 to i8, !dbg !268
  %conv1014.i = zext i8 %conv1013.i to i32, !dbg !268
  %and1015.i = and i32 %conv1014.i, 255, !dbg !268
  %idxprom1016.i = sext i32 %and1015.i to i64, !dbg !268
  %arrayidx1017.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1016.i, !dbg !268
  %415 = load i32, i32* %arrayidx1017.i, align 4, !dbg !268
  %416 = load i32, i32* %t0.i, align 4, !dbg !268
  %shr1018.i = lshr i32 %416, 8, !dbg !268
  %conv1019.i = trunc i32 %shr1018.i to i8, !dbg !268
  %conv1020.i = zext i8 %conv1019.i to i32, !dbg !268
  %and1021.i = and i32 %conv1020.i, 255, !dbg !268
  %idxprom1022.i = sext i32 %and1021.i to i64, !dbg !268
  %arrayidx1023.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1022.i, !dbg !268
  %417 = load i32, i32* %arrayidx1023.i, align 4, !dbg !268
  %xor1024.i = xor i32 %415, %417, !dbg !268
  %418 = load i32, i32* %t0.i, align 4, !dbg !268
  %shr1025.i = lshr i32 %418, 16, !dbg !268
  %conv1026.i = trunc i32 %shr1025.i to i8, !dbg !268
  %conv1027.i = zext i8 %conv1026.i to i32, !dbg !268
  %and1028.i = and i32 %conv1027.i, 255, !dbg !268
  %idxprom1029.i = sext i32 %and1028.i to i64, !dbg !268
  %arrayidx1030.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1029.i, !dbg !268
  %419 = load i32, i32* %arrayidx1030.i, align 4, !dbg !268
  %xor1031.i = xor i32 %xor1024.i, %419, !dbg !268
  %420 = load i32, i32* %t0.i, align 4, !dbg !268
  %shr1032.i = lshr i32 %420, 24, !dbg !268
  %conv1033.i = trunc i32 %shr1032.i to i8, !dbg !268
  %conv1034.i = zext i8 %conv1033.i to i32, !dbg !268
  %and1035.i = and i32 %conv1034.i, 255, !dbg !268
  %idxprom1036.i = sext i32 %and1035.i to i64, !dbg !268
  %arrayidx1037.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1036.i, !dbg !268
  %421 = load i32, i32* %arrayidx1037.i, align 4, !dbg !268
  %xor1038.i = xor i32 %xor1031.i, %421, !dbg !268
  %422 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !268
  %data1039.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %422, i32 0, i32 0, !dbg !268
  %arrayidx1040.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1039.i, i64 0, i64 28, !dbg !268
  store i32 %xor1038.i, i32* %arrayidx1040.i, align 4, !dbg !268
  %423 = load i32, i32* %t1.i, align 4, !dbg !268
  %conv1042.i = trunc i32 %423 to i8, !dbg !268
  %conv1043.i = zext i8 %conv1042.i to i32, !dbg !268
  %and1044.i = and i32 %conv1043.i, 255, !dbg !268
  %idxprom1045.i = sext i32 %and1044.i to i64, !dbg !268
  %arrayidx1046.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1045.i, !dbg !268
  %424 = load i32, i32* %arrayidx1046.i, align 4, !dbg !268
  %425 = load i32, i32* %t1.i, align 4, !dbg !268
  %shr1047.i = lshr i32 %425, 8, !dbg !268
  %conv1048.i = trunc i32 %shr1047.i to i8, !dbg !268
  %conv1049.i = zext i8 %conv1048.i to i32, !dbg !268
  %and1050.i = and i32 %conv1049.i, 255, !dbg !268
  %idxprom1051.i = sext i32 %and1050.i to i64, !dbg !268
  %arrayidx1052.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1051.i, !dbg !268
  %426 = load i32, i32* %arrayidx1052.i, align 4, !dbg !268
  %xor1053.i = xor i32 %424, %426, !dbg !268
  %427 = load i32, i32* %t1.i, align 4, !dbg !268
  %shr1054.i = lshr i32 %427, 16, !dbg !268
  %conv1055.i = trunc i32 %shr1054.i to i8, !dbg !268
  %conv1056.i = zext i8 %conv1055.i to i32, !dbg !268
  %and1057.i = and i32 %conv1056.i, 255, !dbg !268
  %idxprom1058.i = sext i32 %and1057.i to i64, !dbg !268
  %arrayidx1059.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1058.i, !dbg !268
  %428 = load i32, i32* %arrayidx1059.i, align 4, !dbg !268
  %xor1060.i = xor i32 %xor1053.i, %428, !dbg !268
  %429 = load i32, i32* %t1.i, align 4, !dbg !268
  %shr1061.i = lshr i32 %429, 24, !dbg !268
  %conv1062.i = trunc i32 %shr1061.i to i8, !dbg !268
  %conv1063.i = zext i8 %conv1062.i to i32, !dbg !268
  %and1064.i = and i32 %conv1063.i, 255, !dbg !268
  %idxprom1065.i = sext i32 %and1064.i to i64, !dbg !268
  %arrayidx1066.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1065.i, !dbg !268
  %430 = load i32, i32* %arrayidx1066.i, align 4, !dbg !268
  %xor1067.i = xor i32 %xor1060.i, %430, !dbg !268
  %431 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !268
  %data1068.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %431, i32 0, i32 0, !dbg !268
  %arrayidx1069.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1068.i, i64 0, i64 28, !dbg !268
  %arrayidx1070.i = getelementptr inbounds i32, i32* %arrayidx1069.i, i64 1, !dbg !268
  store i32 %xor1067.i, i32* %arrayidx1070.i, align 4, !dbg !268
  %432 = load i32, i32* %x1.i, align 4, !dbg !269
  store i32 %432, i32* %t0.i, align 4, !dbg !269
  %433 = load i32, i32* %x1.i, align 4, !dbg !269
  %shr1071.i = lshr i32 %433, 8, !dbg !269
  %434 = load i32, i32* %x2.i, align 4, !dbg !269
  %shl1072.i = shl i32 %434, 24, !dbg !269
  %xor1073.i = xor i32 %shr1071.i, %shl1072.i, !dbg !269
  store i32 %xor1073.i, i32* %x1.i, align 4, !dbg !269
  %435 = load i32, i32* %x2.i, align 4, !dbg !269
  %shr1074.i = lshr i32 %435, 8, !dbg !269
  %436 = load i32, i32* %t0.i, align 4, !dbg !269
  %shl1075.i = shl i32 %436, 24, !dbg !269
  %xor1076.i = xor i32 %shr1074.i, %shl1075.i, !dbg !269
  store i32 %xor1076.i, i32* %x2.i, align 4, !dbg !269
  %437 = load i32, i32* %x1.i, align 4, !dbg !269
  %438 = load i32, i32* %x3.i, align 4, !dbg !269
  %add1077.i = add i32 %437, %438, !dbg !269
  %sub1078.i = sub i32 %add1077.i, -1126379749, !dbg !269
  store i32 %sub1078.i, i32* %t0.i, align 4, !dbg !269
  %439 = load i32, i32* %x2.i, align 4, !dbg !269
  %add1079.i = add i32 %439, -1126379749, !dbg !269
  %440 = load i32, i32* %x4.i, align 4, !dbg !269
  %sub1080.i = sub i32 %add1079.i, %440, !dbg !269
  store i32 %sub1080.i, i32* %t1.i, align 4, !dbg !269
  %441 = load i32, i32* %t0.i, align 4, !dbg !270
  %conv1081.i = trunc i32 %441 to i8, !dbg !270
  %conv1082.i = zext i8 %conv1081.i to i32, !dbg !270
  %and1083.i = and i32 %conv1082.i, 255, !dbg !270
  %idxprom1084.i = sext i32 %and1083.i to i64, !dbg !270
  %arrayidx1085.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1084.i, !dbg !270
  %442 = load i32, i32* %arrayidx1085.i, align 4, !dbg !270
  %443 = load i32, i32* %t0.i, align 4, !dbg !270
  %shr1086.i = lshr i32 %443, 8, !dbg !270
  %conv1087.i = trunc i32 %shr1086.i to i8, !dbg !270
  %conv1088.i = zext i8 %conv1087.i to i32, !dbg !270
  %and1089.i = and i32 %conv1088.i, 255, !dbg !270
  %idxprom1090.i = sext i32 %and1089.i to i64, !dbg !270
  %arrayidx1091.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1090.i, !dbg !270
  %444 = load i32, i32* %arrayidx1091.i, align 4, !dbg !270
  %xor1092.i = xor i32 %442, %444, !dbg !270
  %445 = load i32, i32* %t0.i, align 4, !dbg !270
  %shr1093.i = lshr i32 %445, 16, !dbg !270
  %conv1094.i = trunc i32 %shr1093.i to i8, !dbg !270
  %conv1095.i = zext i8 %conv1094.i to i32, !dbg !270
  %and1096.i = and i32 %conv1095.i, 255, !dbg !270
  %idxprom1097.i = sext i32 %and1096.i to i64, !dbg !270
  %arrayidx1098.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1097.i, !dbg !270
  %446 = load i32, i32* %arrayidx1098.i, align 4, !dbg !270
  %xor1099.i = xor i32 %xor1092.i, %446, !dbg !270
  %447 = load i32, i32* %t0.i, align 4, !dbg !270
  %shr1100.i = lshr i32 %447, 24, !dbg !270
  %conv1101.i = trunc i32 %shr1100.i to i8, !dbg !270
  %conv1102.i = zext i8 %conv1101.i to i32, !dbg !270
  %and1103.i = and i32 %conv1102.i, 255, !dbg !270
  %idxprom1104.i = sext i32 %and1103.i to i64, !dbg !270
  %arrayidx1105.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1104.i, !dbg !270
  %448 = load i32, i32* %arrayidx1105.i, align 4, !dbg !270
  %xor1106.i = xor i32 %xor1099.i, %448, !dbg !270
  %449 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !270
  %data1107.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %449, i32 0, i32 0, !dbg !270
  %arrayidx1108.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1107.i, i64 0, i64 30, !dbg !270
  store i32 %xor1106.i, i32* %arrayidx1108.i, align 4, !dbg !270
  %450 = load i32, i32* %t1.i, align 4, !dbg !270
  %conv1110.i = trunc i32 %450 to i8, !dbg !270
  %conv1111.i = zext i8 %conv1110.i to i32, !dbg !270
  %and1112.i = and i32 %conv1111.i, 255, !dbg !270
  %idxprom1113.i = sext i32 %and1112.i to i64, !dbg !270
  %arrayidx1114.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1113.i, !dbg !270
  %451 = load i32, i32* %arrayidx1114.i, align 4, !dbg !270
  %452 = load i32, i32* %t1.i, align 4, !dbg !270
  %shr1115.i = lshr i32 %452, 8, !dbg !270
  %conv1116.i = trunc i32 %shr1115.i to i8, !dbg !270
  %conv1117.i = zext i8 %conv1116.i to i32, !dbg !270
  %and1118.i = and i32 %conv1117.i, 255, !dbg !270
  %idxprom1119.i = sext i32 %and1118.i to i64, !dbg !270
  %arrayidx1120.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1119.i, !dbg !270
  %453 = load i32, i32* %arrayidx1120.i, align 4, !dbg !270
  %xor1121.i = xor i32 %451, %453, !dbg !270
  %454 = load i32, i32* %t1.i, align 4, !dbg !270
  %shr1122.i = lshr i32 %454, 16, !dbg !270
  %conv1123.i = trunc i32 %shr1122.i to i8, !dbg !270
  %conv1124.i = zext i8 %conv1123.i to i32, !dbg !270
  %and1125.i = and i32 %conv1124.i, 255, !dbg !270
  %idxprom1126.i = sext i32 %and1125.i to i64, !dbg !270
  %arrayidx1127.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1126.i, !dbg !270
  %455 = load i32, i32* %arrayidx1127.i, align 4, !dbg !270
  %xor1128.i = xor i32 %xor1121.i, %455, !dbg !270
  %456 = load i32, i32* %t1.i, align 4, !dbg !270
  %shr1129.i = lshr i32 %456, 24, !dbg !270
  %conv1130.i = trunc i32 %shr1129.i to i8, !dbg !270
  %conv1131.i = zext i8 %conv1130.i to i32, !dbg !270
  %and1132.i = and i32 %conv1131.i, 255, !dbg !270
  %idxprom1133.i = sext i32 %and1132.i to i64, !dbg !270
  %arrayidx1134.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1133.i, !dbg !270
  %457 = load i32, i32* %arrayidx1134.i, align 4, !dbg !270
  %xor1135.i = xor i32 %xor1128.i, %457, !dbg !270
  %458 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i, align 8, !dbg !270
  %data1136.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %458, i32 0, i32 0, !dbg !270
  %arrayidx1137.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1136.i, i64 0, i64 30, !dbg !270
  %arrayidx1138.i = getelementptr inbounds i32, i32* %arrayidx1137.i, i64 1, !dbg !270
  store i32 %xor1135.i, i32* %arrayidx1138.i, align 4, !dbg !270
  call void @llvm.dbg.declare(metadata [94 x i8]* %charset, metadata !271, metadata !DIExpression()), !dbg !277
  %459 = bitcast [94 x i8]* %charset to i8*, !dbg !277
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %459, i8* align 16 getelementptr inbounds ([94 x i8], [94 x i8]* @__const.main.charset, i32 0, i32 0), i64 94, i1 false), !dbg !277
  call void @llvm.dbg.declare(metadata i64* %length, metadata !278, metadata !DIExpression()), !dbg !282
  store i64 94, i64* %length, align 8, !dbg !282
  call void @llvm.dbg.declare(metadata i32* %size, metadata !283, metadata !DIExpression()), !dbg !284
  store i32 16, i32* %size, align 4, !dbg !284
  call void @llvm.dbg.declare(metadata i64* %round, metadata !285, metadata !DIExpression()), !dbg !286
  store i64 10, i64* %round, align 8, !dbg !286
  call void @llvm.dbg.declare(metadata i32* %i, metadata !287, metadata !DIExpression()), !dbg !288
  call void @llvm.dbg.declare(metadata i8** %buff, metadata !289, metadata !DIExpression()), !dbg !291
  %call = call noalias i8* @malloc(i64 2688) #6, !dbg !292
  store i8* %call, i8** %buff, align 8, !dbg !291
  store i32 0, i32* %i, align 4, !dbg !293
  br label %for.cond, !dbg !295

for.cond:                                         ; preds = %for.inc, %entry
  %460 = load i32, i32* %i, align 4, !dbg !296
  %cmp = icmp slt i32 %460, 2688, !dbg !298
  br i1 %cmp, label %for.body, label %for.end, !dbg !299

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %key, metadata !300, metadata !DIExpression()), !dbg !302
  %call1 = call i32 @rand() #6, !dbg !303
  %conv = sext i32 %call1 to i64, !dbg !303
  %461 = load i64, i64* %length, align 8, !dbg !304
  %rem = urem i64 %conv, %461, !dbg !305
  %conv2 = trunc i64 %rem to i32, !dbg !303
  store i32 %conv2, i32* %key, align 4, !dbg !302
  %462 = load i32, i32* %key, align 4, !dbg !306
  %idxprom = sext i32 %462 to i64, !dbg !307
  %arrayidx = getelementptr inbounds [94 x i8], [94 x i8]* %charset, i64 0, i64 %idxprom, !dbg !307
  %463 = load i8, i8* %arrayidx, align 1, !dbg !307
  %464 = load i8*, i8** %buff, align 8, !dbg !308
  %465 = load i32, i32* %i, align 4, !dbg !309
  %idxprom3 = sext i32 %465 to i64, !dbg !308
  %arrayidx4 = getelementptr inbounds i8, i8* %464, i64 %idxprom3, !dbg !308
  store i8 %463, i8* %arrayidx4, align 1, !dbg !310
  br label %for.inc, !dbg !311

for.inc:                                          ; preds = %for.body
  %466 = load i32, i32* %i, align 4, !dbg !312
  %add = add nsw i32 %466, 64, !dbg !312
  store i32 %add, i32* %i, align 4, !dbg !312
  br label %for.cond, !dbg !313, !llvm.loop !314

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %input, metadata !316, metadata !DIExpression()), !dbg !317
  %467 = load i32, i32* %size, align 4, !dbg !318
  %conv5 = sext i32 %467 to i64, !dbg !318
  %mul = mul i64 1, %conv5, !dbg !319
  %468 = load i64, i64* %round, align 8, !dbg !320
  %mul6 = mul i64 %mul, %468, !dbg !321
  %call7 = call noalias i8* @malloc(i64 %mul6) #6, !dbg !322
  store i8* %call7, i8** %input, align 8, !dbg !317
  call void @llvm.dbg.declare(metadata i64* %n, metadata !323, metadata !DIExpression()), !dbg !325
  store i64 0, i64* %n, align 8, !dbg !325
  br label %for.cond8, !dbg !326

for.cond8:                                        ; preds = %for.inc19, %for.end
  %469 = load i64, i64* %n, align 8, !dbg !327
  %470 = load i64, i64* %length, align 8, !dbg !329
  %471 = load i64, i64* %round, align 8, !dbg !330
  %mul9 = mul i64 %470, %471, !dbg !331
  %cmp10 = icmp ult i64 %469, %mul9, !dbg !332
  br i1 %cmp10, label %for.body12, label %for.end20, !dbg !333

for.body12:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata i32* %key13, metadata !334, metadata !DIExpression()), !dbg !336
  %call14 = call i32 @rand() #6, !dbg !337
  %rem15 = srem i32 %call14, 94, !dbg !338
  store i32 %rem15, i32* %key13, align 4, !dbg !336
  %472 = load i32, i32* %key13, align 4, !dbg !339
  %idxprom16 = sext i32 %472 to i64, !dbg !340
  %arrayidx17 = getelementptr inbounds [94 x i8], [94 x i8]* %charset, i64 0, i64 %idxprom16, !dbg !340
  %473 = load i8, i8* %arrayidx17, align 1, !dbg !340
  %474 = load i8*, i8** %input, align 8, !dbg !341
  %475 = load i64, i64* %n, align 8, !dbg !342
  %arrayidx18 = getelementptr inbounds i8, i8* %474, i64 %475, !dbg !341
  store i8 %473, i8* %arrayidx18, align 1, !dbg !343
  br label %for.inc19, !dbg !344

for.inc19:                                        ; preds = %for.body12
  %476 = load i64, i64* %n, align 8, !dbg !345
  %inc = add i64 %476, 1, !dbg !345
  store i64 %inc, i64* %n, align 8, !dbg !345
  br label %for.cond8, !dbg !346, !llvm.loop !347

for.end20:                                        ; preds = %for.cond8
  br label %while.cond, !dbg !349

while.cond:                                       ; preds = %while.body, %for.end20
  %477 = load i64, i64* %round, align 8, !dbg !350
  %tobool = icmp ne i64 %477, 0, !dbg !349
  br i1 %tobool, label %while.body, label %while.end, !dbg !349

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %in, metadata !351, metadata !DIExpression()), !dbg !352
  %478 = load i32, i32* %size, align 4, !dbg !353
  %conv21 = sext i32 %478 to i64, !dbg !353
  %call22 = call noalias i8* @malloc(i64 %conv21) #6, !dbg !354
  store i8* %call22, i8** %in, align 8, !dbg !352
  %479 = load i8*, i8** %in, align 8, !dbg !355
  %480 = load i8*, i8** %input, align 8, !dbg !356
  %481 = load i64, i64* %round, align 8, !dbg !357
  %sub = sub i64 %481, 1, !dbg !358
  %482 = load i32, i32* %size, align 4, !dbg !359
  %conv23 = sext i32 %482 to i64, !dbg !359
  %mul24 = mul i64 %sub, %conv23, !dbg !360
  %add.ptr = getelementptr inbounds i8, i8* %480, i64 %mul24, !dbg !361
  %483 = load i32, i32* %size, align 4, !dbg !362
  %conv25 = sext i32 %483 to i64, !dbg !362
  %call26 = call i8* @strncpy(i8* %479, i8* %add.ptr, i64 %conv25) #6, !dbg !363
  %484 = load i8*, i8** %in, align 8, !dbg !364
  %arraydecay27 = getelementptr inbounds [12 x i8], [12 x i8]* %d, i64 0, i64 0, !dbg !365
  %arraydecay28 = getelementptr inbounds [32 x %struct.seed_key_st], [32 x %struct.seed_key_st]* %ks, i64 0, i64 0, !dbg !366
  store i8* %484, i8** %s.addr.i, align 8
  store i8* %arraydecay27, i8** %d.addr.i, align 8
  store %struct.seed_key_st* %arraydecay28, %struct.seed_key_st** %ks.addr.i29, align 8
  %ks.addr1.i = bitcast %struct.seed_key_st** %ks.addr.i29 to i8*
  call void @llvm.var.annotation(i8* %ks.addr1.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 501) #6
  %x12.i = bitcast i32* %x1.i30 to i8*, !dbg !367
  call void @llvm.var.annotation(i8* %x12.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 503) #6, !dbg !367
  %x23.i = bitcast i32* %x2.i31 to i8*, !dbg !367
  call void @llvm.var.annotation(i8* %x23.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 503) #6, !dbg !367
  %x34.i = bitcast i32* %x3.i32 to i8*, !dbg !367
  call void @llvm.var.annotation(i8* %x34.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 503) #6, !dbg !367
  %x45.i = bitcast i32* %x4.i33 to i8*, !dbg !367
  call void @llvm.var.annotation(i8* %x45.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 503) #6, !dbg !367
  %485 = load i8*, i8** %s.addr.i, align 8, !dbg !368
  %486 = load i8, i8* %485, align 1, !dbg !368
  %conv.i36 = zext i8 %486 to i32, !dbg !368
  %shl.i37 = shl i32 %conv.i36, 24, !dbg !368
  %487 = load i8*, i8** %s.addr.i, align 8, !dbg !368
  %arrayidx6.i = getelementptr inbounds i8, i8* %487, i64 1, !dbg !368
  %488 = load i8, i8* %arrayidx6.i, align 1, !dbg !368
  %conv7.i = zext i8 %488 to i32, !dbg !368
  %shl8.i = shl i32 %conv7.i, 16, !dbg !368
  %or.i38 = or i32 %shl.i37, %shl8.i, !dbg !368
  %489 = load i8*, i8** %s.addr.i, align 8, !dbg !368
  %arrayidx9.i = getelementptr inbounds i8, i8* %489, i64 2, !dbg !368
  %490 = load i8, i8* %arrayidx9.i, align 1, !dbg !368
  %conv10.i = zext i8 %490 to i32, !dbg !368
  %shl11.i = shl i32 %conv10.i, 8, !dbg !368
  %or12.i = or i32 %or.i38, %shl11.i, !dbg !368
  %491 = load i8*, i8** %s.addr.i, align 8, !dbg !368
  %arrayidx13.i = getelementptr inbounds i8, i8* %491, i64 3, !dbg !368
  %492 = load i8, i8* %arrayidx13.i, align 1, !dbg !368
  %conv14.i = zext i8 %492 to i32, !dbg !368
  %or15.i = or i32 %or12.i, %conv14.i, !dbg !368
  store i32 %or15.i, i32* %x1.i30, align 4, !dbg !368
  %493 = load i8*, i8** %s.addr.i, align 8, !dbg !369
  %add.ptr.i39 = getelementptr inbounds i8, i8* %493, i64 4, !dbg !369
  %494 = load i8, i8* %add.ptr.i39, align 1, !dbg !369
  %conv17.i = zext i8 %494 to i32, !dbg !369
  %shl18.i = shl i32 %conv17.i, 24, !dbg !369
  %495 = load i8*, i8** %s.addr.i, align 8, !dbg !369
  %add.ptr19.i40 = getelementptr inbounds i8, i8* %495, i64 4, !dbg !369
  %arrayidx20.i41 = getelementptr inbounds i8, i8* %add.ptr19.i40, i64 1, !dbg !369
  %496 = load i8, i8* %arrayidx20.i41, align 1, !dbg !369
  %conv21.i42 = zext i8 %496 to i32, !dbg !369
  %shl22.i43 = shl i32 %conv21.i42, 16, !dbg !369
  %or23.i44 = or i32 %shl18.i, %shl22.i43, !dbg !369
  %497 = load i8*, i8** %s.addr.i, align 8, !dbg !369
  %add.ptr24.i45 = getelementptr inbounds i8, i8* %497, i64 4, !dbg !369
  %arrayidx25.i46 = getelementptr inbounds i8, i8* %add.ptr24.i45, i64 2, !dbg !369
  %498 = load i8, i8* %arrayidx25.i46, align 1, !dbg !369
  %conv26.i47 = zext i8 %498 to i32, !dbg !369
  %shl27.i = shl i32 %conv26.i47, 8, !dbg !369
  %or28.i = or i32 %or23.i44, %shl27.i, !dbg !369
  %499 = load i8*, i8** %s.addr.i, align 8, !dbg !369
  %add.ptr29.i = getelementptr inbounds i8, i8* %499, i64 4, !dbg !369
  %arrayidx30.i = getelementptr inbounds i8, i8* %add.ptr29.i, i64 3, !dbg !369
  %500 = load i8, i8* %arrayidx30.i, align 1, !dbg !369
  %conv31.i = zext i8 %500 to i32, !dbg !369
  %or32.i = or i32 %or28.i, %conv31.i, !dbg !369
  store i32 %or32.i, i32* %x2.i31, align 4, !dbg !369
  %501 = load i8*, i8** %s.addr.i, align 8, !dbg !370
  %add.ptr33.i = getelementptr inbounds i8, i8* %501, i64 8, !dbg !370
  %502 = load i8, i8* %add.ptr33.i, align 1, !dbg !370
  %conv35.i = zext i8 %502 to i32, !dbg !370
  %shl36.i = shl i32 %conv35.i, 24, !dbg !370
  %503 = load i8*, i8** %s.addr.i, align 8, !dbg !370
  %add.ptr37.i48 = getelementptr inbounds i8, i8* %503, i64 8, !dbg !370
  %arrayidx38.i49 = getelementptr inbounds i8, i8* %add.ptr37.i48, i64 1, !dbg !370
  %504 = load i8, i8* %arrayidx38.i49, align 1, !dbg !370
  %conv39.i50 = zext i8 %504 to i32, !dbg !370
  %shl40.i51 = shl i32 %conv39.i50, 16, !dbg !370
  %or41.i52 = or i32 %shl36.i, %shl40.i51, !dbg !370
  %505 = load i8*, i8** %s.addr.i, align 8, !dbg !370
  %add.ptr42.i53 = getelementptr inbounds i8, i8* %505, i64 8, !dbg !370
  %arrayidx43.i54 = getelementptr inbounds i8, i8* %add.ptr42.i53, i64 2, !dbg !370
  %506 = load i8, i8* %arrayidx43.i54, align 1, !dbg !370
  %conv44.i55 = zext i8 %506 to i32, !dbg !370
  %shl45.i = shl i32 %conv44.i55, 8, !dbg !370
  %or46.i = or i32 %or41.i52, %shl45.i, !dbg !370
  %507 = load i8*, i8** %s.addr.i, align 8, !dbg !370
  %add.ptr47.i = getelementptr inbounds i8, i8* %507, i64 8, !dbg !370
  %arrayidx48.i = getelementptr inbounds i8, i8* %add.ptr47.i, i64 3, !dbg !370
  %508 = load i8, i8* %arrayidx48.i, align 1, !dbg !370
  %conv49.i = zext i8 %508 to i32, !dbg !370
  %or50.i = or i32 %or46.i, %conv49.i, !dbg !370
  store i32 %or50.i, i32* %x3.i32, align 4, !dbg !370
  %509 = load i8*, i8** %s.addr.i, align 8, !dbg !371
  %add.ptr51.i = getelementptr inbounds i8, i8* %509, i64 12, !dbg !371
  %510 = load i8, i8* %add.ptr51.i, align 1, !dbg !371
  %conv53.i = zext i8 %510 to i32, !dbg !371
  %shl54.i = shl i32 %conv53.i, 24, !dbg !371
  %511 = load i8*, i8** %s.addr.i, align 8, !dbg !371
  %add.ptr55.i56 = getelementptr inbounds i8, i8* %511, i64 12, !dbg !371
  %arrayidx56.i57 = getelementptr inbounds i8, i8* %add.ptr55.i56, i64 1, !dbg !371
  %512 = load i8, i8* %arrayidx56.i57, align 1, !dbg !371
  %conv57.i58 = zext i8 %512 to i32, !dbg !371
  %shl58.i59 = shl i32 %conv57.i58, 16, !dbg !371
  %or59.i60 = or i32 %shl54.i, %shl58.i59, !dbg !371
  %513 = load i8*, i8** %s.addr.i, align 8, !dbg !371
  %add.ptr60.i61 = getelementptr inbounds i8, i8* %513, i64 12, !dbg !371
  %arrayidx61.i62 = getelementptr inbounds i8, i8* %add.ptr60.i61, i64 2, !dbg !371
  %514 = load i8, i8* %arrayidx61.i62, align 1, !dbg !371
  %conv62.i63 = zext i8 %514 to i32, !dbg !371
  %shl63.i = shl i32 %conv62.i63, 8, !dbg !371
  %or64.i = or i32 %or59.i60, %shl63.i, !dbg !371
  %515 = load i8*, i8** %s.addr.i, align 8, !dbg !371
  %add.ptr65.i = getelementptr inbounds i8, i8* %515, i64 12, !dbg !371
  %arrayidx66.i = getelementptr inbounds i8, i8* %add.ptr65.i, i64 3, !dbg !371
  %516 = load i8, i8* %arrayidx66.i, align 1, !dbg !371
  %conv67.i64 = zext i8 %516 to i32, !dbg !371
  %or68.i = or i32 %or64.i, %conv67.i64, !dbg !371
  store i32 %or68.i, i32* %x4.i33, align 4, !dbg !371
  %517 = load i32, i32* %x3.i32, align 4, !dbg !372
  %518 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !372
  %data.i65 = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %518, i32 0, i32 0, !dbg !372
  %arrayidx69.i = getelementptr inbounds [32 x i32], [32 x i32]* %data.i65, i64 0, i64 0, !dbg !372
  %519 = load i32, i32* %arrayidx69.i, align 4, !dbg !372
  %xor.i66 = xor i32 %517, %519, !dbg !372
  store i32 %xor.i66, i32* %t0.i34, align 4, !dbg !372
  %520 = load i32, i32* %x4.i33, align 4, !dbg !372
  %521 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !372
  %data70.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %521, i32 0, i32 0, !dbg !372
  %arrayidx71.i = getelementptr inbounds [32 x i32], [32 x i32]* %data70.i, i64 0, i64 1, !dbg !372
  %522 = load i32, i32* %arrayidx71.i, align 4, !dbg !372
  %xor72.i = xor i32 %520, %522, !dbg !372
  store i32 %xor72.i, i32* %t1.i35, align 4, !dbg !372
  %523 = load i32, i32* %t0.i34, align 4, !dbg !372
  %524 = load i32, i32* %t1.i35, align 4, !dbg !372
  %xor73.i = xor i32 %524, %523, !dbg !372
  store i32 %xor73.i, i32* %t1.i35, align 4, !dbg !372
  %525 = load i32, i32* %t1.i35, align 4, !dbg !372
  %conv74.i = trunc i32 %525 to i8, !dbg !372
  %conv75.i67 = zext i8 %conv74.i to i32, !dbg !372
  %and.i68 = and i32 %conv75.i67, 255, !dbg !372
  %idxprom.i69 = sext i32 %and.i68 to i64, !dbg !372
  %arrayidx76.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom.i69, !dbg !372
  %526 = load i32, i32* %arrayidx76.i, align 4, !dbg !372
  %527 = load i32, i32* %t1.i35, align 4, !dbg !372
  %shr.i70 = lshr i32 %527, 8, !dbg !372
  %conv77.i = trunc i32 %shr.i70 to i8, !dbg !372
  %conv78.i = zext i8 %conv77.i to i32, !dbg !372
  %and79.i = and i32 %conv78.i, 255, !dbg !372
  %idxprom80.i = sext i32 %and79.i to i64, !dbg !372
  %arrayidx81.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom80.i, !dbg !372
  %528 = load i32, i32* %arrayidx81.i, align 4, !dbg !372
  %xor82.i = xor i32 %526, %528, !dbg !372
  %529 = load i32, i32* %t1.i35, align 4, !dbg !372
  %shr83.i = lshr i32 %529, 16, !dbg !372
  %conv84.i = trunc i32 %shr83.i to i8, !dbg !372
  %conv85.i = zext i8 %conv84.i to i32, !dbg !372
  %and86.i = and i32 %conv85.i, 255, !dbg !372
  %idxprom87.i = sext i32 %and86.i to i64, !dbg !372
  %arrayidx88.i71 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom87.i, !dbg !372
  %530 = load i32, i32* %arrayidx88.i71, align 4, !dbg !372
  %xor89.i = xor i32 %xor82.i, %530, !dbg !372
  %531 = load i32, i32* %t1.i35, align 4, !dbg !372
  %shr90.i = lshr i32 %531, 24, !dbg !372
  %conv91.i72 = trunc i32 %shr90.i to i8, !dbg !372
  %conv92.i = zext i8 %conv91.i72 to i32, !dbg !372
  %and93.i = and i32 %conv92.i, 255, !dbg !372
  %idxprom94.i = sext i32 %and93.i to i64, !dbg !372
  %arrayidx95.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom94.i, !dbg !372
  %532 = load i32, i32* %arrayidx95.i, align 4, !dbg !372
  %xor96.i = xor i32 %xor89.i, %532, !dbg !372
  store i32 %xor96.i, i32* %t1.i35, align 4, !dbg !372
  %533 = load i32, i32* %t0.i34, align 4, !dbg !372
  %534 = load i32, i32* %t1.i35, align 4, !dbg !372
  %add.i73 = add i32 %533, %534, !dbg !372
  store i32 %add.i73, i32* %t0.i34, align 4, !dbg !372
  %535 = load i32, i32* %t0.i34, align 4, !dbg !372
  %conv97.i74 = trunc i32 %535 to i8, !dbg !372
  %conv98.i = zext i8 %conv97.i74 to i32, !dbg !372
  %and99.i = and i32 %conv98.i, 255, !dbg !372
  %idxprom100.i = sext i32 %and99.i to i64, !dbg !372
  %arrayidx101.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom100.i, !dbg !372
  %536 = load i32, i32* %arrayidx101.i, align 4, !dbg !372
  %537 = load i32, i32* %t0.i34, align 4, !dbg !372
  %shr102.i75 = lshr i32 %537, 8, !dbg !372
  %conv103.i76 = trunc i32 %shr102.i75 to i8, !dbg !372
  %conv104.i77 = zext i8 %conv103.i76 to i32, !dbg !372
  %and105.i78 = and i32 %conv104.i77, 255, !dbg !372
  %idxprom106.i79 = sext i32 %and105.i78 to i64, !dbg !372
  %arrayidx107.i80 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom106.i79, !dbg !372
  %538 = load i32, i32* %arrayidx107.i80, align 4, !dbg !372
  %xor108.i81 = xor i32 %536, %538, !dbg !372
  %539 = load i32, i32* %t0.i34, align 4, !dbg !372
  %shr109.i82 = lshr i32 %539, 16, !dbg !372
  %conv110.i83 = trunc i32 %shr109.i82 to i8, !dbg !372
  %conv111.i84 = zext i8 %conv110.i83 to i32, !dbg !372
  %and112.i85 = and i32 %conv111.i84, 255, !dbg !372
  %idxprom113.i86 = sext i32 %and112.i85 to i64, !dbg !372
  %arrayidx114.i87 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom113.i86, !dbg !372
  %540 = load i32, i32* %arrayidx114.i87, align 4, !dbg !372
  %xor115.i88 = xor i32 %xor108.i81, %540, !dbg !372
  %541 = load i32, i32* %t0.i34, align 4, !dbg !372
  %shr116.i = lshr i32 %541, 24, !dbg !372
  %conv117.i = trunc i32 %shr116.i to i8, !dbg !372
  %conv118.i = zext i8 %conv117.i to i32, !dbg !372
  %and119.i = and i32 %conv118.i, 255, !dbg !372
  %idxprom120.i = sext i32 %and119.i to i64, !dbg !372
  %arrayidx121.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom120.i, !dbg !372
  %542 = load i32, i32* %arrayidx121.i, align 4, !dbg !372
  %xor122.i = xor i32 %xor115.i88, %542, !dbg !372
  store i32 %xor122.i, i32* %t0.i34, align 4, !dbg !372
  %543 = load i32, i32* %t1.i35, align 4, !dbg !372
  %544 = load i32, i32* %t0.i34, align 4, !dbg !372
  %add123.i = add i32 %543, %544, !dbg !372
  store i32 %add123.i, i32* %t1.i35, align 4, !dbg !372
  %545 = load i32, i32* %t1.i35, align 4, !dbg !372
  %conv124.i = trunc i32 %545 to i8, !dbg !372
  %conv125.i = zext i8 %conv124.i to i32, !dbg !372
  %and126.i = and i32 %conv125.i, 255, !dbg !372
  %idxprom127.i = sext i32 %and126.i to i64, !dbg !372
  %arrayidx128.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom127.i, !dbg !372
  %546 = load i32, i32* %arrayidx128.i, align 4, !dbg !372
  %547 = load i32, i32* %t1.i35, align 4, !dbg !372
  %shr129.i = lshr i32 %547, 8, !dbg !372
  %conv130.i89 = trunc i32 %shr129.i to i8, !dbg !372
  %conv131.i = zext i8 %conv130.i89 to i32, !dbg !372
  %and132.i = and i32 %conv131.i, 255, !dbg !372
  %idxprom133.i = sext i32 %and132.i to i64, !dbg !372
  %arrayidx134.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom133.i, !dbg !372
  %548 = load i32, i32* %arrayidx134.i, align 4, !dbg !372
  %xor135.i = xor i32 %546, %548, !dbg !372
  %549 = load i32, i32* %t1.i35, align 4, !dbg !372
  %shr136.i = lshr i32 %549, 16, !dbg !372
  %conv137.i = trunc i32 %shr136.i to i8, !dbg !372
  %conv138.i = zext i8 %conv137.i to i32, !dbg !372
  %and139.i = and i32 %conv138.i, 255, !dbg !372
  %idxprom140.i = sext i32 %and139.i to i64, !dbg !372
  %arrayidx141.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom140.i, !dbg !372
  %550 = load i32, i32* %arrayidx141.i, align 4, !dbg !372
  %xor142.i = xor i32 %xor135.i, %550, !dbg !372
  %551 = load i32, i32* %t1.i35, align 4, !dbg !372
  %shr143.i = lshr i32 %551, 24, !dbg !372
  %conv144.i = trunc i32 %shr143.i to i8, !dbg !372
  %conv145.i = zext i8 %conv144.i to i32, !dbg !372
  %and146.i = and i32 %conv145.i, 255, !dbg !372
  %idxprom147.i = sext i32 %and146.i to i64, !dbg !372
  %arrayidx148.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom147.i, !dbg !372
  %552 = load i32, i32* %arrayidx148.i, align 4, !dbg !372
  %xor149.i = xor i32 %xor142.i, %552, !dbg !372
  store i32 %xor149.i, i32* %t1.i35, align 4, !dbg !372
  %553 = load i32, i32* %t0.i34, align 4, !dbg !372
  %554 = load i32, i32* %t1.i35, align 4, !dbg !372
  %add150.i = add i32 %553, %554, !dbg !372
  store i32 %add150.i, i32* %t0.i34, align 4, !dbg !372
  %555 = load i32, i32* %t0.i34, align 4, !dbg !372
  %556 = load i32, i32* %x1.i30, align 4, !dbg !372
  %xor151.i = xor i32 %556, %555, !dbg !372
  store i32 %xor151.i, i32* %x1.i30, align 4, !dbg !372
  %557 = load i32, i32* %t1.i35, align 4, !dbg !372
  %558 = load i32, i32* %x2.i31, align 4, !dbg !372
  %xor152.i = xor i32 %558, %557, !dbg !372
  store i32 %xor152.i, i32* %x2.i31, align 4, !dbg !372
  %559 = load i32, i32* %x1.i30, align 4, !dbg !373
  %560 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !373
  %data153.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %560, i32 0, i32 0, !dbg !373
  %arrayidx154.i = getelementptr inbounds [32 x i32], [32 x i32]* %data153.i, i64 0, i64 2, !dbg !373
  %561 = load i32, i32* %arrayidx154.i, align 4, !dbg !373
  %xor155.i = xor i32 %559, %561, !dbg !373
  store i32 %xor155.i, i32* %t0.i34, align 4, !dbg !373
  %562 = load i32, i32* %x2.i31, align 4, !dbg !373
  %563 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !373
  %data156.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %563, i32 0, i32 0, !dbg !373
  %arrayidx157.i = getelementptr inbounds [32 x i32], [32 x i32]* %data156.i, i64 0, i64 3, !dbg !373
  %564 = load i32, i32* %arrayidx157.i, align 4, !dbg !373
  %xor158.i = xor i32 %562, %564, !dbg !373
  store i32 %xor158.i, i32* %t1.i35, align 4, !dbg !373
  %565 = load i32, i32* %t0.i34, align 4, !dbg !373
  %566 = load i32, i32* %t1.i35, align 4, !dbg !373
  %xor159.i = xor i32 %566, %565, !dbg !373
  store i32 %xor159.i, i32* %t1.i35, align 4, !dbg !373
  %567 = load i32, i32* %t1.i35, align 4, !dbg !373
  %conv160.i = trunc i32 %567 to i8, !dbg !373
  %conv161.i = zext i8 %conv160.i to i32, !dbg !373
  %and162.i = and i32 %conv161.i, 255, !dbg !373
  %idxprom163.i = sext i32 %and162.i to i64, !dbg !373
  %arrayidx164.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom163.i, !dbg !373
  %568 = load i32, i32* %arrayidx164.i, align 4, !dbg !373
  %569 = load i32, i32* %t1.i35, align 4, !dbg !373
  %shr165.i = lshr i32 %569, 8, !dbg !373
  %conv166.i = trunc i32 %shr165.i to i8, !dbg !373
  %conv167.i = zext i8 %conv166.i to i32, !dbg !373
  %and168.i = and i32 %conv167.i, 255, !dbg !373
  %idxprom169.i = sext i32 %and168.i to i64, !dbg !373
  %arrayidx170.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom169.i, !dbg !373
  %570 = load i32, i32* %arrayidx170.i, align 4, !dbg !373
  %xor171.i = xor i32 %568, %570, !dbg !373
  %571 = load i32, i32* %t1.i35, align 4, !dbg !373
  %shr172.i = lshr i32 %571, 16, !dbg !373
  %conv173.i = trunc i32 %shr172.i to i8, !dbg !373
  %conv174.i = zext i8 %conv173.i to i32, !dbg !373
  %and175.i = and i32 %conv174.i, 255, !dbg !373
  %idxprom176.i = sext i32 %and175.i to i64, !dbg !373
  %arrayidx177.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom176.i, !dbg !373
  %572 = load i32, i32* %arrayidx177.i, align 4, !dbg !373
  %xor178.i = xor i32 %xor171.i, %572, !dbg !373
  %573 = load i32, i32* %t1.i35, align 4, !dbg !373
  %shr179.i = lshr i32 %573, 24, !dbg !373
  %conv180.i = trunc i32 %shr179.i to i8, !dbg !373
  %conv181.i = zext i8 %conv180.i to i32, !dbg !373
  %and182.i = and i32 %conv181.i, 255, !dbg !373
  %idxprom183.i = sext i32 %and182.i to i64, !dbg !373
  %arrayidx184.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom183.i, !dbg !373
  %574 = load i32, i32* %arrayidx184.i, align 4, !dbg !373
  %xor185.i = xor i32 %xor178.i, %574, !dbg !373
  store i32 %xor185.i, i32* %t1.i35, align 4, !dbg !373
  %575 = load i32, i32* %t0.i34, align 4, !dbg !373
  %576 = load i32, i32* %t1.i35, align 4, !dbg !373
  %add186.i = add i32 %575, %576, !dbg !373
  store i32 %add186.i, i32* %t0.i34, align 4, !dbg !373
  %577 = load i32, i32* %t0.i34, align 4, !dbg !373
  %conv187.i = trunc i32 %577 to i8, !dbg !373
  %conv188.i = zext i8 %conv187.i to i32, !dbg !373
  %and189.i = and i32 %conv188.i, 255, !dbg !373
  %idxprom190.i = sext i32 %and189.i to i64, !dbg !373
  %arrayidx191.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom190.i, !dbg !373
  %578 = load i32, i32* %arrayidx191.i, align 4, !dbg !373
  %579 = load i32, i32* %t0.i34, align 4, !dbg !373
  %shr192.i = lshr i32 %579, 8, !dbg !373
  %conv193.i = trunc i32 %shr192.i to i8, !dbg !373
  %conv194.i = zext i8 %conv193.i to i32, !dbg !373
  %and195.i = and i32 %conv194.i, 255, !dbg !373
  %idxprom196.i = sext i32 %and195.i to i64, !dbg !373
  %arrayidx197.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom196.i, !dbg !373
  %580 = load i32, i32* %arrayidx197.i, align 4, !dbg !373
  %xor198.i = xor i32 %578, %580, !dbg !373
  %581 = load i32, i32* %t0.i34, align 4, !dbg !373
  %shr199.i = lshr i32 %581, 16, !dbg !373
  %conv200.i = trunc i32 %shr199.i to i8, !dbg !373
  %conv201.i = zext i8 %conv200.i to i32, !dbg !373
  %and202.i = and i32 %conv201.i, 255, !dbg !373
  %idxprom203.i = sext i32 %and202.i to i64, !dbg !373
  %arrayidx204.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom203.i, !dbg !373
  %582 = load i32, i32* %arrayidx204.i, align 4, !dbg !373
  %xor205.i = xor i32 %xor198.i, %582, !dbg !373
  %583 = load i32, i32* %t0.i34, align 4, !dbg !373
  %shr206.i = lshr i32 %583, 24, !dbg !373
  %conv207.i = trunc i32 %shr206.i to i8, !dbg !373
  %conv208.i = zext i8 %conv207.i to i32, !dbg !373
  %and209.i = and i32 %conv208.i, 255, !dbg !373
  %idxprom210.i = sext i32 %and209.i to i64, !dbg !373
  %arrayidx211.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom210.i, !dbg !373
  %584 = load i32, i32* %arrayidx211.i, align 4, !dbg !373
  %xor212.i = xor i32 %xor205.i, %584, !dbg !373
  store i32 %xor212.i, i32* %t0.i34, align 4, !dbg !373
  %585 = load i32, i32* %t1.i35, align 4, !dbg !373
  %586 = load i32, i32* %t0.i34, align 4, !dbg !373
  %add213.i = add i32 %585, %586, !dbg !373
  store i32 %add213.i, i32* %t1.i35, align 4, !dbg !373
  %587 = load i32, i32* %t1.i35, align 4, !dbg !373
  %conv214.i = trunc i32 %587 to i8, !dbg !373
  %conv215.i = zext i8 %conv214.i to i32, !dbg !373
  %and216.i = and i32 %conv215.i, 255, !dbg !373
  %idxprom217.i = sext i32 %and216.i to i64, !dbg !373
  %arrayidx218.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom217.i, !dbg !373
  %588 = load i32, i32* %arrayidx218.i, align 4, !dbg !373
  %589 = load i32, i32* %t1.i35, align 4, !dbg !373
  %shr219.i = lshr i32 %589, 8, !dbg !373
  %conv220.i = trunc i32 %shr219.i to i8, !dbg !373
  %conv221.i = zext i8 %conv220.i to i32, !dbg !373
  %and222.i = and i32 %conv221.i, 255, !dbg !373
  %idxprom223.i = sext i32 %and222.i to i64, !dbg !373
  %arrayidx224.i90 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom223.i, !dbg !373
  %590 = load i32, i32* %arrayidx224.i90, align 4, !dbg !373
  %xor225.i = xor i32 %588, %590, !dbg !373
  %591 = load i32, i32* %t1.i35, align 4, !dbg !373
  %shr226.i = lshr i32 %591, 16, !dbg !373
  %conv227.i91 = trunc i32 %shr226.i to i8, !dbg !373
  %conv228.i = zext i8 %conv227.i91 to i32, !dbg !373
  %and229.i = and i32 %conv228.i, 255, !dbg !373
  %idxprom230.i = sext i32 %and229.i to i64, !dbg !373
  %arrayidx231.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom230.i, !dbg !373
  %592 = load i32, i32* %arrayidx231.i, align 4, !dbg !373
  %xor232.i = xor i32 %xor225.i, %592, !dbg !373
  %593 = load i32, i32* %t1.i35, align 4, !dbg !373
  %shr233.i = lshr i32 %593, 24, !dbg !373
  %conv234.i = trunc i32 %shr233.i to i8, !dbg !373
  %conv235.i = zext i8 %conv234.i to i32, !dbg !373
  %and236.i = and i32 %conv235.i, 255, !dbg !373
  %idxprom237.i = sext i32 %and236.i to i64, !dbg !373
  %arrayidx238.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom237.i, !dbg !373
  %594 = load i32, i32* %arrayidx238.i, align 4, !dbg !373
  %xor239.i = xor i32 %xor232.i, %594, !dbg !373
  store i32 %xor239.i, i32* %t1.i35, align 4, !dbg !373
  %595 = load i32, i32* %t0.i34, align 4, !dbg !373
  %596 = load i32, i32* %t1.i35, align 4, !dbg !373
  %add240.i = add i32 %595, %596, !dbg !373
  store i32 %add240.i, i32* %t0.i34, align 4, !dbg !373
  %597 = load i32, i32* %t0.i34, align 4, !dbg !373
  %598 = load i32, i32* %x3.i32, align 4, !dbg !373
  %xor241.i = xor i32 %598, %597, !dbg !373
  store i32 %xor241.i, i32* %x3.i32, align 4, !dbg !373
  %599 = load i32, i32* %t1.i35, align 4, !dbg !373
  %600 = load i32, i32* %x4.i33, align 4, !dbg !373
  %xor242.i = xor i32 %600, %599, !dbg !373
  store i32 %xor242.i, i32* %x4.i33, align 4, !dbg !373
  %601 = load i32, i32* %x3.i32, align 4, !dbg !374
  %602 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !374
  %data243.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %602, i32 0, i32 0, !dbg !374
  %arrayidx244.i = getelementptr inbounds [32 x i32], [32 x i32]* %data243.i, i64 0, i64 4, !dbg !374
  %603 = load i32, i32* %arrayidx244.i, align 4, !dbg !374
  %xor245.i = xor i32 %601, %603, !dbg !374
  store i32 %xor245.i, i32* %t0.i34, align 4, !dbg !374
  %604 = load i32, i32* %x4.i33, align 4, !dbg !374
  %605 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !374
  %data246.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %605, i32 0, i32 0, !dbg !374
  %arrayidx247.i = getelementptr inbounds [32 x i32], [32 x i32]* %data246.i, i64 0, i64 5, !dbg !374
  %606 = load i32, i32* %arrayidx247.i, align 4, !dbg !374
  %xor248.i = xor i32 %604, %606, !dbg !374
  store i32 %xor248.i, i32* %t1.i35, align 4, !dbg !374
  %607 = load i32, i32* %t0.i34, align 4, !dbg !374
  %608 = load i32, i32* %t1.i35, align 4, !dbg !374
  %xor249.i = xor i32 %608, %607, !dbg !374
  store i32 %xor249.i, i32* %t1.i35, align 4, !dbg !374
  %609 = load i32, i32* %t1.i35, align 4, !dbg !374
  %conv250.i = trunc i32 %609 to i8, !dbg !374
  %conv251.i = zext i8 %conv250.i to i32, !dbg !374
  %and252.i = and i32 %conv251.i, 255, !dbg !374
  %idxprom253.i = sext i32 %and252.i to i64, !dbg !374
  %arrayidx254.i92 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom253.i, !dbg !374
  %610 = load i32, i32* %arrayidx254.i92, align 4, !dbg !374
  %611 = load i32, i32* %t1.i35, align 4, !dbg !374
  %shr255.i93 = lshr i32 %611, 8, !dbg !374
  %conv256.i = trunc i32 %shr255.i93 to i8, !dbg !374
  %conv257.i = zext i8 %conv256.i to i32, !dbg !374
  %and258.i = and i32 %conv257.i, 255, !dbg !374
  %idxprom259.i = sext i32 %and258.i to i64, !dbg !374
  %arrayidx260.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom259.i, !dbg !374
  %612 = load i32, i32* %arrayidx260.i, align 4, !dbg !374
  %xor261.i = xor i32 %610, %612, !dbg !374
  %613 = load i32, i32* %t1.i35, align 4, !dbg !374
  %shr262.i = lshr i32 %613, 16, !dbg !374
  %conv263.i = trunc i32 %shr262.i to i8, !dbg !374
  %conv264.i = zext i8 %conv263.i to i32, !dbg !374
  %and265.i = and i32 %conv264.i, 255, !dbg !374
  %idxprom266.i = sext i32 %and265.i to i64, !dbg !374
  %arrayidx267.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom266.i, !dbg !374
  %614 = load i32, i32* %arrayidx267.i, align 4, !dbg !374
  %xor268.i = xor i32 %xor261.i, %614, !dbg !374
  %615 = load i32, i32* %t1.i35, align 4, !dbg !374
  %shr269.i = lshr i32 %615, 24, !dbg !374
  %conv270.i = trunc i32 %shr269.i to i8, !dbg !374
  %conv271.i94 = zext i8 %conv270.i to i32, !dbg !374
  %and272.i = and i32 %conv271.i94, 255, !dbg !374
  %idxprom273.i = sext i32 %and272.i to i64, !dbg !374
  %arrayidx274.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom273.i, !dbg !374
  %616 = load i32, i32* %arrayidx274.i, align 4, !dbg !374
  %xor275.i = xor i32 %xor268.i, %616, !dbg !374
  store i32 %xor275.i, i32* %t1.i35, align 4, !dbg !374
  %617 = load i32, i32* %t0.i34, align 4, !dbg !374
  %618 = load i32, i32* %t1.i35, align 4, !dbg !374
  %add276.i = add i32 %617, %618, !dbg !374
  store i32 %add276.i, i32* %t0.i34, align 4, !dbg !374
  %619 = load i32, i32* %t0.i34, align 4, !dbg !374
  %conv277.i = trunc i32 %619 to i8, !dbg !374
  %conv278.i95 = zext i8 %conv277.i to i32, !dbg !374
  %and279.i = and i32 %conv278.i95, 255, !dbg !374
  %idxprom280.i = sext i32 %and279.i to i64, !dbg !374
  %arrayidx281.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom280.i, !dbg !374
  %620 = load i32, i32* %arrayidx281.i, align 4, !dbg !374
  %621 = load i32, i32* %t0.i34, align 4, !dbg !374
  %shr282.i = lshr i32 %621, 8, !dbg !374
  %conv283.i = trunc i32 %shr282.i to i8, !dbg !374
  %conv284.i = zext i8 %conv283.i to i32, !dbg !374
  %and285.i = and i32 %conv284.i, 255, !dbg !374
  %idxprom286.i = sext i32 %and285.i to i64, !dbg !374
  %arrayidx287.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom286.i, !dbg !374
  %622 = load i32, i32* %arrayidx287.i, align 4, !dbg !374
  %xor288.i = xor i32 %620, %622, !dbg !374
  %623 = load i32, i32* %t0.i34, align 4, !dbg !374
  %shr289.i = lshr i32 %623, 16, !dbg !374
  %conv290.i = trunc i32 %shr289.i to i8, !dbg !374
  %conv291.i = zext i8 %conv290.i to i32, !dbg !374
  %and292.i = and i32 %conv291.i, 255, !dbg !374
  %idxprom293.i = sext i32 %and292.i to i64, !dbg !374
  %arrayidx294.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom293.i, !dbg !374
  %624 = load i32, i32* %arrayidx294.i, align 4, !dbg !374
  %xor295.i = xor i32 %xor288.i, %624, !dbg !374
  %625 = load i32, i32* %t0.i34, align 4, !dbg !374
  %shr296.i = lshr i32 %625, 24, !dbg !374
  %conv297.i = trunc i32 %shr296.i to i8, !dbg !374
  %conv298.i = zext i8 %conv297.i to i32, !dbg !374
  %and299.i = and i32 %conv298.i, 255, !dbg !374
  %idxprom300.i = sext i32 %and299.i to i64, !dbg !374
  %arrayidx301.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom300.i, !dbg !374
  %626 = load i32, i32* %arrayidx301.i, align 4, !dbg !374
  %xor302.i = xor i32 %xor295.i, %626, !dbg !374
  store i32 %xor302.i, i32* %t0.i34, align 4, !dbg !374
  %627 = load i32, i32* %t1.i35, align 4, !dbg !374
  %628 = load i32, i32* %t0.i34, align 4, !dbg !374
  %add303.i = add i32 %627, %628, !dbg !374
  store i32 %add303.i, i32* %t1.i35, align 4, !dbg !374
  %629 = load i32, i32* %t1.i35, align 4, !dbg !374
  %conv304.i = trunc i32 %629 to i8, !dbg !374
  %conv305.i = zext i8 %conv304.i to i32, !dbg !374
  %and306.i = and i32 %conv305.i, 255, !dbg !374
  %idxprom307.i = sext i32 %and306.i to i64, !dbg !374
  %arrayidx308.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom307.i, !dbg !374
  %630 = load i32, i32* %arrayidx308.i, align 4, !dbg !374
  %631 = load i32, i32* %t1.i35, align 4, !dbg !374
  %shr309.i = lshr i32 %631, 8, !dbg !374
  %conv310.i = trunc i32 %shr309.i to i8, !dbg !374
  %conv311.i = zext i8 %conv310.i to i32, !dbg !374
  %and312.i = and i32 %conv311.i, 255, !dbg !374
  %idxprom313.i = sext i32 %and312.i to i64, !dbg !374
  %arrayidx314.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom313.i, !dbg !374
  %632 = load i32, i32* %arrayidx314.i, align 4, !dbg !374
  %xor315.i = xor i32 %630, %632, !dbg !374
  %633 = load i32, i32* %t1.i35, align 4, !dbg !374
  %shr316.i = lshr i32 %633, 16, !dbg !374
  %conv317.i = trunc i32 %shr316.i to i8, !dbg !374
  %conv318.i = zext i8 %conv317.i to i32, !dbg !374
  %and319.i = and i32 %conv318.i, 255, !dbg !374
  %idxprom320.i = sext i32 %and319.i to i64, !dbg !374
  %arrayidx321.i96 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom320.i, !dbg !374
  %634 = load i32, i32* %arrayidx321.i96, align 4, !dbg !374
  %xor322.i = xor i32 %xor315.i, %634, !dbg !374
  %635 = load i32, i32* %t1.i35, align 4, !dbg !374
  %shr323.i = lshr i32 %635, 24, !dbg !374
  %conv324.i = trunc i32 %shr323.i to i8, !dbg !374
  %conv325.i = zext i8 %conv324.i to i32, !dbg !374
  %and326.i = and i32 %conv325.i, 255, !dbg !374
  %idxprom327.i = sext i32 %and326.i to i64, !dbg !374
  %arrayidx328.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom327.i, !dbg !374
  %636 = load i32, i32* %arrayidx328.i, align 4, !dbg !374
  %xor329.i = xor i32 %xor322.i, %636, !dbg !374
  store i32 %xor329.i, i32* %t1.i35, align 4, !dbg !374
  %637 = load i32, i32* %t0.i34, align 4, !dbg !374
  %638 = load i32, i32* %t1.i35, align 4, !dbg !374
  %add330.i = add i32 %637, %638, !dbg !374
  store i32 %add330.i, i32* %t0.i34, align 4, !dbg !374
  %639 = load i32, i32* %t0.i34, align 4, !dbg !374
  %640 = load i32, i32* %x1.i30, align 4, !dbg !374
  %xor331.i = xor i32 %640, %639, !dbg !374
  store i32 %xor331.i, i32* %x1.i30, align 4, !dbg !374
  %641 = load i32, i32* %t1.i35, align 4, !dbg !374
  %642 = load i32, i32* %x2.i31, align 4, !dbg !374
  %xor332.i = xor i32 %642, %641, !dbg !374
  store i32 %xor332.i, i32* %x2.i31, align 4, !dbg !374
  %643 = load i32, i32* %x1.i30, align 4, !dbg !375
  %644 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !375
  %data333.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %644, i32 0, i32 0, !dbg !375
  %arrayidx334.i = getelementptr inbounds [32 x i32], [32 x i32]* %data333.i, i64 0, i64 6, !dbg !375
  %645 = load i32, i32* %arrayidx334.i, align 4, !dbg !375
  %xor335.i = xor i32 %643, %645, !dbg !375
  store i32 %xor335.i, i32* %t0.i34, align 4, !dbg !375
  %646 = load i32, i32* %x2.i31, align 4, !dbg !375
  %647 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !375
  %data336.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %647, i32 0, i32 0, !dbg !375
  %arrayidx337.i97 = getelementptr inbounds [32 x i32], [32 x i32]* %data336.i, i64 0, i64 7, !dbg !375
  %648 = load i32, i32* %arrayidx337.i97, align 4, !dbg !375
  %xor338.i = xor i32 %646, %648, !dbg !375
  store i32 %xor338.i, i32* %t1.i35, align 4, !dbg !375
  %649 = load i32, i32* %t0.i34, align 4, !dbg !375
  %650 = load i32, i32* %t1.i35, align 4, !dbg !375
  %xor339.i = xor i32 %650, %649, !dbg !375
  store i32 %xor339.i, i32* %t1.i35, align 4, !dbg !375
  %651 = load i32, i32* %t1.i35, align 4, !dbg !375
  %conv340.i98 = trunc i32 %651 to i8, !dbg !375
  %conv341.i = zext i8 %conv340.i98 to i32, !dbg !375
  %and342.i = and i32 %conv341.i, 255, !dbg !375
  %idxprom343.i = sext i32 %and342.i to i64, !dbg !375
  %arrayidx344.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom343.i, !dbg !375
  %652 = load i32, i32* %arrayidx344.i, align 4, !dbg !375
  %653 = load i32, i32* %t1.i35, align 4, !dbg !375
  %shr345.i99 = lshr i32 %653, 8, !dbg !375
  %conv346.i100 = trunc i32 %shr345.i99 to i8, !dbg !375
  %conv347.i101 = zext i8 %conv346.i100 to i32, !dbg !375
  %and348.i102 = and i32 %conv347.i101, 255, !dbg !375
  %idxprom349.i103 = sext i32 %and348.i102 to i64, !dbg !375
  %arrayidx350.i104 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom349.i103, !dbg !375
  %654 = load i32, i32* %arrayidx350.i104, align 4, !dbg !375
  %xor351.i105 = xor i32 %652, %654, !dbg !375
  %655 = load i32, i32* %t1.i35, align 4, !dbg !375
  %shr352.i106 = lshr i32 %655, 16, !dbg !375
  %conv353.i107 = trunc i32 %shr352.i106 to i8, !dbg !375
  %conv354.i108 = zext i8 %conv353.i107 to i32, !dbg !375
  %and355.i109 = and i32 %conv354.i108, 255, !dbg !375
  %idxprom356.i110 = sext i32 %and355.i109 to i64, !dbg !375
  %arrayidx357.i111 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom356.i110, !dbg !375
  %656 = load i32, i32* %arrayidx357.i111, align 4, !dbg !375
  %xor358.i112 = xor i32 %xor351.i105, %656, !dbg !375
  %657 = load i32, i32* %t1.i35, align 4, !dbg !375
  %shr359.i = lshr i32 %657, 24, !dbg !375
  %conv360.i = trunc i32 %shr359.i to i8, !dbg !375
  %conv361.i = zext i8 %conv360.i to i32, !dbg !375
  %and362.i = and i32 %conv361.i, 255, !dbg !375
  %idxprom363.i = sext i32 %and362.i to i64, !dbg !375
  %arrayidx364.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom363.i, !dbg !375
  %658 = load i32, i32* %arrayidx364.i, align 4, !dbg !375
  %xor365.i = xor i32 %xor358.i112, %658, !dbg !375
  store i32 %xor365.i, i32* %t1.i35, align 4, !dbg !375
  %659 = load i32, i32* %t0.i34, align 4, !dbg !375
  %660 = load i32, i32* %t1.i35, align 4, !dbg !375
  %add366.i = add i32 %659, %660, !dbg !375
  store i32 %add366.i, i32* %t0.i34, align 4, !dbg !375
  %661 = load i32, i32* %t0.i34, align 4, !dbg !375
  %conv367.i = trunc i32 %661 to i8, !dbg !375
  %conv368.i113 = zext i8 %conv367.i to i32, !dbg !375
  %and369.i = and i32 %conv368.i113, 255, !dbg !375
  %idxprom370.i = sext i32 %and369.i to i64, !dbg !375
  %arrayidx371.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom370.i, !dbg !375
  %662 = load i32, i32* %arrayidx371.i, align 4, !dbg !375
  %663 = load i32, i32* %t0.i34, align 4, !dbg !375
  %shr372.i = lshr i32 %663, 8, !dbg !375
  %conv373.i = trunc i32 %shr372.i to i8, !dbg !375
  %conv374.i = zext i8 %conv373.i to i32, !dbg !375
  %and375.i = and i32 %conv374.i, 255, !dbg !375
  %idxprom376.i = sext i32 %and375.i to i64, !dbg !375
  %arrayidx377.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom376.i, !dbg !375
  %664 = load i32, i32* %arrayidx377.i, align 4, !dbg !375
  %xor378.i = xor i32 %662, %664, !dbg !375
  %665 = load i32, i32* %t0.i34, align 4, !dbg !375
  %shr379.i = lshr i32 %665, 16, !dbg !375
  %conv380.i = trunc i32 %shr379.i to i8, !dbg !375
  %conv381.i = zext i8 %conv380.i to i32, !dbg !375
  %and382.i = and i32 %conv381.i, 255, !dbg !375
  %idxprom383.i = sext i32 %and382.i to i64, !dbg !375
  %arrayidx384.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom383.i, !dbg !375
  %666 = load i32, i32* %arrayidx384.i, align 4, !dbg !375
  %xor385.i = xor i32 %xor378.i, %666, !dbg !375
  %667 = load i32, i32* %t0.i34, align 4, !dbg !375
  %shr386.i = lshr i32 %667, 24, !dbg !375
  %conv387.i = trunc i32 %shr386.i to i8, !dbg !375
  %conv388.i = zext i8 %conv387.i to i32, !dbg !375
  %and389.i = and i32 %conv388.i, 255, !dbg !375
  %idxprom390.i = sext i32 %and389.i to i64, !dbg !375
  %arrayidx391.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom390.i, !dbg !375
  %668 = load i32, i32* %arrayidx391.i, align 4, !dbg !375
  %xor392.i = xor i32 %xor385.i, %668, !dbg !375
  store i32 %xor392.i, i32* %t0.i34, align 4, !dbg !375
  %669 = load i32, i32* %t1.i35, align 4, !dbg !375
  %670 = load i32, i32* %t0.i34, align 4, !dbg !375
  %add393.i = add i32 %669, %670, !dbg !375
  store i32 %add393.i, i32* %t1.i35, align 4, !dbg !375
  %671 = load i32, i32* %t1.i35, align 4, !dbg !375
  %conv394.i = trunc i32 %671 to i8, !dbg !375
  %conv395.i = zext i8 %conv394.i to i32, !dbg !375
  %and396.i = and i32 %conv395.i, 255, !dbg !375
  %idxprom397.i = sext i32 %and396.i to i64, !dbg !375
  %arrayidx398.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom397.i, !dbg !375
  %672 = load i32, i32* %arrayidx398.i, align 4, !dbg !375
  %673 = load i32, i32* %t1.i35, align 4, !dbg !375
  %shr399.i = lshr i32 %673, 8, !dbg !375
  %conv400.i = trunc i32 %shr399.i to i8, !dbg !375
  %conv401.i114 = zext i8 %conv400.i to i32, !dbg !375
  %and402.i = and i32 %conv401.i114, 255, !dbg !375
  %idxprom403.i = sext i32 %and402.i to i64, !dbg !375
  %arrayidx404.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom403.i, !dbg !375
  %674 = load i32, i32* %arrayidx404.i, align 4, !dbg !375
  %xor405.i = xor i32 %672, %674, !dbg !375
  %675 = load i32, i32* %t1.i35, align 4, !dbg !375
  %shr406.i115 = lshr i32 %675, 16, !dbg !375
  %conv407.i116 = trunc i32 %shr406.i115 to i8, !dbg !375
  %conv408.i117 = zext i8 %conv407.i116 to i32, !dbg !375
  %and409.i118 = and i32 %conv408.i117, 255, !dbg !375
  %idxprom410.i119 = sext i32 %and409.i118 to i64, !dbg !375
  %arrayidx411.i120 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom410.i119, !dbg !375
  %676 = load i32, i32* %arrayidx411.i120, align 4, !dbg !375
  %xor412.i121 = xor i32 %xor405.i, %676, !dbg !375
  %677 = load i32, i32* %t1.i35, align 4, !dbg !375
  %shr413.i122 = lshr i32 %677, 24, !dbg !375
  %conv414.i123 = trunc i32 %shr413.i122 to i8, !dbg !375
  %conv415.i124 = zext i8 %conv414.i123 to i32, !dbg !375
  %and416.i125 = and i32 %conv415.i124, 255, !dbg !375
  %idxprom417.i126 = sext i32 %and416.i125 to i64, !dbg !375
  %arrayidx418.i127 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom417.i126, !dbg !375
  %678 = load i32, i32* %arrayidx418.i127, align 4, !dbg !375
  %xor419.i128 = xor i32 %xor412.i121, %678, !dbg !375
  store i32 %xor419.i128, i32* %t1.i35, align 4, !dbg !375
  %679 = load i32, i32* %t0.i34, align 4, !dbg !375
  %680 = load i32, i32* %t1.i35, align 4, !dbg !375
  %add420.i = add i32 %679, %680, !dbg !375
  store i32 %add420.i, i32* %t0.i34, align 4, !dbg !375
  %681 = load i32, i32* %t0.i34, align 4, !dbg !375
  %682 = load i32, i32* %x3.i32, align 4, !dbg !375
  %xor421.i = xor i32 %682, %681, !dbg !375
  store i32 %xor421.i, i32* %x3.i32, align 4, !dbg !375
  %683 = load i32, i32* %t1.i35, align 4, !dbg !375
  %684 = load i32, i32* %x4.i33, align 4, !dbg !375
  %xor422.i = xor i32 %684, %683, !dbg !375
  store i32 %xor422.i, i32* %x4.i33, align 4, !dbg !375
  %685 = load i32, i32* %x3.i32, align 4, !dbg !376
  %686 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !376
  %data423.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %686, i32 0, i32 0, !dbg !376
  %arrayidx424.i = getelementptr inbounds [32 x i32], [32 x i32]* %data423.i, i64 0, i64 8, !dbg !376
  %687 = load i32, i32* %arrayidx424.i, align 4, !dbg !376
  %xor425.i = xor i32 %685, %687, !dbg !376
  store i32 %xor425.i, i32* %t0.i34, align 4, !dbg !376
  %688 = load i32, i32* %x4.i33, align 4, !dbg !376
  %689 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !376
  %data426.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %689, i32 0, i32 0, !dbg !376
  %arrayidx427.i = getelementptr inbounds [32 x i32], [32 x i32]* %data426.i, i64 0, i64 9, !dbg !376
  %690 = load i32, i32* %arrayidx427.i, align 4, !dbg !376
  %xor428.i = xor i32 %688, %690, !dbg !376
  store i32 %xor428.i, i32* %t1.i35, align 4, !dbg !376
  %691 = load i32, i32* %t0.i34, align 4, !dbg !376
  %692 = load i32, i32* %t1.i35, align 4, !dbg !376
  %xor429.i = xor i32 %692, %691, !dbg !376
  store i32 %xor429.i, i32* %t1.i35, align 4, !dbg !376
  %693 = load i32, i32* %t1.i35, align 4, !dbg !376
  %conv430.i129 = trunc i32 %693 to i8, !dbg !376
  %conv431.i130 = zext i8 %conv430.i129 to i32, !dbg !376
  %and432.i131 = and i32 %conv431.i130, 255, !dbg !376
  %idxprom433.i132 = sext i32 %and432.i131 to i64, !dbg !376
  %arrayidx434.i133 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom433.i132, !dbg !376
  %694 = load i32, i32* %arrayidx434.i133, align 4, !dbg !376
  %695 = load i32, i32* %t1.i35, align 4, !dbg !376
  %shr435.i134 = lshr i32 %695, 8, !dbg !376
  %conv436.i135 = trunc i32 %shr435.i134 to i8, !dbg !376
  %conv437.i136 = zext i8 %conv436.i135 to i32, !dbg !376
  %and438.i137 = and i32 %conv437.i136, 255, !dbg !376
  %idxprom439.i138 = sext i32 %and438.i137 to i64, !dbg !376
  %arrayidx440.i139 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom439.i138, !dbg !376
  %696 = load i32, i32* %arrayidx440.i139, align 4, !dbg !376
  %xor441.i140 = xor i32 %694, %696, !dbg !376
  %697 = load i32, i32* %t1.i35, align 4, !dbg !376
  %shr442.i141 = lshr i32 %697, 16, !dbg !376
  %conv443.i142 = trunc i32 %shr442.i141 to i8, !dbg !376
  %conv444.i143 = zext i8 %conv443.i142 to i32, !dbg !376
  %and445.i144 = and i32 %conv444.i143, 255, !dbg !376
  %idxprom446.i145 = sext i32 %and445.i144 to i64, !dbg !376
  %arrayidx447.i146 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom446.i145, !dbg !376
  %698 = load i32, i32* %arrayidx447.i146, align 4, !dbg !376
  %xor448.i147 = xor i32 %xor441.i140, %698, !dbg !376
  %699 = load i32, i32* %t1.i35, align 4, !dbg !376
  %shr449.i148 = lshr i32 %699, 24, !dbg !376
  %conv450.i149 = trunc i32 %shr449.i148 to i8, !dbg !376
  %conv451.i150 = zext i8 %conv450.i149 to i32, !dbg !376
  %and452.i151 = and i32 %conv451.i150, 255, !dbg !376
  %idxprom453.i152 = sext i32 %and452.i151 to i64, !dbg !376
  %arrayidx454.i153 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom453.i152, !dbg !376
  %700 = load i32, i32* %arrayidx454.i153, align 4, !dbg !376
  %xor455.i154 = xor i32 %xor448.i147, %700, !dbg !376
  store i32 %xor455.i154, i32* %t1.i35, align 4, !dbg !376
  %701 = load i32, i32* %t0.i34, align 4, !dbg !376
  %702 = load i32, i32* %t1.i35, align 4, !dbg !376
  %add456.i = add i32 %701, %702, !dbg !376
  store i32 %add456.i, i32* %t0.i34, align 4, !dbg !376
  %703 = load i32, i32* %t0.i34, align 4, !dbg !376
  %conv457.i = trunc i32 %703 to i8, !dbg !376
  %conv458.i = zext i8 %conv457.i to i32, !dbg !376
  %and459.i = and i32 %conv458.i, 255, !dbg !376
  %idxprom460.i = sext i32 %and459.i to i64, !dbg !376
  %arrayidx461.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom460.i, !dbg !376
  %704 = load i32, i32* %arrayidx461.i, align 4, !dbg !376
  %705 = load i32, i32* %t0.i34, align 4, !dbg !376
  %shr462.i = lshr i32 %705, 8, !dbg !376
  %conv463.i = trunc i32 %shr462.i to i8, !dbg !376
  %conv464.i = zext i8 %conv463.i to i32, !dbg !376
  %and465.i = and i32 %conv464.i, 255, !dbg !376
  %idxprom466.i = sext i32 %and465.i to i64, !dbg !376
  %arrayidx467.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom466.i, !dbg !376
  %706 = load i32, i32* %arrayidx467.i, align 4, !dbg !376
  %xor468.i = xor i32 %704, %706, !dbg !376
  %707 = load i32, i32* %t0.i34, align 4, !dbg !376
  %shr469.i = lshr i32 %707, 16, !dbg !376
  %conv470.i155 = trunc i32 %shr469.i to i8, !dbg !376
  %conv471.i = zext i8 %conv470.i155 to i32, !dbg !376
  %and472.i = and i32 %conv471.i, 255, !dbg !376
  %idxprom473.i = sext i32 %and472.i to i64, !dbg !376
  %arrayidx474.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom473.i, !dbg !376
  %708 = load i32, i32* %arrayidx474.i, align 4, !dbg !376
  %xor475.i = xor i32 %xor468.i, %708, !dbg !376
  %709 = load i32, i32* %t0.i34, align 4, !dbg !376
  %shr476.i = lshr i32 %709, 24, !dbg !376
  %conv477.i = trunc i32 %shr476.i to i8, !dbg !376
  %conv478.i = zext i8 %conv477.i to i32, !dbg !376
  %and479.i = and i32 %conv478.i, 255, !dbg !376
  %idxprom480.i = sext i32 %and479.i to i64, !dbg !376
  %arrayidx481.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom480.i, !dbg !376
  %710 = load i32, i32* %arrayidx481.i, align 4, !dbg !376
  %xor482.i = xor i32 %xor475.i, %710, !dbg !376
  store i32 %xor482.i, i32* %t0.i34, align 4, !dbg !376
  %711 = load i32, i32* %t1.i35, align 4, !dbg !376
  %712 = load i32, i32* %t0.i34, align 4, !dbg !376
  %add483.i = add i32 %711, %712, !dbg !376
  store i32 %add483.i, i32* %t1.i35, align 4, !dbg !376
  %713 = load i32, i32* %t1.i35, align 4, !dbg !376
  %conv484.i = trunc i32 %713 to i8, !dbg !376
  %conv485.i = zext i8 %conv484.i to i32, !dbg !376
  %and486.i = and i32 %conv485.i, 255, !dbg !376
  %idxprom487.i = sext i32 %and486.i to i64, !dbg !376
  %arrayidx488.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom487.i, !dbg !376
  %714 = load i32, i32* %arrayidx488.i, align 4, !dbg !376
  %715 = load i32, i32* %t1.i35, align 4, !dbg !376
  %shr489.i = lshr i32 %715, 8, !dbg !376
  %conv490.i156 = trunc i32 %shr489.i to i8, !dbg !376
  %conv491.i = zext i8 %conv490.i156 to i32, !dbg !376
  %and492.i = and i32 %conv491.i, 255, !dbg !376
  %idxprom493.i = sext i32 %and492.i to i64, !dbg !376
  %arrayidx494.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom493.i, !dbg !376
  %716 = load i32, i32* %arrayidx494.i, align 4, !dbg !376
  %xor495.i = xor i32 %714, %716, !dbg !376
  %717 = load i32, i32* %t1.i35, align 4, !dbg !376
  %shr496.i = lshr i32 %717, 16, !dbg !376
  %conv497.i = trunc i32 %shr496.i to i8, !dbg !376
  %conv498.i157 = zext i8 %conv497.i to i32, !dbg !376
  %and499.i = and i32 %conv498.i157, 255, !dbg !376
  %idxprom500.i = sext i32 %and499.i to i64, !dbg !376
  %arrayidx501.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom500.i, !dbg !376
  %718 = load i32, i32* %arrayidx501.i, align 4, !dbg !376
  %xor502.i = xor i32 %xor495.i, %718, !dbg !376
  %719 = load i32, i32* %t1.i35, align 4, !dbg !376
  %shr503.i158 = lshr i32 %719, 24, !dbg !376
  %conv504.i159 = trunc i32 %shr503.i158 to i8, !dbg !376
  %conv505.i160 = zext i8 %conv504.i159 to i32, !dbg !376
  %and506.i161 = and i32 %conv505.i160, 255, !dbg !376
  %idxprom507.i162 = sext i32 %and506.i161 to i64, !dbg !376
  %arrayidx508.i163 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom507.i162, !dbg !376
  %720 = load i32, i32* %arrayidx508.i163, align 4, !dbg !376
  %xor509.i164 = xor i32 %xor502.i, %720, !dbg !376
  store i32 %xor509.i164, i32* %t1.i35, align 4, !dbg !376
  %721 = load i32, i32* %t0.i34, align 4, !dbg !376
  %722 = load i32, i32* %t1.i35, align 4, !dbg !376
  %add510.i = add i32 %721, %722, !dbg !376
  store i32 %add510.i, i32* %t0.i34, align 4, !dbg !376
  %723 = load i32, i32* %t0.i34, align 4, !dbg !376
  %724 = load i32, i32* %x1.i30, align 4, !dbg !376
  %xor511.i = xor i32 %724, %723, !dbg !376
  store i32 %xor511.i, i32* %x1.i30, align 4, !dbg !376
  %725 = load i32, i32* %t1.i35, align 4, !dbg !376
  %726 = load i32, i32* %x2.i31, align 4, !dbg !376
  %xor512.i = xor i32 %726, %725, !dbg !376
  store i32 %xor512.i, i32* %x2.i31, align 4, !dbg !376
  %727 = load i32, i32* %x1.i30, align 4, !dbg !377
  %728 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !377
  %data513.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %728, i32 0, i32 0, !dbg !377
  %arrayidx514.i = getelementptr inbounds [32 x i32], [32 x i32]* %data513.i, i64 0, i64 10, !dbg !377
  %729 = load i32, i32* %arrayidx514.i, align 4, !dbg !377
  %xor515.i = xor i32 %727, %729, !dbg !377
  store i32 %xor515.i, i32* %t0.i34, align 4, !dbg !377
  %730 = load i32, i32* %x2.i31, align 4, !dbg !377
  %731 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !377
  %data516.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %731, i32 0, i32 0, !dbg !377
  %arrayidx517.i = getelementptr inbounds [32 x i32], [32 x i32]* %data516.i, i64 0, i64 11, !dbg !377
  %732 = load i32, i32* %arrayidx517.i, align 4, !dbg !377
  %xor518.i = xor i32 %730, %732, !dbg !377
  store i32 %xor518.i, i32* %t1.i35, align 4, !dbg !377
  %733 = load i32, i32* %t0.i34, align 4, !dbg !377
  %734 = load i32, i32* %t1.i35, align 4, !dbg !377
  %xor519.i = xor i32 %734, %733, !dbg !377
  store i32 %xor519.i, i32* %t1.i35, align 4, !dbg !377
  %735 = load i32, i32* %t1.i35, align 4, !dbg !377
  %conv520.i = trunc i32 %735 to i8, !dbg !377
  %conv521.i = zext i8 %conv520.i to i32, !dbg !377
  %and522.i = and i32 %conv521.i, 255, !dbg !377
  %idxprom523.i = sext i32 %and522.i to i64, !dbg !377
  %arrayidx524.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom523.i, !dbg !377
  %736 = load i32, i32* %arrayidx524.i, align 4, !dbg !377
  %737 = load i32, i32* %t1.i35, align 4, !dbg !377
  %shr525.i = lshr i32 %737, 8, !dbg !377
  %conv526.i = trunc i32 %shr525.i to i8, !dbg !377
  %conv527.i = zext i8 %conv526.i to i32, !dbg !377
  %and528.i = and i32 %conv527.i, 255, !dbg !377
  %idxprom529.i = sext i32 %and528.i to i64, !dbg !377
  %arrayidx530.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom529.i, !dbg !377
  %738 = load i32, i32* %arrayidx530.i, align 4, !dbg !377
  %xor531.i = xor i32 %736, %738, !dbg !377
  %739 = load i32, i32* %t1.i35, align 4, !dbg !377
  %shr532.i = lshr i32 %739, 16, !dbg !377
  %conv533.i = trunc i32 %shr532.i to i8, !dbg !377
  %conv534.i = zext i8 %conv533.i to i32, !dbg !377
  %and535.i = and i32 %conv534.i, 255, !dbg !377
  %idxprom536.i = sext i32 %and535.i to i64, !dbg !377
  %arrayidx537.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom536.i, !dbg !377
  %740 = load i32, i32* %arrayidx537.i, align 4, !dbg !377
  %xor538.i = xor i32 %xor531.i, %740, !dbg !377
  %741 = load i32, i32* %t1.i35, align 4, !dbg !377
  %shr539.i = lshr i32 %741, 24, !dbg !377
  %conv540.i = trunc i32 %shr539.i to i8, !dbg !377
  %conv541.i = zext i8 %conv540.i to i32, !dbg !377
  %and542.i = and i32 %conv541.i, 255, !dbg !377
  %idxprom543.i = sext i32 %and542.i to i64, !dbg !377
  %arrayidx544.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom543.i, !dbg !377
  %742 = load i32, i32* %arrayidx544.i, align 4, !dbg !377
  %xor545.i = xor i32 %xor538.i, %742, !dbg !377
  store i32 %xor545.i, i32* %t1.i35, align 4, !dbg !377
  %743 = load i32, i32* %t0.i34, align 4, !dbg !377
  %744 = load i32, i32* %t1.i35, align 4, !dbg !377
  %add546.i = add i32 %743, %744, !dbg !377
  store i32 %add546.i, i32* %t0.i34, align 4, !dbg !377
  %745 = load i32, i32* %t0.i34, align 4, !dbg !377
  %conv547.i = trunc i32 %745 to i8, !dbg !377
  %conv548.i = zext i8 %conv547.i to i32, !dbg !377
  %and549.i = and i32 %conv548.i, 255, !dbg !377
  %idxprom550.i = sext i32 %and549.i to i64, !dbg !377
  %arrayidx551.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom550.i, !dbg !377
  %746 = load i32, i32* %arrayidx551.i, align 4, !dbg !377
  %747 = load i32, i32* %t0.i34, align 4, !dbg !377
  %shr552.i = lshr i32 %747, 8, !dbg !377
  %conv553.i = trunc i32 %shr552.i to i8, !dbg !377
  %conv554.i = zext i8 %conv553.i to i32, !dbg !377
  %and555.i = and i32 %conv554.i, 255, !dbg !377
  %idxprom556.i = sext i32 %and555.i to i64, !dbg !377
  %arrayidx557.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom556.i, !dbg !377
  %748 = load i32, i32* %arrayidx557.i, align 4, !dbg !377
  %xor558.i = xor i32 %746, %748, !dbg !377
  %749 = load i32, i32* %t0.i34, align 4, !dbg !377
  %shr559.i = lshr i32 %749, 16, !dbg !377
  %conv560.i = trunc i32 %shr559.i to i8, !dbg !377
  %conv561.i = zext i8 %conv560.i to i32, !dbg !377
  %and562.i = and i32 %conv561.i, 255, !dbg !377
  %idxprom563.i = sext i32 %and562.i to i64, !dbg !377
  %arrayidx564.i165 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom563.i, !dbg !377
  %750 = load i32, i32* %arrayidx564.i165, align 4, !dbg !377
  %xor565.i = xor i32 %xor558.i, %750, !dbg !377
  %751 = load i32, i32* %t0.i34, align 4, !dbg !377
  %shr566.i = lshr i32 %751, 24, !dbg !377
  %conv567.i166 = trunc i32 %shr566.i to i8, !dbg !377
  %conv568.i = zext i8 %conv567.i166 to i32, !dbg !377
  %and569.i = and i32 %conv568.i, 255, !dbg !377
  %idxprom570.i = sext i32 %and569.i to i64, !dbg !377
  %arrayidx571.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom570.i, !dbg !377
  %752 = load i32, i32* %arrayidx571.i, align 4, !dbg !377
  %xor572.i = xor i32 %xor565.i, %752, !dbg !377
  store i32 %xor572.i, i32* %t0.i34, align 4, !dbg !377
  %753 = load i32, i32* %t1.i35, align 4, !dbg !377
  %754 = load i32, i32* %t0.i34, align 4, !dbg !377
  %add573.i = add i32 %753, %754, !dbg !377
  store i32 %add573.i, i32* %t1.i35, align 4, !dbg !377
  %755 = load i32, i32* %t1.i35, align 4, !dbg !377
  %conv574.i = trunc i32 %755 to i8, !dbg !377
  %conv575.i = zext i8 %conv574.i to i32, !dbg !377
  %and576.i = and i32 %conv575.i, 255, !dbg !377
  %idxprom577.i = sext i32 %and576.i to i64, !dbg !377
  %arrayidx578.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom577.i, !dbg !377
  %756 = load i32, i32* %arrayidx578.i, align 4, !dbg !377
  %757 = load i32, i32* %t1.i35, align 4, !dbg !377
  %shr579.i = lshr i32 %757, 8, !dbg !377
  %conv580.i167 = trunc i32 %shr579.i to i8, !dbg !377
  %conv581.i = zext i8 %conv580.i167 to i32, !dbg !377
  %and582.i = and i32 %conv581.i, 255, !dbg !377
  %idxprom583.i = sext i32 %and582.i to i64, !dbg !377
  %arrayidx584.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom583.i, !dbg !377
  %758 = load i32, i32* %arrayidx584.i, align 4, !dbg !377
  %xor585.i = xor i32 %756, %758, !dbg !377
  %759 = load i32, i32* %t1.i35, align 4, !dbg !377
  %shr586.i = lshr i32 %759, 16, !dbg !377
  %conv587.i168 = trunc i32 %shr586.i to i8, !dbg !377
  %conv588.i = zext i8 %conv587.i168 to i32, !dbg !377
  %and589.i = and i32 %conv588.i, 255, !dbg !377
  %idxprom590.i = sext i32 %and589.i to i64, !dbg !377
  %arrayidx591.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom590.i, !dbg !377
  %760 = load i32, i32* %arrayidx591.i, align 4, !dbg !377
  %xor592.i = xor i32 %xor585.i, %760, !dbg !377
  %761 = load i32, i32* %t1.i35, align 4, !dbg !377
  %shr593.i = lshr i32 %761, 24, !dbg !377
  %conv594.i = trunc i32 %shr593.i to i8, !dbg !377
  %conv595.i = zext i8 %conv594.i to i32, !dbg !377
  %and596.i = and i32 %conv595.i, 255, !dbg !377
  %idxprom597.i = sext i32 %and596.i to i64, !dbg !377
  %arrayidx598.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom597.i, !dbg !377
  %762 = load i32, i32* %arrayidx598.i, align 4, !dbg !377
  %xor599.i = xor i32 %xor592.i, %762, !dbg !377
  store i32 %xor599.i, i32* %t1.i35, align 4, !dbg !377
  %763 = load i32, i32* %t0.i34, align 4, !dbg !377
  %764 = load i32, i32* %t1.i35, align 4, !dbg !377
  %add600.i = add i32 %763, %764, !dbg !377
  store i32 %add600.i, i32* %t0.i34, align 4, !dbg !377
  %765 = load i32, i32* %t0.i34, align 4, !dbg !377
  %766 = load i32, i32* %x3.i32, align 4, !dbg !377
  %xor601.i = xor i32 %766, %765, !dbg !377
  store i32 %xor601.i, i32* %x3.i32, align 4, !dbg !377
  %767 = load i32, i32* %t1.i35, align 4, !dbg !377
  %768 = load i32, i32* %x4.i33, align 4, !dbg !377
  %xor602.i = xor i32 %768, %767, !dbg !377
  store i32 %xor602.i, i32* %x4.i33, align 4, !dbg !377
  %769 = load i32, i32* %x3.i32, align 4, !dbg !378
  %770 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !378
  %data603.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %770, i32 0, i32 0, !dbg !378
  %arrayidx604.i = getelementptr inbounds [32 x i32], [32 x i32]* %data603.i, i64 0, i64 12, !dbg !378
  %771 = load i32, i32* %arrayidx604.i, align 4, !dbg !378
  %xor605.i = xor i32 %769, %771, !dbg !378
  store i32 %xor605.i, i32* %t0.i34, align 4, !dbg !378
  %772 = load i32, i32* %x4.i33, align 4, !dbg !378
  %773 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !378
  %data606.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %773, i32 0, i32 0, !dbg !378
  %arrayidx607.i = getelementptr inbounds [32 x i32], [32 x i32]* %data606.i, i64 0, i64 13, !dbg !378
  %774 = load i32, i32* %arrayidx607.i, align 4, !dbg !378
  %xor608.i = xor i32 %772, %774, !dbg !378
  store i32 %xor608.i, i32* %t1.i35, align 4, !dbg !378
  %775 = load i32, i32* %t0.i34, align 4, !dbg !378
  %776 = load i32, i32* %t1.i35, align 4, !dbg !378
  %xor609.i = xor i32 %776, %775, !dbg !378
  store i32 %xor609.i, i32* %t1.i35, align 4, !dbg !378
  %777 = load i32, i32* %t1.i35, align 4, !dbg !378
  %conv610.i = trunc i32 %777 to i8, !dbg !378
  %conv611.i169 = zext i8 %conv610.i to i32, !dbg !378
  %and612.i = and i32 %conv611.i169, 255, !dbg !378
  %idxprom613.i = sext i32 %and612.i to i64, !dbg !378
  %arrayidx614.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom613.i, !dbg !378
  %778 = load i32, i32* %arrayidx614.i, align 4, !dbg !378
  %779 = load i32, i32* %t1.i35, align 4, !dbg !378
  %shr615.i = lshr i32 %779, 8, !dbg !378
  %conv616.i = trunc i32 %shr615.i to i8, !dbg !378
  %conv617.i = zext i8 %conv616.i to i32, !dbg !378
  %and618.i = and i32 %conv617.i, 255, !dbg !378
  %idxprom619.i = sext i32 %and618.i to i64, !dbg !378
  %arrayidx620.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom619.i, !dbg !378
  %780 = load i32, i32* %arrayidx620.i, align 4, !dbg !378
  %xor621.i = xor i32 %778, %780, !dbg !378
  %781 = load i32, i32* %t1.i35, align 4, !dbg !378
  %shr622.i = lshr i32 %781, 16, !dbg !378
  %conv623.i = trunc i32 %shr622.i to i8, !dbg !378
  %conv624.i = zext i8 %conv623.i to i32, !dbg !378
  %and625.i = and i32 %conv624.i, 255, !dbg !378
  %idxprom626.i = sext i32 %and625.i to i64, !dbg !378
  %arrayidx627.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom626.i, !dbg !378
  %782 = load i32, i32* %arrayidx627.i, align 4, !dbg !378
  %xor628.i = xor i32 %xor621.i, %782, !dbg !378
  %783 = load i32, i32* %t1.i35, align 4, !dbg !378
  %shr629.i = lshr i32 %783, 24, !dbg !378
  %conv630.i = trunc i32 %shr629.i to i8, !dbg !378
  %conv631.i = zext i8 %conv630.i to i32, !dbg !378
  %and632.i = and i32 %conv631.i, 255, !dbg !378
  %idxprom633.i = sext i32 %and632.i to i64, !dbg !378
  %arrayidx634.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom633.i, !dbg !378
  %784 = load i32, i32* %arrayidx634.i, align 4, !dbg !378
  %xor635.i = xor i32 %xor628.i, %784, !dbg !378
  store i32 %xor635.i, i32* %t1.i35, align 4, !dbg !378
  %785 = load i32, i32* %t0.i34, align 4, !dbg !378
  %786 = load i32, i32* %t1.i35, align 4, !dbg !378
  %add636.i = add i32 %785, %786, !dbg !378
  store i32 %add636.i, i32* %t0.i34, align 4, !dbg !378
  %787 = load i32, i32* %t0.i34, align 4, !dbg !378
  %conv637.i = trunc i32 %787 to i8, !dbg !378
  %conv638.i = zext i8 %conv637.i to i32, !dbg !378
  %and639.i = and i32 %conv638.i, 255, !dbg !378
  %idxprom640.i = sext i32 %and639.i to i64, !dbg !378
  %arrayidx641.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom640.i, !dbg !378
  %788 = load i32, i32* %arrayidx641.i, align 4, !dbg !378
  %789 = load i32, i32* %t0.i34, align 4, !dbg !378
  %shr642.i = lshr i32 %789, 8, !dbg !378
  %conv643.i = trunc i32 %shr642.i to i8, !dbg !378
  %conv644.i = zext i8 %conv643.i to i32, !dbg !378
  %and645.i = and i32 %conv644.i, 255, !dbg !378
  %idxprom646.i = sext i32 %and645.i to i64, !dbg !378
  %arrayidx647.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom646.i, !dbg !378
  %790 = load i32, i32* %arrayidx647.i, align 4, !dbg !378
  %xor648.i = xor i32 %788, %790, !dbg !378
  %791 = load i32, i32* %t0.i34, align 4, !dbg !378
  %shr649.i = lshr i32 %791, 16, !dbg !378
  %conv650.i = trunc i32 %shr649.i to i8, !dbg !378
  %conv651.i = zext i8 %conv650.i to i32, !dbg !378
  %and652.i = and i32 %conv651.i, 255, !dbg !378
  %idxprom653.i = sext i32 %and652.i to i64, !dbg !378
  %arrayidx654.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom653.i, !dbg !378
  %792 = load i32, i32* %arrayidx654.i, align 4, !dbg !378
  %xor655.i = xor i32 %xor648.i, %792, !dbg !378
  %793 = load i32, i32* %t0.i34, align 4, !dbg !378
  %shr656.i = lshr i32 %793, 24, !dbg !378
  %conv657.i = trunc i32 %shr656.i to i8, !dbg !378
  %conv658.i = zext i8 %conv657.i to i32, !dbg !378
  %and659.i = and i32 %conv658.i, 255, !dbg !378
  %idxprom660.i = sext i32 %and659.i to i64, !dbg !378
  %arrayidx661.i170 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom660.i, !dbg !378
  %794 = load i32, i32* %arrayidx661.i170, align 4, !dbg !378
  %xor662.i = xor i32 %xor655.i, %794, !dbg !378
  store i32 %xor662.i, i32* %t0.i34, align 4, !dbg !378
  %795 = load i32, i32* %t1.i35, align 4, !dbg !378
  %796 = load i32, i32* %t0.i34, align 4, !dbg !378
  %add663.i = add i32 %795, %796, !dbg !378
  store i32 %add663.i, i32* %t1.i35, align 4, !dbg !378
  %797 = load i32, i32* %t1.i35, align 4, !dbg !378
  %conv664.i = trunc i32 %797 to i8, !dbg !378
  %conv665.i = zext i8 %conv664.i to i32, !dbg !378
  %and666.i = and i32 %conv665.i, 255, !dbg !378
  %idxprom667.i = sext i32 %and666.i to i64, !dbg !378
  %arrayidx668.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom667.i, !dbg !378
  %798 = load i32, i32* %arrayidx668.i, align 4, !dbg !378
  %799 = load i32, i32* %t1.i35, align 4, !dbg !378
  %shr669.i = lshr i32 %799, 8, !dbg !378
  %conv670.i = trunc i32 %shr669.i to i8, !dbg !378
  %conv671.i = zext i8 %conv670.i to i32, !dbg !378
  %and672.i = and i32 %conv671.i, 255, !dbg !378
  %idxprom673.i = sext i32 %and672.i to i64, !dbg !378
  %arrayidx674.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom673.i, !dbg !378
  %800 = load i32, i32* %arrayidx674.i, align 4, !dbg !378
  %xor675.i = xor i32 %798, %800, !dbg !378
  %801 = load i32, i32* %t1.i35, align 4, !dbg !378
  %shr676.i = lshr i32 %801, 16, !dbg !378
  %conv677.i = trunc i32 %shr676.i to i8, !dbg !378
  %conv678.i = zext i8 %conv677.i to i32, !dbg !378
  %and679.i = and i32 %conv678.i, 255, !dbg !378
  %idxprom680.i = sext i32 %and679.i to i64, !dbg !378
  %arrayidx681.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom680.i, !dbg !378
  %802 = load i32, i32* %arrayidx681.i, align 4, !dbg !378
  %xor682.i = xor i32 %xor675.i, %802, !dbg !378
  %803 = load i32, i32* %t1.i35, align 4, !dbg !378
  %shr683.i = lshr i32 %803, 24, !dbg !378
  %conv684.i = trunc i32 %shr683.i to i8, !dbg !378
  %conv685.i = zext i8 %conv684.i to i32, !dbg !378
  %and686.i = and i32 %conv685.i, 255, !dbg !378
  %idxprom687.i = sext i32 %and686.i to i64, !dbg !378
  %arrayidx688.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom687.i, !dbg !378
  %804 = load i32, i32* %arrayidx688.i, align 4, !dbg !378
  %xor689.i = xor i32 %xor682.i, %804, !dbg !378
  store i32 %xor689.i, i32* %t1.i35, align 4, !dbg !378
  %805 = load i32, i32* %t0.i34, align 4, !dbg !378
  %806 = load i32, i32* %t1.i35, align 4, !dbg !378
  %add690.i = add i32 %805, %806, !dbg !378
  store i32 %add690.i, i32* %t0.i34, align 4, !dbg !378
  %807 = load i32, i32* %t0.i34, align 4, !dbg !378
  %808 = load i32, i32* %x1.i30, align 4, !dbg !378
  %xor691.i171 = xor i32 %808, %807, !dbg !378
  store i32 %xor691.i171, i32* %x1.i30, align 4, !dbg !378
  %809 = load i32, i32* %t1.i35, align 4, !dbg !378
  %810 = load i32, i32* %x2.i31, align 4, !dbg !378
  %xor692.i = xor i32 %810, %809, !dbg !378
  store i32 %xor692.i, i32* %x2.i31, align 4, !dbg !378
  %811 = load i32, i32* %x1.i30, align 4, !dbg !379
  %812 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !379
  %data693.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %812, i32 0, i32 0, !dbg !379
  %arrayidx694.i = getelementptr inbounds [32 x i32], [32 x i32]* %data693.i, i64 0, i64 14, !dbg !379
  %813 = load i32, i32* %arrayidx694.i, align 4, !dbg !379
  %xor695.i = xor i32 %811, %813, !dbg !379
  store i32 %xor695.i, i32* %t0.i34, align 4, !dbg !379
  %814 = load i32, i32* %x2.i31, align 4, !dbg !379
  %815 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !379
  %data696.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %815, i32 0, i32 0, !dbg !379
  %arrayidx697.i172 = getelementptr inbounds [32 x i32], [32 x i32]* %data696.i, i64 0, i64 15, !dbg !379
  %816 = load i32, i32* %arrayidx697.i172, align 4, !dbg !379
  %xor698.i173 = xor i32 %814, %816, !dbg !379
  store i32 %xor698.i173, i32* %t1.i35, align 4, !dbg !379
  %817 = load i32, i32* %t0.i34, align 4, !dbg !379
  %818 = load i32, i32* %t1.i35, align 4, !dbg !379
  %xor699.i = xor i32 %818, %817, !dbg !379
  store i32 %xor699.i, i32* %t1.i35, align 4, !dbg !379
  %819 = load i32, i32* %t1.i35, align 4, !dbg !379
  %conv700.i = trunc i32 %819 to i8, !dbg !379
  %conv701.i = zext i8 %conv700.i to i32, !dbg !379
  %and702.i = and i32 %conv701.i, 255, !dbg !379
  %idxprom703.i = sext i32 %and702.i to i64, !dbg !379
  %arrayidx704.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom703.i, !dbg !379
  %820 = load i32, i32* %arrayidx704.i, align 4, !dbg !379
  %821 = load i32, i32* %t1.i35, align 4, !dbg !379
  %shr705.i = lshr i32 %821, 8, !dbg !379
  %conv706.i = trunc i32 %shr705.i to i8, !dbg !379
  %conv707.i = zext i8 %conv706.i to i32, !dbg !379
  %and708.i = and i32 %conv707.i, 255, !dbg !379
  %idxprom709.i = sext i32 %and708.i to i64, !dbg !379
  %arrayidx710.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom709.i, !dbg !379
  %822 = load i32, i32* %arrayidx710.i, align 4, !dbg !379
  %xor711.i = xor i32 %820, %822, !dbg !379
  %823 = load i32, i32* %t1.i35, align 4, !dbg !379
  %shr712.i = lshr i32 %823, 16, !dbg !379
  %conv713.i = trunc i32 %shr712.i to i8, !dbg !379
  %conv714.i = zext i8 %conv713.i to i32, !dbg !379
  %and715.i = and i32 %conv714.i, 255, !dbg !379
  %idxprom716.i = sext i32 %and715.i to i64, !dbg !379
  %arrayidx717.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom716.i, !dbg !379
  %824 = load i32, i32* %arrayidx717.i, align 4, !dbg !379
  %xor718.i = xor i32 %xor711.i, %824, !dbg !379
  %825 = load i32, i32* %t1.i35, align 4, !dbg !379
  %shr719.i = lshr i32 %825, 24, !dbg !379
  %conv720.i = trunc i32 %shr719.i to i8, !dbg !379
  %conv721.i = zext i8 %conv720.i to i32, !dbg !379
  %and722.i = and i32 %conv721.i, 255, !dbg !379
  %idxprom723.i = sext i32 %and722.i to i64, !dbg !379
  %arrayidx724.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom723.i, !dbg !379
  %826 = load i32, i32* %arrayidx724.i, align 4, !dbg !379
  %xor725.i = xor i32 %xor718.i, %826, !dbg !379
  store i32 %xor725.i, i32* %t1.i35, align 4, !dbg !379
  %827 = load i32, i32* %t0.i34, align 4, !dbg !379
  %828 = load i32, i32* %t1.i35, align 4, !dbg !379
  %add726.i = add i32 %827, %828, !dbg !379
  store i32 %add726.i, i32* %t0.i34, align 4, !dbg !379
  %829 = load i32, i32* %t0.i34, align 4, !dbg !379
  %conv727.i = trunc i32 %829 to i8, !dbg !379
  %conv728.i = zext i8 %conv727.i to i32, !dbg !379
  %and729.i = and i32 %conv728.i, 255, !dbg !379
  %idxprom730.i = sext i32 %and729.i to i64, !dbg !379
  %arrayidx731.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom730.i, !dbg !379
  %830 = load i32, i32* %arrayidx731.i, align 4, !dbg !379
  %831 = load i32, i32* %t0.i34, align 4, !dbg !379
  %shr732.i174 = lshr i32 %831, 8, !dbg !379
  %conv733.i = trunc i32 %shr732.i174 to i8, !dbg !379
  %conv734.i = zext i8 %conv733.i to i32, !dbg !379
  %and735.i = and i32 %conv734.i, 255, !dbg !379
  %idxprom736.i = sext i32 %and735.i to i64, !dbg !379
  %arrayidx737.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom736.i, !dbg !379
  %832 = load i32, i32* %arrayidx737.i, align 4, !dbg !379
  %xor738.i = xor i32 %830, %832, !dbg !379
  %833 = load i32, i32* %t0.i34, align 4, !dbg !379
  %shr739.i = lshr i32 %833, 16, !dbg !379
  %conv740.i = trunc i32 %shr739.i to i8, !dbg !379
  %conv741.i175 = zext i8 %conv740.i to i32, !dbg !379
  %and742.i = and i32 %conv741.i175, 255, !dbg !379
  %idxprom743.i = sext i32 %and742.i to i64, !dbg !379
  %arrayidx744.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom743.i, !dbg !379
  %834 = load i32, i32* %arrayidx744.i, align 4, !dbg !379
  %xor745.i = xor i32 %xor738.i, %834, !dbg !379
  %835 = load i32, i32* %t0.i34, align 4, !dbg !379
  %shr746.i176 = lshr i32 %835, 24, !dbg !379
  %conv747.i177 = trunc i32 %shr746.i176 to i8, !dbg !379
  %conv748.i178 = zext i8 %conv747.i177 to i32, !dbg !379
  %and749.i179 = and i32 %conv748.i178, 255, !dbg !379
  %idxprom750.i180 = sext i32 %and749.i179 to i64, !dbg !379
  %arrayidx751.i181 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom750.i180, !dbg !379
  %836 = load i32, i32* %arrayidx751.i181, align 4, !dbg !379
  %xor752.i182 = xor i32 %xor745.i, %836, !dbg !379
  store i32 %xor752.i182, i32* %t0.i34, align 4, !dbg !379
  %837 = load i32, i32* %t1.i35, align 4, !dbg !379
  %838 = load i32, i32* %t0.i34, align 4, !dbg !379
  %add753.i = add i32 %837, %838, !dbg !379
  store i32 %add753.i, i32* %t1.i35, align 4, !dbg !379
  %839 = load i32, i32* %t1.i35, align 4, !dbg !379
  %conv754.i183 = trunc i32 %839 to i8, !dbg !379
  %conv755.i184 = zext i8 %conv754.i183 to i32, !dbg !379
  %and756.i185 = and i32 %conv755.i184, 255, !dbg !379
  %idxprom757.i186 = sext i32 %and756.i185 to i64, !dbg !379
  %arrayidx758.i187 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom757.i186, !dbg !379
  %840 = load i32, i32* %arrayidx758.i187, align 4, !dbg !379
  %841 = load i32, i32* %t1.i35, align 4, !dbg !379
  %shr759.i = lshr i32 %841, 8, !dbg !379
  %conv760.i = trunc i32 %shr759.i to i8, !dbg !379
  %conv761.i188 = zext i8 %conv760.i to i32, !dbg !379
  %and762.i = and i32 %conv761.i188, 255, !dbg !379
  %idxprom763.i = sext i32 %and762.i to i64, !dbg !379
  %arrayidx764.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom763.i, !dbg !379
  %842 = load i32, i32* %arrayidx764.i, align 4, !dbg !379
  %xor765.i = xor i32 %840, %842, !dbg !379
  %843 = load i32, i32* %t1.i35, align 4, !dbg !379
  %shr766.i = lshr i32 %843, 16, !dbg !379
  %conv767.i = trunc i32 %shr766.i to i8, !dbg !379
  %conv768.i = zext i8 %conv767.i to i32, !dbg !379
  %and769.i = and i32 %conv768.i, 255, !dbg !379
  %idxprom770.i = sext i32 %and769.i to i64, !dbg !379
  %arrayidx771.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom770.i, !dbg !379
  %844 = load i32, i32* %arrayidx771.i, align 4, !dbg !379
  %xor772.i = xor i32 %xor765.i, %844, !dbg !379
  %845 = load i32, i32* %t1.i35, align 4, !dbg !379
  %shr773.i = lshr i32 %845, 24, !dbg !379
  %conv774.i = trunc i32 %shr773.i to i8, !dbg !379
  %conv775.i = zext i8 %conv774.i to i32, !dbg !379
  %and776.i = and i32 %conv775.i, 255, !dbg !379
  %idxprom777.i = sext i32 %and776.i to i64, !dbg !379
  %arrayidx778.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom777.i, !dbg !379
  %846 = load i32, i32* %arrayidx778.i, align 4, !dbg !379
  %xor779.i = xor i32 %xor772.i, %846, !dbg !379
  store i32 %xor779.i, i32* %t1.i35, align 4, !dbg !379
  %847 = load i32, i32* %t0.i34, align 4, !dbg !379
  %848 = load i32, i32* %t1.i35, align 4, !dbg !379
  %add780.i = add i32 %847, %848, !dbg !379
  store i32 %add780.i, i32* %t0.i34, align 4, !dbg !379
  %849 = load i32, i32* %t0.i34, align 4, !dbg !379
  %850 = load i32, i32* %x3.i32, align 4, !dbg !379
  %xor781.i189 = xor i32 %850, %849, !dbg !379
  store i32 %xor781.i189, i32* %x3.i32, align 4, !dbg !379
  %851 = load i32, i32* %t1.i35, align 4, !dbg !379
  %852 = load i32, i32* %x4.i33, align 4, !dbg !379
  %xor782.i = xor i32 %852, %851, !dbg !379
  store i32 %xor782.i, i32* %x4.i33, align 4, !dbg !379
  %853 = load i32, i32* %x3.i32, align 4, !dbg !380
  %854 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !380
  %data783.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %854, i32 0, i32 0, !dbg !380
  %arrayidx784.i = getelementptr inbounds [32 x i32], [32 x i32]* %data783.i, i64 0, i64 16, !dbg !380
  %855 = load i32, i32* %arrayidx784.i, align 4, !dbg !380
  %xor785.i = xor i32 %853, %855, !dbg !380
  store i32 %xor785.i, i32* %t0.i34, align 4, !dbg !380
  %856 = load i32, i32* %x4.i33, align 4, !dbg !380
  %857 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !380
  %data786.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %857, i32 0, i32 0, !dbg !380
  %arrayidx787.i190 = getelementptr inbounds [32 x i32], [32 x i32]* %data786.i, i64 0, i64 17, !dbg !380
  %858 = load i32, i32* %arrayidx787.i190, align 4, !dbg !380
  %xor788.i191 = xor i32 %856, %858, !dbg !380
  store i32 %xor788.i191, i32* %t1.i35, align 4, !dbg !380
  %859 = load i32, i32* %t0.i34, align 4, !dbg !380
  %860 = load i32, i32* %t1.i35, align 4, !dbg !380
  %xor789.i = xor i32 %860, %859, !dbg !380
  store i32 %xor789.i, i32* %t1.i35, align 4, !dbg !380
  %861 = load i32, i32* %t1.i35, align 4, !dbg !380
  %conv790.i192 = trunc i32 %861 to i8, !dbg !380
  %conv791.i193 = zext i8 %conv790.i192 to i32, !dbg !380
  %and792.i194 = and i32 %conv791.i193, 255, !dbg !380
  %idxprom793.i195 = sext i32 %and792.i194 to i64, !dbg !380
  %arrayidx794.i196 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom793.i195, !dbg !380
  %862 = load i32, i32* %arrayidx794.i196, align 4, !dbg !380
  %863 = load i32, i32* %t1.i35, align 4, !dbg !380
  %shr795.i = lshr i32 %863, 8, !dbg !380
  %conv796.i = trunc i32 %shr795.i to i8, !dbg !380
  %conv797.i = zext i8 %conv796.i to i32, !dbg !380
  %and798.i = and i32 %conv797.i, 255, !dbg !380
  %idxprom799.i = sext i32 %and798.i to i64, !dbg !380
  %arrayidx800.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom799.i, !dbg !380
  %864 = load i32, i32* %arrayidx800.i, align 4, !dbg !380
  %xor801.i197 = xor i32 %862, %864, !dbg !380
  %865 = load i32, i32* %t1.i35, align 4, !dbg !380
  %shr802.i198 = lshr i32 %865, 16, !dbg !380
  %conv803.i = trunc i32 %shr802.i198 to i8, !dbg !380
  %conv804.i = zext i8 %conv803.i to i32, !dbg !380
  %and805.i = and i32 %conv804.i, 255, !dbg !380
  %idxprom806.i = sext i32 %and805.i to i64, !dbg !380
  %arrayidx807.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom806.i, !dbg !380
  %866 = load i32, i32* %arrayidx807.i, align 4, !dbg !380
  %xor808.i = xor i32 %xor801.i197, %866, !dbg !380
  %867 = load i32, i32* %t1.i35, align 4, !dbg !380
  %shr809.i = lshr i32 %867, 24, !dbg !380
  %conv810.i199 = trunc i32 %shr809.i to i8, !dbg !380
  %conv811.i = zext i8 %conv810.i199 to i32, !dbg !380
  %and812.i = and i32 %conv811.i, 255, !dbg !380
  %idxprom813.i = sext i32 %and812.i to i64, !dbg !380
  %arrayidx814.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom813.i, !dbg !380
  %868 = load i32, i32* %arrayidx814.i, align 4, !dbg !380
  %xor815.i = xor i32 %xor808.i, %868, !dbg !380
  store i32 %xor815.i, i32* %t1.i35, align 4, !dbg !380
  %869 = load i32, i32* %t0.i34, align 4, !dbg !380
  %870 = load i32, i32* %t1.i35, align 4, !dbg !380
  %add816.i = add i32 %869, %870, !dbg !380
  store i32 %add816.i, i32* %t0.i34, align 4, !dbg !380
  %871 = load i32, i32* %t0.i34, align 4, !dbg !380
  %conv817.i = trunc i32 %871 to i8, !dbg !380
  %conv818.i = zext i8 %conv817.i to i32, !dbg !380
  %and819.i = and i32 %conv818.i, 255, !dbg !380
  %idxprom820.i = sext i32 %and819.i to i64, !dbg !380
  %arrayidx821.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom820.i, !dbg !380
  %872 = load i32, i32* %arrayidx821.i, align 4, !dbg !380
  %873 = load i32, i32* %t0.i34, align 4, !dbg !380
  %shr822.i = lshr i32 %873, 8, !dbg !380
  %conv823.i200 = trunc i32 %shr822.i to i8, !dbg !380
  %conv824.i = zext i8 %conv823.i200 to i32, !dbg !380
  %and825.i = and i32 %conv824.i, 255, !dbg !380
  %idxprom826.i = sext i32 %and825.i to i64, !dbg !380
  %arrayidx827.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom826.i, !dbg !380
  %874 = load i32, i32* %arrayidx827.i, align 4, !dbg !380
  %xor828.i = xor i32 %872, %874, !dbg !380
  %875 = load i32, i32* %t0.i34, align 4, !dbg !380
  %shr829.i = lshr i32 %875, 16, !dbg !380
  %conv830.i201 = trunc i32 %shr829.i to i8, !dbg !380
  %conv831.i = zext i8 %conv830.i201 to i32, !dbg !380
  %and832.i = and i32 %conv831.i, 255, !dbg !380
  %idxprom833.i = sext i32 %and832.i to i64, !dbg !380
  %arrayidx834.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom833.i, !dbg !380
  %876 = load i32, i32* %arrayidx834.i, align 4, !dbg !380
  %xor835.i = xor i32 %xor828.i, %876, !dbg !380
  %877 = load i32, i32* %t0.i34, align 4, !dbg !380
  %shr836.i = lshr i32 %877, 24, !dbg !380
  %conv837.i = trunc i32 %shr836.i to i8, !dbg !380
  %conv838.i202 = zext i8 %conv837.i to i32, !dbg !380
  %and839.i = and i32 %conv838.i202, 255, !dbg !380
  %idxprom840.i = sext i32 %and839.i to i64, !dbg !380
  %arrayidx841.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom840.i, !dbg !380
  %878 = load i32, i32* %arrayidx841.i, align 4, !dbg !380
  %xor842.i = xor i32 %xor835.i, %878, !dbg !380
  store i32 %xor842.i, i32* %t0.i34, align 4, !dbg !380
  %879 = load i32, i32* %t1.i35, align 4, !dbg !380
  %880 = load i32, i32* %t0.i34, align 4, !dbg !380
  %add843.i = add i32 %879, %880, !dbg !380
  store i32 %add843.i, i32* %t1.i35, align 4, !dbg !380
  %881 = load i32, i32* %t1.i35, align 4, !dbg !380
  %conv844.i203 = trunc i32 %881 to i8, !dbg !380
  %conv845.i204 = zext i8 %conv844.i203 to i32, !dbg !380
  %and846.i205 = and i32 %conv845.i204, 255, !dbg !380
  %idxprom847.i206 = sext i32 %and846.i205 to i64, !dbg !380
  %arrayidx848.i207 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom847.i206, !dbg !380
  %882 = load i32, i32* %arrayidx848.i207, align 4, !dbg !380
  %883 = load i32, i32* %t1.i35, align 4, !dbg !380
  %shr849.i = lshr i32 %883, 8, !dbg !380
  %conv850.i = trunc i32 %shr849.i to i8, !dbg !380
  %conv851.i208 = zext i8 %conv850.i to i32, !dbg !380
  %and852.i = and i32 %conv851.i208, 255, !dbg !380
  %idxprom853.i = sext i32 %and852.i to i64, !dbg !380
  %arrayidx854.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom853.i, !dbg !380
  %884 = load i32, i32* %arrayidx854.i, align 4, !dbg !380
  %xor855.i = xor i32 %882, %884, !dbg !380
  %885 = load i32, i32* %t1.i35, align 4, !dbg !380
  %shr856.i = lshr i32 %885, 16, !dbg !380
  %conv857.i = trunc i32 %shr856.i to i8, !dbg !380
  %conv858.i209 = zext i8 %conv857.i to i32, !dbg !380
  %and859.i = and i32 %conv858.i209, 255, !dbg !380
  %idxprom860.i = sext i32 %and859.i to i64, !dbg !380
  %arrayidx861.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom860.i, !dbg !380
  %886 = load i32, i32* %arrayidx861.i, align 4, !dbg !380
  %xor862.i = xor i32 %xor855.i, %886, !dbg !380
  %887 = load i32, i32* %t1.i35, align 4, !dbg !380
  %shr863.i = lshr i32 %887, 24, !dbg !380
  %conv864.i = trunc i32 %shr863.i to i8, !dbg !380
  %conv865.i = zext i8 %conv864.i to i32, !dbg !380
  %and866.i = and i32 %conv865.i, 255, !dbg !380
  %idxprom867.i = sext i32 %and866.i to i64, !dbg !380
  %arrayidx868.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom867.i, !dbg !380
  %888 = load i32, i32* %arrayidx868.i, align 4, !dbg !380
  %xor869.i210 = xor i32 %xor862.i, %888, !dbg !380
  store i32 %xor869.i210, i32* %t1.i35, align 4, !dbg !380
  %889 = load i32, i32* %t0.i34, align 4, !dbg !380
  %890 = load i32, i32* %t1.i35, align 4, !dbg !380
  %add870.i = add i32 %889, %890, !dbg !380
  store i32 %add870.i, i32* %t0.i34, align 4, !dbg !380
  %891 = load i32, i32* %t0.i34, align 4, !dbg !380
  %892 = load i32, i32* %x1.i30, align 4, !dbg !380
  %xor871.i = xor i32 %892, %891, !dbg !380
  store i32 %xor871.i, i32* %x1.i30, align 4, !dbg !380
  %893 = load i32, i32* %t1.i35, align 4, !dbg !380
  %894 = load i32, i32* %x2.i31, align 4, !dbg !380
  %xor872.i211 = xor i32 %894, %893, !dbg !380
  store i32 %xor872.i211, i32* %x2.i31, align 4, !dbg !380
  %895 = load i32, i32* %x1.i30, align 4, !dbg !381
  %896 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !381
  %data873.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %896, i32 0, i32 0, !dbg !381
  %arrayidx874.i = getelementptr inbounds [32 x i32], [32 x i32]* %data873.i, i64 0, i64 18, !dbg !381
  %897 = load i32, i32* %arrayidx874.i, align 4, !dbg !381
  %xor875.i = xor i32 %895, %897, !dbg !381
  store i32 %xor875.i, i32* %t0.i34, align 4, !dbg !381
  %898 = load i32, i32* %x2.i31, align 4, !dbg !381
  %899 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !381
  %data876.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %899, i32 0, i32 0, !dbg !381
  %arrayidx877.i = getelementptr inbounds [32 x i32], [32 x i32]* %data876.i, i64 0, i64 19, !dbg !381
  %900 = load i32, i32* %arrayidx877.i, align 4, !dbg !381
  %xor878.i = xor i32 %898, %900, !dbg !381
  store i32 %xor878.i, i32* %t1.i35, align 4, !dbg !381
  %901 = load i32, i32* %t0.i34, align 4, !dbg !381
  %902 = load i32, i32* %t1.i35, align 4, !dbg !381
  %xor879.i = xor i32 %902, %901, !dbg !381
  store i32 %xor879.i, i32* %t1.i35, align 4, !dbg !381
  %903 = load i32, i32* %t1.i35, align 4, !dbg !381
  %conv880.i = trunc i32 %903 to i8, !dbg !381
  %conv881.i = zext i8 %conv880.i to i32, !dbg !381
  %and882.i = and i32 %conv881.i, 255, !dbg !381
  %idxprom883.i = sext i32 %and882.i to i64, !dbg !381
  %arrayidx884.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom883.i, !dbg !381
  %904 = load i32, i32* %arrayidx884.i, align 4, !dbg !381
  %905 = load i32, i32* %t1.i35, align 4, !dbg !381
  %shr885.i = lshr i32 %905, 8, !dbg !381
  %conv886.i = trunc i32 %shr885.i to i8, !dbg !381
  %conv887.i = zext i8 %conv886.i to i32, !dbg !381
  %and888.i = and i32 %conv887.i, 255, !dbg !381
  %idxprom889.i = sext i32 %and888.i to i64, !dbg !381
  %arrayidx890.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom889.i, !dbg !381
  %906 = load i32, i32* %arrayidx890.i, align 4, !dbg !381
  %xor891.i = xor i32 %904, %906, !dbg !381
  %907 = load i32, i32* %t1.i35, align 4, !dbg !381
  %shr892.i = lshr i32 %907, 16, !dbg !381
  %conv893.i = trunc i32 %shr892.i to i8, !dbg !381
  %conv894.i = zext i8 %conv893.i to i32, !dbg !381
  %and895.i = and i32 %conv894.i, 255, !dbg !381
  %idxprom896.i = sext i32 %and895.i to i64, !dbg !381
  %arrayidx897.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom896.i, !dbg !381
  %908 = load i32, i32* %arrayidx897.i, align 4, !dbg !381
  %xor898.i = xor i32 %xor891.i, %908, !dbg !381
  %909 = load i32, i32* %t1.i35, align 4, !dbg !381
  %shr899.i = lshr i32 %909, 24, !dbg !381
  %conv900.i = trunc i32 %shr899.i to i8, !dbg !381
  %conv901.i = zext i8 %conv900.i to i32, !dbg !381
  %and902.i = and i32 %conv901.i, 255, !dbg !381
  %idxprom903.i = sext i32 %and902.i to i64, !dbg !381
  %arrayidx904.i212 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom903.i, !dbg !381
  %910 = load i32, i32* %arrayidx904.i212, align 4, !dbg !381
  %xor905.i = xor i32 %xor898.i, %910, !dbg !381
  store i32 %xor905.i, i32* %t1.i35, align 4, !dbg !381
  %911 = load i32, i32* %t0.i34, align 4, !dbg !381
  %912 = load i32, i32* %t1.i35, align 4, !dbg !381
  %add906.i = add i32 %911, %912, !dbg !381
  store i32 %add906.i, i32* %t0.i34, align 4, !dbg !381
  %913 = load i32, i32* %t0.i34, align 4, !dbg !381
  %conv907.i213 = trunc i32 %913 to i8, !dbg !381
  %conv908.i = zext i8 %conv907.i213 to i32, !dbg !381
  %and909.i = and i32 %conv908.i, 255, !dbg !381
  %idxprom910.i = sext i32 %and909.i to i64, !dbg !381
  %arrayidx911.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom910.i, !dbg !381
  %914 = load i32, i32* %arrayidx911.i, align 4, !dbg !381
  %915 = load i32, i32* %t0.i34, align 4, !dbg !381
  %shr912.i = lshr i32 %915, 8, !dbg !381
  %conv913.i214 = trunc i32 %shr912.i to i8, !dbg !381
  %conv914.i = zext i8 %conv913.i214 to i32, !dbg !381
  %and915.i = and i32 %conv914.i, 255, !dbg !381
  %idxprom916.i = sext i32 %and915.i to i64, !dbg !381
  %arrayidx917.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom916.i, !dbg !381
  %916 = load i32, i32* %arrayidx917.i, align 4, !dbg !381
  %xor918.i = xor i32 %914, %916, !dbg !381
  %917 = load i32, i32* %t0.i34, align 4, !dbg !381
  %shr919.i = lshr i32 %917, 16, !dbg !381
  %conv920.i215 = trunc i32 %shr919.i to i8, !dbg !381
  %conv921.i = zext i8 %conv920.i215 to i32, !dbg !381
  %and922.i = and i32 %conv921.i, 255, !dbg !381
  %idxprom923.i = sext i32 %and922.i to i64, !dbg !381
  %arrayidx924.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom923.i, !dbg !381
  %918 = load i32, i32* %arrayidx924.i, align 4, !dbg !381
  %xor925.i = xor i32 %xor918.i, %918, !dbg !381
  %919 = load i32, i32* %t0.i34, align 4, !dbg !381
  %shr926.i = lshr i32 %919, 24, !dbg !381
  %conv927.i216 = trunc i32 %shr926.i to i8, !dbg !381
  %conv928.i = zext i8 %conv927.i216 to i32, !dbg !381
  %and929.i = and i32 %conv928.i, 255, !dbg !381
  %idxprom930.i = sext i32 %and929.i to i64, !dbg !381
  %arrayidx931.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom930.i, !dbg !381
  %920 = load i32, i32* %arrayidx931.i, align 4, !dbg !381
  %xor932.i = xor i32 %xor925.i, %920, !dbg !381
  store i32 %xor932.i, i32* %t0.i34, align 4, !dbg !381
  %921 = load i32, i32* %t1.i35, align 4, !dbg !381
  %922 = load i32, i32* %t0.i34, align 4, !dbg !381
  %add933.i = add i32 %921, %922, !dbg !381
  store i32 %add933.i, i32* %t1.i35, align 4, !dbg !381
  %923 = load i32, i32* %t1.i35, align 4, !dbg !381
  %conv934.i = trunc i32 %923 to i8, !dbg !381
  %conv935.i = zext i8 %conv934.i to i32, !dbg !381
  %and936.i = and i32 %conv935.i, 255, !dbg !381
  %idxprom937.i = sext i32 %and936.i to i64, !dbg !381
  %arrayidx938.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom937.i, !dbg !381
  %924 = load i32, i32* %arrayidx938.i, align 4, !dbg !381
  %925 = load i32, i32* %t1.i35, align 4, !dbg !381
  %shr939.i = lshr i32 %925, 8, !dbg !381
  %conv940.i = trunc i32 %shr939.i to i8, !dbg !381
  %conv941.i = zext i8 %conv940.i to i32, !dbg !381
  %and942.i = and i32 %conv941.i, 255, !dbg !381
  %idxprom943.i = sext i32 %and942.i to i64, !dbg !381
  %arrayidx944.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom943.i, !dbg !381
  %926 = load i32, i32* %arrayidx944.i, align 4, !dbg !381
  %xor945.i = xor i32 %924, %926, !dbg !381
  %927 = load i32, i32* %t1.i35, align 4, !dbg !381
  %shr946.i = lshr i32 %927, 16, !dbg !381
  %conv947.i = trunc i32 %shr946.i to i8, !dbg !381
  %conv948.i = zext i8 %conv947.i to i32, !dbg !381
  %and949.i = and i32 %conv948.i, 255, !dbg !381
  %idxprom950.i = sext i32 %and949.i to i64, !dbg !381
  %arrayidx951.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom950.i, !dbg !381
  %928 = load i32, i32* %arrayidx951.i, align 4, !dbg !381
  %xor952.i = xor i32 %xor945.i, %928, !dbg !381
  %929 = load i32, i32* %t1.i35, align 4, !dbg !381
  %shr953.i = lshr i32 %929, 24, !dbg !381
  %conv954.i = trunc i32 %shr953.i to i8, !dbg !381
  %conv955.i = zext i8 %conv954.i to i32, !dbg !381
  %and956.i = and i32 %conv955.i, 255, !dbg !381
  %idxprom957.i = sext i32 %and956.i to i64, !dbg !381
  %arrayidx958.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom957.i, !dbg !381
  %930 = load i32, i32* %arrayidx958.i, align 4, !dbg !381
  %xor959.i = xor i32 %xor952.i, %930, !dbg !381
  store i32 %xor959.i, i32* %t1.i35, align 4, !dbg !381
  %931 = load i32, i32* %t0.i34, align 4, !dbg !381
  %932 = load i32, i32* %t1.i35, align 4, !dbg !381
  %add960.i = add i32 %931, %932, !dbg !381
  store i32 %add960.i, i32* %t0.i34, align 4, !dbg !381
  %933 = load i32, i32* %t0.i34, align 4, !dbg !381
  %934 = load i32, i32* %x3.i32, align 4, !dbg !381
  %xor961.i = xor i32 %934, %933, !dbg !381
  store i32 %xor961.i, i32* %x3.i32, align 4, !dbg !381
  %935 = load i32, i32* %t1.i35, align 4, !dbg !381
  %936 = load i32, i32* %x4.i33, align 4, !dbg !381
  %xor962.i = xor i32 %936, %935, !dbg !381
  store i32 %xor962.i, i32* %x4.i33, align 4, !dbg !381
  %937 = load i32, i32* %x3.i32, align 4, !dbg !382
  %938 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !382
  %data963.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %938, i32 0, i32 0, !dbg !382
  %arrayidx964.i = getelementptr inbounds [32 x i32], [32 x i32]* %data963.i, i64 0, i64 20, !dbg !382
  %939 = load i32, i32* %arrayidx964.i, align 4, !dbg !382
  %xor965.i = xor i32 %937, %939, !dbg !382
  store i32 %xor965.i, i32* %t0.i34, align 4, !dbg !382
  %940 = load i32, i32* %x4.i33, align 4, !dbg !382
  %941 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !382
  %data966.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %941, i32 0, i32 0, !dbg !382
  %arrayidx967.i = getelementptr inbounds [32 x i32], [32 x i32]* %data966.i, i64 0, i64 21, !dbg !382
  %942 = load i32, i32* %arrayidx967.i, align 4, !dbg !382
  %xor968.i = xor i32 %940, %942, !dbg !382
  store i32 %xor968.i, i32* %t1.i35, align 4, !dbg !382
  %943 = load i32, i32* %t0.i34, align 4, !dbg !382
  %944 = load i32, i32* %t1.i35, align 4, !dbg !382
  %xor969.i = xor i32 %944, %943, !dbg !382
  store i32 %xor969.i, i32* %t1.i35, align 4, !dbg !382
  %945 = load i32, i32* %t1.i35, align 4, !dbg !382
  %conv970.i = trunc i32 %945 to i8, !dbg !382
  %conv971.i = zext i8 %conv970.i to i32, !dbg !382
  %and972.i = and i32 %conv971.i, 255, !dbg !382
  %idxprom973.i = sext i32 %and972.i to i64, !dbg !382
  %arrayidx974.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom973.i, !dbg !382
  %946 = load i32, i32* %arrayidx974.i, align 4, !dbg !382
  %947 = load i32, i32* %t1.i35, align 4, !dbg !382
  %shr975.i = lshr i32 %947, 8, !dbg !382
  %conv976.i = trunc i32 %shr975.i to i8, !dbg !382
  %conv977.i = zext i8 %conv976.i to i32, !dbg !382
  %and978.i = and i32 %conv977.i, 255, !dbg !382
  %idxprom979.i = sext i32 %and978.i to i64, !dbg !382
  %arrayidx980.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom979.i, !dbg !382
  %948 = load i32, i32* %arrayidx980.i, align 4, !dbg !382
  %xor981.i = xor i32 %946, %948, !dbg !382
  %949 = load i32, i32* %t1.i35, align 4, !dbg !382
  %shr982.i = lshr i32 %949, 16, !dbg !382
  %conv983.i = trunc i32 %shr982.i to i8, !dbg !382
  %conv984.i = zext i8 %conv983.i to i32, !dbg !382
  %and985.i = and i32 %conv984.i, 255, !dbg !382
  %idxprom986.i = sext i32 %and985.i to i64, !dbg !382
  %arrayidx987.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom986.i, !dbg !382
  %950 = load i32, i32* %arrayidx987.i, align 4, !dbg !382
  %xor988.i = xor i32 %xor981.i, %950, !dbg !382
  %951 = load i32, i32* %t1.i35, align 4, !dbg !382
  %shr989.i = lshr i32 %951, 24, !dbg !382
  %conv990.i = trunc i32 %shr989.i to i8, !dbg !382
  %conv991.i = zext i8 %conv990.i to i32, !dbg !382
  %and992.i = and i32 %conv991.i, 255, !dbg !382
  %idxprom993.i = sext i32 %and992.i to i64, !dbg !382
  %arrayidx994.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom993.i, !dbg !382
  %952 = load i32, i32* %arrayidx994.i, align 4, !dbg !382
  %xor995.i = xor i32 %xor988.i, %952, !dbg !382
  store i32 %xor995.i, i32* %t1.i35, align 4, !dbg !382
  %953 = load i32, i32* %t0.i34, align 4, !dbg !382
  %954 = load i32, i32* %t1.i35, align 4, !dbg !382
  %add996.i = add i32 %953, %954, !dbg !382
  store i32 %add996.i, i32* %t0.i34, align 4, !dbg !382
  %955 = load i32, i32* %t0.i34, align 4, !dbg !382
  %conv997.i = trunc i32 %955 to i8, !dbg !382
  %conv998.i = zext i8 %conv997.i to i32, !dbg !382
  %and999.i = and i32 %conv998.i, 255, !dbg !382
  %idxprom1000.i = sext i32 %and999.i to i64, !dbg !382
  %arrayidx1001.i217 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1000.i, !dbg !382
  %956 = load i32, i32* %arrayidx1001.i217, align 4, !dbg !382
  %957 = load i32, i32* %t0.i34, align 4, !dbg !382
  %shr1002.i = lshr i32 %957, 8, !dbg !382
  %conv1003.i = trunc i32 %shr1002.i to i8, !dbg !382
  %conv1004.i = zext i8 %conv1003.i to i32, !dbg !382
  %and1005.i = and i32 %conv1004.i, 255, !dbg !382
  %idxprom1006.i = sext i32 %and1005.i to i64, !dbg !382
  %arrayidx1007.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1006.i, !dbg !382
  %958 = load i32, i32* %arrayidx1007.i, align 4, !dbg !382
  %xor1008.i218 = xor i32 %956, %958, !dbg !382
  %959 = load i32, i32* %t0.i34, align 4, !dbg !382
  %shr1009.i = lshr i32 %959, 16, !dbg !382
  %conv1010.i = trunc i32 %shr1009.i to i8, !dbg !382
  %conv1011.i = zext i8 %conv1010.i to i32, !dbg !382
  %and1012.i = and i32 %conv1011.i, 255, !dbg !382
  %idxprom1013.i = sext i32 %and1012.i to i64, !dbg !382
  %arrayidx1014.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1013.i, !dbg !382
  %960 = load i32, i32* %arrayidx1014.i, align 4, !dbg !382
  %xor1015.i = xor i32 %xor1008.i218, %960, !dbg !382
  %961 = load i32, i32* %t0.i34, align 4, !dbg !382
  %shr1016.i = lshr i32 %961, 24, !dbg !382
  %conv1017.i = trunc i32 %shr1016.i to i8, !dbg !382
  %conv1018.i = zext i8 %conv1017.i to i32, !dbg !382
  %and1019.i = and i32 %conv1018.i, 255, !dbg !382
  %idxprom1020.i = sext i32 %and1019.i to i64, !dbg !382
  %arrayidx1021.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1020.i, !dbg !382
  %962 = load i32, i32* %arrayidx1021.i, align 4, !dbg !382
  %xor1022.i = xor i32 %xor1015.i, %962, !dbg !382
  store i32 %xor1022.i, i32* %t0.i34, align 4, !dbg !382
  %963 = load i32, i32* %t1.i35, align 4, !dbg !382
  %964 = load i32, i32* %t0.i34, align 4, !dbg !382
  %add1023.i = add i32 %963, %964, !dbg !382
  store i32 %add1023.i, i32* %t1.i35, align 4, !dbg !382
  %965 = load i32, i32* %t1.i35, align 4, !dbg !382
  %conv1024.i = trunc i32 %965 to i8, !dbg !382
  %conv1025.i = zext i8 %conv1024.i to i32, !dbg !382
  %and1026.i = and i32 %conv1025.i, 255, !dbg !382
  %idxprom1027.i = sext i32 %and1026.i to i64, !dbg !382
  %arrayidx1028.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1027.i, !dbg !382
  %966 = load i32, i32* %arrayidx1028.i, align 4, !dbg !382
  %967 = load i32, i32* %t1.i35, align 4, !dbg !382
  %shr1029.i = lshr i32 %967, 8, !dbg !382
  %conv1030.i = trunc i32 %shr1029.i to i8, !dbg !382
  %conv1031.i = zext i8 %conv1030.i to i32, !dbg !382
  %and1032.i = and i32 %conv1031.i, 255, !dbg !382
  %idxprom1033.i = sext i32 %and1032.i to i64, !dbg !382
  %arrayidx1034.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1033.i, !dbg !382
  %968 = load i32, i32* %arrayidx1034.i, align 4, !dbg !382
  %xor1035.i = xor i32 %966, %968, !dbg !382
  %969 = load i32, i32* %t1.i35, align 4, !dbg !382
  %shr1036.i = lshr i32 %969, 16, !dbg !382
  %conv1037.i = trunc i32 %shr1036.i to i8, !dbg !382
  %conv1038.i = zext i8 %conv1037.i to i32, !dbg !382
  %and1039.i = and i32 %conv1038.i, 255, !dbg !382
  %idxprom1040.i = sext i32 %and1039.i to i64, !dbg !382
  %arrayidx1041.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1040.i, !dbg !382
  %970 = load i32, i32* %arrayidx1041.i, align 4, !dbg !382
  %xor1042.i = xor i32 %xor1035.i, %970, !dbg !382
  %971 = load i32, i32* %t1.i35, align 4, !dbg !382
  %shr1043.i = lshr i32 %971, 24, !dbg !382
  %conv1044.i = trunc i32 %shr1043.i to i8, !dbg !382
  %conv1045.i = zext i8 %conv1044.i to i32, !dbg !382
  %and1046.i = and i32 %conv1045.i, 255, !dbg !382
  %idxprom1047.i = sext i32 %and1046.i to i64, !dbg !382
  %arrayidx1048.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1047.i, !dbg !382
  %972 = load i32, i32* %arrayidx1048.i, align 4, !dbg !382
  %xor1049.i = xor i32 %xor1042.i, %972, !dbg !382
  store i32 %xor1049.i, i32* %t1.i35, align 4, !dbg !382
  %973 = load i32, i32* %t0.i34, align 4, !dbg !382
  %974 = load i32, i32* %t1.i35, align 4, !dbg !382
  %add1050.i = add i32 %973, %974, !dbg !382
  store i32 %add1050.i, i32* %t0.i34, align 4, !dbg !382
  %975 = load i32, i32* %t0.i34, align 4, !dbg !382
  %976 = load i32, i32* %x1.i30, align 4, !dbg !382
  %xor1051.i = xor i32 %976, %975, !dbg !382
  store i32 %xor1051.i, i32* %x1.i30, align 4, !dbg !382
  %977 = load i32, i32* %t1.i35, align 4, !dbg !382
  %978 = load i32, i32* %x2.i31, align 4, !dbg !382
  %xor1052.i = xor i32 %978, %977, !dbg !382
  store i32 %xor1052.i, i32* %x2.i31, align 4, !dbg !382
  %979 = load i32, i32* %x1.i30, align 4, !dbg !383
  %980 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !383
  %data1053.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %980, i32 0, i32 0, !dbg !383
  %arrayidx1054.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1053.i, i64 0, i64 22, !dbg !383
  %981 = load i32, i32* %arrayidx1054.i, align 4, !dbg !383
  %xor1055.i = xor i32 %979, %981, !dbg !383
  store i32 %xor1055.i, i32* %t0.i34, align 4, !dbg !383
  %982 = load i32, i32* %x2.i31, align 4, !dbg !383
  %983 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !383
  %data1056.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %983, i32 0, i32 0, !dbg !383
  %arrayidx1057.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1056.i, i64 0, i64 23, !dbg !383
  %984 = load i32, i32* %arrayidx1057.i, align 4, !dbg !383
  %xor1058.i = xor i32 %982, %984, !dbg !383
  store i32 %xor1058.i, i32* %t1.i35, align 4, !dbg !383
  %985 = load i32, i32* %t0.i34, align 4, !dbg !383
  %986 = load i32, i32* %t1.i35, align 4, !dbg !383
  %xor1059.i = xor i32 %986, %985, !dbg !383
  store i32 %xor1059.i, i32* %t1.i35, align 4, !dbg !383
  %987 = load i32, i32* %t1.i35, align 4, !dbg !383
  %conv1060.i = trunc i32 %987 to i8, !dbg !383
  %conv1061.i = zext i8 %conv1060.i to i32, !dbg !383
  %and1062.i = and i32 %conv1061.i, 255, !dbg !383
  %idxprom1063.i = sext i32 %and1062.i to i64, !dbg !383
  %arrayidx1064.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1063.i, !dbg !383
  %988 = load i32, i32* %arrayidx1064.i, align 4, !dbg !383
  %989 = load i32, i32* %t1.i35, align 4, !dbg !383
  %shr1065.i = lshr i32 %989, 8, !dbg !383
  %conv1066.i = trunc i32 %shr1065.i to i8, !dbg !383
  %conv1067.i = zext i8 %conv1066.i to i32, !dbg !383
  %and1068.i = and i32 %conv1067.i, 255, !dbg !383
  %idxprom1069.i = sext i32 %and1068.i to i64, !dbg !383
  %arrayidx1070.i219 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1069.i, !dbg !383
  %990 = load i32, i32* %arrayidx1070.i219, align 4, !dbg !383
  %xor1071.i = xor i32 %988, %990, !dbg !383
  %991 = load i32, i32* %t1.i35, align 4, !dbg !383
  %shr1072.i = lshr i32 %991, 16, !dbg !383
  %conv1073.i = trunc i32 %shr1072.i to i8, !dbg !383
  %conv1074.i = zext i8 %conv1073.i to i32, !dbg !383
  %and1075.i = and i32 %conv1074.i, 255, !dbg !383
  %idxprom1076.i = sext i32 %and1075.i to i64, !dbg !383
  %arrayidx1077.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1076.i, !dbg !383
  %992 = load i32, i32* %arrayidx1077.i, align 4, !dbg !383
  %xor1078.i = xor i32 %xor1071.i, %992, !dbg !383
  %993 = load i32, i32* %t1.i35, align 4, !dbg !383
  %shr1079.i = lshr i32 %993, 24, !dbg !383
  %conv1080.i = trunc i32 %shr1079.i to i8, !dbg !383
  %conv1081.i220 = zext i8 %conv1080.i to i32, !dbg !383
  %and1082.i = and i32 %conv1081.i220, 255, !dbg !383
  %idxprom1083.i = sext i32 %and1082.i to i64, !dbg !383
  %arrayidx1084.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1083.i, !dbg !383
  %994 = load i32, i32* %arrayidx1084.i, align 4, !dbg !383
  %xor1085.i = xor i32 %xor1078.i, %994, !dbg !383
  store i32 %xor1085.i, i32* %t1.i35, align 4, !dbg !383
  %995 = load i32, i32* %t0.i34, align 4, !dbg !383
  %996 = load i32, i32* %t1.i35, align 4, !dbg !383
  %add1086.i = add i32 %995, %996, !dbg !383
  store i32 %add1086.i, i32* %t0.i34, align 4, !dbg !383
  %997 = load i32, i32* %t0.i34, align 4, !dbg !383
  %conv1087.i221 = trunc i32 %997 to i8, !dbg !383
  %conv1088.i222 = zext i8 %conv1087.i221 to i32, !dbg !383
  %and1089.i223 = and i32 %conv1088.i222, 255, !dbg !383
  %idxprom1090.i224 = sext i32 %and1089.i223 to i64, !dbg !383
  %arrayidx1091.i225 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1090.i224, !dbg !383
  %998 = load i32, i32* %arrayidx1091.i225, align 4, !dbg !383
  %999 = load i32, i32* %t0.i34, align 4, !dbg !383
  %shr1092.i = lshr i32 %999, 8, !dbg !383
  %conv1093.i = trunc i32 %shr1092.i to i8, !dbg !383
  %conv1094.i226 = zext i8 %conv1093.i to i32, !dbg !383
  %and1095.i = and i32 %conv1094.i226, 255, !dbg !383
  %idxprom1096.i = sext i32 %and1095.i to i64, !dbg !383
  %arrayidx1097.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1096.i, !dbg !383
  %1000 = load i32, i32* %arrayidx1097.i, align 4, !dbg !383
  %xor1098.i = xor i32 %998, %1000, !dbg !383
  %1001 = load i32, i32* %t0.i34, align 4, !dbg !383
  %shr1099.i = lshr i32 %1001, 16, !dbg !383
  %conv1100.i = trunc i32 %shr1099.i to i8, !dbg !383
  %conv1101.i227 = zext i8 %conv1100.i to i32, !dbg !383
  %and1102.i = and i32 %conv1101.i227, 255, !dbg !383
  %idxprom1103.i = sext i32 %and1102.i to i64, !dbg !383
  %arrayidx1104.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1103.i, !dbg !383
  %1002 = load i32, i32* %arrayidx1104.i, align 4, !dbg !383
  %xor1105.i = xor i32 %xor1098.i, %1002, !dbg !383
  %1003 = load i32, i32* %t0.i34, align 4, !dbg !383
  %shr1106.i = lshr i32 %1003, 24, !dbg !383
  %conv1107.i = trunc i32 %shr1106.i to i8, !dbg !383
  %conv1108.i = zext i8 %conv1107.i to i32, !dbg !383
  %and1109.i = and i32 %conv1108.i, 255, !dbg !383
  %idxprom1110.i = sext i32 %and1109.i to i64, !dbg !383
  %arrayidx1111.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1110.i, !dbg !383
  %1004 = load i32, i32* %arrayidx1111.i, align 4, !dbg !383
  %xor1112.i = xor i32 %xor1105.i, %1004, !dbg !383
  store i32 %xor1112.i, i32* %t0.i34, align 4, !dbg !383
  %1005 = load i32, i32* %t1.i35, align 4, !dbg !383
  %1006 = load i32, i32* %t0.i34, align 4, !dbg !383
  %add1113.i = add i32 %1005, %1006, !dbg !383
  store i32 %add1113.i, i32* %t1.i35, align 4, !dbg !383
  %1007 = load i32, i32* %t1.i35, align 4, !dbg !383
  %conv1114.i = trunc i32 %1007 to i8, !dbg !383
  %conv1115.i = zext i8 %conv1114.i to i32, !dbg !383
  %and1116.i = and i32 %conv1115.i, 255, !dbg !383
  %idxprom1117.i = sext i32 %and1116.i to i64, !dbg !383
  %arrayidx1118.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1117.i, !dbg !383
  %1008 = load i32, i32* %arrayidx1118.i, align 4, !dbg !383
  %1009 = load i32, i32* %t1.i35, align 4, !dbg !383
  %shr1119.i = lshr i32 %1009, 8, !dbg !383
  %conv1120.i = trunc i32 %shr1119.i to i8, !dbg !383
  %conv1121.i = zext i8 %conv1120.i to i32, !dbg !383
  %and1122.i = and i32 %conv1121.i, 255, !dbg !383
  %idxprom1123.i = sext i32 %and1122.i to i64, !dbg !383
  %arrayidx1124.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1123.i, !dbg !383
  %1010 = load i32, i32* %arrayidx1124.i, align 4, !dbg !383
  %xor1125.i = xor i32 %1008, %1010, !dbg !383
  %1011 = load i32, i32* %t1.i35, align 4, !dbg !383
  %shr1126.i = lshr i32 %1011, 16, !dbg !383
  %conv1127.i = trunc i32 %shr1126.i to i8, !dbg !383
  %conv1128.i = zext i8 %conv1127.i to i32, !dbg !383
  %and1129.i = and i32 %conv1128.i, 255, !dbg !383
  %idxprom1130.i = sext i32 %and1129.i to i64, !dbg !383
  %arrayidx1131.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1130.i, !dbg !383
  %1012 = load i32, i32* %arrayidx1131.i, align 4, !dbg !383
  %xor1132.i = xor i32 %xor1125.i, %1012, !dbg !383
  %1013 = load i32, i32* %t1.i35, align 4, !dbg !383
  %shr1133.i = lshr i32 %1013, 24, !dbg !383
  %conv1134.i = trunc i32 %shr1133.i to i8, !dbg !383
  %conv1135.i = zext i8 %conv1134.i to i32, !dbg !383
  %and1136.i = and i32 %conv1135.i, 255, !dbg !383
  %idxprom1137.i = sext i32 %and1136.i to i64, !dbg !383
  %arrayidx1138.i228 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1137.i, !dbg !383
  %1014 = load i32, i32* %arrayidx1138.i228, align 4, !dbg !383
  %xor1139.i = xor i32 %xor1132.i, %1014, !dbg !383
  store i32 %xor1139.i, i32* %t1.i35, align 4, !dbg !383
  %1015 = load i32, i32* %t0.i34, align 4, !dbg !383
  %1016 = load i32, i32* %t1.i35, align 4, !dbg !383
  %add1140.i = add i32 %1015, %1016, !dbg !383
  store i32 %add1140.i, i32* %t0.i34, align 4, !dbg !383
  %1017 = load i32, i32* %t0.i34, align 4, !dbg !383
  %1018 = load i32, i32* %x3.i32, align 4, !dbg !383
  %xor1141.i = xor i32 %1018, %1017, !dbg !383
  store i32 %xor1141.i, i32* %x3.i32, align 4, !dbg !383
  %1019 = load i32, i32* %t1.i35, align 4, !dbg !383
  %1020 = load i32, i32* %x4.i33, align 4, !dbg !383
  %xor1142.i = xor i32 %1020, %1019, !dbg !383
  store i32 %xor1142.i, i32* %x4.i33, align 4, !dbg !383
  %1021 = load i32, i32* %x3.i32, align 4, !dbg !384
  %1022 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !384
  %data1143.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %1022, i32 0, i32 0, !dbg !384
  %arrayidx1144.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1143.i, i64 0, i64 24, !dbg !384
  %1023 = load i32, i32* %arrayidx1144.i, align 4, !dbg !384
  %xor1145.i = xor i32 %1021, %1023, !dbg !384
  store i32 %xor1145.i, i32* %t0.i34, align 4, !dbg !384
  %1024 = load i32, i32* %x4.i33, align 4, !dbg !384
  %1025 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !384
  %data1146.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %1025, i32 0, i32 0, !dbg !384
  %arrayidx1147.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1146.i, i64 0, i64 25, !dbg !384
  %1026 = load i32, i32* %arrayidx1147.i, align 4, !dbg !384
  %xor1148.i = xor i32 %1024, %1026, !dbg !384
  store i32 %xor1148.i, i32* %t1.i35, align 4, !dbg !384
  %1027 = load i32, i32* %t0.i34, align 4, !dbg !384
  %1028 = load i32, i32* %t1.i35, align 4, !dbg !384
  %xor1149.i = xor i32 %1028, %1027, !dbg !384
  store i32 %xor1149.i, i32* %t1.i35, align 4, !dbg !384
  %1029 = load i32, i32* %t1.i35, align 4, !dbg !384
  %conv1150.i = trunc i32 %1029 to i8, !dbg !384
  %conv1151.i = zext i8 %conv1150.i to i32, !dbg !384
  %and1152.i = and i32 %conv1151.i, 255, !dbg !384
  %idxprom1153.i = sext i32 %and1152.i to i64, !dbg !384
  %arrayidx1154.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1153.i, !dbg !384
  %1030 = load i32, i32* %arrayidx1154.i, align 4, !dbg !384
  %1031 = load i32, i32* %t1.i35, align 4, !dbg !384
  %shr1155.i = lshr i32 %1031, 8, !dbg !384
  %conv1156.i = trunc i32 %shr1155.i to i8, !dbg !384
  %conv1157.i = zext i8 %conv1156.i to i32, !dbg !384
  %and1158.i = and i32 %conv1157.i, 255, !dbg !384
  %idxprom1159.i = sext i32 %and1158.i to i64, !dbg !384
  %arrayidx1160.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1159.i, !dbg !384
  %1032 = load i32, i32* %arrayidx1160.i, align 4, !dbg !384
  %xor1161.i = xor i32 %1030, %1032, !dbg !384
  %1033 = load i32, i32* %t1.i35, align 4, !dbg !384
  %shr1162.i = lshr i32 %1033, 16, !dbg !384
  %conv1163.i = trunc i32 %shr1162.i to i8, !dbg !384
  %conv1164.i = zext i8 %conv1163.i to i32, !dbg !384
  %and1165.i = and i32 %conv1164.i, 255, !dbg !384
  %idxprom1166.i = sext i32 %and1165.i to i64, !dbg !384
  %arrayidx1167.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1166.i, !dbg !384
  %1034 = load i32, i32* %arrayidx1167.i, align 4, !dbg !384
  %xor1168.i = xor i32 %xor1161.i, %1034, !dbg !384
  %1035 = load i32, i32* %t1.i35, align 4, !dbg !384
  %shr1169.i = lshr i32 %1035, 24, !dbg !384
  %conv1170.i = trunc i32 %shr1169.i to i8, !dbg !384
  %conv1171.i = zext i8 %conv1170.i to i32, !dbg !384
  %and1172.i = and i32 %conv1171.i, 255, !dbg !384
  %idxprom1173.i = sext i32 %and1172.i to i64, !dbg !384
  %arrayidx1174.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1173.i, !dbg !384
  %1036 = load i32, i32* %arrayidx1174.i, align 4, !dbg !384
  %xor1175.i = xor i32 %xor1168.i, %1036, !dbg !384
  store i32 %xor1175.i, i32* %t1.i35, align 4, !dbg !384
  %1037 = load i32, i32* %t0.i34, align 4, !dbg !384
  %1038 = load i32, i32* %t1.i35, align 4, !dbg !384
  %add1176.i = add i32 %1037, %1038, !dbg !384
  store i32 %add1176.i, i32* %t0.i34, align 4, !dbg !384
  %1039 = load i32, i32* %t0.i34, align 4, !dbg !384
  %conv1177.i = trunc i32 %1039 to i8, !dbg !384
  %conv1178.i = zext i8 %conv1177.i to i32, !dbg !384
  %and1179.i = and i32 %conv1178.i, 255, !dbg !384
  %idxprom1180.i = sext i32 %and1179.i to i64, !dbg !384
  %arrayidx1181.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1180.i, !dbg !384
  %1040 = load i32, i32* %arrayidx1181.i, align 4, !dbg !384
  %1041 = load i32, i32* %t0.i34, align 4, !dbg !384
  %shr1182.i = lshr i32 %1041, 8, !dbg !384
  %conv1183.i = trunc i32 %shr1182.i to i8, !dbg !384
  %conv1184.i = zext i8 %conv1183.i to i32, !dbg !384
  %and1185.i = and i32 %conv1184.i, 255, !dbg !384
  %idxprom1186.i = sext i32 %and1185.i to i64, !dbg !384
  %arrayidx1187.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1186.i, !dbg !384
  %1042 = load i32, i32* %arrayidx1187.i, align 4, !dbg !384
  %xor1188.i = xor i32 %1040, %1042, !dbg !384
  %1043 = load i32, i32* %t0.i34, align 4, !dbg !384
  %shr1189.i = lshr i32 %1043, 16, !dbg !384
  %conv1190.i = trunc i32 %shr1189.i to i8, !dbg !384
  %conv1191.i = zext i8 %conv1190.i to i32, !dbg !384
  %and1192.i = and i32 %conv1191.i, 255, !dbg !384
  %idxprom1193.i = sext i32 %and1192.i to i64, !dbg !384
  %arrayidx1194.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1193.i, !dbg !384
  %1044 = load i32, i32* %arrayidx1194.i, align 4, !dbg !384
  %xor1195.i = xor i32 %xor1188.i, %1044, !dbg !384
  %1045 = load i32, i32* %t0.i34, align 4, !dbg !384
  %shr1196.i = lshr i32 %1045, 24, !dbg !384
  %conv1197.i = trunc i32 %shr1196.i to i8, !dbg !384
  %conv1198.i = zext i8 %conv1197.i to i32, !dbg !384
  %and1199.i = and i32 %conv1198.i, 255, !dbg !384
  %idxprom1200.i = sext i32 %and1199.i to i64, !dbg !384
  %arrayidx1201.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1200.i, !dbg !384
  %1046 = load i32, i32* %arrayidx1201.i, align 4, !dbg !384
  %xor1202.i = xor i32 %xor1195.i, %1046, !dbg !384
  store i32 %xor1202.i, i32* %t0.i34, align 4, !dbg !384
  %1047 = load i32, i32* %t1.i35, align 4, !dbg !384
  %1048 = load i32, i32* %t0.i34, align 4, !dbg !384
  %add1203.i = add i32 %1047, %1048, !dbg !384
  store i32 %add1203.i, i32* %t1.i35, align 4, !dbg !384
  %1049 = load i32, i32* %t1.i35, align 4, !dbg !384
  %conv1204.i = trunc i32 %1049 to i8, !dbg !384
  %conv1205.i = zext i8 %conv1204.i to i32, !dbg !384
  %and1206.i = and i32 %conv1205.i, 255, !dbg !384
  %idxprom1207.i = sext i32 %and1206.i to i64, !dbg !384
  %arrayidx1208.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1207.i, !dbg !384
  %1050 = load i32, i32* %arrayidx1208.i, align 4, !dbg !384
  %1051 = load i32, i32* %t1.i35, align 4, !dbg !384
  %shr1209.i = lshr i32 %1051, 8, !dbg !384
  %conv1210.i = trunc i32 %shr1209.i to i8, !dbg !384
  %conv1211.i = zext i8 %conv1210.i to i32, !dbg !384
  %and1212.i = and i32 %conv1211.i, 255, !dbg !384
  %idxprom1213.i = sext i32 %and1212.i to i64, !dbg !384
  %arrayidx1214.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1213.i, !dbg !384
  %1052 = load i32, i32* %arrayidx1214.i, align 4, !dbg !384
  %xor1215.i = xor i32 %1050, %1052, !dbg !384
  %1053 = load i32, i32* %t1.i35, align 4, !dbg !384
  %shr1216.i = lshr i32 %1053, 16, !dbg !384
  %conv1217.i = trunc i32 %shr1216.i to i8, !dbg !384
  %conv1218.i = zext i8 %conv1217.i to i32, !dbg !384
  %and1219.i = and i32 %conv1218.i, 255, !dbg !384
  %idxprom1220.i = sext i32 %and1219.i to i64, !dbg !384
  %arrayidx1221.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1220.i, !dbg !384
  %1054 = load i32, i32* %arrayidx1221.i, align 4, !dbg !384
  %xor1222.i = xor i32 %xor1215.i, %1054, !dbg !384
  %1055 = load i32, i32* %t1.i35, align 4, !dbg !384
  %shr1223.i = lshr i32 %1055, 24, !dbg !384
  %conv1224.i = trunc i32 %shr1223.i to i8, !dbg !384
  %conv1225.i = zext i8 %conv1224.i to i32, !dbg !384
  %and1226.i = and i32 %conv1225.i, 255, !dbg !384
  %idxprom1227.i = sext i32 %and1226.i to i64, !dbg !384
  %arrayidx1228.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1227.i, !dbg !384
  %1056 = load i32, i32* %arrayidx1228.i, align 4, !dbg !384
  %xor1229.i = xor i32 %xor1222.i, %1056, !dbg !384
  store i32 %xor1229.i, i32* %t1.i35, align 4, !dbg !384
  %1057 = load i32, i32* %t0.i34, align 4, !dbg !384
  %1058 = load i32, i32* %t1.i35, align 4, !dbg !384
  %add1230.i = add i32 %1057, %1058, !dbg !384
  store i32 %add1230.i, i32* %t0.i34, align 4, !dbg !384
  %1059 = load i32, i32* %t0.i34, align 4, !dbg !384
  %1060 = load i32, i32* %x1.i30, align 4, !dbg !384
  %xor1231.i = xor i32 %1060, %1059, !dbg !384
  store i32 %xor1231.i, i32* %x1.i30, align 4, !dbg !384
  %1061 = load i32, i32* %t1.i35, align 4, !dbg !384
  %1062 = load i32, i32* %x2.i31, align 4, !dbg !384
  %xor1232.i = xor i32 %1062, %1061, !dbg !384
  store i32 %xor1232.i, i32* %x2.i31, align 4, !dbg !384
  %1063 = load i32, i32* %x1.i30, align 4, !dbg !385
  %1064 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !385
  %data1233.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %1064, i32 0, i32 0, !dbg !385
  %arrayidx1234.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1233.i, i64 0, i64 26, !dbg !385
  %1065 = load i32, i32* %arrayidx1234.i, align 4, !dbg !385
  %xor1235.i = xor i32 %1063, %1065, !dbg !385
  store i32 %xor1235.i, i32* %t0.i34, align 4, !dbg !385
  %1066 = load i32, i32* %x2.i31, align 4, !dbg !385
  %1067 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !385
  %data1236.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %1067, i32 0, i32 0, !dbg !385
  %arrayidx1237.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1236.i, i64 0, i64 27, !dbg !385
  %1068 = load i32, i32* %arrayidx1237.i, align 4, !dbg !385
  %xor1238.i = xor i32 %1066, %1068, !dbg !385
  store i32 %xor1238.i, i32* %t1.i35, align 4, !dbg !385
  %1069 = load i32, i32* %t0.i34, align 4, !dbg !385
  %1070 = load i32, i32* %t1.i35, align 4, !dbg !385
  %xor1239.i = xor i32 %1070, %1069, !dbg !385
  store i32 %xor1239.i, i32* %t1.i35, align 4, !dbg !385
  %1071 = load i32, i32* %t1.i35, align 4, !dbg !385
  %conv1240.i = trunc i32 %1071 to i8, !dbg !385
  %conv1241.i = zext i8 %conv1240.i to i32, !dbg !385
  %and1242.i = and i32 %conv1241.i, 255, !dbg !385
  %idxprom1243.i = sext i32 %and1242.i to i64, !dbg !385
  %arrayidx1244.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1243.i, !dbg !385
  %1072 = load i32, i32* %arrayidx1244.i, align 4, !dbg !385
  %1073 = load i32, i32* %t1.i35, align 4, !dbg !385
  %shr1245.i = lshr i32 %1073, 8, !dbg !385
  %conv1246.i = trunc i32 %shr1245.i to i8, !dbg !385
  %conv1247.i = zext i8 %conv1246.i to i32, !dbg !385
  %and1248.i = and i32 %conv1247.i, 255, !dbg !385
  %idxprom1249.i = sext i32 %and1248.i to i64, !dbg !385
  %arrayidx1250.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1249.i, !dbg !385
  %1074 = load i32, i32* %arrayidx1250.i, align 4, !dbg !385
  %xor1251.i = xor i32 %1072, %1074, !dbg !385
  %1075 = load i32, i32* %t1.i35, align 4, !dbg !385
  %shr1252.i = lshr i32 %1075, 16, !dbg !385
  %conv1253.i = trunc i32 %shr1252.i to i8, !dbg !385
  %conv1254.i = zext i8 %conv1253.i to i32, !dbg !385
  %and1255.i = and i32 %conv1254.i, 255, !dbg !385
  %idxprom1256.i = sext i32 %and1255.i to i64, !dbg !385
  %arrayidx1257.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1256.i, !dbg !385
  %1076 = load i32, i32* %arrayidx1257.i, align 4, !dbg !385
  %xor1258.i = xor i32 %xor1251.i, %1076, !dbg !385
  %1077 = load i32, i32* %t1.i35, align 4, !dbg !385
  %shr1259.i = lshr i32 %1077, 24, !dbg !385
  %conv1260.i = trunc i32 %shr1259.i to i8, !dbg !385
  %conv1261.i = zext i8 %conv1260.i to i32, !dbg !385
  %and1262.i = and i32 %conv1261.i, 255, !dbg !385
  %idxprom1263.i = sext i32 %and1262.i to i64, !dbg !385
  %arrayidx1264.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1263.i, !dbg !385
  %1078 = load i32, i32* %arrayidx1264.i, align 4, !dbg !385
  %xor1265.i = xor i32 %xor1258.i, %1078, !dbg !385
  store i32 %xor1265.i, i32* %t1.i35, align 4, !dbg !385
  %1079 = load i32, i32* %t0.i34, align 4, !dbg !385
  %1080 = load i32, i32* %t1.i35, align 4, !dbg !385
  %add1266.i = add i32 %1079, %1080, !dbg !385
  store i32 %add1266.i, i32* %t0.i34, align 4, !dbg !385
  %1081 = load i32, i32* %t0.i34, align 4, !dbg !385
  %conv1267.i = trunc i32 %1081 to i8, !dbg !385
  %conv1268.i = zext i8 %conv1267.i to i32, !dbg !385
  %and1269.i = and i32 %conv1268.i, 255, !dbg !385
  %idxprom1270.i = sext i32 %and1269.i to i64, !dbg !385
  %arrayidx1271.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1270.i, !dbg !385
  %1082 = load i32, i32* %arrayidx1271.i, align 4, !dbg !385
  %1083 = load i32, i32* %t0.i34, align 4, !dbg !385
  %shr1272.i = lshr i32 %1083, 8, !dbg !385
  %conv1273.i = trunc i32 %shr1272.i to i8, !dbg !385
  %conv1274.i = zext i8 %conv1273.i to i32, !dbg !385
  %and1275.i = and i32 %conv1274.i, 255, !dbg !385
  %idxprom1276.i = sext i32 %and1275.i to i64, !dbg !385
  %arrayidx1277.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1276.i, !dbg !385
  %1084 = load i32, i32* %arrayidx1277.i, align 4, !dbg !385
  %xor1278.i = xor i32 %1082, %1084, !dbg !385
  %1085 = load i32, i32* %t0.i34, align 4, !dbg !385
  %shr1279.i = lshr i32 %1085, 16, !dbg !385
  %conv1280.i = trunc i32 %shr1279.i to i8, !dbg !385
  %conv1281.i = zext i8 %conv1280.i to i32, !dbg !385
  %and1282.i = and i32 %conv1281.i, 255, !dbg !385
  %idxprom1283.i = sext i32 %and1282.i to i64, !dbg !385
  %arrayidx1284.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1283.i, !dbg !385
  %1086 = load i32, i32* %arrayidx1284.i, align 4, !dbg !385
  %xor1285.i = xor i32 %xor1278.i, %1086, !dbg !385
  %1087 = load i32, i32* %t0.i34, align 4, !dbg !385
  %shr1286.i = lshr i32 %1087, 24, !dbg !385
  %conv1287.i = trunc i32 %shr1286.i to i8, !dbg !385
  %conv1288.i = zext i8 %conv1287.i to i32, !dbg !385
  %and1289.i = and i32 %conv1288.i, 255, !dbg !385
  %idxprom1290.i = sext i32 %and1289.i to i64, !dbg !385
  %arrayidx1291.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1290.i, !dbg !385
  %1088 = load i32, i32* %arrayidx1291.i, align 4, !dbg !385
  %xor1292.i = xor i32 %xor1285.i, %1088, !dbg !385
  store i32 %xor1292.i, i32* %t0.i34, align 4, !dbg !385
  %1089 = load i32, i32* %t1.i35, align 4, !dbg !385
  %1090 = load i32, i32* %t0.i34, align 4, !dbg !385
  %add1293.i = add i32 %1089, %1090, !dbg !385
  store i32 %add1293.i, i32* %t1.i35, align 4, !dbg !385
  %1091 = load i32, i32* %t1.i35, align 4, !dbg !385
  %conv1294.i = trunc i32 %1091 to i8, !dbg !385
  %conv1295.i = zext i8 %conv1294.i to i32, !dbg !385
  %and1296.i = and i32 %conv1295.i, 255, !dbg !385
  %idxprom1297.i = sext i32 %and1296.i to i64, !dbg !385
  %arrayidx1298.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1297.i, !dbg !385
  %1092 = load i32, i32* %arrayidx1298.i, align 4, !dbg !385
  %1093 = load i32, i32* %t1.i35, align 4, !dbg !385
  %shr1299.i = lshr i32 %1093, 8, !dbg !385
  %conv1300.i = trunc i32 %shr1299.i to i8, !dbg !385
  %conv1301.i = zext i8 %conv1300.i to i32, !dbg !385
  %and1302.i = and i32 %conv1301.i, 255, !dbg !385
  %idxprom1303.i = sext i32 %and1302.i to i64, !dbg !385
  %arrayidx1304.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1303.i, !dbg !385
  %1094 = load i32, i32* %arrayidx1304.i, align 4, !dbg !385
  %xor1305.i = xor i32 %1092, %1094, !dbg !385
  %1095 = load i32, i32* %t1.i35, align 4, !dbg !385
  %shr1306.i = lshr i32 %1095, 16, !dbg !385
  %conv1307.i = trunc i32 %shr1306.i to i8, !dbg !385
  %conv1308.i = zext i8 %conv1307.i to i32, !dbg !385
  %and1309.i = and i32 %conv1308.i, 255, !dbg !385
  %idxprom1310.i = sext i32 %and1309.i to i64, !dbg !385
  %arrayidx1311.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1310.i, !dbg !385
  %1096 = load i32, i32* %arrayidx1311.i, align 4, !dbg !385
  %xor1312.i = xor i32 %xor1305.i, %1096, !dbg !385
  %1097 = load i32, i32* %t1.i35, align 4, !dbg !385
  %shr1313.i = lshr i32 %1097, 24, !dbg !385
  %conv1314.i = trunc i32 %shr1313.i to i8, !dbg !385
  %conv1315.i = zext i8 %conv1314.i to i32, !dbg !385
  %and1316.i = and i32 %conv1315.i, 255, !dbg !385
  %idxprom1317.i = sext i32 %and1316.i to i64, !dbg !385
  %arrayidx1318.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1317.i, !dbg !385
  %1098 = load i32, i32* %arrayidx1318.i, align 4, !dbg !385
  %xor1319.i = xor i32 %xor1312.i, %1098, !dbg !385
  store i32 %xor1319.i, i32* %t1.i35, align 4, !dbg !385
  %1099 = load i32, i32* %t0.i34, align 4, !dbg !385
  %1100 = load i32, i32* %t1.i35, align 4, !dbg !385
  %add1320.i = add i32 %1099, %1100, !dbg !385
  store i32 %add1320.i, i32* %t0.i34, align 4, !dbg !385
  %1101 = load i32, i32* %t0.i34, align 4, !dbg !385
  %1102 = load i32, i32* %x3.i32, align 4, !dbg !385
  %xor1321.i = xor i32 %1102, %1101, !dbg !385
  store i32 %xor1321.i, i32* %x3.i32, align 4, !dbg !385
  %1103 = load i32, i32* %t1.i35, align 4, !dbg !385
  %1104 = load i32, i32* %x4.i33, align 4, !dbg !385
  %xor1322.i = xor i32 %1104, %1103, !dbg !385
  store i32 %xor1322.i, i32* %x4.i33, align 4, !dbg !385
  %1105 = load i32, i32* %x3.i32, align 4, !dbg !386
  %1106 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !386
  %data1323.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %1106, i32 0, i32 0, !dbg !386
  %arrayidx1324.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1323.i, i64 0, i64 28, !dbg !386
  %1107 = load i32, i32* %arrayidx1324.i, align 4, !dbg !386
  %xor1325.i = xor i32 %1105, %1107, !dbg !386
  store i32 %xor1325.i, i32* %t0.i34, align 4, !dbg !386
  %1108 = load i32, i32* %x4.i33, align 4, !dbg !386
  %1109 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !386
  %data1326.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %1109, i32 0, i32 0, !dbg !386
  %arrayidx1327.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1326.i, i64 0, i64 29, !dbg !386
  %1110 = load i32, i32* %arrayidx1327.i, align 4, !dbg !386
  %xor1328.i = xor i32 %1108, %1110, !dbg !386
  store i32 %xor1328.i, i32* %t1.i35, align 4, !dbg !386
  %1111 = load i32, i32* %t0.i34, align 4, !dbg !386
  %1112 = load i32, i32* %t1.i35, align 4, !dbg !386
  %xor1329.i = xor i32 %1112, %1111, !dbg !386
  store i32 %xor1329.i, i32* %t1.i35, align 4, !dbg !386
  %1113 = load i32, i32* %t1.i35, align 4, !dbg !386
  %conv1330.i = trunc i32 %1113 to i8, !dbg !386
  %conv1331.i = zext i8 %conv1330.i to i32, !dbg !386
  %and1332.i = and i32 %conv1331.i, 255, !dbg !386
  %idxprom1333.i = sext i32 %and1332.i to i64, !dbg !386
  %arrayidx1334.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1333.i, !dbg !386
  %1114 = load i32, i32* %arrayidx1334.i, align 4, !dbg !386
  %1115 = load i32, i32* %t1.i35, align 4, !dbg !386
  %shr1335.i = lshr i32 %1115, 8, !dbg !386
  %conv1336.i = trunc i32 %shr1335.i to i8, !dbg !386
  %conv1337.i = zext i8 %conv1336.i to i32, !dbg !386
  %and1338.i = and i32 %conv1337.i, 255, !dbg !386
  %idxprom1339.i = sext i32 %and1338.i to i64, !dbg !386
  %arrayidx1340.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1339.i, !dbg !386
  %1116 = load i32, i32* %arrayidx1340.i, align 4, !dbg !386
  %xor1341.i = xor i32 %1114, %1116, !dbg !386
  %1117 = load i32, i32* %t1.i35, align 4, !dbg !386
  %shr1342.i = lshr i32 %1117, 16, !dbg !386
  %conv1343.i = trunc i32 %shr1342.i to i8, !dbg !386
  %conv1344.i = zext i8 %conv1343.i to i32, !dbg !386
  %and1345.i = and i32 %conv1344.i, 255, !dbg !386
  %idxprom1346.i = sext i32 %and1345.i to i64, !dbg !386
  %arrayidx1347.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1346.i, !dbg !386
  %1118 = load i32, i32* %arrayidx1347.i, align 4, !dbg !386
  %xor1348.i = xor i32 %xor1341.i, %1118, !dbg !386
  %1119 = load i32, i32* %t1.i35, align 4, !dbg !386
  %shr1349.i = lshr i32 %1119, 24, !dbg !386
  %conv1350.i = trunc i32 %shr1349.i to i8, !dbg !386
  %conv1351.i = zext i8 %conv1350.i to i32, !dbg !386
  %and1352.i = and i32 %conv1351.i, 255, !dbg !386
  %idxprom1353.i = sext i32 %and1352.i to i64, !dbg !386
  %arrayidx1354.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1353.i, !dbg !386
  %1120 = load i32, i32* %arrayidx1354.i, align 4, !dbg !386
  %xor1355.i = xor i32 %xor1348.i, %1120, !dbg !386
  store i32 %xor1355.i, i32* %t1.i35, align 4, !dbg !386
  %1121 = load i32, i32* %t0.i34, align 4, !dbg !386
  %1122 = load i32, i32* %t1.i35, align 4, !dbg !386
  %add1356.i = add i32 %1121, %1122, !dbg !386
  store i32 %add1356.i, i32* %t0.i34, align 4, !dbg !386
  %1123 = load i32, i32* %t0.i34, align 4, !dbg !386
  %conv1357.i = trunc i32 %1123 to i8, !dbg !386
  %conv1358.i = zext i8 %conv1357.i to i32, !dbg !386
  %and1359.i = and i32 %conv1358.i, 255, !dbg !386
  %idxprom1360.i = sext i32 %and1359.i to i64, !dbg !386
  %arrayidx1361.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1360.i, !dbg !386
  %1124 = load i32, i32* %arrayidx1361.i, align 4, !dbg !386
  %1125 = load i32, i32* %t0.i34, align 4, !dbg !386
  %shr1362.i = lshr i32 %1125, 8, !dbg !386
  %conv1363.i = trunc i32 %shr1362.i to i8, !dbg !386
  %conv1364.i = zext i8 %conv1363.i to i32, !dbg !386
  %and1365.i = and i32 %conv1364.i, 255, !dbg !386
  %idxprom1366.i = sext i32 %and1365.i to i64, !dbg !386
  %arrayidx1367.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1366.i, !dbg !386
  %1126 = load i32, i32* %arrayidx1367.i, align 4, !dbg !386
  %xor1368.i = xor i32 %1124, %1126, !dbg !386
  %1127 = load i32, i32* %t0.i34, align 4, !dbg !386
  %shr1369.i = lshr i32 %1127, 16, !dbg !386
  %conv1370.i = trunc i32 %shr1369.i to i8, !dbg !386
  %conv1371.i = zext i8 %conv1370.i to i32, !dbg !386
  %and1372.i = and i32 %conv1371.i, 255, !dbg !386
  %idxprom1373.i = sext i32 %and1372.i to i64, !dbg !386
  %arrayidx1374.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1373.i, !dbg !386
  %1128 = load i32, i32* %arrayidx1374.i, align 4, !dbg !386
  %xor1375.i = xor i32 %xor1368.i, %1128, !dbg !386
  %1129 = load i32, i32* %t0.i34, align 4, !dbg !386
  %shr1376.i = lshr i32 %1129, 24, !dbg !386
  %conv1377.i = trunc i32 %shr1376.i to i8, !dbg !386
  %conv1378.i = zext i8 %conv1377.i to i32, !dbg !386
  %and1379.i = and i32 %conv1378.i, 255, !dbg !386
  %idxprom1380.i = sext i32 %and1379.i to i64, !dbg !386
  %arrayidx1381.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1380.i, !dbg !386
  %1130 = load i32, i32* %arrayidx1381.i, align 4, !dbg !386
  %xor1382.i = xor i32 %xor1375.i, %1130, !dbg !386
  store i32 %xor1382.i, i32* %t0.i34, align 4, !dbg !386
  %1131 = load i32, i32* %t1.i35, align 4, !dbg !386
  %1132 = load i32, i32* %t0.i34, align 4, !dbg !386
  %add1383.i = add i32 %1131, %1132, !dbg !386
  store i32 %add1383.i, i32* %t1.i35, align 4, !dbg !386
  %1133 = load i32, i32* %t1.i35, align 4, !dbg !386
  %conv1384.i = trunc i32 %1133 to i8, !dbg !386
  %conv1385.i = zext i8 %conv1384.i to i32, !dbg !386
  %and1386.i = and i32 %conv1385.i, 255, !dbg !386
  %idxprom1387.i = sext i32 %and1386.i to i64, !dbg !386
  %arrayidx1388.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1387.i, !dbg !386
  %1134 = load i32, i32* %arrayidx1388.i, align 4, !dbg !386
  %1135 = load i32, i32* %t1.i35, align 4, !dbg !386
  %shr1389.i = lshr i32 %1135, 8, !dbg !386
  %conv1390.i = trunc i32 %shr1389.i to i8, !dbg !386
  %conv1391.i = zext i8 %conv1390.i to i32, !dbg !386
  %and1392.i = and i32 %conv1391.i, 255, !dbg !386
  %idxprom1393.i = sext i32 %and1392.i to i64, !dbg !386
  %arrayidx1394.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1393.i, !dbg !386
  %1136 = load i32, i32* %arrayidx1394.i, align 4, !dbg !386
  %xor1395.i = xor i32 %1134, %1136, !dbg !386
  %1137 = load i32, i32* %t1.i35, align 4, !dbg !386
  %shr1396.i = lshr i32 %1137, 16, !dbg !386
  %conv1397.i = trunc i32 %shr1396.i to i8, !dbg !386
  %conv1398.i = zext i8 %conv1397.i to i32, !dbg !386
  %and1399.i = and i32 %conv1398.i, 255, !dbg !386
  %idxprom1400.i = sext i32 %and1399.i to i64, !dbg !386
  %arrayidx1401.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1400.i, !dbg !386
  %1138 = load i32, i32* %arrayidx1401.i, align 4, !dbg !386
  %xor1402.i = xor i32 %xor1395.i, %1138, !dbg !386
  %1139 = load i32, i32* %t1.i35, align 4, !dbg !386
  %shr1403.i = lshr i32 %1139, 24, !dbg !386
  %conv1404.i = trunc i32 %shr1403.i to i8, !dbg !386
  %conv1405.i = zext i8 %conv1404.i to i32, !dbg !386
  %and1406.i = and i32 %conv1405.i, 255, !dbg !386
  %idxprom1407.i = sext i32 %and1406.i to i64, !dbg !386
  %arrayidx1408.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1407.i, !dbg !386
  %1140 = load i32, i32* %arrayidx1408.i, align 4, !dbg !386
  %xor1409.i = xor i32 %xor1402.i, %1140, !dbg !386
  store i32 %xor1409.i, i32* %t1.i35, align 4, !dbg !386
  %1141 = load i32, i32* %t0.i34, align 4, !dbg !386
  %1142 = load i32, i32* %t1.i35, align 4, !dbg !386
  %add1410.i = add i32 %1141, %1142, !dbg !386
  store i32 %add1410.i, i32* %t0.i34, align 4, !dbg !386
  %1143 = load i32, i32* %t0.i34, align 4, !dbg !386
  %1144 = load i32, i32* %x1.i30, align 4, !dbg !386
  %xor1411.i = xor i32 %1144, %1143, !dbg !386
  store i32 %xor1411.i, i32* %x1.i30, align 4, !dbg !386
  %1145 = load i32, i32* %t1.i35, align 4, !dbg !386
  %1146 = load i32, i32* %x2.i31, align 4, !dbg !386
  %xor1412.i = xor i32 %1146, %1145, !dbg !386
  store i32 %xor1412.i, i32* %x2.i31, align 4, !dbg !386
  %1147 = load i32, i32* %x1.i30, align 4, !dbg !387
  %1148 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !387
  %data1413.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %1148, i32 0, i32 0, !dbg !387
  %arrayidx1414.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1413.i, i64 0, i64 30, !dbg !387
  %1149 = load i32, i32* %arrayidx1414.i, align 4, !dbg !387
  %xor1415.i = xor i32 %1147, %1149, !dbg !387
  store i32 %xor1415.i, i32* %t0.i34, align 4, !dbg !387
  %1150 = load i32, i32* %x2.i31, align 4, !dbg !387
  %1151 = load %struct.seed_key_st*, %struct.seed_key_st** %ks.addr.i29, align 8, !dbg !387
  %data1416.i = getelementptr inbounds %struct.seed_key_st, %struct.seed_key_st* %1151, i32 0, i32 0, !dbg !387
  %arrayidx1417.i = getelementptr inbounds [32 x i32], [32 x i32]* %data1416.i, i64 0, i64 31, !dbg !387
  %1152 = load i32, i32* %arrayidx1417.i, align 4, !dbg !387
  %xor1418.i = xor i32 %1150, %1152, !dbg !387
  store i32 %xor1418.i, i32* %t1.i35, align 4, !dbg !387
  %1153 = load i32, i32* %t0.i34, align 4, !dbg !387
  %1154 = load i32, i32* %t1.i35, align 4, !dbg !387
  %xor1419.i = xor i32 %1154, %1153, !dbg !387
  store i32 %xor1419.i, i32* %t1.i35, align 4, !dbg !387
  %1155 = load i32, i32* %t1.i35, align 4, !dbg !387
  %conv1420.i = trunc i32 %1155 to i8, !dbg !387
  %conv1421.i = zext i8 %conv1420.i to i32, !dbg !387
  %and1422.i = and i32 %conv1421.i, 255, !dbg !387
  %idxprom1423.i = sext i32 %and1422.i to i64, !dbg !387
  %arrayidx1424.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1423.i, !dbg !387
  %1156 = load i32, i32* %arrayidx1424.i, align 4, !dbg !387
  %1157 = load i32, i32* %t1.i35, align 4, !dbg !387
  %shr1425.i = lshr i32 %1157, 8, !dbg !387
  %conv1426.i = trunc i32 %shr1425.i to i8, !dbg !387
  %conv1427.i = zext i8 %conv1426.i to i32, !dbg !387
  %and1428.i = and i32 %conv1427.i, 255, !dbg !387
  %idxprom1429.i = sext i32 %and1428.i to i64, !dbg !387
  %arrayidx1430.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1429.i, !dbg !387
  %1158 = load i32, i32* %arrayidx1430.i, align 4, !dbg !387
  %xor1431.i = xor i32 %1156, %1158, !dbg !387
  %1159 = load i32, i32* %t1.i35, align 4, !dbg !387
  %shr1432.i = lshr i32 %1159, 16, !dbg !387
  %conv1433.i = trunc i32 %shr1432.i to i8, !dbg !387
  %conv1434.i = zext i8 %conv1433.i to i32, !dbg !387
  %and1435.i = and i32 %conv1434.i, 255, !dbg !387
  %idxprom1436.i = sext i32 %and1435.i to i64, !dbg !387
  %arrayidx1437.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1436.i, !dbg !387
  %1160 = load i32, i32* %arrayidx1437.i, align 4, !dbg !387
  %xor1438.i = xor i32 %xor1431.i, %1160, !dbg !387
  %1161 = load i32, i32* %t1.i35, align 4, !dbg !387
  %shr1439.i = lshr i32 %1161, 24, !dbg !387
  %conv1440.i = trunc i32 %shr1439.i to i8, !dbg !387
  %conv1441.i = zext i8 %conv1440.i to i32, !dbg !387
  %and1442.i = and i32 %conv1441.i, 255, !dbg !387
  %idxprom1443.i = sext i32 %and1442.i to i64, !dbg !387
  %arrayidx1444.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1443.i, !dbg !387
  %1162 = load i32, i32* %arrayidx1444.i, align 4, !dbg !387
  %xor1445.i = xor i32 %xor1438.i, %1162, !dbg !387
  store i32 %xor1445.i, i32* %t1.i35, align 4, !dbg !387
  %1163 = load i32, i32* %t0.i34, align 4, !dbg !387
  %1164 = load i32, i32* %t1.i35, align 4, !dbg !387
  %add1446.i = add i32 %1163, %1164, !dbg !387
  store i32 %add1446.i, i32* %t0.i34, align 4, !dbg !387
  %1165 = load i32, i32* %t0.i34, align 4, !dbg !387
  %conv1447.i = trunc i32 %1165 to i8, !dbg !387
  %conv1448.i = zext i8 %conv1447.i to i32, !dbg !387
  %and1449.i = and i32 %conv1448.i, 255, !dbg !387
  %idxprom1450.i = sext i32 %and1449.i to i64, !dbg !387
  %arrayidx1451.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1450.i, !dbg !387
  %1166 = load i32, i32* %arrayidx1451.i, align 4, !dbg !387
  %1167 = load i32, i32* %t0.i34, align 4, !dbg !387
  %shr1452.i = lshr i32 %1167, 8, !dbg !387
  %conv1453.i = trunc i32 %shr1452.i to i8, !dbg !387
  %conv1454.i = zext i8 %conv1453.i to i32, !dbg !387
  %and1455.i = and i32 %conv1454.i, 255, !dbg !387
  %idxprom1456.i = sext i32 %and1455.i to i64, !dbg !387
  %arrayidx1457.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1456.i, !dbg !387
  %1168 = load i32, i32* %arrayidx1457.i, align 4, !dbg !387
  %xor1458.i = xor i32 %1166, %1168, !dbg !387
  %1169 = load i32, i32* %t0.i34, align 4, !dbg !387
  %shr1459.i = lshr i32 %1169, 16, !dbg !387
  %conv1460.i = trunc i32 %shr1459.i to i8, !dbg !387
  %conv1461.i = zext i8 %conv1460.i to i32, !dbg !387
  %and1462.i = and i32 %conv1461.i, 255, !dbg !387
  %idxprom1463.i = sext i32 %and1462.i to i64, !dbg !387
  %arrayidx1464.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1463.i, !dbg !387
  %1170 = load i32, i32* %arrayidx1464.i, align 4, !dbg !387
  %xor1465.i = xor i32 %xor1458.i, %1170, !dbg !387
  %1171 = load i32, i32* %t0.i34, align 4, !dbg !387
  %shr1466.i = lshr i32 %1171, 24, !dbg !387
  %conv1467.i = trunc i32 %shr1466.i to i8, !dbg !387
  %conv1468.i = zext i8 %conv1467.i to i32, !dbg !387
  %and1469.i = and i32 %conv1468.i, 255, !dbg !387
  %idxprom1470.i = sext i32 %and1469.i to i64, !dbg !387
  %arrayidx1471.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1470.i, !dbg !387
  %1172 = load i32, i32* %arrayidx1471.i, align 4, !dbg !387
  %xor1472.i = xor i32 %xor1465.i, %1172, !dbg !387
  store i32 %xor1472.i, i32* %t0.i34, align 4, !dbg !387
  %1173 = load i32, i32* %t1.i35, align 4, !dbg !387
  %1174 = load i32, i32* %t0.i34, align 4, !dbg !387
  %add1473.i = add i32 %1173, %1174, !dbg !387
  store i32 %add1473.i, i32* %t1.i35, align 4, !dbg !387
  %1175 = load i32, i32* %t1.i35, align 4, !dbg !387
  %conv1474.i = trunc i32 %1175 to i8, !dbg !387
  %conv1475.i = zext i8 %conv1474.i to i32, !dbg !387
  %and1476.i = and i32 %conv1475.i, 255, !dbg !387
  %idxprom1477.i = sext i32 %and1476.i to i64, !dbg !387
  %arrayidx1478.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 0), i64 0, i64 %idxprom1477.i, !dbg !387
  %1176 = load i32, i32* %arrayidx1478.i, align 4, !dbg !387
  %1177 = load i32, i32* %t1.i35, align 4, !dbg !387
  %shr1479.i = lshr i32 %1177, 8, !dbg !387
  %conv1480.i = trunc i32 %shr1479.i to i8, !dbg !387
  %conv1481.i = zext i8 %conv1480.i to i32, !dbg !387
  %and1482.i = and i32 %conv1481.i, 255, !dbg !387
  %idxprom1483.i = sext i32 %and1482.i to i64, !dbg !387
  %arrayidx1484.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 1), i64 0, i64 %idxprom1483.i, !dbg !387
  %1178 = load i32, i32* %arrayidx1484.i, align 4, !dbg !387
  %xor1485.i = xor i32 %1176, %1178, !dbg !387
  %1179 = load i32, i32* %t1.i35, align 4, !dbg !387
  %shr1486.i = lshr i32 %1179, 16, !dbg !387
  %conv1487.i = trunc i32 %shr1486.i to i8, !dbg !387
  %conv1488.i = zext i8 %conv1487.i to i32, !dbg !387
  %and1489.i = and i32 %conv1488.i, 255, !dbg !387
  %idxprom1490.i = sext i32 %and1489.i to i64, !dbg !387
  %arrayidx1491.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 2), i64 0, i64 %idxprom1490.i, !dbg !387
  %1180 = load i32, i32* %arrayidx1491.i, align 4, !dbg !387
  %xor1492.i = xor i32 %xor1485.i, %1180, !dbg !387
  %1181 = load i32, i32* %t1.i35, align 4, !dbg !387
  %shr1493.i = lshr i32 %1181, 24, !dbg !387
  %conv1494.i = trunc i32 %shr1493.i to i8, !dbg !387
  %conv1495.i = zext i8 %conv1494.i to i32, !dbg !387
  %and1496.i = and i32 %conv1495.i, 255, !dbg !387
  %idxprom1497.i = sext i32 %and1496.i to i64, !dbg !387
  %arrayidx1498.i = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @SS, i64 0, i64 3), i64 0, i64 %idxprom1497.i, !dbg !387
  %1182 = load i32, i32* %arrayidx1498.i, align 4, !dbg !387
  %xor1499.i = xor i32 %xor1492.i, %1182, !dbg !387
  store i32 %xor1499.i, i32* %t1.i35, align 4, !dbg !387
  %1183 = load i32, i32* %t0.i34, align 4, !dbg !387
  %1184 = load i32, i32* %t1.i35, align 4, !dbg !387
  %add1500.i = add i32 %1183, %1184, !dbg !387
  store i32 %add1500.i, i32* %t0.i34, align 4, !dbg !387
  %1185 = load i32, i32* %t0.i34, align 4, !dbg !387
  %1186 = load i32, i32* %x3.i32, align 4, !dbg !387
  %xor1501.i = xor i32 %1186, %1185, !dbg !387
  store i32 %xor1501.i, i32* %x3.i32, align 4, !dbg !387
  %1187 = load i32, i32* %t1.i35, align 4, !dbg !387
  %1188 = load i32, i32* %x4.i33, align 4, !dbg !387
  %xor1502.i = xor i32 %1188, %1187, !dbg !387
  store i32 %xor1502.i, i32* %x4.i33, align 4, !dbg !387
  %1189 = load i32, i32* %x3.i32, align 4, !dbg !388
  %shr1503.i = lshr i32 %1189, 24, !dbg !388
  %conv1504.i = trunc i32 %shr1503.i to i8, !dbg !388
  %conv1505.i = zext i8 %conv1504.i to i32, !dbg !388
  %and1506.i = and i32 %conv1505.i, 255, !dbg !388
  %conv1507.i = trunc i32 %and1506.i to i8, !dbg !388
  %1190 = load i8*, i8** %d.addr.i, align 8, !dbg !388
  store i8 %conv1507.i, i8* %1190, align 1, !dbg !388
  %1191 = load i32, i32* %x3.i32, align 4, !dbg !388
  %shr1509.i = lshr i32 %1191, 16, !dbg !388
  %conv1510.i = trunc i32 %shr1509.i to i8, !dbg !388
  %conv1511.i = zext i8 %conv1510.i to i32, !dbg !388
  %and1512.i = and i32 %conv1511.i, 255, !dbg !388
  %conv1513.i = trunc i32 %and1512.i to i8, !dbg !388
  %1192 = load i8*, i8** %d.addr.i, align 8, !dbg !388
  %add.ptr1514.i = getelementptr inbounds i8, i8* %1192, i64 1, !dbg !388
  store i8 %conv1513.i, i8* %add.ptr1514.i, align 1, !dbg !388
  %1193 = load i32, i32* %x3.i32, align 4, !dbg !388
  %shr1515.i = lshr i32 %1193, 8, !dbg !388
  %conv1516.i = trunc i32 %shr1515.i to i8, !dbg !388
  %conv1517.i = zext i8 %conv1516.i to i32, !dbg !388
  %and1518.i = and i32 %conv1517.i, 255, !dbg !388
  %conv1519.i = trunc i32 %and1518.i to i8, !dbg !388
  %1194 = load i8*, i8** %d.addr.i, align 8, !dbg !388
  %add.ptr1520.i = getelementptr inbounds i8, i8* %1194, i64 2, !dbg !388
  store i8 %conv1519.i, i8* %add.ptr1520.i, align 1, !dbg !388
  %1195 = load i32, i32* %x3.i32, align 4, !dbg !388
  %conv1521.i = trunc i32 %1195 to i8, !dbg !388
  %conv1522.i = zext i8 %conv1521.i to i32, !dbg !388
  %and1523.i = and i32 %conv1522.i, 255, !dbg !388
  %conv1524.i = trunc i32 %and1523.i to i8, !dbg !388
  %1196 = load i8*, i8** %d.addr.i, align 8, !dbg !388
  %add.ptr1525.i = getelementptr inbounds i8, i8* %1196, i64 3, !dbg !388
  store i8 %conv1524.i, i8* %add.ptr1525.i, align 1, !dbg !388
  %1197 = load i32, i32* %x4.i33, align 4, !dbg !389
  %shr1526.i = lshr i32 %1197, 24, !dbg !389
  %conv1527.i = trunc i32 %shr1526.i to i8, !dbg !389
  %conv1528.i = zext i8 %conv1527.i to i32, !dbg !389
  %and1529.i = and i32 %conv1528.i, 255, !dbg !389
  %conv1530.i = trunc i32 %and1529.i to i8, !dbg !389
  %1198 = load i8*, i8** %d.addr.i, align 8, !dbg !389
  %add.ptr1531.i = getelementptr inbounds i8, i8* %1198, i64 4, !dbg !389
  store i8 %conv1530.i, i8* %add.ptr1531.i, align 1, !dbg !389
  %1199 = load i32, i32* %x4.i33, align 4, !dbg !389
  %shr1533.i = lshr i32 %1199, 16, !dbg !389
  %conv1534.i = trunc i32 %shr1533.i to i8, !dbg !389
  %conv1535.i = zext i8 %conv1534.i to i32, !dbg !389
  %and1536.i = and i32 %conv1535.i, 255, !dbg !389
  %conv1537.i = trunc i32 %and1536.i to i8, !dbg !389
  %1200 = load i8*, i8** %d.addr.i, align 8, !dbg !389
  %add.ptr1538.i = getelementptr inbounds i8, i8* %1200, i64 4, !dbg !389
  %add.ptr1539.i = getelementptr inbounds i8, i8* %add.ptr1538.i, i64 1, !dbg !389
  store i8 %conv1537.i, i8* %add.ptr1539.i, align 1, !dbg !389
  %1201 = load i32, i32* %x4.i33, align 4, !dbg !389
  %shr1540.i = lshr i32 %1201, 8, !dbg !389
  %conv1541.i = trunc i32 %shr1540.i to i8, !dbg !389
  %conv1542.i = zext i8 %conv1541.i to i32, !dbg !389
  %and1543.i = and i32 %conv1542.i, 255, !dbg !389
  %conv1544.i = trunc i32 %and1543.i to i8, !dbg !389
  %1202 = load i8*, i8** %d.addr.i, align 8, !dbg !389
  %add.ptr1545.i = getelementptr inbounds i8, i8* %1202, i64 4, !dbg !389
  %add.ptr1546.i = getelementptr inbounds i8, i8* %add.ptr1545.i, i64 2, !dbg !389
  store i8 %conv1544.i, i8* %add.ptr1546.i, align 1, !dbg !389
  %1203 = load i32, i32* %x4.i33, align 4, !dbg !389
  %conv1547.i = trunc i32 %1203 to i8, !dbg !389
  %conv1548.i = zext i8 %conv1547.i to i32, !dbg !389
  %and1549.i = and i32 %conv1548.i, 255, !dbg !389
  %conv1550.i = trunc i32 %and1549.i to i8, !dbg !389
  %1204 = load i8*, i8** %d.addr.i, align 8, !dbg !389
  %add.ptr1551.i = getelementptr inbounds i8, i8* %1204, i64 4, !dbg !389
  %add.ptr1552.i = getelementptr inbounds i8, i8* %add.ptr1551.i, i64 3, !dbg !389
  store i8 %conv1550.i, i8* %add.ptr1552.i, align 1, !dbg !389
  %1205 = load i32, i32* %x1.i30, align 4, !dbg !390
  %shr1553.i = lshr i32 %1205, 24, !dbg !390
  %conv1554.i = trunc i32 %shr1553.i to i8, !dbg !390
  %conv1555.i = zext i8 %conv1554.i to i32, !dbg !390
  %and1556.i = and i32 %conv1555.i, 255, !dbg !390
  %conv1557.i = trunc i32 %and1556.i to i8, !dbg !390
  %1206 = load i8*, i8** %d.addr.i, align 8, !dbg !390
  %add.ptr1558.i = getelementptr inbounds i8, i8* %1206, i64 8, !dbg !390
  store i8 %conv1557.i, i8* %add.ptr1558.i, align 1, !dbg !390
  %1207 = load i32, i32* %x1.i30, align 4, !dbg !390
  %shr1560.i = lshr i32 %1207, 16, !dbg !390
  %conv1561.i = trunc i32 %shr1560.i to i8, !dbg !390
  %conv1562.i = zext i8 %conv1561.i to i32, !dbg !390
  %and1563.i = and i32 %conv1562.i, 255, !dbg !390
  %conv1564.i = trunc i32 %and1563.i to i8, !dbg !390
  %1208 = load i8*, i8** %d.addr.i, align 8, !dbg !390
  %add.ptr1565.i = getelementptr inbounds i8, i8* %1208, i64 8, !dbg !390
  %add.ptr1566.i = getelementptr inbounds i8, i8* %add.ptr1565.i, i64 1, !dbg !390
  store i8 %conv1564.i, i8* %add.ptr1566.i, align 1, !dbg !390
  %1209 = load i32, i32* %x1.i30, align 4, !dbg !390
  %shr1567.i = lshr i32 %1209, 8, !dbg !390
  %conv1568.i = trunc i32 %shr1567.i to i8, !dbg !390
  %conv1569.i = zext i8 %conv1568.i to i32, !dbg !390
  %and1570.i = and i32 %conv1569.i, 255, !dbg !390
  %conv1571.i = trunc i32 %and1570.i to i8, !dbg !390
  %1210 = load i8*, i8** %d.addr.i, align 8, !dbg !390
  %add.ptr1572.i = getelementptr inbounds i8, i8* %1210, i64 8, !dbg !390
  %add.ptr1573.i = getelementptr inbounds i8, i8* %add.ptr1572.i, i64 2, !dbg !390
  store i8 %conv1571.i, i8* %add.ptr1573.i, align 1, !dbg !390
  %1211 = load i32, i32* %x1.i30, align 4, !dbg !390
  %conv1574.i = trunc i32 %1211 to i8, !dbg !390
  %conv1575.i = zext i8 %conv1574.i to i32, !dbg !390
  %and1576.i = and i32 %conv1575.i, 255, !dbg !390
  %conv1577.i = trunc i32 %and1576.i to i8, !dbg !390
  %1212 = load i8*, i8** %d.addr.i, align 8, !dbg !390
  %add.ptr1578.i = getelementptr inbounds i8, i8* %1212, i64 8, !dbg !390
  %add.ptr1579.i = getelementptr inbounds i8, i8* %add.ptr1578.i, i64 3, !dbg !390
  store i8 %conv1577.i, i8* %add.ptr1579.i, align 1, !dbg !390
  %1213 = load i32, i32* %x2.i31, align 4, !dbg !391
  %shr1580.i = lshr i32 %1213, 24, !dbg !391
  %conv1581.i = trunc i32 %shr1580.i to i8, !dbg !391
  %conv1582.i = zext i8 %conv1581.i to i32, !dbg !391
  %and1583.i = and i32 %conv1582.i, 255, !dbg !391
  %conv1584.i = trunc i32 %and1583.i to i8, !dbg !391
  %1214 = load i8*, i8** %d.addr.i, align 8, !dbg !391
  %add.ptr1585.i = getelementptr inbounds i8, i8* %1214, i64 12, !dbg !391
  store i8 %conv1584.i, i8* %add.ptr1585.i, align 1, !dbg !391
  %1215 = load i32, i32* %x2.i31, align 4, !dbg !391
  %shr1587.i = lshr i32 %1215, 16, !dbg !391
  %conv1588.i = trunc i32 %shr1587.i to i8, !dbg !391
  %conv1589.i = zext i8 %conv1588.i to i32, !dbg !391
  %and1590.i = and i32 %conv1589.i, 255, !dbg !391
  %conv1591.i = trunc i32 %and1590.i to i8, !dbg !391
  %1216 = load i8*, i8** %d.addr.i, align 8, !dbg !391
  %add.ptr1592.i = getelementptr inbounds i8, i8* %1216, i64 12, !dbg !391
  %add.ptr1593.i = getelementptr inbounds i8, i8* %add.ptr1592.i, i64 1, !dbg !391
  store i8 %conv1591.i, i8* %add.ptr1593.i, align 1, !dbg !391
  %1217 = load i32, i32* %x2.i31, align 4, !dbg !391
  %shr1594.i = lshr i32 %1217, 8, !dbg !391
  %conv1595.i = trunc i32 %shr1594.i to i8, !dbg !391
  %conv1596.i = zext i8 %conv1595.i to i32, !dbg !391
  %and1597.i = and i32 %conv1596.i, 255, !dbg !391
  %conv1598.i = trunc i32 %and1597.i to i8, !dbg !391
  %1218 = load i8*, i8** %d.addr.i, align 8, !dbg !391
  %add.ptr1599.i = getelementptr inbounds i8, i8* %1218, i64 12, !dbg !391
  %add.ptr1600.i = getelementptr inbounds i8, i8* %add.ptr1599.i, i64 2, !dbg !391
  store i8 %conv1598.i, i8* %add.ptr1600.i, align 1, !dbg !391
  %1219 = load i32, i32* %x2.i31, align 4, !dbg !391
  %conv1601.i = trunc i32 %1219 to i8, !dbg !391
  %conv1602.i = zext i8 %conv1601.i to i32, !dbg !391
  %and1603.i = and i32 %conv1602.i, 255, !dbg !391
  %conv1604.i = trunc i32 %and1603.i to i8, !dbg !391
  %1220 = load i8*, i8** %d.addr.i, align 8, !dbg !391
  %add.ptr1605.i = getelementptr inbounds i8, i8* %1220, i64 12, !dbg !391
  %add.ptr1606.i = getelementptr inbounds i8, i8* %add.ptr1605.i, i64 3, !dbg !391
  store i8 %conv1604.i, i8* %add.ptr1606.i, align 1, !dbg !391
  %1221 = load i8*, i8** %in, align 8, !dbg !392
  call void @free(i8* %1221) #6, !dbg !393
  %1222 = load i64, i64* %round, align 8, !dbg !394
  %dec = add i64 %1222, -1, !dbg !394
  store i64 %dec, i64* %round, align 8, !dbg !394
  br label %while.cond, !dbg !349, !llvm.loop !395

while.end:                                        ; preds = %while.cond
  %1223 = load i32, i32* %retval, align 4, !dbg !397
  ret i32 %1223, !dbg !397
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

; Function Attrs: nounwind
declare dso_local i32 @rand() #5

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #5

; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

attributes #0 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind willreturn }
attributes #3 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!22, !23, !24}
!llvm.ident = !{!25}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "SS", scope: !2, file: !3, line: 60, type: !17, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !10, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "Cipher/seed.c", directory: "/home/phil/Documents/github/cache-symbolic/crypto_test")
!4 = !{}
!5 = !{!6, !9}
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "seed_word", file: !7, line: 44, baseType: !8)
!7 = !DIFile(filename: "Cipher/seed_local.h", directory: "/home/phil/Documents/github/cache-symbolic/crypto_test")
!8 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!9 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!10 = !{!0, !11}
!11 = !DIGlobalVariableExpression(var: !12, expr: !DIExpression())
!12 = distinct !DIGlobalVariable(name: "key", scope: !2, file: !3, line: 592, type: !13, isLocal: true, isDefinition: true)
!13 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 256, elements: !15)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!15 = !{!16}
!16 = !DISubrange(count: 32)
!17 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, size: 32768, elements: !19)
!18 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!19 = !{!20, !21}
!20 = !DISubrange(count: 4)
!21 = !DISubrange(count: 256)
!22 = !{i32 7, !"Dwarf Version", i32 4}
!23 = !{i32 2, !"Debug Info Version", i32 3}
!24 = !{i32 1, !"wchar_size", i32 4}
!25 = !{!"clang version 10.0.0 "}
!26 = distinct !DISubprogram(name: "SEED_set_key", scope: !3, file: !3, line: 440, type: !27, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!27 = !DISubroutineType(types: !28)
!28 = !{null, !29, !30}
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "SEED_KEY_SCHEDULE", file: !32, line: 66, baseType: !33)
!32 = !DIFile(filename: "/usr/local/include/openssl/seed.h", directory: "")
!33 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seed_key_st", file: !32, line: 60, size: 1024, elements: !34)
!34 = !{!35}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !33, file: !32, line: 64, baseType: !36, size: 1024)
!36 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1024, elements: !15)
!37 = !DILocalVariable(name: "rawkey", arg: 1, scope: !26, file: !3, line: 440, type: !29)
!38 = !DILocation(line: 440, column: 39, scope: !26)
!39 = !DILocalVariable(name: "ks", arg: 2, scope: !26, file: !3, line: 441, type: !30)
!40 = !DILocation(line: 441, column: 38, scope: !26)
!41 = !DILocalVariable(name: "x1", scope: !26, file: !3, line: 443, type: !6)
!42 = !DILocation(line: 443, column: 15, scope: !26)
!43 = !DILocalVariable(name: "x2", scope: !26, file: !3, line: 443, type: !6)
!44 = !DILocation(line: 443, column: 19, scope: !26)
!45 = !DILocalVariable(name: "x3", scope: !26, file: !3, line: 443, type: !6)
!46 = !DILocation(line: 443, column: 23, scope: !26)
!47 = !DILocalVariable(name: "x4", scope: !26, file: !3, line: 443, type: !6)
!48 = !DILocation(line: 443, column: 27, scope: !26)
!49 = !DILocalVariable(name: "t0", scope: !26, file: !3, line: 444, type: !6)
!50 = !DILocation(line: 444, column: 15, scope: !26)
!51 = !DILocalVariable(name: "t1", scope: !26, file: !3, line: 444, type: !6)
!52 = !DILocation(line: 444, column: 19, scope: !26)
!53 = !DILocation(line: 446, column: 5, scope: !26)
!54 = !DILocation(line: 447, column: 5, scope: !26)
!55 = !DILocation(line: 448, column: 5, scope: !26)
!56 = !DILocation(line: 449, column: 5, scope: !26)
!57 = !DILocation(line: 451, column: 11, scope: !26)
!58 = !DILocation(line: 451, column: 16, scope: !26)
!59 = !DILocation(line: 451, column: 14, scope: !26)
!60 = !DILocation(line: 451, column: 19, scope: !26)
!61 = !DILocation(line: 451, column: 8, scope: !26)
!62 = !DILocation(line: 452, column: 11, scope: !26)
!63 = !DILocation(line: 452, column: 16, scope: !26)
!64 = !DILocation(line: 452, column: 14, scope: !26)
!65 = !DILocation(line: 452, column: 19, scope: !26)
!66 = !DILocation(line: 452, column: 8, scope: !26)
!67 = !DILocation(line: 453, column: 5, scope: !26)
!68 = !DILocation(line: 454, column: 5, scope: !26)
!69 = !DILocation(line: 455, column: 5, scope: !26)
!70 = !DILocation(line: 458, column: 5, scope: !26)
!71 = !DILocation(line: 459, column: 5, scope: !26)
!72 = !DILocation(line: 460, column: 5, scope: !26)
!73 = !DILocation(line: 461, column: 5, scope: !26)
!74 = !DILocation(line: 462, column: 5, scope: !26)
!75 = !DILocation(line: 463, column: 5, scope: !26)
!76 = !DILocation(line: 464, column: 5, scope: !26)
!77 = !DILocation(line: 465, column: 5, scope: !26)
!78 = !DILocation(line: 466, column: 5, scope: !26)
!79 = !DILocation(line: 467, column: 5, scope: !26)
!80 = !DILocation(line: 468, column: 5, scope: !26)
!81 = !DILocation(line: 469, column: 5, scope: !26)
!82 = !DILocation(line: 470, column: 5, scope: !26)
!83 = !DILocation(line: 471, column: 5, scope: !26)
!84 = !DILocation(line: 472, column: 5, scope: !26)
!85 = !DILocation(line: 473, column: 5, scope: !26)
!86 = !DILocation(line: 474, column: 5, scope: !26)
!87 = !DILocation(line: 475, column: 5, scope: !26)
!88 = !DILocation(line: 476, column: 5, scope: !26)
!89 = !DILocation(line: 477, column: 5, scope: !26)
!90 = !DILocation(line: 478, column: 5, scope: !26)
!91 = !DILocation(line: 479, column: 5, scope: !26)
!92 = !DILocation(line: 480, column: 5, scope: !26)
!93 = !DILocation(line: 481, column: 5, scope: !26)
!94 = !DILocation(line: 482, column: 5, scope: !26)
!95 = !DILocation(line: 483, column: 5, scope: !26)
!96 = !DILocation(line: 484, column: 5, scope: !26)
!97 = !DILocation(line: 485, column: 5, scope: !26)
!98 = !DILocation(line: 497, column: 1, scope: !26)
!99 = distinct !DISubprogram(name: "SEED_encrypt", scope: !3, file: !3, line: 499, type: !100, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!100 = !DISubroutineType(types: !101)
!101 = !{null, !29, !102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !31)
!105 = !DILocalVariable(name: "s", arg: 1, scope: !99, file: !3, line: 499, type: !29)
!106 = !DILocation(line: 499, column: 39, scope: !99)
!107 = !DILocalVariable(name: "d", arg: 2, scope: !99, file: !3, line: 500, type: !102)
!108 = !DILocation(line: 500, column: 33, scope: !99)
!109 = !DILocalVariable(name: "ks", arg: 3, scope: !99, file: !3, line: 501, type: !103)
!110 = !DILocation(line: 501, column: 44, scope: !99)
!111 = !DILocalVariable(name: "x1", scope: !99, file: !3, line: 503, type: !6)
!112 = !DILocation(line: 503, column: 15, scope: !99)
!113 = !DILocation(line: 503, column: 5, scope: !99)
!114 = !DILocalVariable(name: "x2", scope: !99, file: !3, line: 503, type: !6)
!115 = !DILocation(line: 503, column: 53, scope: !99)
!116 = !DILocalVariable(name: "x3", scope: !99, file: !3, line: 503, type: !6)
!117 = !DILocation(line: 503, column: 91, scope: !99)
!118 = !DILocalVariable(name: "x4", scope: !99, file: !3, line: 503, type: !6)
!119 = !DILocation(line: 503, column: 129, scope: !99)
!120 = !DILocalVariable(name: "t0", scope: !99, file: !3, line: 504, type: !6)
!121 = !DILocation(line: 504, column: 15, scope: !99)
!122 = !DILocalVariable(name: "t1", scope: !99, file: !3, line: 504, type: !6)
!123 = !DILocation(line: 504, column: 19, scope: !99)
!124 = !DILocation(line: 506, column: 5, scope: !99)
!125 = !DILocation(line: 507, column: 5, scope: !99)
!126 = !DILocation(line: 508, column: 5, scope: !99)
!127 = !DILocation(line: 509, column: 5, scope: !99)
!128 = !DILocation(line: 512, column: 5, scope: !99)
!129 = !DILocation(line: 513, column: 5, scope: !99)
!130 = !DILocation(line: 514, column: 5, scope: !99)
!131 = !DILocation(line: 515, column: 5, scope: !99)
!132 = !DILocation(line: 516, column: 5, scope: !99)
!133 = !DILocation(line: 517, column: 5, scope: !99)
!134 = !DILocation(line: 518, column: 5, scope: !99)
!135 = !DILocation(line: 519, column: 5, scope: !99)
!136 = !DILocation(line: 520, column: 5, scope: !99)
!137 = !DILocation(line: 521, column: 5, scope: !99)
!138 = !DILocation(line: 522, column: 5, scope: !99)
!139 = !DILocation(line: 523, column: 5, scope: !99)
!140 = !DILocation(line: 524, column: 5, scope: !99)
!141 = !DILocation(line: 525, column: 5, scope: !99)
!142 = !DILocation(line: 526, column: 5, scope: !99)
!143 = !DILocation(line: 527, column: 5, scope: !99)
!144 = !DILocation(line: 538, column: 5, scope: !99)
!145 = !DILocation(line: 539, column: 5, scope: !99)
!146 = !DILocation(line: 540, column: 5, scope: !99)
!147 = !DILocation(line: 541, column: 5, scope: !99)
!148 = !DILocation(line: 542, column: 1, scope: !99)
!149 = distinct !DISubprogram(name: "SEED_decrypt", scope: !3, file: !3, line: 544, type: !100, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!150 = !DILocalVariable(name: "s", arg: 1, scope: !149, file: !3, line: 544, type: !29)
!151 = !DILocation(line: 544, column: 39, scope: !149)
!152 = !DILocalVariable(name: "d", arg: 2, scope: !149, file: !3, line: 545, type: !102)
!153 = !DILocation(line: 545, column: 33, scope: !149)
!154 = !DILocalVariable(name: "ks", arg: 3, scope: !149, file: !3, line: 546, type: !103)
!155 = !DILocation(line: 546, column: 44, scope: !149)
!156 = !DILocalVariable(name: "x1", scope: !149, file: !3, line: 548, type: !6)
!157 = !DILocation(line: 548, column: 15, scope: !149)
!158 = !DILocalVariable(name: "x2", scope: !149, file: !3, line: 548, type: !6)
!159 = !DILocation(line: 548, column: 19, scope: !149)
!160 = !DILocalVariable(name: "x3", scope: !149, file: !3, line: 548, type: !6)
!161 = !DILocation(line: 548, column: 23, scope: !149)
!162 = !DILocalVariable(name: "x4", scope: !149, file: !3, line: 548, type: !6)
!163 = !DILocation(line: 548, column: 27, scope: !149)
!164 = !DILocalVariable(name: "t0", scope: !149, file: !3, line: 549, type: !6)
!165 = !DILocation(line: 549, column: 15, scope: !149)
!166 = !DILocalVariable(name: "t1", scope: !149, file: !3, line: 549, type: !6)
!167 = !DILocation(line: 549, column: 19, scope: !149)
!168 = !DILocation(line: 551, column: 5, scope: !149)
!169 = !DILocation(line: 552, column: 5, scope: !149)
!170 = !DILocation(line: 553, column: 5, scope: !149)
!171 = !DILocation(line: 554, column: 5, scope: !149)
!172 = !DILocation(line: 557, column: 5, scope: !149)
!173 = !DILocation(line: 558, column: 5, scope: !149)
!174 = !DILocation(line: 559, column: 5, scope: !149)
!175 = !DILocation(line: 560, column: 5, scope: !149)
!176 = !DILocation(line: 561, column: 5, scope: !149)
!177 = !DILocation(line: 562, column: 5, scope: !149)
!178 = !DILocation(line: 563, column: 5, scope: !149)
!179 = !DILocation(line: 564, column: 5, scope: !149)
!180 = !DILocation(line: 565, column: 5, scope: !149)
!181 = !DILocation(line: 566, column: 5, scope: !149)
!182 = !DILocation(line: 567, column: 5, scope: !149)
!183 = !DILocation(line: 568, column: 5, scope: !149)
!184 = !DILocation(line: 569, column: 5, scope: !149)
!185 = !DILocation(line: 570, column: 5, scope: !149)
!186 = !DILocation(line: 571, column: 5, scope: !149)
!187 = !DILocation(line: 572, column: 5, scope: !149)
!188 = !DILocation(line: 584, column: 5, scope: !149)
!189 = !DILocation(line: 585, column: 5, scope: !149)
!190 = !DILocation(line: 586, column: 5, scope: !149)
!191 = !DILocation(line: 587, column: 5, scope: !149)
!192 = !DILocation(line: 588, column: 1, scope: !149)
!193 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 599, type: !194, scopeLine: 600, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!194 = !DISubroutineType(types: !195)
!195 = !{!196}
!196 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!197 = !DILocation(line: 499, column: 39, scope: !99, inlinedAt: !198)
!198 = distinct !DILocation(line: 626, column: 7, scope: !199)
!199 = distinct !DILexicalBlock(scope: !193, file: !3, line: 623, column: 17)
!200 = !DILocation(line: 500, column: 33, scope: !99, inlinedAt: !198)
!201 = !DILocation(line: 501, column: 44, scope: !99, inlinedAt: !198)
!202 = !DILocation(line: 503, column: 15, scope: !99, inlinedAt: !198)
!203 = !DILocation(line: 503, column: 53, scope: !99, inlinedAt: !198)
!204 = !DILocation(line: 503, column: 91, scope: !99, inlinedAt: !198)
!205 = !DILocation(line: 503, column: 129, scope: !99, inlinedAt: !198)
!206 = !DILocation(line: 504, column: 15, scope: !99, inlinedAt: !198)
!207 = !DILocation(line: 504, column: 19, scope: !99, inlinedAt: !198)
!208 = !DILocation(line: 440, column: 39, scope: !26, inlinedAt: !209)
!209 = distinct !DILocation(line: 605, column: 5, scope: !193)
!210 = !DILocation(line: 441, column: 38, scope: !26, inlinedAt: !209)
!211 = !DILocation(line: 443, column: 15, scope: !26, inlinedAt: !209)
!212 = !DILocation(line: 443, column: 19, scope: !26, inlinedAt: !209)
!213 = !DILocation(line: 443, column: 23, scope: !26, inlinedAt: !209)
!214 = !DILocation(line: 443, column: 27, scope: !26, inlinedAt: !209)
!215 = !DILocation(line: 444, column: 15, scope: !26, inlinedAt: !209)
!216 = !DILocation(line: 444, column: 19, scope: !26, inlinedAt: !209)
!217 = !DILocalVariable(name: "d", scope: !193, file: !3, line: 603, type: !218)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 96, elements: !219)
!219 = !{!220}
!220 = !DISubrange(count: 12)
!221 = !DILocation(line: 603, column: 19, scope: !193)
!222 = !DILocalVariable(name: "ks", scope: !193, file: !3, line: 604, type: !223)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 32768, elements: !15)
!224 = !DILocation(line: 604, column: 23, scope: !193)
!225 = !DILocation(line: 605, column: 23, scope: !193)
!226 = !DILocation(line: 446, column: 5, scope: !26, inlinedAt: !209)
!227 = !DILocation(line: 447, column: 5, scope: !26, inlinedAt: !209)
!228 = !DILocation(line: 448, column: 5, scope: !26, inlinedAt: !209)
!229 = !DILocation(line: 449, column: 5, scope: !26, inlinedAt: !209)
!230 = !DILocation(line: 451, column: 11, scope: !26, inlinedAt: !209)
!231 = !DILocation(line: 451, column: 16, scope: !26, inlinedAt: !209)
!232 = !DILocation(line: 451, column: 14, scope: !26, inlinedAt: !209)
!233 = !DILocation(line: 451, column: 19, scope: !26, inlinedAt: !209)
!234 = !DILocation(line: 451, column: 8, scope: !26, inlinedAt: !209)
!235 = !DILocation(line: 452, column: 11, scope: !26, inlinedAt: !209)
!236 = !DILocation(line: 452, column: 16, scope: !26, inlinedAt: !209)
!237 = !DILocation(line: 452, column: 14, scope: !26, inlinedAt: !209)
!238 = !DILocation(line: 452, column: 19, scope: !26, inlinedAt: !209)
!239 = !DILocation(line: 452, column: 8, scope: !26, inlinedAt: !209)
!240 = !DILocation(line: 453, column: 5, scope: !26, inlinedAt: !209)
!241 = !DILocation(line: 454, column: 5, scope: !26, inlinedAt: !209)
!242 = !DILocation(line: 455, column: 5, scope: !26, inlinedAt: !209)
!243 = !DILocation(line: 458, column: 5, scope: !26, inlinedAt: !209)
!244 = !DILocation(line: 459, column: 5, scope: !26, inlinedAt: !209)
!245 = !DILocation(line: 460, column: 5, scope: !26, inlinedAt: !209)
!246 = !DILocation(line: 461, column: 5, scope: !26, inlinedAt: !209)
!247 = !DILocation(line: 462, column: 5, scope: !26, inlinedAt: !209)
!248 = !DILocation(line: 463, column: 5, scope: !26, inlinedAt: !209)
!249 = !DILocation(line: 464, column: 5, scope: !26, inlinedAt: !209)
!250 = !DILocation(line: 465, column: 5, scope: !26, inlinedAt: !209)
!251 = !DILocation(line: 466, column: 5, scope: !26, inlinedAt: !209)
!252 = !DILocation(line: 467, column: 5, scope: !26, inlinedAt: !209)
!253 = !DILocation(line: 468, column: 5, scope: !26, inlinedAt: !209)
!254 = !DILocation(line: 469, column: 5, scope: !26, inlinedAt: !209)
!255 = !DILocation(line: 470, column: 5, scope: !26, inlinedAt: !209)
!256 = !DILocation(line: 471, column: 5, scope: !26, inlinedAt: !209)
!257 = !DILocation(line: 472, column: 5, scope: !26, inlinedAt: !209)
!258 = !DILocation(line: 473, column: 5, scope: !26, inlinedAt: !209)
!259 = !DILocation(line: 474, column: 5, scope: !26, inlinedAt: !209)
!260 = !DILocation(line: 475, column: 5, scope: !26, inlinedAt: !209)
!261 = !DILocation(line: 476, column: 5, scope: !26, inlinedAt: !209)
!262 = !DILocation(line: 477, column: 5, scope: !26, inlinedAt: !209)
!263 = !DILocation(line: 478, column: 5, scope: !26, inlinedAt: !209)
!264 = !DILocation(line: 479, column: 5, scope: !26, inlinedAt: !209)
!265 = !DILocation(line: 480, column: 5, scope: !26, inlinedAt: !209)
!266 = !DILocation(line: 481, column: 5, scope: !26, inlinedAt: !209)
!267 = !DILocation(line: 482, column: 5, scope: !26, inlinedAt: !209)
!268 = !DILocation(line: 483, column: 5, scope: !26, inlinedAt: !209)
!269 = !DILocation(line: 484, column: 5, scope: !26, inlinedAt: !209)
!270 = !DILocation(line: 485, column: 5, scope: !26, inlinedAt: !209)
!271 = !DILocalVariable(name: "charset", scope: !193, file: !3, line: 607, type: !272)
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 752, elements: !275)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!274 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!275 = !{!276}
!276 = !DISubrange(count: 94)
!277 = !DILocation(line: 607, column: 16, scope: !193)
!278 = !DILocalVariable(name: "length", scope: !193, file: !3, line: 608, type: !279)
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !280, line: 46, baseType: !281)
!280 = !DIFile(filename: "Tools/LLVM/llvm-10.0.0/build/lib/clang/10.0.0/include/stddef.h", directory: "/home/phil")
!281 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!282 = !DILocation(line: 608, column: 12, scope: !193)
!283 = !DILocalVariable(name: "size", scope: !193, file: !3, line: 609, type: !196)
!284 = !DILocation(line: 609, column: 9, scope: !193)
!285 = !DILocalVariable(name: "round", scope: !193, file: !3, line: 610, type: !279)
!286 = !DILocation(line: 610, column: 12, scope: !193)
!287 = !DILocalVariable(name: "i", scope: !193, file: !3, line: 611, type: !196)
!288 = !DILocation(line: 611, column: 9, scope: !193)
!289 = !DILocalVariable(name: "buff", scope: !193, file: !3, line: 612, type: !290)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!291 = !DILocation(line: 612, column: 11, scope: !193)
!292 = !DILocation(line: 612, column: 18, scope: !193)
!293 = !DILocation(line: 613, column: 12, scope: !294)
!294 = distinct !DILexicalBlock(scope: !193, file: !3, line: 613, column: 5)
!295 = !DILocation(line: 613, column: 10, scope: !294)
!296 = !DILocation(line: 613, column: 17, scope: !297)
!297 = distinct !DILexicalBlock(scope: !294, file: !3, line: 613, column: 5)
!298 = !DILocation(line: 613, column: 19, scope: !297)
!299 = !DILocation(line: 613, column: 5, scope: !294)
!300 = !DILocalVariable(name: "key", scope: !301, file: !3, line: 614, type: !196)
!301 = distinct !DILexicalBlock(scope: !297, file: !3, line: 613, column: 35)
!302 = !DILocation(line: 614, column: 11, scope: !301)
!303 = !DILocation(line: 614, column: 17, scope: !301)
!304 = !DILocation(line: 614, column: 26, scope: !301)
!305 = !DILocation(line: 614, column: 24, scope: !301)
!306 = !DILocation(line: 615, column: 25, scope: !301)
!307 = !DILocation(line: 615, column: 17, scope: !301)
!308 = !DILocation(line: 615, column: 7, scope: !301)
!309 = !DILocation(line: 615, column: 12, scope: !301)
!310 = !DILocation(line: 615, column: 15, scope: !301)
!311 = !DILocation(line: 616, column: 5, scope: !301)
!312 = !DILocation(line: 613, column: 28, scope: !297)
!313 = !DILocation(line: 613, column: 5, scope: !297)
!314 = distinct !{!314, !299, !315}
!315 = !DILocation(line: 616, column: 5, scope: !294)
!316 = !DILocalVariable(name: "input", scope: !193, file: !3, line: 618, type: !290)
!317 = !DILocation(line: 618, column: 11, scope: !193)
!318 = !DILocation(line: 618, column: 41, scope: !193)
!319 = !DILocation(line: 618, column: 39, scope: !193)
!320 = !DILocation(line: 618, column: 48, scope: !193)
!321 = !DILocation(line: 618, column: 46, scope: !193)
!322 = !DILocation(line: 618, column: 19, scope: !193)
!323 = !DILocalVariable(name: "n", scope: !324, file: !3, line: 619, type: !279)
!324 = distinct !DILexicalBlock(scope: !193, file: !3, line: 619, column: 5)
!325 = !DILocation(line: 619, column: 17, scope: !324)
!326 = !DILocation(line: 619, column: 10, scope: !324)
!327 = !DILocation(line: 619, column: 24, scope: !328)
!328 = distinct !DILexicalBlock(scope: !324, file: !3, line: 619, column: 5)
!329 = !DILocation(line: 619, column: 28, scope: !328)
!330 = !DILocation(line: 619, column: 37, scope: !328)
!331 = !DILocation(line: 619, column: 35, scope: !328)
!332 = !DILocation(line: 619, column: 26, scope: !328)
!333 = !DILocation(line: 619, column: 5, scope: !324)
!334 = !DILocalVariable(name: "key", scope: !335, file: !3, line: 620, type: !196)
!335 = distinct !DILexicalBlock(scope: !328, file: !3, line: 619, column: 49)
!336 = !DILocation(line: 620, column: 13, scope: !335)
!337 = !DILocation(line: 620, column: 19, scope: !335)
!338 = !DILocation(line: 620, column: 26, scope: !335)
!339 = !DILocation(line: 621, column: 28, scope: !335)
!340 = !DILocation(line: 621, column: 20, scope: !335)
!341 = !DILocation(line: 621, column: 9, scope: !335)
!342 = !DILocation(line: 621, column: 15, scope: !335)
!343 = !DILocation(line: 621, column: 18, scope: !335)
!344 = !DILocation(line: 622, column: 5, scope: !335)
!345 = !DILocation(line: 619, column: 45, scope: !328)
!346 = !DILocation(line: 619, column: 5, scope: !328)
!347 = distinct !{!347, !333, !348}
!348 = !DILocation(line: 622, column: 5, scope: !324)
!349 = !DILocation(line: 623, column: 5, scope: !193)
!350 = !DILocation(line: 623, column: 11, scope: !193)
!351 = !DILocalVariable(name: "in", scope: !199, file: !3, line: 624, type: !290)
!352 = !DILocation(line: 624, column: 13, scope: !199)
!353 = !DILocation(line: 624, column: 25, scope: !199)
!354 = !DILocation(line: 624, column: 18, scope: !199)
!355 = !DILocation(line: 625, column: 15, scope: !199)
!356 = !DILocation(line: 625, column: 19, scope: !199)
!357 = !DILocation(line: 625, column: 26, scope: !199)
!358 = !DILocation(line: 625, column: 31, scope: !199)
!359 = !DILocation(line: 625, column: 35, scope: !199)
!360 = !DILocation(line: 625, column: 34, scope: !199)
!361 = !DILocation(line: 625, column: 24, scope: !199)
!362 = !DILocation(line: 625, column: 41, scope: !199)
!363 = !DILocation(line: 625, column: 7, scope: !199)
!364 = !DILocation(line: 626, column: 20, scope: !199)
!365 = !DILocation(line: 626, column: 24, scope: !199)
!366 = !DILocation(line: 626, column: 27, scope: !199)
!367 = !DILocation(line: 503, column: 5, scope: !99, inlinedAt: !198)
!368 = !DILocation(line: 506, column: 5, scope: !99, inlinedAt: !198)
!369 = !DILocation(line: 507, column: 5, scope: !99, inlinedAt: !198)
!370 = !DILocation(line: 508, column: 5, scope: !99, inlinedAt: !198)
!371 = !DILocation(line: 509, column: 5, scope: !99, inlinedAt: !198)
!372 = !DILocation(line: 512, column: 5, scope: !99, inlinedAt: !198)
!373 = !DILocation(line: 513, column: 5, scope: !99, inlinedAt: !198)
!374 = !DILocation(line: 514, column: 5, scope: !99, inlinedAt: !198)
!375 = !DILocation(line: 515, column: 5, scope: !99, inlinedAt: !198)
!376 = !DILocation(line: 516, column: 5, scope: !99, inlinedAt: !198)
!377 = !DILocation(line: 517, column: 5, scope: !99, inlinedAt: !198)
!378 = !DILocation(line: 518, column: 5, scope: !99, inlinedAt: !198)
!379 = !DILocation(line: 519, column: 5, scope: !99, inlinedAt: !198)
!380 = !DILocation(line: 520, column: 5, scope: !99, inlinedAt: !198)
!381 = !DILocation(line: 521, column: 5, scope: !99, inlinedAt: !198)
!382 = !DILocation(line: 522, column: 5, scope: !99, inlinedAt: !198)
!383 = !DILocation(line: 523, column: 5, scope: !99, inlinedAt: !198)
!384 = !DILocation(line: 524, column: 5, scope: !99, inlinedAt: !198)
!385 = !DILocation(line: 525, column: 5, scope: !99, inlinedAt: !198)
!386 = !DILocation(line: 526, column: 5, scope: !99, inlinedAt: !198)
!387 = !DILocation(line: 527, column: 5, scope: !99, inlinedAt: !198)
!388 = !DILocation(line: 538, column: 5, scope: !99, inlinedAt: !198)
!389 = !DILocation(line: 539, column: 5, scope: !99, inlinedAt: !198)
!390 = !DILocation(line: 540, column: 5, scope: !99, inlinedAt: !198)
!391 = !DILocation(line: 541, column: 5, scope: !99, inlinedAt: !198)
!392 = !DILocation(line: 627, column: 12, scope: !199)
!393 = !DILocation(line: 627, column: 7, scope: !199)
!394 = !DILocation(line: 628, column: 12, scope: !199)
!395 = distinct !{!395, !349, !396}
!396 = !DILocation(line: 629, column: 5, scope: !193)
!397 = !DILocation(line: 630, column: 1, scope: !193)
